package BufferTests

import Buffer
import LinkedList

class SerializableElement implements BufferSerializable
	int id
	int value
	
	construct()

	construct(Buffer buffer)
		deserialize(buffer)

	override function serialize(Buffer buffer)
		buffer.writeInt(id)
		buffer.writeInt(value)

	override function deserialize(Buffer buffer)
		id = buffer.readInt()
		value = buffer.readInt()

class TestSerializable implements BufferSerializable
	var name = "SomeName"
	var id = 0
	var facing = 3.14
	var elements = new LinkedList<SerializableElement>

	construct()

	construct(Buffer buffer)
		deserialize(buffer)
	
	override function serialize(Buffer buffer)
		buffer.writeString(name)
		buffer.writeInt(id)
		buffer.writeReal(facing)
		buffer.writeInt(elements.size())

		for element in elements
			buffer.write(element)

	override function deserialize(Buffer buffer)
		name = buffer.readString()
		id = buffer.readInt()
		facing = buffer.readReal()
		let size = buffer.readInt()

		for i = 0 to size - 1
			elements.add(new SerializableElement(buffer))

@test
function hashBufferTestSerialization()
	let buffer = new HashBuffer()

	buffer.writeInt(1)
	buffer.writeReal(3.14)
	buffer.writeBoolean(true)
	buffer.writeString("abc")

	buffer.readInt().assertEquals(1)
	buffer.readReal().assertEquals(3.14)
	buffer.readBoolean().assertEquals(true)
	buffer.readString().assertEquals("abc")

	