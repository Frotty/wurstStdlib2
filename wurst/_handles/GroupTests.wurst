package GroupTests

@Test
function testGroupBasic()
	let g = CreateGroup()
	assertTrue(g != null)
	assertTrue(g.isEmpty())

	let u = createUnit(Player(0), 'hfoo', vec2(0, 0), 0 .fromDeg())
	assertTrue(u != null)
	g.addUnit(u)

	assertTrue(g.size() == 1)
	for i = 1 to 10
		g.addUnit(createUnit(Player(0), 'hfoo', vec2(0, 0), 0 .fromDeg()))

	assertTrue(g.size() == 11)

	g.clear()
	assertTrue(g.isEmpty())

@Test
function testGroupForLoops()
	let g = CreateGroup()
	assertTrue(g != null)
	assertTrue(not g.hasNext())
	for i = 0 to 10
		g.addUnit(createUnit(Player(0), 'hfoo', vec2(0, 0), 0 .fromDeg()))

	assertTrue(g.hasNext())
	
	for u in g
		assertTrue(u != null)
		
	for _ from g

	assertTrue(not g.hasNext())

