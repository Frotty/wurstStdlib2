package ObjectIds
import NoWurst
import ErrorHandling
import Wurstunit

constant CHARMAP = ".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."

/** Convert a integer id value into a 4-letter id code. */
public function int2fourchar(int value) returns string
	var result = ""
	var remainingValue = value

	for int byteno = 0 to 3
		let charValue = remainingValue mod 256
		remainingValue = remainingValue div 256
		result = CHARMAP.charAt(charValue) + result

	return result

/** converts a 4-letter id code to an integer */
public function fourchar2int(string value) returns int
	var result = 0
	if value.length() != 4
		error("Fourchar value must be 4 chars long")
	else
		var factor = 1
		for i = 0 to 3
			let pos = CHARMAP.indexOf(value.charAt(3-i))
			result += factor*pos
			factor *= 256
	
	return result	
	
public function string.fourchar2int() returns int
	return fourchar2int(this)
	
public function int.int2fourchar() returns string
	return int2fourchar(this)

@test function test_idString2IdInteger()
	fourchar2int("hfoo") .assertEquals('hfoo')
	fourchar2int("abcd") .assertEquals('abcd')
	fourchar2int("ABCD") .assertEquals('ABCD')
	
@test function test_idInteger2IdString()
	int2fourchar('hfoo') .assertEquals("hfoo")
	int2fourchar('abcd') .assertEquals("abcd")
	int2fourchar('ABCD') .assertEquals("ABCD")
