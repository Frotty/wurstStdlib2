globals
group w=null
force u=null
player array r
player s=null
integer t=0
hashtable i=null
integer S=0
hashtable c=null
integer o=0
integer O=0
timer array l
integer b=0
integer y=0
real p=0.
real e=0.
real q=0.
real a=0.
rect n=null
region d=null
string f=null
trigger R=null
integer T=0
integer Y=0
location G=null
group array g
group h=null
boolean array F
string array k
integer array j
integer x=0
string array v
string array m
string array Q
effect array W
effect array E
effect array Z
effect array U
effect array I
effect array P
effect array A
effect array D
effect array H
effect array J
effect array K
effect array L
integer array X
integer array C
integer V=0
integer array B
integer N=0
string array M
boolean ww=false
weathereffect uw=null
rect rw=null
weathereffect array sw
weathereffect array tw
weathereffect array iw
weathereffect array Sw
weathereffect array cw
weathereffect array ow
weathereffect array Ow
weathereffect array lw
weathereffect array bw
weathereffect array yw
weathereffect array pw
weathereffect array ew
integer array qw
integer array aw
string array nw
integer dw=0
integer fw=0
integer array Rw
integer array Tw
integer Yw=0
real array Gw
boolean gw=false
destructable array hw
destructable array Fw
destructable array kw
timerdialog jw=null
timer xw=null
real array vw
boolean array mw
string array Qw
integer array Ww
effect array Ew
effect array Zw
effect array Uw
effect array Iw
effect array Pw
effect array Aw
effect array Dw
effect array Hw
effect array Jw
effect array Kw
effect array Lw
effect array Xw
string Cw=null
boolean Vw=false
integer array Bw
location array Nw
unit Mw=null
real array wu
location uu=null
real array ru
real array su
real tu=0.
unit array iu
real array Su
string array cu
string ou=null
string array Ou
string lu=null
boolean array bu
boolean yu=false
real array pu
real eu=0.
real qu=0.
group au=null
real array nu
real array du
boolean fu=false
unit array Ru
unit array Tu
boolean Yu=false
real Gu=0.
real gu=0.
real hu=0.
real Fu=0.
integer ku=0
integer ju=0
real xu=0.
real vu=0.
real mu=0.
real Qu=0.
real Wu=0.
real Eu=0.
real Zu=0.
real Uu=0.
real Iu=0.
real Pu=0.
hashtable Au=null
integer Du=0
group Hu=null
location array Ju
group Ku=null
group Lu=null
force Xu=null
integer Cu=0
integer Vu=0
integer Bu=0
unit Nu=null
integer Mu=0
integer wr=0
integer ur=0
integer rr=0
integer sr=0
real tr=0.
real ir=0.
boolean Sr=false
group array cr
group array lr
integer br=0
real yr=0.
unit pr=null
real er=0.
real qr=0.
real ar=0.
hashtable nr=null
group dr=null
group fr=null
group Rr=null
sound Tr=null
group Yr=null
unit array Gr
location array gr
group hr=null
unit array Fr
integer array kr
location array jr
unit xr=null
real array vr
location mr=null
real array Qr
real array Wr
real Er=0.
unit array Zr
real array Ur
string array Ir
string Pr=null
string array Ar
string Dr=null
boolean array Hr
boolean Jr=false
real array Kr
real Lr=0.
real Xr=0.
group Cr=null
real array Vr
real array Br
integer array Nr
integer Mr=0
group ws=null
group us=null
group rs=null
unit array ss
integer ts=0
boolean array is
real array Ss
group cs=null
group os=null
unit Os=null
boolean array ls
integer array bs
group ys=null
group ps=null
group es=null
group qs=null
group as=null
group ns=null
real array ds
string array fs
real array Rs
string array Ts
group Ys=null
real array Gs
integer array gs
real array hs
real array Fs
real array ks
real array js
location array xs
boolean array vs
unit array ms
string Qs=null
real Ws=0.
boolean Es=false
real Zs=0.
string Us=null
real Is=0.
location Ps=null
unit As=null
integer Ds=0
integer array Hs
unit Js=null
unit array Ks
group Ls=null
group Xs=null
integer Cs=0
integer array Vs
group Bs=null
integer array Ns
string array Ms
integer wt=0
unit array ut
unit array rt
group st=null
group tt=null
group St=null
group ct=null
group ot=null
group Ot=null
group lt=null
group bt=null
group yt=null
group pt=null
boolean array et
boolean array qt
real array at
integer array nt
boolean array dt
integer array ft
boolean array Rt
group array Tt
group Yt=null
real array Gt
integer gt=0
unit ht=null
group Ft=null
group kt=null
group jt=null
gamecache xt=null
integer array vt
integer mt=0
integer array Qt
location array Wt
location array Et
boolean array Zt
leaderboard Ut=null
rect It=null
sound Pt=null
sound At=null
sound Dt=null
sound Ht=null
trigger Jt=null
trigger Kt=null
trigger Lt=null
trigger Xt=null
trigger Ct=null
trigger Vt=null
trigger Bt=null
trigger Nt=null
trigger Mt=null
trigger wi=null
trigger ui=null
trigger ri=null
trigger si=null
trigger ti=null
trigger ii=null
trigger Si=null
trigger ci=null
trigger oi=null
trigger Oi=null
trigger li=null
trigger bi=null
trigger yi=null
trigger pi=null
trigger ei=null
trigger qi=null
trigger ai=null
trigger ni=null
trigger di=null
trigger fi=null
trigger Ri=null
trigger Ti=null
trigger Yi=null
trigger Gi=null
trigger gi=null
trigger hi=null
trigger Fi=null
trigger ki=null
trigger ji=null
trigger xi=null
trigger vi=null
trigger mi=null
trigger Qi=null
trigger Wi=null
trigger Ei=null
trigger Zi=null
trigger Ui=null
trigger Ii=null
trigger Pi=null
trigger Ai=null
trigger Di=null
trigger Hi=null
trigger Ji=null
trigger Ki=null
trigger Li=null
trigger Xi=null
trigger Ci=null
trigger Vi=null
trigger Bi=null
trigger Ni=null
trigger Mi=null
trigger wS=null
trigger uS=null
trigger rS=null
trigger sS=null
trigger tS=null
trigger iS=null
trigger SS=null
trigger cS=null
trigger oS=null
trigger OS=null
trigger lS=null
trigger bS=null
trigger yS=null
trigger pS=null
trigger eS=null
trigger qS=null
trigger aS=null
trigger nS=null
trigger dS=null
trigger fS=null
trigger RS=null
trigger TS=null
trigger YS=null
trigger GS=null
trigger gS=null
trigger hS=null
trigger FS=null
trigger kS=null
trigger jS=null
trigger xS=null
trigger vS=null
trigger mS=null
trigger QS=null
trigger WS=null
trigger ES=null
trigger ZS=null
trigger US=null
trigger IS=null
trigger PS=null
trigger AS=null
trigger DS=null
trigger HS=null
trigger JS=null
trigger KS=null
trigger LS=null
trigger XS=null
trigger CS=null
trigger VS=null
trigger BS=null
trigger NS=null
trigger MS=null
trigger wc=null
trigger uc=null
trigger rc=null
trigger sc=null
trigger tc=null
trigger ic=null
trigger Sc=null
trigger cc=null
trigger oc=null
trigger Oc=null
trigger lc=null
trigger bc=null
trigger yc=null
trigger pc=null
trigger ec=null
trigger qc=null
trigger ac=null
trigger nc=null
trigger dc=null
trigger fc=null
trigger Rc=null
trigger Tc=null
trigger Yc=null
trigger Gc=null
trigger gc=null
trigger hc=null
trigger Fc=null
trigger kc=null
trigger jc=null
trigger xc=null
trigger vc=null
trigger mc=null
trigger Qc=null
trigger Wc=null
trigger Ec=null
trigger Zc=null
trigger Uc=null
trigger Ic=null
trigger Pc=null
trigger Ac=null
trigger Dc=null
trigger Hc=null
trigger Jc=null
trigger Kc=null
trigger Lc=null
trigger Xc=null
trigger Cc=null
trigger Vc=null
trigger Bc=null
trigger Nc=null
trigger Mc=null
trigger wo=null
trigger uo=null
trigger ro=null
trigger so=null
trigger io=null
trigger So=null
trigger co=null
trigger oo=null
trigger Oo=null
trigger lo=null
trigger bo=null
trigger yo=null
trigger po=null
trigger eo=null
trigger qo=null
trigger ao=null
trigger no=null
trigger do=null
trigger fo=null
trigger Ro=null
trigger To=null
trigger Yo=null
trigger Go=null
trigger go=null
trigger ho=null
trigger Fo=null
trigger ko=null
trigger jo=null
trigger xo=null
trigger vo=null
trigger mo=null
trigger Qo=null
trigger Wo=null
trigger Eo=null
trigger Zo=null
trigger Uo=null
trigger Io=null
trigger Po=null
trigger Ao=null
trigger Do=null
trigger Ho=null
trigger Jo=null
trigger Ko=null
trigger Lo=null
trigger Xo=null
trigger Co=null
trigger Vo=null
trigger Bo=null
trigger No=null
trigger Mo=null
trigger wO=null
trigger uO=null
trigger rO=null
trigger sO=null
trigger tO=null
trigger iO=null
trigger SO=null
trigger cO=null
trigger oO=null
trigger OO=null
trigger lO=null
trigger bO=null
trigger yO=null
trigger pO=null
trigger eO=null
trigger qO=null
trigger aO=null
trigger nO=null
trigger dO=null
unit fO=null
unit RO=null
unit TO=null
unit YO=null
integer GO=0
integer gO=0
integer hO=0
integer FO=0
integer kO=0
integer jO=0
integer xO=0
integer vO=0
integer mO=0
integer QO=0
integer WO=0
integer EO=0
integer ZO=0
integer UO=0
integer IO=0
integer PO=0
integer AO=0
integer DO=0
integer HO=0
integer JO=0
integer KO=0
integer LO=0
integer XO=0
integer CO=0
integer VO=0
integer BO=0
integer NO=0
integer MO=0
real wl=0.
integer ul=0
integer rl=0
integer sl=0
integer tl=0
integer il=0
integer Sl=0
integer cl=0
integer ol=0
integer Ol=0
integer ll=0
integer bl=0
integer yl=0
real pl=0.
integer el=0
group ql=null
integer al=0
integer nl=0
group dl=null
unit fl=null
player Rl=null
real Tl=0.
integer Yl=0
integer Gl=0
integer gl=0
integer array hl
integer array Fl
real array kl
real array jl
boolean array xl
integer vl=0
player array ml
integer array Ql
integer array Wl
integer array El
integer Zl=0
player Ul=null
integer Il=0
playercolor array Pl
integer array Al
integer array Dl
integer Hl=0
integer Jl=0
integer array Kl
integer array Ll
integer Xl=0
integer array Cl
integer array Vl
integer array Bl
unit array Nl
integer Ml=0
integer array wb
integer array ub
integer array rb
integer array sb
integer array tb
integer array ib
integer array Sb
integer cb=0
integer array ob
integer Ob=0
integer lb=0
integer array bb
integer yb=0
integer array pb
integer array eb
integer array qb
string array ab
boolean array nb
boolean array db
rect array fb
real array Rb
real array Tb
real array Yb
real array Gb
integer gb=0
integer array hb
integer Fb=0
integer kb=0
integer array jb
integer array xb
trigger array vb
trigger array mb
integer array Qb
real array Wb
real array Eb
unit array Zb
integer array Ub
integer Ib=0
integer array Pb
unit array Ab
unit array Db
unit array Hb
trigger array Jb
integer array Kb
trigger array Lb
trigger Xb=null
trigger Cb=null
trigger Vb=null
trigger Bb=null
trigger Nb=null
trigger Mb=null
trigger array wy
integer uy=0
unit ry=null
integer sy=0
integer ty=0
integer iy=0
integer Sy=0
integer cy=0
integer oy=0
integer Oy=0
real ly=0.
real by=0.
integer yy=0
integer py=0
integer ey=0
integer qy=0
string array ay
integer array ny
real dy=0.
integer fy=0
integer Ry=0
player Ty=null
integer Yy=0
integer Gy=0
integer array gy
integer array hy
integer array Fy
integer array ky
integer array jy
integer array xy
integer vy=0
integer my=0
integer Qy=0
integer Wy=0
integer Ey=0
integer Zy=0
integer Uy=0
integer Iy=0
integer Py=0
real Ay=0.
real Dy=0.
integer Hy=0
string Jy=null
playerevent Ky=null
trigger Ly=null
trigger Xy=null
trigger Cy=null
integer array Vy
integer By=0
integer Ny=0
integer My=0
integer array wp
integer array up
boolean rp=false
group sp=null
integer array tp
integer ip=0
integer Sp=0
integer cp=0
filterfunc op=null
integer array Op
integer lp=0
rect bp=null
destructable yp=null
real pp=0.
real ep=0.
real qp=0.
trigger ap=null
integer np=0
integer dp=0
integer fp=0
integer Rp=0
integer Tp=0
integer Yp=0
integer Gp=0
integer gp=0
integer hp=0
integer Fp=0
integer kp=0
integer jp=0
integer xp=0
integer vp=0
string mp=null
integer Qp=0
integer array Wp
integer array Ep
integer array Zp
string array Up
string array Ip
integer Pp=0
integer Ap=0
integer Dp=0
integer Hp=0
real Jp=0.
integer Kp=0
timer Lp=null
integer Xp=0
integer array Cp
integer Vp=0
integer Bp=0
integer Np=0
integer Mp=0
integer we=0
integer ue=0
hashtable re=null
string se=null
boolean te=false
force ie=null
boolean array Se
integer array ce
integer oe=0
integer array Oe
string le=null
framehandle be=null
real ye=0.
real pe=0.
timer ee=null
real qe=0.
string ae=null
integer ne=0
integer de=0
string array fe
integer Re=0
group Te=null
group Ye=null
hashtable Ge=null
hashtable ge=null
hashtable he=null
timer Fe=null
integer ke=0
boolean je=false
integer xe=0
integer ve=0
integer me=0
string Qe=null
string We=null
integer Ee=0
integer Ze=0
string Ue=null
boolean Ie=false
rect Pe=null
rect Ae=null
region De=null
real He=0.
real Je=0.
real Ke=0.
real Le=0.
real Xe=0.
real Ce=0.
real Ve=0.
real Be=0.
real Ne=0.
real Me=0.
real wq=0.
integer uq=0
integer rq=0
integer sq=0
integer tq=0
integer iq=0
gamecache Sq=null
string cq=null
string oq=null
string Oq=null
string lq=null
string bq=null
integer yq=0
integer pq=0
integer eq=0
integer qq=0
integer aq=0
integer nq=0
gamecache dq=null
gamecache fq=null
gamecache Rq=null
gamecache Tq=null
integer Yq=0
integer Gq=0
integer gq=0
string hq=null
string Fq=null
integer kq=0
integer jq=0
integer xq=0
trigger vq=null
trigger mq=null
string Qq=null
string Wq=null
trigger Eq=null
group Zq=null
unit array Uq
integer Iq=0
integer Pq=0
string array Aq
string Dq=null
integer Hq=0
integer Jq=0
integer Kq=0
integer Lq=0
integer Xq=0
integer Cq=0
integer Vq=0
string Bq=null
string Nq=null
string Mq=null
string wa=null
string ua=null
integer ra=0
integer sa=0
integer ta=0
integer ia=0
integer array Sa
integer ca=0
integer array oa
integer Oa=0
integer array la
player ba=null
filterfunc ya=null
player array pa
player ea=null
playercolor qa=null
playercolor aa=null
playercolor na=null
playercolor da=null
playercolor array fa
integer Ra=0
integer Ta=0
string array Ya
string array Ga
integer ga=0
integer ha=0
string Fa=null
string ka=null
string ja=null
string xa=null
integer va=0
boolean ma=false
group Qa=null
unit Wa=null
integer Ea=0
real Za=0.
real Ua=0.
real Ia=0.
integer Pa=0
trigger array Aa
integer Da=0
integer Ha=0
integer Ja=0
integer Ka=0
integer La=0
integer array Xa
integer Ca=0
integer Va=0
boolean Ba=false
hashtable Na=null
integer Ma=0
integer wn=0
integer un=0
integer rn=0
integer sn=0
integer tn=0
integer Sn=0
integer cn=0
integer on=0
integer On=0
integer ln=0
integer bn=0
integer yn=0
integer pn=0
integer en=0
integer qn=0
integer an=0
integer nn=0
integer dn=0
integer fn=0
integer Rn=0
integer Tn=0
integer Yn=0
integer Gn=0
integer gn=0
hashtable hn=null
string Fn=null
integer kn=0
string jn=null
string xn=null
string vn=null
integer mn=0
integer Qn=0
integer Wn=0
integer array En
integer Zn=0
integer Un=0
integer In=0
integer Pn=0
integer An=0
integer Dn=0
camerasetup array Hn
integer Jn=0
integer Kn=0
integer Ln=0
integer Xn=0
integer Cn=0
integer Vn=0
integer Bn=0
integer Nn=0
integer Mn=0
integer wd=0
integer ud=0
integer rd=0
integer sd=0
integer td=0
integer id=0
integer Sd=0
integer cd=0
integer od=0
integer Od=0
integer ld=0
integer bd=0
integer array yd
integer pd=0
hashtable ed=null
hashtable qd=null
hashtable ad=null
integer nd=0
conditionfunc dd=null
code fd=null
integer Rd=0
integer Td=0
integer Yd=0
integer Gd=0
integer gd=0
integer hd=0
integer Fd=0
integer array kd
integer array jd
string array xd
integer vd=0
integer md=0
integer array Qd
integer Wd=0
integer array Ed
integer Zd=0
integer Ud=0
integer Id=0
integer Pd=0
integer Ad=0
integer Dd=0
trigger Hd=null
group Jd=null
integer Kd=0
integer array Ld
string array Xd
integer Cd=0
integer array Vd
string array Bd
unit array Nd
real array Md
real array wf
string uf=null
integer rf=0
integer sf=0
integer tf=0
integer Sf=0
integer cf=0
integer of=0
integer Of=0
integer lf=0
integer bf=0
integer yf=0
integer pf=0
integer ef=0
integer qf=0
integer af=0
integer nf=0
integer df=0
real array ff
real array Rf
integer Tf=0
string Yf=null
string Gf=null
string gf=null
string hf=null
string Ff=null
string kf=null
string jf=null
real xf=0.
real vf=0.
filterfunc mf=null
integer Qf=0
unit array Wf
integer Ef=0
integer Zf=0
integer Uf=0
integer If=0
string Pf=null
integer Af=0
string Df=null
integer array Hf
real array Jf
boolean array Kf
real array Lf
real array Xf
boolean array Cf
integer array Vf
integer Bf=0
integer Nf=0
integer Mf=0
string array wR
integer uR=0
string array rR
integer sR=0
integer tR=0
integer iR=0
integer SR=0
integer cR=0
integer oR=0
integer OR=0
integer lR=0
integer bR=0
integer yR=0
integer pR=0
integer eR=0
integer qR=0
integer aR=0
integer array nR
integer array dR
integer fR=0
real array RR
real array TR
boolean array YR
integer GR=0
integer gR=0
integer hR=0
integer FR=0
string kR=null
integer jR=0
integer xR=0
string vR=null
integer mR=0
integer QR=0
string array WR
integer array ER
integer ZR=0
string UR=null
string IR=null
unit PR=null
integer AR=0
integer array DR
integer HR=0
integer JR=0
integer KR=0
integer LR=0
integer XR=0
hashtable CR=null
hashtable VR=null
string BR=null
string NR=null
string MR=null
string wT=null
string uT=null
string rT=null
string sT=null
timer array tT
integer iT=0
integer ST=0
integer cT=0
integer oT=0
integer OT=0
integer lT=0
integer bT=0
integer yT=0
integer pT=0
integer eT=0
integer qT=0
integer aT=0
integer nT=0
integer dT=0
integer fT=0
trigger RT=null
group TT=null
integer YT=0
real GT=0.
integer gT=0
trigger hT=null
trigger FT=null
unit array kT
integer jT=0
string array xT
integer vT=0
integer mT=0
string QT=null
string WT=null
string ET=null
string ZT=null
string UT=null
string IT=null
string PT=null
integer array AT
integer array DT
integer array HT
integer array JT
integer KT=0
string array LT
integer array XT
real CT=0.
real VT=0.
real BT=0.
real NT=0.
hashtable MT=null
real wY=0.
real uY=0.
location rY=null
integer array sY
integer tY=0
integer iY=0
integer array SY
integer array cY
integer oY=0
integer OY=0
integer array lY
integer array bY
integer yY=0
integer pY=0
integer array eY
integer array qY
integer aY=0
integer nY=0
integer array dY
integer array fY
integer RY=0
integer TY=0
integer array YY
integer array GY
integer gY=0
integer hY=0
integer array FY
integer array kY
integer jY=0
integer xY=0
integer array vY
integer array mY
integer QY=0
integer WY=0
integer array EY
integer array ZY
integer UY=0
integer IY=0
integer array PY
integer array AY
integer DY=0
integer HY=0
integer array JY
integer array KY
integer LY=0
integer XY=0
integer array CY
integer array VY
integer BY=0
integer NY=0
integer array MY
integer array wG
integer uG=0
integer rG=0
integer array sG
integer array tG
integer iG=0
integer SG=0
integer array cG
integer array oG
integer OG=0
integer lG=0
integer array bG
integer array yG
integer pG=0
integer eG=0
integer array qG
integer array aG
integer array nG
integer dG=0
integer fG=0
integer array RG
integer array TG
integer YG=0
integer GG=0
integer array gG
integer array hG
integer FG=0
integer kG=0
integer array jG
integer array xG
integer vG=0
integer mG=0
integer array QG
integer array WG
integer EG=0
integer ZG=0
integer array UG
integer array IG
integer PG=0
integer AG=0
integer array DG
integer HG=0
integer JG=0
integer array KG
integer array LG
integer XG=0
integer CG=0
integer array VG
integer array BG
integer NG=0
integer MG=0
integer array wg
integer array ug
integer rg=0
integer sg=0
integer array tg
integer array ig
integer Sg=0
integer cg=0
integer array og
integer array Og
integer lg=0
integer bg=0
integer array yg
integer array pg
integer eg=0
integer qg=0
integer array ag
integer array ng
integer dg=0
integer fg=0
integer array Rg
integer array Tg
integer Yg=0
integer Gg=0
integer array gg
integer array hg
integer Fg=0
integer kg=0
integer array jg
integer array xg
integer vg=0
integer mg=0
integer array Qg
integer array Wg
integer Eg=0
integer Zg=0
integer array Ug
integer array Ig
integer Pg=0
integer Ag=0
integer array Dg
integer array Hg
integer Jg=0
integer Kg=0
integer array Lg
integer array Xg
integer Cg=0
integer Vg=0
integer array Bg
integer Ng=0
integer array Mg
integer array wh
integer uh=0
integer array rh
integer array sh
integer th=0
integer ih=0
integer array Sh
integer array ch
integer oh=0
integer Oh=0
integer array lh
integer array bh
integer yh=0
integer ph=0
integer array eh
integer array qh
integer ah=0
integer nh=0
integer array dh
integer array fh
integer Rh=0
integer Th=0
integer array Yh
integer Gh=0
integer array gh
integer array hh
integer Fh=0
integer kh=0
integer array jh
integer array xh
integer vh=0
integer mh=0
integer array Qh
integer Wh=0
integer Eh=0
integer array Zh
integer array Uh
integer Ih=0
integer Ph=0
integer array Ah
integer array Dh
integer Hh=0
integer Jh=0
integer array Kh
integer array Lh
integer Xh=0
integer Ch=0
integer array Vh
integer array Bh
integer Nh=0
integer Mh=0
integer array wF
integer array uF
integer rF=0
integer sF=0
integer array tF
integer array iF
integer SF=0
integer cF=0
integer array oF
integer array OF
integer lF=0
integer bF=0
integer array yF
integer array pF
integer eF=0
integer qF=0
integer array aF
integer nF=0
integer dF=0
integer array fF
integer RF=0
integer array TF
integer array YF
integer GF=0
integer gF=0
integer array hF
integer array FF
integer kF=0
integer jF=0
integer array xF
integer array vF
integer mF=0
integer QF=0
integer array WF
integer array EF
integer ZF=0
integer UF=0
integer array IF
integer array PF
integer AF=0
integer DF=0
integer array HF
integer array JF
integer KF=0
integer LF=0
integer array XF
integer CF=0
integer array VF
integer array BF
integer array NF
integer array MF
integer wk=0
integer uk=0
integer array rk
integer array sk
integer tk=0
integer ik=0
integer array Sk
integer array ck
integer ok=0
integer Ok=0
integer array lk
integer array bk
integer yk=0
integer pk=0
integer array ek
integer qk=0
integer array ak
integer array nk
integer dk=0
integer fk=0
integer array Rk
integer array Tk
integer Yk=0
integer Gk=0
integer array gk
integer array hk
integer Fk=0
integer kk=0
integer array jk
integer array xk
integer vk=0
integer mk=0
integer array Qk
integer Wk=0
integer array Ek
integer array Zk
integer Uk=0
integer Ik=0
integer array Pk
integer array Ak
integer array Dk
integer Hk=0
integer Jk=0
integer array Kk
integer array Lk
integer Xk=0
integer Ck=0
integer array Vk
integer array Bk
integer Nk=0
integer Mk=0
integer array wj
integer array uj
integer rj=0
integer sj=0
integer array tj
integer array ij
integer Sj=0
integer cj=0
integer array oj
integer array Oj
integer lj=0
integer bj=0
integer array yj
integer array pj
integer ej=0
integer qj=0
integer array aj
integer array nj
integer dj=0
integer fj=0
integer array Rj
integer array Tj
integer Yj=0
integer Gj=0
integer array gj
integer array hj
integer Fj=0
integer kj=0
integer array jj
integer array xj
integer vj=0
integer mj=0
integer array Qj
integer array Wj
integer Ej=0
integer Zj=0
integer array Uj
integer array Ij
integer Pj=0
integer Aj=0
integer array Dj
integer array Hj
integer Jj=0
integer Kj=0
integer array Lj
integer array Xj
integer Cj=0
integer Vj=0
integer array Bj
integer array Nj
integer Mj=0
integer wx=0
integer array ux
integer array rx
integer sx=0
integer tx=0
integer array ix
integer array Sx
integer cx=0
integer ox=0
integer array Ox
integer array lx
integer bx=0
integer yx=0
integer array px
integer array ex
integer qx=0
integer ax=0
integer array nx
integer array dx
integer fx=0
integer Rx=0
integer array Tx
integer array Yx
integer Gx=0
integer gx=0
integer array hx
integer array Fx
integer kx=0
integer jx=0
integer array xx
integer array vx
integer mx=0
integer Qx=0
integer array Wx
integer array Ex
integer Zx=0
integer Ux=0
integer array Ix
integer array Px
integer Ax=0
integer Dx=0
integer array Hx
integer array Jx
integer Kx=0
integer Lx=0
integer array Xx
integer array Cx
integer Vx=0
integer Bx=0
integer array Nx
integer array Mx
integer wv=0
integer uv=0
integer array rv
integer array sv
integer tv=0
integer iv=0
integer array Sv
integer array cv
integer ov=0
integer Ov=0
integer array lv
integer array bv
integer yv=0
integer pv=0
integer array ev
integer array qv
integer av=0
integer nv=0
integer array dv
integer array fv
integer Rv=0
integer Tv=0
integer array Yv
integer array Gv
integer gv=0
integer hv=0
integer array Fv
integer kv=0
integer jv=0
integer array xv
integer array vv
integer mv=0
integer Qv=0
integer array Wv
integer array Ev
integer Zv=0
integer Uv=0
integer array Iv
integer array Pv
integer Av=0
integer Dv=0
integer array Hv
integer array Jv
integer Kv=0
integer Lv=0
integer array Xv
integer array Cv
integer Vv=0
integer Bv=0
integer array Nv
integer array Mv
integer wm=0
integer um=0
integer array rm
integer sm=0
integer tm=0
integer array im
integer array Sm
integer cm=0
integer om=0
integer array Om
integer lm=0
integer array bm
integer array ym
integer pm=0
integer em=0
integer array qm
integer array am
integer array nm
integer dm=0
integer fm=0
integer array Rm
integer Tm=0
integer Ym=0
integer array Gm
integer array gm
integer hm=0
integer Fm=0
integer array km
integer array jm
integer xm=0
integer vm=0
integer array mm
integer array Qm
integer Wm=0
integer Em=0
integer array Zm
integer Um=0
integer Im=0
integer array Pm
integer array Am
integer Dm=0
integer Hm=0
integer array Jm
integer Km=0
integer Lm=0
integer array Xm
integer array Cm
integer Vm=0
integer Bm=0
integer array Nm
integer array Mm
integer wQ=0
integer uQ=0
integer array rQ
integer array sQ
integer array tQ
integer array iQ
boolean array SQ
integer array cQ
integer array oQ
integer array OQ
integer array lQ
integer array bQ
integer array yQ
string array pQ
string array eQ
integer array qQ
integer array aQ
integer array nQ
integer array dQ
integer array fQ
integer array RQ
integer array TQ
integer array YQ
integer array GQ
integer array gQ
integer array hQ
integer array FQ
integer array kQ
string array jQ
string array xQ
integer array vQ
integer array mQ
string array QQ
integer array WQ
integer array EQ
integer array ZQ
integer array UQ
integer array IQ
integer array PQ
integer array AQ
integer array DQ
integer array HQ
integer array JQ
integer array KQ
integer array LQ
integer array XQ
integer array CQ
unit array VQ
integer array BQ
integer array NQ
integer array MQ
integer array wW
integer array uW
integer array rW
integer array sW
integer array tW
integer array iW
integer array SW
integer array cW
integer array oW
integer array OW
unit array lW
integer array bW
integer array yW
integer array pW
integer array eW
integer array qW
integer array aW
integer array nW
integer array dW
integer array fW
integer array RW
integer array TW
integer array YW
integer array GW
integer array gW
integer array hW
integer array FW
integer array kW
string array jW
integer array xW
integer array vW
real array mW
integer array QW
integer array WW
integer array EW
integer array ZW
integer array UW
integer array IW
integer array PW
integer array AW
unit array DW
frameeventtype array HW
integer array JW
integer array KW
timer array LW
timer array XW
integer array CW
boolean array VW
integer array BW
boolean array NW
real array MW
boolean array wE
integer array uE
boolean array rE
integer array sE
boolean array tE
integer array iE
boolean array SE
real array cE
boolean array oE
integer array OE
boolean array lE
integer array bE
integer array yE
integer array pE
integer array eE
integer array qE
integer array aE
integer array nE
integer array dE
integer array fE
integer array RE
player array TE
integer array YE
real array GE
real array gE
integer array hE
integer array FE
player array kE
real array jE
real array xE
integer array vE
integer array mE
integer array QE
integer array WE
integer array EE
real array ZE
real array UE
real array IE
real array PE
real array AE
integer array DE
real array HE
real array JE
integer array KE
integer array LE
integer array XE
real array CE
integer array VE
real array BE
real array NE
player array ME
unit array wZ
integer array uZ
integer array rZ
integer array sZ
integer array tZ
integer array iZ
unit array SZ
real array cZ
integer array oZ
integer array OZ
integer array lZ
integer array bZ
integer array yZ
real array pZ
real array eZ
integer array qZ
integer array aZ
integer array nZ
real array dZ
real array fZ
player array RZ
integer array TZ
unit array YZ
integer array GZ
integer array gZ
integer array hZ
integer array FZ
real array kZ
real array jZ
gamecache array xZ
string array vZ
integer array mZ
integer array QZ
integer array WZ
integer array EZ
integer array ZZ
integer array UZ
integer array IZ
integer array PZ
integer array AZ
integer array DZ
integer array HZ
string array JZ
integer array KZ
integer array LZ
integer array XZ
integer array CZ
integer array VZ
integer array BZ
integer array NZ
integer array MZ
integer array wU
integer array uU
integer array rU
integer array sU
integer array tU
integer array iU
integer array SU
integer array cU
integer array oU
integer array OU
integer array lU
integer array bU
integer array yU
integer array pU
integer array eU
integer array qU
integer array aU
integer array nU
integer array dU
integer array fU
integer array RU
integer array TU
integer array YU
integer array GU
boolean array gU
integer array hU
integer array FU
boolean array kU
integer array jU
integer array xU
real array vU
real array mU
integer array QU
integer array WU
integer array EU
boolean array ZU
integer array UU
integer array IU
integer array PU
integer array AU
integer array DU
real array HU
integer array JU
integer array KU
integer array LU
integer array XU
integer array CU
real array VU
real array BU
integer array NU
integer array MU
integer array wI
integer array uI
real array rI
integer array sI
integer array tI
integer array iI
integer array SI
integer array cI
string array oI
real array OI
real array lI
integer array bI
integer array yI
integer array pI
string array eI
integer array qI
integer array aI
integer array nI
integer array dI
integer array fI
string array RI
integer array TI
integer array YI
integer array GI
integer array gI
integer array hI
integer array FI
integer array kI
integer array jI
integer array xI
integer array vI
integer array mI
integer array QI
integer array WI
real array EI
integer array ZI
integer array UI
integer array II
integer array PI
integer array AI
real array DI
real array HI
real array JI
real array KI
real array LI
real array XI
integer array CI
integer array VI
integer array BI
integer array NI
integer array MI
real array wP
integer array uP
real array rP
integer array sP
real array tP
integer array iP
integer array SP
integer array cP
integer array oP
real array OP
real array lP
real array bP
integer array yP
integer array pP
integer array eP
integer array qP
integer array aP
integer array nP
integer array dP
boolean array fP
integer array RP
integer array TP
integer array YP
integer array GP
integer array gP
integer array hP
integer array FP
hashtable array kP
hashtable array jP
string array xP
unit array vP
real array mP
real array QP
unit array WP
real array EP
real array ZP
string array UP
integer array IP
boolean array PP
string array AP
integer array DP
integer array HP
integer array JP
integer array KP
integer array LP
integer array XP
integer array CP
integer array VP
integer array BP
string array NP
integer array MP
integer array wA
integer array uA
integer array rA
integer array sA
integer array tA
integer array iA
integer array SA
player array cA
integer array oA
integer array OA
integer array lA
integer array bA
integer array yA
boolean array pA
integer array eA
integer array qA
integer array aA
integer array nA
integer array dA
integer array fA
integer array RA
integer array TA
integer array YA
integer array GA
integer array gA
integer array hA
integer array FA
integer array kA
integer array jA
integer array xA
integer array vA
integer array mA
integer array QA
integer array WA
integer array EA
integer array ZA
integer array UA
integer array IA
integer array PA
integer array AA
integer array DA
integer array HA
integer array JA
integer array KA
integer array LA
integer array XA
integer array CA
string array VA
integer array BA
integer array NA
integer array MA
integer array wD
integer array uD
integer array rD
integer array sD
player array tD
integer array iD
integer array SD
integer array cD
integer array oD
integer array OD
boolean array lD
integer array bD
integer array yD
integer array pD
integer array eD
integer array qD
integer array aD
integer array nD
integer array dD
integer array fD
integer array RD
integer array TD
integer array YD
integer array GD
integer array gD
integer array hD
integer array FD
integer array kD
integer array jD
integer array xD
integer array vD
integer array mD
integer array QD
integer array WD
integer array ED
integer array ZD
integer array UD
integer array ID
integer array PD
integer array AD
integer array DD
integer array HD
integer array JD
integer array KD
integer array LD
integer array XD
integer array CD
player array VD
integer array BD
integer array ND
integer array MD
integer array wH
integer array uH
integer array rH
integer array sH
integer array tH
integer array iH
player array SH
integer array cH
integer array oH
integer array OH
integer array lH
integer array bH
integer array yH
integer array pH
integer array eH
integer array qH
integer array aH
integer array nH
integer array dH
integer array fH
integer array RH
integer array TH
integer array YH
integer array GH
integer array gH
integer array hH
integer array FH
integer array kH
integer array jH
integer array xH
integer array vH
integer array mH
integer array QH
boolean array WH
boolean array EH
integer array ZH
integer array UH
real array IH
real array PH
real array AH
real array DH
real array HH
real array JH
integer array KH
player array LH
string array XH
real array CH
real array VH
real array BH
real array NH
rect array MH
string array wJ
integer array uJ
real array rJ
real array sJ
real array tJ
real array iJ
real array SJ
real array cJ
real array oJ
real array OJ
integer array lJ
integer array bJ
integer array yJ
integer array pJ
integer array eJ
integer array qJ
integer array aJ
integer array nJ
integer array dJ
string array fJ
integer array RJ
integer array TJ
integer array YJ
integer array GJ
integer array gJ
framehandle array hJ
framehandle array FJ
framehandle array kJ
integer array jJ
integer array xJ
integer array vJ
boolean array mJ
integer array QJ
integer array WJ
integer array EJ
integer array ZJ
integer array UJ
integer array IJ
integer array PJ
integer array AJ
integer array DJ
integer array HJ
integer array JJ
boolean array KJ
string array LJ
integer array XJ
integer array CJ
integer array VJ
boolean array BJ
boolean array NJ
boolean array MJ
integer array wK
integer array uK
integer array rK
integer array sK
camerasetup array tK
integer array iK
unit array SK
unit array cK
unit array oK
unit array OK
real array lK
real array bK
integer array yK
destructable array pK
item array eK
item array qK
integer array aK
destructable array nK
string array dK
integer array fK
integer array RK
integer array TK
integer array YK
integer array GK
integer array gK
group array hK
handle array FK
integer array kK
string array jK
item array xK
real array vK
string array mK
rect array QK
region array WK
integer array EK
integer array ZK
integer array UK
sound array IK
string array PK
effect array AK
string array DK
string array HK
string array JK
string array KK
integer array LK
boolean array XK
trigger array CK
integer array VK
triggercondition array BK
triggeraction array NK
integer array MK
string array wL
integer array uL
unit array rL
integer array sL
weathereffect array tL
widget array iL
string array SL
integer array cL
integer array oL
string array OL
integer array lL
unit array bL
integer array yL
integer array pL
integer array eL
unit array qL
integer array aL
integer array nL
integer array dL
integer array fL
group array RL
real array TL
integer array YL
integer array GL
integer array gL
integer array hL
integer array FL
integer array kL
integer array jL
integer array xL
integer array vL
group array mL
integer array QL
integer array WL
integer array EL
integer array ZL
integer array UL
unit array IL
rect array PL
integer array AL
integer array DL
real array HL
real array JL
integer array KL
string array LL
string array XL
integer array CL
integer array VL
string array BL
integer array NL
string array ML
integer array wX
integer array uX
string array rX
string array sX
string array tX
integer array iX
unit array SX
integer array cX
unit array oX
integer array OX
integer array lX
integer array bX
unit array yX
integer array pX
integer array eX
integer array qX
real array aX
real array nX
integer array dX
integer array fX
integer array RX
integer array TX
integer array YX
integer array GX
real array gX
real array hX
integer array FX
integer array kX
integer array jX
integer array xX
integer array vX
integer array mX
integer array QX
integer array WX
integer array EX
integer array ZX
integer array UX
integer array IX
integer array PX
integer array AX
integer array DX
integer array HX
integer array JX
string array KX
string array LX
integer array XX
string array CX
string array VX
integer array BX
integer array NX
integer array MX
integer array wC
integer array uC
integer array rC
integer array sC
integer array tC
string array iC
integer array SC
integer array cC
integer array oC
integer array OC
integer array lC
integer array bC
integer array yC
integer array pC
boolean array eC
boolean array qC
integer array aC
integer array nC
integer array dC
integer array fC
string array RC
integer array TC
integer array YC
integer array GC
string array gC
integer array hC
integer array FC
unit array kC
integer array jC
integer array xC
integer array vC
integer array mC
integer array QC
boolean array WC
integer array EC
integer array ZC
real array UC
real array IC
real array PC
real array AC
integer array DC
integer array HC
integer array JC
integer array KC
integer array LC
boolean array XC
integer array CC
integer array VC
integer array BC
integer array NC
boolean array MC
integer array wV
integer array uV
integer array rV
integer array sV
integer array tV
integer array iV
integer array SV
string array cV
string array oV
boolean array OV
integer array lV
integer array bV
integer array yV
integer array pV
integer array eV
integer array qV
integer array aV
integer array nV
integer array dV
integer array fV
integer array RV
integer array TV
integer array YV
rect array GV
integer array gV
real array hV
real array FV
integer array kV
integer array jV
player array xV
real array vV
real array mV
integer array QV
integer array WV
integer array EV
integer array ZV
integer array UV
real array IV
real array PV
real array AV
real array DV
integer array HV
integer array JV
integer array KV
integer array LV
integer array XV
integer array CV
integer array VV
integer array BV
integer array NV
integer array MV
integer array wB
integer array uB
integer array rB
real array sB
integer array tB
integer array iB
integer array SB
integer array cB
integer array oB
real array OB
integer array lB
real array bB
real array yB
real array pB
real array eB
real array qB
integer array aB
integer array nB
integer array dB
integer array fB
real array RB
integer array TB
integer array YB
integer array GB
integer array gB
real array hB
integer array FB
integer array kB
integer array jB
integer array xB
integer array vB
integer array mB
integer array QB
integer array WB
integer array EB
integer array ZB
integer array UB
integer array IB
real array PB
real array AB
integer array DB
integer array HB
integer array JB
unit array KB
integer array LB
integer array XB
integer array CB
integer array VB
integer array BB
integer array NB
boolean array MB
boolean array wN
integer array uN
integer array rN
integer array sN
integer array tN
integer array iN
integer array SN
real array cN
integer array oN
integer array ON
integer array lN
real array bN
real array yN
real array pN
integer array eN
integer array qN
integer array aN
integer array nN
integer array dN
integer array fN
integer array RN
integer array TN
integer array YN
integer array GN
integer array gN
integer array hN
unit array FN
player array kN
integer array jN
real array xN
real array vN
integer array mN
integer array QN
player array WN
real array EN
real array ZN
integer array UN
integer array IN
integer array PN
integer array AN
integer array DN
integer array HN
integer array JN
real array KN
integer array LN
integer array XN
integer array CN
integer array VN
integer array BN
real array NN
integer array MN
real array wM
real array uM
real array rM
real array sM
real array tM
integer array iM
integer array SM
integer array cM
integer array oM
integer array OM
integer array lM
integer array bM
integer array yM
integer array pM
integer array eM
integer array qM
real array aM
integer array nM
integer array dM
integer array fM
integer array RM
real array TM
integer array YM
integer array GM
integer array gM
integer array hM
integer array FM
integer array kM
integer array jM
integer array xM
integer array vM
integer array mM
integer array QM
integer array WM
integer array EM
integer array ZM
integer array UM
integer array IM
integer array PM
hashtable array AM
hashtable array DM
string array HM
integer array JM
string array KM
integer array LM
integer array XM
boolean array CM
integer array VM
integer array BM
string array NM
integer MM=0
string array w3
real u3=0.
real r3=0.
real s3=0.
real t3=0.
integer i3=0
integer S3=0
integer c3=0
integer o3=0
integer O3=0
integer l3=0
integer b3=0
integer y3=0
integer p3=0
integer e3=0
integer q3=0
integer a3=0
integer n3=0
real d3=0.
real f3=0.
real R3=0.
real T3=0.
real Y3=0.
real G3=0.
real g3=0.
real h3=0.
real F3=0.
real k3=0.
integer j3=0
integer x3=0
integer v3=0
integer m3=0
integer Q3=0
integer W3=0
integer E3=0
integer Z3=0
integer U3=0
integer I3=0
integer P3=0
integer A3=0
boolean D3=false
integer H3=0
boolean J3=false
real K3=0.
boolean L3=false
integer X3=0
boolean C3=false
real V3=0.
boolean B3=false
integer N3=0
boolean M3=false
integer w1=0
integer u1=0
integer r1=0
integer s1=0
real t1=0.
real i1=0.
real S1=0.
real c1=0.
real o1=0.
real O1=0.
real l1=0.
real b1=0.
real y1=0.
real p1=0.
real e1=0.
real q1=0.
real a1=0.
real n1=0.
integer d1=0
integer f1=0
real R1=0.
real T1=0.
real Y1=0.
integer G1=0
integer g1=0
real h1=0.
integer F1=0
integer k1=0
real j1=0.
real x1=0.
real v1=0.
real m1=0.
integer Q1=0
real W1=0.
real E1=0.
real Z1=0.
real U1=0.
real I1=0.
real P1=0.
real A1=0.
real D1=0.
real H1=0.
real J1=0.
integer K1=0
integer L1=0
integer X1=0
real C1=0.
real V1=0.
integer B1=0
player N1=null
integer M1=0
integer w4=0
integer u4=0
integer r4=0
integer s4=0
string t4=null
string i4=null
string S4=null
string c4=null
string o4=null
integer O4=0
string l4=null
boolean b4=false
integer y4=0
real p4=0.
real e4=0.
integer q4=0
real a4=0.
real n4=0.
real d4=0.
real f4=0.
integer R4=0
integer T4=0
integer Y4=0
integer G4=0
integer g4=0
integer h4=0
integer F4=0
integer k4=0
integer j4=0
integer x4=0
integer v4=0
integer m4=0
integer Q4=0
integer W4=0
integer E4=0
integer Z4=0
integer U4=0
integer I4=0
integer P4=0
integer A4=0
integer D4=0
integer H4=0
integer J4=0
integer K4=0
integer L4=0
integer X4=0
integer C4=0
integer V4=0
integer B4=0
integer N4=0
integer M4=0
integer w2=0
real u2=0.
integer r2=0
integer s2=0
integer t2=0
integer i2=0
integer S2=0
real c2=0.
integer o2=0
real O2=0.
integer l2=0
integer b2=0
integer y2=0
integer p2=0
integer e2=0
real q2=0.
integer a2=0
real n2=0.
integer d2=0
integer f2=0
integer R2=0
integer T2=0
integer Y2=0
real G2=0.
integer g2=0
integer h2=0
real F2=0.
real k2=0.
real j2=0.
real x2=0.
real v2=0.
real m2=0.
real Q2=0.
integer W2=0
real E2=0.
real Z2=0.
real U2=0.
real I2=0.
real P2=0.
integer A2=0
real D2=0.
real H2=0.
real J2=0.
real K2=0.
real L2=0.
integer X2=0
integer C2=0
integer V2=0
integer B2=0
integer N2=0
integer M2=0
integer w5=0
integer u5=0
integer r5=0
real s5=0.
integer t5=0
integer i5=0
integer S5=0
integer c5=0
integer o5=0
integer O5=0
real l5=0.
integer b5=0
integer y5=0
integer p5=0
integer e5=0
real q5=0.
integer a5=0
integer n5=0
integer d5=0
integer f5=0
integer R5=0
integer T5=0
integer Y5=0
integer G5=0
integer g5=0
real h5=0.
integer F5=0
integer k5=0
integer j5=0
integer x5=0
integer v5=0
integer m5=0
real Q5=0.
integer W5=0
integer E5=0
integer Z5=0
integer U5=0
real I5=0.
integer P5=0
integer A5=0
integer D5=0
integer H5=0
integer J5=0
integer K5=0
integer L5=0
integer X5=0
integer C5=0
integer V5=0
real B5=0.
integer N5=0
integer M5=0
integer w6=0
integer u6=0
integer r6=0
integer s6=0
real t6=0.
integer i6=0
integer S6=0
integer c6=0
integer o6=0
real O6=0.
integer l6=0
integer b6=0
integer y6=0
integer p6=0
integer e6=0
integer q6=0
integer a6=0
integer n6=0
integer d6=0
integer f6=0
integer R6=0
integer T6=0
integer Y6=0
integer G6=0
integer g6=0
integer h6=0
integer F6=0
integer k6=0
integer j6=0
integer x6=0
integer v6=0
real m6=0.
integer Q6=0
integer W6=0
integer E6=0
integer Z6=0
integer U6=0
real I6=0.
integer P6=0
real A6=0.
integer D6=0
integer H6=0
integer J6=0
integer K6=0
integer L6=0
real X6=0.
integer C6=0
real V6=0.
integer B6=0
integer N6=0
integer M6=0
integer w7=0
integer u7=0
real r7=0.
integer s7=0
integer t7=0
real i7=0.
real S7=0.
real c7=0.
real o7=0.
real O7=0.
integer l7=0
real b7=0.
real y7=0.
real p7=0.
real e7=0.
real q7=0.
integer a7=0
real n7=0.
real d7=0.
real f7=0.
real R7=0.
real T7=0.
integer Y7=0
integer G7=0
integer g7=0
integer h7=0
integer F7=0
integer k7=0
integer j7=0
integer x7=0
integer v7=0
integer m7=0
integer Q7=0
integer W7=0
integer E7=0
integer Z7=0
integer U7=0
integer I7=0
integer P7=0
integer A7=0
integer D7=0
integer H7=0
integer J7=0
integer K7=0
integer L7=0
integer X7=0
integer C7=0
integer V7=0
integer B7=0
integer N7=0
integer M7=0
integer w8=0
integer u8=0
integer r8=0
integer s8=0
integer t8=0
integer i8=0
integer S8=0
integer c8=0
integer o8=0
integer O8=0
integer l8=0
integer b8=0
integer y8=0
integer p8=0
integer e8=0
integer q8=0
integer a8=0
integer n8=0
integer d8=0
real f8=0.
integer R8=0
integer T8=0
integer Y8=0
integer G8=0
real g8=0.
integer h8=0
integer F8=0
integer k8=0
integer j8=0
real x8=0.
integer v8=0
integer m8=0
integer Q8=0
integer W8=0
integer E8=0
integer Z8=0
real U8=0.
integer I8=0
integer P8=0
integer A8=0
integer D8=0
real H8=0.
integer J8=0
integer K8=0
integer L8=0
integer X8=0
integer C8=0
integer V8=0
integer B8=0
integer N8=0
real M8=0.
integer w9=0
integer u9=0
integer r9=0
integer s9=0
real t9=0.
integer i9=0
integer S9=0
integer c9=0
integer o9=0
integer O9=0
integer l9=0
integer b9=0
integer y9=0
real p9=0.
integer e9=0
integer q9=0
integer a9=0
integer n9=0
real d9=0.
integer f9=0
integer R9=0
integer T9=0
integer Y9=0
integer G9=0
integer g9=0
integer h9=0
integer F9=0
integer k9=0
integer j9=0
integer x9=0
integer v9=0
integer m9=0
integer Q9=0
integer W9=0
integer E9=0
integer Z9=0
integer U9=0
real I9=0.
real P9=0.
real A9=0.
real D9=0.
real H9=0.
integer J9=0
real K9=0.
real L9=0.
real X9=0.
real C9=0.
integer V9=0
integer B9=0
integer N9=0
integer M9=0
integer w0w=0
integer u0w=0
integer r0w=0
integer s0w=0
integer t0w=0
integer i0w=0
integer S0w=0
real c0w=0.
real o0w=0.
real O0w=0.
real l0w=0.
real b0w=0.
real y0w=0.
real p0w=0.
real e0w=0.
boolean q0w=false
string a0w=null
boolean n0w=false
string d0w=null
boolean f0w=false
string R0w=null
boolean T0w=false
string Y0w=null
boolean G0w=false
string g0w=null
integer h0w=0
string F0w=null
integer k0w=0
string j0w=null
boolean x0w=false
string v0w=null
integer m0w=0
string Q0w=null
real W0w=0.
real E0w=0.
real Z0w=0.
real U0w=0.
integer I0w=0
real P0w=0.
real A0w=0.
integer D0w=0
integer H0w=0
integer J0w=0
integer K0w=0
unit array L0w
unit array X0w
unit array C0w
unit array V0w
unit array B0w
unit array N0w
integer array M0w
integer array www
integer array uww
integer array rww
integer array sww
integer array tww
integer array iww
integer array Sww
integer array cww
integer array oww
real array Oww
real array lww
integer array bww
integer array yww
integer array pww
integer array eww
boolean array qww
boolean array aww
boolean array nww
boolean array dww
boolean array fww
boolean array Rww
boolean array Tww
boolean array Yww
boolean array Gww
boolean array gww
boolean array hww
boolean array Fww
integer array kww
integer array jww
integer array xww
integer array vww
integer array mww
integer array Qww
code Www=null
code Eww=null
code Zww=null
code Uww=null
code Iww=null
code Pww=null
code Aww=null
code Dww=null
code Hww=null
code Jww=null
code Kww=null
code Lww=null
code Xww=null
code Cww=null
code Vww=null
code Bww=null
code Nww=null
code Mww=null
code www_4310=null
code uww_4146=null
code rww_3901=null
code sww_3983=null
code tww_4064=null
code iww_3165=null
code Sww_1704=null
code cww_2673=null
code oww_3655=null
code Oww_1334=null
code lww_3411=null
code bww_2591=null
code yww_4474=null
code pww_3737=null
code eww_2837=null
code qww_3819=null
code aww_2389=null
code nww_3574=null
code dww_2755=null
code fww_2922=null
code Rww_1614=null
code Tww_1787=null
code Yww_2225=null
code Gww_661=null
code gww_3004=null
code hww_3086=null
code Fww_577=null
code kww_3329=null
code jww_3247=null
code xww_4392=null
code vww_4228=null
code mww_3493=null
code Qww_1531=null
code Www_2062=null
code Eww_493=null
code Zww_2307=null
code Uww_1897=null
code Iww_830=null
code Pww_1449=null
code Aww_99=null
code Dww_369=null
code Hww_745=null
code Jww_912=null
code Kww_993=null
code Lww_1076=null
code Xww_2143=null
code Cww_273=null
code Vww_1979=null
code Bww_181=null
code Nww_1252=null
code Mww_1171=null
code wuw=null
code uuw=null
code ruw=null
code suw=null
code tuw=null
code iuw=null
code Suw=null
code cuw=null
code ouw=null
code Ouw=null
code luw=null
code buw=null
code yuw=null
code puw=null
code euw=null
code quw=null
code auw=null
code nuw=null
code duw=null
code fuw=null
code Ruw=null
code Tuw=null
code Yuw=null
code Guw=null
code guw=null
code huw=null
code Fuw=null
code kuw=null
code juw=null
code xuw=null
code vuw=null
code muw=null
code Quw=null
code Wuw=null
code Euw=null
code Zuw=null
code Uuw=null
code Iuw=null
code Puw=null
code Auw=null
code Duw=null
code Huw=null
code Juw=null
code Kuw=null
code Luw=null
code Xuw=null
code Cuw=null
code Vuw=null
code Buw=null
code Nuw=null
code Muw=null
code wrw=null
code urw=null
code rrw=null
code srw=null
code trw=null
code irw=null
code Srw=null
code crw=null
code orw=null
code Orw=null
code lrw=null
code brw=null
code yrw=null
code prw=null
code erw=null
code qrw=null
code arw=null
code nrw=null
code drw=null
code frw=null
code Rrw=null
code Trw=null
code Yrw=null
code Grw=null
code grw=null
code hrw=null
code Frw=null
code krw=null
code jrw=null
code xrw=null
code vrw=null
code mrw=null
code Qrw=null
code Wrw=null
code Erw=null
code Zrw=null
code Urw=null
code Irw=null
code Prw=null
code Arw=null
code Drw=null
code Hrw=null
code Jrw=null
code Krw=null
code Lrw=null
code Xrw=null
code Crw=null
code Vrw=null
code Brw=null
code Nrw=null
code Mrw=null
code wsw=null
code usw=null
code rsw=null
code ssw=null
code tsw=null
code isw=null
code Ssw=null
code csw=null
code osw=null
code Osw=null
code lsw=null
code bsw=null
code ysw=null
code psw=null
code esw=null
code qsw=null
code asw=null
code nsw=null
code dsw=null
code fsw=null
code Rsw=null
code Tsw=null
code Ysw=null
code Gsw=null
code gsw=null
code hsw=null
code Fsw=null
code ksw=null
code jsw=null
code xsw=null
code vsw=null
code msw=null
code Qsw=null
code Wsw=null
code Esw=null
code Zsw=null
code Usw=null
code Isw=null
code Psw=null
code Asw=null
code Dsw=null
code Hsw=null
code Jsw=null
code Ksw=null
code Lsw=null
code Xsw=null
code Csw=null
code Vsw=null
code Bsw=null
code Nsw=null
code Msw=null
code wtw=null
code utw=null
code rtw=null
code stw=null
code ttw=null
code itw=null
code Stw=null
code ctw=null
code otw=null
code Otw=null
code ltw=null
code btw=null
code ytw=null
code ptw=null
code etw=null
code qtw=null
code atw=null
code ntw=null
code dtw=null
code ftw=null
code Rtw=null
code Ttw=null
code Ytw=null
code Gtw=null
code gtw=null
code htw=null
code Ftw=null
code ktw=null
code jtw=null
code xtw=null
code vtw=null
code mtw=null
code Qtw=null
code Wtw=null
code Etw=null
code Ztw=null
code Utw=null
code Itw=null
code Ptw=null
code Atw=null
code Dtw=null
code Htw=null
code Jtw=null
code Ktw=null
code Ltw=null
code Xtw=null
code Ctw=null
code Vtw=null
code Btw=null
code Ntw=null
code Mtw=null
code wiw=null
code uiw=null
code riw=null
code siw=null
code tiw=null
code iiw=null
code Siw=null
code ciw=null
code oiw=null
code Oiw=null
code liw=null
code biw=null
code yiw=null
code piw=null
code eiw=null
code qiw=null
code aiw=null
code niw=null
code diw=null
code fiw=null
code Riw=null
code Tiw=null
code Yiw=null
code Giw=null
code giw=null
code hiw=null
code Fiw=null
code kiw=null
code jiw=null
code xiw=null
code viw=null
code miw=null
code Qiw=null
code Wiw=null
code Eiw=null
code Ziw=null
code Uiw=null
code Iiw=null
code Piw=null
code Aiw=null
code Diw=null
code Hiw=null
code Jiw=null
code Kiw=null
code Liw=null
code Xiw=null
code Ciw=null
code Viw=null
code Biw=null
code Niw=null
code Miw=null
code wSw=null
code uSw=null
code rSw=null
code sSw=null
code tSw=null
code iSw=null
code SSw=null
code cSw=null
code oSw=null
code OSw=null
code lSw=null
code bSw=null
code ySw=null
code pSw=null
code eSw=null
code qSw=null
code aSw=null
code nSw=null
code dSw=null
code fSw=null
code RSw=null
code TSw=null
code YSw=null
code GSw=null
code gSw=null
code hSw=null
code FSw=null
code kSw=null
code jSw=null
code xSw=null
code vSw=null
code mSw=null
code QSw=null
code WSw=null
code ESw=null
code ZSw=null
code USw=null
code ISw=null
code PSw=null
code ASw=null
code DSw=null
code HSw=null
code JSw=null
code KSw=null
code LSw=null
code XSw=null
code CSw=null
code VSw=null
code BSw=null
code NSw=null
code MSw=null
code wcw=null
code ucw=null
code rcw=null
code scw=null
code tcw=null
code icw=null
code Scw=null
code ccw=null
code ocw=null
code Ocw=null
code lcw=null
code bcw=null
code ycw=null
code pcw=null
code ecw=null
code qcw=null
code acw=null
code ncw=null
code dcw=null
code fcw=null
code Rcw=null
code Tcw=null
code Ycw=null
code Gcw=null
code gcw=null
code hcw=null
code Fcw=null
code kcw=null
code jcw=null
code xcw=null
code vcw=null
code mcw=null
code Qcw=null
code Wcw=null
code Ecw=null
code Zcw=null
code Ucw=null
code Icw=null
code Pcw=null
code Acw=null
code Dcw=null
code Hcw=null
code Jcw=null
code Kcw=null
code Lcw=null
code Xcw=null
code Ccw=null
code Vcw=null
code Bcw=null
code Ncw=null
code Mcw=null
code wow=null
code uow=null
code row=null
code sow=null
code tow=null
code iow=null
code Sow=null
code cow=null
code oow=null
code Oow=null
code low=null
code bow=null
code yow=null
code pow=null
code eow=null
code qow=null
code aow=null
code now=null
code dow=null
code fow=null
code Row=null
code Tow=null
code Yow=null
code Gow=null
code gow=null
code how=null
code Fow=null
code kow=null
code jow=null
code xow=null
code vow=null
code mow=null
code Qow=null
code Wow=null
code Eow=null
code Zow=null
code Uow=null
code Iow=null
code Aow=null
code Dow=null
code How=null
code Jow=null
code Kow=null
code Low=null
code Xow=null
code Cow=null
code Vow=null
code Bow=null
code Now=null
code Mow=null
code wOw=null
code uOw=null
code rOw=null
code sOw=null
code tOw=null
code iOw=null
code SOw=null
code cOw=null
code oOw=null
code OOw=null
code lOw=null
code bOw=null
code yOw=null
code pOw=null
code eOw=null
code qOw=null
code aOw=null
code nOw=null
code dOw=null
code fOw=null
code ROw=null
code TOw=null
code YOw=null
code GOw=null
code gOw=null
code hOw=null
code FOw=null
code kOw=null
code jOw=null
code xOw=null
code vOw=null
code mOw=null
code QOw=null
code WOw=null
code EOw=null
code ZOw=null
code UOw=null
code IOw=null
code POw=null
code AOw=null
code DOw=null
code HOw=null
code JOw=null
code KOw=null
code LOw=null
code XOw=null
code COw=null
code VOw=null
code BOw=null
code NOw=null
code MOw=null
code wlw=null
code ulw=null
code rlw=null
code slw=null
code tlw=null
code ilw=null
code Slw=null
code clw=null
code olw=null
code Olw=null
code llw=null
code blw=null
code ylw=null
code plw=null
code elw=null
code qlw=null
code alw=null
code nlw=null
code dlw=null
code flw=null
code Rlw=null
code Tlw=null
code Ylw=null
code Glw=null
code glw=null
code hlw=null
code Flw=null
code klw=null
code jlw=null
code xlw=null
code vlw=null
code mlw=null
code Qlw=null
code Wlw=null
code Elw=null
code Zlw=null
code Ulw=null
code Ilw=null
code Plw=null
code Alw=null
code Dlw=null
code Hlw=null
code Jlw=null
code Klw=null
code Llw=null
code Xlw=null
code Clw=null
code Vlw=null
code Blw=null
code Nlw=null
code Mlw=null
code wbw=null
code ubw=null
code rbw=null
code sbw=null
code tbw=null
code ibw=null
code Sbw=null
code cbw=null
code obw=null
code Obw=null
code lbw=null
code bbw=null
code ybw=null
code pbw=null
code ebw=null
code qbw=null
code abw=null
code nbw=null
code dbw=null
code fbw=null
code Rbw=null
code Tbw=null
code Ybw=null
code Gbw=null
code gbw=null
code hbw=null
code Fbw=null
code kbw=null
code jbw=null
code xbw=null
code vbw=null
code mbw=null
code Qbw=null
code Wbw=null
code Ebw=null
code Zbw=null
code Ubw=null
code Ibw=null
code Pbw=null
code Abw=null
code Dbw=null
code Hbw=null
code Jbw=null
code Kbw=null
code Lbw=null
code Xbw=null
code Cbw=null
code Vbw=null
code Bbw=null
code Nbw=null
code Mbw=null
code wyw=null
code uyw=null
code ryw=null
code syw=null
code tyw=null
code iyw=null
code Syw=null
code cyw=null
code oyw=null
code Oyw=null
code lyw=null
code byw=null
code yyw=null
code pyw=null
code eyw=null
code qyw=null
code ayw=null
code nyw=null
code dyw=null
code fyw=null
code Ryw=null
code Tyw=null
code Yyw=null
code Gyw=null
code gyw=null
code hyw=null
code Fyw=null
code kyw=null
code jyw=null
code xyw=null
code vyw=null
code myw=null
code Qyw=null
code Wyw=null
code Eyw=null
code Zyw=null
code Uyw=null
code Iyw=null
code Pyw=null
code Ayw=null
code Dyw=null
code Hyw=null
code Jyw=null
code Kyw=null
code Lyw=null
code Xyw=null
code Cyw=null
code Vyw=null
code Byw=null
code Nyw=null
code Myw=null
code wpw=null
code upw=null
code rpw=null
code spw=null
code tpw=null
code ipw=null
code Spw=null
code cpw=null
code opw=null
code Opw=null
code lpw=null
code bpw=null
code ypw=null
code ppw=null
code epw=null
code qpw=null
code apw=null
code npw=null
code dpw=null
code fpw=null
code Rpw=null
code Tpw=null
code Ypw=null
code Gpw=null
code gpw=null
code hpw=null
code Fpw=null
code kpw=null
code jpw=null
code xpw=null
code vpw=null
code mpw=null
code Qpw=null
code Wpw=null
code Epw=null
code Zpw=null
code Upw=null
code Ipw=null
code Ppw=null
code Apw=null
code Dpw=null
code Hpw=null
code Jpw=null
code Kpw=null
code Lpw=null
code Xpw=null
code Cpw=null
code Vpw=null
code Bpw=null
code Npw=null
code Mpw=null
code wew=null
code uew=null
code rew=null
code sew=null
code tew=null
code iew=null
code Sew=null
code cew=null
code oew=null
code Oew=null
code lew=null
code bew=null
code yew=null
code pew=null
code eew=null
code qew=null
code aew=null
code dew=null
code few=null
code Rew=null
code Tew=null
code Yew=null
code Gew=null
code gew=null
code hew=null
code Few=null
code kew=null
code jew=null
code xew=null
code vew=null
code mew=null
code Qew=null
code Wew=null
code Eew=null
code Zew=null
code Uew=null
code Iew=null
code Pew=null
code Aew=null
code Dew=null
code Hew=null
code Jew=null
code Kew=null
code Lew=null
code Xew=null
code Cew=null
code Vew=null
code Bew=null
code New=null
code Mew=null
code wqw=null
code uqw=null
code rqw=null
code sqw=null
code tqw=null
code iqw=null
code Sqw=null
code cqw=null
code oqw=null
code Oqw=null
code lqw=null
code bqw=null
code yqw=null
code pqw=null
code eqw=null
code qqw=null
code aqw=null
code nqw=null
code dqw=null
code fqw=null
code Rqw=null
code Tqw=null
code Yqw=null
code Gqw=null
code gqw=null
code hqw=null
code Fqw=null
code kqw=null
code jqw=null
code xqw=null
code vqw=null
code mqw=null
code Qqw=null
code Wqw=null
code Eqw=null
code Zqw=null
code Uqw=null
code Iqw=null
code Pqw=null
code Aqw=null
code Dqw=null
code Hqw=null
code Jqw=null
code Kqw=null
code Lqw=null
code Xqw=null
code Cqw=null
code Vqw=null
code Bqw=null
code Nqw=null
code Mqw=null
code waw=null
code uaw=null
code raw=null
code saw=null
code taw=null
code iaw=null
code Saw=null
code caw=null
code oaw=null
code Oaw=null
code law=null
code baw=null
code yaw=null
code paw=null
code eaw=null
code qaw=null
code aaw=null
code naw=null
code daw=null
code faw=null
code Raw=null
code Taw=null
code Yaw=null
code Gaw=null
code gaw=null
code haw=null
code Faw=null
code kaw=null
code jaw=null
code xaw=null
code vaw=null
code maw=null
code Qaw=null
code Waw=null
code Eaw=null
code Zaw=null
code Uaw=null
code Iaw=null
code Paw=null
code Aaw=null
code Daw=null
code Haw=null
code Jaw=null
code Kaw=null
code Law=null
code Xaw=null
code Caw=null
code Vaw=null
code Baw=null
code Naw=null
code Maw=null
code wnw=null
code unw=null
code rnw=null
real snw=0.
boolean tnw=false
integer inw=0
string Snw=null
timer cnw=null
playercolor onw=null
unit Onw=null
unit lnw=null
unit bnw=null
unit ynw=null
group pnw=null
group enw=null
destructable qnw=null
destructable anw=null
unit nnw=null
item dnw=null
item fnw=null
item Rnw=null
destructable Tnw=null
unit Ynw=null
unit Gnw=null
group gnw=null
unit hnw=null
unit Fnw=null
timer knw=null
unit jnw=null
destructable xnw=null
group vnw=null
trigger mnw=null
rect Qnw=null
lightning Wnw=null
timer Enw=null
destructable Znw=null
unit Unw=null
unit Inw=null
unit Pnw=null
item Anw=null
item Dnw=null
item Hnw=null
item Jnw=null
unit Knw=null
unit Lnw=null
group Xnw=null
group Cnw=null
unit Vnw=null
unit Bnw=null
unit Nnw=null
unit Mnw=null
timer wdw=null
destructable udw=null
unit rdw=null
unit sdw=null
unit tdw=null
unit idw=null
item Sdw=null
item cdw=null
item odw=null
unit Odw=null
rect ldw=null
camerasetup bdw=null
unit ydw=null
unit pdw=null
unit edw=null
unit qdw=null
destructable adw=null
item ndw=null
item ddw=null
group fdw=null
item Rdw=null
rect Tdw=null
effect Ydw=null
trigger Gdw=null
unit gdw=null
widget hdw=null
group Fdw=null
group kdw=null
unit jdw=null
timer xdw=null
unit vdw=null
destructable mdw=null
group Qdw=null
trigger Wdw=null
rect Edw=null
lightning Zdw=null
unit Udw=null
unit Idw=null
unit Pdw=null
unit Adw=null
unit Ddw=null
endglobals
native UnitAlive takes unit id_1 returns boolean
function rfw takes trigger Mdw,playerunitevent wfw returns nothing
local integer ufw=0
loop
exitwhen ufw==bj_MAX_PLAYER_SLOTS
call TriggerRegisterPlayerUnitEvent(Mdw,Player(ufw),wfw,null)
set ufw=ufw+1
endloop
endfunction
function AKw takes nothing returns nothing
set WS=CreateTrigger()
call rfw(WS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddAction(WS,Viw)
call TriggerAddCondition(WS,Condition(Biw))
endfunction
function ALw takes nothing returns nothing
set XS=CreateTrigger()
call DisableTrigger(XS)
call TriggerRegisterTimerEventPeriodic(XS,0.02)
call TriggerAddAction(XS,fSw)
endfunction
function ANw takes nothing returns nothing
set xc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(xc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(xc,Condition(gow))
call TriggerAddAction(xc,how)
endfunction
function kRw takes trigger GRw,string gRw,boolean hRw returns nothing
local integer FRw=0
loop
exitwhen FRw==bj_MAX_PLAYERS-1
call TriggerRegisterPlayerChatEvent(GRw,Player(FRw),gRw,hRw)
set FRw=FRw+1
endloop
endfunction
function AVw takes nothing returns nothing
set ec=CreateTrigger()
call kRw(ec,"clotofenergy",false)
call TriggerAddAction(ec,Zcw)
endfunction
function AWw takes nothing returns nothing
set li=CreateTrigger()
call TriggerRegisterPlayerChatEvent(li,Player(0),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(1),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(2),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(3),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(4),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(5),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(6),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(7),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(8),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(9),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(10),"aweather",false)
call TriggerRegisterPlayerChatEvent(li,Player(11),"aweather",false)
call TriggerAddCondition(li,Condition(erw))
call TriggerAddAction(li,qrw)
endfunction
function Akw takes nothing returns nothing
set Kt=CreateTrigger()
call DisableTrigger(Kt)
call TriggerRegisterTimerEventPeriodic(Kt,1.00)
call TriggerAddAction(Kt,kww_3329)
endfunction
function B3w takes nothing returns nothing
set uo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(uo,EVENT_PLAYER_UNIT_SPELL_FINISH)
call TriggerAddCondition(uo,Condition(GOw))
call TriggerAddAction(uo,gOw)
endfunction
function B4w takes nothing returns nothing
set no=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(no,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(no,Condition(olw))
call TriggerAddAction(no,Olw)
endfunction
function B5w takes nothing returns nothing
set Eo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Eo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Eo,Condition(Klw))
call TriggerAddAction(Eo,Llw)
endfunction
function BAw takes nothing returns nothing
set SS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(SS,Player(0),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(1),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(2),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(3),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(4),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(5),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(6),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(7),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(8),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(9),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(10),"watertint",false)
call TriggerRegisterPlayerChatEvent(SS,Player(11),"watertint",false)
call TriggerAddCondition(SS,Condition(ktw))
call TriggerAddAction(SS,jtw)
endfunction
function BDw takes nothing returns nothing
set oS=CreateTrigger()
call kRw(oS,"gate",false)
call TriggerAddAction(oS,Atw)
endfunction
function BHw takes nothing returns nothing
set aS=CreateTrigger()
call rfw(aS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(aS,Condition(biw))
call TriggerAddAction(aS,yiw)
endfunction
function BNw takes nothing returns nothing
set vc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(vc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(vc,Condition(Fow))
call TriggerAddAction(vc,kow)
endfunction
function BUw takes nothing returns nothing
set Ii=CreateTrigger()
call kRw(Ii,"ai ",false)
call TriggerAddCondition(Ii,Condition(Tsw))
call TriggerAddAction(Ii,Ysw)
endfunction
function Bmw takes nothing returns nothing
set ii=CreateTrigger()
call TriggerRegisterPlayerChatEvent(ii,Player(0),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(1),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(2),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(3),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(4),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(5),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(6),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(7),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(8),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(9),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(10),"elevator",false)
call TriggerRegisterPlayerChatEvent(ii,Player(11),"elevator",false)
call TriggerAddAction(ii,srw)
endfunction
function CJw takes nothing returns nothing
set kS=CreateTrigger()
call rfw(kS,EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
call TriggerAddCondition(kS,Condition(miw))
call TriggerAddAction(kS,Qiw)
endfunction
function CQw takes nothing returns nothing
set oi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(oi,Player(0),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(1),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(2),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(3),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(4),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(5),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(6),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(7),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(8),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(9),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(10),"weather",false)
call TriggerRegisterPlayerChatEvent(oi,Player(11),"weather",false)
call TriggerAddCondition(oi,Condition(brw))
call TriggerAddAction(oi,yrw)
endfunction
function CXw takes nothing returns nothing
set sc=CreateTrigger()
call TriggerRegisterPlayerChatEvent(sc,Player(0),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(1),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(2),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(3),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(4),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(5),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(6),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(7),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(8),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(9),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(10),"item",false)
call TriggerRegisterPlayerChatEvent(sc,Player(11),"item",false)
call TriggerAddCondition(sc,Condition(VSw))
call TriggerAddAction(sc,BSw)
endfunction
function CZw takes nothing returns nothing
set xi=CreateTrigger()
call TriggerAddAction(xi,Mrw)
endfunction
function Cxw takes nothing returns nothing
set wi=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(wi,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(wi,Condition(quw))
call TriggerAddAction(wi,auw)
endfunction
function DUw takes nothing returns nothing
set Ui=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Ui,Player(0),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(1),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(2),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(3),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(4),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(5),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(6),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(7),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(8),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(9),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(10),"max",false)
call TriggerRegisterPlayerChatEvent(Ui,Player(11),"max",false)
call TriggerAddCondition(Ui,Condition(esw))
call TriggerAddAction(Ui,qsw)
endfunction
function DZw takes nothing returns nothing
set ki=CreateTrigger()
call TriggerRegisterEnterRectSimple(ki,GetEntireMapRect())
call TriggerRegisterAnyUnitEventBJ(ki,EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
call TriggerRegisterAnyUnitEventBJ(ki,EVENT_PLAYER_UNIT_UPGRADE_FINISH)
call TriggerAddAction(ki,Vrw)
endfunction
function E0u takes nothing returns nothing
set aO=CreateTrigger()
call rfw(aO,EVENT_PLAYER_UNIT_SPELL_ENDCAST)
call TriggerAddCondition(aO,Condition(vyw))
call TriggerAddAction(aO,myw)
endfunction
function E2w takes nothing returns nothing
set Go=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Go,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Go,Condition(Rlw))
call TriggerAddAction(Go,Tlw)
endfunction
function E6w takes nothing returns nothing
set Ao=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Ao,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Ao,Condition(obw))
call TriggerAddAction(Ao,Obw)
endfunction
function ECw takes nothing returns nothing
set Oc=CreateTrigger()
call kRw(Oc,"focus",false)
call TriggerAddAction(Oc,qcw)
endfunction
function EPw takes nothing returns nothing
set Bi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Bi,Player(0),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(1),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(2),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(3),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(4),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(5),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(6),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(7),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(8),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(9),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(10),"uidb",true)
call TriggerRegisterPlayerChatEvent(Bi,Player(11),"uidb",true)
call TriggerAddAction(Bi,otw)
endfunction
function EZw takes nothing returns nothing
set hi=CreateTrigger()
call TriggerAddAction(hi,Xrw)
endfunction
function F2w takes nothing returns nothing
set Yo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Yo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Yo,Condition(dlw))
call TriggerAddAction(Yo,flw)
endfunction
function F6w takes nothing returns nothing
set Po=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Po,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Po,Condition(tbw))
call TriggerAddAction(Po,ibw)
endfunction
function F8w takes nothing returns nothing
set SO=CreateTrigger()
call rfw(SO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(SO,Condition(ryw))
call TriggerAddAction(SO,syw)
endfunction
function FIw takes nothing returns nothing
set Di=CreateTrigger()
call kRw(Di,"@",false)
call TriggerAddCondition(Di,Condition(Zsw))
call TriggerAddAction(Di,Usw)
endfunction
function GKw takes nothing returns nothing
set QS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(QS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(QS,Condition(Kiw))
call TriggerAddAction(QS,Liw)
endfunction
function GNw takes nothing returns nothing
set kc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(kc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(kc,Condition(Row))
call TriggerAddAction(kc,Tow)
endfunction
function GUw takes nothing returns nothing
set Ei=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Ei,Player(0),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(1),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(2),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(3),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(4),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(5),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(6),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(7),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(8),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(9),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(10),"@missile",true)
call TriggerRegisterPlayerChatEvent(Ei,Player(11),"@missile",true)
call TriggerAddAction(Ei,bsw)
endfunction
function H0u takes nothing returns nothing
set nO=CreateTrigger()
call rfw(nO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(nO,Condition(Qyw))
call TriggerAddAction(nO,Wyw)
endfunction
function H2w takes nothing returns nothing
set go=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(go,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(go,Condition(Ylw))
call TriggerAddAction(go,Glw)
endfunction
function H7w takes nothing returns nothing
set Vo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Vo,EVENT_PLAYER_UNIT_SPELL_FINISH)
call TriggerAddCondition(Vo,Condition(Wbw))
call TriggerAddAction(Vo,Ebw)
endfunction
function HBw takes nothing returns nothing
set Yc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Yc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Yc,Condition(oow))
call TriggerAddAction(Yc,Oow)
endfunction
function HHw takes nothing returns nothing
set eS=CreateTrigger()
call rfw(eS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(eS,Condition(ciw))
call TriggerAddAction(eS,oiw)
endfunction
function HMw takes nothing returns nothing
set Dc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Dc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Dc,Condition(Mow))
call TriggerAddAction(Dc,wOw)
endfunction
function HPw takes nothing returns nothing
set Ni=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Ni,Player(0),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(1),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(2),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(3),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(4),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(5),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(6),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(7),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(8),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(9),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(10),"expgain",false)
call TriggerRegisterPlayerChatEvent(Ni,Player(11),"expgain",false)
call TriggerAddCondition(Ni,Condition(btw))
call TriggerAddAction(Ni,ytw)
endfunction
function HXw takes nothing returns nothing
set rc=CreateTrigger()
call TriggerRegisterPlayerChatEvent(rc,Player(0),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(1),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(2),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(3),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(4),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(5),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(6),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(7),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(8),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(9),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(10),"item",false)
call TriggerRegisterPlayerChatEvent(rc,Player(11),"item",false)
call TriggerAddCondition(rc,Condition(LSw))
call TriggerAddAction(rc,XSw)
endfunction
function I7w takes nothing returns nothing
set Co=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Co,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Co,Condition(mbw))
call TriggerAddAction(Co,Qbw)
endfunction
function IHw takes nothing returns nothing
set pS=CreateTrigger()
call rfw(pS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(pS,Condition(iiw))
call TriggerAddAction(pS,Siw)
endfunction
function IJw takes nothing returns nothing
set FS=CreateTrigger()
call rfw(FS,EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
call TriggerAddCondition(FS,Condition(xiw))
call TriggerAddAction(FS,viw)
endfunction
function IMw takes nothing returns nothing
set Ac=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Ac,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Ac,Condition(Bow))
call TriggerAddAction(Ac,Now)
endfunction
function J4w takes nothing returns nothing
set ao=CreateTrigger()
call TriggerRegisterTimerEventPeriodic(ao,0.01)
call TriggerAddAction(ao,clw)
endfunction
function J6w takes nothing returns nothing
set Do=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Do,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Do,Condition(ybw))
call TriggerAddAction(Do,pbw)
endfunction
function J9u takes nothing returns nothing
set yO=CreateTrigger()
call rfw(yO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(yO,Condition(Ryw))
call TriggerAddAction(yO,Tyw)
endfunction
function JLw takes nothing returns nothing
set CS=CreateTrigger()
call DisableTrigger(CS)
call TriggerRegisterTimerEventPeriodic(CS,0.02)
call TriggerAddAction(CS,TSw)
endfunction
function JZw takes nothing returns nothing
set ji=CreateTrigger()
call TriggerRegisterTimerEvent(ji,0.50,false)
call TriggerAddAction(ji,Brw)
endfunction
function Jxw takes nothing returns nothing
set Mt=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Mt,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Mt,Condition(puw))
call TriggerAddAction(Mt,euw)
endfunction
function K5w takes nothing returns nothing
set Wo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Wo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Wo,Condition(Hlw))
call TriggerAddAction(Wo,Jlw)
endfunction
function K8w takes nothing returns nothing
set oO=CreateTrigger()
call rfw(oO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(oO,Condition(oyw))
call TriggerAddAction(oO,Oyw)
endfunction
function KKw takes nothing returns nothing
set ES=CreateTrigger()
call rfw(ES,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddAction(ES,Niw)
call TriggerAddCondition(ES,Condition(Miw))
endfunction
function Kkw takes nothing returns nothing
set Lt=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Lt,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Lt,Condition(jww_3247))
call TriggerAddAction(Lt,xww_4392)
endfunction
function L1w takes nothing returns nothing
set oo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(oo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(oo,Condition(IOw))
call TriggerAddAction(oo,POw)
endfunction
function L3w takes nothing returns nothing
set wo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(wo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(wo,Condition(TOw))
call TriggerAddAction(wo,YOw)
endfunction
function L7w takes nothing returns nothing
set Bo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Bo,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Bo,Condition(Zbw))
call TriggerAddAction(Bo,Ubw)
endfunction
function LCw takes nothing returns nothing
set lc=CreateTrigger()
call kRw(lc,"stickygrenade",false)
call TriggerAddAction(lc,fcw)
endfunction
function LEw takes nothing returns nothing
set yi=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(yi,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(yi,Condition(Frw))
call TriggerAddAction(yi,krw)
endfunction
function LHw takes nothing returns nothing
set qS=CreateTrigger()
call rfw(qS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(qS,Condition(Oiw))
call TriggerAddAction(qS,liw)
endfunction
function M1w takes nothing returns nothing
set Oo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Oo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Oo,Condition(AOw))
call TriggerAddAction(Oo,DOw)
endfunction
function M6w takes nothing returns nothing
set Ho=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Ho,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Ho,Condition(abw))
call TriggerAddAction(Ho,nbw)
endfunction
function M7w takes nothing returns nothing
set Mo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Mo,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Mo,Condition(Abw))
call TriggerAddAction(Mo,Dbw)
endfunction
function MMw takes nothing returns nothing
set Hc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Hc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Hc,Condition(uOw))
call TriggerAddAction(Hc,rOw)
endfunction
function N2w takes nothing returns nothing
set Fo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Fo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Fo,Condition(Flw))
call TriggerAddAction(Fo,klw)
endfunction
function NBw takes nothing returns nothing
set Gc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Gc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Gc,Condition(low))
call TriggerAddAction(Gc,bow)
endfunction
function NEw takes nothing returns nothing
set pi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(pi,Player(0),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(1),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(2),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(3),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(4),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(5),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(6),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(7),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(8),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(9),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(10),"terrain",false)
call TriggerRegisterPlayerChatEvent(pi,Player(11),"terrain",false)
call TriggerAddCondition(pi,Condition(jrw))
call TriggerAddAction(pi,xrw)
endfunction
function O1w takes nothing returns nothing
set so=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(so,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(so,Condition(kOw))
call TriggerAddAction(so,jOw)
endfunction
function O5w takes nothing returns nothing
set xo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(xo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(xo,Condition(Qlw))
call TriggerAddAction(xo,Wlw)
endfunction
function O6w takes nothing returns nothing
set Uo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Uo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Uo,Condition(Vlw))
call TriggerAddAction(Uo,Blw)
endfunction
function P1w takes nothing returns nothing
set co=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(co,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(co,Condition(ZOw))
call TriggerAddAction(co,UOw)
endfunction
function P3w takes nothing returns nothing
set Mc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Mc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Mc,Condition(fOw))
call TriggerAddAction(Mc,ROw)
endfunction
function P4w takes nothing returns nothing
set qo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(qo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(qo,Condition(slw))
call TriggerAddAction(qo,tlw)
endfunction
function PAw takes nothing returns nothing
set tS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(tS,Player(0),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(1),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(2),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(3),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(4),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(5),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(6),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(7),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(8),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(9),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(10),"timer",false)
call TriggerRegisterPlayerChatEvent(tS,Player(11),"timer",false)
call TriggerAddAction(tS,gtw)
endfunction
function Pmw takes nothing returns nothing
set ti=CreateTrigger()
call TriggerRegisterPlayerChatEvent(ti,Player(0),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(1),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(2),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(3),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(4),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(5),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(6),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(7),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(8),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(9),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(10),"set",false)
call TriggerRegisterPlayerChatEvent(ti,Player(11),"set",false)
call TriggerAddCondition(ti,Condition(Buw))
call TriggerAddAction(ti,Nuw)
endfunction
function Pxw takes nothing returns nothing
set Nt=CreateTrigger()
call DisableTrigger(Nt)
call TriggerRegisterTimerEventPeriodic(Nt,1.00)
call TriggerAddAction(Nt,yuw)
endfunction
function Q3w takes nothing returns nothing
set Nc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Nc,EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(Nc,Condition(nOw))
call TriggerAddAction(Nc,dOw)
endfunction
function QAw takes nothing returns nothing
set sS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(sS,Player(0),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(1),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(2),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(3),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(4),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(5),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(6),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(7),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(8),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(9),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(10),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(11),"on",false)
call TriggerRegisterPlayerChatEvent(sS,Player(0),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(1),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(2),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(3),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(4),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(5),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(6),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(7),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(8),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(9),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(10),"off",false)
call TriggerRegisterPlayerChatEvent(sS,Player(11),"off",false)
call TriggerAddAction(sS,Gtw)
endfunction
function QPw takes nothing returns nothing
set Vi=CreateTrigger()
call rfw(Vi,EVENT_PLAYER_UNIT_PICKUP_ITEM)
call TriggerAddAction(Vi,ctw)
endfunction
function Qkw takes nothing returns nothing
set Jt=CreateTrigger()
call TriggerAddAction(Jt,gww_3004)
endfunction
function RVw takes nothing returns nothing
set yc=CreateTrigger()
call kRw(yc,"boosterjets",false)
call TriggerAddAction(yc,kcw)
endfunction
function RZw takes nothing returns nothing
set Yi=CreateTrigger()
call TriggerRegisterTimerEventSingle(Yi,0.06)
call TriggerAddAction(Yi,Arw)
endfunction
function S0u takes nothing returns nothing
set pO=CreateTrigger()
call rfw(pO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(pO,Condition(Gyw))
call TriggerAddAction(pO,gyw)
endfunction
function S3w takes nothing returns nothing
set Kc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Kc,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Kc,Condition(iOw))
call TriggerAddAction(Kc,SOw)
endfunction
function SBw takes nothing returns nothing
set nc=CreateTrigger()
call kRw(nc,"nocooldown",false)
call TriggerAddAction(nc,Vcw)
endfunction
function SKw takes nothing returns nothing
set xS=CreateTrigger()
call rfw(xS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(xS,Condition(Ziw))
call TriggerAddAction(xS,Uiw)
endfunction
function SQw takes nothing returns nothing
set ci=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ci,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(ci,Condition(orw))
call TriggerAddAction(ci,Orw)
endfunction
function SZw takes nothing returns nothing
set qi=CreateTrigger()
call TriggerRegisterTimerEventSingle(qi,0.11)
call TriggerAddAction(qi,Qrw)
endfunction
function Svw takes nothing returns nothing
set ri=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ri,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(ri,Condition(fuw))
call TriggerAddAction(ri,Ruw)
endfunction
function T7w takes nothing returns nothing
set Lo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Lo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Lo,Condition(Fbw))
call TriggerAddAction(Lo,kbw)
endfunction
function T8w takes nothing returns nothing
set iO=CreateTrigger()
call rfw(iO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(iO,Condition(wyw))
call TriggerAddAction(iO,uyw)
endfunction
function TXw takes nothing returns nothing
set MS=CreateTrigger()
call kRw(MS,"mechanical",false)
call TriggerAddAction(MS,ZSw)
endfunction
function UIw takes nothing returns nothing
set Hi=CreateTrigger()
call kRw(Hi,"equip",false)
call TriggerAddAction(Hi,Asw)
endfunction
function ULw takes nothing returns nothing
set LS=CreateTrigger()
call TriggerAddAction(LS,nSw)
endfunction
function UXw takes nothing returns nothing
set uc=CreateTrigger()
call kRw(uc,"worker",false)
call TriggerAddAction(uc,JSw)
endfunction
function UZw takes nothing returns nothing
set Fi=CreateTrigger()
call TriggerRegisterTimerEvent(Fi,0.01,false)
call TriggerAddAction(Fi,Crw)
endfunction
function V0u takes nothing returns nothing
set dO=CreateTrigger()
call TriggerAddAction(dO,Eyw)
endfunction
function V7w takes nothing returns nothing
set No=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(No,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(No,Condition(Ibw))
call TriggerAddAction(No,Pbw)
endfunction
function VIw takes nothing returns nothing
set Ji=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Ji,Player(0),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(1),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(2),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(3),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(4),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(5),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(6),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(7),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(8),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(9),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(10),"@",false)
call TriggerRegisterPlayerChatEvent(Ji,Player(11),"@",false)
call TriggerAddCondition(Ji,Condition(Jsw))
call TriggerAddAction(Ji,Ksw)
endfunction
function VKw takes nothing returns nothing
set ZS=CreateTrigger()
call rfw(ZS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddAction(ZS,wSw)
call TriggerAddCondition(ZS,Condition(uSw))
endfunction
function Vkw takes nothing returns nothing
set Xt=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Xt,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Xt,Condition(vww_4228))
call TriggerAddAction(Xt,mww_3493)
endfunction
function W5w takes nothing returns nothing
set Qo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Qo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddAction(Qo,Dlw)
endfunction
function W7w takes nothing returns nothing
set Xo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Xo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Xo,Condition(xbw))
call TriggerAddAction(Xo,vbw)
endfunction
function WEw takes nothing returns nothing
set bi=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(bi,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(bi,Condition(grw))
call TriggerAddAction(bi,hrw)
endfunction
function WLw takes nothing returns nothing
set KS=CreateTrigger()
call TriggerAddAction(KS,aSw)
endfunction
function WMw takes nothing returns nothing
set Pc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Pc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Pc,Condition(Cow))
call TriggerAddAction(Pc,Vow)
endfunction
function WNw takes nothing returns nothing
set jc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(jc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(jc,Condition(Yow))
call TriggerAddAction(jc,Gow)
endfunction
function WVw takes nothing returns nothing
set pc=CreateTrigger()
call kRw(pc,"heroaltertime",false)
call TriggerAddAction(pc,mcw)
endfunction
function X2w takes nothing returns nothing
set ho=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ho,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(ho,Condition(glw))
call TriggerAddAction(ho,hlw)
endfunction
function XAw takes nothing returns nothing
set iS=CreateTrigger()
call kRw(iS,"roll",false)
call TriggerAddCondition(iS,Condition(htw))
call TriggerAddAction(iS,Ftw)
endfunction
function XLw takes nothing returns nothing
set VS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(VS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(VS,Condition(YSw))
call TriggerAddAction(VS,GSw)
endfunction
function XVw takes nothing returns nothing
set qc=CreateTrigger()
call kRw(qc,"translocation",false)
call TriggerAddAction(qc,Acw)
endfunction
function Y3w takes nothing returns nothing
set Cc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Cc,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Cc,Condition(bOw))
call TriggerAddAction(Cc,yOw)
endfunction
function Y4w takes nothing returns nothing
set po=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(po,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(po,Condition(VOw))
call TriggerAddAction(po,BOw)
endfunction
function YHw takes nothing returns nothing
set lS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(lS,Player(0),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(1),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(2),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(3),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(4),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(5),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(6),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(7),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(8),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(9),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(10),"time",false)
call TriggerRegisterPlayerChatEvent(lS,Player(11),"time",false)
call TriggerAddCondition(lS,Condition(Mtw))
call TriggerAddAction(lS,wiw)
endfunction
function YMw takes nothing returns nothing
set Zc=CreateTrigger()
call TriggerRegisterTimerEventPeriodic(Zc,0.01)
call TriggerAddAction(Zc,How)
endfunction
function a3w takes nothing returns nothing
set Xc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Xc,EVENT_PLAYER_UNIT_SPELL_ENDCAST)
call TriggerAddCondition(Xc,Condition(OOw))
call TriggerAddAction(Xc,lOw)
endfunction
function aJw takes nothing returns nothing
set TS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(TS,Player(0),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(1),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(2),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(3),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(4),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(5),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(6),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(7),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(8),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(9),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(10),"settranslocationpoint",true)
call TriggerRegisterPlayerChatEvent(TS,Player(11),"settranslocationpoint",true)
call TriggerAddAction(TS,Tiw)
endfunction
function aLw takes nothing returns nothing
set AS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(AS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(AS,Condition(OSw))
call TriggerAddAction(AS,lSw)
endfunction
function aZw takes nothing returns nothing
set Ri=CreateTrigger()
call TriggerRegisterTimerEventSingle(Ri,0.05)
call TriggerAddAction(Ri,Irw)
endfunction
function b0u takes nothing returns nothing
set eO=CreateTrigger()
call rfw(eO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(eO,Condition(hyw))
call TriggerAddAction(eO,Fyw)
endfunction
function b8w takes nothing returns nothing
set sO=CreateTrigger()
call rfw(sO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(sO,Condition(Vbw))
call TriggerAddAction(sO,Bbw)
endfunction
function bJw takes nothing returns nothing
set fS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(fS,Player(0),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(1),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(2),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(3),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(4),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(5),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(6),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(7),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(8),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(9),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(10),"bh",true)
call TriggerRegisterPlayerChatEvent(fS,Player(11),"bh",true)
call TriggerAddCondition(fS,Condition(niw))
call TriggerAddAction(fS,diw)
endfunction
function c4w takes nothing returns nothing
set lo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(lo,EVENT_PLAYER_UNIT_ATTACKED)
call TriggerAddCondition(lo,Condition(HOw))
call TriggerAddAction(lo,JOw)
endfunction
function c7w takes nothing returns nothing
set Jo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Jo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Jo,Condition(Rbw))
call TriggerAddAction(Jo,Tbw)
endfunction
function cAw takes nothing returns nothing
set wS=CreateTrigger()
call kRw(wS,"delete attack",true)
call TriggerAddAction(wS,ntw)
endfunction
function cIw takes nothing returns nothing
set Pi=CreateTrigger()
call rfw(Pi,EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(Pi,Condition(hsw))
call TriggerAddAction(Pi,Fsw)
endfunction
function cUw takes nothing returns nothing
set mi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(mi,Player(0),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(1),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(2),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(3),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(4),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(5),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(6),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(7),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(8),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(9),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(10),"afx",false)
call TriggerRegisterPlayerChatEvent(mi,Player(11),"afx",false)
call TriggerAddCondition(mi,Condition(tsw))
call TriggerAddAction(mi,isw)
endfunction
function cjw takes nothing returns nothing
set Vt=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Vt,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Vt,Condition(Eww_493))
call TriggerAddAction(Vt,Zww_2307)
endfunction
function d2w takes nothing returns nothing
set To=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(To,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(To,Condition(alw))
call TriggerAddAction(To,nlw)
endfunction
function d5w takes nothing returns nothing
set mo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(mo,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(mo,Condition(Ulw))
call TriggerAddAction(mo,Ilw)
endfunction
function d9u takes nothing returns nothing
set lO=CreateTrigger()
call rfw(lO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(lO,Condition(qyw))
call TriggerAddAction(lO,ayw)
endfunction
function dBw takes nothing returns nothing
set fc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(fc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(fc,Condition(uow))
call TriggerAddAction(fc,row)
endfunction
function dCw takes nothing returns nothing
set cc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(cc,EVENT_PLAYER_UNIT_SPELL_FINISH)
call TriggerAddCondition(cc,Condition(ocw))
call TriggerAddAction(cc,Ocw)
endfunction
function dKw takes nothing returns nothing
set mS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(mS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(mS,Condition(Diw))
call TriggerAddAction(mS,Hiw)
endfunction
function dMw takes nothing returns nothing
set Ec=CreateTrigger()
call TriggerRegisterTimerEventPeriodic(Ec,0.01)
call TriggerAddAction(Ec,Aow)
endfunction
function dZw takes nothing returns nothing
set Ti=CreateTrigger()
call TriggerRegisterTimerEventSingle(Ti,0.30)
call TriggerAddAction(Ti,Prw)
endfunction
function e1w takes nothing returns nothing
set io=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(io,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(io,Condition(mOw))
call TriggerAddAction(io,QOw)
endfunction
function e2w takes nothing returns nothing
set Ro=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Ro,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Ro,Condition(elw))
call TriggerAddAction(Ro,qlw)
endfunction
function e6w takes nothing returns nothing
set Io=CreateTrigger()
call TriggerRegisterTimerEvent(Io,1.00,true)
call TriggerAddAction(Io,Mlw)
endfunction
function e7w takes nothing returns nothing
set Ko=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Ko,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Ko,Condition(Ybw))
call TriggerAddAction(Ko,Gbw)
endfunction
function eCw takes nothing returns nothing
set Sc=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Sc,Player(0),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(1),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(2),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(3),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(4),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(5),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(6),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(7),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(8),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(9),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(10),"frostblast",false)
call TriggerRegisterPlayerChatEvent(Sc,Player(11),"frostblast",false)
call TriggerAddAction(Sc,ccw)
endfunction
function eKw takes nothing returns nothing
set vS=CreateTrigger()
call rfw(vS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(vS,Condition(Iiw))
call TriggerAddAction(vS,Piw)
endfunction
function eZw takes nothing returns nothing
set fi=CreateTrigger()
call TriggerRegisterTimerEventSingle(fi,0.04)
call TriggerAddAction(fi,Urw)
endfunction
function fJw takes nothing returns nothing
set YS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(YS,EVENT_PLAYER_UNIT_SELL)
call TriggerAddAction(YS,Giw)
endfunction
function fLw takes nothing returns nothing
set DS=CreateTrigger()
call TriggerAddAction(DS,bSw)
endfunction
function fUw takes nothing returns nothing
set Wi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Wi,Player(0),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(1),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(2),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(3),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(4),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(5),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(6),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(7),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(8),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(9),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(10),"remove afx",true)
call TriggerRegisterPlayerChatEvent(Wi,Player(11),"remove afx",true)
call TriggerAddAction(Wi,Osw)
endfunction
function gCw takes nothing returns nothing
set oc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(oc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(oc,Condition(lcw))
call TriggerAddAction(oc,bcw)
endfunction
function gJw takes nothing returns nothing
set GS=CreateTrigger()
call rfw(GS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(GS,Condition(giw))
call TriggerAddAction(GS,hiw)
endfunction
function h3w takes nothing returns nothing
set Vc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Vc,EVENT_PLAYER_UNIT_SPELL_ENDCAST)
call TriggerAddCondition(Vc,Condition(pOw))
call TriggerAddAction(Vc,eOw)
endfunction
function hBw takes nothing returns nothing
set Rc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Rc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Rc,Condition(sow))
call TriggerAddAction(Rc,tow)
endfunction
function hHw takes nothing returns nothing
set bS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(bS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(bS,Condition(uiw))
call TriggerAddAction(bS,riw)
endfunction
function hPw takes nothing returns nothing
set Ci=CreateTrigger()
call kRw(Ci,"idod ",false)
call TriggerAddCondition(Ci,Condition(itw))
call TriggerAddAction(Ci,Stw)
endfunction
function hZw takes nothing returns nothing
set Gi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Gi,Player(0),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(1),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(2),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(3),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(4),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(5),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(6),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(7),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(8),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(9),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(10),"",false)
call TriggerRegisterPlayerChatEvent(Gi,Player(11),"",false)
call TriggerAddCondition(Gi,Condition(Drw))
call TriggerAddAction(Gi,Hrw)
endfunction
function i5w takes nothing returns nothing
set jo=CreateTrigger()
call rfw(jo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(jo,Condition(vlw))
call TriggerAddAction(jo,mlw)
endfunction
function i8w takes nothing returns nothing
set uO=CreateTrigger()
call rfw(uO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(uO,Condition(Kbw))
call TriggerAddAction(uO,Lbw)
endfunction
function iCw takes nothing returns nothing
set ic=CreateTrigger()
call TriggerRegisterPlayerChatEvent(ic,Player(0),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(1),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(2),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(3),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(4),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(5),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(6),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(7),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(8),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(9),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(10),"item",false)
call TriggerRegisterPlayerChatEvent(ic,Player(11),"item",false)
call TriggerAddCondition(ic,Condition(rcw))
call TriggerAddAction(ic,scw)
endfunction
function iNw takes nothing returns nothing
set hc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(hc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(hc,Condition(eow))
call TriggerAddAction(hc,qow)
endfunction
function iVw takes nothing returns nothing
set bc=CreateTrigger()
call kRw(bc,"etherealform",false)
call TriggerAddAction(bc,Gcw)
endfunction
function j4w takes nothing returns nothing
set eo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(eo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(eo,Condition(wlw))
call TriggerAddAction(eo,ulw)
endfunction
function j9u takes nothing returns nothing
set bO=CreateTrigger()
call rfw(bO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(bO,Condition(nyw))
call TriggerAddAction(bO,dyw)
endfunction
function jBw takes nothing returns nothing
set Tc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Tc,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Tc,Condition(iow))
call TriggerAddAction(Tc,Sow)
endfunction
function jDw takes nothing returns nothing
set cS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(cS,Player(0),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(1),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(2),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(3),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(4),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(5),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(6),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(7),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(8),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(9),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(10),"sky",false)
call TriggerRegisterPlayerChatEvent(cS,Player(11),"sky",false)
call TriggerAddCondition(cS,Condition(xtw))
call TriggerAddAction(cS,vtw)
endfunction
function jUw takes nothing returns nothing
set Zi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Zi,Player(0),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(1),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(2),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(3),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(4),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(5),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(6),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(7),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(8),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(9),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(10),"add",false)
call TriggerRegisterPlayerChatEvent(Zi,Player(11),"add",false)
call TriggerAddCondition(Zi,Condition(ysw))
call TriggerAddAction(Zi,psw)
endfunction
function k0u takes nothing returns nothing
set qO=CreateTrigger()
call rfw(qO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(qO,Condition(jyw))
call TriggerAddAction(qO,xyw)
endfunction
function kJw takes nothing returns nothing
set gS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(gS,EVENT_PLAYER_UNIT_CONSTRUCT_FINISH)
call TriggerAddAction(gS,Fiw)
endfunction
function kLw takes nothing returns nothing
set HS=CreateTrigger()
call DisableTrigger(HS)
call TriggerRegisterTimerEventPeriodic(HS,0.02)
call TriggerAddAction(HS,pSw)
endfunction
function kMw takes nothing returns nothing
set Uc=CreateTrigger()
call TriggerAddCondition(Uc,Condition(Jow))
call TriggerAddAction(Uc,Kow)
endfunction
function kXw takes nothing returns nothing
set wc=CreateTrigger()
call kRw(wc,"building",false)
call TriggerAddAction(wc,PSw)
endfunction
function kZw takes nothing returns nothing
set gi=CreateTrigger()
call TriggerRegisterTimerEventSingle(gi,1.00)
call TriggerAddAction(gi,Jrw)
endfunction
function l2w takes nothing returns nothing
set fo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(fo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(fo,Condition(ylw))
call TriggerAddAction(fo,plw)
endfunction
function l4w takes nothing returns nothing
set bo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(bo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(bo,Condition(KOw))
call TriggerAddAction(bo,LOw)
endfunction
function lMw takes nothing returns nothing
set Qc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Qc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Qc,Condition(Qow))
call TriggerAddAction(Qc,Wow)
endfunction
function lZw takes nothing returns nothing
set ni=CreateTrigger()
call TriggerRegisterTimerEventSingle(ni,0.09)
call TriggerAddAction(ni,Erw)
endfunction
function mHw takes nothing returns nothing
set yS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(yS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(yS,Condition(siw))
call TriggerAddAction(yS,tiw)
endfunction
function mJw takes nothing returns nothing
set hS=CreateTrigger()
call rfw(hS,EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
call TriggerAddCondition(hS,Condition(kiw))
call TriggerAddAction(hS,jiw)
endfunction
function mxw takes nothing returns nothing
set Bt=CreateTrigger()
call DisableTrigger(Bt)
call TriggerRegisterTimerEventPeriodic(Bt,0.03)
call TriggerAddAction(Bt,Ouw)
endfunction
function n8w takes nothing returns nothing
set tO=CreateTrigger()
call rfw(tO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(tO,Condition(Nbw))
call TriggerAddAction(tO,Mbw)
endfunction
function nAw takes nothing returns nothing
set rS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(rS,Player(0),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(1),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(2),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(3),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(4),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(5),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(6),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(7),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(8),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(9),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(10),"rules",false)
call TriggerRegisterPlayerChatEvent(rS,Player(11),"rules",false)
call TriggerAddAction(rS,Ytw)
endfunction
function nHw takes nothing returns nothing
set OS=CreateTrigger()
call TriggerRegisterPlayerChatEvent(OS,Player(0),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(1),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(2),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(3),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(4),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(5),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(6),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(7),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(8),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(9),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(10),"tree",false)
call TriggerRegisterPlayerChatEvent(OS,Player(11),"tree",false)
call TriggerAddAction(OS,Ntw)
endfunction
function nIw takes nothing returns nothing
set Ai=CreateTrigger()
call kRw(Ai,"'",false)
call TriggerAddCondition(Ai,Condition(vsw))
call TriggerAddAction(Ai,msw)
endfunction
function nPw takes nothing returns nothing
set Xi=CreateTrigger()
call kRw(Xi,"ic ",false)
call TriggerAddCondition(Xi,Condition(utw))
call TriggerAddAction(Xi,rtw)
endfunction
function o8w takes nothing returns nothing
set rO=CreateTrigger()
call rfw(rO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(rO,Condition(Xbw))
call TriggerAddAction(rO,Cbw)
endfunction
function oJw takes nothing returns nothing
set dS=CreateTrigger()
call TriggerRegisterPlayerEventLeave(dS,Player(0))
call TriggerRegisterPlayerEventLeave(dS,Player(1))
call TriggerRegisterPlayerEventLeave(dS,Player(2))
call TriggerRegisterPlayerEventLeave(dS,Player(3))
call TriggerRegisterPlayerEventLeave(dS,Player(4))
call TriggerRegisterPlayerEventLeave(dS,Player(5))
call TriggerRegisterPlayerEventLeave(dS,Player(6))
call TriggerRegisterPlayerEventLeave(dS,Player(7))
call TriggerRegisterPlayerEventLeave(dS,Player(8))
call TriggerRegisterPlayerEventLeave(dS,Player(9))
call TriggerRegisterPlayerEventLeave(dS,Player(10))
call TriggerRegisterPlayerEventLeave(dS,Player(11))
call TriggerAddAction(dS,aiw)
endfunction
function oPw takes nothing returns nothing
set Li=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Li,Player(0),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(1),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(2),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(3),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(4),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(5),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(6),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(7),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(8),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(9),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(10),"item",false)
call TriggerRegisterPlayerChatEvent(Li,Player(11),"item",false)
call TriggerAddCondition(Li,Condition(Bsw))
call TriggerAddAction(Li,Nsw)
endfunction
function oZw takes nothing returns nothing
set ai=CreateTrigger()
call TriggerRegisterTimerEventSingle(ai,0.03)
call TriggerAddAction(ai,Wrw)
endfunction
function p3w takes nothing returns nothing
set Lc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Lc,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Lc,Condition(cOw))
call TriggerAddAction(Lc,oOw)
endfunction
function p4w takes nothing returns nothing
set yo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(yo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(yo,Condition(XOw))
call TriggerAddAction(yo,COw)
endfunction
function p5w takes nothing returns nothing
set vo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(vo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(vo,Condition(Elw))
call TriggerAddAction(vo,Zlw)
endfunction
function pJw takes nothing returns nothing
set RS=CreateTrigger()
call TriggerRegisterTimerExpireEventBJ(RS,xw)
call TriggerAddAction(RS,fiw)
endfunction
function pLw takes nothing returns nothing
set PS=CreateTrigger()
call DisableTrigger(PS)
call TriggerRegisterTimerEventPeriodic(PS,0.02)
call TriggerAddAction(PS,oSw)
endfunction
function pMw takes nothing returns nothing
set Wc=CreateTrigger()
call TriggerAddCondition(Wc,Condition(Eow))
call TriggerAddAction(Wc,Zow)
endfunction
function pUw takes nothing returns nothing
set Qi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Qi,Player(0),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(1),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(2),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(3),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(4),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(5),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(6),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(7),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(8),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(9),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(10),"remove sfx",true)
call TriggerRegisterPlayerChatEvent(Qi,Player(11),"remove sfx",true)
call TriggerAddAction(Qi,csw)
endfunction
function qNw takes nothing returns nothing
set Fc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Fc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Fc,Condition(dow))
call TriggerAddAction(Fc,fow)
endfunction
function qWw takes nothing returns nothing
set Oi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(Oi,Player(0),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(1),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(2),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(3),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(4),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(5),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(6),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(7),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(8),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(9),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(10),"weather",false)
call TriggerRegisterPlayerChatEvent(Oi,Player(11),"weather",false)
call TriggerAddAction(Oi,prw)
endfunction
function r3w takes nothing returns nothing
set Jc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Jc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Jc,Condition(sOw))
call TriggerAddAction(Jc,tOw)
endfunction
function r5w takes nothing returns nothing
set ko=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ko,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(ko,Condition(jlw))
call TriggerAddAction(ko,xlw)
endfunction
function r8w takes nothing returns nothing
set wO=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(wO,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(wO,Condition(Hbw))
call TriggerAddAction(wO,Jbw)
endfunction
function rAw takes nothing returns nothing
set Mi=CreateTrigger()
call TriggerRegisterPlayerUnitEventSimple(Mi,Player(bj_PLAYER_NEUTRAL_VICTIM),EVENT_PLAYER_UNIT_SELL)
call TriggerAddCondition(Mi,Condition(ptw))
call TriggerAddAction(Mi,etw)
endfunction
function rjw takes nothing returns nothing
set Ct=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Ct,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(Ct,Condition(Qww_1531))
call TriggerAddAction(Ct,Www_2062)
endfunction
function s2w takes nothing returns nothing
set do=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(do,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(do,Condition(llw))
call TriggerAddAction(do,blw)
endfunction
function s9u takes nothing returns nothing
set OO=CreateTrigger()
call rfw(OO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(OO,Condition(byw))
call TriggerAddAction(OO,yyw)
endfunction
function sLw takes nothing returns nothing
set IS=CreateTrigger()
call TriggerAddAction(IS,tSw)
endfunction
function sPw takes nothing returns nothing
set Ki=CreateTrigger()
call kRw(Ki,"*",false)
call TriggerAddCondition(Ki,Condition(Xsw))
call TriggerAddAction(Ki,Csw)
endfunction
function sXw takes nothing returns nothing
set BS=CreateTrigger()
call kRw(BS,"undead",false)
call TriggerAddAction(BS,kSw)
endfunction
function t6w takes nothing returns nothing
set Zo=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Zo,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Zo,Condition(Xlw))
call TriggerAddAction(Zo,Clw)
endfunction
function tJw takes nothing returns nothing
set nS=CreateTrigger()
call TriggerAddCondition(nS,Condition(piw))
call TriggerAddAction(nS,eiw)
endfunction
function tMw takes nothing returns nothing
set mc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(mc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(mc,Condition(vow))
call TriggerAddAction(mc,mow)
endfunction
function tZw takes nothing returns nothing
set ei=CreateTrigger()
call TriggerRegisterPlayerChatEvent(ei,Player(0),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(1),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(2),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(3),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(4),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(5),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(6),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(7),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(8),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(9),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(10),"height",false)
call TriggerRegisterPlayerChatEvent(ei,Player(11),"height",false)
call TriggerAddCondition(ei,Condition(vrw))
call TriggerAddAction(ei,mrw)
endfunction
function uNw takes nothing returns nothing
set gc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(gc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(gc,Condition(yow))
call TriggerAddAction(gc,pow)
endfunction
function uUw takes nothing returns nothing
set vi=CreateTrigger()
call TriggerRegisterPlayerChatEvent(vi,Player(0),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(1),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(2),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(3),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(4),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(5),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(6),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(7),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(8),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(9),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(10),"sfx",false)
call TriggerRegisterPlayerChatEvent(vi,Player(11),"sfx",false)
call TriggerAddCondition(vi,Condition(usw))
call TriggerAddAction(vi,rsw)
endfunction
function uvw takes nothing returns nothing
set ui=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ui,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(ui,Condition(nuw))
call TriggerAddAction(ui,duw)
endfunction
function v8w takes nothing returns nothing
set cO=CreateTrigger()
call rfw(cO,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(cO,Condition(tyw))
call TriggerAddAction(cO,iyw)
endfunction
function vLw takes nothing returns nothing
set JS=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(JS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(JS,Condition(eSw))
call TriggerAddAction(JS,qSw)
endfunction
function vMw takes nothing returns nothing
set Ic=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Ic,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Ic,Condition(Low))
call TriggerAddAction(Ic,Xow)
endfunction
function vmw takes nothing returns nothing
set si=CreateTrigger()
call DisableTrigger(si)
call TriggerRegisterTimerEventPeriodic(si,0.03)
call TriggerAddAction(si,Xuw)
endfunction
function w1w takes nothing returns nothing
set ro=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(ro,EVENT_PLAYER_UNIT_SPELL_FINISH)
call TriggerAddCondition(ro,Condition(hOw))
call TriggerAddAction(ro,FOw)
endfunction
function wBw takes nothing returns nothing
set ac=CreateTrigger()
call kRw(ac,"immunitytoprolongedlossofcontrol",false)
call TriggerAddAction(ac,Kcw)
endfunction
function wCw takes nothing returns nothing
set tc=CreateTrigger()
call TriggerRegisterPlayerChatEvent(tc,Player(0),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(1),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(2),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(3),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(4),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(5),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(6),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(7),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(8),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(9),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(10),"item",false)
call TriggerRegisterPlayerChatEvent(tc,Player(11),"item",false)
call TriggerAddCondition(tc,Condition(MSw))
call TriggerAddAction(tc,wcw)
endfunction
function wKw takes nothing returns nothing
set jS=CreateTrigger()
call rfw(jS,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(jS,Condition(Wiw))
call TriggerAddAction(jS,Eiw)
endfunction
function wLw takes nothing returns nothing
set US=CreateTrigger()
call rfw(US,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddAction(US,rSw)
call TriggerAddCondition(US,Condition(sSw))
endfunction
function wQw takes nothing returns nothing
set Si=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Si,EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
call TriggerAddCondition(Si,Condition(trw))
call TriggerAddAction(Si,irw)
endfunction
function x1w takes nothing returns nothing
set So=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(So,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(So,Condition(WOw))
call TriggerAddAction(So,EOw)
endfunction
function x3w takes nothing returns nothing
set Bc=CreateTrigger()
call TriggerRegisterAnyUnitEventBJ(Bc,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Bc,Condition(qOw))
call TriggerAddAction(Bc,aOw)
endfunction
function yAw takes nothing returns nothing
set uS=CreateTrigger()
call kRw(uS,"@move",true)
call TriggerAddAction(uS,Rtw)
endfunction
function yBw takes nothing returns nothing
set dc=CreateTrigger()
call kRw(dc,"heromagearmor",false)
call TriggerAddAction(dc,wow)
endfunction
function yXw takes nothing returns nothing
set NS=CreateTrigger()
call kRw(NS,"tauren",false)
call TriggerAddAction(NS,mSw)
endfunction
function yZw takes nothing returns nothing
set di=CreateTrigger()
call TriggerRegisterTimerEventSingle(di,0.02)
call TriggerAddAction(di,Zrw)
endfunction
function B0u takes nothing returns nothing
call Qkw()
call Akw()
call Kkw()
call Vkw()
call rjw()
call cjw()
call mxw()
call Pxw()
call Jxw()
call Cxw()
call uvw()
call Svw()
call vmw()
call Pmw()
call Bmw()
call wQw()
call SQw()
call CQw()
call qWw()
call AWw()
call WEw()
call LEw()
call NEw()
call tZw()
call SZw()
call oZw()
call lZw()
call yZw()
call eZw()
call aZw()
call dZw()
call RZw()
call hZw()
call kZw()
call EZw()
call UZw()
call DZw()
call JZw()
call CZw()
call uUw()
call cUw()
call pUw()
call fUw()
call GUw()
call jUw()
call DUw()
call BUw()
call cIw()
call nIw()
call FIw()
call UIw()
call VIw()
call sPw()
call oPw()
call nPw()
call hPw()
call QPw()
call EPw()
call HPw()
call rAw()
call cAw()
call yAw()
call nAw()
call QAw()
call PAw()
call XAw()
call BAw()
call jDw()
call BDw()
call nHw()
call YHw()
call hHw()
call mHw()
call IHw()
call HHw()
call LHw()
call BHw()
call tJw()
call oJw()
call bJw()
call pJw()
call aJw()
call fJw()
call gJw()
call kJw()
call mJw()
call IJw()
call CJw()
call wKw()
call SKw()
call eKw()
call dKw()
call GKw()
call AKw()
call KKw()
call VKw()
call wLw()
call sLw()
call pLw()
call aLw()
call fLw()
call kLw()
call vLw()
call WLw()
call ULw()
call ALw()
call JLw()
call XLw()
call sXw()
call yXw()
call TXw()
call kXw()
call UXw()
call HXw()
call CXw()
call wCw()
call iCw()
call eCw()
call dCw()
call gCw()
call ECw()
call LCw()
call iVw()
call RVw()
call WVw()
call AVw()
call XVw()
call wBw()
call SBw()
call yBw()
call dBw()
call hBw()
call jBw()
call HBw()
call NBw()
call uNw()
call iNw()
call qNw()
call GNw()
call WNw()
call ANw()
call BNw()
call tMw()
call lMw()
call pMw()
call dMw()
call YMw()
call kMw()
call vMw()
call WMw()
call IMw()
call HMw()
call MMw()
call r3w()
call S3w()
call p3w()
call a3w()
call Y3w()
call h3w()
call x3w()
call Q3w()
call P3w()
call L3w()
call B3w()
call w1w()
call O1w()
call e1w()
call x1w()
call P1w()
call L1w()
call M1w()
call c4w()
call l4w()
call p4w()
call Y4w()
call j4w()
call P4w()
call J4w()
call B4w()
call s2w()
call l2w()
call e2w()
call d2w()
call F2w()
call E2w()
call H2w()
call X2w()
call N2w()
call r5w()
call i5w()
call O5w()
call p5w()
call d5w()
call W5w()
call K5w()
call B5w()
call t6w()
call O6w()
call e6w()
call F6w()
call E6w()
call J6w()
call M6w()
call c7w()
call e7w()
call T7w()
call W7w()
call I7w()
call H7w()
call L7w()
call V7w()
call M7w()
call r8w()
call i8w()
call o8w()
call b8w()
call n8w()
call T8w()
call F8w()
call v8w()
call K8w()
call s9u()
call d9u()
call j9u()
call J9u()
call S0u()
call b0u()
call k0u()
call E0u()
call H0u()
call V0u()
endfunction
function rRw takes nothing returns integer
local integer uRw=LoadInteger(i,S,0)
if uRw==0 then
set uRw=t+1
set t=uRw
else
call SaveInteger(i,S,0,LoadInteger(i,S,uRw))
call RemoveSavedInteger(i,S,uRw)
endif
return uRw
endfunction
function MTw takes nothing returns integer
local integer NTw
if ob[0]==0 then
set cb=cb+1
set NTw=cb
else
set NTw=ob[0]
set ob[0]=ob[ob[0]]
endif
return NTw
endfunction
function uYw takes nothing returns integer
local integer wYw=MTw()
set ub[wYw]=rRw()
set rb[wYw]=0
set sb[wYw]=0
set tb[wYw]=0
set ib[wYw]=0
set Sb[wYw]=0
return wYw
endfunction
function FFw takes nothing returns nothing
local trigger hFw=CreateTrigger()
call rfw(hFw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(hFw,Filter(Sww_1704))
set hFw=CreateTrigger()
call rfw(hFw,EVENT_PLAYER_UNIT_SPELL_CAST)
call TriggerAddCondition(hFw,Filter(cww_2673))
call TriggerAddCondition(R,Filter(oww_3655))
set ol=uYw()
set ib[ol]=6
set ll=rRw()
set Ol=rRw()
set bl=rRw()
set yl=rRw()
set hFw=null
endfunction
function A1w takes nothing returns boolean
if GetSpellAbilityId()==1093683288 then
return true
endif
return false
endfunction
function A3w takes nothing returns boolean
if GetSpellAbilityId()==1093683784 then
return true
endif
return false
endfunction
function A4w takes nothing returns nothing
call IssueImmediateOrderBJ(GetEnumUnit(),"stop")
endfunction
function eRw takes unit bRw,real yRw returns nothing
local timer pRw=CreateTimer()
call SaveUnitHandle(c,GetHandleId(pRw),o,bRw)
call TimerStart(pRw,yRw,false,Zww)
set pRw=null
set pRw=null
endfunction
function A6w takes nothing returns nothing
local unit I6w=GetEnumUnit()
local unit P6w=CreateUnitAtLoc(Player(15),1747995215,GetUnitLoc(I6w),270.)
call UnitAddAbility(P6w,1093679411)
call SetUnitAbilityLevel(P6w,1093679411,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093679410))
call IssueTargetOrder(P6w,"cyclone",I6w)
call eRw(P6w,3.)
set I6w=null
set P6w=null
set I6w=null
set P6w=null
endfunction
function AAw takes nothing returns boolean
return SubString(GetEventPlayerChatString(),0,4)=="roll"
endfunction
function DFr takes string AFr returns integer
return StringHash(AFr)
endfunction
function JYu takes hashtable PYu,integer AYu,integer DYu,boolean HYu returns nothing
call SaveBoolean(PYu,AYu,DYu,HYu)
endfunction
function LTu takes hashtable HTu,integer JTu,integer KTu returns boolean
return LoadBoolean(HTu,JTu,KTu)
endfunction
function QTu takes hashtable xTu,integer vTu,integer mTu returns boolean
return HaveSavedInteger(xTu,vTu,mTu)
endfunction
function oZu takes integer SZu returns string
local integer cZu=SZu
if cZu==0 then
return"|cffADADADtrace|r"
elseif cZu==1 then
return"|cff2685DCdebug|r"
elseif cZu==2 then
return"|cffFFCC00info|r"
elseif cZu==3 then
return"|cffF47E3Ewarning|r"
else
return"|cffFB2700error|r"
endif
endfunction
function pZu takes player OZu,integer lZu,string bZu returns nothing
local string yZu
if Ea<=lZu then
set yZu=oZu(lZu)+" - "+bZu
call DisplayTimedTextToPlayer(OZu,0.,0.,Za,yZu)
endif
endfunction
function QZu takes string mZu returns nothing
call pZu(ea,4,mZu)
endfunction
function iYu takes hashtable rYu,integer sYu,integer tYu returns integer
return LoadInteger(rYu,sYu,tYu)
endfunction
function jTu takes hashtable hTu,integer FTu,integer kTu returns boolean
return HaveSavedBoolean(hTu,FTu,kTu)
endfunction
function qUu takes real eUu returns integer
return R2I(eUu)
endfunction
function uGu takes hashtable BYu,integer NYu,integer MYu,integer wGu returns nothing
call SaveInteger(BYu,NYu,MYu,wGu)
endfunction
function unu takes string wnu returns nothing
endfunction
function Mau takes string Aau,string Dau returns nothing
local integer Hau
local string Jau
local integer Kau
local integer Lau
local string Xau
local integer Cau
local integer Vau
local string Bau
local string Nau
set w3[MM]=Dau
set MM=MM+1
if Ie then
call unu("ERROR: "+Aau)
else
if not te then
set Hau=DFr(Aau)
if QTu(re,ue,Hau)then
if iYu(re,ue,Hau)+we<qe then
set Bau=Aau
set Jau=""
set Kau=MM
set Lau=0
loop
set Kau=Kau-1
set Lau=Lau+1
exitwhen Lau>20
exitwhen Kau<0
set Jau=Jau+"
   "+w3[Kau]
endloop
call QZu(Bau+Jau)
call uGu(re,ue,Hau,qUu(qe))
call JYu(re,ue,Hau,false)
elseif jTu(re,ue,Hau)then
if not LTu(re,ue,Hau)then
call QZu("|cffFF3A29Excessive repeating errors are being omitted")
call JYu(re,ue,Hau,true)
endif
else
call QZu("|cffFF3A29Excessive repeating errors are being omitted")
call JYu(re,ue,Hau,true)
endif
else
call uGu(re,ue,Hau,qUu(qe))
set Nau="Message: "+Aau
set Xau=""
set Cau=MM
set Vau=0
loop
set Cau=Cau-1
set Vau=Vau+1
exitwhen Vau>20
exitwhen Cau<0
set Xau=Xau+"
   "+w3[Cau]
endloop
call QZu(Nau+Xau)
endif
endif
set se=Aau
call I2S(1/0)
endif
set MM=MM-1
endfunction
function L3s takes integer K3s returns nothing
endfunction
function N3s takes integer X3s,integer C3s,integer V3s,integer B3s returns nothing
call L3s(X3s)
set pP[X3s]=C3s
set eP[X3s]=V3s
set qP[X3s]=B3s
endfunction
function ivS takes string svS returns integer
local integer tvS
set w3[MM]=svS
set MM=MM+1
if GF==0 then
if gF<32768 then
set gF=gF+1
set tvS=gF
set hF[tvS]=1310
else
call Mau("Out of memory: Could not create LLEntry.","when calling error in LinkedList, line 411")
set tvS=0
endif
else
set GF=GF-1
set tvS=YF[GF]
set hF[tvS]=1310
endif
set MM=MM-1
return tvS
endfunction
function A3s takes integer E3s,integer Z3s,integer U3s,string I3s returns integer
local integer P3s
set w3[MM]=I3s
set MM=MM+1
set P3s=ivS("when calling alloc_LLEntry in LinkedList, line 416")
call N3s(P3s,E3s,Z3s,U3s)
set MM=MM-1
return P3s
endfunction
function Jqo takes integer Pqo,integer Aqo,string Dqo returns nothing
local integer Hqo
set w3[MM]=Dqo
set MM=MM+1
set Hqo=A3s(Aqo,eP[RP[Pqo]],RP[Pqo],"when calling new_LLEntry in LinkedList, line 40")
set qP[eP[RP[Pqo]]]=Hqo
set eP[RP[Pqo]]=Hqo
set TP[Pqo]=TP[Pqo]+1
set MM=MM-1
endfunction
function Cqo takes integer Kqo,integer Lqo,string Xqo returns nothing
set w3[MM]=Xqo
set MM=MM+1
if WF[Kqo]==0 then
if Kqo==0 then
call Mau("Nullpointer exception when calling LinkedList.add","when calling error in LinkedList, line 38")
else
call Mau("Called LinkedList.add on invalid object.","when calling error in LinkedList, line 38")
endif
endif
call Jqo(Kqo,Lqo,"when calling add in LinkedList, line 38")
set MM=MM-1
endfunction
function Yao takes integer fao,integer Rao,string Tao returns nothing
set w3[MM]=Tao
set MM=MM+1
set VJ[fao]=0
call Cqo(CJ[fao],Rao,"when calling add in ScmdDataTypes, line 1394")
set VJ[fao]=VJ[fao]+1
set MM=MM-1
endfunction
function Fao takes integer Gao,integer gao,string hao returns nothing
set w3[MM]=hao
set MM=MM+1
if Tx[Gao]==0 then
if Gao==0 then
call Mau("Nullpointer exception when calling BuiltinData.setArgumentsTypes","when calling error in ScmdDataTypes, line 1391")
else
call Mau("Called BuiltinData.setArgumentsTypes on invalid object.","when calling error in ScmdDataTypes, line 1391")
endif
endif
call Yao(Gao,gao,"when calling setArgumentsTypes in ScmdDataTypes, line 1391")
set MM=MM-1
endfunction
function cAs takes integer iAs,integer SAs returns integer
return iYu(ge,iAs,SAs)
endfunction
function ZEc takes integer mEc,integer QEc,string WEc returns integer
local integer EEc
set w3[MM]=WEc
set MM=MM+1
if dh[mEc]==0 then
if mEc==0 then
call Mau("Nullpointer exception when calling HashList.count","when calling error in HashList, line 15")
else
call Mau("Called HashList.count on invalid object.","when calling error in HashList, line 15")
endif
endif
set EEc=cAs(mEc,QEc)
set MM=MM-1
return EEc
endfunction
function bAs takes integer oAs,integer OAs,string lAs returns nothing
set w3[MM]=lAs
set MM=MM+1
call uGu(ge,oAs,OAs,ZEc(oAs,OAs,"when calling count in HashList, line 19")+1)
set MM=MM-1
endfunction
function AEc takes integer UEc,integer IEc,string PEc returns nothing
set w3[MM]=PEc
set MM=MM+1
if dh[UEc]==0 then
if UEc==0 then
call Mau("Nullpointer exception when calling HashList.incrOccurences","when calling error in HashList, line 18")
else
call Mau("Called HashList.incrOccurences on invalid object.","when calling error in HashList, line 18")
endif
endif
call bAs(UEc,IEc,"when calling incrOccurences in HashList, line 18")
set MM=MM-1
endfunction
function Xno takes integer Jno,integer Kno,string Lno returns nothing
set w3[MM]=Lno
set MM=MM+1
call uGu(Ge,Jno,TU[Jno],Kno)
call AEc(Jno,Kno,"when calling incrOccurences in HashList, line 28")
set TU[Jno]=TU[Jno]+1
set MM=MM-1
endfunction
function KAs takes integer JAs returns integer
return TU[JAs]
endfunction
function yZc takes integer OZc,string lZc returns integer
local integer bZc
set w3[MM]=lZc
set MM=MM+1
if dh[OZc]==0 then
if OZc==0 then
call Mau("Nullpointer exception when calling HashList.size","when calling error in HashList, line 67")
else
call Mau("Called HashList.size on invalid object.","when calling error in HashList, line 67")
endif
endif
set bZc=KAs(OZc)
set MM=MM-1
return bZc
endfunction
function Eno takes integer mno,integer Qno,string Wno returns nothing
set w3[MM]=Wno
set MM=MM+1
if ZEc(mno,Qno,"when calling count in HashSet, line 11")<=0 then
call uGu(he,mno,Qno,yZc(mno,"when calling size in HashSet, line 12"))
call Xno(mno,Qno,"when calling add in HashSet, line 13")
endif
set MM=MM-1
endfunction
function Nno takes integer Cno,integer Vno,string Bno returns nothing
set w3[MM]=Bno
set MM=MM+1
if dh[Cno]==0 then
if Cno==0 then
call Mau("Nullpointer exception when calling HashList.add","when calling error in HashList, line 25")
else
call Mau("Called HashList.add on invalid object.","when calling error in HashList, line 25")
endif
endif
if dh[Cno]<=826 then
call Xno(Cno,Vno,"when calling add in HashList, line 25")
else
call Eno(Cno,Vno,"when calling add in HashList, line 25")
endif
set MM=MM-1
endfunction
function MAs takes integer CAs,integer VAs,string BAs returns boolean
local boolean NAs
set w3[MM]=BAs
set MM=MM+1
set NAs=ZEc(CAs,VAs,"when calling count in HashList, line 88")>0
set MM=MM-1
return NAs
endfunction
function FZc takes integer YZc,integer GZc,string gZc returns boolean
local boolean hZc
set w3[MM]=gZc
set MM=MM+1
if dh[YZc]==0 then
if YZc==0 then
call Mau("Nullpointer exception when calling HashList.has","when calling error in HashList, line 87")
else
call Mau("Called HashList.has on invalid object.","when calling error in HashList, line 87")
endif
endif
set hZc=MAs(YZc,GZc,"when calling has in HashList, line 87")
set MM=MM-1
return hZc
endfunction
function qHs takes integer bHs,integer yHs,string pHs returns boolean
local boolean eHs
set w3[MM]=pHs
set MM=MM+1
set eHs=FZc(GU[bHs],yHs,"when calling has in HashMap, line 88")
set MM=MM-1
return eHs
endfunction
function TUc takes integer nUc,integer dUc,string fUc returns boolean
local boolean RUc
set w3[MM]=fUc
set MM=MM+1
if Yh[nUc]==0 then
if nUc==0 then
call Mau("Nullpointer exception when calling IterableMap.hasKey","when calling error in HashMap, line 87")
else
call Mau("Called IterableMap.hasKey on invalid object.","when calling error in HashMap, line 87")
endif
endif
set RUc=qHs(nUc,dUc,"when calling hasKey in HashMap, line 87")
set MM=MM-1
return RUc
endfunction
function P5S takes integer U5S,integer I5S returns boolean
return QTu(VR,U5S,I5S)
endfunction
function hio takes integer Tio,integer Yio,string Gio returns boolean
local boolean gio
set w3[MM]=Gio
set MM=MM+1
if Yh[Tio]==0 then
if Tio==0 then
call Mau("Nullpointer exception when calling Table.hasInt","when calling error in Table, line 9")
else
call Mau("Called Table.hasInt on invalid object.","when calling error in Table, line 9")
endif
endif
set gio=P5S(Tio,Yio)
set MM=MM-1
return gio
endfunction
function YDs takes integer dDs,integer fDs,string RDs returns boolean
local boolean TDs
set w3[MM]=RDs
set MM=MM+1
set TDs=hio(dDs,fDs,"when calling hasInt in HashMap, line 14")
set MM=MM-1
return TDs
endfunction
function PZc takes integer EZc,integer ZZc,string UZc returns boolean
local boolean IZc
set w3[MM]=UZc
set MM=MM+1
if Yh[EZc]==0 then
if EZc==0 then
call Mau("Nullpointer exception when calling HashMap.has","when calling error in HashMap, line 13")
else
call Mau("Called HashMap.has on invalid object.","when calling error in HashMap, line 13")
endif
endif
set IZc=YDs(EZc,ZZc,"when calling has in HashMap, line 13")
set MM=MM-1
return IZc
endfunction
function S6S takes integer s6S,integer t6S,integer i6S returns nothing
call uGu(VR,s6S,t6S,i6S)
endfunction
function sSo takes integer Mio,integer wSo,integer uSo,string rSo returns nothing
set w3[MM]=rSo
set MM=MM+1
if Yh[Mio]==0 then
if Mio==0 then
call Mau("Nullpointer exception when calling Table.saveInt","when calling error in Table, line 42")
else
call Mau("Called Table.saveInt on invalid object.","when calling error in Table, line 42")
endif
endif
call S6S(Mio,wSo,uSo)
set MM=MM-1
endfunction
function kDs takes integer GDs,integer gDs,integer hDs,string FDs returns nothing
set w3[MM]=FDs
set MM=MM+1
if not PZc(GDs,gDs,"when calling has in HashMap, line 18")then
set YU[GDs]=YU[GDs]+1
endif
call sSo(GDs,gDs,hDs,"when calling saveInt in HashMap, line 20")
set MM=MM-1
endfunction
function SHs takes integer rHs,integer sHs,integer tHs,string iHs returns nothing
set w3[MM]=iHs
set MM=MM+1
call kDs(rHs,sHs,tHs,"when calling put in HashMap, line 60")
if not TUc(rHs,sHs,"when calling hasKey in HashMap, line 61")then
call Nno(GU[rHs],sHs,"when calling add in HashMap, line 62")
endif
set MM=MM-1
endfunction
function KZc takes integer AZc,integer DZc,integer HZc,string JZc returns nothing
set w3[MM]=JZc
set MM=MM+1
if Yh[AZc]==0 then
if AZc==0 then
call Mau("Nullpointer exception when calling HashMap.put","when calling error in HashMap, line 17")
else
call Mau("Called HashMap.put on invalid object.","when calling error in HashMap, line 17")
endif
endif
if Yh[AZc]<=1656 then
call kDs(AZc,DZc,HZc,"when calling put in HashMap, line 17")
else
call SHs(AZc,DZc,HZc,"when calling put in HashMap, line 17")
endif
set MM=MM-1
endfunction
function DTu takes hashtable ITu,integer PTu,integer ATu returns boolean
return HaveSavedString(ITu,PTu,ATu)
endfunction
function V5S takes integer X5S,integer C5S returns boolean
return DTu(VR,X5S,C5S)
endfunction
function Dio takes integer Uio,integer Iio,string Pio returns boolean
local boolean Aio
set w3[MM]=Pio
set MM=MM+1
if Yh[Uio]==0 then
if Uio==0 then
call Mau("Nullpointer exception when calling Table.hasString","when calling error in Table, line 18")
else
call Mau("Called Table.hasString on invalid object.","when calling error in Table, line 18")
endif
endif
set Aio=V5S(Uio,Iio)
set MM=MM-1
return Aio
endfunction
function TGu takes hashtable nGu,integer dGu,integer fGu,string RGu returns nothing
call SaveStr(nGu,dGu,fGu,RGu)
endfunction
function k6S takes integer g6S,integer h6S,string F6S returns nothing
call TGu(VR,g6S,h6S,F6S)
endfunction
function WSo takes integer xSo,integer vSo,string mSo,string QSo returns nothing
set w3[MM]=QSo
set MM=MM+1
if Yh[xSo]==0 then
if xSo==0 then
call Mau("Nullpointer exception when calling Table.saveString","when calling error in Table, line 60")
else
call Mau("Called Table.saveString on invalid object.","when calling error in Table, line 60")
endif
endif
call k6S(xSo,vSo,mSo)
set MM=MM-1
endfunction
function hYu takes hashtable YYu,integer GYu,integer gYu returns string
return LoadStr(YYu,GYu,gYu)
endfunction
function G6S takes integer T6S,integer Y6S returns string
return hYu(VR,T6S,Y6S)
endfunction
function jSo takes integer gSo,integer hSo,string FSo returns string
local string kSo
set w3[MM]=FSo
set MM=MM+1
if Yh[gSo]==0 then
if gSo==0 then
call Mau("Nullpointer exception when calling Table.loadString","when calling error in Table, line 57")
else
call Mau("Called Table.loadString on invalid object.","when calling error in Table, line 57")
endif
endif
set kSo=G6S(gSo,hSo)
set MM=MM-1
return kSo
endfunction
function Rvr takes string nvr,string dvr returns integer
local integer fvr
set w3[MM]=dvr
set MM=MM+1
set fvr=DFr(nvr)
loop
exitwhen not true
if Dio(YT,fvr,"when calling hasString in TypeCasting, line 26")then
if jSo(YT,fvr,"when calling loadString in TypeCasting, line 27")==nvr then
exitwhen true
endif
else
call WSo(YT,fvr,nvr,"when calling saveString in TypeCasting, line 30")
exitwhen true
endif
set fvr=fvr+1
endloop
set MM=MM-1
return fvr
endfunction
function DfS takes integer QfS,string WfS,integer EfS returns boolean
local integer ZfS=DFr(WfS)
local integer UfS=iYu(AM[QfS],ZfS,-1)
local boolean IfS=false
local integer PfS=0
local integer AfS=UfS-1
loop
exitwhen PfS>AfS
if hYu(AM[QfS],ZfS,PfS)==WfS then
call uGu(DM[QfS],ZfS,PfS,EfS)
set IfS=true
exitwhen true
endif
set PfS=PfS+1
endloop
if not IfS then
call uGu(AM[QfS],ZfS,-1,UfS+1)
call TGu(AM[QfS],ZfS,UfS,WfS)
call uGu(DM[QfS],ZfS,UfS,EfS)
endif
return not IfS
endfunction
function tqo takes integer Meo,string wqo,integer uqo,string rqo returns boolean
local boolean sqo
set w3[MM]=rqo
set MM=MM+1
if mm[Meo]==0 then
if Meo==0 then
call Mau("Nullpointer exception when calling StringHashMap.put","when calling error in Utility, line 90")
else
call Mau("Called StringHashMap.put on invalid object.","when calling error in Utility, line 90")
endif
endif
set sqo=DfS(Meo,wqo,uqo)
set MM=MM-1
return sqo
endfunction
function G8r takes integer f8r,string R8r,string T8r,string Y8r returns nothing
set w3[MM]=Y8r
set MM=MM+1
call tqo(vd,R8r,f8r,"when calling put in ScmdReader, line 48")
call KZc(md,f8r,Rvr(T8r,"when calling stringToIndex in ScmdReader, line 49"),"when calling put in ScmdReader, line 49")
set MM=MM-1
endfunction
function Htc takes string Atc returns integer
local integer Dtc
set w3[MM]=Atc
set MM=MM+1
if Vx==0 then
if Bx<32768 then
set Bx=Bx+1
set Dtc=Bx
set Nx[Dtc]=1243
else
call Mau("Out of memory: Could not create InputStreamProcessor_registerInputStreamProcessor_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 121")
set Dtc=0
endif
else
set Vx=Vx-1
set Dtc=Cx[Vx]
set Nx[Dtc]=1243
endif
set MM=MM-1
return Dtc
endfunction
function Ltc takes string Jtc returns integer
local integer Ktc
set w3[MM]=Jtc
set MM=MM+1
if Vx==0 then
if Bx<32768 then
set Bx=Bx+1
set Ktc=Bx
set Nx[Ktc]=1244
else
call Mau("Out of memory: Could not create InputStreamProcessor_registerInputStreamProcessor_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 122")
set Ktc=0
endif
else
set Vx=Vx-1
set Ktc=Cx[Vx]
set Nx[Ktc]=1244
endif
set MM=MM-1
return Ktc
endfunction
function Mtc takes string Btc returns integer
local integer Ntc
set w3[MM]=Btc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Ntc=kj
set jj[Ntc]=1076
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 124")
set Ntc=0
endif
else
set Fj=Fj-1
set Ntc=hj[Fj]
set jj[Ntc]=1076
endif
set MM=MM-1
return Ntc
endfunction
function S2u takes nothing returns integer
return id
endfunction
function Vtc takes string Xtc returns integer
local integer Ctc
set w3[MM]=Xtc
set MM=MM+1
if Vx==0 then
if Bx<32768 then
set Bx=Bx+1
set Ctc=Bx
set Nx[Ctc]=1245
else
call Mau("Out of memory: Could not create InputStreamProcessor_registerInputStreamProcessor_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 123")
set Ctc=0
endif
else
set Vx=Vx-1
set Ctc=Cx[Vx]
set Nx[Ctc]=1245
endif
set MM=MM-1
return Ctc
endfunction
function CVt takes integer XVt returns nothing
endfunction
function BVt takes integer VVt returns nothing
call CVt(VVt)
endfunction
function qAs takes integer yAs,integer pAs,string eAs returns nothing
set w3[MM]=eAs
set MM=MM+1
call uGu(ge,yAs,pAs,ZEc(yAs,pAs,"when calling count in HashList, line 22")-1)
set MM=MM-1
endfunction
function KEc takes integer DEc,integer HEc,string JEc returns nothing
set w3[MM]=JEc
set MM=MM+1
if dh[DEc]==0 then
if DEc==0 then
call Mau("Nullpointer exception when calling HashList.decrOccurences","when calling error in HashList, line 21")
else
call Mau("Called HashList.decrOccurences on invalid object.","when calling error in HashList, line 21")
endif
endif
call qAs(DEc,HEc,"when calling decrOccurences in HashList, line 21")
set MM=MM-1
endfunction
function GAs takes integer TAs,integer YAs returns integer
return iYu(Ge,TAs,YAs)
endfunction
function TZc takes integer nZc,integer dZc,string fZc returns integer
local integer RZc
set w3[MM]=fZc
set MM=MM+1
if dh[nZc]==0 then
if nZc==0 then
call Mau("Nullpointer exception when calling HashList.get","when calling error in HashList, line 79")
else
call Mau("Called HashList.get on invalid object.","when calling error in HashList, line 79")
endif
endif
set RZc=GAs(nZc,dZc)
set MM=MM-1
return RZc
endfunction
function RAs takes integer aAs,integer nAs,integer dAs,string fAs returns nothing
set w3[MM]=fAs
set MM=MM+1
call KEc(aAs,TZc(aAs,nAs,"when calling get in HashList, line 33"),"when calling decrOccurences in HashList, line 33")
call uGu(Ge,aAs,nAs,dAs)
call AEc(aAs,dAs,"when calling incrOccurences in HashList, line 35")
set MM=MM-1
endfunction
function BEc takes integer LEc,integer XEc,integer CEc,string VEc returns nothing
set w3[MM]=VEc
set MM=MM+1
if dh[LEc]==0 then
if LEc==0 then
call Mau("Nullpointer exception when calling HashList.set","when calling error in HashList, line 32")
else
call Mau("Called HashList.set on invalid object.","when calling error in HashList, line 32")
endif
endif
call RAs(LEc,XEc,CEc,"when calling set in HashList, line 32")
set MM=MM-1
endfunction
function FXS takes integer gXS,string hXS returns nothing
set w3[MM]=hXS
set MM=MM+1
if Tx[gXS]==0 then
call Mau("Double free: object of type BuiltinData","when calling error in ScmdDataTypes, line 1376")
else
set dx[fx]=gXS
set fx=fx+1
set Tx[gXS]=0
endif
set MM=MM-1
endfunction
function RvS takes integer dvS,string fvS returns nothing
set w3[MM]=fvS
set MM=MM+1
if WF[dvS]==0 then
call Mau("Double free: object of type LinkedList","when calling error in LinkedList, line 18")
else
set vF[mF]=dvS
set mF=mF+1
set WF[dvS]=0
endif
set MM=MM-1
endfunction
function evS takes integer yvS,string pvS returns nothing
set w3[MM]=pvS
set MM=MM+1
if xF[yvS]==0 then
call Mau("Double free: object of type LLIterator","when calling error in LinkedList, line 421")
else
set FF[kF]=yvS
set kF=kF+1
set xF[yvS]=0
endif
set MM=MM-1
endfunction
function h1s takes integer g1s returns nothing
endfunction
function n1s takes integer q1s,string a1s returns nothing
set w3[MM]=a1s
set MM=MM+1
call h1s(q1s)
call evS(q1s,"when calling dealloc_LLIterator in LinkedList, line 421")
set MM=MM-1
endfunction
function WAc takes integer mAc,string QAc returns nothing
set w3[MM]=QAc
set MM=MM+1
if xF[mAc]==0 then
if mAc==0 then
call Mau("Nullpointer exception when calling LLIterator.LLIterator","when calling error in LinkedList, line 421")
else
call Mau("Called LLIterator.LLIterator on invalid object.","when calling error in LinkedList, line 421")
endif
endif
call n1s(mAc,"when calling destroyLLIterator in LinkedList, line 421")
set MM=MM-1
endfunction
function W3s takes integer Q3s returns nothing
endfunction
function rvS takes integer wvS,string uvS returns nothing
set w3[MM]=uvS
set MM=MM+1
if TF[wvS]==0 then
call Mau("Double free: object of type LLBackIterator","when calling error in LinkedList, line 472")
else
set RF=RF+1
set TF[wvS]=0
endif
set MM=MM-1
endfunction
function m3s takes integer x3s,string v3s returns nothing
set w3[MM]=v3s
set MM=MM+1
call W3s(x3s)
call rvS(x3s,"when calling dealloc_LLBackIterator in LinkedList, line 472")
set MM=MM-1
endfunction
function kAc takes integer hAc,string FAc returns nothing
set w3[MM]=FAc
set MM=MM+1
if TF[hAc]==0 then
if hAc==0 then
call Mau("Nullpointer exception when calling LLBackIterator.LLBackIterator","when calling error in LinkedList, line 472")
else
call Mau("Called LLBackIterator.LLBackIterator on invalid object.","when calling error in LinkedList, line 472")
endif
endif
call m3s(hAc,"when calling destroyLLBackIterator in LinkedList, line 472")
set MM=MM-1
endfunction
function ovS takes integer SvS,string cvS returns nothing
set w3[MM]=cvS
set MM=MM+1
if hF[SvS]==0 then
call Mau("Double free: object of type LLEntry","when calling error in LinkedList, line 411")
else
set YF[GF]=SvS
set GF=GF+1
set hF[SvS]=0
endif
set MM=MM-1
endfunction
function w1s takes integer M3s returns nothing
endfunction
function J3s takes integer D3s,string H3s returns nothing
set w3[MM]=H3s
set MM=MM+1
call w1s(D3s)
call ovS(D3s,"when calling dealloc_LLEntry in LinkedList, line 411")
set MM=MM-1
endfunction
function vAc takes integer jAc,string xAc returns nothing
set w3[MM]=xAc
set MM=MM+1
if hF[jAc]==0 then
if jAc==0 then
call Mau("Nullpointer exception when calling LLEntry.LLEntry","when calling error in LinkedList, line 411")
else
call Mau("Called LLEntry.LLEntry on invalid object.","when calling error in LinkedList, line 411")
endif
endif
call J3s(jAc,"when calling destroyLLEntry in LinkedList, line 411")
set MM=MM-1
endfunction
function Z4s takes integer Q4s,string W4s returns nothing
local integer E4s
set w3[MM]=W4s
set MM=MM+1
if YP[Q4s]!=0 then
call WAc(YP[Q4s],"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 396")
endif
if GP[Q4s]!=0 then
call kAc(GP[Q4s],"when calling dispatch_LLBackIterator_destroyLLBackIterator in LinkedList, line 398")
endif
set E4s=qP[RP[Q4s]]
loop
exitwhen not(E4s!=RP[Q4s])
set E4s=qP[E4s]
call vAc(eP[E4s],"when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 402")
endloop
call vAc(RP[Q4s],"when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 403")
set MM=MM-1
endfunction
function P4s takes integer U4s,string I4s returns nothing
set w3[MM]=I4s
set MM=MM+1
call Z4s(U4s,"when calling LinkedList_onDestroy in LinkedList, line 394")
call RvS(U4s,"when calling dealloc_LinkedList in LinkedList, line 394")
set MM=MM-1
endfunction
function CAc takes integer LAc,string XAc returns nothing
set w3[MM]=XAc
set MM=MM+1
if WF[LAc]==0 then
if LAc==0 then
call Mau("Nullpointer exception when calling LinkedList.LinkedList","when calling error in LinkedList, line 18")
else
call Mau("Called LinkedList.LinkedList on invalid object.","when calling error in LinkedList, line 18")
endif
endif
call P4s(LAc,"when calling destroyLinkedList in LinkedList, line 18")
set MM=MM-1
endfunction
function TDt takes integer fDt,string RDt returns nothing
set w3[MM]=RDt
set MM=MM+1
call CAc(CJ[fDt],"when calling dispatch_LinkedList_destroyLinkedList in ScmdDataTypes, line 1421")
set MM=MM-1
endfunction
function gDt takes integer YDt,string GDt returns nothing
set w3[MM]=GDt
set MM=MM+1
call TDt(YDt,"when calling BuiltinData_onDestroy in ScmdDataTypes, line 1420")
call FXS(YDt,"when calling dealloc_BuiltinData in ScmdDataTypes, line 1420")
set MM=MM-1
endfunction
function R4o takes integer d4o,string f4o returns nothing
set w3[MM]=f4o
set MM=MM+1
if Tx[d4o]==0 then
if d4o==0 then
call Mau("Nullpointer exception when calling BuiltinData.BuiltinData","when calling error in ScmdDataTypes, line 1376")
else
call Mau("Called BuiltinData.BuiltinData on invalid object.","when calling error in ScmdDataTypes, line 1376")
endif
endif
call gDt(d4o,"when calling destroyBuiltinData in ScmdDataTypes, line 1376")
set MM=MM-1
endfunction
function cHt takes integer sHt,integer tHt,string iHt returns nothing
local integer SHt
set w3[MM]=iHt
set MM=MM+1
if BJ[tHt]then
if uK[sHt]!=0 then
call R4o(uK[sHt],"when calling dispatch_BuiltinData_destroyBuiltinData in ScmdDataTypes, line 1435")
endif
set uK[sHt]=tHt
else
call Nno(wK[sHt],0,"when calling add in ScmdDataTypes, line 1438")
set SHt=yZc(wK[sHt],"when calling size in ScmdDataTypes, line 1439")-2
loop
exitwhen not(SHt>=0 and VJ[tHt]<VJ[TZc(wK[sHt],SHt,"when calling get in ScmdDataTypes, line 1440")])
call BEc(wK[sHt],SHt+1,TZc(wK[sHt],SHt,"when calling get in ScmdDataTypes, line 1441"),"when calling set in ScmdDataTypes, line 1441")
set SHt=SHt-1
endloop
call BEc(wK[sHt],SHt+1,tHt,"when calling set in ScmdDataTypes, line 1443")
endif
set MM=MM-1
endfunction
function C4o takes integer K4o,integer L4o,string X4o returns nothing
set w3[MM]=X4o
set MM=MM+1
if px[K4o]==0 then
if K4o==0 then
call Mau("Nullpointer exception when calling BuiltinFunction.addOverload","when calling error in ScmdDataTypes, line 1432")
else
call Mau("Called BuiltinFunction.addOverload on invalid object.","when calling error in ScmdDataTypes, line 1432")
endif
endif
call cHt(K4o,L4o,"when calling addOverload in ScmdDataTypes, line 1432")
set MM=MM-1
endfunction
function tDs takes integer sDs returns nothing
set TU[sDs]=0
endfunction
function SDs takes integer iDs returns nothing
call tDs(iDs)
endfunction
function ZkS takes string WkS returns integer
local integer EkS
set w3[MM]=WkS
set MM=MM+1
if ah==0 then
if nh<32768 then
set nh=nh+1
set EkS=nh
set dh[EkS]=826
else
call Mau("Out of memory: Could not create HashList.","when calling error in HashList, line 8")
set EkS=0
endif
else
set ah=ah-1
set EkS=qh[ah]
set dh[EkS]=826
endif
set MM=MM-1
return EkS
endfunction
function rDs takes string wDs returns integer
local integer uDs
set w3[MM]=wDs
set MM=MM+1
set uDs=ZkS("when calling alloc_HashList in HashList, line 112")
call SDs(uDs)
set MM=MM-1
return uDs
endfunction
function xHt takes integer kHt,string jHt returns nothing
set w3[MM]=jHt
set MM=MM+1
set wK[kHt]=rDs("when calling new_HashList in ScmdDataTypes, line 1429")
set uK[kHt]=0
set MM=MM-1
endfunction
function FHt takes integer gHt,string hHt returns nothing
set w3[MM]=hHt
set MM=MM+1
call xHt(gHt,"when calling construct_BuiltinFunction_BuiltinModule in ScmdDataTypes, line 1428")
set MM=MM-1
endfunction
function IHt takes integer EHt,integer ZHt,string UHt returns nothing
set w3[MM]=UHt
set MM=MM+1
call BVt(EHt)
call FHt(EHt,"when calling BuiltinFunction_init in ScmdDataTypes, line 1520")
call C4o(EHt,ZHt,"when calling addOverload in ScmdDataTypes, line 1521")
set MM=MM-1
endfunction
function xXS takes string kXS returns integer
local integer jXS
set w3[MM]=kXS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set jXS=yx
set px[jXS]=1417
else
call Mau("Out of memory: Could not create BuiltinFunction.","when calling error in ScmdDataTypes, line 1514")
set jXS=0
endif
else
set bx=bx-1
set jXS=lx[bx]
set px[jXS]=1417
endif
set MM=MM-1
return jXS
endfunction
function WHt takes integer vHt,string mHt returns integer
local integer QHt
set w3[MM]=mHt
set MM=MM+1
set QHt=xXS("when calling alloc_BuiltinFunction in ScmdDataTypes, line 1520")
call IHt(QHt,vHt,"when calling construct_BuiltinFunction in ScmdDataTypes, line 1520")
set MM=MM-1
return QHt
endfunction
function bic takes string Oic returns integer
local integer lic
set w3[MM]=Oic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lic=kj
set jj[lic]=1080
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 152")
set lic=0
endif
else
set Fj=Fj-1
set lic=hj[Fj]
set jj[lic]=1080
endif
set MM=MM-1
return lic
endfunction
function pao takes integer Oao,integer lao,integer bao,string yao returns nothing
set w3[MM]=yao
set MM=MM+1
set VJ[Oao]=0
call Cqo(CJ[Oao],lao,"when calling add in ScmdDataTypes, line 1394")
set VJ[Oao]=VJ[Oao]+1
call Cqo(CJ[Oao],bao,"when calling add in ScmdDataTypes, line 1394")
set VJ[Oao]=VJ[Oao]+1
set MM=MM-1
endfunction
function dao takes integer eao,integer qao,integer aao,string nao returns nothing
set w3[MM]=nao
set MM=MM+1
if Tx[eao]==0 then
if eao==0 then
call Mau("Nullpointer exception when calling BuiltinData.setArgumentsTypes","when calling error in ScmdDataTypes, line 1391")
else
call Mau("Called BuiltinData.setArgumentsTypes on invalid object.","when calling error in ScmdDataTypes, line 1391")
endif
endif
call pao(eao,qao,aao,"when calling setArgumentsTypes in ScmdDataTypes, line 1391")
set MM=MM-1
endfunction
function GXS takes string TXS returns integer
local integer YXS
set w3[MM]=TXS
set MM=MM+1
if fx==0 then
if Rx<32768 then
set Rx=Rx+1
set YXS=Rx
set Tx[YXS]=669
else
call Mau("Out of memory: Could not create BuiltinData.","when calling error in ScmdDataTypes, line 1376")
set YXS=0
endif
else
set fx=fx-1
set YXS=dx[fx]
set Tx[YXS]=669
endif
set MM=MM-1
return YXS
endfunction
function j4s takes integer F4s,string k4s returns nothing
set w3[MM]=k4s
set MM=MM+1
set RP[F4s]=A3s(0,0,0,"when calling new_LLEntry in LinkedList, line 19")
set TP[F4s]=0
set YP[F4s]=0
set GP[F4s]=0
set MM=MM-1
endfunction
function m4s takes integer x4s,string v4s returns nothing
set w3[MM]=v4s
set MM=MM+1
call j4s(x4s,"when calling LinkedList_init in LinkedList, line 32")
set qP[RP[x4s]]=RP[x4s]
set eP[RP[x4s]]=RP[x4s]
set MM=MM-1
endfunction
function nvS takes string qvS returns integer
local integer avS
set w3[MM]=qvS
set MM=MM+1
if mF==0 then
if QF<32768 then
set QF=QF+1
set avS=QF
set WF[avS]=1392
else
call Mau("Out of memory: Could not create LinkedList.","when calling error in LinkedList, line 18")
set avS=0
endif
else
set mF=mF-1
set avS=vF[mF]
set WF[avS]=1392
endif
set MM=MM-1
return avS
endfunction
function a4s takes string e4s returns integer
local integer q4s
set w3[MM]=e4s
set MM=MM+1
set q4s=nvS("when calling alloc_LinkedList in LinkedList, line 32")
call m4s(q4s,"when calling construct_LinkedList2 in LinkedList, line 32")
set MM=MM-1
return q4s
endfunction
function lDt takes integer oDt,string ODt returns nothing
set w3[MM]=ODt
set MM=MM+1
set CJ[oDt]=a4s("when calling new_LinkedList in ScmdDataTypes, line 1379")
set MM=MM-1
endfunction
function dDt takes integer qDt,integer aDt,string nDt returns nothing
set w3[MM]=nDt
set MM=MM+1
call lDt(qDt,"when calling BuiltinData_init in ScmdDataTypes, line 1385")
set XJ[qDt]=aDt
set VJ[qDt]=0
set BJ[qDt]=false
set NJ[qDt]=false
set MM=MM-1
endfunction
function eDt takes integer bDt,string yDt returns integer
local integer pDt
set w3[MM]=yDt
set MM=MM+1
set pDt=GXS("when calling alloc_BuiltinData in ScmdDataTypes, line 1385")
call dDt(pDt,bDt,"when calling construct_BuiltinData in ScmdDataTypes, line 1385")
set MM=MM-1
return pDt
endfunction
function iic takes string sic returns integer
local integer tic
set w3[MM]=sic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tic=kj
set jj[tic]=1078
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 138")
set tic=0
endif
else
set Fj=Fj-1
set tic=hj[Fj]
set jj[tic]=1078
endif
set MM=MM-1
return tic
endfunction
function VNS takes integer XNS,string CNS returns nothing
set w3[MM]=CNS
set MM=MM+1
if Hx[XNS]==0 then
call Mau("Double free: object of type SymbolData","when calling error in ScmdDataTypes, line 226")
else
set Px[Ax]=XNS
set Ax=Ax+1
set Hx[XNS]=0
endif
set MM=MM-1
endfunction
function r6S takes integer w6S,integer u6S returns integer
return iYu(VR,w6S,u6S)
endfunction
function Nio takes integer Xio,integer Cio,string Vio returns integer
local integer Bio
set w3[MM]=Vio
set MM=MM+1
if Yh[Xio]==0 then
if Xio==0 then
call Mau("Nullpointer exception when calling Table.loadInt","when calling error in Table, line 39")
else
call Mau("Called Table.loadInt on invalid object.","when calling error in Table, line 39")
endif
endif
set Bio=r6S(Xio,Cio)
set MM=MM-1
return Bio
endfunction
function QDs takes integer jDs,integer xDs,string vDs returns integer
local integer mDs
set w3[MM]=vDs
set MM=MM+1
set mDs=Nio(jDs,xDs,"when calling loadInt in HashMap, line 24")
set MM=MM-1
return mDs
endfunction
function BZc takes integer LZc,integer XZc,string CZc returns integer
local integer VZc
set w3[MM]=CZc
set MM=MM+1
if Yh[LZc]==0 then
if LZc==0 then
call Mau("Nullpointer exception when calling HashMap.get","when calling error in HashMap, line 23")
else
call Mau("Called HashMap.get on invalid object.","when calling error in HashMap, line 23")
endif
endif
set VZc=QDs(LZc,XZc,"when calling get in HashMap, line 23")
set MM=MM-1
return VZc
endfunction
function FNS takes integer gNS,string hNS returns nothing
set w3[MM]=hNS
set MM=MM+1
if px[gNS]==0 then
call Mau("Double free: object of type String","when calling error in ScmdDataTypes, line 299")
else
set lx[bx]=gNS
set bx=bx+1
set px[gNS]=0
endif
set MM=MM-1
endfunction
function V6i takes integer C6i returns nothing
endfunction
function E6i takes integer Q6i,string W6i returns nothing
set w3[MM]=W6i
set MM=MM+1
call V6i(Q6i)
call FNS(Q6i,"when calling dealloc_String in ScmdDataTypes, line 299")
set MM=MM-1
endfunction
function EPs takes integer mPs,string QPs returns integer
local integer WPs
set w3[MM]=QPs
set MM=MM+1
set fU[mPs]=fU[mPs]+1
set WPs=TZc(RU[mPs],fU[mPs]-1,"when calling get in HashList, line 140")
set MM=MM-1
return WPs
endfunction
function EKt takes integer WKt returns nothing
set Hn[Jn]=tK[WKt]
set Jn=Jn+1
endfunction
function MXS takes integer BXS,string NXS returns nothing
set w3[MM]=NXS
set MM=MM+1
if px[BXS]==0 then
call Mau("Double free: object of type CameraSetup","when calling error in ScmdDataTypes, line 854")
else
set lx[bx]=BXS
set bx=bx+1
set px[BXS]=0
endif
set MM=MM-1
endfunction
function GKt takes integer TKt,string YKt returns nothing
set w3[MM]=YKt
set MM=MM+1
call EKt(TKt)
call MXS(TKt,"when calling dealloc_CameraSetup in ScmdDataTypes, line 889")
set MM=MM-1
endfunction
function QkS takes integer vkS,string mkS returns nothing
set w3[MM]=mkS
set MM=MM+1
if eh[vkS]==0 then
call Mau("Double free: object of type HLIterator","when calling error in HashList, line 125")
else
set bh[yh]=vkS
set yh=yh+1
set eh[vkS]=0
endif
set MM=MM-1
endfunction
function tAs takes integer sAs returns nothing
endfunction
function BPs takes integer CPs,string VPs returns nothing
set w3[MM]=VPs
set MM=MM+1
call tAs(CPs)
call QkS(CPs,"when calling dealloc_HLIterator in HashList, line 125")
set MM=MM-1
endfunction
function aEc takes integer eEc,string qEc returns nothing
set w3[MM]=qEc
set MM=MM+1
if eh[eEc]==0 then
if eEc==0 then
call Mau("Nullpointer exception when calling HLIterator.HLIterator","when calling error in HashList, line 125")
else
call Mau("Called HLIterator.HLIterator on invalid object.","when calling error in HashList, line 125")
endif
endif
call BPs(eEc,"when calling destroyHLIterator in HashList, line 125")
set MM=MM-1
endfunction
function HPs takes integer APs,string DPs returns nothing
set w3[MM]=DPs
set MM=MM+1
call aEc(APs,"when calling dispatch_HLIterator_destroyHLIterator in HashList, line 146")
set MM=MM-1
endfunction
function RCS takes integer dCS,string fCS returns nothing
set w3[MM]=fCS
set MM=MM+1
if px[dCS]==0 then
call Mau("Double free: object of type Destructable","when calling error in ScmdDataTypes, line 832")
else
set lx[bx]=dCS
set bx=bx+1
set px[dCS]=0
endif
set MM=MM-1
endfunction
function KNt takes integer JNt returns nothing
endfunction
function D_i takes integer A_i returns nothing
call KNt(A_i)
endfunction
function sCt takes integer rCt returns nothing
call D_i(rCt)
endfunction
function HXt takes integer AXt,string DXt returns nothing
set w3[MM]=DXt
set MM=MM+1
call sCt(AXt)
call RCS(AXt,"when calling dealloc_Destructable in ScmdDataTypes, line 832")
set MM=MM-1
endfunction
function QCt takes integer vCt,string mCt returns nothing
set w3[MM]=mCt
set MM=MM+1
if fK[vCt]!=0 then
call CAc(fK[vCt],"when calling dispatch_LinkedList_destroyLinkedList in ScmdDataTypes, line 192")
endif
set MM=MM-1
endfunction
function XKt takes integer KKt,string LKt returns nothing
set w3[MM]=LKt
set MM=MM+1
call QCt(KKt,"when calling Exception_onDestroy in ScmdDataTypes, line 216")
set MM=MM-1
endfunction
function iCS takes integer sCS,string tCS returns nothing
set w3[MM]=tCS
set MM=MM+1
if px[sCS]==0 then
call Mau("Double free: object of type ClassCastException","when calling error in ScmdDataTypes, line 216")
else
set lx[bx]=sCS
set bx=bx+1
set px[sCS]=0
endif
set MM=MM-1
endfunction
function JKt takes integer DKt,string HKt returns nothing
set w3[MM]=HKt
set MM=MM+1
call XKt(DKt,"when calling ClassCastException_onDestroy in ScmdDataTypes, line 216")
call iCS(DKt,"when calling dealloc_ClassCastException in ScmdDataTypes, line 216")
set MM=MM-1
endfunction
function vqu takes effect xqu returns nothing
call DestroyEffect(xqu)
endfunction
function R6i takes integer f6i returns nothing
call vqu(AK[f6i])
endfunction
function nNS takes integer qNS,string aNS returns nothing
set w3[MM]=aNS
set MM=MM+1
if px[qNS]==0 then
call Mau("Double free: object of type SpecialEffect","when calling error in ScmdDataTypes, line 592")
else
set lx[bx]=qNS
set bx=bx+1
set px[qNS]=0
endif
set MM=MM-1
endfunction
function K5i takes integer H5i,string J5i returns nothing
set w3[MM]=J5i
set MM=MM+1
call R6i(H5i)
call nNS(H5i,"when calling dealloc_SpecialEffect in ScmdDataTypes, line 622")
set MM=MM-1
endfunction
function LCS takes integer JCS,string KCS returns nothing
set w3[MM]=KCS
set MM=MM+1
if px[JCS]==0 then
call Mau("Double free: object of type Function","when calling error in ScmdDataTypes, line 1300")
else
set lx[bx]=JCS
set bx=bx+1
set px[JCS]=0
endif
set MM=MM-1
endfunction
function MVt takes integer NVt returns nothing
endfunction
function LVt takes integer JVt,string KVt returns nothing
set w3[MM]=KVt
set MM=MM+1
call MVt(JVt)
call LCS(JVt,"when calling dealloc_Function in ScmdDataTypes, line 1300")
set MM=MM-1
endfunction
function HXS takes integer AXS,string DXS returns nothing
set w3[MM]=DXS
set MM=MM+1
if px[AXS]==0 then
call Mau("Double free: object of type BuiltinSpecialForm","when calling error in ScmdDataTypes, line 1538")
else
set lx[bx]=AXS
set bx=bx+1
set px[AXS]=0
endif
set MM=MM-1
endfunction
function PPs takes integer ZPs,string UPs returns boolean
local boolean IPs
set w3[MM]=UPs
set MM=MM+1
set IPs=fU[ZPs]<yZc(RU[ZPs],"when calling size in HashList, line 133")
set MM=MM-1
return IPs
endfunction
function MPs takes integer NPs returns nothing
set fU[NPs]=0
endfunction
function rAs takes integer wAs,integer uAs returns nothing
call MPs(wAs)
set RU[wAs]=uAs
endfunction
function xkS takes string kkS returns integer
local integer jkS
set w3[MM]=kkS
set MM=MM+1
if yh==0 then
if ph<32768 then
set ph=ph+1
set jkS=ph
set eh[jkS]=824
else
call Mau("Out of memory: Could not create HLIterator.","when calling error in HashList, line 125")
set jkS=0
endif
else
set yh=yh-1
set jkS=bh[yh]
set eh[jkS]=824
endif
set MM=MM-1
return jkS
endfunction
function XPs takes integer JPs,string KPs returns integer
local integer LPs
set w3[MM]=KPs
set MM=MM+1
set LPs=xkS("when calling alloc_HLIterator in HashList, line 129")
call rAs(LPs,JPs)
set MM=MM-1
return LPs
endfunction
function kAs takes integer gAs,string hAs returns integer
local integer FAs
set w3[MM]=hAs
set MM=MM+1
set FAs=XPs(gAs,"when calling new_HLIterator in HashList, line 96")
set MM=MM-1
return FAs
endfunction
function jGu takes hashtable FGu,integer kGu returns nothing
call FlushChildHashtable(FGu,kGu)
endfunction
function xAs takes integer jAs returns nothing
call jGu(Ge,jAs)
call jGu(ge,jAs)
set TU[jAs]=0
endfunction
function WHs takes integer QHs returns nothing
call xAs(QHs)
call jGu(he,QHs)
endfunction
function wZc takes integer NEc,string MEc returns nothing
set w3[MM]=MEc
set MM=MM+1
if dh[NEc]==0 then
if NEc==0 then
call Mau("Nullpointer exception when calling HashList.clear","when calling error in HashList, line 43")
else
call Mau("Called HashList.clear on invalid object.","when calling error in HashList, line 43")
endif
endif
if dh[NEc]<=826 then
call xAs(NEc)
else
call WHs(NEc)
endif
set MM=MM-1
endfunction
function ODs takes integer cDs,string oDs returns nothing
set w3[MM]=oDs
set MM=MM+1
call wZc(cDs,"when calling clear in HashList, line 120")
set MM=MM-1
endfunction
function iJs takes integer sJs,string tJs returns nothing
set w3[MM]=tJs
set MM=MM+1
call jGu(he,sJs)
call ODs(sJs,"when calling HashList_onDestroy in HashSet, line 5")
set MM=MM-1
endfunction
function ijS takes integer sjS,string tjS returns nothing
set w3[MM]=tjS
set MM=MM+1
if dh[sjS]==0 then
call Mau("Double free: object of type HashSet","when calling error in HashSet, line 5")
else
set qh[ah]=sjS
set ah=ah+1
set dh[sjS]=0
endif
set MM=MM-1
endfunction
function CHs takes integer LHs,string XHs returns nothing
set w3[MM]=XHs
set MM=MM+1
call iJs(LHs,"when calling HashSet_onDestroy in HashSet, line 31")
call ijS(LHs,"when calling dealloc_HashSet in HashSet, line 31")
set MM=MM-1
endfunction
function PkS takes integer UkS,string IkS returns nothing
set w3[MM]=IkS
set MM=MM+1
if dh[UkS]==0 then
call Mau("Double free: object of type HashList","when calling error in HashList, line 8")
else
set qh[ah]=UkS
set ah=ah+1
set dh[UkS]=0
endif
set MM=MM-1
endfunction
function yDs takes integer lDs,string bDs returns nothing
set w3[MM]=bDs
set MM=MM+1
call ODs(lDs,"when calling HashList_onDestroy in HashList, line 119")
call PkS(lDs,"when calling dealloc_HashList in HashList, line 119")
set MM=MM-1
endfunction
function vEc takes integer jEc,string xEc returns nothing
set w3[MM]=xEc
set MM=MM+1
if dh[jEc]==0 then
if jEc==0 then
call Mau("Nullpointer exception when calling HashList.HashList","when calling error in HashList, line 8")
else
call Mau("Called HashList.HashList on invalid object.","when calling error in HashList, line 8")
endif
endif
if dh[jEc]<=826 then
call yDs(jEc,"when calling destroyHashList in HashList, line 8")
else
call CHs(jEc,"when calling destroyHashSet in HashList, line 8")
endif
set MM=MM-1
endfunction
function yKt takes integer oKt,string OKt returns nothing
local integer lKt
local integer bKt
set w3[MM]=OKt
set MM=MM+1
set lKt=kAs(rK[oKt],"when calling iterator in ScmdDataTypes, line 1502")
loop
exitwhen not PPs(lKt,"when calling hasNext in ScmdDataTypes, line 1502")
set bKt=EPs(lKt,"when calling next in ScmdDataTypes, line 1502")
call R4o(bKt,"when calling dispatch_BuiltinData_destroyBuiltinData in ScmdDataTypes, line 1503")
endloop
call HPs(lKt,"when calling close in ScmdDataTypes, line 1502")
call vEc(rK[oKt],"when calling dispatch_HashList_destroyHashList in ScmdDataTypes, line 1504")
if sK[oKt]!=0 then
call R4o(sK[oKt],"when calling dispatch_BuiltinData_destroyBuiltinData in ScmdDataTypes, line 1506")
endif
set MM=MM-1
endfunction
function MHt takes integer BHt,string NHt returns nothing
set w3[MM]=NHt
set MM=MM+1
call yKt(BHt,"when calling BuiltinSpecialForm_onDestroy in ScmdDataTypes, line 1538")
call HXS(BHt,"when calling dealloc_BuiltinSpecialForm in ScmdDataTypes, line 1538")
set MM=MM-1
endfunction
function oBS takes integer SBS,string cBS returns nothing
set w3[MM]=cBS
set MM=MM+1
if px[SBS]==0 then
call Mau("Double free: object of type Object","when calling error in ScmdDataTypes, line 57")
else
set lx[bx]=SBS
set bx=bx+1
set px[SBS]=0
endif
set MM=MM-1
endfunction
function O1t takes integer c1t,string o1t returns nothing
set w3[MM]=o1t
set MM=MM+1
call oBS(c1t,"when calling dealloc_Object in ScmdDataTypes, line 57")
set MM=MM-1
endfunction
function Oxr takes trigger oxr returns nothing
call TriggerClearActions(oxr)
endfunction
function V3t takes integer C3t returns nothing
endfunction
function rBS takes integer wBS,string uBS returns nothing
set w3[MM]=uBS
set MM=MM+1
if px[wBS]==0 then
call Mau("Double free: object of type Null","when calling error in ScmdDataTypes, line 85")
else
set lx[bx]=wBS
set bx=bx+1
set px[wBS]=0
endif
set MM=MM-1
endfunction
function P3t takes integer U3t,string I3t returns nothing
set w3[MM]=I3t
set MM=MM+1
call V3t(U3t)
call rBS(U3t,"when calling dealloc_Null in ScmdDataTypes, line 85")
set MM=MM-1
endfunction
function PCS takes integer UCS,string ICS returns nothing
set w3[MM]=ICS
set MM=MM+1
if px[UCS]==0 then
call Mau("Double free: object of type Expression","when calling error in ScmdDataTypes, line 1573")
else
set lx[bx]=UCS
set bx=bx+1
set px[UCS]=0
endif
set MM=MM-1
endfunction
function HNS takes integer ANS,string DNS returns nothing
set w3[MM]=DNS
set MM=MM+1
if px[ANS]==0 then
call Mau("Double free: object of type Symbol","when calling error in ScmdDataTypes, line 242")
else
set lx[bx]=ANS
set bx=bx+1
set px[ANS]=0
endif
set MM=MM-1
endfunction
function M7i takes integer N7i returns nothing
endfunction
function Q7i takes integer v7i,string m7i returns nothing
set w3[MM]=m7i
set MM=MM+1
call M7i(v7i)
call HNS(v7i,"when calling dealloc_Symbol in ScmdDataTypes, line 242")
set MM=MM-1
endfunction
function ZBt takes integer EBt returns integer
return gK[EBt]
endfunction
function Q7o takes integer x7o,string v7o returns integer
local integer m7o
set w3[MM]=v7o
set MM=MM+1
if Wx[x7o]==0 then
if x7o==0 then
call Mau("Nullpointer exception when calling ReferenceCounter.getUseCount","when calling error in ScmdDataTypes, line 112")
else
call Mau("Called ReferenceCounter.getUseCount on invalid object.","when calling error in ScmdDataTypes, line 112")
endif
endif
set m7o=ZBt(x7o)
set MM=MM-1
return m7o
endfunction
function eVS takes integer yVS,string pVS returns nothing
set w3[MM]=pVS
set MM=MM+1
if px[yVS]==0 then
call Mau("Double free: object of type Group","when calling error in ScmdDataTypes, line 730")
else
set lx[bx]=yVS
set bx=bx+1
set px[yVS]=0
endif
set MM=MM-1
endfunction
function STu takes group iTu returns nothing
call DestroyGroup(iTu)
endfunction
function gNt takes integer GNt returns nothing
call STu(hK[GNt])
endfunction
function SNt takes integer tNt,string iNt returns nothing
set w3[MM]=iNt
set MM=MM+1
call gNt(tNt)
call eVS(tNt,"when calling dealloc_Group in ScmdDataTypes, line 757")
set MM=MM-1
endfunction
function LMS takes integer JMS,string KMS returns nothing
set w3[MM]=KMS
set MM=MM+1
if px[JMS]==0 then
call Mau("Double free: object of type WeatherEffect","when calling error in ScmdDataTypes, line 625")
else
set lx[bx]=JMS
set bx=bx+1
set px[JMS]=0
endif
set MM=MM-1
endfunction
function vrs takes weathereffect xrs returns nothing
call RemoveWeatherEffect(xrs)
endfunction
function f_i takes integer d_i returns nothing
call vrs(tL[d_i])
endfunction
function S_i takes integer t_i,string i_i returns nothing
set w3[MM]=i_i
set MM=MM+1
call f_i(t_i)
call LMS(t_i,"when calling dealloc_WeatherEffect in ScmdDataTypes, line 646")
set MM=MM-1
endfunction
function X9i takes integer L9i returns nothing
endfunction
function nMS takes integer qMS,string aMS returns nothing
set w3[MM]=aMS
set MM=MM+1
if px[qMS]==0 then
call Mau("Double free: object of type Undefined","when calling error in ScmdDataTypes, line 70")
else
set lx[bx]=qMS
set bx=bx+1
set px[qMS]=0
endif
set MM=MM-1
endfunction
function U9i takes integer E9i,string Z9i returns nothing
set w3[MM]=Z9i
set MM=MM+1
call X9i(E9i)
call nMS(E9i,"when calling dealloc_Undefined in ScmdDataTypes, line 70")
set MM=MM-1
endfunction
function PVS takes integer UVS,string IVS returns nothing
set w3[MM]=IVS
set MM=MM+1
if px[UVS]==0 then
call Mau("Double free: object of type LiteralInteger","when calling error in ScmdDataTypes, line 493")
else
set lx[bx]=UVS
set bx=bx+1
set px[UVS]=0
endif
set MM=MM-1
endfunction
function I1t takes integer U1t returns nothing
call V6i(U1t)
endfunction
function YMt takes integer TMt returns nothing
call I1t(TMt)
endfunction
function r3t takes integer u3t returns nothing
call YMt(u3t)
endfunction
function UMt takes integer EMt,string ZMt returns nothing
set w3[MM]=ZMt
set MM=MM+1
call r3t(EMt)
call PVS(EMt,"when calling dealloc_LiteralInteger in ScmdDataTypes, line 493")
set MM=MM-1
endfunction
function RVS takes integer dVS,string fVS returns nothing
set w3[MM]=fVS
set MM=MM+1
if px[dVS]==0 then
call Mau("Double free: object of type Handle","when calling error in ScmdDataTypes, line 555")
else
set lx[bx]=dVS
set bx=bx+1
set px[dVS]=0
endif
set MM=MM-1
endfunction
function UNt takes integer ENt,string ZNt returns nothing
set w3[MM]=ZNt
set MM=MM+1
call KNt(ENt)
call RVS(ENt,"when calling dealloc_Handle in ScmdDataTypes, line 555")
set MM=MM-1
endfunction
function VBS takes integer XBS,string CBS returns nothing
set w3[MM]=CBS
set MM=MM+1
if px[XBS]==0 then
call Mau("Double free: object of type RuntimeFunction","when calling error in ScmdDataTypes, line 1318")
else
set lx[bx]=XBS
set bx=bx+1
set px[XBS]=0
endif
set MM=MM-1
endfunction
function NIt takes integer BIt returns nothing
call KNt(BIt)
endfunction
function VLS takes integer XLS,string CLS returns nothing
set w3[MM]=CLS
set MM=MM+1
if px[XLS]==0 then
call Mau("Double free: object of type Agent","when calling error in ScmdDataTypes, line 576")
else
set lx[bx]=XLS
set bx=bx+1
set px[XLS]=0
endif
set MM=MM-1
endfunction
function VIt takes integer XIt,string CIt returns nothing
set w3[MM]=CIt
set MM=MM+1
call NIt(XIt)
call VLS(XIt,"when calling dealloc_Agent in ScmdDataTypes, line 576")
set MM=MM-1
endfunction
function bAt takes integer lAt returns nothing
call V6i(lAt)
endfunction
function bXS takes integer OXS,string lXS returns nothing
set w3[MM]=lXS
set MM=MM+1
if px[OXS]==0 then
call Mau("Double free: object of type Boolean","when calling error in ScmdDataTypes, line 352")
else
set lx[bx]=OXS
set bx=bx+1
set px[OXS]=0
endif
set MM=MM-1
endfunction
function XPt takes integer KPt,string LPt returns nothing
set w3[MM]=LPt
set MM=MM+1
call bAt(KPt)
call bXS(KPt,"when calling dealloc_Boolean in ScmdDataTypes, line 352")
set MM=MM-1
endfunction
function VBt takes integer CBt returns nothing
endfunction
function oVS takes integer SVS,string cVS returns nothing
set w3[MM]=cVS
set MM=MM+1
if Wx[SVS]==0 then
call Mau("Double free: object of type ReferenceCounter","when calling error in ScmdDataTypes, line 102")
else
set vx[mx]=SVS
set mx=mx+1
set Wx[SVS]=0
endif
set MM=MM-1
endfunction
function PBt takes integer UBt,string IBt returns nothing
set w3[MM]=IBt
set MM=MM+1
call VBt(UBt)
call oVS(UBt,"when calling dealloc_ReferenceCounter in ScmdDataTypes, line 102")
set MM=MM-1
endfunction
function Y7o takes integer R7o,string T7o returns nothing
set w3[MM]=T7o
set MM=MM+1
if Wx[R7o]==0 then
if R7o==0 then
call Mau("Nullpointer exception when calling ReferenceCounter.ReferenceCounter","when calling error in ScmdDataTypes, line 102")
else
call Mau("Called ReferenceCounter.ReferenceCounter on invalid object.","when calling error in ScmdDataTypes, line 102")
endif
endif
call PBt(R7o,"when calling destroyReferenceCounter in ScmdDataTypes, line 102")
set MM=MM-1
endfunction
function ZMS takes integer WMS,string EMS returns nothing
set w3[MM]=EMS
set MM=MM+1
if px[WMS]==0 then
call Mau("Double free: object of type Vector","when calling error in ScmdDataTypes, line 1052")
else
set lx[bx]=WMS
set bx=bx+1
set px[WMS]=0
endif
set MM=MM-1
endfunction
function xCS takes integer kCS,string jCS returns nothing
set w3[MM]=jCS
set MM=MM+1
if px[kCS]==0 then
call Mau("Double free: object of type Exception","when calling error in ScmdDataTypes, line 183")
else
set lx[bx]=kCS
set bx=bx+1
set px[kCS]=0
endif
set MM=MM-1
endfunction
function bCt takes integer OCt,string lCt returns nothing
set w3[MM]=lCt
set MM=MM+1
call QCt(OCt,"when calling Exception_onDestroy in ScmdDataTypes, line 190")
call xCS(OCt,"when calling dealloc_Exception in ScmdDataTypes, line 190")
set MM=MM-1
endfunction
function bxr takes trigger lxr returns nothing
call DestroyTrigger(lxr)
endfunction
function FMS takes integer gMS,string hMS returns nothing
set w3[MM]=hMS
set MM=MM+1
if px[gMS]==0 then
call Mau("Double free: object of type Unit","when calling error in ScmdDataTypes, line 782")
else
set lx[bx]=gMS
set bx=bx+1
set px[gMS]=0
endif
set MM=MM-1
endfunction
function R0i takes integer f0i returns nothing
call D_i(f0i)
endfunction
function c0i takes integer i0i,string S0i returns nothing
set w3[MM]=S0i
set MM=MM+1
call R0i(i0i)
call FMS(i0i,"when calling dealloc_Unit in ScmdDataTypes, line 782")
set MM=MM-1
endfunction
function cxr takes trigger Sxr returns nothing
call TriggerClearConditions(Sxr)
endfunction
function eBS takes integer yBS,string pBS returns nothing
set w3[MM]=pBS
set MM=MM+1
if px[yBS]==0 then
call Mau("Double free: object of type Real","when calling error in ScmdDataTypes, line 421")
else
set lx[bx]=yBS
set bx=bx+1
set px[yBS]=0
endif
set MM=MM-1
endfunction
function d1t takes integer a1t,string n1t returns nothing
set w3[MM]=n1t
set MM=MM+1
call I1t(a1t)
call eBS(a1t,"when calling dealloc_Real in ScmdDataTypes, line 421")
set MM=MM-1
endfunction
function eCS takes integer yCS,string pCS returns nothing
set w3[MM]=pCS
set MM=MM+1
if hx[yCS]==0 then
call Mau("Double free: object of type Context","when calling error in ScmdDataTypes, line 1117")
else
set Yx[Gx]=yCS
set Gx=Gx+1
set hx[yCS]=0
endif
set MM=MM-1
endfunction
function vZc takes integer kZc,string jZc returns integer
local integer xZc
set w3[MM]=jZc
set MM=MM+1
if dh[kZc]==0 then
if kZc==0 then
call Mau("Nullpointer exception when calling HashList.iterator","when calling error in HashList, line 95")
else
call Mau("Called HashList.iterator on invalid object.","when calling error in HashList, line 95")
endif
endif
set xZc=kAs(kZc,"when calling iterator in HashList, line 95")
set MM=MM-1
return xZc
endfunction
function fHs takes integer aHs,string nHs returns integer
local integer dHs
set w3[MM]=nHs
set MM=MM+1
set dHs=vZc(GU[aHs],"when calling iterator in HashMap, line 84")
set MM=MM-1
return dHs
endfunction
function gvr takes integer Tvr,string Yvr returns string
local string Gvr
set w3[MM]=Yvr
set MM=MM+1
set Gvr=jSo(YT,Tvr,"when calling loadString in TypeCasting, line 36")
set MM=MM-1
return Gvr
endfunction
function JAt takes integer HAt returns nothing
call bAt(HAt)
endfunction
function RXS takes integer dXS,string fXS returns nothing
set w3[MM]=fXS
set MM=MM+1
if px[dXS]==0 then
call Mau("Double free: object of type LiteralBoolean","when calling error in ScmdDataTypes, line 369")
else
set lx[bx]=dXS
set bx=bx+1
set px[dXS]=0
endif
set MM=MM-1
endfunction
function hAt takes integer GAt,string gAt returns nothing
set w3[MM]=gAt
set MM=MM+1
call JAt(GAt)
call RXS(GAt,"when calling dealloc_LiteralBoolean in ScmdDataTypes, line 369")
set MM=MM-1
endfunction
function iMS takes integer sMS,string tMS returns nothing
set w3[MM]=tMS
set MM=MM+1
if px[sMS]==0 then
call Mau("Double free: object of type Trigger","when calling error in ScmdDataTypes, line 893")
else
set lx[bx]=sMS
set bx=bx+1
set px[sMS]=0
endif
set MM=MM-1
endfunction
function xVS takes integer kVS,string jVS returns nothing
set w3[MM]=jVS
set MM=MM+1
if px[kVS]==0 then
call Mau("Double free: object of type Integer","when calling error in ScmdDataTypes, line 476")
else
set lx[bx]=kVS
set bx=bx+1
set px[kVS]=0
endif
set MM=MM-1
endfunction
function iMt takes integer sMt,string tMt returns nothing
set w3[MM]=tMt
set MM=MM+1
call YMt(sMt)
call xVS(sMt,"when calling dealloc_Integer in ScmdDataTypes, line 476")
set MM=MM-1
endfunction
function iNS takes integer sNS,string tNS returns nothing
set w3[MM]=tNS
set MM=MM+1
if xx[sNS]==0 then
call Mau("Double free: object of type SharedPointer","when calling error in ScmdDataTypes, line 166")
else
set Fx[kx]=sNS
set kx=kx+1
set xx[sNS]=0
endif
set MM=MM-1
endfunction
function iXS takes integer sXS,string tXS returns nothing
set w3[MM]=tXS
set MM=MM+1
if nx[sXS]==0 then
call Mau("Double free: object of type Arguments","when calling error in ScmdDataTypes, line 1243")
else
set ex[qx]=sXS
set qx=qx+1
set nx[sXS]=0
endif
set MM=MM-1
endfunction
function ivr takes trigger svr,triggeraction tvr returns nothing
call TriggerRemoveAction(svr,tvr)
endfunction
function oNS takes integer SNS,string cNS returns nothing
set w3[MM]=cNS
set MM=MM+1
if px[SNS]==0 then
call Mau("Double free: object of type Sound","when calling error in ScmdDataTypes, line 649")
else
set lx[bx]=SNS
set bx=bx+1
set px[SNS]=0
endif
set MM=MM-1
endfunction
function v5i takes integer x5i returns nothing
call KillSoundWhenDone(IK[x5i])
endfunction
function j5i takes integer F5i,string k5i returns nothing
set w3[MM]=k5i
set MM=MM+1
call v5i(F5i)
call oNS(F5i,"when calling dealloc_Sound in ScmdDataTypes, line 675")
set MM=MM-1
endfunction
function WBt takes integer QBt returns nothing
set gK[QBt]=gK[QBt]-1
endfunction
function j7o takes integer F7o,string k7o returns nothing
set w3[MM]=k7o
set MM=MM+1
if Wx[F7o]==0 then
if F7o==0 then
call Mau("Nullpointer exception when calling ReferenceCounter.decrease","when calling error in ScmdDataTypes, line 109")
else
call Mau("Called ReferenceCounter.decrease on invalid object.","when calling error in ScmdDataTypes, line 109")
endif
endif
call WBt(F7o)
set MM=MM-1
endfunction
function gIu takes rect GIu returns nothing
call RemoveRect(GIu)
endfunction
function r2t takes integer u2t returns nothing
call gIu(QK[u2t])
endfunction
function xBS takes integer kBS,string jBS returns nothing
set w3[MM]=jBS
set MM=MM+1
if px[kBS]==0 then
call Mau("Double free: object of type Rect","when calling error in ScmdDataTypes, line 678")
else
set lx[bx]=kBS
set bx=bx+1
set px[kBS]=0
endif
set MM=MM-1
endfunction
function k4t takes integer h4t,string F4t returns nothing
set w3[MM]=F4t
set MM=MM+1
call r2t(h4t)
call xBS(h4t,"when calling dealloc_Rect in ScmdDataTypes, line 705")
set MM=MM-1
endfunction
function ZNS takes integer WNS,string ENS returns nothing
set w3[MM]=ENS
set MM=MM+1
if px[WNS]==0 then
call Mau("Double free: object of type LiteralString","when calling error in ScmdDataTypes, line 311")
else
set lx[bx]=WNS
set bx=bx+1
set px[WNS]=0
endif
set MM=MM-1
endfunction
function h7i takes integer g7i returns nothing
call V6i(g7i)
endfunction
function l7i takes integer o7i,string O7i returns nothing
set w3[MM]=O7i
set MM=MM+1
call h7i(o7i)
call ZNS(o7i,"when calling dealloc_LiteralString in ScmdDataTypes, line 311")
set MM=MM-1
endfunction
function MMS takes integer BMS,string NMS returns nothing
set w3[MM]=NMS
set MM=MM+1
if px[BMS]==0 then
call Mau("Double free: object of type Widget","when calling error in ScmdDataTypes, line 760")
else
set lx[bx]=BMS
set bx=bx+1
set px[BMS]=0
endif
set MM=MM-1
endfunction
function m_i takes integer x_i,string v_i returns nothing
set w3[MM]=v_i
set MM=MM+1
call D_i(x_i)
call MMS(x_i,"when calling dealloc_Widget in ScmdDataTypes, line 760")
set MM=MM-1
endfunction
function ovr takes trigger Svr,triggercondition cvr returns nothing
call TriggerRemoveCondition(Svr,cvr)
endfunction
function pxr takes trigger yxr returns nothing
call DisableTrigger(yxr)
endfunction
function ZIu takes region EIu returns nothing
call RemoveRegion(EIu)
endfunction
function F2t takes integer h2t returns nothing
call ZIu(WK[h2t])
endfunction
function PBS takes integer UBS,string IBS returns nothing
set w3[MM]=IBS
set MM=MM+1
if px[UBS]==0 then
call Mau("Double free: object of type Region","when calling error in ScmdDataTypes, line 708")
else
set lx[bx]=UBS
set bx=bx+1
set px[UBS]=0
endif
set MM=MM-1
endfunction
function q2t takes integer p2t,string e2t returns nothing
set w3[MM]=e2t
set MM=MM+1
call F2t(p2t)
call PBS(p2t,"when calling dealloc_Region in ScmdDataTypes, line 726")
set MM=MM-1
endfunction
function rVS takes integer wVS,string uVS returns nothing
set w3[MM]=uVS
set MM=MM+1
if xx[wVS]==0 then
call Mau("Double free: object of type GenericSharedPointer","when calling error in ScmdDataTypes, line 100")
else
set Fx[kx]=wVS
set kx=kx+1
set xx[wVS]=0
endif
set MM=MM-1
endfunction
function MkS takes integer BkS,string NkS returns nothing
set w3[MM]=NkS
set MM=MM+1
if Yh[BkS]==0 then
call Mau("Double free: object of type IterableMap","when calling error in HashMap, line 46")
else
set fh[Rh]=BkS
set Rh=Rh+1
set Yh[BkS]=0
endif
set MM=MM-1
endfunction
function t7S takes integer s7S returns nothing
call jGu(VR,s7S)
endfunction
function eDs takes integer pDs returns nothing
set YU[pDs]=0
call t7S(pDs)
endfunction
function NDs takes integer VDs,string BDs returns nothing
set w3[MM]=BDs
set MM=MM+1
if not gU[VDs]then
call wZc(GU[VDs],"when calling clear in HashMap, line 73")
endif
call eDs(VDs)
set MM=MM-1
endfunction
function hco takes integer Gco,string gco returns nothing
set w3[MM]=gco
set MM=MM+1
if Yh[Gco]==0 then
if Gco==0 then
call Mau("Nullpointer exception when calling Table.flush","when calling error in Table, line 250")
else
call Mau("Called Table.flush on invalid object.","when calling error in Table, line 250")
endif
endif
if Yh[Gco]<=1656 then
if Yh[Gco]<=1655 then
call t7S(Gco)
else
call eDs(Gco)
endif
else
call NDs(Gco,"when calling flush in Table, line 250")
endif
set MM=MM-1
endfunction
function e7S takes integer y7S,string p7S returns nothing
set w3[MM]=p7S
set MM=MM+1
call hco(y7S,"when calling flush in Table, line 254")
set MM=MM-1
endfunction
function CDs takes integer LDs,string XDs returns nothing
set w3[MM]=XDs
set MM=MM+1
call e7S(LDs,"when calling Table_onDestroy in HashMap, line 8")
set MM=MM-1
endfunction
function mHs takes integer xHs,string vHs returns nothing
set w3[MM]=vHs
set MM=MM+1
call vEc(GU[xHs],"when calling dispatch_HashList_destroyHashList in HashMap, line 131")
set gU[xHs]=true
call CDs(xHs,"when calling HashMap_onDestroy in HashMap, line 46")
set MM=MM-1
endfunction
function uHs takes integer MDs,string wHs returns nothing
set w3[MM]=wHs
set MM=MM+1
call mHs(MDs,"when calling IterableMap_onDestroy in HashMap, line 130")
call MkS(MDs,"when calling dealloc_IterableMap in HashMap, line 130")
set MM=MM-1
endfunction
function tUc takes integer rUc,string sUc returns nothing
set w3[MM]=sUc
set MM=MM+1
if Yh[rUc]==0 then
if rUc==0 then
call Mau("Nullpointer exception when calling IterableMap.IterableMap","when calling error in HashMap, line 46")
else
call Mau("Called IterableMap.IterableMap on invalid object.","when calling error in HashMap, line 46")
endif
endif
call uHs(rUc,"when calling destroyIterableMap in HashMap, line 46")
set MM=MM-1
endfunction
function GBS takes integer TBS,string YBS returns nothing
set w3[MM]=YBS
set MM=MM+1
if px[TBS]==0 then
call Mau("Double free: object of type LiteralReal","when calling error in ScmdDataTypes, line 438")
else
set lx[bx]=TBS
set bx=bx+1
set px[TBS]=0
endif
set MM=MM-1
endfunction
function n4t takes integer a4t returns nothing
call I1t(a4t)
endfunction
function w4t takes integer N1t,string M1t returns nothing
set w3[MM]=M1t
set MM=MM+1
call n4t(N1t)
call GBS(N1t,"when calling dealloc_LiteralReal in ScmdDataTypes, line 438")
set MM=MM-1
endfunction
function JHt takes integer PHt,string AHt returns nothing
local integer DHt
local integer HHt
set w3[MM]=AHt
set MM=MM+1
set DHt=kAs(wK[PHt],"when calling iterator in ScmdDataTypes, line 1502")
loop
exitwhen not PPs(DHt,"when calling hasNext in ScmdDataTypes, line 1502")
set HHt=EPs(DHt,"when calling next in ScmdDataTypes, line 1502")
call R4o(HHt,"when calling dispatch_BuiltinData_destroyBuiltinData in ScmdDataTypes, line 1503")
endloop
call HPs(DHt,"when calling close in ScmdDataTypes, line 1502")
call vEc(wK[PHt],"when calling dispatch_HashList_destroyHashList in ScmdDataTypes, line 1504")
if uK[PHt]!=0 then
call R4o(uK[PHt],"when calling dispatch_BuiltinData_destroyBuiltinData in ScmdDataTypes, line 1506")
endif
call MVt(PHt)
set MM=MM-1
endfunction
function QXS takes integer vXS,string mXS returns nothing
set w3[MM]=mXS
set MM=MM+1
if px[vXS]==0 then
call Mau("Double free: object of type BuiltinFunction","when calling error in ScmdDataTypes, line 1514")
else
set lx[bx]=vXS
set bx=bx+1
set px[vXS]=0
endif
set MM=MM-1
endfunction
function xDt takes integer kDt,string jDt returns nothing
set w3[MM]=jDt
set MM=MM+1
call JHt(kDt,"when calling BuiltinFunction_onDestroy in ScmdDataTypes, line 1514")
call QXS(kDt,"when calling dealloc_BuiltinFunction in ScmdDataTypes, line 1514")
set MM=MM-1
endfunction
function xYu takes hashtable FYu,integer kYu,integer jYu returns triggercondition
return LoadTriggerConditionHandle(FYu,kYu,jYu)
endfunction
function LVS takes integer JVS,string KVS returns nothing
set w3[MM]=KVS
set MM=MM+1
if px[JVS]==0 then
call Mau("Double free: object of type Item","when calling error in ScmdDataTypes, line 807")
else
set lx[bx]=JVS
set bx=bx+1
set px[JVS]=0
endif
set MM=MM-1
endfunction
function h3t takes integer g3t returns nothing
call D_i(g3t)
endfunction
function y3t takes integer l3t,string b3t returns nothing
set w3[MM]=b3t
set MM=MM+1
call h3t(l3t)
call LVS(l3t,"when calling dealloc_Item in ScmdDataTypes, line 807")
set MM=MM-1
endfunction
function KGo takes integer gGo,integer hGo,string FGo returns nothing
local integer kGo
local string jGo
local integer xGo
local integer vGo
local integer mGo
local integer QGo
local integer WGo
local integer EGo
local integer ZGo
local integer UGo
local integer IGo
local integer PGo
local integer AGo
local integer DGo
local integer HGo
local string JGo
if gGo==0 then
set w3[MM]=FGo
set MM=MM+1
if hx[hGo]==0 then
if hGo==0 then
call Mau("Nullpointer exception when calling Context.Context","when calling error in ScmdDataTypes, line 1117")
else
call Mau("Called Context.Context on invalid object.","when calling error in ScmdDataTypes, line 1117")
endif
endif
call KGo(6,hGo,"when calling destroyContext in ScmdDataTypes, line 1117")
set MM=MM-1
elseif gGo==1 then
set w3[MM]=FGo
set MM=MM+1
call KGo(16,hGo,"when calling Expression_onDestroy in ScmdDataTypes, line 1583")
call PCS(hGo,"when calling dealloc_Expression in ScmdDataTypes, line 1583")
set MM=MM-1
elseif gGo==2 then
set w3[MM]=FGo
set MM=MM+1
call KGo(8,hGo,"when calling Vector_onDestroy in ScmdDataTypes, line 1112")
call ZMS(hGo,"when calling dealloc_Vector in ScmdDataTypes, line 1112")
set MM=MM-1
elseif gGo==3 then
set w3[MM]=FGo
set MM=MM+1
call KGo(17,hGo,"when calling RuntimeFunction_onDestroy in ScmdDataTypes, line 1366")
call VBS(hGo,"when calling dealloc_RuntimeFunction in ScmdDataTypes, line 1366")
set MM=MM-1
elseif gGo==4 then
set w3[MM]=FGo
set MM=MM+1
set kGo=fHs(aK[hGo],"when calling iterator in ScmdDataTypes, line 1133")
loop
exitwhen not PPs(kGo,"when calling hasNext in ScmdDataTypes, line 1133")
set jGo=gvr(EPs(kGo,"when calling next in ScmdDataTypes, line 1133"),"when calling stringFromIndex in ScmdDataTypes, line 1133")
call KGo(5,BZc(aK[hGo],Rvr(jGo,"when calling stringToIndex in ScmdDataTypes, line 1134"),"when calling get in ScmdDataTypes, line 1134"),"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1134")
endloop
call HPs(kGo,"when calling close in ScmdDataTypes, line 1133")
call tUc(aK[hGo],"when calling dispatch_IterableMap_destroyIterableMap in ScmdDataTypes, line 1135")
set MM=MM-1
elseif gGo==5 then
set w3[MM]=FGo
set MM=MM+1
if xx[hGo]==0 then
if hGo==0 then
call Mau("Nullpointer exception when calling GenericSharedPointer.GenericSharedPointer","when calling error in ScmdDataTypes, line 100")
else
call Mau("Called GenericSharedPointer.GenericSharedPointer on invalid object.","when calling error in ScmdDataTypes, line 100")
endif
endif
call KGo(18,hGo,"when calling destroyGenericSharedPointer in ScmdDataTypes, line 100")
set MM=MM-1
elseif gGo==6 then
set w3[MM]=FGo
set MM=MM+1
call KGo(4,hGo,"when calling Context_onDestroy in ScmdDataTypes, line 1132")
call eCS(hGo,"when calling dealloc_Context in ScmdDataTypes, line 1132")
set MM=MM-1
elseif gGo==7 then
set w3[MM]=FGo
set MM=MM+1
call KGo(11,hGo,"when calling SharedPointer_onDestroy in ScmdDataTypes, line 166")
call iNS(hGo,"when calling dealloc_SharedPointer in ScmdDataTypes, line 166")
set MM=MM-1
elseif gGo==8 then
set w3[MM]=FGo
set MM=MM+1
set xGo=kAs(sL[hGo],"when calling iterator in ScmdDataTypes, line 1113")
loop
exitwhen not PPs(xGo,"when calling hasNext in ScmdDataTypes, line 1113")
set vGo=EPs(xGo,"when calling next in ScmdDataTypes, line 1113")
call KGo(5,vGo,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1114")
endloop
call HPs(xGo,"when calling close in ScmdDataTypes, line 1113")
call vEc(sL[hGo],"when calling dispatch_HashList_destroyHashList in ScmdDataTypes, line 1115")
set MM=MM-1
elseif gGo==9 then
set w3[MM]=FGo
set MM=MM+1
if px[hGo]==0 then
if hGo==0 then
call Mau("Nullpointer exception when calling Object.Object","when calling error in ScmdDataTypes, line 57")
else
call Mau("Called Object.Object on invalid object.","when calling error in ScmdDataTypes, line 57")
endif
endif
if px[hGo]<=1433 then
if px[hGo]<=1424 then
if px[hGo]<=1420 then
if px[hGo]<=1418 then
if px[hGo]<=1417 then
if px[hGo]<=1416 then
call O1t(hGo,"when calling destroyObject in ScmdDataTypes, line 57")
else
call xDt(hGo,"when calling destroyBuiltinFunction in ScmdDataTypes, line 57")
endif
else
call MHt(hGo,"when calling destroyBuiltinSpecialForm in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1419 then
call LVt(hGo,"when calling destroyFunction in ScmdDataTypes, line 57")
else
call KGo(3,hGo,"when calling destroyRuntimeFunction in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1422 then
if px[hGo]<=1421 then
call GKt(hGo,"when calling destroyCameraSetup in ScmdDataTypes, line 57")
else
call bCt(hGo,"when calling destroyException in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1423 then
call JKt(hGo,"when calling destroyClassCastException in ScmdDataTypes, line 57")
else
call KGo(1,hGo,"when calling destroyExpression in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1429 then
if px[hGo]<=1427 then
if px[hGo]<=1426 then
if px[hGo]<=1425 then
call SNt(hGo,"when calling destroyGroup in ScmdDataTypes, line 57")
else
call UNt(hGo,"when calling destroyHandle in ScmdDataTypes, line 57")
endif
else
call VIt(hGo,"when calling destroyAgent in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1428 then
call m_i(hGo,"when calling destroyWidget in ScmdDataTypes, line 57")
else
call HXt(hGo,"when calling destroyDestructable in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1431 then
if px[hGo]<=1430 then
call y3t(hGo,"when calling destroyItem in ScmdDataTypes, line 57")
else
call c0i(hGo,"when calling destroyUnit in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1432 then
call O1t(hGo,"when calling destroyObject in ScmdDataTypes, line 57")
else
call hAt(hGo,"when calling destroyLiteralBoolean in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1442 then
if px[hGo]<=1438 then
if px[hGo]<=1436 then
if px[hGo]<=1435 then
if px[hGo]<=1434 then
call UMt(hGo,"when calling destroyLiteralInteger in ScmdDataTypes, line 57")
else
call w4t(hGo,"when calling destroyLiteralReal in ScmdDataTypes, line 57")
endif
else
call l7i(hGo,"when calling destroyLiteralString in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1437 then
call P3t(hGo,"when calling destroyNull in ScmdDataTypes, line 57")
else
call O1t(hGo,"when calling destroyObject in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1440 then
if px[hGo]<=1439 then
call d1t(hGo,"when calling destroyReal in ScmdDataTypes, line 57")
else
call iMt(hGo,"when calling destroyInteger in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1441 then
call k4t(hGo,"when calling destroyRect in ScmdDataTypes, line 57")
else
call q2t(hGo,"when calling destroyRegion in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1447 then
if px[hGo]<=1445 then
if px[hGo]<=1444 then
if px[hGo]<=1443 then
call j5i(hGo,"when calling destroySound in ScmdDataTypes, line 57")
else
call K5i(hGo,"when calling destroySpecialEffect in ScmdDataTypes, line 57")
endif
else
call E6i(hGo,"when calling destroyString in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1446 then
call XPt(hGo,"when calling destroyBoolean in ScmdDataTypes, line 57")
else
call Q7i(hGo,"when calling destroySymbol in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1449 then
if px[hGo]<=1448 then
call KGo(13,hGo,"when calling destroyTrigger in ScmdDataTypes, line 57")
else
call U9i(hGo,"when calling destroyUndefined in ScmdDataTypes, line 57")
endif
elseif px[hGo]<=1450 then
call KGo(2,hGo,"when calling destroyVector in ScmdDataTypes, line 57")
else
call S_i(hGo,"when calling destroyWeatherEffect in ScmdDataTypes, line 57")
endif
set MM=MM-1
elseif gGo==10 then
set w3[MM]=FGo
set MM=MM+1
if xx[hGo]==0 then
if hGo==0 then
call Mau("Nullpointer exception when calling SharedPointer.SharedPointer","when calling error in ScmdDataTypes, line 166")
else
call Mau("Called SharedPointer.SharedPointer on invalid object.","when calling error in ScmdDataTypes, line 166")
endif
endif
call KGo(7,hGo,"when calling destroySharedPointer in ScmdDataTypes, line 166")
set MM=MM-1
elseif gGo==11 then
set w3[MM]=FGo
set MM=MM+1
call KGo(14,hGo,"when calling GenericSharedPointer_onDestroy in ScmdDataTypes, line 166")
set MM=MM-1
elseif gGo==12 then
set w3[MM]=FGo
set MM=MM+1
call pxr(CK[hGo])
call ovr(CK[hGo],BK[hGo])
set mGo=0
set QGo=iYu(qd,VK[hGo],-1)-1
loop
exitwhen mGo>QGo
call ovr(CK[hGo],xYu(qd,VK[hGo],mGo))
set mGo=mGo+1
endloop
call jGu(qd,VK[hGo])
call ivr(CK[hGo],NK[hGo])
call cxr(CK[hGo])
call Oxr(CK[hGo])
call bxr(CK[hGo])
set WGo=kAs(MK[hGo],"when calling iterator in ScmdDataTypes, line 990")
loop
exitwhen not PPs(WGo,"when calling hasNext in ScmdDataTypes, line 990")
set EGo=EPs(WGo,"when calling next in ScmdDataTypes, line 990")
call KGo(9,EGo,"when calling dispatch_Object_destroyObject in ScmdDataTypes, line 991")
endloop
call HPs(WGo,"when calling close in ScmdDataTypes, line 990")
call vEc(MK[hGo],"when calling dispatch_HashList_destroyHashList in ScmdDataTypes, line 992")
set ZGo=0
set UGo=iYu(ed,VK[hGo],-1)-1
loop
exitwhen ZGo>UGo
call KGo(10,iYu(ed,VK[hGo],ZGo),"when calling dispatch_SharedPointer_destroySharedPointer in ScmdDataTypes, line 994")
set ZGo=ZGo+1
endloop
call jGu(ed,VK[hGo])
set IGo=0
set PGo=iYu(ad,VK[hGo],-1)-1
loop
exitwhen IGo>PGo
call KGo(10,iYu(ad,VK[hGo],IGo),"when calling dispatch_SharedPointer_destroySharedPointer in ScmdDataTypes, line 997")
set IGo=IGo+1
endloop
call jGu(ad,VK[hGo])
call KGo(0,Nio(nd,VK[hGo],"when calling loadInt in ScmdDataTypes, line 999"),"when calling dispatch_Context_destroyContext in ScmdDataTypes, line 999")
set MM=MM-1
elseif gGo==13 then
set w3[MM]=FGo
set MM=MM+1
call KGo(12,hGo,"when calling Trigger_onDestroy in ScmdDataTypes, line 980")
call iMS(hGo,"when calling dealloc_Trigger in ScmdDataTypes, line 980")
set MM=MM-1
elseif gGo==14 then
set w3[MM]=FGo
set MM=MM+1
call j7o(GK[hGo],"when calling decrease in ScmdDataTypes, line 161")
if Q7o(GK[hGo],"when calling getUseCount in ScmdDataTypes, line 162")==0 then
call KGo(9,YK[hGo],"when calling dispatch_Object_destroyObject in ScmdDataTypes, line 163")
call Y7o(GK[hGo],"when calling dispatch_ReferenceCounter_destroyReferenceCounter in ScmdDataTypes, line 164")
endif
set MM=MM-1
elseif gGo==15 then
set w3[MM]=FGo
set MM=MM+1
set AGo=kAs(JJ[hGo],"when calling iterator in ScmdDataTypes, line 1248")
loop
exitwhen not PPs(AGo,"when calling hasNext in ScmdDataTypes, line 1248")
set DGo=EPs(AGo,"when calling next in ScmdDataTypes, line 1248")
call KGo(5,DGo,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1249")
endloop
call HPs(AGo,"when calling close in ScmdDataTypes, line 1248")
call vEc(JJ[hGo],"when calling dispatch_HashList_destroyHashList in ScmdDataTypes, line 1250")
set MM=MM-1
elseif gGo==16 then
set w3[MM]=FGo
set MM=MM+1
call KGo(19,TK[hGo],"when calling dispatch_Arguments_destroyArguments in ScmdDataTypes, line 1584")
if RK[hGo]!=0 then
call KGo(5,RK[hGo],"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1586")
endif
set MM=MM-1
elseif gGo==17 then
set w3[MM]=FGo
set MM=MM+1
set HGo=fHs(UK[hGo],"when calling iterator in ScmdDataTypes, line 1367")
loop
exitwhen not PPs(HGo,"when calling hasNext in ScmdDataTypes, line 1367")
set JGo=gvr(EPs(HGo,"when calling next in ScmdDataTypes, line 1367"),"when calling stringFromIndex in ScmdDataTypes, line 1367")
call KGo(5,BZc(UK[hGo],Rvr(JGo,"when calling stringToIndex in ScmdDataTypes, line 1368"),"when calling get in ScmdDataTypes, line 1368"),"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1368")
endloop
call HPs(HGo,"when calling close in ScmdDataTypes, line 1367")
call tUc(UK[hGo],"when calling dispatch_IterableMap_destroyIterableMap in ScmdDataTypes, line 1369")
call vEc(EK[hGo],"when calling dispatch_HashList_destroyHashList in ScmdDataTypes, line 1370")
call KGo(5,ZK[hGo],"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1371")
call MVt(hGo)
set MM=MM-1
elseif gGo==18 then
set w3[MM]=FGo
set MM=MM+1
call KGo(14,hGo,"when calling GenericSharedPointer_onDestroy in ScmdDataTypes, line 160")
call rVS(hGo,"when calling dealloc_GenericSharedPointer in ScmdDataTypes, line 160")
set MM=MM-1
elseif gGo==19 then
set w3[MM]=FGo
set MM=MM+1
if nx[hGo]==0 then
if hGo==0 then
call Mau("Nullpointer exception when calling Arguments.Arguments","when calling error in ScmdDataTypes, line 1243")
else
call Mau("Called Arguments.Arguments on invalid object.","when calling error in ScmdDataTypes, line 1243")
endif
endif
call KGo(20,hGo,"when calling destroyArguments in ScmdDataTypes, line 1243")
set MM=MM-1
elseif gGo==20 then
set w3[MM]=FGo
set MM=MM+1
call KGo(15,hGo,"when calling Arguments_onDestroy in ScmdDataTypes, line 1247")
call iXS(hGo,"when calling dealloc_Arguments in ScmdDataTypes, line 1247")
set MM=MM-1
endif
endfunction
function n8i takes integer q8i,string a8i returns nothing
set w3[MM]=a8i
set MM=MM+1
call KGo(5,LK[q8i],"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 240")
set MM=MM-1
endfunction
function R8i takes integer d8i,string f8i returns nothing
set w3[MM]=f8i
set MM=MM+1
call n8i(d8i,"when calling SymbolData_onDestroy in ScmdDataTypes, line 239")
call VNS(d8i,"when calling dealloc_SymbolData in ScmdDataTypes, line 239")
set MM=MM-1
endfunction
function T9o takes integer f9o,string R9o returns nothing
set w3[MM]=R9o
set MM=MM+1
if Hx[f9o]==0 then
if f9o==0 then
call Mau("Nullpointer exception when calling SymbolData.SymbolData","when calling error in ScmdDataTypes, line 226")
else
call Mau("Called SymbolData.SymbolData on invalid object.","when calling error in ScmdDataTypes, line 226")
endif
endif
call R8i(f9o,"when calling destroySymbolData in ScmdDataTypes, line 226")
set MM=MM-1
endfunction
function sRS takes integer BfS,string NfS returns integer
local integer MfS=DFr(NfS)
local integer wRS=iYu(AM[BfS],MfS,-1)
local integer uRS=0
local integer rRS=wRS-1
loop
exitwhen uRS>rRS
if hYu(AM[BfS],MfS,uRS)==NfS then
return iYu(DM[BfS],MfS,uRS)
endif
set uRS=uRS+1
endloop
return 0
endfunction
function eqo takes integer lqo,string bqo,string yqo returns integer
local integer pqo
set w3[MM]=yqo
set MM=MM+1
if mm[lqo]==0 then
if lqo==0 then
call Mau("Nullpointer exception when calling StringHashMap.get","when calling error in Utility, line 127")
else
call Mau("Called StringHashMap.get on invalid object.","when calling error in Utility, line 127")
endif
endif
set pqo=sRS(lqo,bqo)
set MM=MM-1
return pqo
endfunction
function LNS takes string JNS returns integer
local integer KNS
set w3[MM]=JNS
set MM=MM+1
if Ax==0 then
if Dx<32768 then
set Dx=Dx+1
set KNS=Dx
set Hx[KNS]=1644
else
call Mau("Out of memory: Could not create SymbolData.","when calling error in ScmdDataTypes, line 226")
set KNS=0
endif
else
set Ax=Ax-1
set KNS=Px[Ax]
set Hx[KNS]=1644
endif
set MM=MM-1
return KNS
endfunction
function u8i takes integer w8i returns nothing
endfunction
function e8i takes integer O8i,string l8i,string b8i,integer y8i,boolean p8i returns nothing
call u8i(O8i)
set LK[O8i]=y8i
set XK[O8i]=p8i
endfunction
function o8i takes string r8i,string s8i,integer t8i,boolean i8i,string S8i returns integer
local integer c8i
set w3[MM]=S8i
set MM=MM+1
set c8i=LNS("when calling alloc_SymbolData in ScmdDataTypes, line 233")
call e8i(c8i,r8i,s8i,t8i,i8i)
set MM=MM-1
return c8i
endfunction
function F2u takes integer d2u,string f2u,string R2u,string T2u,integer Y2u,boolean G2u,string g2u returns boolean
local integer h2u
set w3[MM]=g2u
set MM=MM+1
set h2u=eqo(yd[d2u],f2u,"when calling get in ScmdDataTypes, line 263")
if h2u!=0 then
if XK[h2u]then
set MM=MM-1
return false
endif
call T9o(h2u,"when calling dispatch_SymbolData_destroySymbolData in ScmdDataTypes, line 267")
endif
call tqo(yd[d2u],f2u,o8i(R2u,T2u,Y2u,G2u,"when calling new_SymbolData in ScmdDataTypes, line 268"),"when calling put in ScmdDataTypes, line 268")
set MM=MM-1
return true
endfunction
function e5i takes integer p5i returns nothing
endfunction
function KBt takes integer JBt returns nothing
endfunction
function XBt takes integer LBt returns nothing
call KBt(LBt)
endfunction
function iVS takes string sVS returns integer
local integer tVS
set w3[MM]=sVS
set MM=MM+1
if mx==0 then
if Qx<32768 then
set Qx=Qx+1
set tVS=Qx
set Wx[tVS]=1558
else
call Mau("Out of memory: Could not create ReferenceCounter.","when calling error in ScmdDataTypes, line 102")
set tVS=0
endif
else
set mx=mx-1
set tVS=vx[mx]
set Wx[tVS]=1558
endif
set MM=MM-1
return tVS
endfunction
function HBt takes string ABt returns integer
local integer DBt
set w3[MM]=ABt
set MM=MM+1
set DBt=iVS("when calling alloc_ReferenceCounter in ScmdDataTypes, line 102")
call XBt(DBt)
set MM=MM-1
return DBt
endfunction
function fBt takes integer dBt returns nothing
endfunction
function mBt takes integer vBt returns nothing
set gK[vBt]=gK[vBt]+1
endfunction
function h7o takes integer G7o,string g7o returns nothing
set w3[MM]=g7o
set MM=MM+1
if Wx[G7o]==0 then
if G7o==0 then
call Mau("Nullpointer exception when calling ReferenceCounter.increase","when calling error in ScmdDataTypes, line 106")
else
call Mau("Called ReferenceCounter.increase on invalid object.","when calling error in ScmdDataTypes, line 106")
endif
endif
call mBt(G7o)
set MM=MM-1
endfunction
function xBt takes integer FBt,integer kBt,string jBt returns nothing
set w3[MM]=jBt
set MM=MM+1
call fBt(FBt)
set YK[FBt]=kBt
set GK[FBt]=HBt("when calling new_ReferenceCounter in ScmdDataTypes, line 124")
call h7o(GK[FBt],"when calling increase in ScmdDataTypes, line 125")
set MM=MM-1
endfunction
function d5i takes integer q5i,integer a5i,string n5i returns nothing
set w3[MM]=n5i
set MM=MM+1
call xBt(q5i,a5i,"when calling construct_GenericSharedPointer2 in ScmdDataTypes, line 168")
call e5i(q5i)
set MM=MM-1
endfunction
function rNS takes string wNS returns integer
local integer uNS
set w3[MM]=wNS
set MM=MM+1
if kx==0 then
if jx<32768 then
set jx=jx+1
set uNS=jx
set xx[uNS]=821
else
call Mau("Out of memory: Could not create SharedPointer.","when calling error in ScmdDataTypes, line 166")
set uNS=0
endif
else
set kx=kx-1
set uNS=Fx[kx]
set xx[uNS]=821
endif
set MM=MM-1
return uNS
endfunction
function l5i takes integer c5i,string o5i returns integer
local integer O5i
set w3[MM]=o5i
set MM=MM+1
set O5i=rNS("when calling alloc_SharedPointer in ScmdDataTypes, line 168")
call d5i(O5i,c5i,"when calling construct_SharedPointer in ScmdDataTypes, line 168")
set MM=MM-1
return O5i
endfunction
function gBu takes integer aBu,string nBu,string dBu,string fBu,string RBu returns nothing
local integer TBu
local integer YBu
local integer GBu
set w3[MM]=RBu
set MM=MM+1
set TBu=l5i(aBu,"when calling new_SharedPointer in ScmdBuiltinsRegistrar, line 18")
set YBu=0
set GBu=bj_MAX_PLAYERS-1
loop
exitwhen YBu>GBu
call F2u(YBu,nBu,dBu,fBu,TBu,true,"when calling assign in ScmdBuiltinsRegistrar, line 20")
set YBu=YBu+1
endloop
set MM=MM-1
endfunction
function jBu takes integer hBu,string FBu,string kBu returns nothing
set w3[MM]=kBu
set MM=MM+1
call gBu(hBu,FBu,null,null,"when calling registerProtectedBuiltin in ScmdBuiltinsRegistrar, line 23")
set MM=MM-1
endfunction
function o2u takes nothing returns integer
return ld
endfunction
function oic takes string Sic returns integer
local integer cic
set w3[MM]=Sic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cic=kj
set jj[cic]=1079
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 145")
set cic=0
endif
else
set Fj=Fj-1
set cic=hj[Fj]
set jj[cic]=1079
endif
set MM=MM-1
return cic
endfunction
function ric takes string wic returns integer
local integer uic
set w3[MM]=wic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uic=kj
set jj[uic]=1077
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 131")
set uic=0
endif
else
set Fj=Fj-1
set uic=hj[Fj]
set jj[uic]=1077
endif
set MM=MM-1
return uic
endfunction
function jar takes string ear returns boolean
local integer qar
local integer aar
local integer nar
local integer dar
local integer far
local integer Rar
local integer Tar
local integer Yar
local integer Gar
local integer gar
local integer har
local integer Far
local integer kar
set w3[MM]=ear
set MM=MM+1
set Tf=127
set Yf="b77309638b2ca9b47c980644e2829e4731a02e228f7aa11c00d439c6513a3db7ce942591fafcc1bca5d4173882e5151247b94aa5cd07258db7bbbed960e57d1"
set Gf="ce942591fafcc1bca5d4173882e5151247b94aa5cd07258db7bbbed960e57d1cb77309638b2ca9b47c980644e2829e4731a02e228f7aa11c00d439c6513a3db"
set gf="7f9e32f1c81c0e01ac0acd1e3cc932913e0a9148edf84f07cd8f39303f40cad14674228e77218f7db8d29805025ecc0dface13ad2e8db22fccf4bc7d81db125"
set hf="4674228e77218f7db8d29805025ecc0dface13ad2e8db22fccf4bc7d81db12597f9e32f1c81c0e01ac0acd1e3cc932913e0a9148edf84f07cd8f39303f40cad"
set Ff="d358b08524f8991086413b107128cf8d6fd89225f1c3fc7e8738e33dab4cc509ef3d47f638e9e9bc140e22e5547df108ca76117c97a55a724196873d1a5f52a"
set kf="ef3d47f638e9e9bc140e22e5547df108ca76117c97a55a724196873d1a5f52a1d358b08524f8991086413b107128cf8d6fd89225f1c3fc7e8738e33dab4cc50"
set jf=" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
set mf=Filter(Gaw)
set qar=Htc("when calling alloc_InputStreamProcessor_registerInputStreamProcessor_SotFRP_SaveLoad in SotFRP_SaveLoad, line 121")
call G8r(qar,Yf,Gf,"when calling registerInputStreamProcessor in SotFRP_SaveLoad, line 121")
set aar=Ltc("when calling alloc_InputStreamProcessor_registerInputStreamProcessor_SotFRP_SaveLoad in SotFRP_SaveLoad, line 122")
call G8r(aar,Ff,kf,"when calling registerInputStreamProcessor in SotFRP_SaveLoad, line 122")
set nar=Vtc("when calling alloc_InputStreamProcessor_registerInputStreamProcessor_SotFRP_SaveLoad in SotFRP_SaveLoad, line 123")
call G8r(nar,gf,hf,"when calling registerInputStreamProcessor in SotFRP_SaveLoad, line 123")
set dar=Mtc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in SotFRP_SaveLoad, line 124")
set far=eDt(dar,"when calling new_BuiltinData in SotFRP_SaveLoad, line 124")
call Fao(far,S2u(),"when calling setArgumentsTypes in SotFRP_SaveLoad, line 130")
call jBu(WHt(far,"when calling new_BuiltinFunction in SotFRP_SaveLoad, line 124"),"setloadingrect","when calling registerProtectedBuiltin in SotFRP_SaveLoad, line 124")
set Rar=ric("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in SotFRP_SaveLoad, line 131")
set Tar=eDt(Rar,"when calling new_BuiltinData in SotFRP_SaveLoad, line 131")
call dao(Tar,S2u(),o2u(),"when calling setArgumentsTypes in SotFRP_SaveLoad, line 137")
call jBu(WHt(Tar,"when calling new_BuiltinFunction in SotFRP_SaveLoad, line 131"),"saveunits","when calling registerProtectedBuiltin in SotFRP_SaveLoad, line 131")
set Yar=iic("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in SotFRP_SaveLoad, line 138")
set Gar=eDt(Yar,"when calling new_BuiltinData in SotFRP_SaveLoad, line 138")
call dao(Gar,S2u(),o2u(),"when calling setArgumentsTypes in SotFRP_SaveLoad, line 144")
call jBu(WHt(Gar,"when calling new_BuiltinFunction in SotFRP_SaveLoad, line 138"),"savedestructables","when calling registerProtectedBuiltin in SotFRP_SaveLoad, line 138")
set gar=oic("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in SotFRP_SaveLoad, line 145")
set har=eDt(gar,"when calling new_BuiltinData in SotFRP_SaveLoad, line 145")
call dao(har,S2u(),o2u(),"when calling setArgumentsTypes in SotFRP_SaveLoad, line 151")
call jBu(WHt(har,"when calling new_BuiltinFunction in SotFRP_SaveLoad, line 145"),"saveitems","when calling registerProtectedBuiltin in SotFRP_SaveLoad, line 145")
set Far=bic("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in SotFRP_SaveLoad, line 152")
set kar=eDt(Far,"when calling new_BuiltinData in SotFRP_SaveLoad, line 152")
call dao(kar,S2u(),o2u(),"when calling setArgumentsTypes in SotFRP_SaveLoad, line 161")
call jBu(WHt(kar,"when calling new_BuiltinFunction in SotFRP_SaveLoad, line 152"),"savehandles","when calling registerProtectedBuiltin in SotFRP_SaveLoad, line 152")
set MM=MM-1
return true
endfunction
function ARo takes nothing returns boolean
set MM=0
return jar("SotFRP_SaveLoad, line 1")
endfunction
function EUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),4,6)=="agi")then
return false
endif
return true
endfunction
function IUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),4,7)=="life")then
return false
endif
return true
endfunction
function PUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),4,7)=="mana")then
return false
endif
return true
endfunction
function QUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),4,6)=="str")then
return false
endif
return true
endfunction
function UUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),4,6)=="arm")then
return false
endif
return true
endfunction
function WUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),4,6)=="int")then
return false
endif
return true
endfunction
function ZUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),4,6)=="dam")then
return false
endif
return true
endfunction
function mUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),4,14)=="itemcharges")then
return false
endif
return true
endfunction
function AUw takes nothing returns nothing
if mUw()then
call S2I(SubStringBJ(GetEventPlayerChatString(),16,StringLength(GetEventPlayerChatString())))
endif
if QUw()then
call S2I(SubStringBJ(GetEventPlayerChatString(),8,StringLength(GetEventPlayerChatString())))
endif
if WUw()then
call S2I(SubStringBJ(GetEventPlayerChatString(),8,StringLength(GetEventPlayerChatString())))
endif
if EUw()then
call S2I(SubStringBJ(GetEventPlayerChatString(),8,StringLength(GetEventPlayerChatString())))
endif
if ZUw()then
call S2I(SubStringBJ(GetEventPlayerChatString(),8,StringLength(GetEventPlayerChatString())))
endif
if UUw()then
call S2I(SubStringBJ(GetEventPlayerChatString(),8,StringLength(GetEventPlayerChatString())))
endif
if IUw()then
call S2I(SubStringBJ(GetEventPlayerChatString(),9,StringLength(GetEventPlayerChatString())))
endif
if PUw()then
call S2I(SubStringBJ(GetEventPlayerChatString(),9,StringLength(GetEventPlayerChatString())))
endif
endfunction
function AWu takes nothing returns boolean
set qa=ConvertPlayerColor(24)
set aa=ConvertPlayerColor(25)
set na=ConvertPlayerColor(26)
set da=ConvertPlayerColor(27)
set fa[0]=PLAYER_COLOR_RED
set fa[1]=PLAYER_COLOR_BLUE
set fa[2]=PLAYER_COLOR_CYAN
set fa[3]=PLAYER_COLOR_PURPLE
set fa[4]=PLAYER_COLOR_YELLOW
set fa[5]=PLAYER_COLOR_ORANGE
set fa[6]=PLAYER_COLOR_GREEN
set fa[7]=PLAYER_COLOR_PINK
set fa[8]=PLAYER_COLOR_LIGHT_GRAY
set fa[9]=PLAYER_COLOR_LIGHT_BLUE
set fa[10]=PLAYER_COLOR_AQUA
set fa[11]=PLAYER_COLOR_BROWN
set fa[12]=PLAYER_COLOR_MAROON
set fa[13]=PLAYER_COLOR_NAVY
set fa[14]=PLAYER_COLOR_TURQUOISE
set fa[15]=PLAYER_COLOR_VIOLET
set fa[16]=PLAYER_COLOR_WHEAT
set fa[17]=PLAYER_COLOR_PEACH
set fa[18]=PLAYER_COLOR_MINT
set fa[19]=PLAYER_COLOR_LAVENDER
set fa[20]=PLAYER_COLOR_COAL
set fa[21]=PLAYER_COLOR_SNOW
set fa[22]=PLAYER_COLOR_EMERALD
set fa[23]=PLAYER_COLOR_PEANUT
set fa[24]=qa
set fa[25]=aa
set fa[26]=na
set fa[27]=da
return true
endfunction
function xRw takes unit jRw returns nothing
endfunction
function AZw takes nothing returns nothing
local integer IZw=0
local unit PZw=GetTriggerUnit()
if GetUnitTypeId(PZw)==1667528055 then
call SetUnitAcquireRange(PZw,1.)
endif
if HaveStoredInteger(xt,UnitId2String(GetUnitTypeId(PZw)),"UNIT_STATE_MAX_LIFE")==false then
if IsUnitType(PZw,UNIT_TYPE_HERO)then
set IZw=GetHeroStr(PZw,false)
call SetHeroStr(PZw,0,true)
call StoreInteger(xt,UnitId2String(GetUnitTypeId(PZw)),"UNIT_STATE_MAX_LIFE",R2I(GetUnitState(PZw,UNIT_STATE_MAX_LIFE)))
call SetHeroStr(PZw,IZw,true)
set IZw=0
else
call StoreInteger(xt,UnitId2String(GetUnitTypeId(PZw)),"UNIT_STATE_MAX_LIFE",R2I(GetUnitState(PZw,UNIT_STATE_MAX_LIFE)))
endif
endif
if HaveStoredInteger(xt,UnitId2String(GetUnitTypeId(PZw)),"UNIT_STATE_MAX_MANA")==false then
if IsUnitType(PZw,UNIT_TYPE_HERO)then
set IZw=GetHeroInt(PZw,false)
call SetHeroInt(PZw,0,true)
call StoreInteger(xt,UnitId2String(GetUnitTypeId(PZw)),"UNIT_STATE_MAX_MANA",R2I(GetUnitState(PZw,UNIT_STATE_MAX_MANA)))
call SetHeroInt(PZw,IZw,true)
set IZw=0
else
call StoreInteger(xt,UnitId2String(GetUnitTypeId(PZw)),"UNIT_STATE_MAX_MANA",R2I(GetUnitState(PZw,UNIT_STATE_MAX_MANA)))
endif
endif
call xRw(PZw)
call AddUnitAnimationProperties(PZw,null,true)
call TriggerRegisterUnitEvent(dO,PZw,EVENT_UNIT_DAMAGED)
call UnitAddAbility(PZw,1097691750)
call UnitRemoveAbility(PZw,1097691750)
call SetUnitUseFood(PZw,false)
call SetPlayerState(GetOwningPlayer(PZw),PLAYER_STATE_RESOURCE_GOLD,1000000000)
call SetPlayerState(GetOwningPlayer(PZw),PLAYER_STATE_RESOURCE_LUMBER,1000000000)
call SetPlayerState(GetOwningPlayer(PZw),PLAYER_STATE_RESOURCE_FOOD_USED,0)
if GetUnitTypeId(PZw)==1852272492 then
call SetResourceAmount(PZw,9999999)
endif
loop
exitwhen IZw>V
call UnitMakeAbilityPermanent(PZw,true,C[IZw])
set IZw=IZw+1
endloop
set IZw=0
loop
exitwhen IZw>fw
call UnitMakeAbilityPermanent(PZw,true,Rw[IZw])
set IZw=IZw+1
endloop
set IZw=0
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1098015094)
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1096970854)
if IsUnitType(PZw,UNIT_TYPE_STRUCTURE)==true and IsUnitType(PZw,UNIT_TYPE_ANCIENT)==false and IsUnitType(PZw,UNIT_TYPE_SUMMONED)==true then
call UnitRemoveAbility(PZw,1097690998)
endif
set PZw=null
set PZw=null
endfunction
function Chw takes unit Khw returns nothing
local unit Lhw=LoadUnitHandle(i,NO,GetHandleId(Khw))
local group Xhw=LoadGroupHandle(i,BO,GetHandleId(Lhw))
call GroupRemoveUnit(Xhw,Khw)
if FirstOfGroup(Xhw)==null then
call DestroyGroup(Xhw)
call SaveGroupHandle(i,BO,GetHandleId(Lhw),null)
endif
set Xhw=null
set Lhw=null
set Lhw=null
set Xhw=null
endfunction
function A_u takes nothing returns boolean
call Chw(ry)
return true
endfunction
function LxS takes string JxS returns integer
local integer KxS
set w3[MM]=JxS
set MM=MM+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set KxS=qF
else
call Mau("Out of memory: Could not create Comparator_LinkedList.","when calling error in LinkedList, line 529")
set KxS=0
endif
else
set eF=eF-1
set KxS=pF[eF]
endif
set MM=MM-1
return KxS
endfunction
function VxS takes string XxS returns integer
local integer CxS
set w3[MM]=XxS
set MM=MM+1
if eF==0 then
if qF<32768 then
set qF=qF+1
set CxS=qF
else
call Mau("Out of memory: Could not create Comparator_LinkedList.","when calling error in LinkedList, line 533")
set CxS=0
endif
else
set eF=eF-1
set CxS=pF[eF]
endif
set MM=MM-1
return CxS
endfunction
function evr takes real pvr returns integer
return qUu(pvr*GT)
endfunction
function HFu takes string DFu returns boolean
set w3[MM]=DFu
set MM=MM+1
call LxS("when calling alloc_Comparator_LinkedList in LinkedList, line 529")
call VxS("when calling alloc_Comparator_LinkedList in LinkedList, line 533")
call evr(0.)
set MM=MM-1
return true
endfunction
function Afo takes nothing returns boolean
set MM=0
return HFu("LinkedList, line 1")
endfunction
function Ahw takes nothing returns nothing
if GetEventDamage()==0. then
return
endif
set wl=GetEventDamage()
call ForGroup(LoadGroupHandle(i,BO,GetHandleId(GetEventDamageSource())),uww_4146)
endfunction
function Fmu takes nothing returns nothing
set Iq=Iq-1
endfunction
function G8s takes unit R8s,integer T8s,boolean Y8s returns boolean
return UnitMakeAbilityPermanent(R8s,Y8s,T8s)
endfunction
function L5r takes unit J5r,integer K5r returns boolean
return UnitAddAbility(J5r,K5r)
endfunction
function hmu takes unit gmu returns nothing
set Uq[Iq]=gmu
set Iq=Iq+1
endfunction
function nxr takes trigger axr returns boolean
return TriggerEvaluate(axr)
endfunction
function Zmu takes unit Qmu returns nothing
local unit Wmu=Qmu
local unit Emu
call L5r(Wmu,Pq)
set Emu=Wmu
call G8s(Emu,Pq,true)
call hmu(Qmu)
call nxr(Eq)
call Fmu()
set Wmu=null
set Emu=null
endfunction
function Amu takes nothing returns nothing
call Zmu(GetEnumUnit())
endfunction
function Amw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call CreateDestructableLoc(1146384998,G,270.00,1.00,0)
call RemoveLocation(G)
endfunction
function Avu takes nothing returns boolean
set hq=".................................!.#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[.]^_`abcdefghijklmnopqrstuvwxyz{|}~................................................................................................................................."
return true
endfunction
function Avw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function Axw takes nothing returns boolean
if not(GetSpellAbilityId()==1093678935)then
return false
endif
return true
endfunction
function B2w takes nothing returns nothing
local unit V2w=CreateUnitAtLoc(Player(PLAYER_NEUTRAL_PASSIVE),1747995215,GetUnitLoc(GetSpellAbilityUnit()),GetUnitFacing(GetSpellAbilityUnit()))
call UnitAddAbility(V2w,1093683024)
call SetUnitAbilityLevel(V2w,1093683024,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093683020))
call IssuePointOrderLoc(V2w,"rainoffire",GetSpellTargetLoc())
call TriggerSleepAction(12.00)
call RemoveUnit(V2w)
set V2w=null
set V2w=null
endfunction
function B7w takes nothing returns boolean
if not(GetSpellAbilityId()==1093682007)then
return false
endif
return true
endfunction
function B8w takes nothing returns nothing
local timer X8w=GetExpiredTimer()
local unit C8w=LoadUnitHandle(nr,GetHandleId(X8w),StringHash("s"))
local effect V8w=LoadEffectHandle(nr,GetHandleId(X8w),StringHash("e"))
call FlushChildHashtable(nr,GetHandleId(X8w))
call DestroyTimer(X8w)
set X8w=null
call SaveTimerHandle(nr,GetHandleId(C8w),StringHash("daT"),null)
call DestroyEffect(V8w)
set V8w=null
call UnitRemoveAbility(C8w,1095722085)
set C8w=null
set X8w=null
set C8w=null
set V8w=null
endfunction
function BBw takes nothing returns nothing
local unit KBw=GetSpellTargetUnit()
local player XBw=GetOwningPlayer(GetSpellAbilityUnit())
local player LBw=GetOwningPlayer(GetSpellTargetUnit())
local effect CBw
local effect VBw
if IsUnitInGroup(GetSpellTargetUnit(),Yr)==true then
call AddSpecialEffectTargetUnitBJ("origin",KBw,"Abilities\\Spells\\Items\\SpellShieldAmulet\\SpellShieldCaster.mdl")
set KBw=null
set LBw=null
set XBw=null
set CBw=null
set VBw=null
return
endif
call GroupAddUnitSimple(KBw,Yr)
call SetUnitOwner(KBw,XBw,false)
call AddSpecialEffectTargetUnitBJ("overhead",KBw,"Abilities\\Spells\\Other\\Charm\\CharmTarget.mdl")
call AddSpecialEffectTargetUnitBJ("left hand",KBw,"Abilities\\Weapons\\BansheeMissile\\BansheeMissile.mdl")
set CBw=GetLastCreatedEffectBJ()
call AddSpecialEffectTargetUnitBJ("right hand",KBw,"Abilities\\Weapons\\BansheeMissile\\BansheeMissile.mdl")
set VBw=GetLastCreatedEffectBJ()
call UnitAddAbility(KBw,1093682252)
call UnitMakeAbilityPermanent(KBw,true,1093682252)
call PolledWait(30.00)
call UnitRemoveAbility(KBw,1093682252)
call UnitRemoveBuffBJ(1110454857,KBw)
call DestroyEffectBJ(CBw)
call DestroyEffectBJ(VBw)
call AddSpecialEffectTargetUnitBJ("origin",KBw,"Abilities\\Spells\\Human\\DispelMagic\\DispelMagicTarget.mdl")
call SetUnitOwner(KBw,LBw,true)
call GroupRemoveUnitSimple(KBw,Yr)
set KBw=null
set XBw=null
set LBw=null
set CBw=null
set VBw=null
set KBw=null
set LBw=null
set XBw=null
set CBw=null
set VBw=null
endfunction
function CCw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not(GetUnitAbilityLevelSwapped(1093682756,GetEnumUnit())==0)then
return false
endif
if not(GetUnitAbilityLevelSwapped(1093682755,GetEnumUnit())==0)then
return false
endif
return true
endfunction
function VCw takes nothing returns boolean
if not CCw()then
return false
endif
return true
endfunction
function BCw takes nothing returns nothing
if VCw()then
call UnitAddAbilityBJ(1093682755,GetEnumUnit())
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1097167974)
else
call DoNothing()
endif
endfunction
function MDu takes nothing returns integer
set Ma=Ma+1
return Ma
endfunction
function mxr takes trigger jxr,region xxr,boolexpr vxr returns event
return TriggerRegisterEnterRegion(jxr,xxr,vxr)
endfunction
function vhr takes string xhr returns integer
return StringLength(xhr)
endfunction
function BDu takes nothing returns boolean
local trigger VDu
set Na=InitHashtable()
set VDu=CreateTrigger()
call mxr(VDu,De,Filter(aaw))
set Ma=-1
set wn=MDu()
set un=MDu()
set rn=MDu()
set sn=MDu()
set tn=MDu()
set Sn=MDu()
set cn=MDu()
set on=MDu()
set On=MDu()
set ln=MDu()
set bn=MDu()
set yn=MDu()
set pn=MDu()
set en=MDu()
set qn=MDu()
set an=MDu()
set nn=MDu()
set dn=MDu()
set fn=MDu()
set Rn=MDu()
set Tn=MDu()
set Yn=MDu()
set Gn=MDu()
set gn=4
set hn=InitHashtable()
set Fn="nEaPy9rLwNfVqb0Qizj3DkGc1OhTU4XsZgMpYKBtl26JI5FmxCoAv8euWRdH7S"
set kn=vhr(Fn)
set jn="&"
set xn=":"
set vn="*"
set VDu=null
return true
endfunction
function CEw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="terrain on")then
return false
endif
return true
endfunction
function VEw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="terrain off")then
return false
endif
return true
endfunction
function BEw takes nothing returns nothing
if CEw()then
set gw=true
return
endif
if VEw()then
set gw=false
return
endif
set Tw[GetConvertedPlayerId(GetTriggerPlayer())]=S2I(SubStringBJ(GetEventPlayerChatString(),9,11))
call GetConvertedPlayerId(GetTriggerPlayer())
endfunction
function BIw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,1)=="*")then
return false
endif
return true
endfunction
function BKw takes nothing returns boolean
return GetSpellAbilityId()==1097028407 or GetSpellAbilityId()==1097028408
endfunction
function VLw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
return true
endfunction
function BLw takes nothing returns nothing
if VLw()then
call UnitAddTypeBJ(UNIT_TYPE_UNDEAD,GetEnumUnit())
endif
endfunction
function X2S takes integer L2S returns nothing
endfunction
function xlc takes integer klc,string jlc returns nothing
set w3[MM]=jlc
set MM=MM+1
if xv[klc]==0 then
call Mau("Double free: object of type Iterator","when calling error in LinkedListModule, line 71")
else
set Fv[kv]=klc
set kv=kv+1
set xv[klc]=0
endif
set MM=MM-1
endfunction
function P2S takes integer Z2S,string U2S returns nothing
set w3[MM]=U2S
set MM=MM+1
call X2S(Z2S)
call xlc(Z2S,"when calling dealloc_Iterator in LinkedListModule, line 71")
set MM=MM-1
endfunction
function dto takes integer ato,string nto returns nothing
set w3[MM]=nto
set MM=MM+1
if xv[ato]==0 then
if ato==0 then
call Mau("Nullpointer exception when calling Iterator.Iterator","when calling error in LinkedListModule, line 71")
else
call Mau("Called Iterator.Iterator on invalid object.","when calling error in LinkedListModule, line 71")
endif
endif
call P2S(ato,"when calling destroyIterator in LinkedListModule, line 71")
set MM=MM-1
endfunction
function E2S takes integer Q2S,string W2S returns nothing
set w3[MM]=W2S
set MM=MM+1
if WC[Q2S]then
call dto(Q2S,"when calling dispatch_Iterator_destroyIterator in LinkedListModule, line 91")
endif
set MM=MM-1
endfunction
function Flc takes string glc returns integer
local integer hlc
set w3[MM]=glc
set MM=MM+1
if kv==0 then
if jv<32768 then
set jv=jv+1
set hlc=jv
set xv[hlc]=1306
else
call Mau("Out of memory: Could not create Iterator.","when calling error in LinkedListModule, line 71")
set hlc=0
endif
else
set kv=kv-1
set hlc=Fv[kv]
set xv[hlc]=1306
endif
set MM=MM-1
return hlc
endfunction
function D2S takes integer A2S returns nothing
set QC[A2S]=JR
endfunction
function K2S takes integer H2S,boolean J2S returns nothing
call D2S(H2S)
set WC[H2S]=J2S
endfunction
function F2S takes boolean G2S,string g2S returns integer
local integer h2S
set w3[MM]=g2S
set MM=MM+1
set h2S=Flc("when calling alloc_Iterator in LinkedListModule, line 75")
call K2S(h2S,G2S)
set MM=MM-1
return h2S
endfunction
function ekr takes string ykr returns integer
local integer pkr
set w3[MM]=ykr
set MM=MM+1
set pkr=F2S(true,"when calling new_Iterator in LinkedListModule, line 53")
set MM=MM-1
return pkr
endfunction
function j2S takes integer k2S returns boolean
return QC[k2S]!=0
endfunction
function m2S takes integer x2S returns integer
local integer v2S=QC[x2S]
set QC[x2S]=mC[QC[x2S]]
return v2S
endfunction
function egu takes integer ygu,integer pgu returns integer
return BlzBitOr(ygu,pgu)
endfunction
function hwu takes integer Gwu,integer gwu returns integer
set S3=egu(Gwu,gy[gwu])
return S3
endfunction
function Ewu takes integer Qwu,integer Wwu returns integer
set o3=hwu(Qwu,Wwu)
return o3
endfunction
function Rlc takes integer dlc,string flc returns nothing
set w3[MM]=flc
set MM=MM+1
if Yv[dlc]==0 then
call Mau("Double free: object of type SimpleSynchronizer","when calling error in SyncSimple, line 113")
else
set fv[Rv]=dlc
set Rv=Rv+1
set Yv[dlc]=0
endif
set MM=MM-1
endfunction
function E8s takes unit W8s returns nothing
call RemoveUnit(W8s)
endfunction
function U7s takes unit Z7s returns integer
return GetUnitUserData(Z7s)
endfunction
function QHr takes unit mHr returns integer
return U7s(mHr)
endfunction
function Qlc takes integer vlc,string mlc returns nothing
set w3[MM]=mlc
set MM=MM+1
if ek[vlc]==0 then
call Mau("Double free: object of type SynchronizationCallback","when calling error in SyncSimple, line 110")
else
set bk[yk]=vlc
set yk=yk+1
set ek[vlc]=0
endif
set MM=MM-1
endfunction
function B2S takes integer C2S,string V2S returns nothing
set w3[MM]=V2S
set MM=MM+1
call Qlc(C2S,"when calling dealloc_SynchronizationCallback in SyncSimple, line 110")
set MM=MM-1
endfunction
function Tto takes integer fto,string Rto returns nothing
set w3[MM]=Rto
set MM=MM+1
if ek[fto]==0 then
if fto==0 then
call Mau("Nullpointer exception when calling SynchronizationCallback.SynchronizationCallback","when calling error in SyncSimple, line 110")
else
call Mau("Called SynchronizationCallback.SynchronizationCallback on invalid object.","when calling error in SyncSimple, line 110")
endif
endif
call B2S(fto,"when calling destroySynchronizationCallback in SyncSimple, line 110")
set MM=MM-1
endfunction
function M4i takes integer N4i returns nothing
set LR=LR-1
if N4i!=JR then
set mC[vC[N4i]]=mC[N4i]
else
set JR=mC[N4i]
endif
if N4i!=KR then
set vC[mC[N4i]]=vC[N4i]
else
set KR=vC[N4i]
endif
endfunction
function qto takes integer pto,string eto returns nothing
set w3[MM]=eto
set MM=MM+1
if Yv[pto]==0 then
if pto==0 then
call Mau("Nullpointer exception when calling SimpleSynchronizer.remove","when calling error in LinkedListModule, line 37")
else
call Mau("Called SimpleSynchronizer.remove on invalid object.","when calling error in LinkedListModule, line 37")
endif
endif
call M4i(pto)
set MM=MM-1
endfunction
function y2S takes integer l2S,string b2S returns nothing
set w3[MM]=b2S
set MM=MM+1
set DR[QHr(kC[l2S])]=0
call E8s(kC[l2S])
call Tto(xC[l2S],"when calling dispatch_SynchronizationCallback_destroySynchronizationCallback in SyncSimple, line 131")
call qto(l2S,"when calling remove in LinkedListModule, line 49")
set MM=MM-1
endfunction
function L4i takes integer J4i,string K4i returns nothing
set w3[MM]=K4i
set MM=MM+1
call y2S(J4i,"when calling SimpleSynchronizer_onDestroy in SyncSimple, line 128")
call Rlc(J4i,"when calling dealloc_SimpleSynchronizer in SyncSimple, line 128")
set MM=MM-1
endfunction
function Hso takes integer Aso,string Dso returns nothing
set w3[MM]=Dso
set MM=MM+1
if Yv[Aso]==0 then
if Aso==0 then
call Mau("Nullpointer exception when calling SimpleSynchronizer.SimpleSynchronizer","when calling error in SyncSimple, line 113")
else
call Mau("Called SimpleSynchronizer.SimpleSynchronizer on invalid object.","when calling error in SyncSimple, line 113")
endif
endif
call L4i(Aso,"when calling destroySimpleSynchronizer in SyncSimple, line 113")
set MM=MM-1
endfunction
function bWu takes player lWu returns integer
return GetPlayerId(lWu)
endfunction
function FQS takes string gQS returns integer
local integer hQS
set w3[MM]=gQS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set hQS=HY
set JY[hQS]=1345
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 450")
set hQS=0
endif
else
set DY=DY-1
set hQS=AY[DY]
set JY[hQS]=1345
endif
set MM=MM-1
return hQS
endfunction
function GQS takes string TQS returns integer
local integer YQS
set w3[MM]=TQS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set YQS=IY
set PY[YQS]=1381
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 450")
set YQS=0
endif
else
set UY=UY-1
set YQS=ZY[UY]
set PY[YQS]=1381
endif
set MM=MM-1
return YQS
endfunction
function Dfu takes gamecache Ifu,string Pfu,string Afu returns integer
return GetStoredInteger(Ifu,Pfu,Afu)
endfunction
function b2s takes integer O2s,string l2s returns integer
return Dfu(Sq,xP[O2s],l2s)
endfunction
function fHc takes integer qHc,string aHc,string nHc returns integer
local integer dHc
set w3[MM]=nHc
set MM=MM+1
if XF[qHc]==0 then
if qHc==0 then
call Mau("Nullpointer exception when calling MetadataStore.loadValue","when calling error in Metadata, line 32")
else
call Mau("Called MetadataStore.loadValue on invalid object.","when calling error in Metadata, line 32")
endif
endif
set dHc=b2s(qHc,aHc)
set MM=MM-1
return dHc
endfunction
function Q2s takes integer R2s,string T2s returns integer
local integer Y2s
local integer G2s
local integer g2s
local integer h2s
local integer F2s
local integer k2s
local integer j2s
local integer x2s
local integer v2s
local integer m2s
set w3[MM]=T2s
set MM=MM+1
set k2s=fHc(R2s,cq,"when calling loadValue in Metadata, line 44")
set j2s=fHc(R2s,oq,"when calling loadValue in Metadata, line 45")
set x2s=fHc(R2s,Oq,"when calling loadValue in Metadata, line 46")
set v2s=fHc(R2s,lq,"when calling loadValue in Metadata, line 47")
set m2s=fHc(R2s,bq,"when calling loadValue in Metadata, line 48")
set Y2s=k2s
set G2s=j2s
set g2s=x2s
set h2s=v2s
set F2s=m2s
set MM=MM-1
set V9=Y2s
set B9=G2s
set N9=g2s
set M9=h2s
set w0w=F2s
return V9
endfunction
function DHc takes integer jHc,string xHc returns integer
local integer vHc
local integer mHc
local integer QHc
local integer WHc
local integer EHc
local integer ZHc
local integer UHc
local integer IHc
local integer PHc
local integer AHc
set w3[MM]=xHc
set MM=MM+1
if XF[jHc]==0 then
if jHc==0 then
call Mau("Nullpointer exception when calling MetadataStore.getCounts","when calling error in Metadata, line 42")
else
call Mau("Called MetadataStore.getCounts on invalid object.","when calling error in Metadata, line 42")
endif
endif
set ZHc=Q2s(jHc,"when calling getCounts in Metadata, line 42")
set UHc=B9
set IHc=N9
set PHc=M9
set AHc=w0w
set vHc=ZHc
set mHc=UHc
set QHc=IHc
set WHc=PHc
set EHc=AHc
set MM=MM-1
set u0w=vHc
set r0w=mHc
set s0w=QHc
set t0w=WHc
set i0w=EHc
return u0w
endfunction
function G8t takes integer a8t,string n8t returns nothing
local integer d8t
local integer f8t
local integer R8t
local integer T8t
local integer Y8t
set w3[MM]=n8t
set MM=MM+1
if ea==cA[a8t]then
set MM=MM-1
return
endif
set d8t=DHc(SA[a8t],"when calling getCounts in NetworkData, line 335")
set f8t=r0w
set R8t=s0w
set T8t=t0w
set Y8t=i0w
set oA[a8t]=d8t
set OA[a8t]=f8t
set lA[a8t]=R8t
set bA[a8t]=T8t
set yA[a8t]=Y8t
set pA[a8t]=true
set MM=MM-1
endfunction
function IJc takes integer ZJc,string UJc returns nothing
set w3[MM]=UJc
set MM=MM+1
if rk[ZJc]==0 then
if ZJc==0 then
call Mau("Nullpointer exception when calling Network.receiveMetadata","when calling error in NetworkData, line 330")
else
call Mau("Called Network.receiveMetadata on invalid object.","when calling error in NetworkData, line 330")
endif
endif
call G8t(ZJc,"when calling receiveMetadata in NetworkData, line 330")
set MM=MM-1
endfunction
function Enu takes nothing returns boolean
return Se[oe]
endfunction
function eFS takes integer yFS,string pFS returns nothing
set w3[MM]=pFS
set MM=MM+1
if MY[yFS]==0 then
call Mau("Double free: object of type ForForceCallback","when calling error in Execute, line 9")
else
set VY[BY]=yFS
set BY=BY+1
set MY[yFS]=0
endif
set MM=MM-1
endfunction
function Pvs takes integer Uvs,string Ivs returns nothing
set w3[MM]=Ivs
set MM=MM+1
call eFS(Uvs,"when calling dealloc_ForForceCallback in Execute, line 9")
set MM=MM-1
endfunction
function Vjc takes integer Xjc,string Cjc returns nothing
set w3[MM]=Cjc
set MM=MM+1
if MY[Xjc]==0 then
if Xjc==0 then
call Mau("Nullpointer exception when calling ForForceCallback.ForForceCallback","when calling error in Execute, line 9")
else
call Mau("Called ForForceCallback.ForForceCallback on invalid object.","when calling error in Execute, line 9")
endif
endif
call Pvs(Xjc,"when calling destroyForForceCallback in Execute, line 9")
set MM=MM-1
endfunction
function Wnu takes string Qnu returns nothing
set w3[MM]=Qnu
set MM=MM+1
set oe=oe-1
call Vjc(ce[oe],"when calling dispatch_ForForceCallback_destroyForForceCallback in Execute, line 33")
set MM=MM-1
endfunction
function mnu takes integer vnu returns nothing
set ce[oe]=vnu
set Se[oe]=false
set oe=oe+1
endfunction
function ydu takes force ldu,code bdu returns nothing
call ForForce(ldu,bdu)
endfunction
function Jnu takes integer Pnu,string Anu returns boolean
local boolean Dnu
local boolean Hnu
set w3[MM]=Anu
set MM=MM+1
call mnu(Pnu)
set Dnu=te
set te=true
call ydu(ie,Saw)
set te=Dnu
call Wnu("when calling popCallback in Execute, line 101")
set Hnu=Enu()
set MM=MM-1
return Hnu
endfunction
function Inu takes integer Znu,string Unu returns nothing
set w3[MM]=Unu
set MM=MM+1
if not Jnu(Znu,"when calling try in Execute, line 78")then
call Mau("execute: thread has crashed. caused by:
| - "+se,"when calling error in Execute, line 79")
endif
set MM=MM-1
endfunction
function FmS takes string gmS returns integer
local integer hmS
set w3[MM]=gmS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set hmS=IY
set PY[hmS]=1374
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 351")
set hmS=0
endif
else
set UY=UY-1
set hmS=ZY[UY]
set PY[hmS]=1374
endif
set MM=MM-1
return hmS
endfunction
function bFS takes string OFS returns integer
local integer lFS
set w3[MM]=OFS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set lFS=NY
set MY[lFS]=765
else
call Mau("Out of memory: Could not create ForForceCallback_execute_Execute.","when calling error in Execute, line 111")
set lFS=0
endif
else
set BY=BY-1
set lFS=VY[BY]
set MY[lFS]=765
endif
set MM=MM-1
return lFS
endfunction
function Bnu takes integer Knu,integer Lnu,integer Xnu,string Cnu returns nothing
local integer Vnu
set w3[MM]=Cnu
set MM=MM+1
set Vnu=bFS("when calling alloc_ForForceCallback_execute_Execute in Execute, line 111")
set OZ[Vnu]=Lnu
set lZ[Vnu]=Knu
set bZ[Vnu]=Xnu
call Inu(Vnu,"when calling execute in Execute, line 111")
set MM=MM-1
endfunction
function RFS takes integer dFS,string fFS returns nothing
set w3[MM]=fFS
set MM=MM+1
if PY[dFS]==0 then
call Mau("Double free: object of type LimitedExecuteCondition","when calling error in Execute, line 104")
else
set ZY[UY]=dFS
set UY=UY+1
set PY[dFS]=0
endif
set MM=MM-1
endfunction
function Lvs takes integer Jvs,string Kvs returns nothing
set w3[MM]=Kvs
set MM=MM+1
call RFS(Jvs,"when calling dealloc_LimitedExecuteCondition in Execute, line 104")
set MM=MM-1
endfunction
function oxc takes integer Sxc,string cxc returns nothing
set w3[MM]=cxc
set MM=MM+1
if PY[Sxc]==0 then
if Sxc==0 then
call Mau("Nullpointer exception when calling LimitedExecuteCondition.LimitedExecuteCondition","when calling error in Execute, line 104")
else
call Mau("Called LimitedExecuteCondition.LimitedExecuteCondition on invalid object.","when calling error in Execute, line 104")
endif
endif
call Lvs(Sxc,"when calling destroyLimitedExecuteCondition in Execute, line 104")
set MM=MM-1
endfunction
function nFS takes integer qFS,string aFS returns nothing
set w3[MM]=aFS
set MM=MM+1
if JY[qFS]==0 then
call Mau("Double free: object of type LimitedExecuteAction","when calling error in Execute, line 107")
else
set AY[DY]=qFS
set DY=DY+1
set JY[qFS]=0
endif
set MM=MM-1
endfunction
function Hvs takes integer Avs,string Dvs returns nothing
set w3[MM]=Dvs
set MM=MM+1
call nFS(Avs,"when calling dealloc_LimitedExecuteAction in Execute, line 107")
set MM=MM-1
endfunction
function rxc takes integer wxc,string uxc returns nothing
set w3[MM]=uxc
set MM=MM+1
if JY[wxc]==0 then
if wxc==0 then
call Mau("Nullpointer exception when calling LimitedExecuteAction.LimitedExecuteAction","when calling error in Execute, line 107")
else
call Mau("Called LimitedExecuteAction.LimitedExecuteAction on invalid object.","when calling error in Execute, line 107")
endif
endif
call Hvs(wxc,"when calling destroyLimitedExecuteAction in Execute, line 107")
set MM=MM-1
endfunction
function rdu takes integer Nnu,integer Mnu,integer wdu,string udu returns nothing
set w3[MM]=udu
set MM=MM+1
call Bnu(Nnu,Mnu,wdu,"when calling executeWhileInternal in Execute, line 127")
call oxc(Mnu,"when calling dispatch_LimitedExecuteCondition_destroyLimitedExecuteCondition in Execute, line 128")
call rxc(wdu,"when calling dispatch_LimitedExecuteAction_destroyLimitedExecuteAction in Execute, line 129")
set MM=MM-1
endfunction
function xmS takes string kmS returns integer
local integer jmS
set w3[MM]=kmS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set jmS=HY
set JY[jmS]=1338
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 351")
set jmS=0
endif
else
set DY=DY-1
set jmS=AY[DY]
set JY[jmS]=1338
endif
set MM=MM-1
return jmS
endfunction
function I8t takes integer m8t,string Q8t returns nothing
local integer W8t
local integer E8t
local integer Z8t
local integer U8t
set w3[MM]=Q8t
set MM=MM+1
set Z8t=aq
set W8t=FmS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 351")
set jA[W8t]=m8t
set U8t=W8t
set E8t=xmS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 351")
set xA[E8t]=m8t
call rdu(Z8t,U8t,E8t,"when calling executeWhile in NetworkData, line 351")
set MM=MM-1
endfunction
function KJc takes integer HJc,string JJc returns nothing
set w3[MM]=JJc
set MM=MM+1
if rk[HJc]==0 then
if HJc==0 then
call Mau("Nullpointer exception when calling Network.readInts","when calling error in NetworkData, line 350")
else
call Mau("Called Network.readInts on invalid object.","when calling error in NetworkData, line 350")
endif
endif
call I8t(HJc,"when calling readInts in NetworkData, line 350")
set MM=MM-1
endfunction
function HmS takes string AmS returns integer
local integer DmS
set w3[MM]=AmS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set DmS=HY
set JY[DmS]=1340
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 363")
set DmS=0
endif
else
set DY=DY-1
set DmS=AY[DY]
set JY[DmS]=1340
endif
set MM=MM-1
return DmS
endfunction
function PmS takes string UmS returns integer
local integer ImS
set w3[MM]=UmS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set ImS=IY
set PY[ImS]=1376
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 363")
set ImS=0
endif
else
set UY=UY-1
set ImS=ZY[UY]
set PY[ImS]=1376
endif
set MM=MM-1
return ImS
endfunction
function w9t takes integer X8t,string C8t returns nothing
local integer V8t
local integer B8t
local integer N8t
local integer M8t
set w3[MM]=C8t
set MM=MM+1
set N8t=aq
set V8t=PmS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 363")
set QA[V8t]=X8t
set M8t=V8t
set B8t=HmS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 363")
set WA[B8t]=X8t
call rdu(N8t,M8t,B8t,"when calling executeWhile in NetworkData, line 363")
set MM=MM-1
endfunction
function NJc takes integer VJc,string BJc returns nothing
set w3[MM]=BJc
set MM=MM+1
if rk[VJc]==0 then
if VJc==0 then
call Mau("Nullpointer exception when calling Network.readReals","when calling error in NetworkData, line 362")
else
call Mau("Called Network.readReals on invalid object.","when calling error in NetworkData, line 362")
endif
endif
call w9t(VJc,"when calling readReals in NetworkData, line 362")
set MM=MM-1
endfunction
function OWu takes player oWu returns mapcontrol
return GetPlayerController(oWu)
endfunction
function qWu takes player eWu returns playerslotstate
return GetPlayerSlotState(eWu)
endfunction
function PWu takes player IWu returns boolean
return qWu(IWu)==PLAYER_SLOT_STATE_PLAYING and OWu(IWu)==MAP_CONTROL_USER
endfunction
function QFS takes integer vFS,string mFS returns nothing
set w3[MM]=mFS
set MM=MM+1
if Sh[vFS]==0 then
call Mau("Double free: object of type GamecacheBuffer","when calling error in GamecacheBuffer, line 21")
else
set sh[th]=vFS
set th=th+1
set Sh[vFS]=0
endif
set MM=MM-1
endfunction
function YWs takes integer TWs returns nothing
endfunction
function hWs takes integer GWs,string gWs returns nothing
set w3[MM]=gWs
set MM=MM+1
call YWs(GWs)
call QFS(GWs,"when calling dealloc_GamecacheBuffer in GamecacheBuffer, line 20")
set MM=MM-1
endfunction
function Exc takes integer Qxc,string Wxc returns nothing
set w3[MM]=Wxc
set MM=MM+1
if Sh[Qxc]==0 then
if Qxc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.GamecacheBuffer","when calling error in GamecacheBuffer, line 21")
else
call Mau("Called GamecacheBuffer.GamecacheBuffer on invalid object.","when calling error in GamecacheBuffer, line 21")
endif
endif
call hWs(Qxc,"when calling destroyGamecacheBuffer in GamecacheBuffer, line 21")
set MM=MM-1
endfunction
function imS takes integer smS,string tmS returns nothing
set w3[MM]=tmS
set MM=MM+1
if Sk[smS]==0 then
call Mau("Double free: object of type NetworkFinishedCallback","when calling error in NetworkData, line 198")
else
set sk[tk]=smS
set tk=tk+1
set Sk[smS]=0
endif
set MM=MM-1
endfunction
function n0t takes integer q0t,string a0t returns nothing
set w3[MM]=a0t
set MM=MM+1
call imS(q0t,"when calling dealloc_NetworkFinishedCallback in NetworkData, line 198")
set MM=MM-1
endfunction
function GKc takes integer TKc,string YKc returns nothing
set w3[MM]=YKc
set MM=MM+1
if Sk[TKc]==0 then
if TKc==0 then
call Mau("Nullpointer exception when calling NetworkFinishedCallback.NetworkFinishedCallback","when calling error in NetworkData, line 198")
else
call Mau("Called NetworkFinishedCallback.NetworkFinishedCallback on invalid object.","when calling error in NetworkData, line 198")
endif
endif
call n0t(TKc,"when calling destroyNetworkFinishedCallback in NetworkData, line 198")
set MM=MM-1
endfunction
function B2s takes integer V2s returns nothing
endfunction
function xvS takes integer kvS,string jvS returns nothing
set w3[MM]=jvS
set MM=MM+1
if XF[kvS]==0 then
call Mau("Double free: object of type MetadataStore","when calling error in Metadata, line 12")
else
set JF[KF]=kvS
set KF=KF+1
set XF[kvS]=0
endif
set MM=MM-1
endfunction
function w5s takes integer N2s,string M2s returns nothing
set w3[MM]=M2s
set MM=MM+1
call B2s(N2s)
call xvS(N2s,"when calling dealloc_MetadataStore in Metadata, line 11")
set MM=MM-1
endfunction
function OHc takes integer cHc,string oHc returns nothing
set w3[MM]=oHc
set MM=MM+1
if XF[cHc]==0 then
if cHc==0 then
call Mau("Nullpointer exception when calling MetadataStore.MetadataStore","when calling error in Metadata, line 12")
else
call Mau("Called MetadataStore.MetadataStore on invalid object.","when calling error in Metadata, line 12")
endif
endif
call w5s(cHc,"when calling destroyMetadataStore in Metadata, line 12")
set MM=MM-1
endfunction
function FkS takes integer gkS,string hkS returns nothing
set w3[MM]=hkS
set MM=MM+1
if vY[gkS]==0 then
call Mau("Double free: object of type HashWriter","when calling error in HashData, line 8")
else
set kY[jY]=gkS
set jY=jY+1
set vY[gkS]=0
endif
set MM=MM-1
endfunction
function Hlc takes integer Alc,string Dlc returns nothing
set w3[MM]=Dlc
set MM=MM+1
if Yh[Alc]==0 then
call Mau("Double free: object of type Table","when calling error in Table, line 6")
else
set fh[Rh]=Alc
set Rh=Rh+1
set Yh[Alc]=0
endif
set MM=MM-1
endfunction
function n7S takes integer q7S,string a7S returns nothing
set w3[MM]=a7S
set MM=MM+1
call e7S(q7S,"when calling Table_onDestroy in Table, line 253")
call Hlc(q7S,"when calling dealloc_Table in Table, line 253")
set MM=MM-1
endfunction
function Rio takes integer dio,string fio returns nothing
set w3[MM]=fio
set MM=MM+1
if Yh[dio]==0 then
if dio==0 then
call Mau("Nullpointer exception when calling Table.Table","when calling error in Table, line 6")
else
call Mau("Called Table.Table on invalid object.","when calling error in Table, line 6")
endif
endif
if Yh[dio]<=1656 then
call n7S(dio,"when calling destroyTable in Table, line 6")
else
call uHs(dio,"when calling destroyIterableMap in Table, line 6")
endif
set MM=MM-1
endfunction
function vPs takes integer jPs,string xPs returns nothing
set w3[MM]=xPs
set MM=MM+1
if eU[jPs]!=0 then
call Rio(eU[jPs],"when calling dispatch_Table_destroyTable in HashData, line 18")
endif
set MM=MM-1
endfunction
function qPs takes integer pPs,string ePs returns nothing
set w3[MM]=ePs
set MM=MM+1
call vPs(pPs,"when calling HashWriter_onDestroy in HashData, line 16")
call FkS(pPs,"when calling dealloc_HashWriter in HashData, line 16")
set MM=MM-1
endfunction
function WWc takes integer mWc,string QWc returns nothing
set w3[MM]=QWc
set MM=MM+1
if vY[mWc]==0 then
if mWc==0 then
call Mau("Nullpointer exception when calling HashWriter.HashWriter","when calling error in HashData, line 8")
else
call Mau("Called HashWriter.HashWriter on invalid object.","when calling error in HashData, line 8")
endif
endif
call qPs(mWc,"when calling destroyHashWriter in HashData, line 8")
set MM=MM-1
endfunction
function RkS takes integer dkS,string fkS returns nothing
set w3[MM]=fkS
set MM=MM+1
if FY[dkS]==0 then
call Mau("Double free: object of type HashReader","when calling error in HashData, line 77")
else
set GY[gY]=dkS
set gY=gY+1
set FY[dkS]=0
endif
set MM=MM-1
endfunction
function xIs takes integer kIs,string jIs returns nothing
set w3[MM]=jIs
set MM=MM+1
call Rio(iU[kIs],"when calling dispatch_Table_destroyTable in HashData, line 99")
set MM=MM-1
endfunction
function MZs takes integer BZs,string NZs returns nothing
set w3[MM]=NZs
set MM=MM+1
call xIs(BZs,"when calling HashReader_onDestroy in HashData, line 98")
call RkS(BZs,"when calling dealloc_HashReader in HashData, line 98")
set MM=MM-1
endfunction
function bQc takes integer OQc,string lQc returns nothing
set w3[MM]=lQc
set MM=MM+1
if FY[OQc]==0 then
if OQc==0 then
call Mau("Nullpointer exception when calling HashReader.HashReader","when calling error in HashData, line 77")
else
call Mau("Called HashReader.HashReader on invalid object.","when calling error in HashData, line 77")
endif
endif
call MZs(OQc,"when calling destroyHashReader in HashData, line 77")
set MM=MM-1
endfunction
function UMi takes integer EMi,string ZMi returns nothing
set w3[MM]=ZMi
set MM=MM+1
if MX[EMi]!=0 then
call bQc(MX[EMi],"when calling dispatch_HashReader_destroyHashReader in StringEncoder, line 71")
endif
if NX[EMi]!=0 then
call WWc(NX[EMi],"when calling dispatch_HashWriter_destroyHashWriter in StringEncoder, line 74")
endif
if uC[EMi]!=0 then
call bQc(uC[EMi],"when calling dispatch_HashReader_destroyHashReader in StringEncoder, line 77")
endif
if wC[EMi]!=0 then
call WWc(wC[EMi],"when calling dispatch_HashWriter_destroyHashWriter in StringEncoder, line 80")
endif
set MM=MM-1
endfunction
function eOc takes integer yOc,string pOc returns nothing
set w3[MM]=pOc
set MM=MM+1
if ev[yOc]==0 then
call Mau("Double free: object of type StringEncoder","when calling error in StringEncoder, line 59")
else
set bv[yv]=yOc
set yv=yv+1
set ev[yOc]=0
endif
set MM=MM-1
endfunction
function AMi takes integer IMi,string PMi returns nothing
set w3[MM]=PMi
set MM=MM+1
call UMi(IMi,"when calling StringEncoder_onDestroy in StringEncoder, line 69")
call eOc(IMi,"when calling dealloc_StringEncoder in StringEncoder, line 69")
set MM=MM-1
endfunction
function uro takes integer Muo,string wro returns nothing
set w3[MM]=wro
set MM=MM+1
if ev[Muo]==0 then
if Muo==0 then
call Mau("Nullpointer exception when calling StringEncoder.StringEncoder","when calling error in StringEncoder, line 59")
else
call Mau("Called StringEncoder.StringEncoder on invalid object.","when calling error in StringEncoder, line 59")
endif
endif
call AMi(Muo,"when calling destroyStringEncoder in StringEncoder, line 59")
set MM=MM-1
endfunction
function e0t takes integer y0t,string p0t returns nothing
set w3[MM]=p0t
set MM=MM+1
call Exc(rA[y0t],"when calling dispatch_GamecacheBuffer_destroyGamecacheBuffer in NetworkData, line 250")
call Exc(sA[y0t],"when calling dispatch_GamecacheBuffer_destroyGamecacheBuffer in NetworkData, line 251")
call Exc(tA[y0t],"when calling dispatch_GamecacheBuffer_destroyGamecacheBuffer in NetworkData, line 252")
call Exc(iA[y0t],"when calling dispatch_GamecacheBuffer_destroyGamecacheBuffer in NetworkData, line 253")
call uro(uA[y0t],"when calling dispatch_StringEncoder_destroyStringEncoder in NetworkData, line 254")
call OHc(SA[y0t],"when calling dispatch_MetadataStore_destroyMetadataStore in NetworkData, line 255")
call GKc(fA[y0t],"when calling dispatch_NetworkFinishedCallback_destroyNetworkFinishedCallback in NetworkData, line 256")
if wA[y0t]!=0 then
call bQc(wA[y0t],"when calling dispatch_HashReader_destroyHashReader in NetworkData, line 259")
endif
if MP[y0t]!=0 then
call WWc(MP[y0t],"when calling dispatch_HashWriter_destroyHashWriter in NetworkData, line 262")
endif
set MM=MM-1
endfunction
function rmS takes integer wmS,string umS returns nothing
set w3[MM]=umS
set MM=MM+1
if rk[wmS]==0 then
call Mau("Double free: object of type Network","when calling error in NetworkData, line 204")
else
set MF[wk]=wmS
set wk=wk+1
set rk[wmS]=0
endif
set MM=MM-1
endfunction
function A7t takes integer I7t,string P7t returns nothing
set w3[MM]=P7t
set MM=MM+1
call e0t(I7t,"when calling Network_onDestroy in NetworkData, line 249")
call rmS(I7t,"when calling dealloc_Network in NetworkData, line 249")
set MM=MM-1
endfunction
function RJc takes integer dJc,string fJc returns nothing
set w3[MM]=fJc
set MM=MM+1
if rk[dJc]==0 then
if dJc==0 then
call Mau("Nullpointer exception when calling Network.Network","when calling error in NetworkData, line 204")
else
call Mau("Called Network.Network on invalid object.","when calling error in NetworkData, line 204")
endif
endif
call A7t(dJc,"when calling destroyNetwork in NetworkData, line 204")
set MM=MM-1
endfunction
function RQS takes string dQS returns integer
local integer fQS
set w3[MM]=dQS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set fQS=NY
set MY[fQS]=771
else
call Mau("Out of memory: Could not create ForForceCallback_execute_Network_NetworkData.","when calling error in NetworkData, line 443")
set fQS=0
endif
else
set BY=BY-1
set fQS=VY[BY]
set MY[fQS]=771
endif
set MM=MM-1
return fQS
endfunction
function vUs takes integer kUs,string jUs returns integer
local integer xUs
set w3[MM]=jUs
set MM=MM+1
set xUs=Nio(iU[kUs],SU[kUs],"when calling loadInt in HashData, line 161")
set SU[kUs]=SU[kUs]+1
set MM=MM-1
return xUs
endfunction
function PQc takes integer ZQc,string UQc returns integer
local integer IQc
set w3[MM]=UQc
set MM=MM+1
if FY[ZQc]==0 then
if ZQc==0 then
call Mau("Nullpointer exception when calling HashReader.readIntUnchecked","when calling error in HashData, line 160")
else
call Mau("Called HashReader.readIntUnchecked on invalid object.","when calling error in HashData, line 160")
endif
endif
set IQc=vUs(ZQc,"when calling readIntUnchecked in HashData, line 160")
set MM=MM-1
return IQc
endfunction
function YUs takes integer dUs,integer fUs returns integer
local integer TUs=fUs
local integer RUs
if TUs==0 then
set RUs=lU[dUs]
elseif TUs==1 then
set RUs=bU[dUs]
elseif TUs==2 then
set RUs=yU[dUs]
else
set RUs=pU[dUs]
endif
return RUs
endfunction
function FQc takes integer YQc,integer GQc,string gQc returns integer
local integer hQc
set w3[MM]=gQc
set MM=MM+1
if FY[YQc]==0 then
if YQc==0 then
call Mau("Nullpointer exception when calling HashReader.getCount","when calling error in HashData, line 130")
else
call Mau("Called HashReader.getCount on invalid object.","when calling error in HashData, line 130")
endif
endif
set hQc=YUs(YQc,GQc)
set MM=MM-1
return hQc
endfunction
function nUs takes integer pUs,integer eUs returns integer
local integer aUs=eUs
local integer qUs
if aUs==0 then
set qUs=SU[pUs]
elseif aUs==1 then
set qUs=cU[pUs]
elseif aUs==2 then
set qUs=oU[pUs]
else
set qUs=OU[pUs]
endif
return qUs
endfunction
function TQc takes integer nQc,integer dQc,string fQc returns integer
local integer RQc
set w3[MM]=fQc
set MM=MM+1
if FY[nQc]==0 then
if nQc==0 then
call Mau("Nullpointer exception when calling HashReader.getReadIndex","when calling error in HashData, line 116")
else
call Mau("Called HashReader.getReadIndex on invalid object.","when calling error in HashData, line 116")
endif
endif
set RQc=nUs(nQc,dQc)
set MM=MM-1
return RQc
endfunction
function YTu takes integer fTu returns string
local integer TTu=fTu
local string RTu
if TTu==0 then
set RTu="integer"
elseif TTu==1 then
set RTu="real"
elseif TTu==2 then
set RTu="string"
else
set RTu="boolean"
endif
return RTu
endfunction
function yUs takes integer oUs,integer OUs returns boolean
local integer bUs=OUs
local boolean lUs
if bUs==0 then
set lUs=lU[oUs]>SU[oUs]
elseif bUs==1 then
set lUs=bU[oUs]>cU[oUs]
elseif bUs==2 then
set lUs=yU[oUs]>oU[oUs]
else
set lUs=pU[oUs]>OU[oUs]
endif
return lUs
endfunction
function aQc takes integer yQc,integer pQc,string eQc returns boolean
local boolean qQc
set w3[MM]=eQc
set MM=MM+1
if FY[yQc]==0 then
if yQc==0 then
call Mau("Nullpointer exception when calling HashReader.hasRemainingData","when calling error in HashData, line 102")
else
call Mau("Called HashReader.hasRemainingData on invalid object.","when calling error in HashData, line 102")
endif
endif
set qQc=yUs(yQc,pQc)
set MM=MM-1
return qQc
endfunction
function tgu takes integer sgu returns string
return I2S(sgu)
endfunction
function FUs takes integer GUs,integer gUs,string hUs returns nothing
set w3[MM]=hUs
set MM=MM+1
if Ba and(not aQc(GUs,gUs,"when calling hasRemainingData in HashData, line 146"))then
call Mau("trying to read "+YTu(gUs)+" at position "+tgu(TQc(GUs,gUs,"when calling getReadIndex in HashData, line 147"))+" out of "+tgu(FQc(GUs,gUs,"when calling getCount in HashData, line 147")),"when calling error in HashData, line 147")
endif
set MM=MM-1
endfunction
function vQc takes integer kQc,integer jQc,string xQc returns nothing
set w3[MM]=xQc
set MM=MM+1
if FY[kQc]==0 then
if kQc==0 then
call Mau("Nullpointer exception when calling HashReader.validateType","when calling error in HashData, line 145")
else
call Mau("Called HashReader.validateType on invalid object.","when calling error in HashData, line 145")
endif
endif
call FUs(kQc,jQc,"when calling validateType in HashData, line 145")
set MM=MM-1
endfunction
function ZZs takes integer QZs,string WZs returns integer
local integer EZs
set w3[MM]=WZs
set MM=MM+1
call vQc(QZs,0,"when calling validateType in HashData, line 156")
set EZs=PQc(QZs,"when calling readIntUnchecked in HashData, line 157")
set MM=MM-1
return EZs
endfunction
function EQc takes integer mQc,string QQc returns integer
local integer WQc
set w3[MM]=QQc
set MM=MM+1
if FY[mQc]==0 then
if mQc==0 then
call Mau("Nullpointer exception when calling HashReader.readInt","when calling error in HashData, line 155")
else
call Mau("Called HashReader.readInt on invalid object.","when calling error in HashData, line 155")
endif
endif
set WQc=ZZs(mQc,"when calling readInt in HashData, line 155")
set MM=MM-1
return WQc
endfunction
function dCs takes integer pCs,real eCs,real qCs returns nothing
local real aCs=eCs
local real nCs=qCs
set OI[pCs]=aCs
set lI[pCs]=nCs
endfunction
function BIc takes integer LIc,real XIc,real CIc,string VIc returns nothing
set w3[MM]=VIc
set MM=MM+1
if Qg[LIc]==0 then
if LIc==0 then
call Mau("Nullpointer exception when calling LegacySaveData.setOrigin","when calling error in LegacySaveData, line 58")
else
call Mau("Called LegacySaveData.setOrigin on invalid object.","when calling error in LegacySaveData, line 58")
endif
endif
call dCs(LIc,XIc,CIc)
set MM=MM-1
endfunction
function cjr takes timer Sjr returns integer
return GetHandleId(Sjr)
endfunction
function Kkr takes timer Dkr,integer Hkr,string Jkr returns nothing
set w3[MM]=Jkr
set MM=MM+1
call sSo(ST,cjr(Dkr),Hkr,"when calling saveInt in TimerUtils, line 18")
set MM=MM-1
endfunction
function pjr takes timer ljr,real bjr,code yjr returns nothing
call TimerStart(ljr,bjr,false,yjr)
endfunction
function UGs takes integer vGs,timer mGs,real QGs,string WGs returns nothing
local timer EGs
local timer ZGs
set w3[MM]=WGs
set MM=MM+1
set EGs=mGs
call Kkr(EGs,vGs,"when calling setData in ClosureTimers, line 113")
set ZGs=EGs
call pjr(ZGs,QGs,Kaw)
set XW[vGs]=ZGs
set MM=MM-1
set EGs=null
set ZGs=null
endfunction
function phc takes integer Ohc,timer lhc,real bhc,string yhc returns nothing
set w3[MM]=yhc
set MM=MM+1
if UG[Ohc]==0 then
if Ohc==0 then
call Mau("Nullpointer exception when calling CallbackSingle.start","when calling error in ClosureTimers, line 111")
else
call Mau("Called CallbackSingle.start on invalid object.","when calling error in ClosureTimers, line 111")
endif
endif
call UGs(Ohc,lhc,bhc,"when calling start in ClosureTimers, line 111")
set MM=MM-1
endfunction
function Iou takes timer Wou,real Eou,integer Zou,string Uou returns integer
set w3[MM]=Uou
set MM=MM+1
call phc(Zou,Wou,Eou,"when calling start in ClosureTimers, line 16")
set MM=MM-1
return Zou
endfunction
function wjr takes string Bkr returns timer
local timer Nkr
local timer Mkr
set w3[MM]=Bkr
set MM=MM+1
if iT>0 then
set iT=iT-1
call Kkr(tT[iT],0,"when calling setData in TimerUtils, line 30")
set MM=MM-1
set Nkr=null
set Mkr=null
return tT[iT]
else
set Nkr=CreateTimer()
call Kkr(Nkr,0,"when calling setData in TimerUtils, line 33")
set Mkr=Nkr
set MM=MM-1
set knw=Mkr
set Nkr=null
set Mkr=null
return knw
endif
endfunction
function Jou takes real Pou,integer Aou,string Dou returns integer
local integer Hou
set w3[MM]=Dou
set MM=MM+1
set Hou=Iou(wjr("when calling getTimer in ClosureTimers, line 27"),Pou,Aou,"when calling doAfter in ClosureTimers, line 27")
set MM=MM-1
return Hou
endfunction
function Cou takes integer Kou,string Lou returns integer
local integer Xou
set w3[MM]=Lou
set MM=MM+1
set Xou=Jou(0.,Kou,"when calling doAfter in ClosureTimers, line 33")
set MM=MM-1
return Xou
endfunction
function FZu takes string GZu,real gZu,player hZu returns nothing
call DisplayTimedTextToPlayer(hZu,0.,0.,gZu,GZu)
endfunction
function HGs takes integer DGs returns nothing
endfunction
function KGs takes integer JGs returns nothing
call HGs(JGs)
endfunction
function eoc takes string yoc returns integer
local integer poc
set w3[MM]=yoc
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set poc=ZG
set UG[poc]=697
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 198")
set poc=0
endif
else
set EG=EG-1
set poc=WG[EG]
set UG[poc]=697
endif
set MM=MM-1
return poc
endfunction
function ooc takes string Soc returns integer
local integer coc
set w3[MM]=Soc
set MM=MM+1
if Nh==0 then
if Mh<32768 then
set Mh=Mh+1
set coc=Mh
set wF[coc]=1562
else
call Mau("Out of memory: Could not create SaveDataPasteCallback_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 189")
set coc=0
endif
else
set Nh=Nh-1
set coc=Bh[Nh]
set wF[coc]=1562
endif
set MM=MM-1
return coc
endfunction
function xxS takes integer kxS,string jxS returns nothing
set w3[MM]=jxS
set MM=MM+1
if Vh[kxS]==0 then
call Mau("Double free: object of type LegacyPositionedUnitDataPasteCallback","when calling error in LegacyUnitData, line 387")
else
set Lh[Xh]=kxS
set Xh=Xh+1
set Vh[kxS]=0
endif
set MM=MM-1
endfunction
function lNs takes integer oNs,string ONs returns nothing
set w3[MM]=ONs
set MM=MM+1
call xxS(oNs,"when calling dealloc_LegacyPositionedUnitDataPasteCallback in LegacyUnitData, line 387")
set MM=MM-1
endfunction
function NPc takes integer VPc,string BPc returns nothing
set w3[MM]=BPc
set MM=MM+1
if Vh[VPc]==0 then
if VPc==0 then
call Mau("Nullpointer exception when calling LegacyPositionedUnitDataPasteCallback.LegacyPositionedUnitDataPasteCallback","when calling error in LegacyUnitData, line 387")
else
call Mau("Called LegacyPositionedUnitDataPasteCallback.LegacyPositionedUnitDataPasteCallback on invalid object.","when calling error in LegacyUnitData, line 387")
endif
endif
call lNs(VPc,"when calling destroyLegacyPositionedUnitDataPasteCallback in LegacyUnitData, line 387")
set MM=MM-1
endfunction
function C9s takes unit L9s,real X9s returns nothing
call SetUnitTimeScale(L9s,X9s)
endfunction
function aGu takes hashtable yGu,integer pGu,integer eGu,real qGu returns nothing
call SaveReal(yGu,pGu,eGu,qGu)
endfunction
function l7s takes handle O7s returns integer
return GetHandleId(O7s)
endfunction
function AJu takes unit IJu,real PJu returns nothing
call C9s(IJu,PJu)
call aGu(Na,l7s(IJu),nn,PJu)
endfunction
function H5r takes unit P5r,real A5r,real D5r returns nothing
call SetUnitFlyHeight(P5r,A5r,D5r)
endfunction
function I8s takes unit Z8s,integer U8s returns boolean
return UnitRemoveAbility(Z8s,U8s)
endfunction
function CJu takes unit LJu,real XJu returns nothing
if L5r(LJu,1097691750)then
call I8s(LJu,1097691750)
endif
call H5r(LJu,XJu,Ua)
call aGu(Na,l7s(LJu),dn,XJu)
endfunction
function CWu takes integer XWu returns playercolor
return fa[XWu]
endfunction
function N_u takes real B_u returns real
return B_u
endfunction
function D9s takes unit P9s,real A9s returns nothing
call SetUnitPropWindow(P9s,N_u(A9s))
endfunction
function DKu takes unit QKu,integer WKu returns boolean
local integer EKu
local integer ZKu
local integer UKu
local integer IKu
local integer PKu
local integer AKu
if I8s(QKu,WKu)then
set EKu=l7s(QKu)
set ZKu=iYu(Na,EKu,Rn)
set UKu=1
set IKu=ZKu
loop
exitwhen UKu>IKu
if iYu(Na,EKu,Rn+UKu*gn)==WKu then
call uGu(Na,EKu,Rn+UKu*gn,iYu(Na,EKu,Rn+ZKu*gn))
call uGu(Na,EKu,Rn,ZKu-1)
return true
endif
set UKu=UKu+1
endloop
set PKu=1
set AKu=iYu(Na,EKu,Yn)
loop
exitwhen PKu>AKu
if iYu(Na,EKu,Yn+PKu*gn)==WKu then
call uGu(Na,EKu,Yn+PKu*gn,iYu(Na,EKu,Yn+ZKu*gn))
call uGu(Na,EKu,Yn,ZKu-1)
exitwhen true
endif
set PKu=PKu+1
endloop
set ZKu=iYu(Na,EKu,Tn)+1
call uGu(Na,EKu,Tn,ZKu)
call uGu(Na,EKu,Tn+ZKu*gn,WKu)
return true
endif
return false
endfunction
function EYo takes integer vYo,integer mYo,string QYo returns real
local real WYo
if mYo<0 or mYo>=2 then
call Mau("Index out of Bounds",QYo)
elseif mYo<=0 then
set WYo=Oww[vYo]
else
set WYo=lww[vYo]
endif
return WYo
endfunction
function G_s takes unit T_s,real Y_s returns nothing
call BlzSetUnitArmor(T_s,Y_s)
endfunction
function H0s takes unit A0s,string D0s returns nothing
call BlzSetHeroProperName(A0s,D0s)
endfunction
function H8s takes unit P8s,item A8s,integer D8s returns boolean
return UnitDropItemSlot(P8s,A8s,D8s)
endfunction
function H_s takes unit I_s,integer P_s,integer A_s,integer D_s returns nothing
call BlzSetUnitAbilityManaCost(I_s,P_s,A_s,D_s)
endfunction
function V_u takes real C_u returns real
return C_u*by
endfunction
function I5r takes player Q5r,integer W5r,real E5r,real Z5r,real U5r returns unit
return CreateUnit(Q5r,W5r,E5r,Z5r,V_u(U5r))
endfunction
function s9s takes unit u9s,playercolor r9s returns nothing
call SetUnitColor(u9s,r9s)
endfunction
function wEu takes playercolor VWu returns integer
local integer BWu=0
local integer NWu=0
local integer MWu=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen NWu>MWu
if fa[NWu]==VWu then
set BWu=NWu
exitwhen true
endif
set NWu=NWu+1
endloop
return BWu
endfunction
function KHu takes unit HHu,playercolor JHu returns nothing
call s9s(HHu,JHu)
call uGu(Na,l7s(HHu),On,wEu(JHu))
endfunction
function LYo takes integer DYo,integer HYo,string JYo returns integer
local integer KYo
if HYo<0 or HYo>=2 then
call Mau("Index out of Bounds",JYo)
elseif HYo<=0 then
set KYo=bww[DYo]
else
set KYo=yww[DYo]
endif
return KYo
endfunction
function N9s takes unit V9s,real B9s returns nothing
call SetUnitTurnSpeed(V9s,B9s)
endfunction
function p9s takes unit l9s,unitstate b9s,real y9s returns nothing
call SetUnitState(l9s,b9s,y9s)
endfunction
function O9s takes unit c9s,real o9s returns nothing
call p9s(c9s,UNIT_STATE_LIFE,o9s)
endfunction
function P0s takes unit U0s,string I0s returns nothing
call BlzSetUnitName(U0s,I0s)
endfunction
function P6r takes unit U6r,integer I6r returns nothing
call SetHeroInt(U6r,I6r,true)
endfunction
function Q6r takes unit v6r,integer m6r returns nothing
call SetHeroStr(v6r,m6r,true)
endfunction
function Y9s takes unit R9s,real T9s returns nothing
call SetUnitMoveSpeed(R9s,T9s)
endfunction
function QJu takes unit vJu,real mJu returns nothing
call Y9s(vJu,mJu)
call aGu(Na,l7s(vJu),an,mJu)
endfunction
function RKu takes unit dKu,real fKu returns nothing
call SetUnitBlendTime(dKu,fKu)
call aGu(Na,l7s(dKu),fn,fKu)
endfunction
function x9s takes unit k9s,boolean j9s returns nothing
call SetUnitPathing(k9s,j9s)
endfunction
function UHu takes unit EHu,boolean ZHu returns nothing
call x9s(EHu,ZHu)
call JYu(Na,l7s(EHu),on,ZHu)
endfunction
function Fhu takes item ghu,string hhu returns nothing
call BlzSetItemDescription(ghu,hhu)
endfunction
function Hhu takes item Ahu,string Dhu returns nothing
call BlzSetItemIconPath(Ahu,Dhu)
endfunction
function bgu takes integer Ogu,integer lgu returns integer
return BlzBitAnd(Ogu,lgu)
endfunction
function Ywu takes integer Rwu,integer Twu returns boolean
return bgu(Rwu,gy[Twu])!=0
endfunction
function mwu takes integer xwu,integer vwu returns boolean
return Ywu(xwu,vwu)
endfunction
function Lhu takes integer Jhu,integer Khu returns boolean
return mwu(Jhu,Khu)
endfunction
function Thu takes item fhu,string Rhu returns nothing
call BlzSetItemName(fhu,Rhu)
endfunction
function Uhu takes item Ehu,string Zhu returns nothing
call BlzSetItemExtendedTooltip(Ehu,Zhu)
endfunction
function Zrs takes widget Wrs,real Ers returns nothing
call SetWidgetLife(Wrs,Ers)
endfunction
function ahu takes item ehu,integer qhu returns nothing
call SetItemCharges(ehu,qhu)
endfunction
function chu takes item ihu,boolean Shu returns nothing
call SetItemInvulnerable(ihu,Shu)
endfunction
function dfS takes integer afS,integer nfS returns string
return hYu(MT,afS,nfS)
endfunction
function Ceo takes integer Jeo,integer Keo,string Leo returns string
local string Xeo
set w3[MM]=Leo
set MM=MM+1
if km[Jeo]==0 then
if Jeo==0 then
call Mau("Nullpointer exception when calling StringHashList.get","when calling error in Utility, line 243")
else
call Mau("Called StringHashList.get on invalid object.","when calling error in Utility, line 243")
endif
endif
set Xeo=dfS(Jeo,Keo)
set MM=MM-1
return Xeo
endfunction
function IVs takes integer WVs,integer EVs,string ZVs returns string
local string UVs
set w3[MM]=ZVs
set MM=MM+1
set UVs=Ceo(nI[WVs],EVs,"when calling get in LegacyStringTable, line 28")
set MM=MM-1
return UVs
endfunction
function dPc takes integer ePc,integer qPc,string aPc returns string
local string nPc
set w3[MM]=aPc
set MM=MM+1
if Qg[ePc]==0 then
if ePc==0 then
call Mau("Nullpointer exception when calling StringTable.getString","when calling error in LegacyStringTable, line 27")
else
call Mau("Called StringTable.getString on invalid object.","when calling error in LegacyStringTable, line 27")
endif
endif
set nPc=IVs(ePc,qPc,"when calling getString in LegacyStringTable, line 27")
set MM=MM-1
return nPc
endfunction
function uhu takes item Mgu,boolean whu returns nothing
call SetItemDroppable(Mgu,whu)
endfunction
function hHu takes item GHu,boolean gHu returns nothing
call uhu(GHu,gHu)
call JYu(Na,l7s(GHu),Sn,gHu)
endfunction
function Ngu takes item Vgu,boolean Bgu returns nothing
call SetItemDropOnDeath(Vgu,Bgu)
endfunction
function mHu takes item xHu,boolean vHu returns nothing
call Ngu(xHu,vHu)
call JYu(Na,l7s(xHu),cn,vHu)
endfunction
function mhu takes item xhu,string vhu returns nothing
call BlzSetItemTooltip(xhu,vhu)
endfunction
function thu takes item rhu,boolean shu returns nothing
call SetItemPawnable(rhu,shu)
endfunction
function jXs takes integer RXs,item TXs,string YXs returns nothing
local item GXs
local item gXs
local item hXs
local item FXs
local item kXs
set w3[MM]=YXs
set MM=MM+1
set GXs=TXs
call chu(GXs,Lhu(MU[RXs],0))
set gXs=GXs
call mHu(gXs,Lhu(MU[RXs],1))
set hXs=gXs
call hHu(hXs,Lhu(MU[RXs],2))
set FXs=hXs
call thu(FXs,Lhu(MU[RXs],3))
set kXs=FXs
call ahu(kXs,uI[RXs])
if Lhu(MU[RXs],6)then
call Zrs(TXs,rI[RXs])
endif
if Lhu(MU[RXs],7)then
call Thu(TXs,dPc(NU[RXs],sI[RXs],"when calling getString in LegacyItemData, line 94"))
endif
if Lhu(MU[RXs],8)then
call Fhu(TXs,dPc(NU[RXs],tI[RXs],"when calling getString in LegacyItemData, line 96"))
endif
if Lhu(MU[RXs],9)then
call mhu(TXs,dPc(NU[RXs],iI[RXs],"when calling getString in LegacyItemData, line 98"))
endif
if Lhu(MU[RXs],10)then
call Uhu(TXs,dPc(NU[RXs],SI[RXs],"when calling getString in LegacyItemData, line 100"))
endif
if Lhu(MU[RXs],11)then
call Hhu(TXs,dPc(NU[RXs],cI[RXs],"when calling getString in LegacyItemData, line 102"))
endif
set MM=MM-1
set GXs=null
set gXs=null
set hXs=null
set FXs=null
set kXs=null
endfunction
function QIc takes integer xIc,item vIc,string mIc returns nothing
set w3[MM]=mIc
set MM=MM+1
if Kh[xIc]==0 then
if xIc==0 then
call Mau("Nullpointer exception when calling SingleItemData.initItem","when calling error in LegacyItemData, line 85")
else
call Mau("Called SingleItemData.initItem on invalid object.","when calling error in LegacyItemData, line 85")
endif
endif
call jXs(xIc,vIc,"when calling initItem in LegacyItemData, line 85")
set MM=MM-1
endfunction
function Pgu takes integer Egu,real Zgu,real Ugu,real Igu returns item
return CreateItem(Egu,Zgu,Ugu)
endfunction
function qus takes real pus,real eus returns real
set R1=pus
set T1=eus
set Y1=0.
return R1
endfunction
function Wgu takes integer vgu,real mgu,real Qgu returns item
return Pgu(vgu,qus(mgu,Qgu),T1,Y1)
endfunction
function QXs takes integer xXs,string vXs returns item
local item mXs
set w3[MM]=vXs
set MM=MM+1
set mXs=Wgu(wI[xXs],0.,0.)
call QIc(xXs,mXs,"when calling initItem in LegacyItemData, line 106")
set MM=MM-1
set Jnw=mXs
set mXs=null
return Jnw
endfunction
function UIc takes integer WIc,string EIc returns item
local item ZIc
set w3[MM]=EIc
set MM=MM+1
if Kh[WIc]==0 then
if WIc==0 then
call Mau("Nullpointer exception when calling SingleItemData.create","when calling error in LegacyItemData, line 104")
else
call Mau("Called SingleItemData.create on invalid object.","when calling error in LegacyItemData, line 104")
endif
endif
set ZIc=QXs(WIc,"when calling create in LegacyItemData, line 104")
set MM=MM-1
set odw=ZIc
set ZIc=null
return odw
endfunction
function V5r takes unit X5r,item C5r returns boolean
return UnitAddItem(X5r,C5r)
endfunction
function Vhu takes integer Xhu,integer Chu returns boolean
return mwu(Xhu,Chu)
endfunction
function qZu takes string eZu returns nothing
call DisplayTimedTextToPlayer(ea,0.,0.,Za,eZu)
endfunction
function YZu takes boolean RZu returns nothing
local string TZu="False"
if RZu then
set TZu="True"
endif
call qZu(TZu)
endfunction
function Z0s takes unit W0s,integer E0s returns nothing
call BlzSetUnitMaxMana(W0s,E0s)
endfunction
function Z6r takes unit W6r,integer E6r returns nothing
call SetHeroAgi(W6r,E6r,true)
endfunction
function f0s takes unit n0s,real d0s returns nothing
call SetUnitY(n0s,d0s)
endfunction
function l0s takes unit o0s,real O0s returns nothing
call SetUnitX(o0s,O0s)
endfunction
function a0s takes unit b0s,real y0s,real p0s returns nothing
local unit e0s=b0s
local unit q0s
call l0s(e0s,y0s)
set q0s=e0s
call f0s(q0s,p0s)
set e0s=null
set q0s=null
endfunction
function M5r takes unit B5r,unitstate N5r returns real
return GetUnitState(B5r,N5r)
endfunction
function a7s takes unit q7s returns real
return M5r(q7s,UNIT_STATE_MAX_MANA)
endfunction
function a9s takes unit e9s,boolean q9s returns nothing
call SetUnitInvulnerable(e9s,q9s)
endfunction
function avr takes integer qvr returns real
return qvr/GT
endfunction
function K9s takes unit H9s,real J9s returns nothing
call SetUnitScale(H9s,J9s,J9s,J9s)
endfunction
function cJu takes unit iJu,real SJu returns nothing
call K9s(iJu,SJu)
call aGu(Na,l7s(iJu),bn,SJu)
endfunction
function I9s takes unit E9s,real Z9s,real U9s returns nothing
call SetUnitPosition(E9s,Z9s,U9s)
endfunction
function WUu takes real QUu returns real
return Sin(QUu)
endfunction
function j7s takes unit k7s returns real
return GetUnitX(k7s)
endfunction
function leu takes destructable Oeu returns nothing
call RemoveDestructable(Oeu)
endfunction
function mUu takes real vUu returns real
return Cos(vUu)
endfunction
function q8s takes unit y8s,string p8s,widget e8s returns boolean
return IssueTargetOrder(y8s,p8s,e8s)
endfunction
function v7s takes unit x7s returns real
return GetUnitY(x7s)
endfunction
function wwu takes real M_u returns real
set u3=M_u*ly
return u3
endfunction
function cKu takes unit wKu,integer uKu,boolean rKu returns nothing
local integer sKu=uKu
local real tKu
local real iKu
local real SKu
if sKu==1 then
set tKu=j7s(wKu)
set iKu=v7s(wKu)
set SKu=GetUnitFacing(wKu)
call I9s(wKu,tKu,iKu)
call SetUnitFacing(wKu,SKu)
set SKu=N_u(wwu(SKu))
set tKu=tKu+10.00*mUu(SKu)
set iKu=iKu+10.00*WUu(SKu)
set bj_lastCreatedDestructable=CreateDestructable(1148546413,tKu,iKu,0.00,1.00,0)
if rKu then
call L5r(wKu,1094797617)
call q8s(wKu,"grabtree",bj_lastCreatedDestructable)
call I8s(wKu,1094797617)
call I8s(wKu,1096894768)
call L5r(wKu,1096894769)
else
call L5r(wKu,1094797616)
call q8s(wKu,"grabtree",bj_lastCreatedDestructable)
call I8s(wKu,1094797616)
call I8s(wKu,1096894769)
call L5r(wKu,1096894768)
endif
call leu(bj_lastCreatedDestructable)
set bj_lastCreatedDestructable=null
elseif sKu==2 then
if rKu then
call L5r(wKu,1094797618)
else
call I8s(wKu,1094797618)
endif
endif
endfunction
function e7s takes unit p7s returns real
return M5r(p7s,UNIT_STATE_MAX_LIFE)
endfunction
function eYo takes integer lYo,integer bYo,string yYo returns integer
local integer pYo
if bYo<0 or bYo>=2 then
call Mau("Index out of Bounds",yYo)
elseif bYo<=0 then
set pYo=iww[lYo]
else
set pYo=Sww[lYo]
endif
return pYo
endfunction
function f9s takes unit n9s,real d9s returns nothing
call p9s(n9s,UNIT_STATE_MANA,d9s)
endfunction
function c0s takes unit r0s,integer s0s,integer t0s,integer i0s,integer S0s returns nothing
call SetUnitVertexColor(r0s,s0s,t0s,i0s,S0s)
endfunction
function dJu takes unit yJu,integer pJu,integer eJu,integer qJu,integer aJu returns nothing
local integer nJu
call c0s(yJu,pJu,eJu,qJu,aJu)
set nJu=l7s(yJu)
call uGu(Na,nJu,yn,pJu)
call uGu(Na,nJu,pn,eJu)
call uGu(Na,nJu,en,qJu)
call uGu(Na,nJu,qn,aJu)
endfunction
function gJu takes unit fJu,integer RJu,integer TJu,integer YJu,integer GJu returns nothing
call dJu(fJu,RJu,TJu,YJu,GJu)
endfunction
function gYo takes integer RYo,integer TYo,string YYo returns integer
local integer GYo
if TYo<0 or TYo>=2 then
call Mau("Index out of Bounds",YYo)
elseif TYo<=0 then
set GYo=cww[RYo]
else
set GYo=oww[RYo]
endif
return GYo
endfunction
function i6r takes unit r6r,integer s6r,boolean t6r returns nothing
call SetHeroXP(r6r,s6r,t6r)
endfunction
function j_s takes unit g_s,integer h_s,integer F_s,real k_s returns nothing
call BlzSetUnitAbilityCooldown(g_s,h_s,F_s,k_s)
endfunction
function k8s takes unit F8s returns nothing
call PauseUnit(F8s,true)
endfunction
function B0s takes unit X0s,integer C0s,integer V0s returns nothing
call BlzSetUnitBaseDamage(X0s,C0s,V0s)
endfunction
function Mhu takes integer Bhu,integer Nhu returns boolean
return mwu(Bhu,Nhu)
endfunction
function b_s takes unit o_s,integer O_s,integer l_s returns nothing
call BlzSetUnitDiceSides(o_s,O_s,l_s)
endfunction
function d_s takes unit q_s,real a_s,integer n_s returns nothing
call BlzSetUnitAttackCooldown(q_s,a_s,n_s)
endfunction
function t_s takes unit u_s,integer r_s,integer s_s returns nothing
call BlzSetUnitDiceNumber(u_s,r_s,s_s)
endfunction
function lFu takes unit sFu,integer tFu,integer iFu,real SFu,integer cFu,integer oFu,integer OFu returns nothing
if Mhu(tFu,0)then
call B0s(sFu,iFu,OFu)
endif
if Mhu(tFu,2)then
call d_s(sFu,SFu,OFu)
endif
if Mhu(tFu,4)then
call b_s(sFu,cFu,OFu)
endif
if Mhu(tFu,6)then
call t_s(sFu,oFu,OFu)
endif
endfunction
function mKu takes unit hKu,integer FKu returns boolean
local integer kKu
local integer jKu
local integer xKu
local integer vKu
if L5r(hKu,FKu)then
call G8s(hKu,FKu,true)
set kKu=l7s(hKu)
set jKu=iYu(Na,kKu,Tn)
set xKu=1
set vKu=jKu
loop
exitwhen xKu>vKu
if iYu(Na,kKu,Tn+xKu*gn)==FKu then
call uGu(Na,kKu,Tn+xKu*gn,iYu(Na,kKu,Tn+jKu*gn))
call uGu(Na,kKu,Tn,jKu-1)
set jKu=iYu(Na,kKu,Yn)+1
call uGu(Na,kKu,Yn,jKu)
call uGu(Na,kKu,Yn+jKu*gn,FKu)
return true
endif
set xKu=xKu+1
endloop
set jKu=iYu(Na,kKu,Rn)+1
call uGu(Na,kKu,Rn,jKu)
call uGu(Na,kKu,Rn+jKu*gn,FKu)
return true
endif
return false
endfunction
function H7s takes unit D7s returns integer
return UnitInventorySize(D7s)
endfunction
function L7s takes unit J7s,integer K7s returns item
return UnitItemInSlot(J7s,K7s)
endfunction
function vdo takes integer Fdo,integer kdo returns integer
local integer jdo=Ee
local integer xdo
if Fdo<jdo then
set xdo=Fdo
else
set xdo=jdo
endif
set jdo=xdo
if kdo<jdo then
set xdo=kdo
else
set xdo=jdo
endif
set jdo=xdo
return jdo
endfunction
function ous takes unit Mws,integer wus returns nothing
local integer rus=H7s(Mws)
local item array uus
local integer sus
local integer tus
local integer ius
local integer Sus
local integer cus
if rus!=0 then
set sus=0
set tus=rus-1
loop
exitwhen sus>tus
set uus[sus]=L7s(Mws,sus)
set sus=sus+1
endloop
call I8s(Mws,XT[rus])
endif
if wus>0 then
set ius=vdo(wus,6)
call L5r(Mws,XT[ius])
call G8s(Mws,XT[ius],true)
set Sus=0
set cus=ius-1
loop
exitwhen Sus>cus
call V5r(Mws,uus[Sus])
call H8s(Mws,uus[Sus],Sus)
set Sus=Sus+1
endloop
endif
endfunction
function rFu takes integer wFu,integer uFu returns boolean
return mwu(wFu,uFu)
endfunction
function sGo takes integer MYo,integer wGo,string uGo returns integer
local integer rGo
if wGo<0 or wGo>=2 then
call Mau("Index out of Bounds",uGo)
elseif wGo<=0 then
set rGo=pww[MYo]
else
set rGo=eww[MYo]
endif
return rGo
endfunction
function tYo takes integer wYo,integer uYo,string rYo returns integer
local integer sYo
if uYo<0 or uYo>=6 then
call Mau("Index out of Bounds",rYo)
elseif uYo<=2 then
if uYo<=1 then
if uYo<=0 then
set sYo=M0w[wYo]
else
set sYo=www[wYo]
endif
else
set sYo=uww[wYo]
endif
elseif uYo<=4 then
if uYo<=3 then
set sYo=rww[wYo]
else
set sYo=sww[wYo]
endif
else
set sYo=tww[wYo]
endif
return sYo
endfunction
function twu takes real swu returns real
set s3=swu
return s3
endfunction
function v0s takes unit j0s,integer x0s returns nothing
call BlzSetUnitMaxHP(j0s,x0s)
endfunction
function X8s takes unit J8s,integer K8s,integer L8s returns nothing
call SetUnitAbilityLevel(J8s,K8s,L8s)
endfunction
function r7s takes unit w7s,integer u7s returns integer
return GetUnitAbilityLevel(w7s,u7s)
endfunction
function wLu takes unit HKu,integer JKu,integer KKu returns nothing
local integer LKu=r7s(HKu,JKu)
local integer XKu
local integer CKu
local integer VKu
local integer BKu
local integer NKu
local integer MKu
if KKu>0 and LKu>0 and KKu!=LKu then
call X8s(HKu,JKu,KKu)
set XKu=l7s(HKu)
set CKu=iYu(Na,XKu,Rn)
set VKu=1
set BKu=CKu
loop
exitwhen VKu>BKu
if iYu(Na,XKu,Rn+VKu*gn)==JKu then
return
endif
set VKu=VKu+1
endloop
set CKu=iYu(Na,XKu,Yn)
set NKu=1
set MKu=CKu
loop
exitwhen NKu>MKu
if iYu(Na,XKu,Yn+NKu*gn)==JKu then
return
endif
set NKu=NKu+1
endloop
set CKu=CKu+1
call uGu(Na,XKu,Yn,CKu)
call uGu(Na,XKu,Yn+CKu*gn,JKu)
endif
endfunction
function CNs takes integer GNs,player gNs,real hNs,real FNs,real kNs,string jNs returns unit
local unit xNs
local unit vNs
local integer mNs
local integer QNs
local item WNs
local real ENs
local real ZNs
local integer UNs
local integer INs
local integer PNs
local integer ANs
local integer DNs
local integer HNs
local integer JNs
local unit KNs
local unit LNs
local integer XNs
set w3[MM]=jNs
set MM=MM+1
set vNs=I5r(gNs,QI[GNs],hNs,FNs,kNs)
call a9s(vNs,Vhu(mI[GNs],0))
set xNs=vNs
call YZu(Vhu(mI[GNs],0))
call YZu(Vhu(mI[GNs],1))
call YZu(Vhu(mI[GNs],2))
call YZu(Vhu(mI[GNs],3))
call qZu("_")
call YZu(Vhu(mI[GNs],17))
call YZu(Vhu(mI[GNs],20))
call YZu(Vhu(mI[GNs],21))
call YZu(Vhu(mI[GNs],22))
call YZu(Vhu(mI[GNs],23))
call YZu(Vhu(mI[GNs],18))
call YZu(Vhu(mI[GNs],19))
if Vhu(mI[GNs],4)then
call cKu(xNs,1,false)
elseif Vhu(mI[GNs],5)then
call cKu(xNs,1,true)
endif
call cKu(xNs,2,Vhu(mI[GNs],6))
if Vhu(mI[GNs],7)then
call CJu(xNs,EI[GNs])
endif
if Vhu(mI[GNs],8)then
call KHu(xNs,CWu(ZI[GNs]))
endif
if Vhu(mI[GNs],9)then
call gJu(xNs,UI[GNs],II[GNs],PI[GNs],AI[GNs])
endif
if Vhu(mI[GNs],10)then
call cJu(xNs,DI[GNs])
endif
if Vhu(mI[GNs],11)then
call QJu(xNs,HI[GNs])
endif
if Vhu(mI[GNs],12)then
call N9s(xNs,JI[GNs])
endif
if Vhu(mI[GNs],13)then
call AJu(xNs,KI[GNs])
endif
if Vhu(mI[GNs],14)then
call RKu(xNs,LI[GNs])
endif
if Vhu(mI[GNs],15)then
call D9s(xNs,twu(XI[GNs]))
endif
if Vhu(mI[GNs],3)then
call i6r(xNs,NI[GNs],false)
call Q6r(xNs,CI[GNs])
call Z6r(xNs,VI[GNs])
call P6r(xNs,BI[GNs])
call H0s(xNs,dPc(vI[GNs],MI[GNs],"when calling getString in LegacyUnitData, line 217"))
endif
if Vhu(mI[GNs],16)then
call ous(xNs,WI[GNs])
set mNs=0
set QNs=WI[GNs]-1
loop
exitwhen mNs>QNs
if tYo(GNs,mNs,"when reading array LegacySingleUnitData_items in  in LegacyUnitData, line 221")!=0 then
set WNs=UIc(tYo(GNs,mNs,"when reading array LegacySingleUnitData_items in  in LegacyUnitData, line 222"),"when calling create in LegacyUnitData, line 222")
call V5r(xNs,WNs)
call H8s(xNs,WNs,mNs)
endif
set mNs=mNs+1
endloop
endif
if Vhu(mI[GNs],17)then
call G_s(xNs,wP[GNs])
endif
if Vhu(mI[GNs],18)then
call lFu(xNs,eYo(GNs,0,"when reading array LegacySingleUnitData_weapons_flags_val in  in LegacyUnitData, line 229"),gYo(GNs,0,"when reading array LegacySingleUnitData_weapons_baseDamage in  in LegacyUnitData, line 229"),EYo(GNs,0,"when reading array LegacySingleUnitData_weapons_cooldown in  in LegacyUnitData, line 229"),LYo(GNs,0,"when reading array LegacySingleUnitData_weapons_diceSides in  in LegacyUnitData, line 229"),sGo(GNs,0,"when reading array LegacySingleUnitData_weapons_diceNumber in  in LegacyUnitData, line 229"),1)
endif
if Vhu(mI[GNs],19)then
call lFu(xNs,eYo(GNs,1,"when reading array LegacySingleUnitData_weapons_flags_val in  in LegacyUnitData, line 231"),gYo(GNs,1,"when reading array LegacySingleUnitData_weapons_baseDamage in  in LegacyUnitData, line 231"),EYo(GNs,1,"when reading array LegacySingleUnitData_weapons_cooldown in  in LegacyUnitData, line 231"),LYo(GNs,1,"when reading array LegacySingleUnitData_weapons_diceSides in  in LegacyUnitData, line 231"),sGo(GNs,1,"when reading array LegacySingleUnitData_weapons_diceNumber in  in LegacyUnitData, line 231"),1)
endif
if Vhu(mI[GNs],20)then
call v0s(xNs,uP[GNs])
endif
set KNs=xNs
if Vhu(mI[GNs],21)then
set ENs=rP[GNs]
else
set ENs=e7s(xNs)
endif
call O9s(KNs,ENs)
if Vhu(mI[GNs],22)then
call Z0s(xNs,sP[GNs])
endif
set LNs=xNs
if Vhu(mI[GNs],23)then
set ZNs=tP[GNs]
else
set ZNs=a7s(xNs)
endif
call f9s(LNs,ZNs)
if Vhu(mI[GNs],24)then
call P0s(xNs,dPc(vI[GNs],iP[GNs],"when calling getString in LegacyUnitData, line 239"))
endif
if Vhu(mI[GNs],25)then
call qZu("Has removed")
set UNs=kAs(SP[GNs],"when calling iterator in LegacyUnitData, line 242")
loop
exitwhen not PPs(UNs,"when calling hasNext in LegacyUnitData, line 242")
set INs=EPs(UNs,"when calling next in LegacyUnitData, line 242")
call DKu(xNs,INs)
endloop
call HPs(UNs,"when calling close in LegacyUnitData, line 242")
endif
if Vhu(mI[GNs],26)then
call qZu("has modified")
set PNs=0
set ANs=0
loop
exitwhen not(PNs!=yZc(cP[GNs],"when calling size in LegacyUnitData, line 248"))
set DNs=TZc(cP[GNs],PNs,"when calling get in LegacyUnitData, line 249")
call mKu(xNs,DNs)
set PNs=PNs+1
set XNs=TZc(cP[GNs],PNs,"when calling get in LegacyUnitData, line 252")
set HNs=XNs
set PNs=PNs+1
if rFu(HNs,0)then
set JNs=1
elseif rFu(HNs,1)then
set JNs=2
elseif rFu(HNs,2)then
set JNs=3
elseif rFu(HNs,3)then
set JNs=4
else
set JNs=TZc(cP[GNs],PNs,"when calling get in LegacyUnitData, line 264")
set PNs=PNs+1
endif
call wLu(xNs,DNs,JNs)
if rFu(HNs,5)then
call H_s(xNs,DNs,JNs,TZc(cP[GNs],PNs,"when calling get in LegacyUnitData, line 268"))
set PNs=PNs+1
endif
if rFu(HNs,6)then
call j_s(xNs,DNs,JNs,avr(TZc(oP[GNs],ANs,"when calling get in LegacyUnitData, line 271")))
set ANs=ANs+1
endif
endloop
endif
if Vhu(mI[GNs],1)then
call k8s(xNs)
endif
call UHu(xNs,not Vhu(mI[GNs],2))
call a0s(xNs,hNs,FNs)
set MM=MM-1
set Knw=xNs
set xNs=null
set vNs=null
set WNs=null
set KNs=null
set LNs=null
return Knw
endfunction
function kus takes real Gus,real gus,real hus,real Fus returns real
set j1=Gus+hus
set x1=gus+Fus
return j1
endfunction
function i3s takes integer MMs,player w3s,real u3s,real r3s,string s3s returns unit
local unit t3s
set w3[MM]=s3s
set MM=MM+1
set t3s=CNs(MMs,w3s,kus(u3s,r3s,OP[MMs],lP[MMs]),x1,bP[MMs],"when calling create in LegacyUnitData, line 378")
set MM=MM-1
set Lnw=t3s
set t3s=null
return Lnw
endfunction
function bAc takes integer iAc,player SAc,real cAc,real oAc,string OAc returns unit
local unit lAc
set w3[MM]=OAc
set MM=MM+1
if yF[iAc]==0 then
if iAc==0 then
call Mau("Nullpointer exception when calling LegacySingleUnitDataPositioned.create","when calling error in LegacyUnitData, line 377")
else
call Mau("Called LegacySingleUnitDataPositioned.create on invalid object.","when calling error in LegacyUnitData, line 377")
endif
endif
set lAc=i3s(iAc,SAc,cAc,oAc,"when calling create in LegacyUnitData, line 377")
set MM=MM-1
set Odw=lAc
set lAc=null
return Odw
endfunction
function nZu takes integer aZu returns nothing
call qZu(I2S(aZu))
endfunction
function boc takes string Ooc returns integer
local integer loc
set w3[MM]=Ooc
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set loc=ZG
set UG[loc]=699
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 191")
set loc=0
endif
else
set EG=EG-1
set loc=WG[EG]
set UG[loc]=699
endif
set MM=MM-1
return loc
endfunction
function sXi takes integer wXi,string uXi returns nothing
local integer rXi
set w3[MM]=uXi
set MM=MM+1
call FZu("Загрузка завершена!",30.,pa[kX[wXi]])
set rXi=boc("when calling alloc_CallbackSingle_nullTimer_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 191")
call KGs(rXi)
set xX[rXi]=jX[wXi]
call Cou(rXi,"when calling nullTimer in SotfrpGuiRegions, line 191")
set MM=MM-1
endfunction
function cPc takes integer iPc,string SPc returns nothing
set w3[MM]=SPc
set MM=MM+1
if wF[iPc]==0 then
if iPc==0 then
call Mau("Nullpointer exception when calling SaveDataPasteCallback.onPasted","when calling error in LegacySaveData, line 19")
else
call Mau("Called SaveDataPasteCallback.onPasted on invalid object.","when calling error in LegacySaveData, line 19")
endif
endif
call sXi(iPc,"when calling onPasted_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in LegacySaveData, line 19")
set MM=MM-1
endfunction
function rxS takes integer wxS,string uxS returns nothing
set w3[MM]=uxS
set MM=MM+1
if wF[wxS]==0 then
call Mau("Double free: object of type SaveDataPasteCallback","when calling error in LegacySaveData, line 18")
else
set Bh[Nh]=wxS
set Nh=Nh+1
set wF[wxS]=0
endif
set MM=MM-1
endfunction
function rVs takes integer wVs,string uVs returns nothing
set w3[MM]=uVs
set MM=MM+1
call rxS(wVs,"when calling dealloc_SaveDataPasteCallback in LegacySaveData, line 18")
set MM=MM-1
endfunction
function tPc takes integer rPc,string sPc returns nothing
set w3[MM]=sPc
set MM=MM+1
if wF[rPc]==0 then
if rPc==0 then
call Mau("Nullpointer exception when calling SaveDataPasteCallback.SaveDataPasteCallback","when calling error in LegacySaveData, line 18")
else
call Mau("Called SaveDataPasteCallback.SaveDataPasteCallback on invalid object.","when calling error in LegacySaveData, line 18")
endif
endif
call rVs(rPc,"when calling destroySaveDataPasteCallback in LegacySaveData, line 18")
set MM=MM-1
endfunction
function MCs takes integer BCs,string NCs returns nothing
set w3[MM]=NCs
set MM=MM+1
if pI[BCs]!=0 then
call cPc(pI[BCs],"when calling onPasted in LegacySaveData, line 71")
call tPc(pI[BCs],"when calling dispatch_SaveDataPasteCallback_destroySaveDataPasteCallback in LegacySaveData, line 72")
endif
set MM=MM-1
endfunction
function uAc takes integer MPc,string wAc returns nothing
set w3[MM]=wAc
set MM=MM+1
if Vh[MPc]==0 then
if MPc==0 then
call Mau("Nullpointer exception when calling LegacyPositionedUnitDataPasteCallback.onPasted","when calling error in LegacyUnitData, line 388")
else
call Mau("Called LegacyPositionedUnitDataPasteCallback.onPasted on invalid object.","when calling error in LegacyUnitData, line 388")
endif
endif
call MCs(MPc,"when calling onPasted_paste_LegacySaveData_LegacySaveData in LegacyUnitData, line 388")
set MM=MM-1
endfunction
function ABs takes integer mBs,player QBs,real WBs,real EBs,integer ZBs,string UBs returns nothing
local integer IBs
local integer PBs
set w3[MM]=UBs
set MM=MM+1
call nZu(yZc(hI[mBs],"when calling size in LegacyUnitData, line 408"))
set IBs=kAs(hI[mBs],"when calling iterator in LegacyUnitData, line 409")
loop
exitwhen not PPs(IBs,"when calling hasNext in LegacyUnitData, line 409")
set PBs=EPs(IBs,"when calling next in LegacyUnitData, line 409")
call bAc(PBs,QBs,WBs,EBs,"when calling create in LegacyUnitData, line 410")
endloop
call HPs(IBs,"when calling close in LegacyUnitData, line 409")
call uAc(ZBs,"when calling onPasted in LegacyUnitData, line 411")
call NPc(ZBs,"when calling dispatch_LegacyPositionedUnitDataPasteCallback_destroyLegacyPositionedUnitDataPasteCallback in LegacyUnitData, line 412")
set MM=MM-1
endfunction
function CPc takes integer DPc,player HPc,real JPc,real KPc,integer LPc,string XPc returns nothing
set w3[MM]=XPc
set MM=MM+1
if oF[DPc]==0 then
if DPc==0 then
call Mau("Nullpointer exception when calling LegacyPositionedUnitData.paste","when calling error in LegacyUnitData, line 407")
else
call Mau("Called LegacyPositionedUnitData.paste on invalid object.","when calling error in LegacyUnitData, line 407")
endif
endif
call ABs(DPc,HPc,JPc,KPc,LPc,"when calling paste in LegacyUnitData, line 407")
set MM=MM-1
endfunction
function MjS takes string BjS returns integer
local integer NjS
set w3[MM]=BjS
set MM=MM+1
if Xh==0 then
if Ch<32768 then
set Ch=Ch+1
set NjS=Ch
set Vh[NjS]=1317
else
call Mau("Out of memory: Could not create LegacyPositionedUnitDataPasteCallback_paste_LegacySaveData_LegacySaveData.","when calling error in LegacySaveData, line 69")
set NjS=0
endif
else
set Xh=Xh-1
set NjS=Lh[Xh]
set Vh[NjS]=1317
endif
set MM=MM-1
return NjS
endfunction
function xCs takes integer fCs,integer RCs,string TCs returns nothing
local integer YCs
local integer GCs
local player gCs
local real hCs
local real FCs
local real kCs
local real jCs
set w3[MM]=TCs
set MM=MM+1
call qZu("pasting unit data")
set GCs=yI[fCs]
set gCs=VD[fCs]
set kCs=OI[fCs]
set jCs=lI[fCs]
set hCs=kCs
set FCs=jCs
set YCs=MjS("when calling alloc_LegacyPositionedUnitDataPasteCallback_paste_LegacySaveData_LegacySaveData in LegacySaveData, line 69")
set pI[YCs]=RCs
call CPc(GCs,gCs,hCs,FCs,YCs,"when calling paste in LegacySaveData, line 69")
set MM=MM-1
set gCs=null
endfunction
function uPc takes integer NIc,integer MIc,string wPc returns nothing
set w3[MM]=wPc
set MM=MM+1
if Qg[NIc]==0 then
if NIc==0 then
call Mau("Nullpointer exception when calling LegacySaveData.paste","when calling error in LegacySaveData, line 67")
else
call Mau("Called LegacySaveData.paste on invalid object.","when calling error in LegacySaveData, line 67")
endif
endif
call xCs(NIc,MIc,"when calling paste in LegacySaveData, line 67")
set MM=MM-1
endfunction
function MLi takes integer LLi,integer XLi,string CLi returns nothing
local integer VLi
local integer BLi
local integer NLi
set w3[MM]=CLi
set MM=MM+1
if XLi==0 then
call BIc(GX[LLi],gX[LLi],hX[LLi],"when calling setOrigin in SotfrpGuiRegions, line 187")
call FZu("Чтение файла и синхронизация данных завершены! Загрузка...",30.,pa[FX[LLi]])
set NLi=GX[LLi]
set VLi=ooc("when calling alloc_SaveDataPasteCallback_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 189")
set kX[VLi]=FX[LLi]
set jX[VLi]=GX[LLi]
call uPc(NLi,VLi,"when calling paste in SotfrpGuiRegions, line 189")
else
if XLi==1 then
call FZu("Не удалось прочитать файл. Возможно, файл отсутствует или поврежден, или к нему не удалось получить доступ.",30.,pa[FX[LLi]])
else
call FZu("Во время загрузки произошла внутренняя ошибка. Пожалуйста, сообщите об этом разработчикам, приложив как можно больше информации о том, в каких обстоятельствах это произошло.",30.,pa[FX[LLi]])
endif
set BLi=eoc("when calling alloc_CallbackSingle_nullTimer_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 198")
call KGs(BLi)
set vX[BLi]=GX[LLi]
call Cou(BLi,"when calling nullTimer in SotfrpGuiRegions, line 198")
endif
set MM=MM-1
endfunction
function net takes integer yet,real pet,real eet returns nothing
local real qet=pet
local real aet=eet
set SJ[yet]=qet
set cJ[yet]=aet
endfunction
function KMc takes integer AMc,real DMc,real HMc,string JMc returns nothing
set w3[MM]=JMc
set MM=MM+1
if Qg[AMc]==0 then
if AMc==0 then
call Mau("Nullpointer exception when calling RegionData.setOrigin","when calling error in RegionData, line 89")
else
call Mau("Called RegionData.setOrigin on invalid object.","when calling error in RegionData, line 89")
endif
endif
call net(AMc,DMc,HMc)
set MM=MM-1
endfunction
function Lcc takes string Jcc returns integer
local integer Kcc
set w3[MM]=Jcc
set MM=MM+1
if rj==0 then
if sj<32768 then
set sj=sj+1
set Kcc=sj
set tj[Kcc]=1560
else
call Mau("Out of memory: Could not create RegionDataPasteCallback_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 167")
set Kcc=0
endif
else
set rj=rj-1
set Kcc=uj[rj]
set tj[Kcc]=1560
endif
set MM=MM-1
return Kcc
endfunction
function Mcc takes string Bcc returns integer
local integer Ncc
set w3[MM]=Bcc
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set Ncc=ZG
set UG[Ncc]=696
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 176")
set Ncc=0
endif
else
set EG=EG-1
set Ncc=WG[EG]
set UG[Ncc]=696
endif
set MM=MM-1
return Ncc
endfunction
function ebc takes string ybc returns integer
local integer pbc
set w3[MM]=ybc
set MM=MM+1
if Sj==0 then
if cj<32768 then
set cj=cj+1
set pbc=cj
set oj[pbc]=1662
else
call Mau("Out of memory: Could not create TerrainDataPasteCallback_paste_TerrainData_TerrainData.","when calling error in TerrainData, line 228")
set pbc=0
endif
else
set Sj=Sj-1
set pbc=ij[Sj]
set oj[pbc]=1662
endif
set MM=MM-1
return pbc
endfunction
function QhS takes string vhS returns integer
local integer mhS
set w3[MM]=vhS
set MM=MM+1
if Yg==0 then
if Gg<32768 then
set Gg=Gg+1
set mhS=Gg
set gg[mhS]=672
else
call Mau("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_PositionedDestructableData_DestructableData.","when calling error in DestructableData, line 276")
set mhS=0
endif
else
set Yg=Yg-1
set mhS=Tg[Yg]
set gg[mhS]=672
endif
set MM=MM-1
return mhS
endfunction
function TUu takes real fUu returns integer
local integer RUu=qUu(fUu)
if fUu>0. and fUu-RUu!=0. then
set RUu=RUu+1
endif
return RUu
endfunction
function njr takes timer ejr,real qjr,code ajr returns nothing
call TimerStart(ejr,qjr,true,ajr)
endfunction
function sGs takes integer VYs,timer BYs,real NYs,integer MYs,string wGs returns nothing
local timer uGs
local timer rGs
set w3[MM]=wGs
set MM=MM+1
set KW[VYs]=MYs
set uGs=BYs
call Kkr(uGs,VYs,"when calling setData in ClosureTimers, line 153")
set rGs=uGs
call njr(rGs,NYs,Haw)
set LW[VYs]=rGs
set MM=MM-1
set uGs=null
set rGs=null
endfunction
function Igc takes integer Qgc,timer Wgc,real Egc,integer Zgc,string Ugc returns nothing
set w3[MM]=Ugc
set MM=MM+1
if gg[Qgc]==0 then
if Qgc==0 then
call Mau("Nullpointer exception when calling CallbackCounted.start","when calling error in ClosureTimers, line 150")
else
call Mau("Called CallbackCounted.start on invalid object.","when calling error in ClosureTimers, line 150")
endif
endif
call sGs(Qgc,Wgc,Egc,Zgc,"when calling start in ClosureTimers, line 150")
set MM=MM-1
endfunction
function bOu takes timer SOu,real cOu,integer oOu,integer OOu,string lOu returns integer
set w3[MM]=lOu
set MM=MM+1
call Igc(OOu,SOu,cOu,oOu,"when calling start in ClosureTimers, line 69")
set MM=MM-1
return OOu
endfunction
function nOu takes real yOu,integer pOu,integer eOu,string qOu returns integer
local integer aOu
set w3[MM]=qOu
set MM=MM+1
set aOu=bOu(wjr("when calling getTimer in ClosureTimers, line 81"),yOu,pOu,eOu,"when calling doPeriodicallyCounted in ClosureTimers, line 81")
set MM=MM-1
return aOu
endfunction
function pGs takes integer yGs returns nothing
set KW[yGs]=0
endfunction
function qGs takes integer eGs returns nothing
call pGs(eGs)
endfunction
function ETS takes integer WTS returns nothing
endfunction
function gTS takes integer YTS,integer GTS returns nothing
call ETS(YTS)
set VM[YTS]=GTS
endfunction
function iec takes string sec returns integer
local integer tec
set w3[MM]=sec
set MM=MM+1
if Km==0 then
if Lm<32768 then
set Lm=Lm+1
set tec=Lm
set Xm[tec]=654
else
call Mau("Out of memory: Could not create Box⟪integer⟫.","when calling error in Box, line 14")
set tec=0
endif
else
set Km=Km-1
set tec=Jm[Km]
set Xm[tec]=654
endif
set MM=MM-1
return tec
endfunction
function uTS takes integer NRS,string MRS returns integer
local integer wTS
set w3[MM]=MRS
set MM=MM+1
set wTS=iec("when calling alloc_Box⟪integer⟫ in Box, line 17")
call gTS(wTS,NRS)
set MM=MM-1
return wTS
endfunction
function wao takes integer Vqo,integer Bqo returns integer
local integer Nqo=Ze
local integer Mqo
if Vqo>Nqo then
set Mqo=Vqo
else
set Mqo=Nqo
endif
set Nqo=Mqo
if Bqo>Nqo then
set Mqo=Bqo
else
set Mqo=Nqo
endif
set Nqo=Mqo
return Nqo
endfunction
function Lhs takes integer Whs,player Ehs,real Zhs,real Uhs,integer Ihs,string Phs returns nothing
local integer Ahs
local integer Dhs
local integer Hhs
local real Jhs
local real Khs
set w3[MM]=Phs
set MM=MM+1
set Ahs=uTS(0,"when calling new_Box⟪integer⟫ in DestructableData, line 275")
set Hhs=wao(TUu(yZc(eE[Whs],"when calling size in DestructableData, line 276")*1./25),1)
set Dhs=QhS("when calling alloc_CallbackCounted_doPeriodicallyCounted_PositionedDestructableData_DestructableData in DestructableData, line 276")
call qGs(Dhs)
set hE[Dhs]=Ahs
set FE[Dhs]=Whs
set kE[Dhs]=Ehs
set Jhs=Zhs
set Khs=Uhs
set jE[Dhs]=Jhs
set xE[Dhs]=Khs
set vE[Dhs]=Ihs
call nOu(0.25,Hhs,Dhs,"when calling doPeriodicallyCounted in DestructableData, line 276")
set MM=MM-1
endfunction
function ekc takes integer okc,player Okc,real lkc,real bkc,integer ykc,string pkc returns nothing
set w3[MM]=pkc
set MM=MM+1
if Qg[okc]==0 then
if okc==0 then
call Mau("Nullpointer exception when calling PositionedDestructableData.paste","when calling error in DestructableData, line 274")
else
call Mau("Called PositionedDestructableData.paste on invalid object.","when calling error in DestructableData, line 274")
endif
endif
call Lhs(okc,Okc,lkc,bkc,ykc,"when calling paste in DestructableData, line 274")
set MM=MM-1
endfunction
function iUS takes string sUS returns integer
local integer tUS
set w3[MM]=sUS
set MM=MM+1
if Eg==0 then
if Zg<32768 then
set Zg=Zg+1
set tUS=Zg
set Ug[tUS]=1492
else
call Mau("Out of memory: Could not create PositionedDestructableDataPasteCallback_paste_paste_RegionData_RegionData.","when calling error in RegionData, line 116")
set tUS=0
endif
else
set Eg=Eg-1
set tUS=Wg[Eg]
set Ug[tUS]=1492
endif
set MM=MM-1
return tUS
endfunction
function eqt takes integer iqt,string Sqt returns nothing
local integer cqt
local integer oqt
local player Oqt
local real lqt
local real bqt
local real yqt
local real pqt
set w3[MM]=Sqt
set MM=MM+1
set oqt=yJ[eJ[iqt]]
set Oqt=VD[eJ[iqt]]
set yqt=SJ[eJ[iqt]]
set pqt=cJ[eJ[iqt]]
set lqt=yqt
set bqt=pqt
set cqt=iUS("when calling alloc_PositionedDestructableDataPasteCallback_paste_paste_RegionData_RegionData in RegionData, line 116")
set aJ[cqt]=eJ[iqt]
set nJ[cqt]=qJ[iqt]
call ekc(oqt,Oqt,lqt,bqt,cqt,"when calling paste in RegionData, line 116")
set MM=MM-1
set Oqt=null
endfunction
function bbc takes integer Obc,string lbc returns nothing
set w3[MM]=lbc
set MM=MM+1
if oj[Obc]==0 then
call Mau("Double free: object of type TerrainDataPasteCallback","when calling error in TerrainData, line 13")
else
set ij[Sj]=Obc
set Sj=Sj+1
set oj[Obc]=0
endif
set MM=MM-1
endfunction
function K9S takes integer H9S,string J9S returns nothing
set w3[MM]=J9S
set MM=MM+1
call bbc(H9S,"when calling dealloc_TerrainDataPasteCallback in TerrainData, line 13")
set MM=MM-1
endfunction
function loo takes integer ooo,string Ooo returns nothing
set w3[MM]=Ooo
set MM=MM+1
if oj[ooo]==0 then
if ooo==0 then
call Mau("Nullpointer exception when calling TerrainDataPasteCallback.TerrainDataPasteCallback","when calling error in TerrainData, line 13")
else
call Mau("Called TerrainDataPasteCallback.TerrainDataPasteCallback on invalid object.","when calling error in TerrainData, line 13")
endif
endif
call K9S(ooo,"when calling destroyTerrainDataPasteCallback in TerrainData, line 13")
set MM=MM-1
endfunction
function VGo takes integer LGo,integer XGo,string CGo returns nothing
if LGo==0 then
set w3[MM]=CGo
set MM=MM+1
if sV[XGo]!=0 then
call VGo(1,sV[XGo],"when calling onPasted in TerrainData, line 230")
call loo(sV[XGo],"when calling dispatch_TerrainDataPasteCallback_destroyTerrainDataPasteCallback in TerrainData, line 231")
endif
set MM=MM-1
elseif LGo==1 then
set w3[MM]=CGo
set MM=MM+1
if oj[XGo]==0 then
if XGo==0 then
call Mau("Nullpointer exception when calling TerrainDataPasteCallback.onPasted","when calling error in TerrainData, line 14")
else
call Mau("Called TerrainDataPasteCallback.onPasted on invalid object.","when calling error in TerrainData, line 14")
endif
endif
if oj[XGo]<=1661 then
call eqt(XGo,"when calling onPasted_paste_RegionData_RegionData in TerrainData, line 14")
else
call VGo(0,XGo,"when calling onPasted_paste_TerrainData_TerrainData in TerrainData, line 14")
endif
set MM=MM-1
endif
endfunction
function QZS takes string vZS returns integer
local integer mZS
set w3[MM]=vZS
set MM=MM+1
if Xk==0 then
if Ck<32768 then
set Ck=Ck+1
set mZS=Ck
set Vk[mZS]=1556
else
call Mau("Out of memory: Could not create RectCellIterator.","when calling error in RectCellIterator, line 3")
set mZS=0
endif
else
set Xk=Xk-1
set mZS=Lk[Xk]
set Vk[mZS]=1556
endif
set MM=MM-1
return mZS
endfunction
function KUu takes rect JUu returns real
return GetRectMinX(JUu)
endfunction
function NUu takes rect BUu returns real
return GetRectMaxY(BUu)
endfunction
function VUu takes rect CUu returns real
return GetRectMinY(CUu)
endfunction
function XUu takes rect LUu returns real
return GetRectMaxX(LUu)
endfunction
function Xbt takes integer Lbt returns nothing
endfunction
function dUu takes real aUu returns integer
local integer nUu=qUu(aUu)
if aUu<0. and aUu-nUu!=0. then
set nUu=nUu-1
endif
return nUu
endfunction
function uyt takes integer Mbt,rect wyt returns nothing
call Xbt(Mbt)
set IH[Mbt]=dUu(KUu(wyt)/128.)*128.+64.
set PH[Mbt]=dUu(VUu(wyt)/128.)*128.+64.
set AH[Mbt]=TUu(XUu(wyt)/128.)*128.-64.
set DH[Mbt]=TUu(NUu(wyt)/128.)*128.-64.
set HH[Mbt]=IH[Mbt]
set JH[Mbt]=PH[Mbt]
endfunction
function Nbt takes rect Cbt,string Vbt returns integer
local integer Bbt
set w3[MM]=Vbt
set MM=MM+1
set Bbt=QZS("when calling alloc_RectCellIterator in RectCellIterator, line 11")
call uyt(Bbt,Cbt)
set MM=MM-1
return Bbt
endfunction
function DUu takes rect IUu,string PUu returns integer
local integer AUu
set w3[MM]=PUu
set MM=MM+1
set AUu=Nbt(IUu,"when calling new_RectCellIterator in RectCellIterator, line 41")
set MM=MM-1
return AUu
endfunction
function Mlc takes string Blc returns integer
local integer Nlc
set w3[MM]=Blc
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set Nlc=IY
set PY[Nlc]=1390
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_SubRectTileData_TerrainData.","when calling error in TerrainData, line 76")
set Nlc=0
endif
else
set UY=UY-1
set Nlc=ZY[UY]
set PY[Nlc]=1390
endif
set MM=MM-1
return Nlc
endfunction
function ZZS takes integer WZS,string EZS returns nothing
set w3[MM]=EZS
set MM=MM+1
if Vk[WZS]==0 then
call Mau("Double free: object of type RectCellIterator","when calling error in RectCellIterator, line 3")
else
set Lk[Xk]=WZS
set Xk=Xk+1
set Vk[WZS]=0
endif
set MM=MM-1
endfunction
function syt takes integer ryt returns nothing
endfunction
function Kbt takes integer Hbt,string Jbt returns nothing
set w3[MM]=Jbt
set MM=MM+1
call syt(Hbt)
call ZZS(Hbt,"when calling dealloc_RectCellIterator in RectCellIterator, line 3")
set MM=MM-1
endfunction
function rNc takes integer wNc,string uNc returns nothing
set w3[MM]=uNc
set MM=MM+1
if Vk[wNc]==0 then
if wNc==0 then
call Mau("Nullpointer exception when calling RectCellIterator.RectCellIterator","when calling error in RectCellIterator, line 3")
else
call Mau("Called RectCellIterator.RectCellIterator on invalid object.","when calling error in RectCellIterator, line 3")
endif
endif
call Kbt(wNc,"when calling destroyRectCellIterator in RectCellIterator, line 3")
set MM=MM-1
endfunction
function Dbt takes integer Pbt,string Abt returns nothing
set w3[MM]=Abt
set MM=MM+1
call rNc(Pbt,"when calling dispatch_RectCellIterator_destroyRectCellIterator in RectCellIterator, line 35")
set MM=MM-1
endfunction
function aNc takes integer eNc,string qNc returns nothing
set w3[MM]=qNc
set MM=MM+1
if Vk[eNc]==0 then
if eNc==0 then
call Mau("Nullpointer exception when calling RectCellIterator.close","when calling error in RectCellIterator, line 34")
else
call Mau("Called RectCellIterator.close on invalid object.","when calling error in RectCellIterator, line 34")
endif
endif
call Dbt(eNc,"when calling close in RectCellIterator, line 34")
set MM=MM-1
endfunction
function kEc takes integer hEc,string FEc returns nothing
set w3[MM]=FEc
set MM=MM+1
if eh[hEc]==0 then
if hEc==0 then
call Mau("Nullpointer exception when calling HLIterator.close","when calling error in HashList, line 145")
else
call Mau("Called HLIterator.close on invalid object.","when calling error in HashList, line 145")
endif
endif
call HPs(hEc,"when calling close in HashList, line 145")
set MM=MM-1
endfunction
function kkr takes integer hkr,integer Fkr returns boolean
return mwu(hkr,Fkr)
endfunction
function rbc takes string wbc returns integer
local integer ubc
set w3[MM]=wbc
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set ubc=HY
set JY[ubc]=1354
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_SubRectTileData_TerrainData.","when calling error in TerrainData, line 76")
set ubc=0
endif
else
set DY=DY-1
set ubc=AY[DY]
set JY[ubc]=1354
endif
set MM=MM-1
return ubc
endfunction
function tEu takes real rEu,real sEu returns real
set I1=rEu
set P1=sEu
return I1
endfunction
function yIu takes rect OIu,real lIu,real bIu returns nothing
call MoveRectTo(OIu,lIu,bIu)
endfunction
function m7S takes integer d7S,real f7S,real R7S,string T7S returns nothing
local rect Y7S
local rect G7S
local boolean g7S
local integer h7S
local integer F7S
local integer k7S
local integer j7S
local integer x7S
local integer v7S
set w3[MM]=T7S
set MM=MM+1
set G7S=Rect(0.,0.,PC[d7S],AC[d7S])
call yIu(G7S,kus(f7S,R7S,tEu(UC[d7S],IC[d7S]),P1),x1)
set Y7S=G7S
set g7S=kkr(ZC[d7S],2)
set h7S=DUu(Y7S,"when calling cellIterator in TerrainData, line 73")
set F7S=vZc(DC[d7S],"when calling iterator in TerrainData, line 74")
set k7S=vZc(HC[d7S],"when calling iterator in TerrainData, line 75")
set j7S=Mlc("when calling alloc_LimitedExecuteCondition_executeWhile_SubRectTileData_TerrainData in TerrainData, line 76")
set CC[j7S]=h7S
set v7S=j7S
set x7S=rbc("when calling alloc_LimitedExecuteAction_executeWhile_SubRectTileData_TerrainData in TerrainData, line 76")
set VC[x7S]=h7S
set BC[x7S]=d7S
set NC[x7S]=F7S
set MC[x7S]=g7S
set wV[x7S]=k7S
call rdu(1024,v7S,x7S,"when calling executeWhile in TerrainData, line 76")
call kEc(k7S,"when calling close in TerrainData, line 81")
call kEc(F7S,"when calling close in TerrainData, line 82")
call aNc(h7S,"when calling close in TerrainData, line 83")
call gIu(Y7S)
set MM=MM-1
set Y7S=null
set G7S=null
endfunction
function Wco takes integer xco,real vco,real mco,string Qco returns nothing
set w3[MM]=Qco
set MM=MM+1
if Iv[xco]==0 then
if xco==0 then
call Mau("Nullpointer exception when calling SubRectTileData.paste","when calling error in TerrainData, line 69")
else
call Mau("Called SubRectTileData.paste on invalid object.","when calling error in TerrainData, line 69")
endif
endif
call m7S(xco,vco,mco,"when calling paste in TerrainData, line 69")
set MM=MM-1
endfunction
function c1s takes integer i1s,string S1s returns nothing
set w3[MM]=S1s
set MM=MM+1
if fP[i1s]then
call WAc(i1s,"when calling dispatch_LLIterator_destroyLLIterator in LinkedList, line 470")
endif
set MM=MM-1
endfunction
function r1s takes integer u1s returns integer
set nP[u1s]=qP[nP[u1s]]
return pP[nP[u1s]]
endfunction
function t1s takes integer s1s returns boolean
return qP[nP[s1s]]!=aP[s1s]
endfunction
function h4s takes integer g4s returns integer
return RP[g4s]
endfunction
function PDc takes integer ZDc,string UDc returns integer
local integer IDc
set w3[MM]=UDc
set MM=MM+1
if WF[ZDc]==0 then
if ZDc==0 then
call Mau("Nullpointer exception when calling LinkedList.getDummy","when calling error in LinkedList, line 377")
else
call Mau("Called LinkedList.getDummy on invalid object.","when calling error in LinkedList, line 377")
endif
endif
set IDc=h4s(ZDc)
set MM=MM-1
return IDc
endfunction
function l1s takes integer o1s,string O1s returns nothing
set w3[MM]=O1s
set MM=MM+1
set aP[o1s]=PDc(dP[o1s],"when calling getDummy in LinkedList, line 437")
set nP[o1s]=aP[o1s]
set MM=MM-1
endfunction
function UAc takes integer EAc,string ZAc returns nothing
set w3[MM]=ZAc
set MM=MM+1
if xF[EAc]==0 then
if EAc==0 then
call Mau("Nullpointer exception when calling LLIterator.reset","when calling error in LinkedList, line 436")
else
call Mau("Called LLIterator.reset on invalid object.","when calling error in LinkedList, line 436")
endif
endif
call l1s(EAc,"when calling reset in LinkedList, line 436")
set MM=MM-1
endfunction
function f1s takes integer d1s returns nothing
set fP[d1s]=true
endfunction
function G1s takes integer R1s,integer T1s,string Y1s returns nothing
set w3[MM]=Y1s
set MM=MM+1
call f1s(R1s)
set dP[R1s]=T1s
call UAc(R1s,"when calling reset in LinkedList, line 429")
set MM=MM-1
endfunction
function bvS takes string OvS returns integer
local integer lvS
set w3[MM]=OvS
set MM=MM+1
if kF==0 then
if jF<32768 then
set jF=jF+1
set lvS=jF
set xF[lvS]=1311
else
call Mau("Out of memory: Could not create LLIterator.","when calling error in LinkedList, line 421")
set lvS=0
endif
else
set kF=kF-1
set lvS=FF[kF]
set xF[lvS]=1311
endif
set MM=MM-1
return lvS
endfunction
function e1s takes integer b1s,string y1s returns integer
local integer p1s
set w3[MM]=y1s
set MM=MM+1
set p1s=bvS("when calling alloc_LLIterator in LinkedList, line 427")
call G1s(p1s,b1s,"when calling construct_LLIterator in LinkedList, line 427")
set MM=MM-1
return p1s
endfunction
function x1s takes integer F1s,string k1s returns integer
local integer j1s
set w3[MM]=k1s
set MM=MM+1
set j1s=e1s(F1s,"when calling new_LLIterator in LinkedList, line 180")
set MM=MM-1
return j1s
endfunction
function f0S takes integer y0S,real p0S,real e0S,integer q0S,string a0S returns nothing
local integer n0S
local integer d0S
set w3[MM]=a0S
set MM=MM+1
set n0S=x1s(SV[y0S],"when calling iterator in TerrainData, line 182")
loop
exitwhen not t1s(n0S)
set d0S=r1s(n0S)
call Wco(d0S,p0S,e0S,"when calling paste in TerrainData, line 183")
endloop
call c1s(n0S,"when calling close in TerrainData, line 182")
if q0S!=0 then
call VGo(1,q0S,"when calling onPasted in TerrainData, line 185")
call loo(q0S,"when calling dispatch_TerrainDataPasteCallback_destroyTerrainDataPasteCallback in TerrainData, line 186")
endif
set MM=MM-1
endfunction
function koo takes integer Yoo,real Goo,real goo,integer hoo,string Foo returns nothing
set w3[MM]=Foo
set MM=MM+1
if Qg[Yoo]==0 then
if Yoo==0 then
call Mau("Nullpointer exception when calling TileData.paste","when calling error in TerrainData, line 181")
else
call Mau("Called TileData.paste on invalid object.","when calling error in TerrainData, line 181")
endif
endif
call f0S(Yoo,Goo,goo,hoo,"when calling paste in TerrainData, line 181")
set MM=MM-1
endfunction
function k9S takes integer a9S,real n9S,real d9S,integer f9S,string R9S returns nothing
local integer T9S
local integer Y9S
local real G9S
local real g9S
local real h9S
local real F9S
set w3[MM]=R9S
set MM=MM+1
set Y9S=rV[a9S]
set h9S=n9S
set F9S=d9S
set G9S=h9S
set g9S=F9S
set T9S=ebc("when calling alloc_TerrainDataPasteCallback_paste_TerrainData_TerrainData in TerrainData, line 228")
set sV[T9S]=f9S
call koo(Y9S,G9S,g9S,T9S,"when calling paste in TerrainData, line 228")
set MM=MM-1
endfunction
function coo takes integer roo,real soo,real too,integer ioo,string Soo returns nothing
set w3[MM]=Soo
set MM=MM+1
if Qg[roo]==0 then
if roo==0 then
call Mau("Nullpointer exception when calling TerrainData.paste","when calling error in TerrainData, line 227")
else
call Mau("Called TerrainData.paste on invalid object.","when calling error in TerrainData, line 227")
endif
endif
call k9S(roo,soo,too,ioo,"when calling paste in TerrainData, line 227")
set MM=MM-1
endfunction
function rUS takes string wUS returns integer
local integer uUS
set w3[MM]=wUS
set MM=MM+1
if Sj==0 then
if cj<32768 then
set cj=cj+1
set uUS=cj
set oj[uUS]=1661
else
call Mau("Out of memory: Could not create TerrainDataPasteCallback_paste_RegionData_RegionData.","when calling error in RegionData, line 115")
set uUS=0
endif
else
set Sj=Sj-1
set uUS=ij[Sj]
set oj[uUS]=1661
endif
set MM=MM-1
return uUS
endfunction
function met takes integer Yet,integer Get,string get returns nothing
local integer het
local integer Fet
local real ket
local real jet
local real xet
local real vet
set w3[MM]=get
set MM=MM+1
set Fet=bJ[Yet]
set xet=SJ[Yet]
set vet=cJ[Yet]
set ket=xet
set jet=vet
set het=rUS("when calling alloc_TerrainDataPasteCallback_paste_RegionData_RegionData in RegionData, line 115")
set eJ[het]=Yet
set qJ[het]=Get
call coo(Fet,ket,jet,het,"when calling paste in RegionData, line 115")
set MM=MM-1
endfunction
function w3c takes integer BMc,integer NMc,string MMc returns nothing
set w3[MM]=MMc
set MM=MM+1
if Qg[BMc]==0 then
if BMc==0 then
call Mau("Nullpointer exception when calling RegionData.paste","when calling error in RegionData, line 114")
else
call Mau("Called RegionData.paste on invalid object.","when calling error in RegionData, line 114")
endif
endif
call met(BMc,NMc,"when calling paste in RegionData, line 114")
set MM=MM-1
endfunction
function nLi takes integer bLi,integer yLi,string pLi returns nothing
local integer eLi
local integer qLi
local integer aLi
set w3[MM]=pLi
set MM=MM+1
if yLi==0 then
call KMc(qX[bLi],aX[bLi],nX[bLi],"when calling setOrigin in SotfrpGuiRegions, line 165")
call FZu("Чтение файла и синхронизация данных завершены! Загрузка...",30.,pa[dX[bLi]])
set aLi=qX[bLi]
set eLi=Lcc("when calling alloc_RegionDataPasteCallback_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 167")
set fX[eLi]=dX[bLi]
set RX[eLi]=qX[bLi]
call w3c(aLi,eLi,"when calling paste in SotfrpGuiRegions, line 167")
else
if yLi==1 then
call FZu("Не удалось прочитать файл. Возможно, файл отсутствует или поврежден, или к нему не удалось получить доступ.",30.,pa[dX[bLi]])
else
call FZu("Во время загрузки произошла внутренняя ошибка. Пожалуйста, сообщите об этом разработчикам, приложив как можно больше информации о том, в каких обстоятельствах это произошло.",30.,pa[dX[bLi]])
endif
set qLi=Mcc("when calling alloc_CallbackSingle_nullTimer_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 176")
call KGs(qLi)
set YX[qLi]=qX[bLi]
call Cou(qLi,"when calling nullTimer in SotfrpGuiRegions, line 176")
endif
set MM=MM-1
endfunction
function Cxu takes string Lxu,string Xxu returns string
return Lxu+" (|cFFFFCC00"+Xxu+"|r)"
endfunction
function VOt takes integer XOt,integer COt returns integer
return la[vH[XOt]+COt]
endfunction
function OBc takes integer iBc,integer SBc,string cBc returns integer
local integer oBc
set w3[MM]=cBc
set MM=MM+1
if Qg[iBc]==0 then
if iBc==0 then
call Mau("Nullpointer exception when calling PlayerDefinedUnitTypes.getSlot","when calling error in PlayerDefinedUnitTypes, line 26")
else
call Mau("Called PlayerDefinedUnitTypes.getSlot on invalid object.","when calling error in PlayerDefinedUnitTypes, line 26")
endif
endif
set oBc=VOt(iBc,SBc)
set MM=MM-1
return oBc
endfunction
function Kgs takes integer Jgs returns integer
return CW[Jgs]
endfunction
function ghc takes integer Thc,string Yhc returns integer
local integer Ghc
set w3[MM]=Yhc
set MM=MM+1
if Qg[Thc]==0 then
if Thc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.getBaseTypeId","when calling error in CustomUnitTypes, line 115")
else
call Mau("Called CustomUnitType.getBaseTypeId on invalid object.","when calling error in CustomUnitTypes, line 115")
endif
endif
set Ghc=Kgs(Thc)
set MM=MM-1
return Ghc
endfunction
function Slt takes integer rlt,integer slt,string tlt returns integer
local integer ilt
set w3[MM]=tlt
set MM=MM+1
set ilt=ghc(OBc(rlt,slt,"when calling getSlot in PlayerDefinedUnitTypes, line 46"),"when calling getBaseTypeId in PlayerDefinedUnitTypes, line 46")
set MM=MM-1
return ilt
endfunction
function fBc takes integer qBc,integer aBc,string nBc returns integer
local integer dBc
set w3[MM]=nBc
set MM=MM+1
if Qg[qBc]==0 then
if qBc==0 then
call Mau("Nullpointer exception when calling PlayerDefinedUnitTypes.getBaseTypeId","when calling error in PlayerDefinedUnitTypes, line 45")
else
call Mau("Called PlayerDefinedUnitTypes.getBaseTypeId on invalid object.","when calling error in PlayerDefinedUnitTypes, line 45")
endif
endif
set dBc=Slt(qBc,aBc,"when calling getBaseTypeId in PlayerDefinedUnitTypes, line 45")
set MM=MM-1
return dBc
endfunction
function hJr takes integer GJr,integer gJr returns string
return xT[gJr*4+GJr]
endfunction
function aKr takes integer iKr,integer SKr,boolean cKr,string oKr returns nothing
local string OKr
local string lKr
local integer bKr
local integer yKr
local integer pKr
local player eKr
local integer qKr
set w3[MM]=oKr
set MM=MM+1
if ea==pa[iKr]then
set yKr=AT[SKr]
if cKr then
set OKr=We
else
set OKr=ZT
endif
call BlzSetAbilityIcon(yKr,OKr)
set pKr=AT[SKr]
if cKr then
set lKr=GetObjectName(fBc(Sa[iKr],SKr,"when calling getBaseTypeId in UnitShops, line 139"))
else
set lKr=UT
endif
call BlzSetAbilityTooltip(pKr,Cxu(lKr,hJr(DT[SKr],HT[SKr])),1)
endif
set eKr=pa[iKr]
set qKr=JT[SKr]
if cKr then
set bKr=1
else
set bKr=0
endif
call SetPlayerTechResearched(eKr,qKr,bKr)
set MM=MM-1
set eKr=null
endfunction
function ElS takes integer klS,integer jlS,integer xlS,string vlS returns nothing
local integer mlS
local integer QlS
local integer WlS
set w3[MM]=vlS
set MM=MM+1
set mlS=xlS
if mlS==0 then
set QlS=0
set WlS=Oa-1
loop
exitwhen QlS>WlS
if fBc(Sa[jlS],QlS,"when calling getBaseTypeId in UnitShops, line 159")!=0 then
call aKr(jlS,QlS,true,"when calling makeSlotAvailable in UnitShops, line 160")
endif
set QlS=QlS+1
endloop
call FZu("Пользовательские типы юнитов загружены.",30.,pa[jlS])
elseif mlS==1 then
call FZu("FAIL_READ",30.,pa[jlS])
elseif mlS==2 then
call FZu("FAIL_DESERIALIZE: "+se,30.,pa[jlS])
else
call FZu("FAIL_NO_PLAYER",30.,pa[jlS])
endif
set MM=MM-1
endfunction
function jBc takes integer gBc,integer hBc,integer FBc,string kBc returns nothing
set w3[MM]=kBc
set MM=MM+1
if Kk[gBc]==0 then
if gBc==0 then
call Mau("Nullpointer exception when calling PlayerDefinedUnitTypesLoadCallback.onLoaded","when calling error in PlayerDefinedUnitTypes, line 75")
else
call Mau("Called PlayerDefinedUnitTypesLoadCallback.onLoaded on invalid object.","when calling error in PlayerDefinedUnitTypes, line 75")
endif
endif
call ElS(gBc,hBc,FBc,"when calling onLoaded_registerPlayerDefinedUnitTypesLoadCallback_UnitShops in PlayerDefinedUnitTypes, line 75")
set MM=MM-1
endfunction
function JQu takes integer IQu,integer PQu,string AQu returns nothing
local integer DQu
local integer HQu
set w3[MM]=AQu
set MM=MM+1
set DQu=0
set HQu=ca-1
loop
exitwhen DQu>HQu
call jBc(oa[DQu],IQu,PQu,"when calling onLoaded in PlayerDefinedUnitTypes, line 86")
set DQu=DQu+1
endloop
set MM=MM-1
endfunction
function vOt takes integer kOt,integer jOt,string xOt returns nothing
set w3[MM]=xOt
set MM=MM+1
call JQu(xH[kOt],jOt,"when calling invokeCallbacks in PlayerDefinedUnitTypes, line 91")
set MM=MM-1
endfunction
function TVc takes integer dVc,integer fVc,string RVc returns nothing
set w3[MM]=RVc
set MM=MM+1
if Qk[dVc]==0 then
if dVc==0 then
call Mau("Nullpointer exception when calling PersistableLoadCallback.onLoaded","when calling error in PersistableData, line 45")
else
call Mau("Called PersistableLoadCallback.onLoaded on invalid object.","when calling error in PersistableData, line 45")
endif
endif
if Qk[dVc]<=1482 then
if Qk[dVc]<=1481 then
call vOt(dVc,fVc,"when calling onLoaded_load_doAfter_PlayerDefinedUnitTypes in PersistableData, line 45")
else
call nLi(dVc,fVc,"when calling onLoaded_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in PersistableData, line 45")
endif
else
call MLi(dVc,fVc,"when calling onLoaded_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in PersistableData, line 45")
endif
set MM=MM-1
endfunction
function FES takes integer gES,string hES returns nothing
set w3[MM]=hES
set MM=MM+1
if Qk[gES]==0 then
call Mau("Double free: object of type PersistableLoadCallback","when calling error in PersistableData, line 44")
else
set xk[vk]=gES
set vk=vk+1
set Qk[gES]=0
endif
set MM=MM-1
endfunction
function Act takes integer Ict,string Pct returns nothing
set w3[MM]=Pct
set MM=MM+1
call FES(Ict,"when calling dealloc_PersistableLoadCallback in PersistableData, line 44")
set MM=MM-1
endfunction
function nVc takes integer qVc,string aVc returns nothing
set w3[MM]=aVc
set MM=MM+1
if Qk[qVc]==0 then
if qVc==0 then
call Mau("Nullpointer exception when calling PersistableLoadCallback.PersistableLoadCallback","when calling error in PersistableData, line 44")
else
call Mau("Called PersistableLoadCallback.PersistableLoadCallback on invalid object.","when calling error in PersistableData, line 44")
endif
endif
call Act(qVc,"when calling destroyPersistableLoadCallback in PersistableData, line 44")
set MM=MM-1
endfunction
function jSt takes integer FSt,integer kSt returns nothing
endfunction
function xCc takes integer FCc,integer kCc,string jCc returns nothing
set w3[MM]=jCc
set MM=MM+1
if Qg[FCc]==0 then
if FCc==0 then
call Mau("Nullpointer exception when calling Persistable.onLoaded","when calling error in PersistableData, line 66")
else
call Mau("Called Persistable.onLoaded on invalid object.","when calling error in PersistableData, line 66")
endif
endif
call jSt(FCc,kCc)
set MM=MM-1
endfunction
function oct takes integer tct,integer ict,integer Sct,string cct returns nothing
set w3[MM]=cct
set MM=MM+1
call xCc(tct,ict,"when calling onLoaded in PersistableData, line 122")
if Sct!=0 then
call TVc(Sct,ict,"when calling onLoaded in PersistableData, line 124")
call nVc(Sct,"when calling dispatch_PersistableLoadCallback_destroyPersistableLoadCallback in PersistableData, line 125")
endif
set MM=MM-1
endfunction
function MCc takes integer CCc,integer VCc,integer BCc,string NCc returns nothing
set w3[MM]=NCc
set MM=MM+1
if Qg[CCc]==0 then
if CCc==0 then
call Mau("Nullpointer exception when calling Persistable.finishLoad","when calling error in PersistableData, line 121")
else
call Mau("Called Persistable.finishLoad on invalid object.","when calling error in PersistableData, line 121")
endif
endif
call oct(CCc,VCc,BCc,"when calling finishLoad in PersistableData, line 121")
set MM=MM-1
endfunction
function HIs takes integer PIs,integer AIs,string DIs returns nothing
set w3[MM]=DIs
set MM=MM+1
call sSo(eU[PIs],qU[PIs],AIs,"when calling saveInt in HashData, line 27")
set qU[PIs]=qU[PIs]+1
set MM=MM-1
endfunction
function XWc takes integer JWc,integer KWc,string LWc returns nothing
set w3[MM]=LWc
set MM=MM+1
if vY[JWc]==0 then
if JWc==0 then
call Mau("Nullpointer exception when calling HashWriter.writeInt","when calling error in HashData, line 26")
else
call Mau("Called HashWriter.writeInt on invalid object.","when calling error in HashData, line 26")
endif
endif
call HIs(JWc,KWc,"when calling writeInt in HashData, line 26")
set MM=MM-1
endfunction
function gru takes integer Yru,integer Gru returns integer
return Yru*xy[Gru]
endfunction
function Nru takes integer Vru,integer Bru returns integer
return gru(Vru,Bru)
endfunction
function wru takes integer Luu returns integer
local integer Xuu=Luu
local integer Cuu=0
local integer Vuu
local integer Buu
local integer Nuu
local integer Muu
if Xuu<0 then
set Xuu=-2147483648+Xuu
set Cuu=1
endif
set Vuu=ModuloInteger(Xuu,256)
set Buu=(Xuu-Xuu/65536*65536)/256
set Nuu=(Xuu-Xuu/16777216*16777216)/65536
set Muu=Cuu*128+Xuu/16777216
set e3=Vuu
set q3=Buu
set a3=Nuu
set n3=Muu
return e3
endfunction
function Uns takes integer vns,string mns returns nothing
local integer Qns
local integer Wns
local integer Ens
local integer Zns
set w3[MM]=mns
set MM=MM+1
set hW[vns]=hW[vns]+1
set Qns=wru(Nio(pW[vns],hW[vns],"when calling loadInt in ByteBuffer, line 41"))
set Wns=q3
set Ens=a3
set Zns=n3
set fW[vns]=Qns
set RW[vns]=Wns
set TW[vns]=Ens
set YW[vns]=Zns
set GW[vns]=0
set MM=MM-1
endfunction
function TYc takes integer fYc,string RYc returns nothing
set w3[MM]=RYc
set MM=MM+1
if VG[fYc]==0 then
if fYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.loadInt","when calling error in ByteBuffer, line 39")
else
call Mau("Called ByteBuffer.loadInt on invalid object.","when calling error in ByteBuffer, line 39")
endif
endif
call Uns(fYc,"when calling loadInt in ByteBuffer, line 39")
set MM=MM-1
endfunction
function tuu takes integer Nwu,integer Mwu,integer wuu,integer uuu,integer ruu returns integer
local integer suu
if ruu>1 then
if ruu==3 then
set suu=uuu
else
set suu=wuu
endif
elseif ruu==1 then
set suu=Mwu
else
set suu=Nwu
endif
return suu
endfunction
function Bns takes integer Xns,string Cns returns integer
local integer Vns
set w3[MM]=Cns
set MM=MM+1
if GW[Xns]>3 then
call TYc(Xns,"when calling loadInt in ByteBuffer, line 52")
endif
set Vns=tuu(fW[Xns],RW[Xns],TW[Xns],YW[Xns],GW[Xns])
set GW[Xns]=GW[Xns]+1
set MM=MM-1
return Vns
endfunction
function xYc takes integer FYc,string kYc returns integer
local integer jYc
set w3[MM]=kYc
set MM=MM+1
if VG[FYc]==0 then
if FYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.readByteInternal","when calling error in ByteBuffer, line 50")
else
call Mau("Called ByteBuffer.readByteInternal on invalid object.","when calling error in ByteBuffer, line 50")
endif
endif
set jYc=Bns(FYc,"when calling readByteInternal in ByteBuffer, line 50")
set MM=MM-1
return jYc
endfunction
function xds takes integer Fds,string kds returns integer
local integer jds
set w3[MM]=kds
set MM=MM+1
set jds=xYc(Fds,"when calling readByteInternal in ByteBuffer, line 84")+Nru(xYc(Fds,"when calling readByteInternal in ByteBuffer, line 84"),8)+Nru(xYc(Fds,"when calling readByteInternal in ByteBuffer, line 84"),16)+Nru(xYc(Fds,"when calling readByteInternal in ByteBuffer, line 84"),24)
set MM=MM-1
return jds
endfunction
function rGc takes integer MYc,string wGc returns integer
local integer uGc
set w3[MM]=wGc
set MM=MM+1
if VG[MYc]==0 then
if MYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.readInt","when calling error in ByteBuffer, line 83")
else
call Mau("Called ByteBuffer.readInt on invalid object.","when calling error in ByteBuffer, line 83")
endif
endif
set uGc=xds(MYc,"when calling readInt in ByteBuffer, line 83")
set MM=MM-1
return uGc
endfunction
function oos takes integer ios,string Sos returns integer
local integer cos
set w3[MM]=Sos
set MM=MM+1
set cos=rGc(nQ[ios],"when calling readInt in Base64Data, line 94")
set MM=MM-1
return cos
endfunction
function ego takes integer Ogo,integer lgo,string bgo returns nothing
local integer ygo
local integer pgo
if Ogo==0 then
set w3[MM]=bgo
set MM=MM+1
if FY[lgo]==0 then
if lgo==0 then
call Mau("Nullpointer exception when calling DataReader.readInt","when calling error in DataInterfaces, line 90")
else
call Mau("Called DataReader.readInt on invalid object.","when calling error in DataInterfaces, line 90")
endif
endif
if FY[lgo]<=712 then
if FY[lgo]<=711 then
set ygo=oos(lgo,"when calling readInt in DataInterfaces, line 90")
else
call ego(1,lgo,"when calling readInt in DataInterfaces, line 90")
set ygo=inw
endif
else
set ygo=ZZs(lgo,"when calling readInt in DataInterfaces, line 90")
endif
set MM=MM-1
set inw=ygo
return
elseif Ogo==1 then
set w3[MM]=bgo
set MM=MM+1
call ego(0,tU[lgo],"when calling readInt in HashData, line 250")
set pgo=inw
call XWc(sU[lgo],pgo,"when calling writeInt in HashData, line 251")
set MM=MM-1
set inw=pgo
return
endif
endfunction
function a6S takes integer e6S,integer q6S returns boolean
return LTu(VR,e6S,q6S)
endfunction
function dSo takes integer eSo,integer qSo,string aSo returns boolean
local boolean nSo
set w3[MM]=aSo
set MM=MM+1
if Yh[eSo]==0 then
if eSo==0 then
call Mau("Nullpointer exception when calling Table.loadBoolean","when calling error in Table, line 51")
else
call Mau("Called Table.loadBoolean on invalid object.","when calling error in Table, line 51")
endif
endif
set nSo=a6S(eSo,qSo)
set MM=MM-1
return nSo
endfunction
function PUs takes integer ZUs,string UUs returns boolean
local boolean IUs
set w3[MM]=UUs
set MM=MM+1
set IUs=dSo(iU[ZUs],OU[ZUs],"when calling loadBoolean in HashData, line 181")
set OU[ZUs]=OU[ZUs]+1
set MM=MM-1
return IUs
endfunction
function CQc takes integer KQc,string LQc returns boolean
local boolean XQc
set w3[MM]=LQc
set MM=MM+1
if FY[KQc]==0 then
if KQc==0 then
call Mau("Nullpointer exception when calling HashReader.readBooleanUnchecked","when calling error in HashData, line 180")
else
call Mau("Called HashReader.readBooleanUnchecked on invalid object.","when calling error in HashData, line 180")
endif
endif
set XQc=PUs(KQc,"when calling readBooleanUnchecked in HashData, line 180")
set MM=MM-1
return XQc
endfunction
function KZs takes integer DZs,string HZs returns boolean
local boolean JZs
set w3[MM]=HZs
set MM=MM+1
call vQc(DZs,3,"when calling validateType in HashData, line 176")
set JZs=CQc(DZs,"when calling readBooleanUnchecked in HashData, line 177")
set MM=MM-1
return JZs
endfunction
function Tds takes integer dds,string fds returns integer
local integer Rds
set w3[MM]=fds
set MM=MM+1
set Rds=xYc(dds,"when calling readByteInternal in ByteBuffer, line 76")
set MM=MM-1
return Rds
endfunction
function XYc takes integer JYc,string KYc returns integer
local integer LYc
set w3[MM]=KYc
set MM=MM+1
if VG[JYc]==0 then
if JYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.readByte","when calling error in ByteBuffer, line 75")
else
call Mau("Called ByteBuffer.readByte on invalid object.","when calling error in ByteBuffer, line 75")
endif
endif
set LYc=Tds(JYc,"when calling readByte in ByteBuffer, line 75")
set MM=MM-1
return LYc
endfunction
function ysu takes integer bsu returns boolean
return bsu!=0
endfunction
function dos takes integer qos,string aos returns boolean
local boolean nos
set w3[MM]=aos
set MM=MM+1
set nos=ysu(XYc(nQ[qos],"when calling readByte in Base64Data, line 105"))
set MM=MM-1
return nos
endfunction
function R6S takes integer n6S,integer d6S,boolean f6S returns nothing
call JYu(VR,n6S,d6S,f6S)
endfunction
function GSo takes integer fSo,integer RSo,boolean TSo,string YSo returns nothing
set w3[MM]=YSo
set MM=MM+1
if Yh[fSo]==0 then
if fSo==0 then
call Mau("Nullpointer exception when calling Table.saveBoolean","when calling error in Table, line 54")
else
call Mau("Called Table.saveBoolean on invalid object.","when calling error in Table, line 54")
endif
endif
call R6S(fSo,RSo,TSo)
set MM=MM-1
endfunction
function NIs takes integer CIs,boolean VIs,string BIs returns nothing
set w3[MM]=BIs
set MM=MM+1
call GSo(eU[CIs],dU[CIs],VIs,"when calling saveBoolean in HashData, line 35")
set dU[CIs]=dU[CIs]+1
set MM=MM-1
endfunction
function rEc takes integer MWc,boolean wEc,string uEc returns nothing
set w3[MM]=uEc
set MM=MM+1
if vY[MWc]==0 then
if MWc==0 then
call Mau("Nullpointer exception when calling HashWriter.writeBoolean","when calling error in HashData, line 34")
else
call Mau("Called HashWriter.writeBoolean on invalid object.","when calling error in HashData, line 34")
endif
endif
call NIs(MWc,wEc,"when calling writeBoolean in HashData, line 34")
set MM=MM-1
endfunction
function ogo takes integer sgo,integer tgo,string igo returns nothing
local boolean Sgo
local boolean cgo
if sgo==0 then
set w3[MM]=igo
set MM=MM+1
call ogo(1,tU[tgo],"when calling readBoolean in HashData, line 262")
set Sgo=tnw
call rEc(sU[tgo],Sgo,"when calling writeBoolean in HashData, line 263")
set MM=MM-1
set tnw=Sgo
return
elseif sgo==1 then
set w3[MM]=igo
set MM=MM+1
if FY[tgo]==0 then
if tgo==0 then
call Mau("Nullpointer exception when calling DataReader.readBoolean","when calling error in DataInterfaces, line 96")
else
call Mau("Called DataReader.readBoolean on invalid object.","when calling error in DataInterfaces, line 96")
endif
endif
if FY[tgo]<=712 then
if FY[tgo]<=711 then
set cgo=dos(tgo,"when calling readBoolean in DataInterfaces, line 96")
else
call ogo(0,tgo,"when calling readBoolean in DataInterfaces, line 96")
set cgo=tnw
endif
else
set cgo=KZs(tgo,"when calling readBoolean in DataInterfaces, line 96")
endif
set MM=MM-1
set tnw=cgo
return
endif
endfunction
function Dyu takes integer Eyu,string Zyu returns boolean
local boolean Uyu
local integer Iyu
local boolean Pyu
local integer Ayu
set w3[MM]=Zyu
set MM=MM+1
call ogo(1,Eyu,"when calling readBoolean in CustomUnitTypes, line 25")
set Pyu=tnw
set Ayu=0
set Uyu=Pyu
set Iyu=Ayu
if not Uyu then
call ego(0,Eyu,"when calling readInt in CustomUnitTypes, line 27")
set Iyu=inw
endif
set MM=MM-1
set D3=Uyu
set H3=Iyu
return D3
endfunction
function nYu takes hashtable eYu,integer qYu,integer aYu returns real
return LoadReal(eYu,qYu,aYu)
endfunction
function O6S takes integer c6S,integer o6S returns real
return nYu(VR,c6S,o6S)
endfunction
function oSo takes integer tSo,integer iSo,string SSo returns real
local real cSo
set w3[MM]=SSo
set MM=MM+1
if Yh[tSo]==0 then
if tSo==0 then
call Mau("Nullpointer exception when calling Table.loadReal","when calling error in Table, line 45")
else
call Mau("Called Table.loadReal on invalid object.","when calling error in Table, line 45")
endif
endif
set cSo=O6S(tSo,iSo)
set MM=MM-1
return cSo
endfunction
function EUs takes integer mUs,string QUs returns real
local real WUs
set w3[MM]=QUs
set MM=MM+1
set WUs=oSo(iU[mUs],cU[mUs],"when calling loadReal in HashData, line 171")
set cU[mUs]=cU[mUs]+1
set MM=MM-1
return WUs
endfunction
function JQc takes integer AQc,string DQc returns real
local real HQc
set w3[MM]=DQc
set MM=MM+1
if FY[AQc]==0 then
if AQc==0 then
call Mau("Nullpointer exception when calling HashReader.readRealUnchecked","when calling error in HashData, line 170")
else
call Mau("Called HashReader.readRealUnchecked on invalid object.","when calling error in HashData, line 170")
endif
endif
set HQc=EUs(AQc,"when calling readRealUnchecked in HashData, line 170")
set MM=MM-1
return HQc
endfunction
function AZs takes integer UZs,string IZs returns real
local real PZs
set w3[MM]=IZs
set MM=MM+1
call vQc(UZs,1,"when calling validateType in HashData, line 166")
set PZs=JQc(UZs,"when calling readRealUnchecked in HashData, line 167")
set MM=MM-1
return PZs
endfunction
function p6S takes integer l6S,integer b6S,real y6S returns nothing
call aGu(VR,l6S,b6S,y6S)
endfunction
function pSo takes integer OSo,integer lSo,real bSo,string ySo returns nothing
set w3[MM]=ySo
set MM=MM+1
if Yh[OSo]==0 then
if OSo==0 then
call Mau("Nullpointer exception when calling Table.saveReal","when calling error in Table, line 48")
else
call Mau("Called Table.saveReal on invalid object.","when calling error in Table, line 48")
endif
endif
call p6S(OSo,lSo,bSo)
set MM=MM-1
endfunction
function XIs takes integer JIs,real KIs,string LIs returns nothing
set w3[MM]=LIs
set MM=MM+1
call pSo(eU[JIs],aU[JIs],KIs,"when calling saveReal in HashData, line 31")
set aU[JIs]=aU[JIs]+1
set MM=MM-1
endfunction
function NWc takes integer CWc,real VWc,string BWc returns nothing
set w3[MM]=BWc
set MM=MM+1
if vY[CWc]==0 then
if CWc==0 then
call Mau("Nullpointer exception when calling HashWriter.writeReal","when calling error in HashData, line 30")
else
call Mau("Called HashWriter.writeReal on invalid object.","when calling error in HashData, line 30")
endif
endif
call XIs(CWc,VWc,"when calling writeReal in HashData, line 30")
set MM=MM-1
endfunction
function hds takes integer Yds,string Gds returns integer
local integer gds
set w3[MM]=Gds
set MM=MM+1
set gds=xYc(Yds,"when calling readByteInternal in ByteBuffer, line 80")+Nru(xYc(Yds,"when calling readByteInternal in ByteBuffer, line 80"),8)
set MM=MM-1
return gds
endfunction
function NYc takes integer CYc,string VYc returns integer
local integer BYc
set w3[MM]=VYc
set MM=MM+1
if VG[CYc]==0 then
if CYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.readShort","when calling error in ByteBuffer, line 79")
else
call Mau("Called ByteBuffer.readShort on invalid object.","when calling error in ByteBuffer, line 79")
endif
endif
set BYc=hds(CYc,"when calling readShort in ByteBuffer, line 79")
set MM=MM-1
return BYc
endfunction
function rgu takes integer ugu returns real
return ugu*1.
endfunction
function eos takes integer Oos,string los returns real
local integer bos
local integer yos
local real pos
set w3[MM]=los
set MM=MM+1
set bos=rGc(nQ[Oos],"when calling readInt in Base64Data, line 97")
set yos=NYc(nQ[Oos],"when calling readShort in Base64Data, line 98")
set pos=0.
if yos>0 then
set pos=1./rgu(yos)
endif
set MM=MM-1
return bos+pos
endfunction
function rgo takes integer BGo,integer NGo,string MGo returns nothing
local real wgo
local real ugo
if BGo==0 then
set w3[MM]=MGo
set MM=MM+1
call rgo(1,tU[NGo],"when calling readReal in HashData, line 256")
set wgo=snw
call NWc(sU[NGo],wgo,"when calling writeReal in HashData, line 257")
set MM=MM-1
set snw=wgo
return
elseif BGo==1 then
set w3[MM]=MGo
set MM=MM+1
if FY[NGo]==0 then
if NGo==0 then
call Mau("Nullpointer exception when calling DataReader.readReal","when calling error in DataInterfaces, line 93")
else
call Mau("Called DataReader.readReal on invalid object.","when calling error in DataInterfaces, line 93")
endif
endif
if FY[NGo]<=712 then
if FY[NGo]<=711 then
set ugo=eos(NGo,"when calling readReal in DataInterfaces, line 93")
else
call rgo(0,NGo,"when calling readReal in DataInterfaces, line 93")
set ugo=snw
endif
else
set ugo=AZs(NGo,"when calling readReal in DataInterfaces, line 93")
endif
set MM=MM-1
set snw=ugo
return
endif
endfunction
function upu takes integer Cyu,string Vyu returns boolean
local boolean Byu
local real Nyu
local boolean Myu
local real wpu
set w3[MM]=Vyu
set MM=MM+1
call ogo(1,Cyu,"when calling readBoolean in CustomUnitTypes, line 40")
set Myu=tnw
set wpu=0.
set Byu=Myu
set Nyu=wpu
if not Byu then
call rgo(1,Cyu,"when calling readReal in CustomUnitTypes, line 42")
set Nyu=snw
endif
set MM=MM-1
set J3=Byu
set K3=Nyu
return J3
endfunction
function mpu takes integer ppu,string epu returns boolean
local boolean qpu
local integer apu
local boolean npu
local real dpu
local boolean fpu
local integer Rpu
local boolean Tpu
local integer Ypu
local boolean Gpu
local integer gpu
local boolean hpu
local real Fpu
local boolean kpu
local integer jpu
local boolean xpu
local integer vpu
set w3[MM]=epu
set MM=MM+1
set Gpu=Dyu(ppu,"when calling readOptInt in CustomUnitTypes, line 67")
set gpu=H3
set hpu=upu(ppu,"when calling readOptReal in CustomUnitTypes, line 67")
set Fpu=K3
set kpu=Dyu(ppu,"when calling readOptInt in CustomUnitTypes, line 67")
set jpu=H3
set xpu=Dyu(ppu,"when calling readOptInt in CustomUnitTypes, line 67")
set vpu=H3
set qpu=Gpu
set apu=gpu
set npu=hpu
set dpu=Fpu
set fpu=kpu
set Rpu=jpu
set Tpu=xpu
set Ypu=vpu
set MM=MM-1
set L3=qpu
set X3=apu
set C3=npu
set V3=dpu
set B3=fpu
set N3=Rpu
set M3=Tpu
set w1=Ypu
return L3
endfunction
function fgs takes integer wgs,integer ugs,string rgs returns nothing
local boolean sgs
local integer tgs
local boolean igs
local real Sgs
local boolean cgs
local integer ogs
local boolean Ogs
local integer lgs
local boolean bgs
local integer ygs
local boolean pgs
local real egs
local boolean qgs
local integer ags
local boolean ngs
local integer dgs
set w3[MM]=rgs
set MM=MM+1
call ego(0,ugs,"when calling readInt in CustomUnitTypes, line 198")
set CW[wgs]=inw
set sgs=mpu(ugs,"when calling readAttackData in CustomUnitTypes, line 199")
set tgs=X3
set igs=C3
set Sgs=V3
set cgs=B3
set ogs=N3
set Ogs=M3
set lgs=w1
set VW[wgs]=sgs
set BW[wgs]=tgs
set NW[wgs]=igs
set MW[wgs]=Sgs
set wE[wgs]=cgs
set uE[wgs]=ogs
set rE[wgs]=Ogs
set sE[wgs]=lgs
set bgs=mpu(ugs,"when calling readAttackData in CustomUnitTypes, line 200")
set ygs=X3
set pgs=C3
set egs=V3
set qgs=B3
set ags=N3
set ngs=M3
set dgs=w1
set tE[wgs]=bgs
set iE[wgs]=ygs
set SE[wgs]=pgs
set cE[wgs]=egs
set oE[wgs]=qgs
set OE[wgs]=ags
set lE[wgs]=ngs
set bE[wgs]=dgs
set MM=MM-1
endfunction
function Bhc takes integer Xhc,integer Chc,string Vhc returns nothing
set w3[MM]=Vhc
set MM=MM+1
if Qg[Xhc]==0 then
if Xhc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.deserialize","when calling error in CustomUnitTypes, line 197")
else
call Mau("Called CustomUnitType.deserialize on invalid object.","when calling error in CustomUnitTypes, line 197")
endif
endif
call fgs(Xhc,Chc,"when calling deserialize in CustomUnitTypes, line 197")
set MM=MM-1
endfunction
function JOt takes integer IOt,integer POt,string AOt returns nothing
local integer DOt
local integer HOt
set w3[MM]=AOt
set MM=MM+1
set DOt=0
call ego(0,POt,"when calling readInt in PlayerDefinedUnitTypes, line 35")
set HOt=vdo(inw,Oa)-1
loop
exitwhen DOt>HOt
call Bhc(OBc(IOt,DOt,"when calling getSlot in PlayerDefinedUnitTypes, line 36"),POt,"when calling deserialize in PlayerDefinedUnitTypes, line 36")
set DOt=DOt+1
endloop
set MM=MM-1
endfunction
function IIs takes integer EIs,integer ZIs,string UIs returns nothing
set w3[MM]=UIs
set MM=MM+1
call XWc(EIs,ZIs,"when calling writeInt in HashData, line 24")
set MM=MM-1
endfunction
function HWc takes integer PWc,integer AWc,string DWc returns nothing
set w3[MM]=DWc
set MM=MM+1
if vY[PWc]==0 then
if PWc==0 then
call Mau("Nullpointer exception when calling HashWriter.writeShort","when calling error in HashData, line 23")
else
call Mau("Called HashWriter.writeShort on invalid object.","when calling error in HashData, line 23")
endif
endif
call IIs(PWc,AWc,"when calling writeShort in HashData, line 23")
set MM=MM-1
endfunction
function mZs takes integer jZs,string xZs returns integer
local integer vZs
set w3[MM]=xZs
set MM=MM+1
set vZs=EQc(jZs,"when calling readInt in HashData, line 153")
set MM=MM-1
return vZs
endfunction
function tos takes integer uos,string ros returns integer
local integer sos
set w3[MM]=ros
set MM=MM+1
set sos=NYc(nQ[uos],"when calling readShort in Base64Data, line 91")
set MM=MM-1
return sos
endfunction
function Fgo takes integer Tgo,integer Ygo,string Ggo returns nothing
local integer ggo
local integer hgo
if Tgo==0 then
set w3[MM]=Ggo
set MM=MM+1
if FY[Ygo]==0 then
if Ygo==0 then
call Mau("Nullpointer exception when calling DataReader.readShort","when calling error in DataInterfaces, line 87")
else
call Mau("Called DataReader.readShort on invalid object.","when calling error in DataInterfaces, line 87")
endif
endif
if FY[Ygo]<=712 then
if FY[Ygo]<=711 then
set ggo=tos(Ygo,"when calling readShort in DataInterfaces, line 87")
else
call Fgo(1,Ygo,"when calling readShort in DataInterfaces, line 87")
set ggo=inw
endif
else
set ggo=mZs(Ygo,"when calling readShort in DataInterfaces, line 87")
endif
set MM=MM-1
set inw=ggo
return
elseif Tgo==1 then
set w3[MM]=Ggo
set MM=MM+1
call Fgo(0,tU[Ygo],"when calling readShort in HashData, line 244")
set hgo=inw
call HWc(sU[Ygo],hgo,"when calling writeShort in HashData, line 245")
set MM=MM-1
set inw=hgo
return
endif
endfunction
function Mbc takes string Bbc returns integer
local integer Nbc
set w3[MM]=Bbc
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set Nbc=IY
set PY[Nbc]=1384
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_PositionedUnitData_UnitData.","when calling error in UnitData, line 1421")
set Nbc=0
endif
else
set UY=UY-1
set Nbc=ZY[UY]
set PY[Nbc]=1384
endif
set MM=MM-1
return Nbc
endfunction
function WIs takes integer vIs,integer mIs,string QIs returns nothing
set w3[MM]=QIs
set MM=MM+1
call XWc(vIs,mIs,"when calling writeInt in HashData, line 21")
set MM=MM-1
endfunction
function IWc takes integer EWc,integer ZWc,string UWc returns nothing
set w3[MM]=UWc
set MM=MM+1
if vY[EWc]==0 then
if EWc==0 then
call Mau("Nullpointer exception when calling HashWriter.writeByte","when calling error in HashData, line 20")
else
call Mau("Called HashWriter.writeByte on invalid object.","when calling error in HashData, line 20")
endif
endif
call WIs(EWc,ZWc,"when calling writeByte in HashData, line 20")
set MM=MM-1
endfunction
function kZs takes integer gZs,string hZs returns integer
local integer FZs
set w3[MM]=hZs
set MM=MM+1
set FZs=EQc(gZs,"when calling readInt in HashData, line 150")
set MM=MM-1
return FZs
endfunction
function wos takes integer Bcs,string Ncs returns integer
local integer Mcs
set w3[MM]=Ncs
set MM=MM+1
set Mcs=XYc(nQ[Bcs],"when calling readByte in Base64Data, line 88")
set MM=MM-1
return Mcs
endfunction
function Rgo takes integer qgo,integer ago,string ngo returns nothing
local integer dgo
local integer fgo
if qgo==0 then
set w3[MM]=ngo
set MM=MM+1
if FY[ago]==0 then
if ago==0 then
call Mau("Nullpointer exception when calling DataReader.readByte","when calling error in DataInterfaces, line 84")
else
call Mau("Called DataReader.readByte on invalid object.","when calling error in DataInterfaces, line 84")
endif
endif
if FY[ago]<=712 then
if FY[ago]<=711 then
set dgo=wos(ago,"when calling readByte in DataInterfaces, line 84")
else
call Rgo(1,ago,"when calling readByte in DataInterfaces, line 84")
set dgo=inw
endif
else
set dgo=kZs(ago,"when calling readByte in DataInterfaces, line 84")
endif
set MM=MM-1
set inw=dgo
return
elseif qgo==1 then
set w3[MM]=ngo
set MM=MM+1
call Rgo(0,tU[ago],"when calling readByte in HashData, line 238")
set fgo=inw
call IWc(sU[ago],fgo,"when calling writeByte in HashData, line 239")
set MM=MM-1
set inw=fgo
return
endif
endfunction
function YHr takes integer RHr,integer THr returns boolean
return mwu(RHr,THr)
endfunction
function Box_onDestroy takes integer this returns nothing
endfunction
function oec takes integer Sec,string cec returns nothing
set w3[MM]=cec
set MM=MM+1
if Xm[Sec]==0 then
call Mau("Double free: object of type Box⟪integer⟫","when calling error in Box, line 14")
else
set Jm[Km]=Sec
set Km=Km+1
set Xm[Sec]=0
endif
set MM=MM-1
endfunction
function tTS takes integer rTS,string sTS returns nothing
set w3[MM]=sTS
set MM=MM+1
call Box_onDestroy(rTS)
call oec(rTS,"when calling dealloc_Box⟪integer⟫ in Box, line 13")
set MM=MM-1
endfunction
function jqo takes integer Fqo,string kqo returns nothing
set w3[MM]=kqo
set MM=MM+1
if Xm[Fqo]==0 then
if Fqo==0 then
call Mau("Nullpointer exception when calling Box⟪integer⟫.Box","when calling error in Box, line 14")
else
call Mau("Called Box⟪integer⟫.Box on invalid object.","when calling error in Box, line 14")
endif
endif
call tTS(Fqo,"when calling destroyBox⟪integer⟫ in Box, line 14")
set MM=MM-1
endfunction
function ryc takes string wyc returns integer
local integer uyc
set w3[MM]=wyc
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set uyc=HY
set JY[uyc]=1348
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_PositionedUnitData_UnitData.","when calling error in UnitData, line 1421")
set uyc=0
endif
else
set DY=DY-1
set uyc=AY[DY]
set JY[uyc]=1348
endif
set MM=MM-1
return uyc
endfunction
function J_S takes integer W_S,integer E_S,string Z_S returns nothing
local integer U_S
local integer I_S
local integer P_S
local integer A_S
local integer D_S
local integer H_S
set w3[MM]=Z_S
set MM=MM+1
call Rgo(0,E_S,"when calling readByte in UnitData, line 1409")
set H_S=inw
set pV[W_S]=H_S
if YHr(pV[W_S],0)then
if YHr(pV[W_S],1)then
call ego(0,E_S,"when calling readInt in UnitData, line 1414")
set U_S=inw
else
call Fgo(0,E_S,"when calling readShort in UnitData, line 1416")
set U_S=inw
endif
else
call Rgo(0,E_S,"when calling readByte in UnitData, line 1418")
set U_S=inw
endif
set I_S=uTS(0,"when calling new_Box⟪integer⟫ in UnitData, line 1420")
set P_S=Mbc("when calling alloc_LimitedExecuteCondition_executeWhile_PositionedUnitData_UnitData in UnitData, line 1421")
set dV[P_S]=I_S
set fV[P_S]=U_S
set D_S=P_S
set A_S=ryc("when calling alloc_LimitedExecuteAction_executeWhile_PositionedUnitData_UnitData in UnitData, line 1421")
set RV[A_S]=W_S
set TV[A_S]=E_S
set YV[A_S]=I_S
call rdu(100,D_S,A_S,"when calling executeWhile in UnitData, line 1421")
call jqo(I_S,"when calling dispatch_Box⟪integer⟫_destroyBox⟪integer⟫ in UnitData, line 1424")
set MM=MM-1
endfunction
function Hoo takes integer Poo,integer Aoo,string Doo returns nothing
set w3[MM]=Doo
set MM=MM+1
if Qg[Poo]==0 then
if Poo==0 then
call Mau("Nullpointer exception when calling PositionedUnitData.deserialize","when calling error in UnitData, line 1408")
else
call Mau("Called PositionedUnitData.deserialize on invalid object.","when calling error in UnitData, line 1408")
endif
endif
call J_S(Poo,Aoo,"when calling deserialize in UnitData, line 1408")
set MM=MM-1
endfunction
function Ngr takes integer Vgr,integer Bgr returns boolean
return mwu(Vgr,Bgr)
endfunction
function Rec takes integer dec,string fec returns nothing
set w3[MM]=fec
set MM=MM+1
if rQ[dec]==0 then
call Mau("Double free: object of type Box⟪string⟫","when calling error in Box, line 14")
else
set Mm[wQ]=dec
set wQ=wQ+1
set rQ[dec]=0
endif
set MM=MM-1
endfunction
function dTS takes integer aTS,string nTS returns nothing
set w3[MM]=nTS
set MM=MM+1
call Box_onDestroy(aTS)
call Rec(aTS,"when calling dealloc_Box⟪string⟫ in Box, line 13")
set MM=MM-1
endfunction
function Eqo takes integer Qqo,string Wqo returns nothing
set w3[MM]=Wqo
set MM=MM+1
if rQ[Qqo]==0 then
if Qqo==0 then
call Mau("Nullpointer exception when calling Box⟪string⟫.Box","when calling error in Box, line 14")
else
call Mau("Called Box⟪string⟫.Box on invalid object.","when calling error in Box, line 14")
endif
endif
call dTS(Qqo,"when calling destroyBox⟪string⟫ in Box, line 14")
set MM=MM-1
endfunction
function MOc takes string BOc returns integer
local integer NOc
set w3[MM]=BOc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set NOc=NY
set MY[NOc]=782
else
call Mau("Out of memory: Could not create ForForceCallback_execute_StringTable_StringTable.","when calling error in StringTable, line 73")
set NOc=0
endif
else
set BY=BY-1
set NOc=VY[BY]
set MY[NOc]=782
endif
set MM=MM-1
return NOc
endfunction
function nec takes string qec returns integer
local integer aec
set w3[MM]=qec
set MM=MM+1
if wQ==0 then
if uQ<32768 then
set uQ=uQ+1
set aec=uQ
set rQ[aec]=655
else
call Mau("Out of memory: Could not create Box⟪string⟫.","when calling error in Box, line 14")
set aec=0
endif
else
set wQ=wQ-1
set aec=Mm[wQ]
set rQ[aec]=655
endif
set MM=MM-1
return aec
endfunction
function PTS takes integer ITS returns nothing
endfunction
function vTS takes integer jTS,string xTS returns nothing
call PTS(jTS)
set NM[jTS]=xTS
endfunction
function qTS takes string yTS,string pTS returns integer
local integer eTS
set w3[MM]=pTS
set MM=MM+1
set eTS=nec("when calling alloc_Box⟪string⟫ in Box, line 17")
call vTS(eTS,yTS)
set MM=MM-1
return eTS
endfunction
function b1i takes integer t1i,integer i1i,string S1i returns string
local integer c1i
local integer o1i
local integer O1i
local string l1i
set w3[MM]=S1i
set MM=MM+1
call Fgo(0,i1i,"when calling readShort in StringTable, line 71")
set c1i=inw
set o1i=qTS("","when calling new_Box⟪string⟫ in StringTable, line 72")
set O1i=MOc("when calling alloc_ForForceCallback_execute_StringTable_StringTable in StringTable, line 73")
set TC[O1i]=c1i
set YC[O1i]=o1i
set GC[O1i]=i1i
call Inu(O1i,"when calling execute in StringTable, line 73")
set l1i=NM[o1i]
call Eqo(o1i,"when calling dispatch_Box⟪string⟫_destroyBox⟪string⟫ in StringTable, line 77")
set MM=MM-1
return l1i
endfunction
function aso takes integer yso,integer pso,string eso returns string
local string qso
set w3[MM]=eso
set MM=MM+1
if Qg[yso]==0 then
if yso==0 then
call Mau("Nullpointer exception when calling StringTable.deserializeString","when calling error in StringTable, line 70")
else
call Mau("Called StringTable.deserializeString on invalid object.","when calling error in StringTable, line 70")
endif
endif
set qso=b1i(yso,pso,"when calling deserializeString in StringTable, line 70")
set MM=MM-1
return qso
endfunction
function ehr takes integer ihr,integer Shr,string chr returns integer
local integer ohr
local integer Ohr
local integer lhr
local integer bhr
local integer yhr
local integer phr
set w3[MM]=chr
set MM=MM+1
if eC[Shr]then
if qC[Shr]then
call ego(0,ihr,"when calling readInt in StringTable, line 37")
set bhr=inw
set Ohr=bhr
set MM=MM-1
set Y4=Ohr
return Y4
else
call Fgo(0,ihr,"when calling readShort in StringTable, line 39")
set yhr=inw
set lhr=yhr
set MM=MM-1
set Y4=lhr
return Y4
endif
else
call Rgo(0,ihr,"when calling readByte in StringTable, line 41")
set phr=inw
set ohr=phr
set MM=MM-1
set Y4=ohr
return Y4
endif
endfunction
function Ldo takes integer Jdo,string Kdo returns nothing
call TGu(MT,Jdo,PM[Jdo],Kdo)
set PM[Jdo]=PM[Jdo]+1
endfunction
function Bdo takes integer Xdo,string Cdo,string Vdo returns nothing
set w3[MM]=Vdo
set MM=MM+1
if km[Xdo]==0 then
if Xdo==0 then
call Mau("Nullpointer exception when calling StringHashList.add","when calling error in Utility, line 194")
else
call Mau("Called StringHashList.add on invalid object.","when calling error in Utility, line 194")
endif
endif
call Ldo(Xdo,Cdo)
set MM=MM-1
endfunction
function qfS takes integer efS returns integer
return PM[efS]
endfunction
function Heo takes integer Peo,string Aeo returns integer
local integer Deo
set w3[MM]=Aeo
set MM=MM+1
if km[Peo]==0 then
if Peo==0 then
call Mau("Nullpointer exception when calling StringHashList.size","when calling error in Utility, line 231")
else
call Mau("Called StringHashList.size on invalid object.","when calling error in Utility, line 231")
endif
endif
set Deo=qfS(Peo)
set MM=MM-1
return Deo
endfunction
function VfS takes integer HfS,string JfS returns boolean
local integer KfS=DFr(JfS)
local integer LfS=iYu(AM[HfS],KfS,-1)
local integer XfS=0
local integer CfS=LfS-1
loop
exitwhen XfS>CfS
if hYu(AM[HfS],KfS,XfS)==JfS then
return true
endif
set XfS=XfS+1
endloop
return false
endfunction
function Oqo takes integer iqo,string Sqo,string cqo returns boolean
local boolean oqo
set w3[MM]=cqo
set MM=MM+1
if mm[iqo]==0 then
if iqo==0 then
call Mau("Nullpointer exception when calling StringHashMap.has","when calling error in Utility, line 119")
else
call Mau("Called StringHashMap.has on invalid object.","when calling error in Utility, line 119")
endif
endif
set oqo=VfS(iqo,Sqo)
set MM=MM-1
return oqo
endfunction
function J3i takes integer Z3i,string U3i,string I3i returns integer
local integer P3i
local integer A3i
local integer D3i
local integer H3i
set w3[MM]=I3i
set MM=MM+1
if Oqo(aC[Z3i],U3i,"when calling has in StringTable, line 54")then
set D3i=eqo(aC[Z3i],U3i,"when calling get in StringTable, line 55")
set P3i=D3i
set MM=MM-1
set I0w=P3i
return I0w
endif
call tqo(aC[Z3i],U3i,Heo(nC[Z3i],"when calling size in StringTable, line 56"),"when calling put in StringTable, line 56")
call Bdo(nC[Z3i],U3i,"when calling add in StringTable, line 57")
set H3i=Heo(nC[Z3i],"when calling size in StringTable, line 58")-1
set A3i=H3i
set MM=MM-1
set I0w=A3i
return I0w
endfunction
function uso takes integer Vro,string Bro,string Nro returns integer
local integer Mro
local integer wso
set w3[MM]=Nro
set MM=MM+1
if Qg[Vro]==0 then
if Vro==0 then
call Mau("Nullpointer exception when calling StringTable.addString","when calling error in StringTable, line 53")
else
call Mau("Called StringTable.addString on invalid object.","when calling error in StringTable, line 53")
endif
endif
set wso=J3i(Vro,Bro,"when calling addString in StringTable, line 53")
set Mro=wso
set MM=MM-1
set Z4=Mro
return Z4
endfunction
function m3i takes integer T3i,integer Y3i,string G3i returns nothing
local integer g3i
local integer h3i
local integer F3i
local integer k3i
local string j3i
local integer x3i
local integer v3i
set w3[MM]=G3i
set MM=MM+1
call Rgo(0,Y3i,"when calling readByte in StringTable, line 95")
set x3i=inw
set pC[T3i]=x3i
set eC[T3i]=Ngr(pC[T3i],0)
set qC[T3i]=Ngr(pC[T3i],1)
set v3i=ehr(Y3i,T3i,"when calling readStringTableIndex in StringTable, line 100")
set h3i=v3i
set g3i=h3i
set F3i=0
set k3i=g3i-1
loop
exitwhen F3i>k3i
set j3i=aso(T3i,Y3i,"when calling deserializeString in StringTable, line 102")
call uso(T3i,j3i,"when calling addString in StringTable, line 103")
set F3i=F3i+1
endloop
set MM=MM-1
endfunction
function gso takes integer Tso,integer Yso,string Gso returns nothing
set w3[MM]=Gso
set MM=MM+1
if Qg[Tso]==0 then
if Tso==0 then
call Mau("Nullpointer exception when calling StringTable.deserialize","when calling error in StringTable, line 94")
else
call Mau("Called StringTable.deserialize on invalid object.","when calling error in StringTable, line 94")
endif
endif
call m3i(Tso,Yso,"when calling deserialize in StringTable, line 94")
set MM=MM-1
endfunction
function TEu takes integer pEu,string eEu returns real
local integer qEu
local integer aEu
local real nEu
local real dEu
local real fEu
local real REu
set w3[MM]=eEu
set MM=MM+1
call Fgo(0,pEu,"when calling readShort in PointData, line 21")
set qEu=inw-32767
call Fgo(0,pEu,"when calling readShort in PointData, line 22")
set aEu=inw-32767
set fEu=rgu(qEu)
set REu=rgu(aEu)
set nEu=fEu
set dEu=REu
set MM=MM-1
set H1=nEu
set J1=dEu
return H1
endfunction
function tUu takes integer CZu,integer VZu,string BZu returns integer
local integer NZu
local integer MZu
local integer wUu
local integer uUu
local integer rUu
local integer sUu
set w3[MM]=BZu
set MM=MM+1
if WH[VZu]then
if EH[VZu]then
call ego(0,CZu,"when calling readInt in RawcodeTable, line 35")
set uUu=inw
set NZu=uUu
set MM=MM-1
set X1=NZu
return X1
else
call Fgo(0,CZu,"when calling readShort in RawcodeTable, line 37")
set rUu=inw
set wUu=rUu
set MM=MM-1
set X1=wUu
return X1
endif
else
call Rgo(0,CZu,"when calling readByte in RawcodeTable, line 39")
set sUu=inw
set MZu=sUu
set MM=MM-1
set X1=MZu
return X1
endif
endfunction
function t8S takes integer A7S,integer D7S,string H7S returns nothing
local integer J7S
local boolean K7S
local integer L7S
local integer X7S
local integer C7S
local integer V7S
local integer B7S
local real N7S
local real M7S
local real w8S
local real u8S
local integer r8S
local integer s8S
set w3[MM]=H7S
set MM=MM+1
call Rgo(0,D7S,"when calling readByte in TerrainData, line 108")
set B7S=inw
set ZC[A7S]=B7S
set N7S=TEu(D7S,"when calling readPointData in TerrainData, line 110")
set M7S=J1
set UC[A7S]=N7S
set IC[A7S]=M7S
set w8S=TEu(D7S,"when calling readPointData in TerrainData, line 111")
set u8S=J1
set PC[A7S]=w8S
set AC[A7S]=u8S
if kkr(ZC[A7S],0)then
if kkr(ZC[A7S],1)then
call ego(0,D7S,"when calling readInt in TerrainData, line 116")
set J7S=inw
else
call Fgo(0,D7S,"when calling readShort in TerrainData, line 118")
set J7S=inw
endif
else
call Rgo(0,D7S,"when calling readByte in TerrainData, line 120")
set J7S=inw
endif
set K7S=kkr(ZC[A7S],2)
set L7S=0
set X7S=J7S-1
loop
exitwhen L7S>X7S
set V7S=DC[A7S]
set r8S=tUu(D7S,EC[A7S],"when calling readRawcodeTableIndex in TerrainData, line 124")
set C7S=r8S
call Nno(V7S,C7S,"when calling add in TerrainData, line 124")
if K7S then
set s8S=HC[A7S]
call Rgo(0,D7S,"when calling readByte in TerrainData, line 126")
call Nno(s8S,inw,"when calling add in TerrainData, line 126")
endif
set L7S=L7S+1
endloop
set MM=MM-1
endfunction
function Hco takes integer Pco,integer Aco,string Dco returns nothing
set w3[MM]=Dco
set MM=MM+1
if Iv[Pco]==0 then
if Pco==0 then
call Mau("Nullpointer exception when calling SubRectTileData.deserialize","when calling error in TerrainData, line 107")
else
call Mau("Called SubRectTileData.deserialize on invalid object.","when calling error in TerrainData, line 107")
endif
endif
call t8S(Pco,Aco,"when calling deserialize in TerrainData, line 107")
set MM=MM-1
endfunction
function AZu takes integer IZu,integer PZu returns boolean
return mwu(IZu,PZu)
endfunction
function bbt takes integer tbt,integer ibt,string Sbt returns integer
local integer cbt
local integer obt
local integer Obt
local integer lbt
set w3[MM]=Sbt
set MM=MM+1
if PZc(ZH[tbt],ibt,"when calling has in RawcodeTable, line 52")then
set Obt=BZc(ZH[tbt],ibt,"when calling get in RawcodeTable, line 53")
set cbt=Obt
set MM=MM-1
set S0w=cbt
return S0w
endif
call KZc(ZH[tbt],ibt,yZc(UH[tbt],"when calling size in RawcodeTable, line 54"),"when calling put in RawcodeTable, line 54")
call Nno(UH[tbt],ibt,"when calling add in RawcodeTable, line 55")
set lbt=yZc(UH[tbt],"when calling size in RawcodeTable, line 56")-1
set obt=lbt
set MM=MM-1
set S0w=obt
return S0w
endfunction
function IBc takes integer QBc,integer WBc,string EBc returns integer
local integer ZBc
local integer UBc
set w3[MM]=EBc
set MM=MM+1
if Qg[QBc]==0 then
if QBc==0 then
call Mau("Nullpointer exception when calling RawcodeTable.addRawcode","when calling error in RawcodeTable, line 51")
else
call Mau("Called RawcodeTable.addRawcode on invalid object.","when calling error in RawcodeTable, line 51")
endif
endif
set UBc=bbt(QBc,WBc,"when calling addRawcode in RawcodeTable, line 51")
set ZBc=UBc
set MM=MM-1
set J9=ZBc
return J9
endfunction
function wbt takes integer Hlt,integer Jlt,string Klt returns nothing
local integer Llt
local integer Xlt
local integer Clt
local integer Vlt
local integer Blt
local integer Nlt
local integer Mlt
set w3[MM]=Klt
set MM=MM+1
call Rgo(0,Jlt,"when calling readByte in RawcodeTable, line 76")
set Blt=inw
set QH[Hlt]=Blt
set WH[Hlt]=AZu(QH[Hlt],0)
set EH[Hlt]=AZu(QH[Hlt],1)
set Nlt=tUu(Jlt,Hlt,"when calling readRawcodeTableIndex in RawcodeTable, line 81")
set Xlt=Nlt
set Llt=Xlt
set Clt=0
set Vlt=Llt-1
loop
exitwhen Clt>Vlt
set Mlt=Hlt
call ego(0,Jlt,"when calling readInt in RawcodeTable, line 83")
call IBc(Mlt,inw,"when calling addRawcode in RawcodeTable, line 83")
set Clt=Clt+1
endloop
set MM=MM-1
endfunction
function MBc takes integer VBc,integer BBc,string NBc returns nothing
set w3[MM]=NBc
set MM=MM+1
if Qg[VBc]==0 then
if VBc==0 then
call Mau("Nullpointer exception when calling RawcodeTable.deserialize","when calling error in RawcodeTable, line 75")
else
call Mau("Called RawcodeTable.deserialize on invalid object.","when calling error in RawcodeTable, line 75")
endif
endif
call wbt(VBc,BBc,"when calling deserialize in RawcodeTable, line 75")
set MM=MM-1
endfunction
function Llc takes string Jlc returns integer
local integer Klc
set w3[MM]=Jlc
set MM=MM+1
if Zv==0 then
if Uv<32768 then
set Uv=Uv+1
set Klc=Uv
set Iv[Klc]=1643
else
call Mau("Out of memory: Could not create SubRectTileData.","when calling error in TerrainData, line 28")
set Klc=0
endif
else
set Zv=Zv-1
set Klc=Ev[Zv]
set Iv[Klc]=1643
endif
set MM=MM-1
return Klc
endfunction
function uEu takes nothing returns real
set Z1=0.
set U1=0.
return Z1
endfunction
function y8S takes integer i8S,string S8S returns nothing
local integer c8S
local real o8S
local real O8S
local real l8S
local real b8S
set w3[MM]=S8S
set MM=MM+1
set c8S=0
set ZC[i8S]=c8S
set o8S=uEu()
set O8S=U1
set UC[i8S]=o8S
set IC[i8S]=O8S
set l8S=uEu()
set b8S=U1
set PC[i8S]=l8S
set AC[i8S]=b8S
set DC[i8S]=rDs("when calling new_HashList in TerrainData, line 37")
set HC[i8S]=rDs("when calling new_HashList in TerrainData, line 38")
set MM=MM-1
endfunction
function R8S takes integer n8S,integer d8S,string f8S returns nothing
set w3[MM]=f8S
set MM=MM+1
call y8S(n8S,"when calling SubRectTileData_init in TerrainData, line 44")
set EC[n8S]=d8S
set MM=MM-1
endfunction
function a8S takes integer p8S,string e8S returns integer
local integer q8S
set w3[MM]=e8S
set MM=MM+1
set q8S=Llc("when calling alloc_SubRectTileData in TerrainData, line 44")
call R8S(q8S,p8S,"when calling construct_SubRectTileData in TerrainData, line 44")
set MM=MM-1
return q8S
endfunction
function vkr takes integer jkr,integer xkr returns boolean
return mwu(jkr,xkr)
endfunction
function o0S takes integer M9S,integer w0S,string u0S returns nothing
local integer r0S
local integer s0S
local integer t0S
local integer i0S
local integer S0S
local integer c0S
set w3[MM]=u0S
set MM=MM+1
call Rgo(0,w0S,"when calling readByte in TerrainData, line 162")
set c0S=inw
set tV[M9S]=c0S
call MBc(iV[M9S],w0S,"when calling deserialize in TerrainData, line 164")
if vkr(tV[M9S],0)then
if vkr(tV[M9S],1)then
call ego(0,w0S,"when calling readInt in TerrainData, line 169")
set r0S=inw
else
call Fgo(0,w0S,"when calling readShort in TerrainData, line 171")
set r0S=inw
endif
else
call Rgo(0,w0S,"when calling readByte in TerrainData, line 173")
set r0S=inw
endif
set s0S=0
set t0S=r0S-1
loop
exitwhen s0S>t0S
set S0S=SV[M9S]
set i0S=a8S(iV[M9S],"when calling new_SubRectTileData in TerrainData, line 176")
call Hco(i0S,w0S,"when calling deserialize in TerrainData, line 176")
call Cqo(S0S,i0S,"when calling add in TerrainData, line 176")
set s0S=s0S+1
endloop
set MM=MM-1
endfunction
function Too takes integer doo,integer foo,string Roo returns nothing
set w3[MM]=Roo
set MM=MM+1
if Qg[doo]==0 then
if doo==0 then
call Mau("Nullpointer exception when calling TileData.deserialize","when calling error in TerrainData, line 161")
else
call Mau("Called TileData.deserialize on invalid object.","when calling error in TerrainData, line 161")
endif
endif
call o0S(doo,foo,"when calling deserialize in TerrainData, line 161")
set MM=MM-1
endfunction
function Ukr takes integer Ekr,integer Zkr returns boolean
return mwu(Ekr,Zkr)
endfunction
function y9S takes integer o9S,integer O9S,string l9S returns nothing
local integer b9S
set w3[MM]=l9S
set MM=MM+1
call Rgo(0,O9S,"when calling readByte in TerrainData, line 219")
set b9S=inw
set uV[o9S]=b9S
if Ukr(uV[o9S],0)then
call Too(rV[o9S],O9S,"when calling deserialize in TerrainData, line 222")
endif
set MM=MM-1
endfunction
function uoo takes integer Nco,integer Mco,string woo returns nothing
set w3[MM]=woo
set MM=MM+1
if Qg[Nco]==0 then
if Nco==0 then
call Mau("Nullpointer exception when calling TerrainData.deserialize","when calling error in TerrainData, line 218")
else
call Mau("Called TerrainData.deserialize on invalid object.","when calling error in TerrainData, line 218")
endif
endif
call y9S(Nco,Mco,"when calling deserialize in TerrainData, line 218")
set MM=MM-1
endfunction
function vIu takes integer jIu,integer xIu returns boolean
return mwu(jIu,xIu)
endfunction
function GhS takes string ThS returns integer
local integer YhS
set w3[MM]=ThS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set YhS=NY
set MY[YhS]=775
else
call Mau("Out of memory: Could not create ForForceCallback_execute_PositionedDestructableData_DestructableData.","when calling error in DestructableData, line 256")
set YhS=0
endif
else
set BY=BY-1
set YhS=VY[BY]
set MY[YhS]=775
endif
set MM=MM-1
return YhS
endfunction
function dhs takes integer phs,integer ehs,string qhs returns nothing
local integer ahs
local integer nhs
set w3[MM]=qhs
set MM=MM+1
call Rgo(0,ehs,"when calling readByte in DestructableData, line 252")
set nhs=inw
set yE[phs]=nhs
call MBc(pE[phs],ehs,"when calling deserialize in DestructableData, line 254")
set ahs=GhS("when calling alloc_ForForceCallback_execute_PositionedDestructableData_DestructableData in DestructableData, line 256")
set nE[ahs]=phs
set dE[ahs]=ehs
call Inu(ahs,"when calling execute in DestructableData, line 256")
set MM=MM-1
endfunction
function wkc takes integer BFc,integer NFc,string MFc returns nothing
set w3[MM]=MFc
set MM=MM+1
if Qg[BFc]==0 then
if BFc==0 then
call Mau("Nullpointer exception when calling PositionedDestructableData.deserialize","when calling error in DestructableData, line 251")
else
call Mau("Called PositionedDestructableData.deserialize on invalid object.","when calling error in DestructableData, line 251")
endif
endif
call dhs(BFc,NFc,"when calling deserialize in DestructableData, line 251")
set MM=MM-1
endfunction
function Set takes integer uet,integer ret,string tet returns nothing
local integer iet
set w3[MM]=tet
set MM=MM+1
call Rgo(0,ret,"when calling readByte in RegionData, line 72")
set iet=inw
set uJ[uet]=iet
call rgo(1,ret,"when calling readReal in RegionData, line 74")
set SJ[uet]=snw
call rgo(1,ret,"when calling readReal in RegionData, line 75")
set cJ[uet]=snw
call rgo(1,ret,"when calling readReal in RegionData, line 77")
set oJ[uet]=snw
call rgo(1,ret,"when calling readReal in RegionData, line 78")
set OJ[uet]=snw
call gso(lJ[uet],ret,"when calling deserialize in RegionData, line 80")
if vIu(uJ[uet],0)then
call uoo(bJ[uet],ret,"when calling deserialize in RegionData, line 83")
endif
if vIu(uJ[uet],1)then
call wkc(yJ[uet],ret,"when calling deserialize in RegionData, line 85")
endif
if vIu(uJ[uet],2)then
call Hoo(pJ[uet],ret,"when calling deserialize in RegionData, line 87")
endif
set MM=MM-1
endfunction
function QxS takes string vxS returns integer
local integer mxS
set w3[MM]=vxS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set mxS=NY
set MY[mxS]=768
else
call Mau("Out of memory: Could not create ForForceCallback_execute_LegacyPositionedUnitData_LegacyUnitData.","when calling error in LegacyUnitData, line 400")
set mxS=0
endif
else
set BY=BY-1
set mxS=VY[BY]
set MY[mxS]=768
endif
set MM=MM-1
return mxS
endfunction
function vBs takes integer FBs,integer kBs,string jBs returns nothing
local integer xBs
set w3[MM]=jBs
set MM=MM+1
set xBs=QxS("when calling alloc_ForForceCallback_execute_LegacyPositionedUnitData_LegacyUnitData in LegacyUnitData, line 400")
set FI[xBs]=kBs
set kI[xBs]=FBs
call Inu(xBs,"when calling execute in LegacyUnitData, line 400")
set MM=MM-1
endfunction
function APc takes integer UPc,integer IPc,string PPc returns nothing
set w3[MM]=PPc
set MM=MM+1
if oF[UPc]==0 then
if UPc==0 then
call Mau("Nullpointer exception when calling LegacyPositionedUnitData.deserialize","when calling error in LegacyUnitData, line 399")
else
call Mau("Called LegacyPositionedUnitData.deserialize on invalid object.","when calling error in LegacyUnitData, line 399")
endif
endif
call vBs(UPc,IPc,"when calling deserialize in LegacyUnitData, line 399")
set MM=MM-1
endfunction
function RxS takes string dxS returns integer
local integer fxS
set w3[MM]=dxS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set fxS=NY
set MY[fxS]=780
else
call Mau("Out of memory: Could not create ForForceCallback_execute_StringTable_LegacyStringTable.","when calling error in LegacyStringTable, line 40")
set fxS=0
endif
else
set BY=BY-1
set fxS=VY[BY]
set MY[fxS]=780
endif
set MM=MM-1
return fxS
endfunction
function tVs takes integer sVs returns nothing
set eI[sVs]=""
endfunction
function OVs takes integer oVs returns nothing
call tVs(oVs)
endfunction
function ixS takes string sxS returns integer
local integer txS
set w3[MM]=sxS
set MM=MM+1
if rF==0 then
if sF<32768 then
set sF=sF+1
set txS=sF
set tF[txS]=651
else
call Mau("Out of memory: Could not create BoxedString.","when calling error in LegacyStringTable, line 9")
set txS=0
endif
else
set rF=rF-1
set txS=uF[rF]
set tF[txS]=651
endif
set MM=MM-1
return txS
endfunction
function cVs takes string iVs returns integer
local integer SVs
set w3[MM]=iVs
set MM=MM+1
set SVs=ixS("when calling alloc_BoxedString in LegacyStringTable, line 9")
call OVs(SVs)
set MM=MM-1
return SVs
endfunction
function bVs takes integer lVs returns nothing
endfunction
function oxS takes integer SxS,string cxS returns nothing
set w3[MM]=cxS
set MM=MM+1
if tF[SxS]==0 then
call Mau("Double free: object of type BoxedString","when calling error in LegacyStringTable, line 9")
else
set uF[rF]=SxS
set rF=rF+1
set tF[SxS]=0
endif
set MM=MM-1
endfunction
function eVs takes integer yVs,string pVs returns nothing
set w3[MM]=pVs
set MM=MM+1
call bVs(yVs)
call oxS(yVs,"when calling dealloc_BoxedString in LegacyStringTable, line 9")
set MM=MM-1
endfunction
function lPc takes integer oPc,string OPc returns nothing
set w3[MM]=OPc
set MM=MM+1
if tF[oPc]==0 then
if oPc==0 then
call Mau("Nullpointer exception when calling BoxedString.BoxedString","when calling error in LegacyStringTable, line 9")
else
call Mau("Called BoxedString.BoxedString on invalid object.","when calling error in LegacyStringTable, line 9")
endif
endif
call eVs(oPc,"when calling destroyBoxedString in LegacyStringTable, line 9")
set MM=MM-1
endfunction
function uBs takes integer XVs,integer CVs,string VVs returns string
local integer BVs
local integer NVs
local integer MVs
local string wBs
set w3[MM]=VVs
set MM=MM+1
call Fgo(0,CVs,"when calling readShort in LegacyStringTable, line 38")
set BVs=inw
set NVs=cVs("when calling new_BoxedString in LegacyStringTable, line 39")
set MVs=RxS("when calling alloc_ForForceCallback_execute_StringTable_LegacyStringTable in LegacyStringTable, line 40")
set TI[MVs]=BVs
set YI[MVs]=NVs
set GI[MVs]=CVs
call Inu(MVs,"when calling execute in LegacyStringTable, line 40")
set wBs=eI[NVs]
call lPc(NVs,"when calling dispatch_BoxedString_destroyBoxedString in LegacyStringTable, line 44")
set MM=MM-1
return wBs
endfunction
function jPc takes integer gPc,integer hPc,string FPc returns string
local string kPc
set w3[MM]=FPc
set MM=MM+1
if Qg[gPc]==0 then
if gPc==0 then
call Mau("Nullpointer exception when calling StringTable.deserializeString","when calling error in LegacyStringTable, line 37")
else
call Mau("Called StringTable.deserializeString on invalid object.","when calling error in LegacyStringTable, line 37")
endif
endif
set kPc=uBs(gPc,hPc,"when calling deserializeString in LegacyStringTable, line 37")
set MM=MM-1
return kPc
endfunction
function xVs takes integer TVs,integer YVs,string GVs returns nothing
local integer gVs
local integer hVs
local integer FVs
local string kVs
local integer jVs
set w3[MM]=GVs
set MM=MM+1
call Rgo(0,YVs,"when calling readByte in LegacyStringTable, line 54")
set jVs=inw
set qI[TVs]=jVs
call Fgo(0,YVs,"when calling readShort in LegacyStringTable, line 55")
set gVs=inw
set hVs=0
set FVs=gVs-1
loop
exitwhen hVs>FVs
set kVs=jPc(TVs,YVs,"when calling deserializeString in LegacyStringTable, line 57")
call tqo(aI[TVs],kVs,Heo(nI[TVs],"when calling size in LegacyStringTable, line 58"),"when calling put in LegacyStringTable, line 58")
call Bdo(nI[TVs],kVs,"when calling add in LegacyStringTable, line 59")
set hVs=hVs+1
endloop
set MM=MM-1
endfunction
function QPc takes integer xPc,integer vPc,string mPc returns nothing
set w3[MM]=mPc
set MM=MM+1
if Qg[xPc]==0 then
if xPc==0 then
call Mau("Nullpointer exception when calling StringTable.deserialize","when calling error in LegacyStringTable, line 53")
else
call Mau("Called StringTable.deserialize on invalid object.","when calling error in LegacyStringTable, line 53")
endif
endif
call xVs(xPc,vPc,"when calling deserialize in LegacyStringTable, line 53")
set MM=MM-1
endfunction
function cCs takes integer tCs,integer iCs,string SCs returns nothing
set w3[MM]=SCs
set MM=MM+1
call Rgo(0,iCs,"when calling readByte in LegacySaveData, line 44")
call rgo(1,iCs,"when calling readReal in LegacySaveData, line 46")
set OI[tCs]=snw
call rgo(1,iCs,"when calling readReal in LegacySaveData, line 47")
set lI[tCs]=snw
call rgo(1,iCs,"when calling readReal in LegacySaveData, line 49")
call rgo(1,iCs,"when calling readReal in LegacySaveData, line 50")
call qZu("des ST")
call QPc(bI[tCs],iCs,"when calling deserialize in LegacySaveData, line 53")
call qZu("des UD")
call APc(yI[tCs],iCs,"when calling deserialize in LegacySaveData, line 55")
call qZu("des finish")
set MM=MM-1
endfunction
function bpc takes string Opc returns integer
local integer lpc
set w3[MM]=Opc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set lpc=NY
set MY[lpc]=784
else
call Mau("Out of memory: Could not create ForForceCallback_execute_UnitData_UnitTypeData.","when calling error in UnitTypeData, line 1392")
set lpc=0
endif
else
set BY=BY-1
set lpc=VY[BY]
set MY[lpc]=784
endif
set MM=MM-1
return lpc
endfunction
function fdS takes integer ndS,integer ddS returns nothing
endfunction
function jeo takes integer heo,integer Feo,string keo returns nothing
set w3[MM]=keo
set MM=MM+1
if am[heo]==0 then
if heo==0 then
call Mau("Nullpointer exception when calling UnitTypeTable.deserialize","when calling error in UnitTypeData, line 1285")
else
call Mau("Called UnitTypeTable.deserialize on invalid object.","when calling error in UnitTypeData, line 1285")
endif
endif
call fdS(heo,Feo)
set MM=MM-1
endfunction
function dpS takes integer ppS,integer epS,string qpS returns nothing
local integer apS
local integer npS
set w3[MM]=qpS
set MM=MM+1
call Rgo(0,epS,"when calling readByte in UnitTypeData, line 1388")
set npS=inw
set nN[ppS]=npS
call jeo(dN[ppS],epS,"when calling deserialize in UnitTypeData, line 1390")
set apS=bpc("when calling alloc_ForForceCallback_execute_UnitData_UnitTypeData in UnitTypeData, line 1392")
set YN[apS]=ppS
set GN[apS]=epS
call Inu(apS,"when calling execute in UnitTypeData, line 1392")
set MM=MM-1
endfunction
function CKr takes integer IKr,integer PKr,string AKr returns integer
local integer DKr
local integer HKr
local integer JKr
local integer KKr
local integer LKr
local integer XKr
set w3[MM]=AKr
set MM=MM+1
if MB[PKr]then
if wN[PKr]then
call ego(0,IKr,"when calling readInt in UnitTypeDataTable, line 39")
set KKr=inw
set JKr=KKr
set MM=MM-1
set j6=JKr
return j6
else
call Fgo(0,IKr,"when calling readShort in UnitTypeDataTable, line 41")
set LKr=inw
set HKr=LKr
set MM=MM-1
set j6=HKr
return j6
endif
else
call Rgo(0,IKr,"when calling readByte in UnitTypeDataTable, line 43")
set XKr=inw
set DKr=XKr
set MM=MM-1
set j6=DKr
return j6
endif
endfunction
function AXr takes nothing returns integer
set t7=0
set i7=0.
set S7=0.
set c7=0.
set o7=0.
set O7=0.
return t7
endfunction
function Mgr takes nothing returns integer
set T4=0
return T4
endfunction
function uMr takes nothing returns integer
set n8=0
set d8=0
set f8=0.
set R8=0
set T8=0
return n8
endfunction
function c3r takes nothing returns integer
set W8=0
set E8=uMr()
set Z8=d8
set U8=f8
set I8=R8
set P8=T8
set A8=uMr()
set D8=d8
set H8=f8
set J8=R8
set K8=T8
set L8=0
set X8=0
set C8=0
return W8
endfunction
function tVr takes nothing returns integer
set g7=0
set h7=0
set F7=0
set k7=0
set j7=0
set x7=0
return g7
endfunction
function qBr takes nothing returns integer
set K7=0
set L7=tVr()
set X7=h7
set C7=F7
set V7=k7
set B7=j7
set N7=x7
set M7=0
return K7
endfunction
function rLr takes nothing returns integer
set v6=0
set m6=0.
set Q6=0
set W6=0
set E6=0
set Z6=0
set U6=0
set I6=0.
return v6
endfunction
function WnS takes integer HaS,string JaS returns nothing
local integer KaS
local integer LaS
local integer XaS
local integer CaS
local real VaS
local integer BaS
local integer NaS
local integer MaS
local integer wnS
local integer unS
local real rnS
local integer snS
local real tnS
local real inS
local real SnS
local real cnS
local real onS
local integer OnS
local integer lnS
local integer bnS
local integer ynS
local integer pnS
local integer enS
local integer qnS
local integer anS
local integer nnS
local integer dnS
local integer fnS
local real RnS
local integer TnS
local integer YnS
local integer GnS
local integer gnS
local real hnS
local integer FnS
local integer knS
local integer jnS
local integer xnS
local integer vnS
local integer mnS
local integer QnS
set w3[MM]=JaS
set MM=MM+1
set KaS=0
set PN[HaS]=KaS
set LaS=0
set AN[HaS]=LaS
set DN[HaS]=0
set XaS=Mgr()
set HN[HaS]=XaS
set CaS=rLr()
set VaS=m6
set BaS=Q6
set NaS=W6
set MaS=E6
set wnS=Z6
set unS=U6
set rnS=I6
set JN[HaS]=CaS
set KN[HaS]=VaS
set LN[HaS]=BaS
set XN[HaS]=NaS
set CN[HaS]=MaS
set VN[HaS]=wnS
set BN[HaS]=unS
set NN[HaS]=rnS
set snS=AXr()
set tnS=i7
set inS=S7
set SnS=c7
set cnS=o7
set onS=O7
set MN[HaS]=snS
set wM[HaS]=tnS
set uM[HaS]=inS
set rM[HaS]=SnS
set sM[HaS]=cnS
set tM[HaS]=onS
set OnS=qBr()
set lnS=L7
set bnS=X7
set ynS=C7
set pnS=V7
set enS=B7
set qnS=N7
set anS=M7
set iM[HaS]=OnS
set SM[HaS]=lnS
set cM[HaS]=bnS
set oM[HaS]=ynS
set OM[HaS]=pnS
set lM[HaS]=enS
set bM[HaS]=qnS
set yM[HaS]=anS
set nnS=c3r()
set dnS=E8
set fnS=Z8
set RnS=U8
set TnS=I8
set YnS=P8
set GnS=A8
set gnS=D8
set hnS=H8
set FnS=J8
set knS=K8
set jnS=L8
set xnS=X8
set vnS=C8
set pM[HaS]=nnS
set eM[HaS]=dnS
set qM[HaS]=fnS
set aM[HaS]=RnS
set nM[HaS]=TnS
set dM[HaS]=YnS
set fM[HaS]=GnS
set RM[HaS]=gnS
set TM[HaS]=hnS
set YM[HaS]=FnS
set GM[HaS]=knS
set gM[HaS]=jnS
set hM[HaS]=xnS
set FM[HaS]=vnS
set kM[HaS]=a4s("when calling new_LinkedList in UnitTypeData, line 1057")
set jM[HaS]=a4s("when calling new_LinkedList in UnitTypeData, line 1058")
set mnS=0
set xM[HaS]=mnS
set QnS=0
set vM[HaS]=QnS
set MM=MM-1
endfunction
function HnS takes integer PnS,integer AnS,string DnS returns nothing
set w3[MM]=DnS
set MM=MM+1
call WnS(PnS,"when calling UnitTypeData_init in UnitTypeData, line 1069")
set IN[PnS]=AnS
set MM=MM-1
endfunction
function npc takes string qpc returns integer
local integer apc
set w3[MM]=qpc
set MM=MM+1
if pm==0 then
if em<32768 then
set em=em+1
set apc=em
set qm[apc]=1682
else
call Mau("Out of memory: Could not create UnitTypeData.","when calling error in UnitTypeData, line 1041")
set apc=0
endif
else
set pm=pm-1
set apc=ym[pm]
set qm[apc]=1682
endif
set MM=MM-1
return apc
endfunction
function InS takes integer EnS,string ZnS returns integer
local integer UnS
set w3[MM]=ZnS
set MM=MM+1
set UnS=npc("when calling alloc_UnitTypeData in UnitTypeData, line 1069")
call HnS(UnS,EnS,"when calling construct_UnitTypeData in UnitTypeData, line 1069")
set MM=MM-1
return UnS
endfunction
function PXr takes integer UXr,integer IXr returns boolean
return mwu(UXr,IXr)
endfunction
function JCr takes integer WCr,string ECr returns integer
local integer ZCr
local real UCr
local real ICr
local real PCr
local real ACr
local real DCr
local integer HCr
set w3[MM]=ECr
set MM=MM+1
call Rgo(0,WCr,"when calling readByte in UnitTypeData, line 252")
set HCr=inw
set ZCr=HCr
set UCr=0.0
if PXr(ZCr,0)then
if PXr(ZCr,1)then
call Fgo(0,WCr,"when calling readShort in UnitTypeData, line 257")
set UCr=inw*1./10
else
call rgo(1,WCr,"when calling readReal in UnitTypeData, line 259")
set UCr=snw
endif
endif
set ICr=0.0
if PXr(ZCr,2)then
call Fgo(0,WCr,"when calling readShort in UnitTypeData, line 262")
set ICr=inw*1./10000
endif
set PCr=0.0
if PXr(ZCr,3)then
if PXr(ZCr,4)then
call Rgo(0,WCr,"when calling readByte in UnitTypeData, line 266")
set PCr=inw*1./100
elseif PXr(ZCr,5)then
call Fgo(0,WCr,"when calling readShort in UnitTypeData, line 268")
set PCr=inw*1./1000
endif
endif
set ACr=0.0
if PXr(ZCr,6)then
call rgo(1,WCr,"when calling readReal in UnitTypeData, line 271")
set ACr=snw
endif
set DCr=0.0
if PXr(ZCr,7)then
call Fgo(0,WCr,"when calling readShort in UnitTypeData, line 274")
set DCr=inw*1./10000
endif
set MM=MM-1
set a7=ZCr
set n7=UCr
set d7=ICr
set f7=PCr
set R7=ACr
set T7=DCr
return a7
endfunction
function S3r takes integer t3r,integer i3r returns boolean
return mwu(t3r,i3r)
endfunction
function wMr takes integer NNr,integer MNr returns boolean
return mwu(NNr,MNr)
endfunction
function w3r takes integer KMr,string LMr returns integer
local integer XMr
local integer CMr
local real VMr
local integer BMr
local integer NMr
local integer MMr
set w3[MM]=LMr
set MM=MM+1
call Rgo(0,KMr,"when calling readByte in UnitTypeData, line 638")
set MMr=inw
set XMr=MMr
set CMr=0
set VMr=0.0
set BMr=0
set NMr=0
if wMr(XMr,0)then
if wMr(XMr,1)then
call ego(0,KMr,"when calling readInt in UnitTypeData, line 647")
set CMr=inw
else
call Rgo(0,KMr,"when calling readByte in UnitTypeData, line 649")
set CMr=inw
endif
endif
if wMr(XMr,2)then
if wMr(XMr,3)then
call Rgo(0,KMr,"when calling readByte in UnitTypeData, line 652")
set VMr=inw*1./100
else
call rgo(1,KMr,"when calling readReal in UnitTypeData, line 654")
set VMr=snw
endif
endif
if wMr(XMr,4)then
if wMr(XMr,5)then
call ego(0,KMr,"when calling readInt in UnitTypeData, line 657")
set BMr=inw
else
call Rgo(0,KMr,"when calling readByte in UnitTypeData, line 659")
set BMr=inw
endif
endif
if wMr(XMr,6)then
if wMr(XMr,7)then
call ego(0,KMr,"when calling readInt in UnitTypeData, line 662")
set NMr=inw
else
call Rgo(0,KMr,"when calling readByte in UnitTypeData, line 664")
set NMr=inw
endif
endif
set MM=MM-1
set k8=XMr
set j8=CMr
set x8=VMr
set v8=BMr
set m8=NMr
return k8
endfunction
function N4r takes integer y4r,string p4r returns integer
local integer e4r
local integer q4r
local integer a4r
local real n4r
local integer d4r
local integer f4r
local integer R4r
local integer T4r
local real Y4r
local integer G4r
local integer g4r
local integer h4r
local integer F4r
local integer k4r
local integer j4r
local integer x4r
local integer v4r
local real m4r
local integer Q4r
local integer W4r
local integer E4r
local integer Z4r
local real U4r
local integer I4r
local integer P4r
local integer A4r
local integer D4r
local real H4r
local integer J4r
local integer K4r
local integer L4r
local integer X4r
local real C4r
local integer V4r
local integer B4r
set w3[MM]=p4r
set MM=MM+1
call Fgo(0,y4r,"when calling readShort in UnitTypeData, line 768")
set j4r=inw
set e4r=j4r
set x4r=uMr()
set v4r=d8
set m4r=f8
set Q4r=R8
set W4r=T8
set q4r=x4r
set a4r=v4r
set n4r=m4r
set d4r=Q4r
set f4r=W4r
if S3r(e4r,0)then
set E4r=w3r(y4r,"when calling readAttackParameters in UnitTypeData, line 772")
set Z4r=j8
set U4r=x8
set I4r=v8
set P4r=m8
set q4r=E4r
set a4r=Z4r
set n4r=U4r
set d4r=I4r
set f4r=P4r
endif
set A4r=uMr()
set D4r=d8
set H4r=f8
set J4r=R8
set K4r=T8
set R4r=A4r
set T4r=D4r
set Y4r=H4r
set G4r=J4r
set g4r=K4r
if S3r(e4r,1)then
set L4r=w3r(y4r,"when calling readAttackParameters in UnitTypeData, line 775")
set X4r=j8
set C4r=x8
set V4r=v8
set B4r=m8
set R4r=L4r
set T4r=X4r
set Y4r=C4r
set G4r=V4r
set g4r=B4r
endif
set h4r=0
if S3r(e4r,2)then
if S3r(e4r,3)then
call Rgo(0,y4r,"when calling readByte in UnitTypeData, line 779")
set h4r=inw
else
call ego(0,y4r,"when calling readInt in UnitTypeData, line 781")
set h4r=inw
endif
endif
set F4r=0
if S3r(e4r,4)then
if S3r(e4r,5)then
call Fgo(0,y4r,"when calling readShort in UnitTypeData, line 785")
set F4r=inw
else
call ego(0,y4r,"when calling readInt in UnitTypeData, line 787")
set F4r=inw
endif
endif
set k4r=0
if S3r(e4r,6)then
if S3r(e4r,7)then
call Fgo(0,y4r,"when calling readShort in UnitTypeData, line 791")
set k4r=inw
else
call ego(0,y4r,"when calling readInt in UnitTypeData, line 793")
set k4r=inw
endif
endif
set MM=MM-1
set l9=e4r
set b9=q4r
set y9=a4r
set p9=n4r
set e9=d4r
set q9=f4r
set a9=R4r
set n9=T4r
set d9=Y4r
set f9=G4r
set R9=g4r
set T9=h4r
set Y9=F4r
set G9=k4r
return l9
endfunction
function uLr takes integer MKr,integer wLr returns boolean
return mwu(MKr,wLr)
endfunction
function QXr takes integer pXr,string eXr returns integer
local integer qXr
local real aXr
local integer nXr
local integer dXr
local integer fXr
local integer RXr
local integer TXr
local real YXr
local integer GXr
local integer gXr
local integer hXr
local integer FXr
local integer kXr
local integer jXr
local integer xXr
local integer vXr
local integer mXr
set w3[MM]=eXr
set MM=MM+1
call Rgo(0,pXr,"when calling readByte in UnitTypeData, line 123")
set GXr=inw
set qXr=GXr
set aXr=0.0
if uLr(qXr,0)then
if uLr(qXr,1)then
call Rgo(0,pXr,"when calling readByte in UnitTypeData, line 128")
set aXr=rgu(inw)
elseif uLr(qXr,2)then
call Fgo(0,pXr,"when calling readShort in UnitTypeData, line 130")
set aXr=inw*1./10
else
call rgo(1,pXr,"when calling readReal in UnitTypeData, line 132")
set aXr=snw
endif
endif
set nXr=0
if uLr(qXr,3)then
call Rgo(0,pXr,"when calling readByte in UnitTypeData, line 135")
set nXr=inw
endif
set gXr=0
set hXr=0
set FXr=0
set kXr=0
set dXr=gXr
set fXr=hXr
set RXr=FXr
set TXr=kXr
if uLr(qXr,4)then
call Rgo(0,pXr,"when calling readByte in UnitTypeData, line 138")
set jXr=inw
call Rgo(0,pXr,"when calling readByte in UnitTypeData, line 138")
set xXr=inw
call Rgo(0,pXr,"when calling readByte in UnitTypeData, line 138")
set vXr=inw
call Rgo(0,pXr,"when calling readByte in UnitTypeData, line 138")
set mXr=inw
set dXr=jXr
set fXr=xXr
set RXr=vXr
set TXr=mXr
endif
set YXr=0.0
if uLr(qXr,5)then
if uLr(qXr,6)then
call Rgo(0,pXr,"when calling readByte in UnitTypeData, line 142")
set YXr=inw*1./100
elseif uLr(qXr,7)then
call Fgo(0,pXr,"when calling readShort in UnitTypeData, line 144")
set YXr=(inw-32767)*1./1000
else
call rgo(1,pXr,"when calling readReal in UnitTypeData, line 146")
set YXr=snw
endif
endif
set MM=MM-1
set C6=qXr
set V6=aXr
set B6=nXr
set N6=dXr
set M6=fXr
set w7=RXr
set u7=TXr
set r7=YXr
return C6
endfunction
function T5r takes integer f5r,integer R5r returns boolean
return mwu(f5r,R5r)
endfunction
function eBr takes integer yBr,integer pBr returns boolean
return mwu(yBr,pBr)
endfunction
function BCr takes integer CCr,integer VCr returns boolean
return mwu(CCr,VCr)
endfunction
function sVr takes integer uVr,integer rVr returns boolean
return mwu(uVr,rVr)
endfunction
function oBr takes integer BVr,string NVr returns integer
local integer MVr
local integer wBr
local integer uBr
local integer rBr
local integer sBr
local integer tBr
local integer iBr
local integer SBr
local integer cBr
set w3[MM]=NVr
set MM=MM+1
call Rgo(0,BVr,"when calling readByte in UnitTypeData, line 405")
set SBr=inw
set MVr=SBr
if BCr(MVr,7)then
call Rgo(0,BVr,"when calling readByte in UnitTypeData, line 406")
set uBr=inw
else
set uBr=0
endif
set cBr=uBr
set wBr=cBr
call ego(0,BVr,"when calling readInt in UnitTypeData, line 408")
set rBr=inw
set sBr=0
if BCr(MVr,1)then
if BCr(MVr,2)then
if sVr(wBr,0)then
call ego(0,BVr,"when calling readInt in UnitTypeData, line 414")
set sBr=inw
else
call Fgo(0,BVr,"when calling readShort in UnitTypeData, line 416")
set sBr=inw
endif
else
call Rgo(0,BVr,"when calling readByte in UnitTypeData, line 418")
set sBr=inw
endif
endif
set tBr=0
if BCr(MVr,3)then
if BCr(MVr,4)then
if sVr(wBr,1)then
call ego(0,BVr,"when calling readInt in UnitTypeData, line 423")
set tBr=inw
else
call Fgo(0,BVr,"when calling readShort in UnitTypeData, line 425")
set tBr=inw
endif
else
call Rgo(0,BVr,"when calling readByte in UnitTypeData, line 427")
set tBr=inw
endif
endif
set iBr=0
if BCr(MVr,5)then
if BCr(MVr,6)then
if sVr(wBr,2)then
call ego(0,BVr,"when calling readInt in UnitTypeData, line 432")
set iBr=inw
else
call Fgo(0,BVr,"when calling readShort in UnitTypeData, line 434")
set iBr=inw
endif
else
call Rgo(0,BVr,"when calling readByte in UnitTypeData, line 436")
set iBr=inw
endif
endif
set MM=MM-1
set U7=MVr
set I7=wBr
set P7=rBr
set A7=sBr
set D7=tBr
set H7=iBr
return U7
endfunction
function XNr takes integer YNr,string GNr returns integer
local integer gNr
local integer hNr
local integer FNr
local integer kNr
local integer jNr
local integer xNr
local integer vNr
local integer mNr
local integer QNr
local integer WNr
local integer ENr
local integer ZNr
local integer UNr
local integer INr
local integer PNr
local integer ANr
local integer DNr
local integer HNr
local integer JNr
local integer KNr
local integer LNr
set w3[MM]=GNr
set MM=MM+1
call Fgo(0,YNr,"when calling readShort in UnitTypeData, line 529")
set QNr=inw
set gNr=QNr
set WNr=tVr()
set ENr=h7
set ZNr=F7
set UNr=k7
set INr=j7
set PNr=x7
set hNr=WNr
set FNr=ENr
set kNr=ZNr
set jNr=UNr
set xNr=INr
set vNr=PNr
if eBr(gNr,0)then
set ANr=oBr(YNr,"when calling readHeroParameters in UnitTypeData, line 533")
set DNr=I7
set HNr=P7
set JNr=A7
set KNr=D7
set LNr=H7
set hNr=ANr
set FNr=DNr
set kNr=HNr
set jNr=JNr
set xNr=KNr
set vNr=LNr
endif
set mNr=0
if eBr(gNr,1)then
call Rgo(0,YNr,"when calling readByte in UnitTypeData, line 537")
set mNr=inw
endif
set MM=MM-1
set o8=gNr
set O8=hNr
set l8=FNr
set b8=kNr
set y8=jNr
set p8=xNr
set e8=vNr
set q8=mNr
return o8
endfunction
function q5r takes integer p5r,integer e5r returns boolean
return mwu(p5r,e5r)
endfunction
function t2r takes integer r2r,integer s2r returns boolean
return mwu(r2r,s2r)
endfunction
function BbS takes integer LbS,integer XbS,string CbS returns nothing
local integer VbS
set w3[MM]=CbS
set MM=MM+1
call Rgo(0,XbS,"when calling readByte in UnitTypeData, line 881")
set VbS=inw
set sN[LbS]=VbS
call ego(0,XbS,"when calling readInt in UnitTypeData, line 882")
set tN[LbS]=inw
if t2r(sN[LbS],0)then
set iN[LbS]=1
elseif t2r(sN[LbS],1)then
set iN[LbS]=2
elseif t2r(sN[LbS],2)then
set iN[LbS]=3
elseif t2r(sN[LbS],3)then
set iN[LbS]=4
else
call Fgo(0,XbS,"when calling readShort in UnitTypeData, line 893")
set iN[LbS]=inw
endif
if t2r(sN[LbS],4)then
if t2r(sN[LbS],6)then
call Rgo(0,XbS,"when calling readByte in UnitTypeData, line 896")
set SN[LbS]=inw
else
call ego(0,XbS,"when calling readInt in UnitTypeData, line 898")
set SN[LbS]=inw
endif
endif
if t2r(sN[LbS],5)then
if t2r(sN[LbS],6)then
call Rgo(0,XbS,"when calling readByte in UnitTypeData, line 901")
set cN[LbS]=inw*1./2
else
call rgo(1,XbS,"when calling readReal in UnitTypeData, line 903")
set cN[LbS]=snw
endif
endif
set MM=MM-1
endfunction
function rpo takes integer Myo,integer wpo,string upo returns nothing
set w3[MM]=upo
set MM=MM+1
if im[Myo]==0 then
if Myo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.deserialize","when calling error in UnitTypeData, line 880")
else
call Mau("Called SingleAbilityData.deserialize on invalid object.","when calling error in UnitTypeData, line 880")
endif
endif
call BbS(Myo,wpo,"when calling deserialize in UnitTypeData, line 880")
set MM=MM-1
endfunction
function Vyc takes string Xyc returns integer
local integer Cyc
set w3[MM]=Xyc
set MM=MM+1
if sm==0 then
if tm<32768 then
set tm=tm+1
set Cyc=tm
set im[Cyc]=1567
else
call Mau("Out of memory: Could not create SingleAbilityData.","when calling error in UnitTypeData, line 813")
set Cyc=0
endif
else
set sm=sm-1
set Cyc=rm[sm]
set im[Cyc]=1567
endif
set MM=MM-1
return Cyc
endfunction
function wyS takes integer NbS returns nothing
local integer MbS=0
set sN[NbS]=MbS
set tN[NbS]=0
set iN[NbS]=0
set SN[NbS]=0
set cN[NbS]=0.0
endfunction
function iyS takes integer tyS returns nothing
call wyS(tyS)
endfunction
function syS takes string uyS returns integer
local integer ryS
set w3[MM]=uyS
set MM=MM+1
set ryS=Vyc("when calling alloc_SingleAbilityData in UnitTypeData, line 828")
call iyS(ryS)
set MM=MM-1
return ryS
endfunction
function DaS takes integer PqS,integer AqS,string DqS returns nothing
local integer HqS
local integer JqS
local integer KqS
local integer LqS
local integer XqS
local integer CqS
local integer VqS
local integer BqS
local integer NqS
local integer MqS
local integer waS
local integer uaS
local real raS
local integer saS
local integer taS
local integer iaS
local integer SaS
local integer caS
local real oaS
local integer OaS
local real laS
local real baS
local real yaS
local real paS
local real eaS
local integer qaS
local integer aaS
local integer naS
local integer daS
local integer faS
local integer RaS
local integer TaS
local integer YaS
local integer GaS
local integer gaS
local integer haS
local real FaS
local integer kaS
local integer jaS
local integer xaS
local integer vaS
local real maS
local integer QaS
local integer WaS
local integer EaS
local integer ZaS
local integer UaS
local integer IaS
local integer PaS
local integer AaS
set w3[MM]=DqS
set MM=MM+1
call Rgo(0,AqS,"when calling readByte in UnitTypeData, line 1204")
set NqS=inw
set PN[PqS]=NqS
if q5r(PN[PqS],7)then
call Rgo(0,AqS,"when calling readByte in UnitTypeData, line 1206")
set MqS=inw
set AN[PqS]=MqS
endif
call ego(0,AqS,"when calling readInt in UnitTypeData, line 1207")
set DN[PqS]=inw
if q5r(PN[PqS],2)then
set waS=ehr(AqS,IN[PqS],"when calling readStringTableIndex in UnitTypeData, line 1210")
set HN[PqS]=waS
endif
if q5r(PN[PqS],3)then
set uaS=QXr(AqS,"when calling readArtParameters in UnitTypeData, line 1213")
set raS=V6
set saS=B6
set taS=N6
set iaS=M6
set SaS=w7
set caS=u7
set oaS=r7
set JN[PqS]=uaS
set KN[PqS]=raS
set LN[PqS]=saS
set XN[PqS]=taS
set CN[PqS]=iaS
set VN[PqS]=SaS
set BN[PqS]=caS
set NN[PqS]=oaS
endif
if q5r(PN[PqS],4)then
set OaS=JCr(AqS,"when calling readAnimationParameters in UnitTypeData, line 1215")
set laS=n7
set baS=d7
set yaS=f7
set paS=R7
set eaS=T7
set MN[PqS]=OaS
set wM[PqS]=laS
set uM[PqS]=baS
set rM[PqS]=yaS
set sM[PqS]=paS
set tM[PqS]=eaS
endif
if q5r(PN[PqS],5)then
set qaS=XNr(AqS,"when calling readGeneralStats in UnitTypeData, line 1218")
set aaS=O8
set naS=l8
set daS=b8
set faS=y8
set RaS=p8
set TaS=e8
set YaS=q8
set iM[PqS]=qaS
set SM[PqS]=aaS
set cM[PqS]=naS
set oM[PqS]=daS
set OM[PqS]=faS
set lM[PqS]=RaS
set bM[PqS]=TaS
set yM[PqS]=YaS
endif
if q5r(PN[PqS],6)then
set GaS=N4r(AqS,"when calling readStats in UnitTypeData, line 1220")
set gaS=b9
set haS=y9
set FaS=p9
set kaS=e9
set jaS=q9
set xaS=a9
set vaS=n9
set maS=d9
set QaS=f9
set WaS=R9
set EaS=T9
set ZaS=Y9
set UaS=G9
set pM[PqS]=GaS
set eM[PqS]=gaS
set qM[PqS]=haS
set aM[PqS]=FaS
set nM[PqS]=kaS
set dM[PqS]=jaS
set fM[PqS]=xaS
set RM[PqS]=vaS
set TM[PqS]=maS
set YM[PqS]=QaS
set GM[PqS]=WaS
set gM[PqS]=EaS
set hM[PqS]=ZaS
set FM[PqS]=UaS
endif
if eBr(iM[PqS],5)then
call Rgo(0,AqS,"when calling readByte in UnitTypeData, line 1223")
set HqS=inw
set JqS=0
set KqS=HqS-1
loop
exitwhen JqS>KqS
set AaS=kM[PqS]
call ego(0,AqS,"when calling readInt in UnitTypeData, line 1225")
call Cqo(AaS,inw,"when calling add in UnitTypeData, line 1225")
set JqS=JqS+1
endloop
endif
if eBr(iM[PqS],6)then
call Rgo(0,AqS,"when calling readByte in UnitTypeData, line 1227")
set LqS=inw
set XqS=0
set CqS=LqS-1
loop
exitwhen XqS>CqS
set BqS=jM[PqS]
set VqS=syS("when calling new_SingleAbilityData in UnitTypeData, line 1229")
call rpo(VqS,AqS,"when calling deserialize in UnitTypeData, line 1229")
call Cqo(BqS,VqS,"when calling add in UnitTypeData, line 1229")
set XqS=XqS+1
endloop
endif
if T5r(AN[PqS],1)then
call Rgo(0,AqS,"when calling readByte in UnitTypeData, line 1232")
set IaS=inw
set xM[PqS]=IaS
endif
if T5r(AN[PqS],2)then
call Rgo(0,AqS,"when calling readByte in UnitTypeData, line 1234")
set PaS=inw
set vM[PqS]=PaS
endif
if T5r(AN[PqS],3)then
endif
set MM=MM-1
endfunction
function Oeo takes integer Seo,integer ceo,string oeo returns nothing
set w3[MM]=oeo
set MM=MM+1
if qm[Seo]==0 then
if Seo==0 then
call Mau("Nullpointer exception when calling UnitTypeData.deserialize","when calling error in UnitTypeData, line 1203")
else
call Mau("Called UnitTypeData.deserialize on invalid object.","when calling error in UnitTypeData, line 1203")
endif
endif
call DaS(Seo,ceo,"when calling deserialize in UnitTypeData, line 1203")
set MM=MM-1
endfunction
function reS takes integer weS,integer ueS returns boolean
return false
endfunction
function Dpo takes integer Upo,integer Ipo,string Ppo returns boolean
local boolean Apo
set w3[MM]=Ppo
set MM=MM+1
if qm[Upo]==0 then
if Upo==0 then
call Mau("Nullpointer exception when calling UnitTypeData.equals","when calling error in UnitTypeData, line 1077")
else
call Mau("Called UnitTypeData.equals on invalid object.","when calling error in UnitTypeData, line 1077")
endif
endif
set Apo=reS(Upo,Ipo)
set MM=MM-1
return Apo
endfunction
function OUc takes integer iUc,integer SUc,integer cUc,string oUc returns nothing
set w3[MM]=oUc
set MM=MM+1
if Yh[iUc]==0 then
if iUc==0 then
call Mau("Nullpointer exception when calling IterableMap.put","when calling error in HashMap, line 59")
else
call Mau("Called IterableMap.put on invalid object.","when calling error in HashMap, line 59")
endif
endif
call SHs(iUc,SUc,cUc,"when calling put in HashMap, line 59")
set MM=MM-1
endfunction
function CXr takes integer DXr,real HXr,real JXr,real KXr,real LXr,real XXr returns integer
return DXr+qUu(HXr)+qUu(JXr)+qUu(KXr)+qUu(LXr)+qUu(XXr)
endfunction
function cMr takes integer rMr,integer sMr,real tMr,integer iMr,integer SMr returns integer
return rMr+sMr+qUu(tMr)+iMr+SMr
endfunction
function Y3r takes integer o3r,integer O3r,integer l3r,real b3r,integer y3r,integer p3r,integer e3r,integer q3r,real a3r,integer n3r,integer d3r,integer f3r,integer R3r,integer T3r returns integer
return o3r+cMr(O3r,l3r,b3r,y3r,p3r)+cMr(e3r,q3r,a3r,n3r,d3r)+f3r+R3r+T3r
endfunction
function bLr takes integer sLr,real tLr,integer iLr,integer SLr,integer cLr,integer oLr,integer OLr,real lLr returns integer
return sLr+qUu(tLr)+iLr+SLr+cLr+oLr+OLr+qUu(lLr)
endfunction
function MpS takes integer BpS returns integer
local integer NpS=IN[BpS]+AN[BpS]+DN[BpS]+HN[BpS]+bLr(JN[BpS],KN[BpS],LN[BpS],XN[BpS],CN[BpS],VN[BpS],BN[BpS],NN[BpS])+CXr(MN[BpS],wM[BpS],uM[BpS],rM[BpS],sM[BpS],tM[BpS])+Y3r(pM[BpS],eM[BpS],qM[BpS],aM[BpS],nM[BpS],dM[BpS],fM[BpS],RM[BpS],TM[BpS],YM[BpS],GM[BpS],gM[BpS],hM[BpS],FM[BpS])
return NpS
endfunction
function Zpo takes integer Qpo,string Wpo returns integer
local integer Epo
set w3[MM]=Wpo
set MM=MM+1
if qm[Qpo]==0 then
if Qpo==0 then
call Mau("Nullpointer exception when calling UnitTypeData.hashCode","when calling error in UnitTypeData, line 1072")
else
call Mau("Called UnitTypeData.hashCode on invalid object.","when calling error in UnitTypeData, line 1072")
endif
endif
set Epo=MpS(Qpo)
set MM=MM-1
return Epo
endfunction
function Lyc takes string Jyc returns integer
local integer Kyc
set w3[MM]=Jyc
set MM=MM+1
if wm==0 then
if um<32768 then
set um=um+1
set Kyc=um
else
call Mau("Out of memory: Could not create KeyValueWrapper.","when calling error in UnitTypeDataTable, line 47")
set Kyc=0
endif
else
set wm=wm-1
set Kyc=Mv[wm]
endif
set MM=MM-1
return Kyc
endfunction
function RbS takes integer fbS returns nothing
endfunction
function gbS takes integer TbS,integer YbS,integer GbS returns nothing
call RbS(TbS)
set uN[TbS]=YbS
set rN[TbS]=GbS
endfunction
function dbS takes integer ebS,integer qbS,string abS returns integer
local integer nbS
set w3[MM]=abS
set MM=MM+1
set nbS=Lyc("when calling alloc_KeyValueWrapper in UnitTypeDataTable, line 51")
call gbS(nbS,ebS,qbS)
set MM=MM-1
return nbS
endfunction
function Myc takes integer Byc,string Nyc returns nothing
set w3[MM]=Nyc
set MM=MM+1
if im[Byc]==0 then
call Mau("Double free: object of type SingleAbilityData","when calling error in UnitTypeData, line 813")
else
set rm[sm]=Byc
set sm=sm+1
set im[Byc]=0
endif
set MM=MM-1
endfunction
function cyS takes integer SyS returns nothing
endfunction
function lyS takes integer oyS,string OyS returns nothing
set w3[MM]=OyS
set MM=MM+1
call cyS(oyS)
call Myc(oyS,"when calling dealloc_SingleAbilityData in UnitTypeData, line 813")
set MM=MM-1
endfunction
function Uyo takes integer Eyo,string Zyo returns nothing
set w3[MM]=Zyo
set MM=MM+1
if im[Eyo]==0 then
if Eyo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.SingleAbilityData","when calling error in UnitTypeData, line 813")
else
call Mau("Called SingleAbilityData.SingleAbilityData on invalid object.","when calling error in UnitTypeData, line 813")
endif
endif
call lyS(Eyo,"when calling destroySingleAbilityData in UnitTypeData, line 813")
set MM=MM-1
endfunction
function CnS takes integer JnS,string KnS returns nothing
local integer LnS
local integer XnS
set w3[MM]=KnS
set MM=MM+1
set LnS=x1s(jM[JnS],"when calling iterator in UnitTypeData, line 1064")
loop
exitwhen not t1s(LnS)
set XnS=r1s(LnS)
call Uyo(XnS,"when calling dispatch_SingleAbilityData_destroySingleAbilityData in UnitTypeData, line 1065")
endloop
call c1s(LnS,"when calling close in UnitTypeData, line 1064")
call CAc(jM[JnS],"when calling dispatch_LinkedList_destroyLinkedList in UnitTypeData, line 1066")
call CAc(kM[JnS],"when calling dispatch_LinkedList_destroyLinkedList in UnitTypeData, line 1067")
set MM=MM-1
endfunction
function Rpc takes integer dpc,string fpc returns nothing
set w3[MM]=fpc
set MM=MM+1
if qm[dpc]==0 then
call Mau("Double free: object of type UnitTypeData","when calling error in UnitTypeData, line 1041")
else
set ym[pm]=dpc
set pm=pm+1
set qm[dpc]=0
endif
set MM=MM-1
endfunction
function NnS takes integer VnS,string BnS returns nothing
set w3[MM]=BnS
set MM=MM+1
call CnS(VnS,"when calling UnitTypeData_onDestroy in UnitTypeData, line 1063")
call Rpc(VnS,"when calling dealloc_UnitTypeData in UnitTypeData, line 1063")
set MM=MM-1
endfunction
function mpo takes integer xpo,string vpo returns nothing
set w3[MM]=vpo
set MM=MM+1
if qm[xpo]==0 then
if xpo==0 then
call Mau("Nullpointer exception when calling UnitTypeData.UnitTypeData","when calling error in UnitTypeData, line 1041")
else
call Mau("Called UnitTypeData.UnitTypeData on invalid object.","when calling error in UnitTypeData, line 1041")
endif
endif
call NnS(xpo,"when calling destroyUnitTypeData in UnitTypeData, line 1041")
set MM=MM-1
endfunction
function pbS takes integer tbS,integer ibS,string SbS returns integer
local integer cbS
local integer obS
local integer ObS
local integer lbS
local integer bbS
local integer ybS
set w3[MM]=SbS
set MM=MM+1
set cbS=Zpo(ibS,"when calling hashCode in UnitTypeDataTable, line 79")
set obS=BZc(CB[tbS],cbS,"when calling get in UnitTypeDataTable, line 80")
if obS==0 then
set obS=a4s("when calling new_LinkedList in UnitTypeDataTable, line 82")
call OUc(CB[tbS],cbS,obS,"when calling put in UnitTypeDataTable, line 83")
endif
set ObS=x1s(obS,"when calling iterator in UnitTypeDataTable, line 84")
loop
exitwhen not t1s(ObS)
set lbS=r1s(ObS)
if Dpo(uN[lbS],ibS,"when calling equals in UnitTypeDataTable, line 85")then
call mpo(ibS,"when calling dispatch_UnitTypeData_destroyUnitTypeData in UnitTypeDataTable, line 86")
call c1s(ObS,"when calling close in UnitTypeDataTable, line 84")
set MM=MM-1
set H0w=rN[lbS]
return H0w
endif
endloop
call c1s(ObS,"when calling close in UnitTypeDataTable, line 84")
call Cqo(obS,dbS(ibS,yZc(VB[tbS],"when calling size in UnitTypeDataTable, line 88"),"when calling new_KeyValueWrapper in UnitTypeDataTable, line 88"),"when calling add in UnitTypeDataTable, line 88")
call Nno(VB[tbS],ibS,"when calling add in UnitTypeDataTable, line 89")
set ybS=yZc(VB[tbS],"when calling size in UnitTypeDataTable, line 90")-1
set bbS=ybS
set MM=MM-1
set H0w=bbS
return H0w
endfunction
function Wyo takes integer jyo,integer xyo,string vyo returns integer
local integer myo
local integer Qyo
set w3[MM]=vyo
set MM=MM+1
if Qg[jyo]==0 then
if jyo==0 then
call Mau("Nullpointer exception when calling UnitTypeDataTable.addUnitType","when calling error in UnitTypeDataTable, line 78")
else
call Mau("Called UnitTypeDataTable.addUnitType on invalid object.","when calling error in UnitTypeDataTable, line 78")
endif
endif
set Qyo=pbS(jyo,xyo,"when calling addUnitType in UnitTypeDataTable, line 78")
set myo=Qyo
set MM=MM-1
set D0w=myo
return D0w
endfunction
function mKr takes integer xKr,integer vKr returns boolean
return mwu(xKr,vKr)
endfunction
function sbS takes integer KlS,integer LlS,string XlS returns nothing
local integer ClS
local integer VlS
local integer BlS
local integer NlS
local integer MlS
local integer wbS
local integer ubS
local integer rbS
set w3[MM]=XlS
set MM=MM+1
call Rgo(0,LlS,"when calling readByte in UnitTypeDataTable, line 110")
set ubS=inw
set NB[KlS]=ubS
set MB[KlS]=mKr(NB[KlS],0)
set wN[KlS]=mKr(NB[KlS],1)
set rbS=CKr(LlS,KlS,"when calling readUnitTypeDataTableIndex in UnitTypeDataTable, line 115")
set VlS=rbS
set ClS=VlS
set BlS=0
set NlS=ClS-1
loop
exitwhen BlS>NlS
set wbS=InS(BB[KlS],"when calling new_UnitTypeData in UnitTypeDataTable, line 117")
call Oeo(wbS,LlS,"when calling deserialize in UnitTypeDataTable, line 117")
set MlS=wbS
call Wyo(KlS,MlS,"when calling addUnitType in UnitTypeDataTable, line 118")
set BlS=BlS+1
endloop
set MM=MM-1
endfunction
function yFc takes integer OFc,integer lFc,string bFc returns nothing
set w3[MM]=bFc
set MM=MM+1
if Qg[OFc]==0 then
if OFc==0 then
call Mau("Nullpointer exception when calling DataSerializable.deserialize","when calling error in DataInterfaces, line 26")
else
call Mau("Called DataSerializable.deserialize on invalid object.","when calling error in DataInterfaces, line 26")
endif
endif
if Qg[OFc]<=722 then
if Qg[OFc]<=719 then
if Qg[OFc]<=717 then
if Qg[OFc]<=715 then
call fgs(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
else
call cCs(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
endif
elseif Qg[OFc]<=718 then
call JOt(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
else
call Set(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
endif
elseif Qg[OFc]<=721 then
if Qg[OFc]<=720 then
call dhs(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
else
call J_S(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
endif
else
call wbt(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
endif
elseif Qg[OFc]<=725 then
if Qg[OFc]<=724 then
if Qg[OFc]<=723 then
call xVs(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
else
call m3i(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
endif
else
call y9S(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
endif
elseif Qg[OFc]<=727 then
if Qg[OFc]<=726 then
call o0S(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
else
call dpS(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
endif
else
call sbS(OFc,lFc,"when calling deserialize in DataInterfaces, line 26")
endif
set MM=MM-1
endfunction
function dot takes integer yot,integer pot,integer eot,string qot returns nothing
local integer aot
set w3[MM]=qot
set MM=MM+1
if pot==1 then
call MCc(tH[yot],3,iH[yot],"when calling finishLoad in PersistableData, line 141")
else
set aot=EQc(eot,"when calling readInt in PersistableData, line 143")
if aot==0 then
if ea!=VD[tH[yot]]then
call yFc(tH[yot],eot,"when calling deserialize in PersistableData, line 147")
endif
call MCc(tH[yot],0,iH[yot],"when calling finishLoad in PersistableData, line 148")
else
call MCc(tH[yot],aot,iH[yot],"when calling finishLoad in PersistableData, line 150")
endif
endif
set MM=MM-1
endfunction
function swt takes integer M_t,integer wwt,integer uwt,string rwt returns nothing
set w3[MM]=rwt
set MM=MM+1
call Mau("Network: did not specify any callback function","when calling error in NetworkData, line 244")
set MM=MM-1
endfunction
function jKc takes integer gKc,integer hKc,integer FKc,string kKc returns nothing
set w3[MM]=kKc
set MM=MM+1
if Sk[gKc]==0 then
if gKc==0 then
call Mau("Nullpointer exception when calling NetworkFinishedCallback.onFinish","when calling error in NetworkData, line 199")
else
call Mau("Called NetworkFinishedCallback.onFinish on invalid object.","when calling error in NetworkData, line 199")
endif
endif
if Sk[gKc]<=1409 then
call swt(gKc,hKc,FKc,"when calling onFinish_Network_NetworkData in NetworkData, line 199")
else
call dot(gKc,hKc,FKc,"when calling onFinish_start_Persistable_PersistableData in NetworkData, line 199")
endif
set MM=MM-1
endfunction
function fIs takes integer dIs returns nothing
set SU[dIs]=0
set cU[dIs]=0
set oU[dIs]=0
set OU[dIs]=0
set lU[dIs]=0
set bU[dIs]=0
set yU[dIs]=0
set pU[dIs]=0
endfunction
function FIs takes integer RIs,integer TIs,integer YIs,integer GIs,integer gIs,integer hIs returns nothing
call fIs(RIs)
set iU[RIs]=TIs
set lU[RIs]=YIs
set bU[RIs]=GIs
set yU[RIs]=gIs
set pU[RIs]=hIs
endfunction
function nkS takes string qkS returns integer
local integer akS
set w3[MM]=qkS
set MM=MM+1
if gY==0 then
if hY<32768 then
set hY=hY+1
set akS=hY
set FY[akS]=713
else
call Mau("Out of memory: Could not create HashReader.","when calling error in HashData, line 77")
set akS=0
endif
else
set gY=gY-1
set akS=GY[gY]
set FY[akS]=713
endif
set MM=MM-1
return akS
endfunction
function cUs takes integer wUs,integer uUs,integer rUs,integer sUs,integer tUs,string iUs returns integer
local integer SUs
set w3[MM]=iUs
set MM=MM+1
set SUs=nkS("when calling alloc_HashReader in HashData, line 90")
call FIs(SUs,wUs,uUs,rUs,sUs,tUs)
set MM=MM-1
return SUs
endfunction
function lPs takes integer cPs,string oPs returns integer
local integer OPs
set w3[MM]=oPs
set MM=MM+1
set OPs=cUs(eU[cPs],qU[cPs],aU[cPs],nU[cPs],dU[cPs],"when calling new_HashReader in HashData, line 46")
set eU[cPs]=0
call WWc(cPs,"when calling dispatch_HashWriter_destroyHashWriter in HashData, line 48")
set MM=MM-1
return OPs
endfunction
function lEc takes integer cEc,string oEc returns integer
local integer OEc
set w3[MM]=oEc
set MM=MM+1
if vY[cEc]==0 then
if cEc==0 then
call Mau("Nullpointer exception when calling HashWriter.intoReader","when calling error in HashData, line 45")
else
call Mau("Called HashWriter.intoReader on invalid object.","when calling error in HashData, line 45")
endif
endif
set OEc=lPs(cEc,"when calling intoReader in HashData, line 45")
set MM=MM-1
return OEc
endfunction
function bQS takes string OQS returns integer
local integer lQS
set w3[MM]=OQS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set lQS=IY
set PY[lQS]=1380
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 387")
set lQS=0
endif
else
set UY=UY-1
set lQS=ZY[UY]
set PY[lQS]=1380
endif
set MM=MM-1
return lQS
endfunction
function eQS takes string yQS returns integer
local integer pQS
set w3[MM]=yQS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set pQS=HY
set JY[pQS]=1344
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 387")
set pQS=0
endif
else
set DY=DY-1
set pQS=AY[DY]
set JY[pQS]=1344
endif
set MM=MM-1
return pQS
endfunction
function j9t takes integer Y9t,string G9t returns nothing
local integer g9t
local integer h9t
local integer F9t
local integer k9t
set w3[MM]=G9t
set MM=MM+1
set F9t=aq
set g9t=bQS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 387")
set DA[g9t]=Y9t
set k9t=g9t
set h9t=eQS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 387")
set HA[h9t]=Y9t
call rdu(F9t,k9t,h9t,"when calling executeWhile in NetworkData, line 387")
set MM=MM-1
endfunction
function lKc takes integer oKc,string OKc returns nothing
set w3[MM]=OKc
set MM=MM+1
if rk[oKc]==0 then
if oKc==0 then
call Mau("Nullpointer exception when calling Network.readStrings","when calling error in NetworkData, line 386")
else
call Mau("Called Network.readStrings on invalid object.","when calling error in NetworkData, line 386")
endif
endif
call j9t(oKc,"when calling readStrings in NetworkData, line 386")
set MM=MM-1
endfunction
function U7t takes integer E7t,string Z7t returns nothing
set w3[MM]=Z7t
set MM=MM+1
call jKc(fA[E7t],1,0,"when calling onFinish in NetworkData, line 281")
call RJc(E7t,"when calling dispatch_Network_destroyNetwork in NetworkData, line 282")
set MM=MM-1
endfunction
function mJc takes integer xJc,string vJc returns nothing
set w3[MM]=vJc
set MM=MM+1
if rk[xJc]==0 then
if xJc==0 then
call Mau("Nullpointer exception when calling Network.abort","when calling error in NetworkData, line 279")
else
call Mau("Called Network.abort on invalid object.","when calling error in NetworkData, line 279")
endif
endif
call U7t(xJc,"when calling abort in NetworkData, line 279")
set MM=MM-1
endfunction
function POc takes string UOc returns integer
local integer IOc
set w3[MM]=UOc
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set IOc=HY
set JY[IOc]=1352
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_StringEncoder_StringEncoder.","when calling error in StringEncoder, line 112")
set IOc=0
endif
else
set DY=DY-1
set IOc=AY[DY]
set JY[IOc]=1352
endif
set MM=MM-1
return IOc
endfunction
function ZOc takes string WOc returns integer
local integer EOc
set w3[MM]=WOc
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set EOc=IY
set PY[EOc]=1388
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_StringEncoder_StringEncoder.","when calling error in StringEncoder, line 112")
set EOc=0
endif
else
set UY=UY-1
set EOc=ZY[UY]
set PY[EOc]=1388
endif
set MM=MM-1
return EOc
endfunction
function VNi takes integer HNi,string JNi returns nothing
local integer KNi
local integer LNi
local integer XNi
local integer CNi
set w3[MM]=JNi
set MM=MM+1
set MX[HNi]=lEc(NX[HNi],"when calling intoReader in StringEncoder, line 110")
set NX[HNi]=0
set XNi=aq
set KNi=ZOc("when calling alloc_LimitedExecuteCondition_executeWhile_StringEncoder_StringEncoder in StringEncoder, line 112")
set bC[KNi]=HNi
set CNi=KNi
set LNi=POc("when calling alloc_LimitedExecuteAction_executeWhile_StringEncoder_StringEncoder in StringEncoder, line 112")
set yC[LNi]=HNi
call rdu(XNi,CNi,LNi,"when calling executeWhile in StringEncoder, line 112")
set uC[HNi]=lEc(wC[HNi],"when calling intoReader in StringEncoder, line 113")
set wC[HNi]=0
set MM=MM-1
endfunction
function qro takes integer pro,string ero returns nothing
set w3[MM]=ero
set MM=MM+1
if ev[pro]==0 then
if pro==0 then
call Mau("Nullpointer exception when calling StringEncoder.decode","when calling error in StringEncoder, line 109")
else
call Mau("Called StringEncoder.decode on invalid object.","when calling error in StringEncoder, line 109")
endif
endif
call VNi(pro,"when calling decode in StringEncoder, line 109")
set MM=MM-1
endfunction
function MmS takes string BmS returns integer
local integer NmS
set w3[MM]=BmS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set NmS=IY
set PY[NmS]=1378
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 375")
set NmS=0
endif
else
set UY=UY-1
set NmS=ZY[UY]
set PY[NmS]=1378
endif
set MM=MM-1
return NmS
endfunction
function rQS takes string wQS returns integer
local integer uQS
set w3[MM]=wQS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set uQS=HY
set JY[uQS]=1342
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 375")
set uQS=0
endif
else
set DY=DY-1
set uQS=AY[DY]
set JY[uQS]=1342
endif
set MM=MM-1
return uQS
endfunction
function e9t takes integer o9t,string O9t returns nothing
local integer l9t
local integer b9t
local integer y9t
local integer p9t
set w3[MM]=O9t
set MM=MM+1
set y9t=aq
set l9t=MmS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 375")
set UA[l9t]=o9t
set p9t=l9t
set b9t=rQS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 375")
set IA[b9t]=o9t
call rdu(y9t,p9t,b9t,"when calling executeWhile in NetworkData, line 375")
set MM=MM-1
endfunction
function tKc takes integer rKc,string sKc returns nothing
set w3[MM]=sKc
set MM=MM+1
if rk[rKc]==0 then
if rKc==0 then
call Mau("Nullpointer exception when calling Network.readBooleans","when calling error in NetworkData, line 374")
else
call Mau("Called Network.readBooleans on invalid object.","when calling error in NetworkData, line 374")
endif
endif
call e9t(rKc,"when calling readBooleans in NetworkData, line 374")
set MM=MM-1
endfunction
function nIs takes integer aIs returns nothing
set SU[aIs]=0
set cU[aIs]=0
set oU[aIs]=0
set OU[aIs]=0
endfunction
function vWc takes integer jWc,string xWc returns nothing
set w3[MM]=xWc
set MM=MM+1
if FY[jWc]==0 then
if jWc==0 then
call Mau("Nullpointer exception when calling HashReader.reset","when calling error in HashData, line 222")
else
call Mau("Called HashReader.reset on invalid object.","when calling error in HashData, line 222")
endif
endif
call nIs(jWc)
set MM=MM-1
endfunction
function U9t takes integer x9t,string v9t returns nothing
local integer m9t
local integer Q9t
local integer W9t
local integer E9t
local integer Z9t
set w3[MM]=v9t
set MM=MM+1
if not PWu(cA[x9t])then
call mJc(x9t,"when calling abort in NetworkData, line 424")
set MM=MM-1
return
endif
if not pA[x9t]then
call IJc(x9t,"when calling receiveMetadata in NetworkData, line 429")
endif
if ea!=cA[x9t]then
call KJc(x9t,"when calling readInts in NetworkData, line 434")
call NJc(x9t,"when calling readReals in NetworkData, line 435")
call tKc(x9t,"when calling readBooleans in NetworkData, line 436")
call lKc(x9t,"when calling readStrings in NetworkData, line 437")
endif
set dA[x9t]=dA[x9t]+1
if dA[x9t]<yA[x9t]then
set m9t=RQS("when calling alloc_ForForceCallback_execute_Network_NetworkData in NetworkData, line 443")
set KA[m9t]=x9t
call Inu(m9t,"when calling execute in NetworkData, line 443")
else
if ea!=cA[x9t]then
call qro(uA[x9t],"when calling decode in NetworkData, line 448")
set E9t=aq
set Q9t=GQS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 450")
set LA[Q9t]=x9t
set Z9t=Q9t
set W9t=FQS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 450")
set XA[W9t]=x9t
call rdu(E9t,Z9t,W9t,"when calling executeWhile in NetworkData, line 450")
set wA[x9t]=lEc(MP[x9t],"when calling intoReader in NetworkData, line 453")
set MP[x9t]=0
endif
call vWc(wA[x9t],"when calling reset in NetworkData, line 456")
call jKc(fA[x9t],0,wA[x9t],"when calling onFinish in NetworkData, line 458")
call RJc(x9t,"when calling dispatch_Network_destroyNetwork in NetworkData, line 459")
endif
set MM=MM-1
endfunction
function aKc takes integer eKc,string qKc returns nothing
set w3[MM]=qKc
set MM=MM+1
if rk[eKc]==0 then
if eKc==0 then
call Mau("Nullpointer exception when calling Network.receiveRound","when calling error in NetworkData, line 422")
else
call Mau("Called Network.receiveRound on invalid object.","when calling error in NetworkData, line 422")
endif
endif
call U9t(eKc,"when calling receiveRound in NetworkData, line 422")
set MM=MM-1
endfunction
function A_t takes integer I_t,string P_t returns nothing
set w3[MM]=P_t
set MM=MM+1
call aKc(JA[I_t],"when calling receiveRound in NetworkData, line 420")
set MM=MM-1
endfunction
function HvS takes integer AvS,string DvS returns nothing
set w3[MM]=DvS
set MM=MM+1
if VF[AvS]==0 then
call Mau("Double free: object of type FileReader","when calling error in MultifileIO, line 192")
else
set CF=CF+1
set VF[AvS]=0
endif
set MM=MM-1
endfunction
function FjS takes integer gjS,string hjS returns nothing
set w3[MM]=hjS
set MM=MM+1
if gh[gjS]==0 then
call Mau("Double free: object of type TimedIOTaskExecutor","when calling error in IOTaskExecutor, line 92")
else
set Gh=Gh+1
set gh[gjS]=0
endif
set MM=MM-1
endfunction
function njS takes integer qjS,string ajS returns nothing
set w3[MM]=ajS
set MM=MM+1
if jh[qjS]==0 then
call Mau("Double free: object of type IOTask","when calling error in IOTaskExecutor, line 10")
else
set hh[Fh]=qjS
set Fh=Fh+1
set jh[qjS]=0
endif
set MM=MM-1
endfunction
function QJs takes integer vJs,string mJs returns nothing
set w3[MM]=mJs
set MM=MM+1
call njS(vJs,"when calling dealloc_IOTask in IOTaskExecutor, line 10")
set MM=MM-1
endfunction
function PUc takes integer UUc,string IUc returns nothing
set w3[MM]=IUc
set MM=MM+1
if jh[UUc]==0 then
if UUc==0 then
call Mau("Nullpointer exception when calling IOTask.IOTask","when calling error in IOTaskExecutor, line 10")
else
call Mau("Called IOTask.IOTask on invalid object.","when calling error in IOTaskExecutor, line 10")
endif
endif
call QJs(UUc,"when calling destroyIOTask in IOTaskExecutor, line 10")
set MM=MM-1
endfunction
function YJs takes integer dJs,string fJs returns nothing
local integer RJs
local integer TJs
set w3[MM]=fJs
set MM=MM+1
set RJs=x1s(hU[dJs],"when calling iterator in IOTaskExecutor, line 41")
loop
exitwhen not t1s(RJs)
set TJs=r1s(RJs)
call PUc(TJs,"when calling dispatch_IOTask_destroyIOTask in IOTaskExecutor, line 42")
endloop
call c1s(RJs,"when calling close in IOTaskExecutor, line 41")
call CAc(hU[dJs],"when calling dispatch_LinkedList_destroyLinkedList in IOTaskExecutor, line 43")
if FU[dJs]!=0 then
call PUc(FU[dJs],"when calling dispatch_IOTask_destroyIOTask in IOTaskExecutor, line 45")
endif
set MM=MM-1
endfunction
function NJs takes integer BJs returns nothing
set me=me-1
if BJs!=xe then
set WU[QU[BJs]]=WU[BJs]
else
set xe=WU[BJs]
endif
if BJs!=ve then
set QU[WU[BJs]]=QU[BJs]
else
set ve=QU[BJs]
endif
endfunction
function sIc takes integer uIc,string rIc returns nothing
set w3[MM]=rIc
set MM=MM+1
if gh[uIc]==0 then
if uIc==0 then
call Mau("Nullpointer exception when calling TimedIOTaskExecutor.remove","when calling error in LinkedListModule, line 37")
else
call Mau("Called TimedIOTaskExecutor.remove on invalid object.","when calling error in LinkedListModule, line 37")
endif
endif
call NJs(uIc)
set MM=MM-1
endfunction
function uKs takes integer MJs,string wKs returns nothing
set w3[MM]=wKs
set MM=MM+1
call sIc(MJs,"when calling remove in LinkedListModule, line 49")
call YJs(MJs,"when calling AbstractIOTaskExecutor_onDestroy in IOTaskExecutor, line 92")
set MM=MM-1
endfunction
function LJs takes integer JJs,string KJs returns nothing
set w3[MM]=KJs
set MM=MM+1
call uKs(JJs,"when calling TimedIOTaskExecutor_onDestroy in IOTaskExecutor, line 91")
call FjS(JJs,"when calling dealloc_TimedIOTaskExecutor in IOTaskExecutor, line 91")
set MM=MM-1
endfunction
function GjS takes integer TjS,string YjS returns nothing
set w3[MM]=YjS
set MM=MM+1
if gh[TjS]==0 then
call Mau("Double free: object of type InstantIOTaskExecutor","when calling error in IOTaskExecutor, line 77")
else
set Gh=Gh+1
set gh[TjS]=0
endif
set MM=MM-1
endfunction
function HJs takes integer AJs,string DJs returns nothing
set w3[MM]=DJs
set MM=MM+1
call YJs(AJs,"when calling AbstractIOTaskExecutor_onDestroy in IOTaskExecutor, line 77")
set MM=MM-1
endfunction
function PJs takes integer UJs,string IJs returns nothing
set w3[MM]=IJs
set MM=MM+1
call HJs(UJs,"when calling InstantIOTaskExecutor_onDestroy in IOTaskExecutor, line 76")
call GjS(UJs,"when calling dealloc_InstantIOTaskExecutor in IOTaskExecutor, line 76")
set MM=MM-1
endfunction
function RjS takes integer djS,string fjS returns nothing
set w3[MM]=fjS
set MM=MM+1
if gh[djS]==0 then
call Mau("Double free: object of type IOTaskExecutor","when calling error in IOTaskExecutor, line 19")
else
set Gh=Gh+1
set gh[djS]=0
endif
set MM=MM-1
endfunction
function ZJs takes integer WJs,string EJs returns nothing
set w3[MM]=EJs
set MM=MM+1
call RjS(WJs,"when calling dealloc_IOTaskExecutor in IOTaskExecutor, line 19")
set MM=MM-1
endfunction
function ojS takes integer SjS,string cjS returns nothing
set w3[MM]=cjS
set MM=MM+1
if gh[SjS]==0 then
call Mau("Double free: object of type AbstractIOTaskExecutor","when calling error in IOTaskExecutor, line 35")
else
set Gh=Gh+1
set gh[SjS]=0
endif
set MM=MM-1
endfunction
function yJs takes integer lJs,string bJs returns nothing
set w3[MM]=bJs
set MM=MM+1
call YJs(lJs,"when calling AbstractIOTaskExecutor_onDestroy in IOTaskExecutor, line 40")
call ojS(lJs,"when calling dealloc_AbstractIOTaskExecutor in IOTaskExecutor, line 40")
set MM=MM-1
endfunction
function LUc takes integer JUc,string KUc returns nothing
set w3[MM]=KUc
set MM=MM+1
if gh[JUc]==0 then
if JUc==0 then
call Mau("Nullpointer exception when calling IOTaskExecutor.IOTaskExecutor","when calling error in IOTaskExecutor, line 19")
else
call Mau("Called IOTaskExecutor.IOTaskExecutor on invalid object.","when calling error in IOTaskExecutor, line 19")
endif
endif
if gh[JUc]<=1232 then
if gh[JUc]<=1231 then
call ZJs(JUc,"when calling destroyIOTaskExecutor in IOTaskExecutor, line 19")
else
call yJs(JUc,"when calling destroyAbstractIOTaskExecutor in IOTaskExecutor, line 19")
endif
elseif gh[JUc]<=1233 then
call PJs(JUc,"when calling destroyInstantIOTaskExecutor in IOTaskExecutor, line 19")
else
call LJs(JUc,"when calling destroyTimedIOTaskExecutor in IOTaskExecutor, line 19")
endif
set MM=MM-1
endfunction
function okS takes integer SkS,string ckS returns nothing
set w3[MM]=ckS
set MM=MM+1
if qG[SkS]==0 then
call Mau("Double free: object of type HashBuffer","when calling error in HashBuffer, line 10")
else
set yG[pG]=SkS
set pG=pG+1
set qG[SkS]=0
endif
set MM=MM-1
endfunction
function aqs takes integer qqs returns nothing
endfunction
function sZs takes integer uZs,string rZs returns nothing
set w3[MM]=rZs
set MM=MM+1
call Rio(XZ[uZs],"when calling dispatch_Table_destroyTable in HashBuffer, line 28")
call aqs(uZs)
set MM=MM-1
endfunction
function kEs takes integer hEs,string FEs returns nothing
set w3[MM]=FEs
set MM=MM+1
call sZs(hEs,"when calling HashBuffer_onDestroy in HashBuffer, line 27")
call okS(hEs,"when calling dealloc_HashBuffer in HashBuffer, line 27")
set MM=MM-1
endfunction
function Xvc takes integer Kvc,string Lvc returns nothing
set w3[MM]=Lvc
set MM=MM+1
if qG[Kvc]==0 then
if Kvc==0 then
call Mau("Nullpointer exception when calling HashBuffer.HashBuffer","when calling error in HashBuffer, line 10")
else
call Mau("Called HashBuffer.HashBuffer on invalid object.","when calling error in HashBuffer, line 10")
endif
endif
call kEs(Kvc,"when calling destroyHashBuffer in HashBuffer, line 10")
set MM=MM-1
endfunction
function Q6t takes integer v6t,string m6t returns nothing
set w3[MM]=m6t
set MM=MM+1
call Xvc(IP[v6t],"when calling dispatch_HashBuffer_destroyHashBuffer in MultifileIO, line 67")
call LUc(DP[v6t],"when calling dispatch_IOTaskExecutor_destroyIOTaskExecutor in MultifileIO, line 68")
set MM=MM-1
endfunction
function u7t takes integer M6t,string w7t returns nothing
set w3[MM]=w7t
set MM=MM+1
call Q6t(M6t,"when calling AbstractFile_onDestroy in MultifileIO, line 192")
set MM=MM-1
endfunction
function Z6t takes integer W6t,string E6t returns nothing
set w3[MM]=E6t
set MM=MM+1
call u7t(W6t,"when calling FileReader_onDestroy in MultifileIO, line 191")
call HvS(W6t,"when calling dealloc_FileReader in MultifileIO, line 191")
set MM=MM-1
endfunction
function MHc takes integer BHc,string NHc returns nothing
set w3[MM]=NHc
set MM=MM+1
if VF[BHc]==0 then
if BHc==0 then
call Mau("Nullpointer exception when calling FileReader.FileReader","when calling error in MultifileIO, line 192")
else
call Mau("Called FileReader.FileReader on invalid object.","when calling error in MultifileIO, line 192")
endif
endif
call Z6t(BHc,"when calling destroyFileReader in MultifileIO, line 192")
set MM=MM-1
endfunction
function iZS takes string sZS returns integer
local integer tZS
set w3[MM]=sZS
set MM=MM+1
if dk==0 then
if fk<32768 then
set fk=fk+1
set tZS=fk
set Rk[tZS]=1407
else
call Mau("Out of memory: Could not create NetworkFinishedCallback_start_onSynced_PersistentStore_Persistable.","when calling error in Persistable, line 172")
set tZS=0
endif
else
set dk=dk-1
set tZS=nk[dk]
set Rk[tZS]=1407
endif
set MM=MM-1
return tZS
endfunction
function XEs takes integer LEs returns integer
return VZ[LEs]+1
endfunction
function Dmc takes integer Imc,string Pmc returns integer
local integer Amc
set w3[MM]=Pmc
set MM=MM+1
if qG[Imc]==0 then
if Imc==0 then
call Mau("Nullpointer exception when calling HashBuffer.getRealCount","when calling error in HashBuffer, line 128")
else
call Mau("Called HashBuffer.getRealCount on invalid object.","when calling error in HashBuffer, line 128")
endif
endif
set Amc=XEs(Imc)
set MM=MM-1
return Amc
endfunction
function HQS takes string AQS returns integer
local integer DQS
set w3[MM]=AQS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set DQS=HY
set JY[DQS]=1326
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 282")
set DQS=0
endif
else
set DY=DY-1
set DQS=AY[DY]
set JY[DQS]=1326
endif
set MM=MM-1
return DQS
endfunction
function Xst takes integer Hst,integer Jst,integer Kst,string Lst returns nothing
set w3[MM]=Lst
set MM=MM+1
call Mau("Network: did not specify any callback function","when calling error in Network, line 244")
set MM=MM-1
endfunction
function Dhr takes string Ihr,integer Phr,integer Ahr returns string
return SubString(Ihr,Phr,Ahr)
endfunction
function Ves takes integer Ces returns boolean
return XQ[Ces]==0
endfunction
function FRc takes integer GRc,string gRc returns boolean
local boolean hRc
set w3[MM]=gRc
set MM=MM+1
if qG[GRc]==0 then
if GRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.isValid","when calling error in BufferInterface, line 143")
else
call Mau("Called AbstractBuffer.isValid on invalid object.","when calling error in BufferInterface, line 143")
endif
endif
set hRc=Ves(GRc)
set MM=MM-1
return hRc
endfunction
function cNi takes integer SNi returns nothing
endfunction
function rOc takes integer wOc,string uOc returns nothing
set w3[MM]=uOc
set MM=MM+1
if lv[wOc]==0 then
call Mau("Double free: object of type ChunkElement","when calling error in StringBuffer, line 7")
else
set cv[ov]=wOc
set ov=ov+1
set lv[wOc]=0
endif
set MM=MM-1
endfunction
function lNi takes integer oNi,string ONi returns nothing
set w3[MM]=ONi
set MM=MM+1
call cNi(oNi)
call rOc(oNi,"when calling dealloc_ChunkElement in StringBuffer, line 7")
set MM=MM-1
endfunction
function Nuo takes integer Vuo,string Buo returns nothing
set w3[MM]=Buo
set MM=MM+1
if lv[Vuo]==0 then
if Vuo==0 then
call Mau("Nullpointer exception when calling ChunkElement.ChunkElement","when calling error in StringBuffer, line 7")
else
call Mau("Called ChunkElement.ChunkElement on invalid object.","when calling error in StringBuffer, line 7")
endif
endif
call lNi(Vuo,"when calling destroyChunkElement in StringBuffer, line 7")
set MM=MM-1
endfunction
function p4s takes integer y4s returns boolean
return TP[y4s]==0
endfunction
function gDc takes integer TDc,string YDc returns boolean
local boolean GDc
set w3[MM]=YDc
set MM=MM+1
if WF[TDc]==0 then
if TDc==0 then
call Mau("Nullpointer exception when calling LinkedList.isEmpty","when calling error in LinkedList, line 154")
else
call Mau("Called LinkedList.isEmpty on invalid object.","when calling error in LinkedList, line 154")
endif
endif
set GDc=p4s(TDc)
set MM=MM-1
return GDc
endfunction
function vZu takes string xZu returns nothing
call pZu(ea,3,xZu)
endfunction
function tqs takes integer wqs,integer uqs,string rqs,string sqs returns nothing
set w3[MM]=sqs
set MM=MM+1
set XQ[wqs]=uqs
if uqs==2 then
call Mau("Buffer: "+rqs,"when calling error in BufferInterface, line 127")
else
call vZu("Buffer: "+rqs)
endif
set MM=MM-1
endfunction
function lRc takes integer SRc,integer cRc,string oRc,string ORc returns nothing
set w3[MM]=ORc
set MM=MM+1
if qG[SRc]==0 then
if SRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.fail","when calling error in BufferInterface, line 123")
else
call Mau("Called AbstractBuffer.fail on invalid object.","when calling error in BufferInterface, line 123")
endif
endif
call tqs(SRc,cRc,oRc,"when calling fail in BufferInterface, line 123")
set MM=MM-1
endfunction
function r4s takes integer M1s,integer w4s,string u4s returns nothing
set w3[MM]=u4s
set MM=MM+1
set qP[eP[w4s]]=qP[w4s]
set eP[qP[w4s]]=eP[w4s]
call vAc(w4s,"when calling dispatch_LLEntry_destroyLLEntry in LinkedList, line 391")
set TP[M1s]=TP[M1s]-1
set MM=MM-1
endfunction
function VDc takes integer LDc,integer XDc,string CDc returns nothing
set w3[MM]=CDc
set MM=MM+1
if WF[LDc]==0 then
if LDc==0 then
call Mau("Nullpointer exception when calling LinkedList.removeEntry","when calling error in LinkedList, line 388")
else
call Mau("Called LinkedList.removeEntry on invalid object.","when calling error in LinkedList, line 388")
endif
endif
call r4s(LDc,XDc,"when calling removeEntry in LinkedList, line 388")
set MM=MM-1
endfunction
function N1s takes integer X1s,string C1s returns integer
local integer V1s
local integer B1s
set w3[MM]=C1s
set MM=MM+1
set V1s=qP[RP[X1s]]
set B1s=0
if V1s!=RP[X1s]then
set B1s=pP[V1s]
call VDc(X1s,V1s,"when calling removeEntry in LinkedList, line 97")
endif
set MM=MM-1
return B1s
endfunction
function oDc takes integer iDc,string SDc returns integer
local integer cDc
set w3[MM]=SDc
set MM=MM+1
if WF[iDc]==0 then
if iDc==0 then
call Mau("Nullpointer exception when calling LinkedList.dequeue","when calling error in LinkedList, line 92")
else
call Mau("Called LinkedList.dequeue on invalid object.","when calling error in LinkedList, line 92")
endif
endif
set cDc=N1s(iDc,"when calling dequeue in LinkedList, line 92")
set MM=MM-1
return cDc
endfunction
function cBi takes integer tBi,string iBi returns nothing
local integer SBi
set w3[MM]=iBi
set MM=MM+1
if gDc(JX[tBi],"when calling isEmpty in StringBuffer, line 116")then
call lRc(tBi,1,"reached EOF","when calling fail in StringBuffer, line 117")
set MM=MM-1
return
endif
set SBi=oDc(JX[tBi],"when calling dequeue in StringBuffer, line 120")
set KX[tBi]=KX[tBi]+CX[SBi]
call Nuo(SBi,"when calling dispatch_ChunkElement_destroyChunkElement in StringBuffer, line 122")
set MM=MM-1
endfunction
function Ruo takes integer duo,string fuo returns nothing
set w3[MM]=fuo
set MM=MM+1
if qG[duo]==0 then
if duo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.nextChunk","when calling error in StringBuffer, line 115")
else
call Mau("Called AbstractStringBuffer.nextChunk on invalid object.","when calling error in StringBuffer, line 115")
endif
endif
call cBi(duo,"when calling nextChunk in StringBuffer, line 115")
set MM=MM-1
endfunction
function Vhr takes string Xhr,integer Chr returns string
return SubString(Xhr,Chr,vhr(Xhr))
endfunction
function b4s takes integer l4s returns integer
return TP[l4s]
endfunction
function RDc takes integer nDc,string dDc returns integer
local integer fDc
set w3[MM]=dDc
set MM=MM+1
if WF[nDc]==0 then
if nDc==0 then
call Mau("Nullpointer exception when calling LinkedList.size","when calling error in LinkedList, line 150")
else
call Mau("Called LinkedList.size on invalid object.","when calling error in LinkedList, line 150")
endif
endif
set fDc=b4s(nDc)
set MM=MM-1
return fDc
endfunction
function VVi takes integer LVi,string XVi returns boolean
local boolean CVi
set w3[MM]=XVi
set MM=MM+1
set CVi=RDc(JX[LVi],"when calling size in StringBuffer, line 105")>0 or vhr(KX[LVi])>0
set MM=MM-1
return CVi
endfunction
function luo takes integer cuo,string ouo returns boolean
local boolean Ouo
set w3[MM]=ouo
set MM=MM+1
if qG[cuo]==0 then
if cuo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.isDataAvailable","when calling error in StringBuffer, line 104")
else
call Mau("Called AbstractStringBuffer.isDataAvailable on invalid object.","when calling error in StringBuffer, line 104")
endif
endif
set Ouo=VVi(cuo,"when calling isDataAvailable in StringBuffer, line 104")
set MM=MM-1
return Ouo
endfunction
function sBi takes integer uBi,string rBi returns nothing
set w3[MM]=rBi
set MM=MM+1
if not luo(uBi,"when calling isDataAvailable in StringBuffer, line 111")then
call lRc(uBi,1,"reached EOF","when calling fail in StringBuffer, line 112")
endif
set MM=MM-1
endfunction
function nuo takes integer quo,string auo returns nothing
set w3[MM]=auo
set MM=MM+1
if qG[quo]==0 then
if quo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.checkDataAvailable","when calling error in StringBuffer, line 110")
else
call Mau("Called AbstractStringBuffer.checkDataAvailable on invalid object.","when calling error in StringBuffer, line 110")
endif
endif
call sBi(quo,"when calling checkDataAvailable in StringBuffer, line 110")
set MM=MM-1
endfunction
function YBi takes integer dBi,integer fBi,string RBi returns string
local string TBi
set w3[MM]=RBi
set MM=MM+1
if Ba and fBi>xR then
call lRc(dBi,2,"trying to pop a string above max size","when calling fail in StringBuffer, line 161")
endif
if fBi==0 then
set MM=MM-1
return""
endif
call nuo(dBi,"when calling checkDataAvailable in StringBuffer, line 167")
loop
exitwhen not(FRc(dBi,"when calling isValid in StringBuffer, line 169")and vhr(KX[dBi])<fBi)
call Ruo(dBi,"when calling nextChunk in StringBuffer, line 170")
endloop
if FRc(dBi,"when calling isValid in StringBuffer, line 172")then
set TBi=Dhr(KX[dBi],0,fBi)
set KX[dBi]=Vhr(KX[dBi],fBi)
set MM=MM-1
return TBi
else
set MM=MM-1
return null
endif
endfunction
function Euo takes integer vuo,integer muo,string Quo returns string
local string Wuo
set w3[MM]=Quo
set MM=MM+1
if qG[vuo]==0 then
if vuo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.popString","when calling error in StringBuffer, line 159")
else
call Mau("Called AbstractStringBuffer.popString on invalid object.","when calling error in StringBuffer, line 159")
endif
endif
set Wuo=YBi(vuo,muo,"when calling popString in StringBuffer, line 159")
set MM=MM-1
return Wuo
endfunction
function Nmu takes string Cmu returns integer
local integer Vmu=4
local string Bmu=Cmu
if Bmu=="i" then
set Vmu=0
elseif Bmu=="r" then
set Vmu=1
elseif Bmu=="b" then
set Vmu=3
elseif Bmu=="s" then
set Vmu=2
endif
return Vmu
endfunction
function Wit takes integer vit,string mit returns integer
local integer Qit
set w3[MM]=mit
set MM=MM+1
set Qit=Nmu(Euo(vit,1,"when calling popString in OrderedStringBuffer, line 96"))
if Qit==4 then
call lRc(vit,3,"malformed input","when calling fail in OrderedStringBuffer, line 98")
endif
set MM=MM-1
return Qit
endfunction
function AXc takes integer UXc,string IXc returns integer
local integer PXc
set w3[MM]=IXc
set MM=MM+1
if qG[UXc]==0 then
if UXc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.popTypeIdentifier","when calling error in OrderedStringBuffer, line 95")
else
call Mau("Called OrderedStringBuffer.popTypeIdentifier on invalid object.","when calling error in OrderedStringBuffer, line 95")
endif
endif
set PXc=Wit(UXc,"when calling popTypeIdentifier in OrderedStringBuffer, line 95")
set MM=MM-1
return PXc
endfunction
function Xmu takes integer Hmu,string Jmu returns string
local string Kmu
local integer Lmu
set w3[MM]=Jmu
set MM=MM+1
set Kmu=""
set Lmu=Hmu
if Lmu==0 then
set Kmu="i"
elseif Lmu==1 then
set Kmu="r"
elseif Lmu==3 then
set Kmu="b"
elseif Lmu==2 then
set Kmu="s"
else
call Mau("ValueType: INVALID should never be serializable","when calling error in OrderedStringBuffer, line 26")
endif
set MM=MM-1
return Kmu
endfunction
function Pit takes integer Eit,integer Zit,string Uit returns boolean
local integer Iit
set w3[MM]=Uit
set MM=MM+1
set Iit=AXc(Eit,"when calling popTypeIdentifier in OrderedStringBuffer, line 103")
if not FRc(Eit,"when calling isValid in OrderedStringBuffer, line 105")then
set MM=MM-1
return false
endif
if Iit!=Zit then
call lRc(Eit,4,"tried to read "+Xmu(Zit,"when calling toString in OrderedStringBuffer, line 108")+" but was "+Xmu(Iit,"when calling toString in OrderedStringBuffer, line 108"),"when calling fail in OrderedStringBuffer, line 108")
set MM=MM-1
return false
endif
set MM=MM-1
return true
endfunction
function LXc takes integer DXc,integer HXc,string JXc returns boolean
local boolean KXc
set w3[MM]=JXc
set MM=MM+1
if qG[DXc]==0 then
if DXc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.checkType","when calling error in OrderedStringBuffer, line 102")
else
call Mau("Called OrderedStringBuffer.checkType on invalid object.","when calling error in OrderedStringBuffer, line 102")
endif
endif
set KXc=Pit(DXc,HXc,"when calling checkType in OrderedStringBuffer, line 102")
set MM=MM-1
return KXc
endfunction
function Hsu takes integer Psu returns string
local integer Dsu=Psu
local string Asu
if Dsu==0 then
set Asu="READ"
elseif Dsu==1 then
set Asu="WRITE"
elseif Dsu==2 then
set Asu="READ_WRITE"
else
set Asu="LOCKED"
endif
return Asu
endfunction
function Xes takes integer Les returns boolean
return LQ[Les]==0 or LQ[Les]==2
endfunction
function YRc takes integer fRc,string RRc returns boolean
local boolean TRc
set w3[MM]=RRc
set MM=MM+1
if qG[fRc]==0 then
if fRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.isReadable","when calling error in BufferInterface, line 140")
else
call Mau("Called AbstractBuffer.isReadable on invalid object.","when calling error in BufferInterface, line 140")
endif
endif
set TRc=Xes(fRc)
set MM=MM-1
return TRc
endfunction
function Mes takes integer Bes,string Nes returns nothing
set w3[MM]=Nes
set MM=MM+1
if Ba and(not FRc(Bes,"when calling isValid in BufferInterface, line 120"))then
call Mau("Buffer: trying to use a failed buffer","when calling error in BufferInterface, line 121")
endif
set MM=MM-1
endfunction
function iRc takes integer sRc,string tRc returns nothing
set w3[MM]=tRc
set MM=MM+1
if qG[sRc]==0 then
if sRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.checkFailed","when calling error in BufferInterface, line 119")
else
call Mau("Called AbstractBuffer.checkFailed on invalid object.","when calling error in BufferInterface, line 119")
endif
endif
call Mes(sRc,"when calling checkFailed in BufferInterface, line 119")
set MM=MM-1
endfunction
function lqs takes integer oqs,string Oqs returns nothing
set w3[MM]=Oqs
set MM=MM+1
call iRc(oqs,"when calling checkFailed in BufferInterface, line 166")
if Ba and(not YRc(oqs,"when calling isReadable in BufferInterface, line 167"))then
call Mau("Buffer: cannot read from buffer with mode "+Hsu(LQ[oqs]),"when calling error in BufferInterface, line 168")
endif
set MM=MM-1
endfunction
function QRc takes integer vRc,string mRc returns nothing
set w3[MM]=mRc
set MM=MM+1
if qG[vRc]==0 then
if vRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.checkRead","when calling error in BufferInterface, line 165")
else
call Mau("Called AbstractBuffer.checkRead on invalid object.","when calling error in BufferInterface, line 165")
endif
endif
call lqs(vRc,"when calling checkRead in BufferInterface, line 165")
set MM=MM-1
endfunction
function Ltt takes integer Dtt,string Htt returns boolean
local boolean Jtt
local boolean Ktt
set w3[MM]=Htt
set MM=MM+1
call QRc(Dtt,"when calling checkRead in OrderedStringBuffer, line 166")
if LXc(Dtt,3,"when calling checkType in OrderedStringBuffer, line 167")then
set Jtt=Euo(Dtt,1,"when calling popString in OrderedStringBuffer, line 167")=="1"
else
set Jtt=false
endif
set Ktt=Jtt
set MM=MM-1
return Ktt
endfunction
function L5S takes integer J5S,integer K5S returns boolean
return jTu(VR,J5S,K5S)
endfunction
function Zio takes integer mio,integer Qio,string Wio returns boolean
local boolean Eio
set w3[MM]=Wio
set MM=MM+1
if Yh[mio]==0 then
if mio==0 then
call Mau("Nullpointer exception when calling Table.hasBoolean","when calling error in Table, line 15")
else
call Mau("Called Table.hasBoolean on invalid object.","when calling error in Table, line 15")
endif
endif
set Eio=L5S(mio,Qio)
set MM=MM-1
return Eio
endfunction
function uEs takes integer NWs,string MWs returns boolean
local boolean wEs
set w3[MM]=MWs
set MM=MM+1
call QRc(NWs,"when calling checkRead in HashBuffer, line 75")
set uU[NWs]=uU[NWs]+1
if not Zio(XZ[NWs],uU[NWs],"when calling hasBoolean in HashBuffer, line 77")then
call Mau("HashBuffer: trying to read non-present boolean at pos#"+tgu(uU[NWs]),"when calling error in HashBuffer, line 78")
endif
set wEs=dSo(XZ[NWs],uU[NWs],"when calling loadBoolean in HashBuffer, line 79")
set MM=MM-1
return wEs
endfunction
function DRc takes integer IRc,string PRc returns boolean
local boolean ARc
set w3[MM]=PRc
set MM=MM+1
if qG[IRc]==0 then
if IRc==0 then
call Mau("Nullpointer exception when calling Buffer.readBoolean","when calling error in BufferInterface, line 61")
else
call Mau("Called Buffer.readBoolean on invalid object.","when calling error in BufferInterface, line 61")
endif
endif
if qG[IRc]<=664 then
set ARc=Ltt(IRc,"when calling readBoolean in BufferInterface, line 61")
else
set ARc=uEs(IRc,"when calling readBoolean in BufferInterface, line 61")
endif
set MM=MM-1
return ARc
endfunction
function oZS takes string SZS returns integer
local integer cZS
set w3[MM]=SZS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set cZS=NY
set MY[cZS]=797
else
call Mau("Out of memory: Could not create ForForceCallback_try_start_onSynced_PersistentStore_Persistable.","when calling error in Persistable, line 183")
set cZS=0
endif
else
set BY=BY-1
set cZS=VY[BY]
set MY[cZS]=797
endif
set MM=MM-1
return cZS
endfunction
function BVc takes integer CVc,integer VVc returns nothing
endfunction
function Tot takes integer fot,integer Rot returns nothing
endfunction
function JVc takes integer AVc,integer DVc,string HVc returns nothing
set w3[MM]=HVc
set MM=MM+1
if aG[AVc]==0 then
if AVc==0 then
call Mau("Nullpointer exception when calling Persistable.onLoaded","when calling error in Persistable, line 79")
else
call Mau("Called Persistable.onLoaded on invalid object.","when calling error in Persistable, line 79")
endif
endif
call Tot(AVc,DVc)
set MM=MM-1
endfunction
function PVc takes integer IVc returns nothing
endfunction
function jot takes integer got,integer hot,integer Fot,string kot returns nothing
set w3[MM]=kot
set MM=MM+1
if hot!=0 then
call PVc(cH[got])
endif
if Fot!=0 then
call BVc(Fot,hot)
endif
call JVc(cH[got],hot,"when calling onLoaded in Persistable, line 132")
set MM=MM-1
endfunction
function tBc takes integer wBc,integer uBc,integer rBc,string sBc returns nothing
set w3[MM]=sBc
set MM=MM+1
if Ak[wBc]==0 then
if wBc==0 then
call Mau("Nullpointer exception when calling PersistentStore.finishWithStatus","when calling error in Persistable, line 126")
else
call Mau("Called PersistentStore.finishWithStatus on invalid object.","when calling error in Persistable, line 126")
endif
endif
call jot(wBc,uBc,rBc,"when calling finishWithStatus in Persistable, line 126")
set MM=MM-1
endfunction
function cOt takes integer Mot,integer wOt,integer uOt,string rOt returns nothing
local integer sOt
local boolean tOt
local boolean iOt
local integer SOt
set w3[MM]=rOt
set MM=MM+1
set sOt=0
if wOt==1 then
set sOt=4
else
set tOt=DRc(uOt,"when calling readBoolean in Persistable, line 179")
if tOt then
set SOt=oZS("when calling alloc_ForForceCallback_try_start_onSynced_PersistentStore_Persistable in Persistable, line 183")
set TH[SOt]=fH[Mot]
set YH[SOt]=uOt
set iOt=Jnu(SOt,"when calling try in Persistable, line 183")
if not iOt then
set sOt=3
endif
else
set sOt=2
endif
endif
call tBc(fH[Mot],sOt,RH[Mot],"when calling finishWithStatus in Persistable, line 189")
set MM=MM-1
endfunction
function ALc takes integer ZLc,integer ULc,integer ILc,string PLc returns nothing
set w3[MM]=PLc
set MM=MM+1
if Rk[ZLc]==0 then
if ZLc==0 then
call Mau("Nullpointer exception when calling NetworkFinishedCallback.onFinish","when calling error in Network, line 205")
else
call Mau("Called NetworkFinishedCallback.onFinish on invalid object.","when calling error in Network, line 205")
endif
endif
if Rk[ZLc]<=1406 then
call Xst(ZLc,ULc,ILc,"when calling onFinish_Network_Network in Network, line 205")
else
call cOt(ZLc,ULc,ILc,"when calling onFinish_start_onSynced_PersistentStore_Persistable in Network, line 205")
endif
set MM=MM-1
endfunction
function QQS takes integer vQS,string mQS returns nothing
set w3[MM]=mQS
set MM=MM+1
if ak[vQS]==0 then
call Mau("Double free: object of type Network","when calling error in Network, line 207")
else
set qk=qk+1
set ak[vQS]=0
endif
set MM=MM-1
endfunction
function ZQS takes integer WQS,string EQS returns nothing
set w3[MM]=EQS
set MM=MM+1
if Rk[WQS]==0 then
call Mau("Double free: object of type NetworkFinishedCallback","when calling error in Network, line 204")
else
set nk[dk]=WQS
set dk=dk+1
set Rk[WQS]=0
endif
set MM=MM-1
endfunction
function qrt takes integer prt,string ert returns nothing
set w3[MM]=ert
set MM=MM+1
call ZQS(prt,"when calling dealloc_NetworkFinishedCallback in Network, line 204")
set MM=MM-1
endfunction
function ELc takes integer QLc,string WLc returns nothing
set w3[MM]=WLc
set MM=MM+1
if Rk[QLc]==0 then
if QLc==0 then
call Mau("Nullpointer exception when calling NetworkFinishedCallback.NetworkFinishedCallback","when calling error in Network, line 204")
else
call Mau("Called NetworkFinishedCallback.NetworkFinishedCallback on invalid object.","when calling error in Network, line 204")
endif
endif
call qrt(QLc,"when calling destroyNetworkFinishedCallback in Network, line 204")
set MM=MM-1
endfunction
function yrt takes integer lrt,string brt returns nothing
set w3[MM]=brt
set MM=MM+1
call Exc(MA[lrt],"when calling dispatch_GamecacheBuffer_destroyGamecacheBuffer in Network, line 250")
call Exc(wD[lrt],"when calling dispatch_GamecacheBuffer_destroyGamecacheBuffer in Network, line 251")
call Exc(uD[lrt],"when calling dispatch_GamecacheBuffer_destroyGamecacheBuffer in Network, line 252")
call Exc(rD[lrt],"when calling dispatch_GamecacheBuffer_destroyGamecacheBuffer in Network, line 253")
call uro(NA[lrt],"when calling dispatch_StringEncoder_destroyStringEncoder in Network, line 254")
call Xvc(BA[lrt],"when calling dispatch_HashBuffer_destroyHashBuffer in Network, line 255")
call OHc(sD[lrt],"when calling dispatch_MetadataStore_destroyMetadataStore in Network, line 256")
call ELc(aD[lrt],"when calling dispatch_NetworkFinishedCallback_destroyNetworkFinishedCallback in Network, line 257")
set MM=MM-1
endfunction
function bwt takes integer Owt,string lwt returns nothing
set w3[MM]=lwt
set MM=MM+1
call yrt(Owt,"when calling Network_onDestroy in Network, line 249")
call QQS(Owt,"when calling dealloc_Network in Network, line 249")
set MM=MM-1
endfunction
function ZKc takes integer WKc,string EKc returns nothing
set w3[MM]=EKc
set MM=MM+1
if ak[WKc]==0 then
if WKc==0 then
call Mau("Nullpointer exception when calling Network.Network","when calling error in Network, line 207")
else
call Mau("Called Network.Network on invalid object.","when calling error in Network, line 207")
endif
endif
call bwt(WKc,"when calling destroyNetwork in Network, line 207")
set MM=MM-1
endfunction
function owt takes integer Swt,string cwt returns nothing
set w3[MM]=cwt
set MM=MM+1
set CA[Swt]=2
call ALc(aD[Swt],1,BA[Swt],"when calling onFinish in Network, line 265")
call ZKc(Swt,"when calling dispatch_Network_destroyNetwork in Network, line 266")
set MM=MM-1
endfunction
function JKc takes integer DKc,string HKc returns nothing
set w3[MM]=HKc
set MM=MM+1
if ak[DKc]==0 then
if DKc==0 then
call Mau("Nullpointer exception when calling Network.abort","when calling error in Network, line 263")
else
call Mau("Called Network.abort on invalid object.","when calling error in Network, line 263")
endif
endif
call owt(DKc,"when calling abort in Network, line 263")
set MM=MM-1
endfunction
function RRu takes integer dRu,string fRu returns string
set w3[MM]=fRu
set MM=MM+1
if dRu>=Re then
call Mau("Network: trying to get invalid GC key","when calling error in GamecacheKeys, line 19")
endif
set MM=MM-1
return fe[dRu]
endfunction
function uRu takes gamecache Nfu,string Mfu,string wRu returns nothing
call SyncStoredInteger(Nfu,Mfu,wRu)
endfunction
function I2s takes integer W2s,string E2s returns nothing
local integer Z2s
local integer U2s
set w3[MM]=E2s
set MM=MM+1
set Z2s=0
set U2s=yq-1
loop
exitwhen Z2s>U2s
call uRu(Sq,xP[W2s],RRu(Z2s,"when calling get in Metadata, line 52"))
set Z2s=Z2s+1
endloop
set MM=MM-1
endfunction
function KHc takes integer HHc,string JHc returns nothing
set w3[MM]=JHc
set MM=MM+1
if XF[HHc]==0 then
if HHc==0 then
call Mau("Nullpointer exception when calling MetadataStore.sync","when calling error in Metadata, line 50")
else
call Mau("Called MetadataStore.sync on invalid object.","when calling error in Metadata, line 50")
endif
endif
call I2s(HHc,"when calling sync in Metadata, line 50")
set MM=MM-1
endfunction
function VEs takes integer CEs returns integer
return BZ[CEs]+1
endfunction
function Lmc takes integer Hmc,string Jmc returns integer
local integer Kmc
set w3[MM]=Jmc
set MM=MM+1
if qG[Hmc]==0 then
if Hmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.getBooleanCount","when calling error in HashBuffer, line 131")
else
call Mau("Called HashBuffer.getBooleanCount on invalid object.","when calling error in HashBuffer, line 131")
endif
endif
set Kmc=VEs(Hmc)
set MM=MM-1
return Kmc
endfunction
function PQS takes string UQS returns integer
local integer IQS
set w3[MM]=UQS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set IQS=IY
set PY[IQS]=1362
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 282")
set IQS=0
endif
else
set UY=UY-1
set IQS=ZY[UY]
set PY[IQS]=1362
endif
set MM=MM-1
return IQS
endfunction
function KEs takes integer JEs returns integer
return CZ[JEs]+1
endfunction
function Umc takes integer Wmc,string Emc returns integer
local integer Zmc
set w3[MM]=Emc
set MM=MM+1
if qG[Wmc]==0 then
if Wmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.getIntCount","when calling error in HashBuffer, line 125")
else
call Mau("Called HashBuffer.getIntCount on invalid object.","when calling error in HashBuffer, line 125")
endif
endif
set Zmc=KEs(Wmc)
set MM=MM-1
return Zmc
endfunction
function CUs takes integer KUs,string LUs returns integer
local integer XUs
set w3[MM]=LUs
set MM=MM+1
set XUs=FQc(KUs,0,"when calling getCount in HashData, line 199")
set MM=MM-1
return XUs
endfunction
function cWc takes integer tWc,string iWc returns integer
local integer SWc
set w3[MM]=iWc
set MM=MM+1
if FY[tWc]==0 then
if tWc==0 then
call Mau("Nullpointer exception when calling HashReader.getIntCount","when calling error in HashData, line 198")
else
call Mau("Called HashReader.getIntCount on invalid object.","when calling error in HashData, line 198")
endif
endif
set SWc=CUs(tWc,"when calling getIntCount in HashData, line 198")
set MM=MM-1
return SWc
endfunction
function aMi takes integer pMi,string eMi returns integer
local integer qMi
set w3[MM]=eMi
set MM=MM+1
set qMi=cWc(uC[pMi],"when calling getIntCount in StringEncoder, line 129")
set MM=MM-1
return qMi
endfunction
function Zro takes integer Qro,string Wro returns integer
local integer Ero
set w3[MM]=Wro
set MM=MM+1
if ev[Qro]==0 then
if Qro==0 then
call Mau("Nullpointer exception when calling StringEncoder.getIntCount","when calling error in StringEncoder, line 128")
else
call Mau("Called StringEncoder.getIntCount on invalid object.","when calling error in StringEncoder, line 128")
endif
endif
set Ero=aMi(Qro,"when calling getIntCount in StringEncoder, line 128")
set MM=MM-1
return Ero
endfunction
function Hes takes integer Aes,integer Des returns nothing
set LQ[Aes]=Des
endfunction
function eRc takes integer bRc,integer yRc,string pRc returns nothing
set w3[MM]=pRc
set MM=MM+1
if qG[bRc]==0 then
if bRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.setMode","when calling error in BufferInterface, line 131")
else
call Mau("Called AbstractBuffer.setMode on invalid object.","when calling error in BufferInterface, line 131")
endif
endif
call Hes(bRc,yRc)
set MM=MM-1
endfunction
function E4i takes integer Q4i,integer W4i returns nothing
set xC[Q4i]=W4i
endfunction
function Bso takes integer Xso,integer Cso,string Vso returns nothing
set w3[MM]=Vso
set MM=MM+1
if Yv[Xso]==0 then
if Xso==0 then
call Mau("Nullpointer exception when calling SimpleSynchronizer.onSynced","when calling error in SyncSimple, line 139")
else
call Mau("Called SimpleSynchronizer.onSynced on invalid object.","when calling error in SyncSimple, line 139")
endif
endif
call E4i(Xso,Cso)
set MM=MM-1
endfunction
function HWS takes string AWS returns integer
local integer DWS
set w3[MM]=AWS
set MM=MM+1
if yk==0 then
if pk<32768 then
set pk=pk+1
set DWS=pk
set ek[DWS]=1646
else
call Mau("Out of memory: Could not create SynchronizationCallback_onSynced_Network_Network.","when calling error in Network, line 420")
set DWS=0
endif
else
set yk=yk-1
set DWS=bk[yk]
set ek[DWS]=1646
endif
set MM=MM-1
return DWS
endfunction
function GWu takes player TWu,unit YWu returns nothing
if ea==TWu then
call SelectUnit(YWu,true)
endif
endfunction
function MRu takes group VRu,player BRu,boolexpr NRu returns nothing
call GroupEnumUnitsSelected(VRu,BRu,NRu)
endfunction
function UWu takes player EWu,unit ZWu returns nothing
if ea==EWu then
call SelectUnit(ZWu,false)
endif
endfunction
function LgS takes integer JgS,string KgS returns nothing
set w3[MM]=KgS
set MM=MM+1
if yg[JgS]==0 then
call Mau("Double free: object of type ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
set Og[lg]=JgS
set lg=lg+1
set yg[JgS]=0
endif
set MM=MM-1
endfunction
function WYs takes integer mYs,string QYs returns nothing
set w3[MM]=QYs
set MM=MM+1
call LgS(mYs,"when calling dealloc_ForGroupCallback in ClosureForGroups, line 3")
set MM=MM-1
endfunction
function lgc takes integer ogc,string Ogc returns nothing
set w3[MM]=Ogc
set MM=MM+1
if yg[ogc]==0 then
if ogc==0 then
call Mau("Nullpointer exception when calling ForGroupCallback.ForGroupCallback","when calling error in ClosureForGroups, line 3")
else
call Mau("Called ForGroupCallback.ForGroupCallback on invalid object.","when calling error in ClosureForGroups, line 3")
endif
endif
call WYs(ogc,"when calling destroyForGroupCallback in ClosureForGroups, line 3")
set MM=MM-1
endfunction
function tTu takes group sTu returns nothing
call GroupClear(sTu)
endfunction
function ncu takes string acu returns nothing
set w3[MM]=acu
set MM=MM+1
call tTu(sp)
set ip=ip-1
call lgc(tp[ip],"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 30")
set MM=MM-1
endfunction
function qcu takes integer ecu returns nothing
set tp[ip]=ecu
set ip=ip+1
set cp=0
set Sp=Ee
endfunction
function mcu takes player jcu,integer xcu,string vcu returns nothing
set w3[MM]=vcu
set MM=MM+1
call qcu(xcu)
call GroupEnumUnitsSelected(sp,jcu,op)
call ncu("when calling popCallback in ClosureForGroups, line 129")
set MM=MM-1
endfunction
function olc takes string Slc returns integer
local integer clc
set w3[MM]=Slc
set MM=MM+1
if lg==0 then
if bg<32768 then
set bg=bg+1
set clc=bg
set yg[clc]=804
else
call Mau("Out of memory: Could not create ForGroupCallback_forUnitsSelected_SyncSimple.","when calling error in SyncSimple, line 96")
set clc=0
endif
else
set lg=lg-1
set clc=Og[lg]
set yg[clc]=804
endif
set MM=MM-1
return clc
endfunction
function Skr takes player ukr,unit rkr,string skr returns nothing
local integer tkr
local player ikr
set w3[MM]=skr
set MM=MM+1
call MRu(Te,ukr,null)
set PR=null
set AR=0
set ikr=ukr
set tkr=olc("when calling alloc_ForGroupCallback_forUnitsSelected_SyncSimple in SyncSimple, line 96")
call mcu(ikr,tkr,"when calling forUnitsSelected in SyncSimple, line 96")
if AR>=12 then
call UWu(ukr,PR)
endif
if ea==ukr then
call GWu(ukr,rkr)
call UWu(ukr,rkr)
endif
if AR>=12 then
call GWu(ukr,PR)
endif
set MM=MM-1
set ikr=null
endfunction
function m4i takes integer k4i returns nothing
local integer j4i=0
local integer x4i=bj_MAX_PLAYER_SLOTS-1
local integer v4i
loop
exitwhen j4i>x4i
if not PWu(pa[j4i])then
set v4i=Ewu(jC[k4i],j4i)
set jC[k4i]=v4i
endif
set j4i=j4i+1
endloop
endfunction
function wto takes integer Nso,string Mso returns nothing
set w3[MM]=Mso
set MM=MM+1
if Yv[Nso]==0 then
if Nso==0 then
call Mau("Nullpointer exception when calling SimpleSynchronizer.addOfflinePlayers","when calling error in SyncSimple, line 142")
else
call Mau("Called SimpleSynchronizer.addOfflinePlayers on invalid object.","when calling error in SyncSimple, line 142")
endif
endif
call m4i(Nso)
set MM=MM-1
endfunction
function F4i takes integer g4i,string h4i returns nothing
set w3[MM]=h4i
set MM=MM+1
call wto(g4i,"when calling addOfflinePlayers in SyncSimple, line 135")
call Skr(ea,kC[g4i],"when calling onceSelect in SyncSimple, line 136")
set MM=MM-1
endfunction
function Lso takes integer Jso,string Kso returns nothing
set w3[MM]=Kso
set MM=MM+1
if Yv[Jso]==0 then
if Jso==0 then
call Mau("Nullpointer exception when calling SimpleSynchronizer.sync","when calling error in SyncSimple, line 134")
else
call Mau("Called SimpleSynchronizer.sync on invalid object.","when calling error in SyncSimple, line 134")
endif
endif
call F4i(Jso,"when calling sync in SyncSimple, line 134")
set MM=MM-1
endfunction
function LFS takes string JFS returns integer
local integer KFS
set w3[MM]=JFS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set KFS=IY
set PY[KFS]=1361
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_GamecacheBuffer_GamecacheBuffer.","when calling error in GamecacheBuffer, line 120")
set KFS=0
endif
else
set UY=UY-1
set KFS=ZY[UY]
set PY[KFS]=1361
endif
set MM=MM-1
return KFS
endfunction
function MFS takes integer BFS,string NFS returns nothing
set w3[MM]=NFS
set MM=MM+1
if lh[BFS]==0 then
call Mau("Double free: object of type SynchronizerFunction","when calling error in GamecacheBuffer, line 8")
else
set ch[oh]=BFS
set oh=oh+1
set lh[BFS]=0
endif
set MM=MM-1
endfunction
function JWs takes integer DWs,string HWs returns nothing
set w3[MM]=HWs
set MM=MM+1
call MFS(DWs,"when calling dealloc_SynchronizerFunction in GamecacheBuffer, line 8")
set MM=MM-1
endfunction
function Pvc takes integer Uvc,string Ivc returns nothing
set w3[MM]=Ivc
set MM=MM+1
if lh[Uvc]==0 then
if Uvc==0 then
call Mau("Nullpointer exception when calling SynchronizerFunction.SynchronizerFunction","when calling error in GamecacheBuffer, line 8")
else
call Mau("Called SynchronizerFunction.SynchronizerFunction on invalid object.","when calling error in GamecacheBuffer, line 8")
endif
endif
call JWs(Uvc,"when calling destroySynchronizerFunction in GamecacheBuffer, line 8")
set MM=MM-1
endfunction
function VFS takes string XFS returns integer
local integer CFS
set w3[MM]=XFS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set CFS=HY
set JY[CFS]=1325
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_GamecacheBuffer_GamecacheBuffer.","when calling error in GamecacheBuffer, line 120")
set CFS=0
endif
else
set DY=DY-1
set CFS=AY[DY]
set JY[CFS]=1325
endif
set MM=MM-1
return CFS
endfunction
function HFS takes string AFS returns integer
local integer DFS
set w3[MM]=AFS
set MM=MM+1
if oh==0 then
if Oh<32768 then
set Oh=Oh+1
set DFS=Oh
set lh[DFS]=1653
else
call Mau("Out of memory: Could not create SynchronizerFunction_GamecacheBuffer_GamecacheBuffer.","when calling error in GamecacheBuffer, line 110")
set DFS=0
endif
else
set oh=oh-1
set DFS=ch[oh]
set lh[DFS]=1653
endif
set MM=MM-1
return DFS
endfunction
function PFS takes string UFS returns integer
local integer IFS
set w3[MM]=UFS
set MM=MM+1
if oh==0 then
if Oh<32768 then
set Oh=Oh+1
set IFS=Oh
set lh[IFS]=1652
else
call Mau("Out of memory: Could not create SynchronizerFunction_GamecacheBuffer_GamecacheBuffer.","when calling error in GamecacheBuffer, line 106")
set IFS=0
endif
else
set oh=oh-1
set IFS=ch[oh]
set lh[IFS]=1652
endif
set MM=MM-1
return IFS
endfunction
function ZFS takes string WFS returns integer
local integer EFS
set w3[MM]=WFS
set MM=MM+1
if oh==0 then
if Oh<32768 then
set Oh=Oh+1
set EFS=Oh
set lh[EFS]=1651
else
call Mau("Out of memory: Could not create SynchronizerFunction_GamecacheBuffer_GamecacheBuffer.","when calling error in GamecacheBuffer, line 102")
set EFS=0
endif
else
set oh=oh-1
set EFS=ch[oh]
set lh[EFS]=1651
endif
set MM=MM-1
return EFS
endfunction
function BQs takes integer HQs,string JQs returns integer
local integer KQs
local integer LQs
local integer XQs
local integer CQs
local integer VQs
set w3[MM]=JQs
set MM=MM+1
set KQs=0
set LQs=WZ[HQs]
if LQs==0 then
set XQs=ZFS("when calling alloc_SynchronizerFunction_GamecacheBuffer_GamecacheBuffer in GamecacheBuffer, line 102")
set ZZ[XQs]=HQs
set KQs=XQs
elseif LQs==1 then
set CQs=PFS("when calling alloc_SynchronizerFunction_GamecacheBuffer_GamecacheBuffer in GamecacheBuffer, line 106")
set UZ[CQs]=HQs
set KQs=CQs
else
set VQs=HFS("when calling alloc_SynchronizerFunction_GamecacheBuffer_GamecacheBuffer in GamecacheBuffer, line 110")
set IZ[VQs]=HQs
set KQs=VQs
endif
set MM=MM-1
return KQs
endfunction
function xvc takes integer Fvc,string kvc returns integer
local integer jvc
set w3[MM]=kvc
set MM=MM+1
if Sh[Fvc]==0 then
if Fvc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.getSynchronizerFunction","when calling error in GamecacheBuffer, line 97")
else
call Mau("Called GamecacheBuffer.getSynchronizerFunction on invalid object.","when calling error in GamecacheBuffer, line 97")
endif
endif
set jvc=BQs(Fvc,"when calling getSynchronizerFunction in GamecacheBuffer, line 97")
set MM=MM-1
return jvc
endfunction
function iWs takes integer NQs,string MQs returns nothing
local integer wWs
local integer uWs
local integer rWs
local integer sWs
local integer tWs
set w3[MM]=MQs
set MM=MM+1
set wWs=xvc(NQs,"when calling getSynchronizerFunction in GamecacheBuffer, line 117")
set EZ[NQs]=0
set sWs=aq
set uWs=LFS("when calling alloc_LimitedExecuteCondition_executeWhile_GamecacheBuffer_GamecacheBuffer in GamecacheBuffer, line 120")
set PZ[uWs]=NQs
set tWs=uWs
set rWs=VFS("when calling alloc_LimitedExecuteAction_executeWhile_GamecacheBuffer_GamecacheBuffer in GamecacheBuffer, line 120")
set AZ[rWs]=wWs
set DZ[rWs]=NQs
call rdu(sWs,tWs,rWs,"when calling executeWhile in GamecacheBuffer, line 120")
call Pvc(wWs,"when calling dispatch_SynchronizerFunction_destroySynchronizerFunction in GamecacheBuffer, line 124")
set MM=MM-1
endfunction
function Qvc takes integer vvc,string mvc returns nothing
set w3[MM]=mvc
set MM=MM+1
if Sh[vvc]==0 then
if vvc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.sync","when calling error in GamecacheBuffer, line 116")
else
call Mau("Called GamecacheBuffer.sync on invalid object.","when calling error in GamecacheBuffer, line 116")
endif
endif
call iWs(vvc,"when calling sync in GamecacheBuffer, line 116")
set MM=MM-1
endfunction
function iWS takes string sWS returns integer
local integer tWS
set w3[MM]=sWS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set tWS=IY
set PY[tWS]=1365
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 348")
set tWS=0
endif
else
set UY=UY-1
set tWS=ZY[UY]
set PY[tWS]=1365
endif
set MM=MM-1
return tWS
endfunction
function oWS takes string SWS returns integer
local integer cWS
set w3[MM]=SWS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set cWS=HY
set JY[cWS]=1329
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 348")
set cWS=0
endif
else
set DY=DY-1
set cWS=AY[DY]
set JY[cWS]=1329
endif
set MM=MM-1
return cWS
endfunction
function put takes integer cut,string out returns nothing
local integer Out
local integer lut
local integer but
local integer yut
set w3[MM]=out
set MM=MM+1
set but=aq
set Out=iWS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 348")
set GD[Out]=cut
set yut=Out
set lut=oWS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 348")
set gD[lut]=cut
call rdu(but,yut,lut,"when calling executeWhile in Network, line 348")
set MM=MM-1
endfunction
function SLc takes integer tLc,string iLc returns nothing
set w3[MM]=iLc
set MM=MM+1
if ak[tLc]==0 then
if tLc==0 then
call Mau("Nullpointer exception when calling Network.writeReals","when calling error in Network, line 347")
else
call Mau("Called Network.writeReals on invalid object.","when calling error in Network, line 347")
endif
endif
call put(tLc,"when calling writeReals in Network, line 347")
set MM=MM-1
endfunction
function Ufu takes gamecache Efu,string Zfu returns nothing
call FlushStoredMission(Efu,Zfu)
endfunction
function cWs takes integer SWs returns nothing
set mZ[SWs]=-1
set QZ[SWs]=-1
endfunction
function Zvc takes integer Wvc,string Evc returns nothing
set w3[MM]=Evc
set MM=MM+1
if Sh[Wvc]==0 then
if Wvc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.reset","when calling error in GamecacheBuffer, line 126")
else
call Mau("Called GamecacheBuffer.reset on invalid object.","when calling error in GamecacheBuffer, line 126")
endif
endif
call cWs(Wvc)
set MM=MM-1
endfunction
function dkr takes nothing returns unit
local unit nkr=I5r(Ty,XR,Ve,Be,wwu(0.))
call k8s(nkr)
set Fnw=nkr
set nkr=null
return Fnw
endfunction
function fwu takes nothing returns integer
set i3=0
return i3
endfunction
function t2S takes integer s2S returns nothing
set LR=LR+1
if LR==1 then
set JR=s2S
set vC[s2S]=0
else
set vC[s2S]=KR
set mC[KR]=s2S
set vC[JR]=s2S
endif
set mC[s2S]=0
set KR=s2S
endfunction
function r2S takes integer w2S returns nothing
local integer u2S=fwu()
set jC[w2S]=u2S
set xC[w2S]=0
call t2S(w2S)
endfunction
function O2S takes integer o2S returns nothing
call r2S(o2S)
set kC[o2S]=dkr()
set DR[QHr(kC[o2S])]=o2S
endfunction
function nlc takes string qlc returns integer
local integer alc
set w3[MM]=qlc
set MM=MM+1
if Rv==0 then
if Tv<32768 then
set Tv=Tv+1
set alc=Tv
set Yv[alc]=1565
else
call Mau("Out of memory: Could not create SimpleSynchronizer.","when calling error in SyncSimple, line 113")
set alc=0
endif
else
set Rv=Rv-1
set alc=fv[Rv]
set Yv[alc]=1565
endif
set MM=MM-1
return alc
endfunction
function c2S takes string i2S returns integer
local integer S2S
set w3[MM]=i2S
set MM=MM+1
set S2S=nlc("when calling alloc_SimpleSynchronizer in SyncSimple, line 124")
call O2S(S2S)
set MM=MM-1
return S2S
endfunction
function QWS takes string vWS returns integer
local integer mWS
set w3[MM]=vWS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set mWS=HY
set JY[mWS]=1333
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 372")
set mWS=0
endif
else
set DY=DY-1
set mWS=AY[DY]
set JY[mWS]=1333
endif
set MM=MM-1
return mWS
endfunction
function xWS takes string kWS returns integer
local integer jWS
set w3[MM]=kWS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set jWS=IY
set PY[jWS]=1369
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 372")
set jWS=0
endif
else
set UY=UY-1
set jWS=ZY[UY]
set PY[jWS]=1369
endif
set MM=MM-1
return jWS
endfunction
function Hut takes integer Zut,string Uut returns nothing
local integer Iut
local integer Put
local integer Aut
local integer Dut
set w3[MM]=Uut
set MM=MM+1
set Aut=aq
set Iut=xWS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 372")
set mD[Iut]=Zut
set Dut=Iut
set Put=QWS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 372")
set QD[Put]=Zut
call rdu(Aut,Dut,Put,"when calling executeWhile in Network, line 372")
set MM=MM-1
endfunction
function dLc takes integer aLc,string nLc returns nothing
set w3[MM]=nLc
set MM=MM+1
if ak[aLc]==0 then
if aLc==0 then
call Mau("Nullpointer exception when calling Network.writeStrings","when calling error in Network, line 371")
else
call Mau("Called Network.writeStrings on invalid object.","when calling error in Network, line 371")
endif
endif
call Hut(aLc,"when calling writeStrings in Network, line 371")
set MM=MM-1
endfunction
function LQS takes string JQS returns integer
local integer KQS
set w3[MM]=JQS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set KQS=IY
set PY[KQS]=1363
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 336")
set KQS=0
endif
else
set UY=UY-1
set KQS=ZY[UY]
set PY[KQS]=1363
endif
set MM=MM-1
return KQS
endfunction
function VQS takes string XQS returns integer
local integer CQS
set w3[MM]=XQS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set CQS=HY
set JY[CQS]=1327
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 336")
set CQS=0
endif
else
set DY=DY-1
set CQS=AY[DY]
set JY[CQS]=1327
endif
set MM=MM-1
return CQS
endfunction
function Mwt takes integer Lwt,string Xwt returns nothing
local integer Cwt
local integer Vwt
local integer Bwt
local integer Nwt
set w3[MM]=Xwt
set MM=MM+1
set Bwt=aq
set Cwt=LQS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 336")
set fD[Cwt]=Lwt
set Nwt=Cwt
set Vwt=VQS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 336")
set RD[Vwt]=Lwt
call rdu(Bwt,Nwt,Vwt,"when calling executeWhile in Network, line 336")
set MM=MM-1
endfunction
function wLc takes integer NKc,string MKc returns nothing
set w3[MM]=MKc
set MM=MM+1
if ak[NKc]==0 then
if NKc==0 then
call Mau("Nullpointer exception when calling Network.writeInts","when calling error in Network, line 335")
else
call Mau("Called Network.writeInts on invalid object.","when calling error in Network, line 335")
endif
endif
call Mwt(NKc,"when calling writeInts in Network, line 335")
set MM=MM-1
endfunction
function RWS takes string dWS returns integer
local integer fWS
set w3[MM]=dWS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set fWS=HY
set JY[fWS]=1331
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 360")
set fWS=0
endif
else
set DY=DY-1
set fWS=AY[DY]
set JY[fWS]=1331
endif
set MM=MM-1
return fWS
endfunction
function nWS takes string qWS returns integer
local integer aWS
set w3[MM]=qWS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set aWS=IY
set PY[aWS]=1367
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 360")
set aWS=0
endif
else
set UY=UY-1
set aWS=ZY[UY]
set PY[aWS]=1367
endif
set MM=MM-1
return aWS
endfunction
function kut takes integer Tut,string Yut returns nothing
local integer Gut
local integer gut
local integer hut
local integer Fut
set w3[MM]=Yut
set MM=MM+1
set hut=aq
set Gut=nWS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 360")
set kD[Gut]=Tut
set Fut=Gut
set gut=RWS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 360")
set jD[gut]=Tut
call rdu(hut,Fut,gut,"when calling executeWhile in Network, line 360")
set MM=MM-1
endfunction
function yLc takes integer lLc,string bLc returns nothing
set w3[MM]=bLc
set MM=MM+1
if ak[lLc]==0 then
if lLc==0 then
call Mau("Nullpointer exception when calling Network.writeBooleans","when calling error in Network, line 359")
else
call Mau("Called Network.writeBooleans on invalid object.","when calling error in Network, line 359")
endif
endif
call kut(lLc,"when calling writeBooleans in Network, line 359")
set MM=MM-1
endfunction
function Zwt takes integer vwt,string mwt returns nothing
local integer Qwt
local integer Wwt
local integer Ewt
set w3[MM]=mwt
set MM=MM+1
if Ba and CA[vwt]!=1 then
call Mau("Network: trying to send round at the wrong time","when calling error in Network, line 385")
endif
set Qwt=c2S("when calling new_SimpleSynchronizer in Network, line 387")
call Zvc(MA[vwt],"when calling reset in Network, line 390")
call Zvc(wD[vwt],"when calling reset in Network, line 391")
call Zvc(uD[vwt],"when calling reset in Network, line 392")
call Zvc(rD[vwt],"when calling reset in Network, line 393")
call Ufu(Rq,VA[vwt])
call Ufu(Tq,VA[vwt])
if ea==tD[vwt]then
call eRc(BA[vwt],0,"when calling setMode in Network, line 401")
call wLc(vwt,"when calling writeInts in Network, line 404")
call yLc(vwt,"when calling writeBooleans in Network, line 405")
call SLc(vwt,"when calling writeReals in Network, line 406")
call dLc(vwt,"when calling writeStrings in Network, line 407")
call eRc(BA[vwt],3,"when calling setMode in Network, line 410")
call Qvc(MA[vwt],"when calling sync in Network, line 413")
call Qvc(uD[vwt],"when calling sync in Network, line 414")
call Qvc(wD[vwt],"when calling sync in Network, line 415")
call Qvc(rD[vwt],"when calling sync in Network, line 416")
endif
call Lso(Qwt,"when calling sync in Network, line 419")
set Ewt=Qwt
set Wwt=HWS("when calling alloc_SynchronizationCallback_onSynced_Network_Network in Network, line 420")
set ZD[Wwt]=vwt
call Bso(Ewt,Wwt,"when calling onSynced in Network, line 420")
set MM=MM-1
endfunction
function gLc takes integer YLc,string GLc returns nothing
set w3[MM]=GLc
set MM=MM+1
if ak[YLc]==0 then
if YLc==0 then
call Mau("Nullpointer exception when calling Network.sendRound","when calling error in Network, line 383")
else
call Mau("Called Network.sendRound on invalid object.","when calling error in Network, line 383")
endif
endif
call Zwt(YLc,"when calling sendRound in Network, line 383")
set MM=MM-1
endfunction
function bfu takes gamecache cfu,string ofu,string Ofu,integer lfu returns nothing
call StoreInteger(cfu,ofu,Ofu,lfu)
endfunction
function o2s takes integer i2s,string S2s,integer c2s returns nothing
call bfu(Sq,xP[i2s],S2s,c2s)
endfunction
function eHc takes integer lHc,string bHc,integer yHc,string pHc returns nothing
set w3[MM]=pHc
set MM=MM+1
if XF[lHc]==0 then
if lHc==0 then
call Mau("Nullpointer exception when calling MetadataStore.saveValue","when calling error in Metadata, line 29")
else
call Mau("Called MetadataStore.saveValue on invalid object.","when calling error in Metadata, line 29")
endif
endif
call o2s(lHc,bHc,yHc)
set MM=MM-1
endfunction
function f2s takes integer y2s,integer p2s,integer e2s,integer q2s,integer a2s,integer n2s,string d2s returns nothing
set w3[MM]=d2s
set MM=MM+1
call eHc(y2s,cq,p2s,"when calling saveValue in Metadata, line 36")
call eHc(y2s,oq,e2s,"when calling saveValue in Metadata, line 37")
call eHc(y2s,Oq,q2s,"when calling saveValue in Metadata, line 38")
call eHc(y2s,lq,a2s,"when calling saveValue in Metadata, line 39")
call eHc(y2s,bq,n2s,"when calling saveValue in Metadata, line 40")
set MM=MM-1
endfunction
function kHc takes integer RHc,integer THc,integer YHc,integer GHc,integer gHc,integer hHc,string FHc returns nothing
set w3[MM]=FHc
set MM=MM+1
if XF[RHc]==0 then
if RHc==0 then
call Mau("Nullpointer exception when calling MetadataStore.setCounts","when calling error in Metadata, line 35")
else
call Mau("Called MetadataStore.setCounts on invalid object.","when calling error in Metadata, line 35")
endif
endif
call f2s(RHc,THc,YHc,GHc,gHc,hHc,"when calling setCounts in Metadata, line 35")
set MM=MM-1
endfunction
function tfo takes integer Ndo,integer Mdo,integer wfo,integer ufo returns integer
local integer rfo=Ze
local integer sfo
if Ndo>rfo then
set sfo=Ndo
else
set sfo=rfo
endif
set rfo=sfo
if Mdo>rfo then
set sfo=Mdo
else
set sfo=rfo
endif
set rfo=sfo
if wfo>rfo then
set sfo=wfo
else
set sfo=rfo
endif
set rfo=sfo
if ufo>rfo then
set sfo=ufo
else
set sfo=rfo
endif
set rfo=sfo
return rfo
endfunction
function QOc takes string vOc returns integer
local integer mOc
set w3[MM]=vOc
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set mOc=HY
set JY[mOc]=1351
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_StringEncoder_StringEncoder.","when calling error in StringEncoder, line 105")
set mOc=0
endif
else
set DY=DY-1
set mOc=AY[DY]
set JY[mOc]=1351
endif
set MM=MM-1
return mOc
endfunction
function xOc takes string kOc returns integer
local integer jOc
set w3[MM]=kOc
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set jOc=IY
set PY[jOc]=1387
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_StringEncoder_StringEncoder.","when calling error in StringEncoder, line 105")
set jOc=0
endif
else
set UY=UY-1
set jOc=ZY[UY]
set PY[jOc]=1387
endif
set MM=MM-1
return jOc
endfunction
function DNi takes integer ENi,string ZNi returns nothing
local integer UNi
local integer INi
local integer PNi
local integer ANi
set w3[MM]=ZNi
set MM=MM+1
set MX[ENi]=lEc(NX[ENi],"when calling intoReader in StringEncoder, line 103")
set NX[ENi]=0
set PNi=aq
set UNi=xOc("when calling alloc_LimitedExecuteCondition_executeWhile_StringEncoder_StringEncoder in StringEncoder, line 105")
set OC[UNi]=ENi
set ANi=UNi
set INi=QOc("when calling alloc_LimitedExecuteAction_executeWhile_StringEncoder_StringEncoder in StringEncoder, line 105")
set lC[INi]=ENi
call rdu(PNi,ANi,INi,"when calling executeWhile in StringEncoder, line 105")
set uC[ENi]=lEc(wC[ENi],"when calling intoReader in StringEncoder, line 106")
set wC[ENi]=0
set MM=MM-1
endfunction
function yro takes integer lro,string bro returns nothing
set w3[MM]=bro
set MM=MM+1
if ev[lro]==0 then
if lro==0 then
call Mau("Nullpointer exception when calling StringEncoder.encode","when calling error in StringEncoder, line 102")
else
call Mau("Called StringEncoder.encode on invalid object.","when calling error in StringEncoder, line 102")
endif
endif
call DNi(lro,"when calling encode in StringEncoder, line 102")
set MM=MM-1
endfunction
function xwt takes integer ywt,string pwt returns nothing
local integer ewt
local integer qwt
local integer awt
local integer nwt
local integer dwt
local integer fwt
local integer Rwt
local integer Twt
local integer Ywt
local integer Gwt
local integer gwt
local integer hwt
local integer Fwt
local integer kwt
local integer jwt
set w3[MM]=pwt
set MM=MM+1
if Ba and CA[ywt]!=0 then
call Mau("Network: trying to send duplicate metadata","when calling error in Network, line 272")
endif
if not PWu(tD[ywt])then
call JKc(ywt,"when calling abort in Network, line 276")
set MM=MM-1
return
endif
if ea==tD[ywt]then
set Ywt=aq
set ewt=PQS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 282")
set nD[ewt]=ywt
set Gwt=ewt
set qwt=HQS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 282")
set dD[qwt]=ywt
call rdu(Ywt,Gwt,qwt,"when calling executeWhile in Network, line 282")
call yro(NA[ywt],"when calling encode in Network, line 287")
endif
call eRc(BA[ywt],3,"when calling setMode in Network, line 291")
set awt=Umc(BA[ywt],"when calling getIntCount in Network, line 294")
set nwt=Dmc(BA[ywt],"when calling getRealCount in Network, line 295")
set dwt=Lmc(BA[ywt],"when calling getBooleanCount in Network, line 296")
set fwt=Zro(NA[ywt],"when calling getIntCount in Network, line 297")
set Rwt=tfo(awt,nwt,dwt,fwt)
set Twt=Rwt/Re+1
if ea==tD[ywt]then
set gwt=awt
set hwt=nwt
set Fwt=dwt
set kwt=fwt
set jwt=Twt
set iD[ywt]=gwt
set SD[ywt]=hwt
set cD[ywt]=Fwt
set oD[ywt]=kwt
set OD[ywt]=jwt
set lD[ywt]=true
call kHc(sD[ywt],iD[ywt],SD[ywt],cD[ywt],oD[ywt],OD[ywt],"when calling setCounts in Network, line 311")
call KHc(sD[ywt],"when calling sync in Network, line 312")
endif
set CA[ywt]=1
call gLc(ywt,"when calling sendRound in Network, line 316")
set MM=MM-1
endfunction
function XKc takes integer KKc,string LKc returns nothing
set w3[MM]=LKc
set MM=MM+1
if ak[KKc]==0 then
if KKc==0 then
call Mau("Nullpointer exception when calling Network.sendMetadata","when calling error in Network, line 269")
else
call Mau("Called Network.sendMetadata on invalid object.","when calling error in Network, line 269")
endif
endif
call xwt(KKc,"when calling sendMetadata in Network, line 269")
set MM=MM-1
endfunction
function Ort takes integer Srt,integer crt,string ort returns nothing
set w3[MM]=ort
set MM=MM+1
set aD[Srt]=crt
call XKc(Srt,"when calling sendMetadata in Network, line 473")
set MM=MM-1
endfunction
function mLc takes integer jLc,integer xLc,string vLc returns nothing
set w3[MM]=vLc
set MM=MM+1
if ak[jLc]==0 then
if jLc==0 then
call Mau("Nullpointer exception when calling Network.start","when calling error in Network, line 471")
else
call Mau("Called Network.start on invalid object.","when calling error in Network, line 471")
endif
endif
call Ort(jLc,xLc,"when calling start in Network, line 471")
set MM=MM-1
endfunction
function Bot takes integer Lot,string Xot returns nothing
local integer Cot
local integer Vot
set w3[MM]=Xot
set MM=MM+1
call MHc(qH[Lot],"when calling dispatch_FileReader_destroyFileReader in Persistable, line 170")
set Vot=aH[Lot]
set Cot=iZS("when calling alloc_NetworkFinishedCallback_start_onSynced_PersistentStore_Persistable in Persistable, line 172")
set fH[Cot]=nH[Lot]
set RH[Cot]=dH[Lot]
call mLc(Vot,Cot,"when calling start in Persistable, line 172")
set MM=MM-1
endfunction
function MVc takes integer NVc returns nothing
endfunction
function Got takes integer Yot returns nothing
endfunction
function XVc takes integer KVc,string LVc returns nothing
set w3[MM]=LVc
set MM=MM+1
if aG[KVc]==0 then
if KVc==0 then
call Mau("Nullpointer exception when calling Persistable.onSaved","when calling error in Persistable, line 81")
else
call Mau("Called Persistable.onSaved on invalid object.","when calling error in Persistable, line 81")
endif
endif
call Got(KVc)
set MM=MM-1
endfunction
function VvS takes integer XvS,string CvS returns nothing
set w3[MM]=CvS
set MM=MM+1
if VF[XvS]==0 then
call Mau("Double free: object of type FileWriter","when calling error in MultifileIO, line 97")
else
set CF=CF+1
set VF[XvS]=0
endif
set MM=MM-1
endfunction
function n7t takes integer q7t,string a7t returns nothing
set w3[MM]=a7t
set MM=MM+1
call Q6t(q7t,"when calling AbstractFile_onDestroy in MultifileIO, line 97")
set MM=MM-1
endfunction
function l7t takes integer o7t,string O7t returns nothing
set w3[MM]=O7t
set MM=MM+1
call n7t(o7t,"when calling FileWriter_onDestroy in MultifileIO, line 96")
call VvS(o7t,"when calling dealloc_FileWriter in MultifileIO, line 96")
set MM=MM-1
endfunction
function pJc takes integer bJc,string yJc returns nothing
set w3[MM]=yJc
set MM=MM+1
if VF[bJc]==0 then
if bJc==0 then
call Mau("Nullpointer exception when calling FileWriter.FileWriter","when calling error in MultifileIO, line 97")
else
call Mau("Called FileWriter.FileWriter on invalid object.","when calling error in MultifileIO, line 97")
endif
endif
call l7t(bJc,"when calling destroyFileWriter in MultifileIO, line 97")
set MM=MM-1
endfunction
function dOt takes integer aOt,string nOt returns nothing
set w3[MM]=nOt
set MM=MM+1
if ea==SH[FH[aOt]]then
call pJc(kH[aOt],"when calling dispatch_FileWriter_destroyFileWriter in Persistable, line 216")
endif
if jH[aOt]!=0 then
call MVc(jH[aOt])
endif
call XVc(cH[FH[aOt]],"when calling onSaved in Persistable, line 220")
set MM=MM-1
endfunction
function Kwt takes integer Uwt,string Iwt returns nothing
local integer Pwt
local integer Awt
local integer Dwt
local integer Hwt
local integer Jwt
set w3[MM]=Iwt
set MM=MM+1
if ea==tD[Uwt]then
set MM=MM-1
return
endif
if Ba and CA[Uwt]!=1 then
call Mau("Network: trying to receive metadata at a wrong time","when calling error in Network, line 325")
endif
set Pwt=DHc(sD[Uwt],"when calling getCounts in Network, line 328")
set Awt=r0w
set Dwt=s0w
set Hwt=t0w
set Jwt=i0w
set iD[Uwt]=Pwt
set SD[Uwt]=Awt
set cD[Uwt]=Dwt
set oD[Uwt]=Hwt
set OD[Uwt]=Jwt
set lD[Uwt]=true
set MM=MM-1
endfunction
function BKc takes integer CKc,string VKc returns nothing
set w3[MM]=VKc
set MM=MM+1
if ak[CKc]==0 then
if CKc==0 then
call Mau("Nullpointer exception when calling Network.receiveMetadata","when calling error in Network, line 319")
else
call Mau("Called Network.receiveMetadata on invalid object.","when calling error in Network, line 319")
endif
endif
call Kwt(CKc,"when calling receiveMetadata in Network, line 319")
set MM=MM-1
endfunction
function LWS takes string JWS returns integer
local integer KWS
set w3[MM]=JWS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set KWS=NY
set MY[KWS]=769
else
call Mau("Out of memory: Could not create ForForceCallback_execute_Network_Network.","when calling error in Network, line 451")
set KWS=0
endif
else
set BY=BY-1
set KWS=VY[BY]
set MY[KWS]=769
endif
set MM=MM-1
return KWS
endfunction
function MWS takes string BWS returns integer
local integer NWS
set w3[MM]=BWS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set NWS=HY
set JY[NWS]=1335
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 460")
set NWS=0
endif
else
set DY=DY-1
set NWS=AY[DY]
set JY[NWS]=1335
endif
set MM=MM-1
return NWS
endfunction
function bWS takes string OWS returns integer
local integer lWS
set w3[MM]=OWS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set lWS=IY
set PY[lWS]=1366
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 354")
set lWS=0
endif
else
set UY=UY-1
set lWS=ZY[UY]
set PY[lWS]=1366
endif
set MM=MM-1
return lWS
endfunction
function eWS takes string yWS returns integer
local integer pWS
set w3[MM]=yWS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set pWS=HY
set JY[pWS]=1330
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 354")
set pWS=0
endif
else
set DY=DY-1
set pWS=AY[DY]
set JY[pWS]=1330
endif
set MM=MM-1
return pWS
endfunction
function Rut takes integer eut,string qut returns nothing
local integer aut
local integer nut
local integer dut
local integer fut
set w3[MM]=qut
set MM=MM+1
set dut=aq
set aut=bWS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 354")
set hD[aut]=eut
set fut=aut
set nut=eWS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 354")
set FD[nut]=eut
call rdu(dut,fut,nut,"when calling executeWhile in Network, line 354")
set MM=MM-1
endfunction
function OLc takes integer cLc,string oLc returns nothing
set w3[MM]=oLc
set MM=MM+1
if ak[cLc]==0 then
if cLc==0 then
call Mau("Nullpointer exception when calling Network.readReals","when calling error in Network, line 353")
else
call Mau("Called Network.readReals on invalid object.","when calling error in Network, line 353")
endif
endif
call Rut(cLc,"when calling readReals in Network, line 353")
set MM=MM-1
endfunction
function HEs takes integer DEs returns nothing
set MZ[DEs]=-1
set wU[DEs]=-1
set uU[DEs]=-1
set rU[DEs]=-1
endfunction
function Qmc takes integer vmc,string mmc returns nothing
set w3[MM]=mmc
set MM=MM+1
if qG[vmc]==0 then
if vmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.resetRead","when calling error in HashBuffer, line 119")
else
call Mau("Called HashBuffer.resetRead on invalid object.","when calling error in HashBuffer, line 119")
endif
endif
call HEs(vmc)
set MM=MM-1
endfunction
function PWS takes string UWS returns integer
local integer IWS
set w3[MM]=UWS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set IWS=HY
set JY[IWS]=1334
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 378")
set IWS=0
endif
else
set DY=DY-1
set IWS=AY[DY]
set JY[IWS]=1334
endif
set MM=MM-1
return IWS
endfunction
function ZWS takes string WWS returns integer
local integer EWS
set w3[MM]=WWS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set EWS=IY
set PY[EWS]=1370
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 378")
set EWS=0
endif
else
set UY=UY-1
set EWS=ZY[UY]
set PY[EWS]=1370
endif
set MM=MM-1
return EWS
endfunction
function But takes integer Jut,string Kut returns nothing
local integer Lut
local integer Xut
local integer Cut
local integer Vut
set w3[MM]=Kut
set MM=MM+1
set Cut=aq
set Lut=ZWS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 378")
set WD[Lut]=Jut
set Vut=Lut
set Xut=PWS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 378")
set ED[Xut]=Jut
call rdu(Cut,Vut,Xut,"when calling executeWhile in Network, line 378")
set MM=MM-1
endfunction
function TLc takes integer fLc,string RLc returns nothing
set w3[MM]=RLc
set MM=MM+1
if ak[fLc]==0 then
if fLc==0 then
call Mau("Nullpointer exception when calling Network.readStrings","when calling error in Network, line 377")
else
call Mau("Called Network.readStrings on invalid object.","when calling error in Network, line 377")
endif
endif
call But(fLc,"when calling readStrings in Network, line 377")
set MM=MM-1
endfunction
function VWS takes string XWS returns integer
local integer CWS
set w3[MM]=XWS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set CWS=IY
set PY[CWS]=1371
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 460")
set CWS=0
endif
else
set UY=UY-1
set CWS=ZY[UY]
set PY[CWS]=1371
endif
set MM=MM-1
return CWS
endfunction
function FWS takes string gWS returns integer
local integer hWS
set w3[MM]=gWS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set hWS=HY
set JY[hWS]=1332
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 366")
set hWS=0
endif
else
set DY=DY-1
set hWS=AY[DY]
set JY[hWS]=1332
endif
set MM=MM-1
return hWS
endfunction
function GWS takes string TWS returns integer
local integer YWS
set w3[MM]=TWS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set YWS=IY
set PY[YWS]=1368
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 366")
set YWS=0
endif
else
set UY=UY-1
set YWS=ZY[UY]
set PY[YWS]=1368
endif
set MM=MM-1
return YWS
endfunction
function Eut takes integer jut,string xut returns nothing
local integer vut
local integer mut
local integer Qut
local integer Wut
set w3[MM]=xut
set MM=MM+1
set Qut=aq
set vut=GWS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 366")
set xD[vut]=jut
set Wut=vut
set mut=FWS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 366")
set vD[mut]=jut
call rdu(Qut,Wut,mut,"when calling executeWhile in Network, line 366")
set MM=MM-1
endfunction
function qLc takes integer pLc,string eLc returns nothing
set w3[MM]=eLc
set MM=MM+1
if ak[pLc]==0 then
if pLc==0 then
call Mau("Nullpointer exception when calling Network.readBooleans","when calling error in Network, line 365")
else
call Mau("Called Network.readBooleans on invalid object.","when calling error in Network, line 365")
endif
endif
call Eut(pLc,"when calling readBooleans in Network, line 365")
set MM=MM-1
endfunction
function MQS takes string BQS returns integer
local integer NQS
set w3[MM]=BQS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set NQS=IY
set PY[NQS]=1364
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_Network.","when calling error in Network, line 342")
set NQS=0
endif
else
set UY=UY-1
set NQS=ZY[UY]
set PY[NQS]=1364
endif
set MM=MM-1
return NQS
endfunction
function rWS takes string wWS returns integer
local integer uWS
set w3[MM]=wWS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set uWS=HY
set JY[uWS]=1328
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_Network.","when calling error in Network, line 342")
set uWS=0
endif
else
set DY=DY-1
set uWS=AY[DY]
set JY[uWS]=1328
endif
set MM=MM-1
return uWS
endfunction
function Sut takes integer wut,string uut returns nothing
local integer rut
local integer sut
local integer tut
local integer iut
set w3[MM]=uut
set MM=MM+1
set tut=aq
set rut=MQS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 342")
set TD[rut]=wut
set iut=rut
set sut=rWS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 342")
set YD[sut]=wut
call rdu(tut,iut,sut,"when calling executeWhile in Network, line 342")
set MM=MM-1
endfunction
function sLc takes integer uLc,string rLc returns nothing
set w3[MM]=rLc
set MM=MM+1
if ak[uLc]==0 then
if uLc==0 then
call Mau("Nullpointer exception when calling Network.readInts","when calling error in Network, line 341")
else
call Mau("Called Network.readInts on invalid object.","when calling error in Network, line 341")
endif
endif
call Sut(uLc,"when calling readInts in Network, line 341")
set MM=MM-1
endfunction
function irt takes integer Nut,string Mut returns nothing
local integer wrt
local integer urt
local integer rrt
local integer srt
local integer trt
set w3[MM]=Mut
set MM=MM+1
if Ba and CA[Nut]!=1 then
call Mau("Network: trying to receive round at the wrong time","when calling error in Network, line 424")
endif
if not PWu(tD[Nut])then
call JKc(Nut,"when calling abort in Network, line 427")
set MM=MM-1
return
endif
if not lD[Nut]then
call BKc(Nut,"when calling receiveMetadata in Network, line 432")
endif
if ea!=tD[Nut]then
call eRc(BA[Nut],1,"when calling setMode in Network, line 437")
call sLc(Nut,"when calling readInts in Network, line 439")
call OLc(Nut,"when calling readReals in Network, line 440")
call qLc(Nut,"when calling readBooleans in Network, line 441")
call TLc(Nut,"when calling readStrings in Network, line 442")
call eRc(BA[Nut],3,"when calling setMode in Network, line 445")
endif
set qD[Nut]=qD[Nut]+1
if qD[Nut]<OD[Nut]then
set wrt=LWS("when calling alloc_ForForceCallback_execute_Network_Network in Network, line 451")
set UD[wrt]=Nut
call Inu(wrt,"when calling execute in Network, line 451")
else
if ea!=tD[Nut]then
call qro(NA[Nut],"when calling decode in Network, line 456")
call eRc(BA[Nut],1,"when calling setMode in Network, line 458")
set srt=aq
set urt=VWS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_Network in Network, line 460")
set ID[urt]=Nut
set trt=urt
set rrt=MWS("when calling alloc_LimitedExecuteAction_executeWhile_Network_Network in Network, line 460")
set PD[rrt]=Nut
call rdu(srt,trt,rrt,"when calling executeWhile in Network, line 460")
endif
call eRc(BA[Nut],0,"when calling setMode in Network, line 464")
call Qmc(BA[Nut],"when calling resetRead in Network, line 465")
set CA[Nut]=2
call ALc(aD[Nut],0,BA[Nut],"when calling onFinish in Network, line 467")
call ZKc(Nut,"when calling dispatch_Network_destroyNetwork in Network, line 468")
endif
set MM=MM-1
endfunction
function kLc takes integer hLc,string FLc returns nothing
set w3[MM]=FLc
set MM=MM+1
if ak[hLc]==0 then
if hLc==0 then
call Mau("Nullpointer exception when calling Network.receiveRound","when calling error in Network, line 422")
else
call Mau("Called Network.receiveRound on invalid object.","when calling error in Network, line 422")
endif
endif
call irt(hLc,"when calling receiveRound in Network, line 422")
set MM=MM-1
endfunction
function vst takes integer jst,string xst returns nothing
set w3[MM]=xst
set MM=MM+1
call kLc(ZD[jst],"when calling receiveRound in Network, line 420")
set MM=MM-1
endfunction
function gto takes integer Yto,string Gto returns nothing
set w3[MM]=Gto
set MM=MM+1
if ek[Yto]==0 then
if Yto==0 then
call Mau("Nullpointer exception when calling SynchronizationCallback.onSynchronized","when calling error in SyncSimple, line 111")
else
call Mau("Called SynchronizationCallback.onSynchronized on invalid object.","when calling error in SyncSimple, line 111")
endif
endif
if ek[Yto]<=1647 then
if ek[Yto]<=1646 then
call vst(Yto,"when calling onSynchronized_onSynced_Network_Network in SyncSimple, line 111")
else
call A_t(Yto,"when calling onSynchronized_onSynced_Network_NetworkData in SyncSimple, line 111")
endif
elseif ek[Yto]<=1648 then
call Bot(Yto,"when calling onSynchronized_onSynced_PersistentStore_Persistable in SyncSimple, line 111")
else
call dOt(Yto,"when calling onSynchronized_onSynced_PersistentStore_Persistable in SyncSimple, line 111")
endif
set MM=MM-1
endfunction
function U4i takes integer Z4i returns boolean
return jC[Z4i]==HR
endfunction
function tto takes integer uto,string rto returns boolean
local boolean sto
set w3[MM]=rto
set MM=MM+1
if Yv[uto]==0 then
if uto==0 then
call Mau("Nullpointer exception when calling SimpleSynchronizer.areAllPlayersSynced","when calling error in SyncSimple, line 147")
else
call Mau("Called SimpleSynchronizer.areAllPlayersSynced on invalid object.","when calling error in SyncSimple, line 147")
endif
endif
set sto=U4i(uto)
set MM=MM-1
return sto
endfunction
function H4i takes integer I4i,player P4i,string A4i returns nothing
local integer D4i
set w3[MM]=A4i
set MM=MM+1
set D4i=Ewu(jC[I4i],bWu(P4i))
set jC[I4i]=D4i
if tto(I4i,"when calling areAllPlayersSynced in SyncSimple, line 153")then
call gto(xC[I4i],"when calling onSynchronized in SyncSimple, line 154")
call Hso(I4i,"when calling dispatch_SimpleSynchronizer_destroySimpleSynchronizer in SyncSimple, line 156")
endif
set MM=MM-1
endfunction
function oto takes integer ito,player Sto,string cto returns nothing
set w3[MM]=cto
set MM=MM+1
if Yv[ito]==0 then
if ito==0 then
call Mau("Nullpointer exception when calling SimpleSynchronizer.onPlayerFinishedSync","when calling error in SyncSimple, line 150")
else
call Mau("Called SimpleSynchronizer.onPlayerFinishedSync on invalid object.","when calling error in SyncSimple, line 150")
endif
endif
call H4i(ito,Sto,"when calling onPlayerFinishedSync in SyncSimple, line 150")
set MM=MM-1
endfunction
function B4i takes integer X4i,player C4i,string V4i returns nothing
set w3[MM]=V4i
set MM=MM+1
call oto(X4i,C4i,"when calling onPlayerFinishedSync in SyncSimple, line 159")
set MM=MM-1
endfunction
function yto takes integer Oto,player lto,string bto returns nothing
set w3[MM]=bto
set MM=MM+1
if Yv[Oto]==0 then
if Oto==0 then
call Mau("Nullpointer exception when calling SimpleSynchronizer.onPlayerLeave","when calling error in SyncSimple, line 158")
else
call Mau("Called SimpleSynchronizer.onPlayerLeave on invalid object.","when calling error in SyncSimple, line 158")
endif
endif
call B4i(Oto,lto,"when calling onPlayerLeave in SyncSimple, line 158")
set MM=MM-1
endfunction
function G4i takes integer d4i,string f4i returns nothing
local player R4i
local integer T4i
local integer Y4i
set w3[MM]=f4i
set MM=MM+1
set R4i=GetTriggerPlayer()
set T4i=ekr("when calling iterator in SyncSimple, line 174")
loop
exitwhen not j2S(T4i)
set Y4i=m2S(T4i)
call yto(Y4i,R4i,"when calling onPlayerLeave in SyncSimple, line 175")
endloop
call E2S(T4i,"when calling close in SyncSimple, line 174")
set MM=MM-1
set R4i=null
endfunction
function M6r takes unit N6r returns nothing
call KillUnit(N6r)
endfunction
function aTu takes group eTu returns unit
local unit qTu=FirstOfGroup(eTu)
call GroupRemoveUnit(eTu,qTu)
set ynw=qTu
set qTu=null
return ynw
endfunction
function enu takes nothing returns unit
return GetDyingUnit()
endfunction
function lTu takes group OTu returns boolean
return FirstOfGroup(OTu)!=null
endfunction
function uYu takes hashtable NTu,integer MTu,integer wYu returns group
return LoadGroupHandle(NTu,MTu,wYu)
endfunction
function U6S takes integer E6S,integer Z6S returns group
return uYu(VR,E6S,Z6S)
endfunction
function BSo takes integer LSo,integer XSo,string CSo returns group
local group VSo
set w3[MM]=CSo
set MM=MM+1
if Yh[LSo]==0 then
if LSo==0 then
call Mau("Nullpointer exception when calling Table.loadGroup","when calling error in Table, line 105")
else
call Mau("Called Table.loadGroup on invalid object.","when calling error in Table, line 105")
endif
endif
set VSo=U6S(LSo,XSo)
set MM=MM-1
set Qdw=VSo
set VSo=null
return Qdw
endfunction
function VYu takes hashtable KYu,integer LYu,integer XYu,fogstate CYu returns nothing
call SaveFogStateHandle(KYu,LYu,XYu,CYu)
endfunction
function C6S takes integer K6S,integer L6S,fogstate X6S returns nothing
call VYu(VR,K6S,L6S,X6S)
endfunction
function yco takes integer oco,integer Oco,fogstate lco,string bco returns nothing
set w3[MM]=bco
set MM=MM+1
if Yh[oco]==0 then
if oco==0 then
call Mau("Nullpointer exception when calling Table.saveFogState","when calling error in Table, line 168")
else
call Mau("Called Table.saveFogState on invalid object.","when calling error in Table, line 168")
endif
endif
call C6S(oco,Oco,lco)
set MM=MM-1
endfunction
function Dvr takes integer Ivr,string Pvr returns group
local group Avr
set w3[MM]=Pvr
set MM=MM+1
call yco(YT,0,ConvertFogState(Ivr),"when calling saveFogState in TypeCasting, line 88")
set Avr=BSo(YT,0,"when calling loadGroup in TypeCasting, line 89")
set MM=MM-1
set vnw=Avr
set Avr=null
return vnw
endfunction
function rTu takes group wTu,group uTu returns integer
return BlzGroupAddGroupFast(uTu,wTu)
endfunction
function vvr takes unit xvr returns integer
return l7s(xvr)
endfunction
function ZQi takes integer vQi,unit mQi,string QQi returns group
local group WQi
local group EQi
set w3[MM]=QQi
set MM=MM+1
set WQi=CreateGroup()
call rTu(WQi,Dvr(BZc(EL[vQi],vvr(mQi),"when calling get in ScmdUnitParamLinkingBuiltins, line 45"),"when calling groupFromIndex in ScmdUnitParamLinkingBuiltins, line 45"))
set EQi=WQi
set MM=MM-1
set Cnw=EQi
set WQi=null
set EQi=null
return Cnw
endfunction
function uwo takes integer B_o,unit N_o,string M_o returns group
local group wwo
set w3[MM]=M_o
set MM=MM+1
if rv[B_o]==0 then
if B_o==0 then
call Mau("Nullpointer exception when calling DisjointGroups.get","when calling error in ScmdUnitParamLinkingBuiltins, line 44")
else
call Mau("Called DisjointGroups.get on invalid object.","when calling error in ScmdUnitParamLinkingBuiltins, line 44")
endif
endif
set wwo=ZQi(B_o,N_o,"when calling get in ScmdUnitParamLinkingBuiltins, line 44")
set MM=MM-1
set kdw=wwo
set wwo=null
return kdw
endfunction
function Kvi takes integer Pvi,string Avi returns nothing
local group Dvi
local unit Hvi
local group Jvi
set w3[MM]=Avi
set MM=MM+1
if not CM[YL[Pvi]]then
set Dvi=uwo(GL[Pvi],enu(),"when calling get in ScmdUnitParamLinkingBuiltins, line 105")
if Dvi!=null then
set CM[YL[Pvi]]=true
set Jvi=Dvi
loop
exitwhen not lTu(Jvi)
set Hvi=aTu(Jvi)
call M6r(Hvi)
endloop
set CM[YL[Pvi]]=false
endif
endif
set MM=MM-1
set Dvi=null
set Hvi=null
set Jvi=null
endfunction
function dTu takes group nTu returns nothing
call tTu(nTu)
call STu(nTu)
endfunction
function nnu takes nothing returns integer
return GetIssuedOrderId()
endfunction
function qnu takes nothing returns unit
return GetOrderedUnit()
endfunction
function u8s takes unit M7s,integer w8s returns boolean
return IssueImmediateOrderById(M7s,w8s)
endfunction
function yTu takes group bTu returns group
set Ye=CreateGroup()
call ForGroup(bTu,Oaw)
return Ye
endfunction
function Mvi takes integer Lvi,string Xvi returns nothing
local group Cvi
local integer Vvi
local group Bvi
local unit Nvi
set w3[MM]=Xvi
set MM=MM+1
if not CM[gL[Lvi]]then
set Cvi=uwo(hL[Lvi],qnu(),"when calling get in ScmdUnitParamLinkingBuiltins, line 116")
if Cvi!=null then
set CM[gL[Lvi]]=true
set Vvi=nnu()
set Bvi=yTu(Cvi)
loop
exitwhen not lTu(Bvi)
set Nvi=aTu(Bvi)
call u8s(Nvi,Vvi)
endloop
call dTu(Bvi)
set CM[gL[Lvi]]=false
endif
endif
set MM=MM-1
set Cvi=null
set Bvi=null
set Nvi=null
endfunction
function Ofr takes integer ofr returns unit
return Wf[ofr]
endfunction
function UUi takes integer ZUi returns nothing
call E8s(Ofr(bWu(GetTriggerPlayer())))
endfunction
function Hno takes group Ano,unit Dno returns nothing
call GroupRemoveUnit(Ano,Dno)
endfunction
function anu takes nothing returns unit
return BlzGetEventDamageTarget()
endfunction
function dnu takes nothing returns real
return GetEventDamage()
endfunction
function rsc takes string wsc returns integer
local integer usc
set w3[MM]=wsc
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set usc=ZG
set UG[usc]=695
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_add_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 95")
set usc=0
endif
else
set EG=EG-1
set usc=WG[EG]
set UG[usc]=695
endif
set MM=MM-1
return usc
endfunction
function Wvi takes integer jvi,string xvi returns nothing
local group vvi
local real mvi
local integer Qvi
set w3[MM]=xvi
set MM=MM+1
set vvi=uwo(fL[jvi],anu(),"when calling get in ScmdUnitParamLinkingBuiltins, line 91")
if vvi!=null then
call Hno(vvi,anu())
set mvi=dnu()
set Qvi=rsc("when calling alloc_CallbackSingle_nullTimer_add_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 95")
call KGs(Qvi)
set RL[Qvi]=vvi
set TL[Qvi]=mvi
call Cou(Qvi,"when calling nullTimer in ScmdUnitParamLinkingBuiltins, line 95")
endif
set MM=MM-1
set vvi=null
endfunction
function Rnu takes nothing returns widget
return GetOrderTarget()
endfunction
function f8s takes unit a8s,integer n8s,widget d8s returns boolean
return IssueTargetOrderById(a8s,n8s,d8s)
endfunction
function dmi takes integer bmi,string ymi returns nothing
local group pmi
local integer emi
local widget qmi
local group ami
local unit nmi
set w3[MM]=ymi
set MM=MM+1
if not CM[jL[bmi]]then
set pmi=uwo(xL[bmi],qnu(),"when calling get in ScmdUnitParamLinkingBuiltins, line 137")
if pmi!=null then
set CM[jL[bmi]]=true
set emi=nnu()
set qmi=Rnu()
set ami=yTu(pmi)
loop
exitwhen not lTu(ami)
set nmi=aTu(ami)
call f8s(nmi,emi,qmi)
endloop
call dTu(ami)
set CM[jL[bmi]]=false
endif
endif
set MM=MM-1
set pmi=null
set qmi=null
set ami=null
set nmi=null
endfunction
function Qrs takes widget mrs returns real
return GetWidgetLife(mrs)
endfunction
function k0s takes unit F0s returns integer
return BlzGetUnitMaxHP(F0s)
endfunction
function kvi takes integer qvi,string avi returns nothing
local group nvi
local unit dvi
local real fvi
local integer Rvi
local group Tvi
local unit Yvi
local real Gvi
local real gvi
local unit hvi
local group Fvi
set w3[MM]=avi
set MM=MM+1
set nvi=uwo(dL[qvi],anu(),"when calling get in ScmdUnitParamLinkingBuiltins, line 72")
if nvi!=null then
set dvi=anu()
set fvi=0.
set Rvi=0
set Tvi=yTu(nvi)
loop
exitwhen not lTu(Tvi)
set Yvi=aTu(Tvi)
set fvi=fvi+Qrs(Yvi)
set Rvi=Rvi+k0s(Yvi)
endloop
call dTu(Tvi)
set Gvi=dnu()
if Qrs(dvi)<Gvi then
endif
set fvi=fvi-Gvi
set gvi=fvi/Rvi
set Fvi=nvi
loop
exitwhen not lTu(Fvi)
set hvi=aTu(Fvi)
call Zrs(hvi,gvi*k0s(hvi))
endloop
endif
set MM=MM-1
set nvi=null
set dvi=null
set Tvi=null
set Yvi=null
set hvi=null
set Fvi=null
endfunction
function Tnu takes nothing returns real
set y1=GetOrderPointX()
set p1=GetOrderPointY()
return y1
endfunction
function b8s takes unit c8s,integer o8s,real O8s,real l8s returns boolean
return IssuePointOrderById(c8s,o8s,O8s,l8s)
endfunction
function lmi takes integer wmi,string umi returns nothing
local group rmi
local integer smi
local real tmi
local real imi
local group Smi
local unit cmi
local real omi
local real Omi
set w3[MM]=umi
set MM=MM+1
if not CM[FL[wmi]]then
set rmi=uwo(kL[wmi],qnu(),"when calling get in ScmdUnitParamLinkingBuiltins, line 125")
if rmi!=null then
set CM[FL[wmi]]=true
set smi=nnu()
if smi==Xq then
set smi=Kq
endif
set omi=Tnu()
set Omi=p1
set tmi=omi
set imi=Omi
set Smi=yTu(rmi)
loop
exitwhen not lTu(Smi)
set cmi=aTu(Smi)
call b8s(cmi,smi,tmi,imi)
endloop
call dTu(Smi)
set CM[FL[wmi]]=false
endif
endif
set MM=MM-1
set rmi=null
set Smi=null
set cmi=null
endfunction
function bkr takes unit lkr returns integer
return DR[QHr(lkr)]
endfunction
function n4i takes integer e4i,string q4i returns nothing
local integer a4i
set w3[MM]=q4i
set MM=MM+1
set a4i=bkr(GetTriggerUnit())
if a4i!=0 then
call oto(a4i,GetTriggerPlayer(),"when calling onPlayerFinishedSync in SyncSimple, line 169")
endif
set MM=MM-1
endfunction
function ZAs takes integer vAs,integer mAs,string QAs returns nothing
local integer WAs
local integer EAs
set w3[MM]=QAs
set MM=MM+1
call KEc(vAs,iYu(Ge,vAs,mAs),"when calling decrOccurences in HashList, line 54")
set WAs=mAs
set EAs=TU[vAs]
loop
exitwhen WAs>EAs
call uGu(Ge,vAs,WAs,iYu(Ge,vAs,WAs+1))
set WAs=WAs+1
endloop
set TU[vAs]=TU[vAs]-1
set MM=MM-1
endfunction
function hGu takes hashtable YGu,integer GGu,integer gGu returns nothing
call RemoveSavedInteger(YGu,GGu,gGu)
endfunction
function AHs takes integer EHs,integer ZHs,string UHs returns nothing
local integer IHs
local integer PHs
set w3[MM]=UHs
set MM=MM+1
call hGu(he,EHs,TZc(EHs,ZHs,"when calling get in HashSet, line 22"))
set IHs=ZHs+1
set PHs=yZc(EHs,"when calling size in HashSet, line 23")
loop
exitwhen IHs>PHs
call uGu(he,EHs,TZc(EHs,IHs,"when calling get in HashSet, line 24"),iYu(he,EHs,TZc(EHs,IHs,"when calling get in HashSet, line 24"))-1)
set IHs=IHs+1
endloop
call ZAs(EHs,ZHs,"when calling removeAt in HashSet, line 25")
set MM=MM-1
endfunction
function xUc takes integer FUc,integer kUc,string jUc returns nothing
set w3[MM]=jUc
set MM=MM+1
if dh[FUc]==0 then
if FUc==0 then
call Mau("Nullpointer exception when calling HashSet.removeAt","when calling error in HashSet, line 21")
else
call Mau("Called HashSet.removeAt on invalid object.","when calling error in HashSet, line 21")
endif
endif
call AHs(FUc,kUc,"when calling removeAt in HashSet, line 21")
set MM=MM-1
endfunction
function KHs takes integer DHs,integer HHs,string JHs returns nothing
set w3[MM]=JHs
set MM=MM+1
if ZEc(DHs,HHs,"when calling count in HashSet, line 17")>0 then
call xUc(DHs,iYu(he,DHs,HHs),"when calling removeAt in HashSet, line 18")
endif
set MM=MM-1
endfunction
function hUc takes integer YUc,integer GUc,string gUc returns nothing
set w3[MM]=gUc
set MM=MM+1
if dh[YUc]==0 then
if YUc==0 then
call Mau("Nullpointer exception when calling HashSet.remove","when calling error in HashSet, line 16")
else
call Mau("Called HashSet.remove on invalid object.","when calling error in HashSet, line 16")
endif
endif
call KHs(YUc,GUc,"when calling remove in HashSet, line 16")
set MM=MM-1
endfunction
function AFu takes lightning PFu returns boolean
return DestroyLightning(PFu)
endfunction
function OYu takes hashtable SYu,integer cYu,integer oYu returns lightning
return LoadLightningHandle(SYu,cYu,oYu)
endfunction
function N6S takes integer V6S,integer B6S returns lightning
return OYu(VR,V6S,B6S)
endfunction
function nco takes integer pco,integer eco,string qco returns lightning
local lightning aco
set w3[MM]=qco
set MM=MM+1
if Yh[pco]==0 then
if pco==0 then
call Mau("Nullpointer exception when calling Table.loadLightning","when calling error in Table, line 213")
else
call Mau("Called Table.loadLightning on invalid object.","when calling error in Table, line 213")
endif
endif
set aco=N6S(pco,eco)
set MM=MM-1
set Zdw=aco
set aco=null
return Zdw
endfunction
function imr takes integer rmr,string smr returns lightning
local lightning tmr
set w3[MM]=smr
set MM=MM+1
set tmr=nco(YT,rmr,"when calling loadLightning in TypeCasting, line 207")
set MM=MM-1
set Wnw=tmr
set tmr=null
return Wnw
endfunction
function Pyt takes integer Eyt,string Zyt returns nothing
local integer Uyt
local lightning Iyt
set w3[MM]=Zyt
set MM=MM+1
set Uyt=kAs(KH[Eyt],"when calling iterator in RectDrawing, line 38")
loop
exitwhen not PPs(Uyt,"when calling hasNext in RectDrawing, line 38")
set Iyt=imr(EPs(Uyt,"when calling next in RectDrawing, line 38"),"when calling lightningFromIndex in RectDrawing, line 38")
call AFu(Iyt)
endloop
call HPs(Uyt,"when calling close in RectDrawing, line 38")
call wZc(KH[Eyt],"when calling clear in RectDrawing, line 40")
set MM=MM-1
set Iyt=null
endfunction
function HNc takes integer ANc,string DNc returns nothing
set w3[MM]=DNc
set MM=MM+1
if wj[ANc]==0 then
if ANc==0 then
call Mau("Nullpointer exception when calling RectDrawing.clear","when calling error in RectDrawing, line 37")
else
call Mau("Called RectDrawing.clear on invalid object.","when calling error in RectDrawing, line 37")
endif
endif
call Pyt(ANc,"when calling clear in RectDrawing, line 37")
set MM=MM-1
endfunction
function IFu takes lightning QFu,integer WFu,integer EFu,integer ZFu,integer UFu returns boolean
return SetLightningColor(QFu,WFu*1./255,EFu*1./255,ZFu*1./255,UFu*1./255)
endfunction
function SGu takes hashtable rGu,integer sGu,integer tGu,lightning iGu returns nothing
call SaveLightningHandle(rGu,sGu,tGu,iGu)
endfunction
function r7S takes integer M6S,integer w7S,lightning u7S returns nothing
call SGu(VR,M6S,w7S,u7S)
endfunction
function Yco takes integer dco,integer fco,lightning Rco,string Tco returns nothing
set w3[MM]=Tco
set MM=MM+1
if Yh[dco]==0 then
if dco==0 then
call Mau("Nullpointer exception when calling Table.saveLightning","when calling error in Table, line 216")
else
call Mau("Called Table.saveLightning on invalid object.","when calling error in Table, line 216")
endif
endif
call r7S(dco,fco,Rco)
set MM=MM-1
endfunction
function Omr takes lightning Smr,string cmr returns integer
local integer omr
set w3[MM]=cmr
set MM=MM+1
call Yco(YT,-l7s(Smr),Smr,"when calling saveLightning in TypeCasting, line 210")
set omr=-l7s(Smr)
set MM=MM-1
return omr
endfunction
function mFu takes string hFu,boolean FFu,real kFu,real jFu,real xFu,real vFu returns lightning
return AddLightning(hFu,FFu,kFu,jFu,xFu,vFu)
endfunction
function byt takes integer tyt,real iyt,real Syt,real cyt,real oyt,string Oyt returns nothing
local lightning lyt
set w3[MM]=Oyt
set MM=MM+1
set lyt=mFu(XH[tyt],false,iyt,Syt,cyt,oyt)
if ea!=LH[tyt]then
call IFu(lyt,0,0,0,0)
endif
call Nno(KH[tyt],Omr(lyt,"when calling lightningToIndex in RectDrawing, line 19"),"when calling add in RectDrawing, line 19")
set MM=MM-1
set lyt=null
endfunction
function FNc takes integer RNc,real TNc,real YNc,real GNc,real gNc,string hNc returns nothing
set w3[MM]=hNc
set MM=MM+1
if wj[RNc]==0 then
if RNc==0 then
call Mau("Nullpointer exception when calling RectDrawing.drawSegment","when calling error in RectDrawing, line 15")
else
call Mau("Called RectDrawing.drawSegment on invalid object.","when calling error in RectDrawing, line 15")
endif
endif
call byt(RNc,TNc,YNc,GNc,gNc,"when calling drawSegment in RectDrawing, line 15")
set MM=MM-1
endfunction
function oUu takes real SUu returns real
local real cUu
if SUu<0. then
set cUu=-SUu
else
set cUu=SUu
endif
return cUu
endfunction
function Wyt takes integer Gyt,real gyt,real hyt,real Fyt,string kyt returns nothing
local integer jyt
local real xyt
local real vyt
local integer myt
local integer Qyt
set w3[MM]=kyt
set MM=MM+1
set jyt=TUu(oUu(Fyt/Pa))
set xyt=Fyt/jyt
set vyt=hyt
set myt=0
set Qyt=jyt-1
loop
exitwhen myt>Qyt
call FNc(Gyt,gyt,vyt,gyt,vyt+xyt,"when calling drawSegment in RectDrawing, line 34")
set vyt=vyt+xyt
set myt=myt+1
endloop
set MM=MM-1
endfunction
function PNc takes integer WNc,real ENc,real ZNc,real UNc,string INc returns nothing
set w3[MM]=INc
set MM=MM+1
if wj[WNc]==0 then
if WNc==0 then
call Mau("Nullpointer exception when calling RectDrawing.drawVerticalLine","when calling error in RectDrawing, line 29")
else
call Mau("Called RectDrawing.drawVerticalLine on invalid object.","when calling error in RectDrawing, line 29")
endif
endif
call Wyt(WNc,ENc,ZNc,UNc,"when calling drawVerticalLine in RectDrawing, line 29")
set MM=MM-1
endfunction
function Yyt takes integer yyt,real pyt,real eyt,real qyt,string ayt returns nothing
local integer nyt
local real dyt
local real fyt
local integer Ryt
local integer Tyt
set w3[MM]=ayt
set MM=MM+1
set nyt=TUu(oUu(qyt/Pa))
set dyt=qyt/nyt
set fyt=pyt
set Ryt=0
set Tyt=nyt-1
loop
exitwhen Ryt>Tyt
call FNc(yyt,fyt,eyt,fyt+dyt,eyt,"when calling drawSegment in RectDrawing, line 26")
set fyt=fyt+dyt
set Ryt=Ryt+1
endloop
set MM=MM-1
endfunction
function QNc takes integer kNc,real jNc,real xNc,real vNc,string mNc returns nothing
set w3[MM]=mNc
set MM=MM+1
if wj[kNc]==0 then
if kNc==0 then
call Mau("Nullpointer exception when calling RectDrawing.drawHorizontalLine","when calling error in RectDrawing, line 21")
else
call Mau("Called RectDrawing.drawHorizontalLine on invalid object.","when calling error in RectDrawing, line 21")
endif
endif
call Yyt(kNc,jNc,xNc,vNc,"when calling drawHorizontalLine in RectDrawing, line 21")
set MM=MM-1
endfunction
function Hyt takes integer Ayt,string Dyt returns nothing
set w3[MM]=Dyt
set MM=MM+1
call QNc(Ayt,CH[Ayt],VH[Ayt],BH[Ayt]-CH[Ayt],"when calling drawHorizontalLine in RectDrawing, line 43")
call QNc(Ayt,BH[Ayt],NH[Ayt],CH[Ayt]-BH[Ayt],"when calling drawHorizontalLine in RectDrawing, line 44")
call PNc(Ayt,CH[Ayt],NH[Ayt],VH[Ayt]-NH[Ayt],"when calling drawVerticalLine in RectDrawing, line 45")
call PNc(Ayt,BH[Ayt],VH[Ayt],NH[Ayt]-VH[Ayt],"when calling drawVerticalLine in RectDrawing, line 46")
set MM=MM-1
endfunction
function LNc takes integer JNc,string KNc returns nothing
set w3[MM]=KNc
set MM=MM+1
if wj[JNc]==0 then
if JNc==0 then
call Mau("Nullpointer exception when calling RectDrawing.draw","when calling error in RectDrawing, line 42")
else
call Mau("Called RectDrawing.draw on invalid object.","when calling error in RectDrawing, line 42")
endif
endif
call Hyt(JNc,"when calling draw in RectDrawing, line 42")
set MM=MM-1
endfunction
function YIu takes rect nIu,real dIu,real fIu,real RIu,real TIu returns nothing
call SetRect(nIu,dIu,fIu,RIu,TIu)
endfunction
function Lyt takes integer Jyt,string Kyt returns nothing
set w3[MM]=Kyt
set MM=MM+1
call HNc(Jyt,"when calling clear in RectDrawing, line 49")
call YIu(MH[Jyt],CH[Jyt],VH[Jyt],BH[Jyt],NH[Jyt])
call LNc(Jyt,"when calling draw in RectDrawing, line 51")
set MM=MM-1
endfunction
function VNc takes integer XNc,string CNc returns nothing
set w3[MM]=CNc
set MM=MM+1
if wj[XNc]==0 then
if XNc==0 then
call Mau("Nullpointer exception when calling RectDrawing.repaint","when calling error in RectDrawing, line 48")
else
call Mau("Called RectDrawing.repaint on invalid object.","when calling error in RectDrawing, line 48")
endif
endif
call Lyt(XNc,"when calling repaint in RectDrawing, line 48")
set MM=MM-1
endfunction
function Byt takes integer Xyt,string Cyt,string Vyt returns nothing
set w3[MM]=Vyt
set MM=MM+1
set XH[Xyt]=Cyt
call VNc(Xyt,"when calling repaint in RectDrawing, line 85")
set MM=MM-1
endfunction
function wMc takes integer BNc,string NNc,string MNc returns nothing
set w3[MM]=MNc
set MM=MM+1
if wj[BNc]==0 then
if BNc==0 then
call Mau("Nullpointer exception when calling RectDrawing.setCodeName","when calling error in RectDrawing, line 83")
else
call Mau("Called RectDrawing.setCodeName on invalid object.","when calling error in RectDrawing, line 83")
endif
endif
call Byt(BNc,NNc,"when calling setCodeName in RectDrawing, line 83")
set MM=MM-1
endfunction
function tKi takes integer uKi,string rKi returns nothing
local integer sKi
set w3[MM]=rKi
set MM=MM+1
if GetTriggerPlayer()==pa[cX[uKi]]then
set sKi=BZc(fR,vvr(oX[uKi]),"when calling get in SotfrpGuiRegions, line 115")
call wMc(sKi,null,"when calling setCodeName in SotfrpGuiRegions, line 116")
call hUc(dR[cX[uKi]],sKi,"when calling remove in SotfrpGuiRegions, line 117")
endif
set MM=MM-1
endfunction
function Pno takes integer Zno,integer Uno,string Ino returns nothing
set w3[MM]=Ino
set MM=MM+1
if dh[Zno]==0 then
if Zno==0 then
call Mau("Nullpointer exception when calling HashSet.add","when calling error in HashSet, line 9")
else
call Mau("Called HashSet.add on invalid object.","when calling error in HashSet, line 9")
endif
endif
call Eno(Zno,Uno,"when calling add in HashSet, line 9")
set MM=MM-1
endfunction
function wKi takes integer BJi,string NJi returns nothing
local integer MJi
set w3[MM]=NJi
set MM=MM+1
if GetTriggerPlayer()==pa[iX[BJi]]then
set MJi=BZc(fR,vvr(SX[BJi]),"when calling get in SotfrpGuiRegions, line 108")
call wMc(MJi,Ue,"when calling setCodeName in SotfrpGuiRegions, line 109")
call Pno(dR[iX[BJi]],MJi,"when calling add in SotfrpGuiRegions, line 110")
else
call UWu(GetTriggerPlayer(),SX[BJi])
endif
set MM=MM-1
endfunction
function PGc takes integer UGc,string IGc returns nothing
set w3[MM]=IGc
set MM=MM+1
if tg[UGc]==0 then
if UGc==0 then
call Mau("Nullpointer exception when calling EventListener.onEvent","when calling error in ClosureEvents, line 109")
else
call Mau("Called EventListener.onEvent on invalid object.","when calling error in ClosureEvents, line 109")
endif
endif
if tg[UGc]<=747 then
if tg[UGc]<=744 then
if tg[UGc]<=743 then
if tg[UGc]<=742 then
call kvi(UGc,"when calling onEvent_add_ScmdUnitParamLinkingBuiltins in ClosureEvents, line 109")
else
call Wvi(UGc,"when calling onEvent_add_ScmdUnitParamLinkingBuiltins in ClosureEvents, line 109")
endif
else
call Kvi(UGc,"when calling onEvent_add_ScmdUnitParamLinkingBuiltins in ClosureEvents, line 109")
endif
elseif tg[UGc]<=746 then
if tg[UGc]<=745 then
call Mvi(UGc,"when calling onEvent_add_ScmdUnitParamLinkingBuiltins in ClosureEvents, line 109")
else
call lmi(UGc,"when calling onEvent_add_ScmdUnitParamLinkingBuiltins in ClosureEvents, line 109")
endif
else
call dmi(UGc,"when calling onEvent_add_ScmdUnitParamLinkingBuiltins in ClosureEvents, line 109")
endif
elseif tg[UGc]<=750 then
if tg[UGc]<=749 then
if tg[UGc]<=748 then
call UUi(UGc)
else
call wKi(UGc,"when calling onEvent_add_SotfrpGuiRegions in ClosureEvents, line 109")
endif
else
call tKi(UGc,"when calling onEvent_add_SotfrpGuiRegions in ClosureEvents, line 109")
endif
elseif tg[UGc]<=751 then
call n4i(UGc,"when calling onEvent_add_SyncSimple in ClosureEvents, line 109")
else
call G4i(UGc,"when calling onEvent_add_SyncSimple in ClosureEvents, line 109")
endif
set MM=MM-1
endfunction
function Riu takes unit fiu returns boolean
return true
endfunction
function Xxr takes trigger Hxr,player Jxr,playerunitevent Kxr,boolexpr Lxr returns event
return TriggerRegisterPlayerUnitEvent(Hxr,Jxr,Kxr,Lxr)
endfunction
function ixr takes trigger sxr,boolexpr txr returns triggercondition
return TriggerAddCondition(sxr,txr)
endfunction
function rxr takes trigger wxr,code uxr returns triggeraction
return TriggerAddAction(wxr,uxr)
endfunction
function wPu takes playerunitevent HIu,code JIu,code KIu,code LIu returns nothing
local integer XIu=l7s(HIu)
local integer CIu
local filterfunc VIu
local trigger BIu
local player NIu
local playerunitevent MIu
if Aa[XIu]==null then
set Aa[XIu]=CreateTrigger()
set CIu=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen CIu<0
set BIu=Aa[XIu]
set NIu=pa[CIu]
set MIu=HIu
if JIu!=null then
set VIu=Filter(JIu)
else
set VIu=null
endif
call Xxr(BIu,NIu,MIu,VIu)
set CIu=CIu-1
endloop
endif
if KIu!=null then
call ixr(Aa[XIu],Filter(KIu))
endif
if LIu!=null then
call rxr(Aa[XIu],LIu)
endif
set VIu=null
set BIu=null
set NIu=null
set MIu=null
endfunction
function DIu takes playerunitevent PIu,code AIu returns nothing
call wPu(PIu,null,AIu,null)
endfunction
function Dxr takes trigger Ixr,player Pxr,playerevent Axr returns event
return TriggerRegisterPlayerEvent(Ixr,Pxr,Axr)
endfunction
function cnu takes eventid inu returns boolean
local integer Snu=l7s(inu)
return(Snu>=18 and Snu<=51)or(Snu>=269 and Snu<=277)or Snu==315 or Snu==308
endfunction
function lnu takes eventid onu returns boolean
local integer Onu=l7s(onu)
return(Onu>=261 and Onu<=268)or Onu==17
endfunction
function pnu takes eventid bnu returns boolean
local integer ynu=l7s(bnu)
return ynu>=305 and ynu<=307
endfunction
function Wiu takes eventid hiu,string Fiu returns integer
local integer kiu
local integer jiu
local integer xiu
local trigger viu
local trigger miu
local trigger Qiu
set w3[MM]=Fiu
set MM=MM+1
set kiu=l7s(hiu)
set By=By+1
set Vy[kiu]=By
if cnu(hiu)then
call DIu(ConvertPlayerUnitEvent(kiu),Mqw)
elseif hiu!=EVENT_UNIT_DAMAGED and hiu!=EVENT_PLAYER_LEAVE and hiu!=Ky and(not lnu(hiu))and(not pnu(hiu))then
call Mau("registering handleid: "+tgu(kiu)+" non-playerunitevent. Except EVENT_UNIT_DAMAGED and EVENT_PLAYER_LEAVE these are not supported right now.","when calling error in ClosureEvents, line 245")
endif
if pnu(hiu)and(not rp)then
set rp=true
set jiu=0
set xiu=bj_MAX_PLAYERS-1
loop
exitwhen jiu>xiu
set viu=Cy
call Dxr(viu,pa[jiu],EVENT_PLAYER_MOUSE_UP)
set miu=viu
call Dxr(miu,pa[jiu],EVENT_PLAYER_MOUSE_DOWN)
set Qiu=miu
call Dxr(Qiu,pa[jiu],EVENT_PLAYER_MOUSE_MOVE)
set jiu=jiu+1
endloop
endif
set MM=MM-1
set viu=null
set miu=null
set Qiu=null
return By
endfunction
function giu takes eventid Tiu,string Yiu returns integer
local integer Giu
set w3[MM]=Yiu
set MM=MM+1
set Giu=Vy[l7s(Tiu)]
if Giu==0 then
set Giu=Wiu(Tiu,"when calling registerEventId in ClosureEvents, line 232")
endif
set MM=MM-1
return Giu
endfunction
function VSu takes string DSu returns nothing
local unit HSu
local integer JSu
local integer KSu
local integer LSu
local integer XSu
local integer CSu
set w3[MM]=DSu
set MM=MM+1
set HSu=GetTriggerUnit()
set JSu=giu(GetTriggerEventId(),"when calling toIntId in ClosureEvents, line 170")
if HSu!=null and Riu(HSu)and QHr(HSu)>0 then
if up[QHr(HSu)]!=0 then
set KSu=up[QHr(HSu)]
loop
exitwhen not(KSu!=0)
set LSu=ZW[KSu]
if EW[KSu]==JSu then
call PGc(KSu,"when calling onEvent in ClosureEvents, line 178")
endif
set KSu=LSu
endloop
endif
endif
if wp[JSu]!=0 then
set XSu=wp[JSu]
loop
exitwhen not(XSu!=0)
set CSu=ZW[XSu]
call PGc(XSu,"when calling onEvent in ClosureEvents, line 185")
set XSu=CSu
endloop
endif
set MM=MM-1
set HSu=null
endfunction
function BRo takes nothing returns nothing
set MM=0
call VSu("ClosureEvents, line 243")
endfunction
function BVw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call GroupRemoveUnit(Xs,GetEnumUnit())
endif
endfunction
function BXw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call CreateItemLoc(1227896405,G)
call RemoveLocation(G)
endfunction
function HkS takes string AkS returns integer
local integer DkS
set w3[MM]=AkS
set MM=MM+1
if Rh==0 then
if Th<32768 then
set Th=Th+1
set DkS=Th
set Yh[DkS]=1656
else
call Mau("Out of memory: Could not create HashMap.","when calling error in HashMap, line 8")
set DkS=0
endif
else
set Rh=Rh-1
set DkS=fh[Rh]
set Yh[DkS]=1656
endif
set MM=MM-1
return DkS
endfunction
function PDs takes integer IDs returns nothing
set YU[IDs]=0
endfunction
function S7S takes integer i7S returns nothing
endfunction
function b7S takes integer l7S returns nothing
call S7S(l7S)
endfunction
function KDs takes integer JDs returns nothing
call b7S(JDs)
call PDs(JDs)
endfunction
function HDs takes string ADs returns integer
local integer DDs
set w3[MM]=ADs
set MM=MM+1
set DDs=HkS("when calling alloc_HashMap in HashMap, line 7")
call KDs(DDs)
set MM=MM-1
return DDs
endfunction
function IIu takes string UIu returns boolean
set w3[MM]=UIu
set MM=MM+1
set Da=HDs("when calling new_HashMap in RegisterEvents, line 55")
call DIu(EVENT_PLAYER_UNIT_SPELL_EFFECT,qaw)
set MM=MM-1
return true
endfunction
function Bfo takes nothing returns boolean
set MM=0
return IIu("RegisterEvents, line 1")
endfunction
function ATw takes timer PTw returns nothing
call PauseTimer(PTw)
set l[b]=PTw
set b=b+1
endfunction
function Bhw takes nothing returns nothing
local unit Vhw=LoadUnitHandle(i,NO,GetHandleId(GetExpiredTimer()))
call ATw(GetExpiredTimer())
call BlzSetUnitAbilityManaCost(Vhw,JO,1,BlzGetUnitAbilityManaCost(Vhw,JO,1)+30)
call BlzSetUnitAbilityManaCost(Vhw,JO,2,BlzGetUnitAbilityManaCost(Vhw,JO,2)+30)
call BlzSetUnitAbilityManaCost(Vhw,JO,3,BlzGetUnitAbilityManaCost(Vhw,JO,3)+30)
set Vhw=null
set Vhw=null
endfunction
function IHr takes nothing returns unit
return kT[jT-1]
endfunction
function Nxr takes trigger Cxr,unit Vxr,unitevent Bxr returns event
return TriggerRegisterUnitEvent(Cxr,Vxr,Bxr)
endfunction
function Ziu takes unit Eiu returns nothing
if Riu(Eiu)then
call Nxr(Ly,Eiu,EVENT_UNIT_DAMAGED)
endif
endfunction
function Biu takes nothing returns nothing
call Ziu(IHr())
endfunction
function Bkw takes nothing returns boolean
if not(GetSpellAbilityId()==1093678680)then
return false
endif
return true
endfunction
function Cvw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function Vvw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Bvw takes nothing returns nothing
if Vvw()then
call UnitDamageTargetBJ(Nu,GetEnumUnit(),xu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_COLD)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
elseif Cvw()then
call UnitDamageTargetBJ(Nu,GetEnumUnit(),vu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_FIRE)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
else
call UnitDamageTargetBJ(Nu,GetEnumUnit(),mu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_LIGHTNING)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
endif
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endfunction
function Bws takes nothing returns boolean
return true
endfunction
function K0u takes nothing returns nothing
local unit J0u=GetEventDamageSource()
call GroupAddUnit(jt,J0u)
call UnitDamageTarget(J0u,GetTriggerUnit(),GetEventDamage()*0.75,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call GroupRemoveUnit(jt,J0u)
set J0u=null
set J0u=null
endfunction
function iTw takes real sTw returns nothing
local timer tTw=CreateTimer()
call TimerStart(tTw,sTw,false,null)
loop
exitwhen TimerGetRemaining(tTw)<=0.
call TriggerSleepAction(0.1)
endloop
call DestroyTimer(tTw)
set tTw=null
set tTw=null
endfunction
function X0u takes nothing returns nothing
local unit L0u=GetEventDamageSource()
if GetRandomInt(0,1000)<=125 then
call UnitRemoveAbility(L0u,1095721843)
call UnitAddAbility(L0u,1095721843)
call GroupAddUnit(kt,L0u)
call iTw(10.)
call GroupRemoveUnit(kt,L0u)
else
call GroupAddUnit(kt,L0u)
call iTw(1.)
call GroupRemoveUnit(kt,L0u)
endif
set L0u=null
set L0u=null
endfunction
function C0u takes nothing returns nothing
if GetUnitAbilityLevel(GetTriggerUnit(),1112499059)>0 and IsUnitInGroup(GetEventDamageSource(),jt)==false then
call K0u()
endif
if GetUnitAbilityLevel(GetEventDamageSource(),1095721843)>0 and IsUnitInGroup(GetEventDamageSource(),kt)==false then
call X0u()
endif
endfunction
function C2w takes nothing returns boolean
if not(GetSpellAbilityId()==1093683020)then
return false
endif
return true
endfunction
function C7w takes nothing returns nothing
call UnitAddAbilityBJ(1098015346,GetSpellAbilityUnit())
call UnitAddAbilityBJ(1093682009,GetSpellAbilityUnit())
call UnitRemoveAbilityBJ(1093682008,GetSpellAbilityUnit())
endfunction
function CAw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,9)=="watertint")then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),11,13))<=100.00)then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),11,13))>=0.00)then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),14,16))<=100.00)then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),14,16))>=0.00)then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),17,19))<=100.00)then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),17,19))>=0.00)then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),20,22))<=100.00)then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),20,22))>=0.00)then
return false
endif
return true
endfunction
function CDu takes nothing returns boolean
set Ba=true
return true
endfunction
function CFw takes nothing returns nothing
call GroupRemoveUnit(ql,LoadUnitHandle(i,y,GetHandleId(GetExpiredTimer())))
call ATw(GetExpiredTimer())
endfunction
function HIw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@allunit")then
return false
endif
return true
endfunction
function XIw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@allhero")then
return false
endif
return true
endfunction
function CIw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAll(GetTriggerPlayer())
if HIw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Dsw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
return
endif
if XIw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Hsw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
return
endif
endfunction
function CKw takes nothing returns nothing
local unit XKw=GetSpellAbilityUnit()
if GetSpellAbilityId()==1097028405 then
call UnitRemoveAbility(XKw,1097024053)
call UnitAddAbility(XKw,1097024054)
call UnitMakeAbilityPermanent(XKw,true,1097024054)
call UnitRemoveAbility(XKw,1095331446)
else
call UnitRemoveAbility(XKw,1097024054)
call UnitAddAbility(XKw,1097024053)
call UnitMakeAbilityPermanent(XKw,true,1097024053)
call UnitAddAbility(XKw,1095331446)
call UnitMakeAbilityPermanent(XKw,true,1095331446)
endif
set XKw=null
set XKw=null
endfunction
function CLw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function ARu takes group ERu,real ZRu,real URu,real IRu,boolexpr PRu returns nothing
call GroupEnumUnitsInRange(ERu,ZRu,URu,IRu,PRu)
endfunction
function Ztu takes real Qtu returns real
local real Wtu=ModuloReal(N_u(Qtu),Me)
local real Etu
if Wtu>=0. then
set Etu=Wtu
else
set Etu=Wtu+Me
endif
set G3=twu(Etu)
return G3
endfunction
function bwu takes real Owu,real lwu returns real
set t3=Owu-lwu
return t3
endfunction
function Ctu takes real Utu,real Itu,real Ptu returns boolean
local real Jtu=Ztu(bwu(Itu,Utu))
local real Atu=Jtu
local real Dtu
local real Htu
local real Ktu
local real Ltu
local real Xtu
if N_u(Atu)<=Ne then
set Ktu=Ztu(bwu(Ptu,Utu))
set Dtu=Ktu
return N_u(Dtu)>0. and N_u(Dtu)<N_u(Atu)
else
set Ltu=bwu(twu(Me),Atu)
set Atu=Ltu
set Xtu=Ztu(bwu(Ptu,Itu))
set Htu=Xtu
return N_u(Htu)>0. and N_u(Htu)<N_u(Atu)
endif
endfunction
function F7s takes unit h7s returns real
set g3=j7s(h7s)
set h3=v7s(h7s)
return g3
endfunction
function HhS takes string AhS returns integer
local integer DhS
set w3[MM]=AhS
set MM=MM+1
if Jg==0 then
if Kg<32768 then
set Kg=Kg+1
set DhS=Kg
set Lg[DhS]=736
else
call Mau("Out of memory: Could not create DummyCaster.","when calling error in DummyCaster, line 28")
set DhS=0
endif
else
set Jg=Jg-1
set DhS=Hg[Jg]
set Lg[DhS]=736
endif
set MM=MM-1
return DhS
endfunction
function Gxs takes integer Rxs returns nothing
local real Txs
local real Yxs
set CE[Rxs]=5.0
set VE[Rxs]=0
set Txs=wY
set Yxs=uY
set BE[Rxs]=Txs
set NE[Rxs]=Yxs
set ME[Rxs]=Ty
endfunction
function jxs takes integer kxs returns nothing
call Gxs(kxs)
endfunction
function Fxs takes string gxs returns integer
local integer hxs
set w3[MM]=gxs
set MM=MM+1
set hxs=HhS("when calling alloc_DummyCaster in DummyCaster, line 34")
call jxs(hxs)
set MM=MM-1
return hxs
endfunction
function Hqu takes string Pqu,widget Aqu,string Dqu returns effect
return AddSpecialEffectTarget(Pqu,Aqu,Dqu)
endfunction
function Iqo takes group Zqo,unit Uqo returns nothing
call GroupAddUnit(Zqo,Uqo)
endfunction
function K6r takes unit A6r,widget D6r,real H6r,attacktype J6r returns nothing
call UnitDamageTarget(A6r,D6r,H6r,false,false,J6r,DAMAGE_TYPE_UNIVERSAL,WEAPON_TYPE_WHOKNOWS)
endfunction
function RWu takes player dWu,player fWu returns boolean
return IsPlayerEnemy(dWu,fWu)
endfunction
function UUu takes real EUu,real ZUu returns real
return Atan2(ZUu,EUu)
endfunction
function g7s takes unit G7s returns player
return GetOwningPlayer(G7s)
endfunction
function Wjs takes integer mjs,player Qjs returns nothing
set ME[mjs]=Qjs
endfunction
function ijc takes integer rjc,player sjc,string tjc returns nothing
set w3[MM]=tjc
set MM=MM+1
if Lg[rjc]==0 then
if rjc==0 then
call Mau("Nullpointer exception when calling DummyCaster.owner","when calling error in DummyCaster, line 40")
else
call Mau("Called DummyCaster.owner on invalid object.","when calling error in DummyCaster, line 40")
endif
endif
call Wjs(rjc,sjc)
set MM=MM-1
endfunction
function oTu takes group cTu returns integer
return BlzGroupGetSize(cTu)
endfunction
function Ars takes widget Prs returns real
return GetWidgetX(Prs)
endfunction
function Hrs takes widget Drs returns real
return GetWidgetY(Drs)
endfunction
function Irs takes widget Urs returns real
set l1=Ars(Urs)
set b1=Hrs(Urs)
return l1
endfunction
function S9s takes unit t9s,real i9s returns nothing
call SetUnitFacing(t9s,V_u(i9s))
endfunction
function VhS takes string XhS returns integer
local integer ChS
set w3[MM]=XhS
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set ChS=ZG
set UG[ChS]=683
else
call Mau("Out of memory: Could not create CallbackSingle_doAfter_DummyCaster_DummyCaster.","when calling error in DummyCaster, line 89")
set ChS=0
endif
else
set EG=EG-1
set ChS=WG[EG]
set UG[ChS]=683
endif
set MM=MM-1
return ChS
endfunction
function Bjs takes integer Jjs,unit Kjs,integer Ljs,string Xjs returns nothing
local integer Cjs
local real Vjs
set w3[MM]=Xjs
set MM=MM+1
set VE[Jjs]=VE[Jjs]+1
set Vjs=CE[Jjs]
set Cjs=VhS("when calling alloc_CallbackSingle_doAfter_DummyCaster_DummyCaster in DummyCaster, line 89")
call KGs(Cjs)
set wZ[Cjs]=Kjs
set uZ[Cjs]=Ljs
set rZ[Cjs]=Jjs
call Jou(Vjs,Cjs,"when calling doAfter in DummyCaster, line 89")
set MM=MM-1
endfunction
function Wjc takes integer xjc,unit vjc,integer mjc,string Qjc returns nothing
set w3[MM]=Qjc
set MM=MM+1
if Lg[xjc]==0 then
if xjc==0 then
call Mau("Nullpointer exception when calling DummyCaster.finish","when calling error in DummyCaster, line 87")
else
call Mau("Called DummyCaster.finish on invalid object.","when calling error in DummyCaster, line 87")
endif
endif
call Bjs(xjc,vjc,mjc,"when calling finish in DummyCaster, line 87")
set MM=MM-1
endfunction
function brs takes real crs,real ors,real Ors,real lrs returns real
set H9=twu(Atan2(lrs-ors,Ors-crs))
return H9
endfunction
function Iku takes real Zku,real Uku returns boolean
return Zku>Xe and Zku<Ve and Uku>Ce and Uku<Be
endfunction
function Dku takes real Pku,real Aku returns boolean
return Iku(Pku,Aku)
endfunction
function F9s takes unit G9s,player g9s,boolean h9s returns nothing
call SetUnitOwner(G9s,g9s,h9s)
endfunction
function XTo takes integer HTo,integer JTo,string KTo returns unit
local unit LTo
if JTo<0 or JTo>=6 then
call Mau("Index out of Bounds",KTo)
elseif JTo<=2 then
if JTo<=1 then
if JTo<=0 then
set LTo=L0w[HTo]
else
set LTo=X0w[HTo]
endif
else
set LTo=C0w[HTo]
endif
elseif JTo<=4 then
if JTo<=3 then
set LTo=V0w[HTo]
else
set LTo=B0w[HTo]
endif
else
set LTo=N0w[HTo]
endif
set Ddw=LTo
set LTo=null
return Ddw
endfunction
function Cxs takes integer Lxs,string Xxs returns unit
set w3[MM]=Xxs
set MM=MM+1
if iZ[Lxs]>0 then
set iZ[Lxs]=iZ[Lxs]-1
set sZ[Lxs]=ModuloInteger(sZ[Lxs]+1,Kp)
set MM=MM-1
return XTo(Lxs,sZ[Lxs],"when reading array ArrayQueue_units in  in DummyRecycler, line 79")
else
call Mau("Queue empty","when calling error in DummyRecycler, line 81")
set MM=MM-1
return null
endif
endfunction
function Hjc takes integer Pjc,string Ajc returns unit
local unit Djc
set w3[MM]=Ajc
set MM=MM+1
if Bg[Pjc]==0 then
if Pjc==0 then
call Mau("Nullpointer exception when calling ArrayQueue.dequeue","when calling error in DummyRecycler, line 75")
else
call Mau("Called ArrayQueue.dequeue on invalid object.","when calling error in DummyRecycler, line 75")
endif
endif
set Djc=Cxs(Pjc,"when calling dequeue in DummyRecycler, line 75")
set MM=MM-1
set idw=Djc
set Djc=null
return idw
endfunction
function tqu takes real Leu,real Xeu,player Ceu,real Veu returns unit
local unit Beu=I5r(Ceu,Ap,Leu,Xeu,Veu)
local unit Neu=Beu
local unit Meu
local unit wqu
local unit uqu
local unit rqu
local unit squ
call a0s(Neu,Leu,Xeu)
set Meu=Neu
call L5r(Meu,fy)
set wqu=Meu
call I8s(wqu,fy)
set uqu=wqu
call L5r(uqu,Ry)
set rqu=uqu
call L5r(rqu,Dp)
set squ=rqu
call I8s(squ,Dp)
set Onw=Beu
set Beu=null
set Neu=null
set Meu=null
set wqu=null
set uqu=null
set rqu=null
set squ=null
return Onw
endfunction
function x8s takes unit j8s returns nothing
call PauseUnit(j8s,false)
endfunction
function nqu takes real oqu,real Oqu,real lqu,string bqu returns unit
local integer yqu
local unit pqu
local unit equ
local unit qqu
local unit aqu
set w3[MM]=bqu
set MM=MM+1
set yqu=qUu(qUu(ModuloReal(V_u(lqu),360.))/Jp)
if iZ[Cp[yqu]]>0 then
set pqu=Hjc(Cp[yqu],"when calling dequeue in DummyRecycler, line 39")
call a0s(pqu,oqu,Oqu)
set equ=pqu
call x8s(equ)
set aqu=equ
set MM=MM-1
set lnw=aqu
set pqu=null
set equ=null
set qqu=null
set aqu=null
return lnw
else
set qqu=tqu(oqu,Oqu,Ty,lqu)
set MM=MM-1
set bnw=qqu
set pqu=null
set equ=null
set qqu=null
set aqu=null
return bnw
endif
endfunction
function Hjs takes integer Ejs,integer Zjs,integer Ujs,string Ijs returns unit
local unit Pjs
local unit Ajs
local unit Djs
set w3[MM]=Ijs
set MM=MM+1
set Pjs=nqu(BE[Ejs],NE[Ejs],0.,"when calling get in DummyCaster, line 78")
if Dku(BE[Ejs],NE[Ejs])then
call a0s(Pjs,BE[Ejs],NE[Ejs])
endif
set Ajs=Pjs
call L5r(Ajs,Zjs)
set Djs=Ajs
call f9s(Djs,1000000.)
if Ujs>1 then
call X8s(Pjs,Zjs,Ujs)
endif
call F9s(Pjs,ME[Ejs],false)
set MM=MM-1
set Unw=Pjs
set Pjs=null
set Ajs=null
set Djs=null
return Unw
endfunction
function jjc takes integer Gjc,integer gjc,integer hjc,string Fjc returns unit
local unit kjc
set w3[MM]=Fjc
set MM=MM+1
if Lg[Gjc]==0 then
if Gjc==0 then
call Mau("Nullpointer exception when calling DummyCaster.prepare","when calling error in DummyCaster, line 77")
else
call Mau("Called DummyCaster.prepare on invalid object.","when calling error in DummyCaster, line 77")
endif
endif
set kjc=Hjs(Gjc,gjc,hjc,"when calling prepare in DummyCaster, line 77")
set MM=MM-1
set tdw=kjc
set kjc=null
return tdw
endfunction
function Sxs takes integer Njs,integer Mjs,integer wxs,integer uxs,widget rxs,string sxs returns unit
local unit txs
local boolean ixs
set w3[MM]=sxs
set MM=MM+1
set txs=jjc(Njs,Mjs,wxs,"when calling prepare in DummyCaster, line 59")
call S9s(txs,brs(F7s(txs),h3,Irs(rxs),b1))
set ixs=f8s(txs,uxs,rxs)
call Wjc(Njs,txs,Mjs,"when calling finish in DummyCaster, line 62")
if not ixs then
set txs=null
endif
set MM=MM-1
set Inw=txs
set txs=null
return Inw
endfunction
function pjc takes integer Sjc,integer cjc,integer ojc,integer Ojc,widget ljc,string bjc returns unit
local unit yjc
set w3[MM]=bjc
set MM=MM+1
if Lg[Sjc]==0 then
if Sjc==0 then
call Mau("Nullpointer exception when calling DummyCaster.castTarget","when calling error in DummyCaster, line 58")
else
call Mau("Called DummyCaster.castTarget on invalid object.","when calling error in DummyCaster, line 58")
endif
endif
set yjc=Sxs(Sjc,cjc,ojc,Ojc,ljc,"when calling castTarget in DummyCaster, line 58")
set MM=MM-1
set rdw=yjc
set yjc=null
return rdw
endfunction
function eiu takes string Vtu returns boolean
local unit Btu
local player Ntu
local integer Mtu
local group wiu
local group uiu
local real riu
local real siu
local real tiu
local unit iiu
local group Siu
local boolean ciu
local integer oiu
local unit Oiu
local group liu
local integer biu
local integer yiu
local boolean piu
set w3[MM]=Vtu
set MM=MM+1
if GetSpellAbilityId()==my then
set Btu=GetSpellAbilityUnit()
set Ntu=g7s(Btu)
set Mtu=r7s(Btu,my)
set wiu=CreateGroup()
call ARu(wiu,F7s(Btu),h3,Dy,Filter(Vqw))
set uiu=CreateGroup()
set riu=j7s(Btu)
set siu=v7s(Btu)
set tiu=GetUnitFacing(Btu)
set Siu=wiu
loop
exitwhen not lTu(Siu)
set iiu=aTu(Siu)
if Ctu(wwu(tiu-Hy),wwu(tiu+Hy),twu(wq-UUu(v7s(iiu)-siu,j7s(iiu)-riu)))and RWu(g7s(iiu),Ntu)then
call Iqo(uiu,iiu)
endif
endloop
call STu(wiu)
set ciu=oTu(uiu)>=Uy
set oiu=Mtu*Zy
set liu=uiu
loop
exitwhen not lTu(liu)
set Oiu=aTu(liu)
call K6r(Btu,Oiu,rgu(oiu),ATTACK_TYPE_MELEE)
call vqu(Hqu("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl",Oiu,"chest"))
if ciu then
set biu=Fxs("when calling new_DummyCaster in Cleave, line 112")
call ijc(biu,Ntu,"when calling owner in Cleave, line 112")
set yiu=biu
call pjc(yiu,Qy,Mtu,Hq,Oiu,"when calling castTarget in Cleave, line 112")
endif
endloop
call STu(uiu)
endif
set piu=false
set MM=MM-1
set Btu=null
set Ntu=null
set wiu=null
set uiu=null
set iiu=null
set Siu=null
set Oiu=null
set liu=null
return piu
endfunction
function CRo takes nothing returns boolean
set MM=0
return eiu("Cleave, line 91")
endfunction
function CVw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function xtt takes integer jtt returns nothing
set KD[jtt]=-1
endfunction
function Ett takes integer Wtt returns nothing
call xtt(Wtt)
endfunction
function eES takes string yES returns integer
local integer pES
set w3[MM]=yES
set MM=MM+1
if Fk==0 then
if kk<32768 then
set kk=kk+1
set pES=kk
set jk[pES]=1475
else
call Mau("Out of memory: Could not create OrderStringFactory.","when calling error in OrderStringFactory, line 6")
set pES=0
endif
else
set Fk=Fk-1
set pES=hk[Fk]
set jk[pES]=1475
endif
set MM=MM-1
return pES
endfunction
function Qtt takes string vtt returns integer
local integer mtt
set w3[MM]=vtt
set MM=MM+1
set mtt=eES("when calling alloc_OrderStringFactory in OrderStringFactory, line 6")
call Ett(mtt)
set MM=MM-1
return mtt
endfunction
function Ytu takes string Ttu returns boolean
set w3[MM]=Ttu
set MM=MM+1
set vy=Qtt("when calling new_OrderStringFactory in ChannelAbilityPreset, line 10")
set MM=MM-1
return true
endfunction
function Cfo takes nothing returns boolean
set MM=0
return Ytu("ChannelAbilityPreset, line 1")
endfunction
function Cjw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function Xkw takes nothing returns boolean
if not(IsTriggerEnabled(Kt)==false)then
return false
endif
return true
endfunction
function Ckw takes nothing returns nothing
call GroupAddUnitSimple(GetTriggerUnit(),Hu)
set Ju[0]=GetSpellTargetLoc()
set Cu=GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))-1
call SaveLocationHandleBJ(Ju[0],0,GetHandleIdBJ(GetTriggerUnit()),Au)
call CreateNUnitsAtLoc(1,1747995718,GetOwningPlayer(GetTriggerUnit()),Ju[0],90.00)
call SetUnitScalePercent(GetLastCreatedUnit(),Gu,Gu,Gu)
call SetUnitVertexColorBJ(GetLastCreatedUnit(),100.,100.,100.,100.00)
if GetLocalPlayer()==Player(Cu)then
call SetUnitVertexColorBJ(GetLastCreatedUnit(),100.,100.,100.,0.00)
endif
call SaveUnitHandleBJ(GetLastCreatedUnit(),2,GetHandleIdBJ(GetTriggerUnit()),Au)
call CreateNUnitsAtLoc(1,1747995718,GetOwningPlayer(GetTriggerUnit()),Ju[0],90.00)
call SetUnitScalePercent(GetLastCreatedUnit(),gu,gu,gu)
call SetUnitVertexColorBJ(GetLastCreatedUnit(),100.,100.,100.,100.00)
if GetLocalPlayer()==Player(Cu)then
call SetUnitVertexColorBJ(GetLastCreatedUnit(),100.,100.,100.,0.00)
endif
call SaveUnitHandleBJ(GetLastCreatedUnit(),3,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveIntegerBJ(Du+5,4,GetHandleIdBJ(GetTriggerUnit()),Au)
call UnitAddAbilityBJ(1093678680,GetTriggerUnit())
call SetUnitAbilityLevelSwapped(1093678680,GetTriggerUnit(),GetUnitAbilityLevelSwapped(1093682504,GetTriggerUnit()))
call SetPlayerAbilityAvailableBJ(false,1093682504,GetOwningPlayer(GetTriggerUnit()))
if Xkw()then
call EnableTrigger(Kt)
endif
endfunction
function D0u takes nothing returns nothing
local unit U0u=GetSpellAbilityUnit()
local unit I0u=GetSpellTargetUnit()
local integer P0u=0
local boolean A0u=false
if IsUnitInGroup(U0u,kt)==false then
set A0u=true
call GroupAddUnit(kt,U0u)
endif
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl",I0u,"chest"))
call UnitDamageTarget(U0u,I0u,350.,true,true,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
if A0u==true then
call GroupRemoveUnit(kt,U0u)
endif
set A0u=false
set U0u=null
if IsUnitInGroup(I0u,Ft)==true then
call GroupRemoveUnit(Ft,I0u)
call iTw(1.00)
endif
call UnitAddAbility(I0u,1095132019)
call UnitMakeAbilityPermanent(I0u,true,1095132019)
call GroupAddUnit(Ft,I0u)
loop
exitwhen IsUnitInGroup(I0u,Ft)==false
call iTw(1.)
set P0u=P0u+1
if P0u==3 or GetUnitState(I0u,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(Ft,I0u)
endif
endloop
set P0u=0
call UnitRemoveAbility(I0u,1095132019)
call UnitRemoveAbility(I0u,1112499059)
set I0u=null
set U0u=null
set I0u=null
endfunction
function D2w takes nothing returns nothing
local location U2w=GetSpellTargetLoc()
local player I2w=GetOwningPlayer(GetSpellAbilityUnit())
local unit P2w=CreateUnitAtLoc(I2w,1848652344,U2w,270.)
local effect A2w=null
call SetUnitPathing(P2w,false)
call SetUnitPositionLoc(P2w,U2w)
call iTw(6.)
if GetUnitState(P2w,UNIT_STATE_LIFE)>0. then
call KillUnit(P2w)
set P2w=CreateUnitAtLoc(I2w,1747995215,U2w,270.)
call UnitAddAbility(P2w,1093684050)
call IssueImmediateOrder(P2w,"stomp")
set A2w=AddSpecialEffectLoc("war3mapImported\\EMPBubble.mdx",U2w)
call iTw(2.)
call KillUnit(P2w)
call DestroyEffect(A2w)
endif
call RemoveLocation(U2w)
set U2w=null
set I2w=null
set P2w=null
set A2w=null
set U2w=null
set I2w=null
set P2w=null
set A2w=null
endfunction
function D4w takes nothing returns nothing
call IssueImmediateOrderBJ(GetEnumUnit(),"stop")
endfunction
function D7w takes nothing returns nothing
local unit A7w
set Tu[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]=GetSpellAbilityUnit()
call SetUnitLifePercentBJ(Tu[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))],100.)
call UnitAddAbilityBJ(1093678927,Tu[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])
set A7w=Tu[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]
call TriggerSleepAction(60.00)
set Tu[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]=A7w
call UnitRemoveAbilityBJ(1093678927,Tu[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])
set A7w=null
set A7w=null
endfunction
function DBw takes nothing returns nothing
local unit mBw=GetSpellTargetUnit()
local unit QBw=GetSpellAbilityUnit()
local location WBw=GetUnitLoc(GetSpellTargetUnit())
local real ZBw=GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_MAX_LIFE)
local real UBw=GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_MAX_MANA)/2.
local real EBw
local effect IBw
local effect PBw
local effect ABw
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Resurrect\\ResurrectCaster.mdl",QBw,"origin"))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Resurrect\\ResurrectCaster.mdl",mBw,"origin"))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Resurrect\\ResurrectTarget.mdl",mBw,"origin"))
call TriggerSleepAction(1.00)
set EBw=GetUnitState(mBw,UNIT_STATE_LIFE)
if IsUnitAliveBJ(mBw)==true then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIhe\\AIheTarget.mdl",mBw,"origin"))
call SetUnitState(mBw,UNIT_STATE_LIFE,GetUnitState(mBw,UNIT_STATE_LIFE)+ZBw)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl",mBw,"origin"))
call SetUnitState(mBw,UNIT_STATE_MANA,GetUnitState(mBw,UNIT_STATE_MANA)+UBw)
if EBw>=ZBw/2.00 then
set IBw=AddSpecialEffectTarget("Abilities\\Spells\\Human\\InnerFire\\InnerFireTarget.mdl",mBw,"overhead")
set PBw=AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Barkskin\\BarkSkinTarget.mdl",mBw,"right hand")
set ABw=AddSpecialEffectTarget("Abilities\\Spells\\NightElf\\Barkskin\\BarkSkinTarget.mdl",mBw,"left hand")
call UnitAddAbility(mBw,1093682249)
call UnitAddAbility(mBw,1093682250)
call UnitAddAbility(mBw,1093682251)
call TriggerSleepAction(20.00)
call DestroyEffect(IBw)
call DestroyEffect(PBw)
call DestroyEffect(ABw)
call UnitRemoveAbility(mBw,1093682249)
call UnitRemoveAbility(mBw,1093682250)
call UnitRemoveAbility(mBw,1093682251)
endif
else
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\ReviveHuman\\ReviveHuman.mdl",WBw))
call TriggerSleepAction(0.20)
set mBw=CreateUnitAtLoc(GetOwningPlayer(QBw),1697657168,WBw,270.00)
call TriggerSleepAction(5.00)
call KillUnit(mBw)
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Undead\\ReplenishHealth\\ReplenishHealthCaster.mdl",WBw))
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Undead\\ReplenishHealth\\ReplenishHealthCasterOverhead.mdl",WBw))
call ForGroup(GetUnitsInRangeOfLocAll(250.00,WBw),cow)
endif
set mBw=null
set QBw=null
set WBw=null
set EBw=0.
set ZBw=0.
set UBw=0.
set IBw=null
set PBw=null
set ABw=null
set mBw=null
set QBw=null
set WBw=null
set IBw=null
set PBw=null
set ABw=null
endfunction
function ADw takes nothing returns boolean
if not(GetOwningPlayer(GetEnumUnit())==GetTriggerPlayer())then
return false
endif
return true
endfunction
function DDw takes nothing returns nothing
if ADw()then
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.,G,Wtw)
call RemoveLocation(G)
endif
endfunction
function ITw takes nothing returns timer
if b>0 then
set b=b-1
call SaveInteger(i,y,GetHandleId(l[b]),0)
return l[b]
endif
return CreateTimer()
endfunction
function DFw takes nothing returns nothing
local timer AFw
if GetUnitAbilityLevel(GetKillingUnit(),1093684552)==0 then
set AFw=null
return
endif
set AFw=ITw()
call SaveUnitHandle(i,y,GetHandleId(AFw),GetKillingUnit())
call TimerStart(AFw,0.,false,bww_2591)
set AFw=null
set AFw=null
endfunction
function DHw takes nothing returns nothing
local destructable AHw=GetSpellTargetDestructable()
if IsDestructableInvulnerable(AHw)==false then
call SetDestructableInvulnerable(AHw,true)
else
call SetDestructableInvulnerable(AHw,false)
endif
set AHw=null
set AHw=null
endfunction
function PIw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function AIw takes nothing returns boolean
if not PIw()then
return false
endif
return true
endfunction
function DIw takes nothing returns nothing
if AIw()then
set bj_forLoopBIndex=1
set bj_forLoopBIndexEnd=V
loop
exitwhen bj_forLoopBIndex>bj_forLoopBIndexEnd
call UnitRemoveAbilityBJ(C[GetForLoopIndexB()],GetEnumUnit())
set bj_forLoopBIndex=bj_forLoopBIndex+1
endloop
endif
endfunction
function DKw takes nothing returns boolean
return GetSpellAbilityId()==1097028403 or GetSpellAbilityId()==1097028404
endfunction
function DLw takes nothing returns nothing
call KillDestructable(GetEnumDestructable())
endfunction
function DMw takes nothing returns nothing
local unit AMw=CreateUnitAtLoc(GetOwningPlayer(GetSpellAbilityUnit()),1747995215,GetUnitLoc(GetSpellAbilityUnit()),GetUnitFacing(GetSpellAbilityUnit()))
call UnitAddAbility(AMw,1093684277)
call SetUnitAbilityLevel(AMw,1093684277,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093684276))
call IssueTargetOrder(AMw,"faeriefire",GetSpellTargetUnit())
call TriggerSleepAction(3.00)
call RemoveUnit(AMw)
set AMw=null
set AMw=null
endfunction
function DNw takes nothing returns boolean
if not(GetSpellAbilityId()==1093683015)then
return false
endif
return true
endfunction
function APw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="expgain off")then
return false
endif
return true
endfunction
function IPw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="expgain on")then
return false
endif
return true
endfunction
function DPw takes nothing returns nothing
if IPw()then
call ForForce(GetPlayersAll(),Otw)
endif
if APw()then
call ForForce(GetPlayersAll(),ltw)
endif
endfunction
function jSu takes unit gSu,integer hSu,integer FSu,string kSu returns integer
set w3[MM]=kSu
set MM=MM+1
set AW[FSu]=hSu
if gSu!=null then
set DW[FSu]=gSu
if PZc(My,vvr(gSu),"when calling has in ClosureEvents, line 156")then
set PW[BZc(My,vvr(gSu),"when calling get in ClosureEvents, line 157")]=FSu
set IW[FSu]=BZc(My,vvr(gSu),"when calling get in ClosureEvents, line 158")
endif
call KZc(My,vvr(gSu),FSu,"when calling put in ClosureEvents, line 159")
else
if PZc(Ny,hSu,"when calling has in ClosureEvents, line 161")then
set PW[BZc(Ny,hSu,"when calling get in ClosureEvents, line 162")]=FSu
set IW[FSu]=BZc(Ny,hSu,"when calling get in ClosureEvents, line 163")
endif
call KZc(Ny,hSu,FSu,"when calling put in ClosureEvents, line 165")
endif
set MM=MM-1
return FSu
endfunction
function ASu takes integer ZSu,integer USu,string ISu returns integer
local integer PSu
set w3[MM]=ISu
set MM=MM+1
set PSu=jSu(null,ZSu,USu,"when calling addSpellInternal in ClosureEvents, line 150")
set MM=MM-1
return PSu
endfunction
function Mhr takes string Bhr,integer Nhr returns string
return SubString(Bhr,Nhr,Nhr+1)
endfunction
function Xvu takes integer Dvu returns string
local string Hvu=""
local integer Jvu=Dvu
local integer Kvu=0
local integer Lvu
loop
exitwhen Kvu>3
set Lvu=ModuloInteger(Jvu,256)
set Jvu=Jvu/256
set Hvu=Mhr(hq,Lvu)+Hvu
set Kvu=Kvu+1
endloop
return Hvu
endfunction
function cmu takes integer Smu returns string
return Xvu(Smu)
endfunction
function Cfr takes string Kfr,integer Lfr,string Xfr returns nothing
set w3[MM]=Xfr
set MM=MM+1
call tqo(Ef,Kfr,Lfr,"when calling put in SotfrpGuiDestructables, line 22")
call tqo(Ef,cmu(Lfr),Lfr,"when calling put in SotfrpGuiDestructables, line 23")
call KZc(Zf,Lfr,Rvr(Kfr,"when calling stringToIndex in SotfrpGuiDestructables, line 24"),"when calling put in SotfrpGuiDestructables, line 24")
set MM=MM-1
endfunction
function ESu takes unit xSu,integer vSu,integer mSu,string QSu returns integer
local integer WSu
set w3[MM]=QSu
set MM=MM+1
set WSu=jSu(xSu,vSu,mSu,"when calling addSpellInternal in ClosureEvents, line 138")
set MM=MM-1
return WSu
endfunction
function FSc takes string gSc returns integer
local integer hSc
set w3[MM]=gSc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hSc=kj
set jj[hSc]=964
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 235")
set hSc=0
endif
else
set Fj=Fj-1
set hSc=hj[Fj]
set jj[hSc]=964
endif
set MM=MM-1
return hSc
endfunction
function QSc takes string vSc returns integer
local integer mSc
set w3[MM]=vSc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set mSc=cg
set og[mSc]=1471
else
call Mau("Out of memory: Could not create OnPointCast_onPointCast_SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 247")
set mSc=0
endif
else
set Sg=Sg-1
set mSc=ig[Sg]
set og[mSc]=1471
endif
set MM=MM-1
return mSc
endfunction
function RSc takes string dSc returns integer
local integer fSc
set w3[MM]=dSc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set fSc=cg
set og[fSc]=1470
else
call Mau("Out of memory: Could not create OnPointCast_onPointCast_SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 120")
set fSc=0
endif
else
set Sg=Sg-1
set fSc=ig[Sg]
set og[fSc]=1470
endif
set MM=MM-1
return fSc
endfunction
function lyu takes integer cyu returns string
local integer oyu=cyu/16
local integer Oyu=cyu-oyu*16
return Ip[oyu]+Ip[Oyu]
endfunction
function Syu takes integer ryu,integer syu,integer tyu,integer iyu returns string
return"|c"+lyu(iyu)+lyu(ryu)+lyu(syu)+lyu(tyu)
endfunction
function bSc takes string OSc returns integer
local integer lSc
set w3[MM]=OSc
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set lSc=pY
set eY[lSc]=1597
else
call Mau("Out of memory: Could not create StringLevelClosure_presetBaseOrderID_SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 111")
set lSc=0
endif
else
set yY=yY-1
set lSc=bY[yY]
set eY[lSc]=1597
endif
set MM=MM-1
return lSc
endfunction
function e7u takes integer y7u,string p7u returns nothing
set w3[MM]=p7u
set MM=MM+1
call Pno(Fd,y7u,"when calling add in ScmdPermissions, line 17")
set MM=MM-1
endfunction
function eSc takes string ySc returns integer
local integer pSc
set w3[MM]=ySc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set pSc=cg
set og[pSc]=1469
else
call Mau("Out of memory: Could not create OnPointCast_onPointCast_SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 117")
set pSc=0
endif
else
set Sg=Sg-1
set pSc=ig[Sg]
set og[pSc]=1469
endif
set MM=MM-1
return pSc
endfunction
function Cju takes integer Hju,string Jju,integer Kju,integer Lju,string Xju returns nothing
endfunction
function CIi takes integer LIi,integer XIi returns string
return"frenzy"
endfunction
function A5s takes integer I5s,integer P5s returns integer
return 10
endfunction
function AAi takes integer IAi,integer PAi returns real
return rgu(Ee)
endfunction
function Dxs takes integer Pxs,integer Axs returns integer
return-1
endfunction
function EPi takes integer QPi,integer WPi returns real
return 0.01
endfunction
function FRs takes integer gRs,integer hRs returns real
return mW[gRs]
endfunction
function FTs takes integer gTs,integer hTs returns real
return Ay
endfunction
function GTs takes integer TTs,integer YTs returns real
return Ay
endfunction
function IPi takes integer ZPi,integer UPi returns real
return rgu(Ee)
endfunction
function Kxs takes integer Hxs,integer Jxs returns integer
return-1
endfunction
function MRs takes integer BRs,integer NRs returns real
return Dy/2.
endfunction
function O5s takes integer c5s,integer o5s returns integer
return 30
endfunction
function OVi takes integer cVi,integer oVi returns integer
return 30
endfunction
function PJi takes integer UJi,integer IJi returns real
return rgu(Ee)
endfunction
function QRs takes integer vRs,integer mRs returns real
return 0.
endfunction
function Qht takes integer vht,integer mht returns real
return 0.01
endfunction
function RTs takes integer dTs,integer fTs returns real
return rgu(Iy)*fTs
endfunction
function S5s takes integer t5s,integer i5s returns integer
return 200
endfunction
function T5s takes integer f5s,integer R5s returns integer
return 0
endfunction
function U5s takes integer E5s,integer Z5s returns integer
return 10
endfunction
function W5s takes integer m5s,integer Q5s returns integer
return 0
endfunction
function Was takes integer mas,integer Qas returns integer
return 0
endfunction
function Wqt takes integer mqt,integer Qqt returns integer
return 5
endfunction
function YUi takes integer RUi,integer TUi returns integer
return 0
endfunction
function ZRs takes integer WRs,integer ERs returns real
return 0.
endfunction
function ajs takes integer ejs,integer qjs returns integer
return 0
endfunction
function d5s takes integer a5s,integer n5s returns real
return 0.75
endfunction
function eTs takes integer yTs,integer pTs returns real
return rgu(Py)
endfunction
function fUi takes integer nUi,integer dUi returns integer
return 0
endfunction
function g5s takes integer Y5s,integer G5s returns integer
return 0
endfunction
function gVi takes integer YVi,integer GVi returns integer
return 0
endfunction
function hUi takes integer GUi,integer gUi returns real
return rgu(Ee)
endfunction
function i6t takes integer s6t,integer t6t returns integer
return 0
endfunction
function jUi takes integer FUi,integer kUi returns real
return rgu(Ee)
endfunction
function k5s takes integer h5s,integer F5s returns integer
return 0
endfunction
function kDi takes integer hDi,integer FDi returns real
return rgu(Ee)
endfunction
function kas takes integer has,integer Fas returns integer
return 0
endfunction
function ljs takes integer ojs,integer Ojs returns integer
return 0
endfunction
function mUi takes integer xUi,integer vUi returns real
return rgu(Ee)
endfunction
function nTs takes integer qTs,integer aTs returns real
return rgu(Py)
endfunction
function o6t takes integer S6t,integer c6t returns real
return rgu(Ee)
endfunction
function oAi takes integer SAi,integer cAi returns integer
return 200
endfunction
function oTs takes integer STs,integer cTs returns real
return 0.75
endfunction
function pjs takes integer bjs,integer yjs returns integer
return 0
endfunction
function q5s takes integer p5s,integer e5s returns integer
return 800
endfunction
function qVi takes integer pVi,integer eVi returns real
return 0.75
endfunction
function qfs takes integer pfs,integer efs returns integer
return-1
endfunction
function r6t takes integer w6t,integer u6t returns integer
return 225
endfunction
function rJi takes integer wJi,integer uJi returns real
return rgu(Ee)
endfunction
function rTs takes integer wTs,integer uTs returns integer
return 6
endfunction
function v5s takes integer j5s,integer x5s returns integer
return 0
endfunction
function vVi takes integer jVi,integer xVi returns real
return 0.75
endfunction
function vas takes integer jas,integer xas returns integer
return 0
endfunction
function xht takes integer kht,integer jht returns real
return 0.01
endfunction
function yPi takes integer lPi,integer bPi returns integer
return 200
endfunction
function yfs takes integer lfs,integer bfs returns integer
return-1
endfunction
function sXc takes integer MLc,integer wXc,string uXc returns real
local real rXc
set w3[MM]=uXc
set MM=MM+1
if QG[MLc]==0 then
if MLc==0 then
call Mau("Nullpointer exception when calling RealLevelClosure.run","when calling error in ObjEditingNatives, line 13")
else
call Mau("Called RealLevelClosure.run on invalid object.","when calling error in ObjEditingNatives, line 13")
endif
endif
if QG[MLc]<=1528 then
if QG[MLc]<=1514 then
if QG[MLc]<=1507 then
if QG[MLc]<=1504 then
if QG[MLc]<=1502 then
if QG[MLc]<=1501 then
set rXc=yPi(MLc,wXc)
else
set rXc=r6t(MLc,wXc)
endif
elseif QG[MLc]<=1503 then
set rXc=S5s(MLc,wXc)
else
set rXc=oAi(MLc,wXc)
endif
elseif QG[MLc]<=1506 then
if QG[MLc]<=1505 then
set rXc=ZRs(MLc,wXc)
else
set rXc=GTs(MLc,wXc)
endif
else
set rXc=vas(MLc,wXc)
endif
elseif QG[MLc]<=1511 then
if QG[MLc]<=1509 then
if QG[MLc]<=1508 then
set rXc=pjs(MLc,wXc)
else
set rXc=kDi(MLc,wXc)
endif
elseif QG[MLc]<=1510 then
set rXc=rJi(MLc,wXc)
else
set rXc=AAi(MLc,wXc)
endif
elseif QG[MLc]<=1513 then
if QG[MLc]<=1512 then
set rXc=mUi(MLc,wXc)
else
set rXc=jUi(MLc,wXc)
endif
else
set rXc=IPi(MLc,wXc)
endif
elseif QG[MLc]<=1521 then
if QG[MLc]<=1518 then
if QG[MLc]<=1516 then
if QG[MLc]<=1515 then
set rXc=hUi(MLc,wXc)
else
set rXc=o6t(MLc,wXc)
endif
elseif QG[MLc]<=1517 then
set rXc=MRs(MLc,wXc)
else
set rXc=q5s(MLc,wXc)
endif
elseif QG[MLc]<=1520 then
if QG[MLc]<=1519 then
set rXc=PJi(MLc,wXc)
else
set rXc=W5s(MLc,wXc)
endif
else
set rXc=FRs(MLc,wXc)
endif
elseif QG[MLc]<=1525 then
if QG[MLc]<=1523 then
if QG[MLc]<=1522 then
set rXc=i6t(MLc,wXc)
else
set rXc=Wqt(MLc,wXc)
endif
elseif QG[MLc]<=1524 then
set rXc=O5s(MLc,wXc)
else
set rXc=OVi(MLc,wXc)
endif
elseif QG[MLc]<=1527 then
if QG[MLc]<=1526 then
set rXc=rTs(MLc,wXc)
else
set rXc=gVi(MLc,wXc)
endif
else
set rXc=RTs(MLc,wXc)
endif
elseif QG[MLc]<=1542 then
if QG[MLc]<=1535 then
if QG[MLc]<=1532 then
if QG[MLc]<=1530 then
if QG[MLc]<=1529 then
set rXc=kas(MLc,wXc)
else
set rXc=ljs(MLc,wXc)
endif
elseif QG[MLc]<=1531 then
set rXc=qfs(MLc,wXc)
else
set rXc=Kxs(MLc,wXc)
endif
elseif QG[MLc]<=1534 then
if QG[MLc]<=1533 then
set rXc=Qht(MLc,wXc)
else
set rXc=YUi(MLc,wXc)
endif
else
set rXc=nTs(MLc,wXc)
endif
elseif QG[MLc]<=1539 then
if QG[MLc]<=1537 then
if QG[MLc]<=1536 then
set rXc=U5s(MLc,wXc)
else
set rXc=A5s(MLc,wXc)
endif
elseif QG[MLc]<=1538 then
set rXc=EPi(MLc,wXc)
else
set rXc=yfs(MLc,wXc)
endif
elseif QG[MLc]<=1541 then
if QG[MLc]<=1540 then
set rXc=Dxs(MLc,wXc)
else
set rXc=xht(MLc,wXc)
endif
else
set rXc=fUi(MLc,wXc)
endif
elseif QG[MLc]<=1549 then
if QG[MLc]<=1546 then
if QG[MLc]<=1544 then
if QG[MLc]<=1543 then
set rXc=eTs(MLc,wXc)
else
set rXc=QRs(MLc,wXc)
endif
elseif QG[MLc]<=1545 then
set rXc=oTs(MLc,wXc)
else
set rXc=d5s(MLc,wXc)
endif
elseif QG[MLc]<=1548 then
if QG[MLc]<=1547 then
set rXc=qVi(MLc,wXc)
else
set rXc=vVi(MLc,wXc)
endif
else
set rXc=g5s(MLc,wXc)
endif
elseif QG[MLc]<=1552 then
if QG[MLc]<=1551 then
if QG[MLc]<=1550 then
set rXc=T5s(MLc,wXc)
else
set rXc=v5s(MLc,wXc)
endif
else
set rXc=k5s(MLc,wXc)
endif
elseif QG[MLc]<=1554 then
if QG[MLc]<=1553 then
set rXc=FTs(MLc,wXc)
else
set rXc=Was(MLc,wXc)
endif
else
set rXc=ajs(MLc,wXc)
endif
set MM=MM-1
return rXc
endfunction
function xUu takes real jUu returns string
return R2S(jUu)
endfunction
function CSs takes integer JSs,integer KSs,string LSs returns string
local string XSs
set w3[MM]=LSs
set MM=MM+1
set XSs=xUu(sXc(bQ[JSs],KSs,"when calling run in AbilityObjEditing, line 77"))
set MM=MM-1
return XSs
endfunction
function FJi takes integer gJi,integer hJi returns string
return"bearform"
endfunction
function GJi takes integer TJi,integer YJi returns string
return"battleroar"
endfunction
function GlS takes integer TlS,integer YlS returns string
return PT
endfunction
function HJi takes integer AJi,integer DJi returns string
return"attackground"
endfunction
function GRs takes integer TRs,integer YRs returns integer
return vW[TRs]
endfunction
function HRs takes integer ARs,integer DRs returns integer
return kW[WW[ARs]]
endfunction
function M5s takes integer B5s,integer N5s returns integer
return 0
endfunction
function ODi takes integer cDi,integer oDi returns integer
return Ee
endfunction
function PRs takes integer URs,integer IRs returns integer
return QW[URs]
endfunction
function Uqt takes integer Eqt,integer Zqt returns integer
return 25
endfunction
function WdS takes integer mdS,integer QdS returns integer
return ZM[mdS]
endfunction
function aUi takes integer eUi,integer qUi returns integer
return 10
endfunction
function bTs takes integer OTs,integer lTs returns integer
return 9
endfunction
function cjs takes integer ijs,integer Sjs returns integer
return 0
endfunction
function fSs takes integer nSs,integer dSs returns integer
return oQ[OQ[nSs]]
endfunction
function gas takes integer Yas,integer Gas returns integer
return 0
endfunction
function iTs takes integer sTs,integer tTs returns integer
return 90
endfunction
function kVi takes integer hVi,integer FVi returns integer
return 0
endfunction
function y5s takes integer l5s,integer b5s returns integer
return 135
endfunction
function yDi takes integer lDi,integer bDi returns integer
return Ee
endfunction
function yVi takes integer lVi,integer bVi returns integer
return 135
endfunction
function NLc takes integer XLc,integer CLc,string VLc returns integer
local integer BLc
set w3[MM]=VLc
set MM=MM+1
if lY[XLc]==0 then
if XLc==0 then
call Mau("Nullpointer exception when calling IntLevelClosure.run","when calling error in ObjEditingNatives, line 10")
else
call Mau("Called IntLevelClosure.run on invalid object.","when calling error in ObjEditingNatives, line 10")
endif
endif
if lY[XLc]<=1260 then
if lY[XLc]<=1256 then
if lY[XLc]<=1254 then
if lY[XLc]<=1253 then
if lY[XLc]<=1252 then
set BLc=aUi(XLc,CLc)
else
set BLc=WdS(XLc,CLc)
endif
else
set BLc=GRs(XLc,CLc)
endif
elseif lY[XLc]<=1255 then
set BLc=Uqt(XLc,CLc)
else
set BLc=M5s(XLc,CLc)
endif
elseif lY[XLc]<=1258 then
if lY[XLc]<=1257 then
set BLc=y5s(XLc,CLc)
else
set BLc=yVi(XLc,CLc)
endif
elseif lY[XLc]<=1259 then
set BLc=iTs(XLc,CLc)
else
set BLc=kVi(XLc,CLc)
endif
elseif lY[XLc]<=1264 then
if lY[XLc]<=1262 then
if lY[XLc]<=1261 then
set BLc=yDi(XLc,CLc)
else
set BLc=ODi(XLc,CLc)
endif
elseif lY[XLc]<=1263 then
set BLc=HRs(XLc,CLc)
else
set BLc=fSs(XLc,CLc)
endif
elseif lY[XLc]<=1266 then
if lY[XLc]<=1265 then
set BLc=bTs(XLc,CLc)
else
set BLc=gas(XLc,CLc)
endif
elseif lY[XLc]<=1267 then
set BLc=cjs(XLc,CLc)
else
set BLc=PRs(XLc,CLc)
endif
set MM=MM-1
return BLc
endfunction
function HSs takes integer ISs,integer PSs,string ASs returns string
local string DSs
set w3[MM]=ASs
set MM=MM+1
set DSs=tgu(NLc(lQ[ISs],PSs,"when calling run in AbilityObjEditing, line 74"))
set MM=MM-1
return DSs
endfunction
function DAc takes integer IAc,string PAc returns boolean
local boolean AAc
set w3[MM]=PAc
set MM=MM+1
if xF[IAc]==0 then
if IAc==0 then
call Mau("Nullpointer exception when calling LLIterator.hasNext","when calling error in LinkedList, line 455")
else
call Mau("Called LLIterator.hasNext on invalid object.","when calling error in LinkedList, line 455")
endif
endif
set AAc=t1s(IAc)
set MM=MM-1
return AAc
endfunction
function KAc takes integer HAc,string JAc returns nothing
set w3[MM]=JAc
set MM=MM+1
if xF[HAc]==0 then
if HAc==0 then
call Mau("Nullpointer exception when calling LLIterator.close","when calling error in LinkedList, line 468")
else
call Mau("Called LLIterator.close on invalid object.","when calling error in LinkedList, line 468")
endif
endif
call c1s(HAc,"when calling close in LinkedList, line 468")
set MM=MM-1
endfunction
function jDc takes integer hDc,string FDc returns integer
local integer kDc
set w3[MM]=FDc
set MM=MM+1
if WF[hDc]==0 then
if hDc==0 then
call Mau("Nullpointer exception when calling LinkedList.iterator","when calling error in LinkedList, line 179")
else
call Mau("Called LinkedList.iterator on invalid object.","when calling error in LinkedList, line 179")
endif
endif
set kDc=x1s(hDc,"when calling iterator in LinkedList, line 179")
set MM=MM-1
return kDc
endfunction
function MFu takes integer JFu,string KFu,string LFu returns string
local string XFu
local boolean CFu
local integer VFu
local string BFu
local integer NFu
set w3[MM]=LFu
set MM=MM+1
set XFu=""
set CFu=true
set VFu=jDc(JFu,"when calling iterator in LinkedList, line 547")
set NFu=VFu
loop
exitwhen not t1s(NFu)
set BFu=gvr(r1s(NFu),"when calling stringFromIndex in LinkedList, line 549")
if DAc(VFu,"when calling hasNext in LinkedList, line 550")or(not CFu)then
set XFu=XFu+BFu+KFu
else
set XFu=XFu+BFu
set CFu=false
endif
endloop
call KAc(VFu,"when calling close in LinkedList, line 556")
set MM=MM-1
return XFu
endfunction
function Hdo takes string mdo,string Qdo,string Wdo,string Edo,string Zdo,string Udo,string Ido,string Pdo returns string
local integer Ado
local string Ddo
set w3[MM]=Pdo
set MM=MM+1
set Ado=a4s("when calling new_LinkedList in ObjectIds, line 61")
call Cqo(Ado,Rvr(mdo,"when calling stringToIndex in ObjectIds, line 63"),"when calling add in ObjectIds, line 63")
call Cqo(Ado,Rvr(Qdo,"when calling stringToIndex in ObjectIds, line 63"),"when calling add in ObjectIds, line 63")
call Cqo(Ado,Rvr(Wdo,"when calling stringToIndex in ObjectIds, line 63"),"when calling add in ObjectIds, line 63")
call Cqo(Ado,Rvr(Edo,"when calling stringToIndex in ObjectIds, line 63"),"when calling add in ObjectIds, line 63")
call Cqo(Ado,Rvr(Zdo,"when calling stringToIndex in ObjectIds, line 63"),"when calling add in ObjectIds, line 63")
call Cqo(Ado,Rvr(Udo,"when calling stringToIndex in ObjectIds, line 63"),"when calling add in ObjectIds, line 63")
call Cqo(Ado,Rvr(Ido,"when calling stringToIndex in ObjectIds, line 63"),"when calling add in ObjectIds, line 63")
set Ddo=MFu(Ado,",","when calling joinBy in ObjectIds, line 64")
call CAc(Ado,"when calling dispatch_LinkedList_destroyLinkedList in ObjectIds, line 65")
set MM=MM-1
return Ddo
endfunction
function Has takes integer Ias,integer Pas,string Aas returns string
local string Das
set w3[MM]=Aas
set MM=MM+1
set Das=Hdo(BR,rT,wT,NR,MR,uT,sT,"when calling commaList in Buffs, line 45")
set MM=MM-1
return Das
endfunction
function LJi takes integer JJi,integer KJi returns string
return"divineshield"
endfunction
function jtu takes string Ftu,integer ktu returns string
return Ftu+", [|cFFFFCC00Уровень "+tgu(ktu)+"|r]"
endfunction
function mtu takes string xtu,string vtu returns string
return xtu+" (|cFFFFCC00"+vtu+"|r)"
endfunction
function LRs takes integer JRs,integer KRs returns string
return mtu(jtu("Рассекающий удар",KRs),Jy)
endfunction
function MHi takes integer BHi,integer NHi returns string
return rX[BHi]
endfunction
function Ocs takes integer ccs,integer ocs returns string
return tgu(qQ[ccs])
endfunction
function QJi takes integer vJi,integer mJi returns string
return"defend"
endfunction
function RJi takes integer dJi,integer fJi returns string
return"avengerform"
endfunction
function RRs takes integer dRs,integer fRs returns string
return jW[xW[dRs]]
endfunction
function RlS takes integer dlS,integer flS returns string
return Cxu(UT,hJr(DT[XB[dlS]],HT[XB[dlS]]))
endfunction
function SVi takes integer tVi,integer iVi returns string
return"Бросок прилипающей к цели гранаты, которая взрывается при повторном использовании способности "+"или по окончанию времени действия, нанося "+tgu(hR)+" ед. осадного урона основной цели и всем войскам вокруг "+"и оглушая их на "+tgu(hR)+" сек.|nВремя действия - "+tgu(FR)+" сек."
endfunction
function Scs takes integer tcs,integer ics returns string
return eQ[tcs]
endfunction
function rYr takes integer wYr,integer uYr returns integer
return uYr*4+wYr
endfunction
function TDi takes integer fDi,integer RDi returns string
return Cxu(XL[fDi],wR[rYr(CL[fDi],VL[fDi])])
endfunction
function TVi takes integer fVi,integer RVi returns string
return"Досрочный взрыв гранаты."
endfunction
function UAi takes integer EAi,integer ZAi returns string
return"smart"
endfunction
function Uas takes integer Eas,integer Zas returns string
return cmu(tW[oW[Eas]])
endfunction
function Jps takes integer Aps,integer Dps,string Hps returns nothing
call Cju(WQ[Aps],"ftip",Dps,0,Hps)
endfunction
function Bfc takes integer Lfc,integer Xfc,string Cfc,string Vfc returns nothing
set w3[MM]=Vfc
set MM=MM+1
if bG[Lfc]==0 then
if Lfc==0 then
call Mau("Nullpointer exception when calling BuffDefinition.setTooltipNormal","when calling error in BuffObjEditing, line 149")
else
call Mau("Called BuffDefinition.setTooltipNormal on invalid object.","when calling error in BuffObjEditing, line 149")
endif
endif
call Jps(Lfc,Xfc,Cfc)
set MM=MM-1
endfunction
function res takes integer ues returns integer
return EQ[ues]
endfunction
function Efc takes integer mfc,string Qfc returns integer
local integer Wfc
set w3[MM]=Qfc
set MM=MM+1
if bG[mfc]==0 then
if mfc==0 then
call Mau("Nullpointer exception when calling BuffDefinition.getNewId","when calling error in BuffObjEditing, line 54")
else
call Mau("Called BuffDefinition.getNewId on invalid object.","when calling error in BuffObjEditing, line 54")
endif
endif
set Wfc=res(mfc)
set MM=MM-1
return Wfc
endfunction
function Ses takes integer ses,integer tes,string ies returns nothing
call Cju(WQ[ses],"fart",tes,0,ies)
endfunction
function Afc takes integer Zfc,integer Ufc,string Ifc,string Pfc returns nothing
set w3[MM]=Pfc
set MM=MM+1
if bG[Zfc]==0 then
if Zfc==0 then
call Mau("Nullpointer exception when calling BuffDefinition.setIconNormal","when calling error in BuffObjEditing, line 74")
else
call Mau("Called BuffDefinition.setIconNormal on invalid object.","when calling error in BuffObjEditing, line 74")
endif
endif
call Ses(Zfc,Ufc,Ifc)
set MM=MM-1
endfunction
function cFr takes string tFr,string iFr returns boolean
local integer SFr=vhr(tFr)
if vhr(iFr)>SFr then
return false
endif
return Dhr(tFr,0,vhr(iFr))==iFr
endfunction
function sFr takes string wFr,string uFr returns boolean
local integer rFr
if uFr=="" then
return true
endif
set rFr=vhr(wFr)
if vhr(uFr)>rFr then
return false
endif
return Dhr(wFr,rFr-vhr(uFr),rFr)==uFr
endfunction
function wes takes integer Vps,string Bps,string Nps returns nothing
local string Mps
set w3[MM]=Nps
set MM=MM+1
set Mps=Bps
if vhr(Bps)<20 or(not cFr(Bps,"ReplaceableTextures"))and(not cFr(Bps,"@!!"))then
set Mps="ReplaceableTextures\\CommandButtons\\"+Mps
endif
if not sFr(Bps,".blp")then
set Mps=Mps+".blp"
endif
call Afc(Vps,1,Mps,"when calling setIconNormal in BuffObjEditing, line 85")
set MM=MM-1
endfunction
function Kfc takes integer Dfc,string Hfc,string Jfc returns nothing
set w3[MM]=Jfc
set MM=MM+1
if bG[Dfc]==0 then
if Dfc==0 then
call Mau("Nullpointer exception when calling BuffDefinition.setIcon","when calling error in BuffObjEditing, line 78")
else
call Mau("Called BuffDefinition.setIcon on invalid object.","when calling error in BuffObjEditing, line 78")
endif
endif
call wes(Dfc,Hfc,"when calling setIcon in BuffObjEditing, line 78")
set MM=MM-1
endfunction
function FGS takes string gGS returns integer
local integer hGS
set w3[MM]=gGS
set MM=MM+1
if OG==0 then
if lG<32768 then
set lG=lG+1
set hGS=lG
set bG[hGS]=659
else
call Mau("Out of memory: Could not create BuffDefinition.","when calling error in BuffObjEditing, line 48")
set hGS=0
endif
else
set OG=OG-1
set hGS=oG[OG]
set bG[hGS]=659
endif
set MM=MM-1
return hGS
endfunction
function eju takes string bju,integer yju,integer pju returns integer
set Q1=0
return Q1
endfunction
function oes takes integer ces returns nothing
endfunction
function pes takes integer Oes,integer les,integer bes returns nothing
local integer yes
call oes(Oes)
set EQ[Oes]=les
set yes=eju("w3h",les,bes)
set WQ[Oes]=yes
endfunction
function Pps takes integer Eps,integer Zps,string Ups returns integer
local integer Ips
set w3[MM]=Ups
set MM=MM+1
set Ips=FGS("when calling alloc_BuffDefinition in BuffObjEditing, line 60")
call pes(Ips,Eps,Zps)
set MM=MM-1
return Ips
endfunction
function utt takes integer Mst,integer wtt returns boolean
return wtt<48 or(wtt>57 and wtt<97)
endfunction
function aXc takes integer yXc,integer pXc,string eXc returns boolean
local boolean qXc
set w3[MM]=eXc
set MM=MM+1
if gk[yXc]==0 then
if yXc==0 then
call Mau("Nullpointer exception when calling IdGenerator.isInvalid","when calling error in ObjectIdGenerator, line 26")
else
call Mau("Called IdGenerator.isInvalid on invalid object.","when calling error in ObjectIdGenerator, line 26")
endif
endif
set qXc=utt(yXc,pXc)
set MM=MM-1
return qXc
endfunction
function A7s takes unit I7s,integer P7s returns boolean
return GetUnitAbilityLevel(I7s,P7s)>0
endfunction
function jZu takes string kZu returns nothing
call pZu(ea,0,kZu)
endfunction
function ofo takes integer ifo,string Sfo returns boolean
local boolean cfo
set w3[MM]=Sfo
set MM=MM+1
set cfo=true
call L5r(Wa,ifo)
if Wa==null then
call Mau("Do not load abilities after map init when autoFinish = true","when calling error in Preloader, line 26")
elseif not A7s(Wa,ifo)then
call jZu("PreloadAbility: Ability "+cmu(ifo)+" does not exist.")
set cfo=false
endif
set MM=MM-1
return cfo
endfunction
function itt takes integer rtt,string stt returns integer
local integer ttt
set w3[MM]=stt
set MM=MM+1
if AD[rtt]<126 then
set AD[rtt]=AD[rtt]+1
loop
exitwhen not aXc(rtt,AD[rtt],"when calling isInvalid in ObjectIdGenerator, line 32")
set AD[rtt]=AD[rtt]+1
endloop
elseif DD[rtt]<126 then
set AD[rtt]=33
set DD[rtt]=DD[rtt]+1
loop
exitwhen not aXc(rtt,DD[rtt],"when calling isInvalid in ObjectIdGenerator, line 37")
set DD[rtt]=DD[rtt]+1
endloop
elseif HD[rtt]<126 then
set AD[rtt]=33
set DD[rtt]=33
set HD[rtt]=HD[rtt]+1
loop
exitwhen not aXc(rtt,HD[rtt],"when calling isInvalid in ObjectIdGenerator, line 43")
set HD[rtt]=HD[rtt]+1
endloop
elseif JD[rtt]<126 then
set AD[rtt]=33
set DD[rtt]=33
set HD[rtt]=33
set JD[rtt]=JD[rtt]+1
loop
exitwhen not aXc(rtt,JD[rtt],"when calling isInvalid in ObjectIdGenerator, line 50")
set JD[rtt]=JD[rtt]+1
endloop
else
call Mau("No vaild id left","when calling error in ObjectIdGenerator, line 53")
set MM=MM-1
return 0
endif
set ttt=AD[rtt]+DD[rtt]*256+HD[rtt]*65536+JD[rtt]*16777216
if not Ie then
call ofo(ttt,"when calling preloadAbility in ObjectIdGenerator, line 57")
endif
set MM=MM-1
return ttt
endfunction
function RXc takes integer nXc,string dXc returns integer
local integer fXc
set w3[MM]=dXc
set MM=MM+1
if gk[nXc]==0 then
if nXc==0 then
call Mau("Nullpointer exception when calling IdGenerator.next","when calling error in ObjectIdGenerator, line 29")
else
call Mau("Called IdGenerator.next on invalid object.","when calling error in ObjectIdGenerator, line 29")
endif
endif
set fXc=itt(nXc,"when calling next in ObjectIdGenerator, line 29")
set MM=MM-1
return fXc
endfunction
function FlS takes integer glS,integer hlS returns string
return cmu(hlS)
endfunction
function LHi takes integer JHi,integer KHi returns string
return cmu(KHi)
endfunction
function dDi takes integer aDi,integer nDi returns string
return cmu(nDi)
endfunction
function dtt takes integer att,integer ntt returns string
return cmu(ntt)
endfunction
function uHc takes integer BDc,integer NDc,string MDc returns string
local string wHc
set w3[MM]=MDc
set MM=MM+1
if IF[BDc]==0 then
if BDc==0 then
call Mau("Nullpointer exception when calling ToStringClosure.toString","when calling error in LinkedList, line 560")
else
call Mau("Called ToStringClosure.toString on invalid object.","when calling error in LinkedList, line 560")
endif
endif
if IF[BDc]<=1667 then
if IF[BDc]<=1666 then
set wHc=dtt(BDc,NDc)
else
set wHc=FlS(BDc,NDc)
endif
elseif IF[BDc]<=1668 then
set wHc=dDi(BDc,NDc)
else
set wHc=LHi(BDc,NDc)
endif
set MM=MM-1
return wHc
endfunction
function Oku takes integer wku,integer uku,string rku,string sku returns string
local integer tku
local integer iku
local integer Sku
local integer cku
local string oku
set w3[MM]=sku
set MM=MM+1
set tku=jDc(wku,"when calling iterator in LinkedList, line 563")
set iku=a4s("when calling new_LinkedList in LinkedList, line 564")
set cku=tku
loop
exitwhen not t1s(cku)
set Sku=r1s(cku)
call Cqo(iku,Rvr(uHc(uku,Sku,"when calling toString in LinkedList, line 567"),"when calling stringToIndex in LinkedList, line 567"),"when calling add in LinkedList, line 567")
endloop
call KAc(tku,"when calling close in LinkedList, line 569")
set oku=MFu(iku,rku,"when calling joinBy in LinkedList, line 570")
call CAc(iku,"when calling dispatch_LinkedList_destroyLinkedList in LinkedList, line 571")
set MM=MM-1
return oku
endfunction
function oES takes string SES returns integer
local integer cES
set w3[MM]=SES
set MM=MM+1
if ZF==0 then
if UF<32768 then
set UF=UF+1
set cES=UF
set IF[cES]=1666
else
call Mau("Out of memory: Could not create ToStringClosure_joinBy_ObjectIds.","when calling error in ObjectIds, line 56")
set cES=0
endif
else
set ZF=ZF-1
set cES=EF[ZF]
set IF[cES]=1666
endif
set MM=MM-1
return cES
endfunction
function hdo takes integer fdo,string Rdo returns string
local integer Tdo
local string Ydo
local integer Gdo
local integer gdo
set w3[MM]=Rdo
set MM=MM+1
set Tdo=a4s("when calling new_LinkedList in ObjectIds, line 53")
call Cqo(Tdo,fdo,"when calling add in ObjectIds, line 55")
set gdo=Tdo
set Gdo=oES("when calling alloc_ToStringClosure_joinBy_ObjectIds in ObjectIds, line 56")
set Ydo=Oku(gdo,Gdo,",","when calling joinBy in ObjectIds, line 56")
call CAc(Tdo,"when calling dispatch_LinkedList_destroyLinkedList in ObjectIds, line 57")
set MM=MM-1
return Ydo
endfunction
function Cps takes integer Kps,integer Lps,string Xps returns nothing
call Cju(WQ[Kps],"fube",Lps,0,Xps)
endfunction
function rRc takes integer Nfc,integer Mfc,string wRc,string uRc returns nothing
set w3[MM]=uRc
set MM=MM+1
if bG[Nfc]==0 then
if Nfc==0 then
call Mau("Nullpointer exception when calling BuffDefinition.setTooltipNormalExtended","when calling error in BuffObjEditing, line 152")
else
call Mau("Called BuffDefinition.setTooltipNormalExtended on invalid object.","when calling error in BuffObjEditing, line 152")
endif
endif
call Cps(Nfc,Mfc,wRc)
set MM=MM-1
endfunction
function V5s takes integer D5s,integer H5s,string J5s returns string
local integer K5s
local integer L5s
local integer X5s
local string C5s
set w3[MM]=J5s
set MM=MM+1
set K5s=Pps(RXc(gq,"when calling next in Meteor, line 40"),1112041075,"when calling new_BuffDefinition in Meteor, line 40")
call Kfc(K5s,"BTNMeteor","when calling setIcon in Meteor, line 40")
set L5s=K5s
call Bfc(L5s,1,"Метеор","when calling setTooltipNormal in Meteor, line 40")
set X5s=L5s
call rRc(X5s,1,"Этот воин стал жертвой заклинания \"Метеор\". Он постепенно теряет здоровье.","when calling setTooltipNormalExtended in Meteor, line 40")
set C5s=hdo(Efc(X5s,"when calling getNewId in Meteor, line 40"),"when calling commaList in Meteor, line 40")
set MM=MM-1
return C5s
endfunction
function VHi takes integer XHi,integer CHi returns string
return Cxu(ML[XHi],rR[rYr(wX[XHi],uX[XHi])])
endfunction
function VJi takes integer XJi,integer CJi returns string
return"fanofknives"
endfunction
function VRs takes integer XRs,integer CRs returns string
return"Воин поражает размашистым ударом всех противников перед собой, нанося им "+tgu(Zy*CRs)+" ед. физического урона. "+"При поражении "+tgu(Uy)+" целей или более, воин наносит им глубокие раны, из-за которых цели получают "+tgu(Iy*CRs)+" ед. урона ежесекундно в течение "+tgu(Py)+" сек., "+"а их скорости боя и передвижения снижаются на "+tgu(qUu(Ay*100.))+"%."
endfunction
function WVi takes integer mVi,integer QVi returns string
return cmu(GR)+","+cmu(gR)
endfunction
function Mjr takes string Bjr,string Njr returns string
return Bjr+" (|cFFFFCC00"+Njr+"|r)"
endfunction
function Y_S takes integer R_S,integer T_S returns string
return Mjr(oV[bV[R_S]],cV[bV[R_S]])
endfunction
function ZJi takes integer WJi,integer EJi returns string
return"dismount"
endfunction
function bAi takes integer OAi,integer lAi returns string
return"dispelmagic"
endfunction
function bJi takes integer OJi,integer lJi returns string
return"auraunholy"
endfunction
function fgr takes string ngr,string dgr returns string
return ngr+" (|cFFFFCC00"+dgr+"|r)"
endfunction
function dVi takes integer aVi,integer nVi returns string
return fgr("Липкая граната",kR)
endfunction
function eJi takes integer yJi,integer pJi returns string
return"auravampiric"
endfunction
function elS takes integer ylS,integer plS returns string
return IT
endfunction
function Vjr takes string Xjr,integer Cjr returns string
return Xjr+", [|cFFFFCC00Уровень "+tgu(Cjr)+"|r]"
endfunction
function f_S takes integer n_S,integer d_S returns string
return Mjr(Vjr(oV[lV[n_S]],d_S),cV[lV[n_S]])
endfunction
function fjs takes integer njs,integer djs returns string
return cmu(XE[njs])
endfunction
function gDi takes integer YDi,integer GDi returns string
return BL[YDi]
endfunction
function gjs takes integer Rjs,integer Tjs,string Yjs returns string
local string Gjs
set w3[MM]=Yjs
set MM=MM+1
set Gjs=Hdo(BR,rT,wT,NR,MR,uT,sT,"when calling commaList in DummyBuffs, line 53")
set MM=MM-1
return Gjs
endfunction
function iJi takes integer sJi,integer tJi returns string
return sX[sJi]
endfunction
function Ufo takes integer kfo,integer jfo,integer xfo,integer vfo,string mfo returns string
local integer Qfo
local string Wfo
local integer Efo
local integer Zfo
set w3[MM]=mfo
set MM=MM+1
set Qfo=a4s("when calling new_LinkedList in ObjectIds, line 53")
call Cqo(Qfo,kfo,"when calling add in ObjectIds, line 55")
call Cqo(Qfo,jfo,"when calling add in ObjectIds, line 55")
call Cqo(Qfo,xfo,"when calling add in ObjectIds, line 55")
call Cqo(Qfo,vfo,"when calling add in ObjectIds, line 55")
set Zfo=Qfo
set Efo=oES("when calling alloc_ToStringClosure_joinBy_ObjectIds in ObjectIds, line 56")
set Wfo=Oku(Zfo,Efo,",","when calling joinBy in ObjectIds, line 56")
call CAc(Qfo,"when calling dispatch_LinkedList_destroyLinkedList in ObjectIds, line 57")
set MM=MM-1
return Wfo
endfunction
function mPi takes integer kPi,integer jPi,string xPi returns string
local string vPi
set w3[MM]=xPi
set MM=MM+1
set vPi=Ufo(Uf,Uf,Uf,Uf,"when calling commaList in SotfrpGuiDestructables, line 132")
set MM=MM-1
return vPi
endfunction
function oao takes integer uao,integer rao,string sao returns string
local integer tao
local string iao
local integer Sao
local integer cao
set w3[MM]=sao
set MM=MM+1
set tao=a4s("when calling new_LinkedList in ObjectIds, line 53")
call Cqo(tao,uao,"when calling add in ObjectIds, line 55")
call Cqo(tao,rao,"when calling add in ObjectIds, line 55")
set cao=tao
set Sao=oES("when calling alloc_ToStringClosure_joinBy_ObjectIds in ObjectIds, line 56")
set iao=Oku(cao,Sao,",","when calling joinBy in ObjectIds, line 56")
call CAc(tao,"when calling dispatch_LinkedList_destroyLinkedList in ObjectIds, line 57")
set MM=MM-1
return iao
endfunction
function mTs takes integer kTs,integer jTs,string xTs returns string
local string vTs
set w3[MM]=xTs
set MM=MM+1
set vTs=oao(Wy,Ey,"when calling commaList in Cleave, line 73")
set MM=MM-1
return vTs
endfunction
function nJi takes integer qJi,integer aJi returns string
return"avatar"
endfunction
function nlS takes integer qlS,integer alS returns string
return""
endfunction
function oJi takes integer SJi,integer cJi returns string
return tX[SJi]
endfunction
function qDi takes integer pDi,integer eDi returns string
return LL[pDi]
endfunction
function s5s takes integer u5s,integer r5s returns string
return"Вызывает метеорит, который падает на указанное место спустя 1 сек., нанося 475 ед. урона. Также метеорит поджигает землю, нанося 47,5 ед. урона раз в 1 сек. в течение 10 сек всем в области поражения."
endfunction
function sVi takes integer uVi,integer rVi returns string
return fgr("Липкая граната",kR)
endfunction
function scs takes integer ucs,integer rcs returns string
return pQ[ucs]
endfunction
function vqt takes integer jqt,integer xqt returns string
return"Бросок костей судьбы, дающих случайное боевое усиление. Время действия - "+tgu(Ja)+" сек."
endfunction
function Ixs takes integer Zxs,integer Uxs returns boolean
return false
endfunction
function Ofs takes integer cfs,integer ofs returns boolean
return false
endfunction
function xRs takes integer kRs,integer jRs returns boolean
return false
endfunction
function LLc takes integer DLc,integer HLc,string JLc returns boolean
local boolean KLc
set w3[MM]=JLc
set MM=MM+1
if wg[DLc]==0 then
if DLc==0 then
call Mau("Nullpointer exception when calling BooleanLevelClosure.run","when calling error in ObjEditingNatives, line 16")
else
call Mau("Called BooleanLevelClosure.run on invalid object.","when calling error in ObjEditingNatives, line 16")
endif
endif
if wg[DLc]<=649 then
if wg[DLc]<=648 then
set KLc=Ofs(DLc,HLc)
else
set KLc=Ixs(DLc,HLc)
endif
else
set KLc=xRs(DLc,HLc)
endif
set MM=MM-1
return KLc
endfunction
function tsu takes boolean rsu returns string
local string ssu
if rsu then
set ssu="true"
else
set ssu="false"
endif
return ssu
endfunction
function wcs takes integer VSs,integer BSs,string NSs returns string
local string MSs
set w3[MM]=NSs
set MM=MM+1
set MSs=tsu(LLc(yQ[VSs],BSs,"when calling run in AbilityObjEditing, line 80"))
set MM=MM-1
return MSs
endfunction
function xJi takes integer kJi,integer jJi returns string
return"berserk"
endfunction
function oXc takes integer tXc,integer iXc,string SXc returns string
local string cXc
set w3[MM]=SXc
set MM=MM+1
if eY[tXc]==0 then
if tXc==0 then
call Mau("Nullpointer exception when calling StringLevelClosure.run","when calling error in ObjEditingNatives, line 7")
else
call Mau("Called StringLevelClosure.run on invalid object.","when calling error in ObjEditingNatives, line 7")
endif
endif
if eY[tXc]<=1614 then
if eY[tXc]<=1601 then
if eY[tXc]<=1595 then
if eY[tXc]<=1592 then
if eY[tXc]<=1590 then
if eY[tXc]<=1589 then
set cXc=scs(tXc,iXc)
else
set cXc=Scs(tXc,iXc)
endif
elseif eY[tXc]<=1591 then
set cXc=Ocs(tXc,iXc)
else
set cXc=HSs(tXc,iXc,"when calling run_addTooltipProperty_AbilityDefinition_AbilityObjEditing in ObjEditingNatives, line 7")
endif
elseif eY[tXc]<=1594 then
if eY[tXc]<=1593 then
set cXc=CSs(tXc,iXc,"when calling run_addTooltipProperty_AbilityDefinition_AbilityObjEditing in ObjEditingNatives, line 7")
else
set cXc=wcs(tXc,iXc,"when calling run_addTooltipProperty_AbilityDefinition_AbilityObjEditing in ObjEditingNatives, line 7")
endif
else
set cXc=WVi(tXc,iXc)
endif
elseif eY[tXc]<=1598 then
if eY[tXc]<=1597 then
if eY[tXc]<=1596 then
set cXc=RRs(tXc,iXc)
else
set cXc=CIi(tXc,iXc)
endif
else
set cXc=bJi(tXc,iXc)
endif
elseif eY[tXc]<=1600 then
if eY[tXc]<=1599 then
set cXc=bAi(tXc,iXc)
else
set cXc=eJi(tXc,iXc)
endif
else
set cXc=nJi(tXc,iXc)
endif
elseif eY[tXc]<=1608 then
if eY[tXc]<=1605 then
if eY[tXc]<=1603 then
if eY[tXc]<=1602 then
set cXc=RJi(tXc,iXc)
else
set cXc=GJi(tXc,iXc)
endif
elseif eY[tXc]<=1604 then
set cXc=FJi(tXc,iXc)
else
set cXc=xJi(tXc,iXc)
endif
elseif eY[tXc]<=1607 then
if eY[tXc]<=1606 then
set cXc=QJi(tXc,iXc)
else
set cXc=ZJi(tXc,iXc)
endif
else
set cXc=HJi(tXc,iXc)
endif
elseif eY[tXc]<=1611 then
if eY[tXc]<=1610 then
if eY[tXc]<=1609 then
set cXc=LJi(tXc,iXc)
else
set cXc=VJi(tXc,iXc)
endif
else
set cXc=nlS(tXc,iXc)
endif
elseif eY[tXc]<=1613 then
if eY[tXc]<=1612 then
set cXc=UAi(tXc,iXc)
else
set cXc=mTs(tXc,iXc,"when calling run_presetBuffs_Cleave in ObjEditingNatives, line 7")
endif
else
set cXc=V5s(tXc,iXc,"when calling run_presetBuffs_presetManaCost_presetAreaofEffect_presetCooldown_presetCastRange_getNewId_compiletime_Meteor in ObjEditingNatives, line 7")
endif
elseif eY[tXc]<=1627 then
if eY[tXc]<=1621 then
if eY[tXc]<=1618 then
if eY[tXc]<=1616 then
if eY[tXc]<=1615 then
set cXc=Uas(tXc,iXc)
else
set cXc=fjs(tXc,iXc)
endif
elseif eY[tXc]<=1617 then
set cXc=iJi(tXc,iXc)
else
set cXc=oJi(tXc,iXc)
endif
elseif eY[tXc]<=1620 then
if eY[tXc]<=1619 then
set cXc=elS(tXc,iXc)
else
set cXc=qDi(tXc,iXc)
endif
else
set cXc=Has(tXc,iXc,"when calling run_presetTargetsAllowed_Buff_Buffs in ObjEditingNatives, line 7")
endif
elseif eY[tXc]<=1624 then
if eY[tXc]<=1623 then
if eY[tXc]<=1622 then
set cXc=gjs(tXc,iXc,"when calling run_presetTargetsAllowed_DummyBuffs in ObjEditingNatives, line 7")
else
set cXc=gDi(tXc,iXc)
endif
else
set cXc=MHi(tXc,iXc)
endif
elseif eY[tXc]<=1626 then
if eY[tXc]<=1625 then
set cXc=vqt(tXc,iXc)
else
set cXc=SVi(tXc,iXc)
endif
else
set cXc=TVi(tXc,iXc)
endif
elseif eY[tXc]<=1633 then
if eY[tXc]<=1630 then
if eY[tXc]<=1629 then
if eY[tXc]<=1628 then
set cXc=VRs(tXc,iXc)
else
set cXc=s5s(tXc,iXc)
endif
else
set cXc=GlS(tXc,iXc)
endif
elseif eY[tXc]<=1632 then
if eY[tXc]<=1631 then
set cXc=TDi(tXc,iXc)
else
set cXc=VHi(tXc,iXc)
endif
else
set cXc=f_S(tXc,iXc)
endif
elseif eY[tXc]<=1636 then
if eY[tXc]<=1635 then
if eY[tXc]<=1634 then
set cXc=Y_S(tXc,iXc)
else
set cXc=sVi(tXc,iXc)
endif
else
set cXc=dVi(tXc,iXc)
endif
elseif eY[tXc]<=1638 then
if eY[tXc]<=1637 then
set cXc=LRs(tXc,iXc)
else
set cXc=RlS(tXc,iXc)
endif
else
set cXc=mPi(tXc,iXc,"when calling run_presetUnitCreatedperplayerrace_presetDurationNormal_presetCastRange_addButton_getNewId_compiletime_SotfrpGuiDestructables in ObjEditingNatives, line 7")
endif
set MM=MM-1
return cXc
endfunction
function axu takes integer oxu,string Oxu,integer lxu,integer bxu,integer yxu,string pxu returns nothing
local integer exu
local integer qxu
set w3[MM]=pxu
set MM=MM+1
set exu=1
set qxu=lxu
loop
exitwhen exu>qxu
call Cju(oxu,Oxu,exu,bxu,oXc(yxu,exu,"when calling run in ObjEditingNatives, line 90"))
set exu=exu+1
endloop
set MM=MM-1
endfunction
function Gnc takes integer Rnc,string Tnc,integer Ync returns nothing
endfunction
function rss takes integer Mrs,string wss,integer uss returns nothing
if iQ[Mrs]!=0 and SQ[Mrs]then
call Gnc(iQ[Mrs],wss,uss)
endif
endfunction
function xec takes integer hec,string Fec,integer kec,string jec returns nothing
set w3[MM]=jec
set MM=MM+1
if SY[hec]==0 then
if hec==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.addTooltipProperty","when calling error in AbilityObjEditing, line 69")
else
call Mau("Called AbilityDefinition.addTooltipProperty on invalid object.","when calling error in AbilityObjEditing, line 69")
endif
endif
call rss(hec,Fec,kec)
set MM=MM-1
endfunction
function mSs takes integer jSs,integer xSs,string vSs returns nothing
set w3[MM]=vSs
set MM=MM+1
call axu(sQ[jSs],"spb5",tQ[jSs],5,xSs,"when calling setLevelsDataString in AbilityObjEditing, line 10548")
call xec(jSs,"BaseOrderID",xSs,"when calling addTooltipProperty in AbilityObjEditing, line 10549")
set MM=MM-1
endfunction
function fnc takes integer anc,integer nnc,string dnc returns nothing
set w3[MM]=dnc
set MM=MM+1
if SY[anc]==0 then
if anc==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionSpellBook.presetBaseOrderID","when calling error in AbilityObjEditing, line 10547")
else
call Mau("Called AbilityDefinitionSpellBook.presetBaseOrderID on invalid object.","when calling error in AbilityObjEditing, line 10547")
endif
endif
call mSs(anc,nnc,"when calling presetBaseOrderID in AbilityObjEditing, line 10547")
set MM=MM-1
endfunction
function OYs takes integer oYs returns nothing
set IW[oYs]=0
set PW[oYs]=0
set DW[oYs]=null
endfunction
function bYs takes integer lYs returns nothing
call OYs(lYs)
endfunction
function hYs takes integer gYs returns nothing
endfunction
function kYs takes integer FYs returns nothing
call bYs(FYs)
call hYs(FYs)
endfunction
function mmu takes code vmu returns nothing
call rxr(Eq,vmu)
endfunction
function Ppc takes string Upc returns integer
local integer Ipc
set w3[MM]=Upc
set MM=MM+1
if xm==0 then
if vm<32768 then
set vm=vm+1
set Ipc=vm
set mm[Ipc]=1586
else
call Mau("Out of memory: Could not create StringHashMap.","when calling error in Utility, line 81")
set Ipc=0
endif
else
set xm=xm-1
set Ipc=jm[xm]
set mm[Ipc]=1586
endif
set MM=MM-1
return Ipc
endfunction
function iRS takes integer tRS returns nothing
endfunction
function lRS takes integer ORS returns nothing
call iRS(ORS)
set AM[ORS]=InitHashtable()
set DM[ORS]=InitHashtable()
endfunction
function oRS takes string SRS returns integer
local integer cRS
set w3[MM]=SRS
set MM=MM+1
set cRS=Ppc("when calling alloc_StringHashMap in Utility, line 86")
call lRS(cRS)
set MM=MM-1
return cRS
endfunction
function MTr takes nothing returns integer
set q4=0
return q4
endfunction
function wDi takes integer MAi returns nothing
endfunction
function NAi takes integer VAi,string BAi returns nothing
set w3[MM]=BAi
set MM=MM+1
call MTr()
call a4s("when calling new_LinkedList in SotfrpGuiPresets, line 62")
call wDi(VAi)
set MM=MM-1
endfunction
function WSs takes integer QSs returns nothing
endfunction
function Sis takes integer iis returns nothing
set tQ[iis]=1
set iQ[iis]=0
set SQ[iis]=false
endfunction
function ais takes integer yis,integer pis,integer eis returns nothing
local integer qis
call Sis(yis)
set cQ[yis]=pis
set qis=eju("w3a",pis,eis)
set sQ[yis]=qis
endfunction
function USs takes integer ESs,integer ZSs returns nothing
call ais(ESs,ZSs,1098084450)
call WSs(ESs)
endfunction
function MSc takes string BSc returns integer
local integer NSc
set w3[MM]=BSc
set MM=MM+1
if oY==0 then
if OY<32768 then
set OY=OY+1
set NSc=OY
set lY[NSc]=1262
else
call Mau("Out of memory: Could not create IntLevelClosure_presetMinimumSpells_SotfrpGuiCommandPalettePreset_SotfrpGuiPresets.","when calling error in SotfrpGuiPresets, line 200")
set NSc=0
endif
else
set oY=oY-1
set NSc=cY[oY]
set lY[NSc]=1262
endif
set MM=MM-1
return NSc
endfunction
function MTS takes string BTS returns integer
local integer NTS
set w3[MM]=BTS
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set NTS=pY
set eY[NTS]=1592
else
call Mau("Out of memory: Could not create StringLevelClosure_addTooltipProperty_AbilityDefinition_AbilityObjEditing.","when calling error in AbilityObjEditing, line 74")
set NTS=0
endif
else
set yY=yY-1
set NTS=bY[yY]
set eY[NTS]=1592
endif
set MM=MM-1
return NTS
endfunction
function lss takes integer sss,string tss,integer iss,string Sss returns nothing
local integer css
local integer oss
local string Oss
set w3[MM]=Sss
set MM=MM+1
set oss=sss
set Oss=tss
set css=MTS("when calling alloc_StringLevelClosure_addTooltipProperty_AbilityDefinition_AbilityObjEditing in AbilityObjEditing, line 74")
set lQ[css]=iss
call xec(oss,Oss,css,"when calling addTooltipProperty in AbilityObjEditing, line 74")
set MM=MM-1
endfunction
function Eec takes integer vec,string mec,integer Qec,string Wec returns nothing
set w3[MM]=Wec
set MM=MM+1
if SY[vec]==0 then
if vec==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.addTooltipProperty","when calling error in AbilityObjEditing, line 73")
else
call Mau("Called AbilityDefinition.addTooltipProperty on invalid object.","when calling error in AbilityObjEditing, line 73")
endif
endif
call lss(vec,mec,Qec,"when calling addTooltipProperty in AbilityObjEditing, line 73")
set MM=MM-1
endfunction
function Dju takes integer Zju,string Uju,integer Iju,integer Pju,integer Aju returns nothing
endfunction
function hxu takes integer nxu,string dxu,integer fxu,integer Rxu,integer Txu,string Yxu returns nothing
local integer Gxu
local integer gxu
set w3[MM]=Yxu
set MM=MM+1
set Gxu=1
set gxu=fxu
loop
exitwhen Gxu>gxu
call Dju(nxu,dxu,Gxu,Rxu,NLc(Txu,Gxu,"when calling run in ObjEditingNatives, line 94"))
set Gxu=Gxu+1
endloop
set MM=MM-1
endfunction
function GSs takes integer RSs,integer TSs,string YSs returns nothing
set w3[MM]=YSs
set MM=MM+1
call hxu(sQ[RSs],"spb4",tQ[RSs],4,TSs,"when calling setLevelsDataInt in AbilityObjEditing, line 10520")
call Eec(RSs,"MaximumSpells",TSs,"when calling addTooltipProperty in AbilityObjEditing, line 10521")
set MM=MM-1
endfunction
function bnc takes integer onc,integer Onc,string lnc returns nothing
set w3[MM]=lnc
set MM=MM+1
if SY[onc]==0 then
if onc==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionSpellBook.presetMaximumSpells","when calling error in AbilityObjEditing, line 10519")
else
call Mau("Called AbilityDefinitionSpellBook.presetMaximumSpells on invalid object.","when calling error in AbilityObjEditing, line 10519")
endif
endif
call GSs(onc,Onc,"when calling presetMaximumSpells in AbilityObjEditing, line 10519")
set MM=MM-1
endfunction
function kSs takes integer gSs,integer hSs,string FSs returns nothing
set w3[MM]=FSs
set MM=MM+1
call hxu(sQ[gSs],"spb3",tQ[gSs],3,hSs,"when calling setLevelsDataInt in AbilityObjEditing, line 10541")
call Eec(gSs,"MinimumSpells",hSs,"when calling addTooltipProperty in AbilityObjEditing, line 10542")
set MM=MM-1
endfunction
function qnc takes integer ync,integer pnc,string enc returns nothing
set w3[MM]=enc
set MM=MM+1
if SY[ync]==0 then
if ync==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionSpellBook.presetMinimumSpells","when calling error in AbilityObjEditing, line 10540")
else
call Mau("Called AbilityDefinitionSpellBook.presetMinimumSpells on invalid object.","when calling error in AbilityObjEditing, line 10540")
endif
endif
call kSs(ync,pnc,"when calling presetMinimumSpells in AbilityObjEditing, line 10540")
set MM=MM-1
endfunction
function rcc takes string wcc returns integer
local integer ucc
set w3[MM]=wcc
set MM=MM+1
if oY==0 then
if OY<32768 then
set OY=OY+1
set ucc=OY
set lY[ucc]=1261
else
call Mau("Out of memory: Could not create IntLevelClosure_presetMaximumSpells_SotfrpGuiCommandPalettePreset_SotfrpGuiPresets.","when calling error in SotfrpGuiPresets, line 201")
set ucc=0
endif
else
set oY=oY-1
set ucc=cY[oY]
set lY[ucc]=1261
endif
set MM=MM-1
return ucc
endfunction
function CAi takes integer DAi,string HAi returns nothing
local integer JAi
local integer KAi
local integer LAi
local integer XAi
set w3[MM]=HAi
set MM=MM+1
set LAi=DAi
set JAi=MSc("when calling alloc_IntLevelClosure_presetMinimumSpells_SotfrpGuiCommandPalettePreset_SotfrpGuiPresets in SotfrpGuiPresets, line 200")
call qnc(LAi,JAi,"when calling presetMinimumSpells in SotfrpGuiPresets, line 200")
set XAi=DAi
set KAi=rcc("when calling alloc_IntLevelClosure_presetMaximumSpells_SotfrpGuiCommandPalettePreset_SotfrpGuiPresets in SotfrpGuiPresets, line 201")
call bnc(XAi,KAi,"when calling presetMaximumSpells in SotfrpGuiPresets, line 201")
set MM=MM-1
endfunction
function owo takes integer Swo,string cwo returns nothing
set w3[MM]=cwo
set MM=MM+1
if SY[Swo]==0 then
if Swo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiCommandPalettePreset.initialize","when calling error in SotfrpGuiPresets, line 199")
else
call Mau("Called SotfrpGuiCommandPalettePreset.initialize on invalid object.","when calling error in SotfrpGuiPresets, line 199")
endif
endif
call CAi(Swo,"when calling initialize in SotfrpGuiPresets, line 199")
set MM=MM-1
endfunction
function SDi takes integer tDi,string iDi returns nothing
set w3[MM]=iDi
set MM=MM+1
call USs(tDi,RXc(Gq,"when calling next in SotfrpGuiPresets, line 204"))
call NAi(tDi,"when calling SotfrpGuiCommandPalettePreset_init in SotfrpGuiPresets, line 203")
call owo(tDi,"when calling initialize in SotfrpGuiPresets, line 205")
set MM=MM-1
endfunction
function VSc takes string XSc returns integer
local integer CSc
set w3[MM]=XSc
set MM=MM+1
if tY==0 then
if iY<32768 then
set iY=iY+1
set CSc=iY
set SY[CSc]=548
else
call Mau("Out of memory: Could not create SotfrpGuiCommandPalettePreset.","when calling error in SotfrpGuiPresets, line 197")
set CSc=0
endif
else
set tY=tY-1
set CSc=sY[tY]
set SY[CSc]=548
endif
set MM=MM-1
return CSc
endfunction
function sDi takes string uDi returns integer
local integer rDi
set w3[MM]=uDi
set MM=MM+1
set rDi=VSc("when calling alloc_SotfrpGuiCommandPalettePreset in SotfrpGuiPresets, line 203")
call SDi(rDi,"when calling construct_SotfrpGuiCommandPalettePreset in SotfrpGuiPresets, line 203")
set MM=MM-1
return rDi
endfunction
function xSc takes string kSc returns integer
local integer jSc
set w3[MM]=kSc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jSc=kj
set jj[jSc]=965
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 240")
set jSc=0
endif
else
set Fj=Fj-1
set jSc=hj[Fj]
set jj[jSc]=965
endif
set MM=MM-1
return jSc
endfunction
function xmu takes code jmu returns nothing
call ixr(Eq,Filter(jmu))
endfunction
function Jfr takes string Yfr returns boolean
local integer Gfr
local integer gfr
local integer hfr
local integer Ffr
local integer kfr
local integer jfr
local integer xfr
local integer vfr
local integer mfr
local integer Qfr
local integer Wfr
local integer Efr
local integer Zfr
local unit Ufr
local integer Ifr
local integer Pfr
local integer Afr
local unit Dfr
local integer Hfr
set w3[MM]=Yfr
set MM=MM+1
set Ef=oRS("when calling new_StringHashMap in SotfrpGuiDestructables, line 18")
set Zf=HDs("when calling new_HashMap in SotfrpGuiDestructables, line 19")
call Cfr("ashenvaletree",1096053874,"when calling registerDestructable in SotfrpGuiDestructables, line 33")
call Cfr("outlandmushroomtree",1330934903,"when calling registerDestructable in SotfrpGuiDestructables, line 34")
call Cfr("dalaranruinstree",1247044468,"when calling registerDestructable in SotfrpGuiDestructables, line 35")
call Cfr("lordaeronsnowtree",1498706804,"when calling registerDestructable in SotfrpGuiDestructables, line 36")
call Cfr("lordaeronwintertree",1498707828,"when calling registerDestructable in SotfrpGuiDestructables, line 37")
call Cfr("lordaeronsnowtree",1498702708,"when calling registerDestructable in SotfrpGuiDestructables, line 38")
call Cfr("lordaeronfalltree",1498703476,"when calling registerDestructable in SotfrpGuiDestructables, line 39")
call Cfr("lordaeronsummertree",1448373364,"when calling registerDestructable in SotfrpGuiDestructables, line 40")
call Cfr("ruinstree",1515484279,"when calling registerDestructable in SotfrpGuiDestructables, line 41")
call Cfr("icecrowntree",1230271607,"when calling registerDestructable in SotfrpGuiDestructables, line 42")
call Cfr("northrendtree",1314157687,"when calling registerDestructable in SotfrpGuiDestructables, line 43")
call Cfr("mushroomtree",1146385256,"when calling registerDestructable in SotfrpGuiDestructables, line 44")
call Cfr("undergroundmushroomtree",1196716904,"when calling registerDestructable in SotfrpGuiDestructables, line 45")
call Cfr("barrenstree",1112831095,"when calling registerDestructable in SotfrpGuiDestructables, line 46")
call Cfr("dalaranruinstree",1247048823,"when calling registerDestructable in SotfrpGuiDestructables, line 47")
call Cfr("lordaeronsnowtree",1465152372,"when calling registerDestructable in SotfrpGuiDestructables, line 48")
call Cfr("lordaeronwintertree",1465152631,"when calling registerDestructable in SotfrpGuiDestructables, line 49")
call Cfr("lordaeronsummertree",1280601204,"when calling registerDestructable in SotfrpGuiDestructables, line 50")
call Cfr("lordaeronfalltree",1179939959,"when calling registerDestructable in SotfrpGuiDestructables, line 51")
call Cfr("outlandmushroomtree",1263826039,"when calling registerDestructable in SotfrpGuiDestructables, line 52")
call Cfr("felwoodtree",1129608306,"when calling registerDestructable in SotfrpGuiDestructables, line 53")
call Cfr("ashenvalecanopytree",1096053859,"when calling registerDestructable in SotfrpGuiDestructables, line 54")
call Cfr("icecrowncanopytree",1230271587,"when calling registerDestructable in SotfrpGuiDestructables, line 55")
call Cfr("northrendcanopytree",1314157667,"when calling registerDestructable in SotfrpGuiDestructables, line 56")
call Cfr("barrenscanopytree",1112831075,"when calling registerDestructable in SotfrpGuiDestructables, line 57")
call Cfr("ruinscanopytree",1515484259,"when calling registerDestructable in SotfrpGuiDestructables, line 58")
call Cfr("felwoodcanopytree",1129608291,"when calling registerDestructable in SotfrpGuiDestructables, line 59")
call Cfr("barricade",1280598625,"when calling registerDestructable in SotfrpGuiDestructables, line 60")
call Cfr("tntbarrel",1280599416,"when calling registerDestructable in SotfrpGuiDestructables, line 61")
call Cfr("lordaerongate",1280599857,"when calling registerDestructable in SotfrpGuiDestructables, line 63")
call Cfr("lordaerongate45",1280599859,"when calling registerDestructable in SotfrpGuiDestructables, line 64")
call Cfr("ruinsgate",1515480881,"when calling registerDestructable in SotfrpGuiDestructables, line 65")
call Cfr("ruinsgate45",1515480883,"when calling registerDestructable in SotfrpGuiDestructables, line 66")
call Cfr("bigelfgate",1096050481,"when calling registerDestructable in SotfrpGuiDestructables, line 67")
call Cfr("bigelfgate45",1096050483,"when calling registerDestructable in SotfrpGuiDestructables, line 68")
call Cfr("irongate",1146382133,"when calling registerDestructable in SotfrpGuiDestructables, line 69")
call Cfr("irongate45",1146382134,"when calling registerDestructable in SotfrpGuiDestructables, line 70")
call Cfr("rockchunks",1146384995,"when calling registerDestructable in SotfrpGuiDestructables, line 72")
call Cfr("lordaeronrockchunks",1280602723,"when calling registerDestructable in SotfrpGuiDestructables, line 73")
call Cfr("dungeonlever",1146383478,"when calling registerDestructable in SotfrpGuiDestructables, line 75")
call Cfr("crates",1280598898,"when calling registerDestructable in SotfrpGuiDestructables, line 76")
call Cfr("ruinsflower",1515218551,"when calling registerDestructable in SotfrpGuiDestructables, line 78")
call Cfr("fire",1498379366,"when calling registerDestructable in SotfrpGuiDestructables, line 79")
set Uf=2016423988
set If=HDs("when calling new_HashMap in SotfrpGuiDestructables, line 95")
call e7u(Uf,"when calling protectUnitType in SotfrpGuiDestructables, line 98")
call xmu(jaw)
call mmu(xaw)
if Ie then
set gfr=sDi("when calling new_SotfrpGuiCommandPalettePreset in SotfrpGuiDestructables, line 111")
set Pfr=gfr
set Gfr=bSc("when calling alloc_StringLevelClosure_presetBaseOrderID_SotfrpGuiDestructables in SotfrpGuiDestructables, line 111")
call fnc(Pfr,Gfr,"when calling presetBaseOrderID in SotfrpGuiDestructables, line 111")
endif
set Pf="Создание в указанной точке выбранной с помощью команды dood декорации."
set Af=1095577705
set hfr=eSc("when calling alloc_OnPointCast_onPointCast_SotfrpGuiDestructables in SotfrpGuiDestructables, line 117")
call kYs(hfr)
call ASu(1095577706,hfr,"when calling onPointCast in SotfrpGuiDestructables, line 117")
set Ffr=RSc("when calling alloc_OnPointCast_onPointCast_SotfrpGuiDestructables in SotfrpGuiDestructables, line 120")
call kYs(Ffr)
call ASu(1095577707,Ffr,"when calling onPointCast in SotfrpGuiDestructables, line 120")
set Df="|n|n"+Syu(kp,jp,xp,vp)+"Текущие параметры|r|nДекорация: {0} ({1})|nВысота полета: {2}|nПоворот: {3}|nРазмер: {4}|nВариация: {5}"
set kfr=0
set jfr=bj_MAX_PLAYERS-1
loop
exitwhen kfr>jfr
set Jf[kfr]=0.
set Kf[kfr]=true
set Xf[kfr]=1.
set Cf[kfr]=true
set kfr=kfr+1
endloop
set xfr=FSc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiDestructables in SotfrpGuiDestructables, line 235")
set vfr=eDt(xfr,"when calling new_BuiltinData in SotfrpGuiDestructables, line 235")
call Fao(vfr,o2u(),"when calling setArgumentsTypes in SotfrpGuiDestructables, line 240")
set Wfr=WHt(vfr,"when calling new_BuiltinFunction in SotfrpGuiDestructables, line 235")
set Afr=Wfr
set mfr=xSc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiDestructables in SotfrpGuiDestructables, line 240")
set Qfr=eDt(mfr,"when calling new_BuiltinData in SotfrpGuiDestructables, line 240")
call dao(Qfr,o2u(),o2u(),"when calling setArgumentsTypes in SotfrpGuiDestructables, line 242")
call C4o(Afr,Qfr,"when calling addOverload in SotfrpGuiDestructables, line 240")
call jBu(Wfr,"dood","when calling registerProtectedBuiltin in SotfrpGuiDestructables, line 235")
set Efr=0
set Zfr=bj_MAX_PLAYERS-1
loop
exitwhen Efr>Zfr
set Ufr=Ofr(Efr)
if Ufr!=null then
set Dfr=Ufr
set Hfr=Af
set Ifr=QSc("when calling alloc_OnPointCast_onPointCast_SotfrpGuiDestructables in SotfrpGuiDestructables, line 247")
call kYs(Ifr)
set AL[Ifr]=Efr
call ESu(Dfr,Hfr,Ifr,"when calling onPointCast in SotfrpGuiDestructables, line 247")
endif
set Efr=Efr+1
endloop
set MM=MM-1
set Ufr=null
set Dfr=null
return true
endfunction
function DRo takes nothing returns boolean
set MM=0
return Jfr("SotfrpGuiDestructables, line 1")
endfunction
function DVw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function AXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="item darkbook")then
return false
endif
return true
endfunction
function DXw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
if AXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],KSw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function nFw takes unit eFw returns nothing
local unit qFw=LoadUnitHandle(i,yl,GetHandleId(eFw))
local group aFw=LoadGroupHandle(i,bl,GetHandleId(qFw))
call GroupRemoveUnit(aFw,eFw)
if FirstOfGroup(aFw)==null then
call DestroyGroup(aFw)
call SaveGroupHandle(i,bl,GetHandleId(qFw),null)
endif
set aFw=null
set qFw=null
set qFw=null
set aFw=null
endfunction
function D_u takes nothing returns boolean
call nFw(ry)
return true
endfunction
function ghr takes nothing returns nothing
set WR[0]=""
set WR[1]=""
set WR[2]=""
set WR[3]=""
set WR[4]=""
set WR[5]=""
set WR[6]=""
set WR[7]=""
set WR[8]=""
set WR[9]="\t"
set WR[10]="
"
set WR[11]=""
set WR[12]=""
set WR[13]="
"
set WR[14]=""
set WR[15]=""
set WR[16]=""
set WR[17]=""
set WR[18]=""
set WR[19]=""
set WR[20]=""
set WR[21]=""
set WR[22]=""
set WR[23]=""
set WR[24]=""
set WR[25]=""
set WR[26]=""
set WR[27]=""
set WR[28]=""
set WR[29]=""
set WR[30]=""
set WR[31]=""
set WR[32]=" "
set WR[33]="!"
set WR[34]="\""
set WR[35]="#"
set WR[36]="$"
set WR[37]="%"
set WR[38]="&"
set WR[39]="'"
set WR[40]="("
set WR[41]=")"
set WR[42]="*"
set WR[43]="+"
set WR[44]=","
set WR[45]="-"
set WR[46]="."
set WR[47]="/"
set WR[48]="0"
set WR[49]="1"
set WR[50]="2"
set WR[51]="3"
set WR[52]="4"
set WR[53]="5"
set WR[54]="6"
set WR[55]="7"
set WR[56]="8"
set WR[57]="9"
set WR[58]=":"
set WR[59]=";"
set WR[60]="<"
set WR[61]="="
set WR[62]=">"
set WR[63]="?"
set WR[64]="@"
set WR[65]="A"
set WR[66]="B"
set WR[67]="C"
set WR[68]="D"
set WR[69]="E"
set WR[70]="F"
set WR[71]="G"
set WR[72]="H"
set WR[73]="I"
set WR[74]="J"
set WR[75]="K"
set WR[76]="L"
set WR[77]="M"
set WR[78]="N"
set WR[79]="O"
set WR[80]="P"
set WR[81]="Q"
set WR[82]="R"
set WR[83]="S"
set WR[84]="T"
set WR[85]="U"
set WR[86]="V"
set WR[87]="W"
set WR[88]="X"
set WR[89]="Y"
set WR[90]="Z"
set WR[91]="["
set WR[92]="\\"
set WR[93]="]"
set WR[94]="^"
set WR[95]="_"
set WR[96]="`"
set WR[97]="a"
set WR[98]="b"
set WR[99]="c"
set WR[100]="d"
set WR[101]="e"
set WR[102]="f"
set WR[103]="g"
set WR[104]="h"
set WR[105]="i"
set WR[106]="j"
set WR[107]="k"
set WR[108]="l"
set WR[109]="m"
set WR[110]="n"
set WR[111]="o"
set WR[112]="p"
set WR[113]="q"
set WR[114]="r"
set WR[115]="s"
set WR[116]="t"
set WR[117]="u"
set WR[118]="v"
set WR[119]="w"
set WR[120]="x"
set WR[121]="y"
set WR[122]="z"
set WR[123]="{"
set WR[124]="|"
set WR[125]="}"
set WR[126]="~"
set WR[127]=""
endfunction
function jhr takes nothing returns nothing
endfunction
function bFr takes string lFr returns string
return StringCase(lFr,true)
endfunction
function khr takes nothing returns nothing
local integer hhr=0
local integer Fhr=ZR
loop
exitwhen hhr>Fhr
if bFr(WR[hhr])==WR[hhr]then
set ER[StringHash(WR[hhr])/2033480+1002]=hhr
endif
set hhr=hhr+1
endloop
endfunction
function initialize takes nothing returns nothing
call ghr()
call khr()
call jhr()
endfunction
function ahr takes string qhr returns boolean
set w3[MM]=qhr
set MM=MM+1
set ZR=126+1
call initialize()
call Rvr("","when calling stringToIndex in StringUtils, line 187")
set MM=MM-1
return true
endfunction
function Dfo takes nothing returns boolean
set MM=0
return ahr("StringUtils, line 1")
endfunction
function Djw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function Dkw takes nothing returns boolean
if not(GetSpellAbilityId()==1093682504)then
return false
endif
return true
endfunction
function Dmu takes nothing returns boolean
set Dq="|"
return true
endfunction
function Dvw takes nothing returns nothing
set Ju[8]=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[8],bj_UNIT_FACING)
call UnitAddAbilityBJ(1093678146,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093678146,GetLastCreatedUnit(),Mu)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"thunderbolt",GetEnumUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
endfunction
function E5w takes nothing returns boolean
if GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682522)!=0 then
return true
else
return false
endif
endfunction
function E7w takes nothing returns boolean
if GetSpellAbilityId()==1093683273 or GetSpellAbilityId()==1093683275 then
return true
else
return false
endif
endfunction
function WDw takes nothing returns boolean
if not(GetDestructableMaxLife(GetEnumDestructable())==2501.00)then
return false
endif
return true
endfunction
function EDw takes nothing returns nothing
if WDw()then
call ModifyGateBJ(bj_GATEOPERATION_OPEN,GetEnumDestructable())
endif
endfunction
function EMw takes nothing returns boolean
if GetSpellAbilityId()==1093683287 then
return true
else
return false
endif
endfunction
function ENw takes nothing returns boolean
if GetSpellAbilityId()==1093678642 then
return true
else
return false
endif
endfunction
function W5S takes integer Q5S returns nothing
endfunction
function Z5S takes integer E5S returns nothing
call W5S(E5S)
endfunction
function Zlc takes string Wlc returns integer
local integer Elc
set w3[MM]=Wlc
set MM=MM+1
if mv==0 then
if Qv<32768 then
set Qv=Qv+1
set Elc=Qv
set Wv[Elc]=1658
else
call Mau("Out of memory: Could not create Table.","when calling error in TableJurst, line 3")
set Elc=0
endif
else
set mv=mv-1
set Elc=vv[mv]
set Wv[Elc]=1658
endif
set MM=MM-1
return Elc
endfunction
function w5S takes string N2S returns integer
local integer M2S
set w3[MM]=N2S
set MM=MM+1
set M2S=Zlc("when calling alloc_Table in TableJurst, line 3")
call Z5S(M2S)
set MM=MM-1
return M2S
endfunction
function Gkr takes string Tkr returns integer
local integer Ykr
set w3[MM]=Tkr
set MM=MM+1
set Ykr=w5S("when calling new_Table in TableJurst, line 8")
set MM=MM-1
return Ykr
endfunction
function das takes integer aas,string nas returns nothing
set w3[MM]=nas
set MM=MM+1
set BQ[aas]=Gkr("when calling create in BuffsJurst, line 29")
set NQ[aas]=0
set MQ[aas]=0
set wW[aas]=0
set uW[aas]=0
set rW[aas]=0
set sW[aas]=0
set MM=MM-1
endfunction
function Tas takes integer fas,string Ras returns nothing
set w3[MM]=Ras
set MM=MM+1
call das(fas,"when calling BuffType_init in BuffsJurst, line 27")
set MM=MM-1
endfunction
function VGS takes string XGS returns integer
local integer CGS
set w3[MM]=XGS
set MM=MM+1
if YG==0 then
if GG<32768 then
set GG=GG+1
set CGS=GG
set gG[CGS]=660
else
call Mau("Out of memory: Could not create BuffType.","when calling error in BuffsJurst, line 27")
set CGS=0
endif
else
set YG=YG-1
set CGS=TG[YG]
set gG[CGS]=660
endif
set MM=MM-1
return CGS
endfunction
function Eqs takes string Qqs returns integer
local integer Wqs
set w3[MM]=Qqs
set MM=MM+1
set Wqs=VGS("when calling alloc_BuffType in BuffsJurst, line 27")
call Tas(Wqs,"when calling construct_BuffType in BuffsJurst, line 27")
set MM=MM-1
return Wqs
endfunction
function Csu takes string Lsu returns integer
local integer Xsu
set w3[MM]=Lsu
set MM=MM+1
set Xsu=Eqs("when calling new_BuffType in BuffsJurst, line 39")
set MM=MM-1
return Xsu
endfunction
function Gbc takes string Tbc returns integer
local integer Ybc
set w3[MM]=Tbc
set MM=MM+1
if FG==0 then
if kG<32768 then
set kG=kG+1
set Ybc=kG
set jG[Ybc]=1676
else
call Mau("Out of memory: Could not create OnBuffApplicationStruct.","when calling error in TouchOfKarma, line 80")
set Ybc=0
endif
else
set FG=FG-1
set Ybc=hG[FG]
set jG[Ybc]=1676
endif
set MM=MM-1
return Ybc
endfunction
function D0S takes integer A0S returns nothing
endfunction
function X0S takes integer L0S returns nothing
call D0S(L0S)
endfunction
function K0S takes string H0S returns integer
local integer J0S
set w3[MM]=H0S
set MM=MM+1
set J0S=Gbc("when calling alloc_OnBuffApplicationStruct in TouchOfKarma, line 80")
call X0S(J0S)
set MM=MM-1
return J0S
endfunction
function Iqs takes integer Zqs,integer Uqs returns nothing
set NQ[Zqs]=Uqs
endfunction
function TTc takes integer dTc,integer fTc,string RTc returns nothing
set w3[MM]=RTc
set MM=MM+1
if gG[dTc]==0 then
if dTc==0 then
call Mau("Nullpointer exception when calling BuffType.setOnApplicationHandler","when calling error in BuffsJurst, line 42")
else
call Mau("Called BuffType.setOnApplicationHandler on invalid object.","when calling error in BuffsJurst, line 42")
endif
endif
call Iqs(dTc,fTc)
set MM=MM-1
endfunction
function Cqs takes integer Lqs,integer Xqs returns nothing
set sW[Lqs]=Xqs
endfunction
function WTc takes integer vTc,integer mTc,string QTc returns nothing
set w3[MM]=QTc
set MM=MM+1
if gG[vTc]==0 then
if vTc==0 then
call Mau("Nullpointer exception when calling BuffType.setOnPeriodHandler","when calling error in BuffsJurst, line 66")
else
call Mau("Called BuffType.setOnPeriodHandler on invalid object.","when calling error in BuffsJurst, line 66")
endif
endif
call Cqs(vTc,mTc)
set MM=MM-1
endfunction
function Fbc takes string gbc returns integer
local integer hbc
set w3[MM]=gbc
set MM=MM+1
if FG==0 then
if kG<32768 then
set kG=kG+1
set hbc=kG
set jG[hbc]=1679
else
call Mau("Out of memory: Could not create OnDotDamageStruct.","when calling error in TouchOfKarma, line 86")
set hbc=0
endif
else
set FG=FG-1
set hbc=hG[FG]
set jG[hbc]=1679
endif
set MM=MM-1
return hbc
endfunction
function w_S takes integer M0S returns nothing
endfunction
function i_S takes integer t_S returns nothing
call w_S(t_S)
endfunction
function s_S takes string u_S returns integer
local integer r_S
set w3[MM]=u_S
set MM=MM+1
set r_S=Fbc("when calling alloc_OnDotDamageStruct in TouchOfKarma, line 86")
call i_S(r_S)
set MM=MM-1
return r_S
endfunction
function Ljr takes string Jjr returns nothing
local trigger Kjr
set w3[MM]=Jjr
set MM=MM+1
set Kjr=CreateTrigger()
call TTc(pT,K0S("when calling new_OnBuffApplicationStruct in TouchOfKarma, line 94"),"when calling setOnApplicationHandler in TouchOfKarma, line 94")
call WTc(eT,s_S("when calling new_OnDotDamageStruct in TouchOfKarma, line 95"),"when calling setOnPeriodHandler in TouchOfKarma, line 95")
call TTc(eT,s_S("when calling new_OnDotDamageStruct in TouchOfKarma, line 96"),"when calling setOnApplicationHandler in TouchOfKarma, line 96")
call rfw(Kjr,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Kjr,Filter(maw))
call TriggerAddCondition(RT,Filter(Qaw))
set MM=MM-1
set Kjr=null
endfunction
function fjr takes string djr returns boolean
set w3[MM]=djr
set MM=MM+1
set oT=1093683531
set OT=1110455608
set lT=1110455609
set bT=1093683529
set yT=1093683765
set pT=Csu("when calling create in TouchOfKarma, line 9")
set eT=Csu("when calling create in TouchOfKarma, line 10")
set qT=Gkr("when calling create in TouchOfKarma, line 11")
set aT=Gkr("when calling create in TouchOfKarma, line 12")
set nT=Gkr("when calling create in TouchOfKarma, line 13")
set dT=Gkr("when calling create in TouchOfKarma, line 14")
set fT=Gkr("when calling create in TouchOfKarma, line 15")
set RT=CreateTrigger()
set TT=CreateGroup()
call Ljr("when calling Init in TouchOfKarma, line 1")
set MM=MM-1
return true
endfunction
function ERo takes nothing returns boolean
set MM=0
return fjr("TouchOfKarma, line 1")
endfunction
function S7s takes unit i7s returns integer
return GetUnitTypeId(i7s)
endfunction
function d7u takes integer q7u,string a7u returns boolean
local boolean n7u
set w3[MM]=a7u
set MM=MM+1
set n7u=FZc(Fd,q7u,"when calling has in ScmdPermissions, line 20")
set MM=MM-1
return n7u
endfunction
function COr takes string LOr returns boolean
local boolean XOr
set w3[MM]=LOr
set MM=MM+1
set XOr=not d7u(S7s(GetFilterUnit()),"when calling isUnitTypeProtected in ScmdUnitBuiltins, line 235")
set MM=MM-1
return XOr
endfunction
function ETo takes nothing returns boolean
set MM=0
return COr("ScmdUnitBuiltins, line 235")
endfunction
function EVw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function E_u takes nothing returns boolean
local integer W_u=sy
call RemoveUnit(Ab[W_u])
return true
endfunction
function dfw takes nothing returns integer
local integer nfw=Ob
if nfw!=0 then
set Ob=bb[nfw]
else
set lb=lb+1
set nfw=lb
endif
if nfw>8190 then
return 0
endif
set Kb[nfw]=89
set bb[nfw]=-1
return nfw
endfunction
function gfw takes nothing returns integer
local integer Gfw=dfw()
if Gfw==0 then
return 0
endif
set Kb[Gfw]=94
return Gfw
endfunction
function Fgw takes unit ggw returns integer
local integer hgw=gfw()
set Ab[hgw]=ggw
return hgw
endfunction
function WRw takes unit vRw,integer mRw,integer QRw returns nothing
if QRw==0 then
call UnitRemoveAbility(vRw,mRw)
else
if GetUnitAbilityLevel(vRw,mRw)==0 then
call UnitAddAbility(vRw,mRw)
call UnitMakeAbilityPermanent(vRw,true,mRw)
endif
call SetUnitAbilityLevel(vRw,mRw,QRw)
endif
endfunction
function mYw takes integer jYw,real xYw returns nothing
local timer vYw=ITw()
call SaveInteger(i,y,GetHandleId(vYw),jYw)
call TimerStart(vYw,xYw,false,Aww)
set vYw=null
endfunction
function Jgw takes integer Igw,integer Pgw,string Agw,widget Dgw returns nothing
local unit Hgw=CreateUnit(r[PLAYER_NEUTRAL_PASSIVE],Y,GetWidgetX(Dgw),GetWidgetY(Dgw),0.)
call UnitAddAbility(Hgw,Igw)
call WRw(Hgw,Igw,Pgw)
call IssueTargetOrder(Hgw,Agw,Dgw)
call mYw(Fgw(Hgw),1.)
set Hgw=null
endfunction
function JTw takes nothing returns integer
local integer HTw
if wb[0]==0 then
set Ml=Ml+1
set HTw=Ml
else
set HTw=wb[0]
set wb[0]=wb[wb[0]]
endif
return HTw
endfunction
function BTw takes integer XTw,unit CTw returns integer
local integer VTw=JTw()
set Bl[VTw]=XTw
set Nl[VTw]=CTw
return VTw
endfunction
function LTw takes integer KTw returns nothing
set wb[KTw]=wb[0]
set wb[0]=KTw
endfunction
function kfw takes integer hfw,unit Ffw returns nothing
set ry=Ffw
call TriggerEvaluate(wy[hfw])
endfunction
function pYw takes integer OYw,unit lYw returns timer
local integer bYw=GetHandleId(lYw)
local timer yYw
if HaveSavedHandle(i,ub[OYw],bYw)then
set yYw=LoadTimerHandle(i,ub[OYw],bYw)
call LTw(LoadInteger(i,y,GetHandleId(yYw)))
call ATw(yYw)
call kfw(sb[OYw],lYw)
else
call kfw(rb[OYw],lYw)
endif
set yYw=ITw()
call SaveInteger(i,y,GetHandleId(yYw),BTw(OYw,lYw))
call SaveTimerHandle(i,ub[OYw],bYw,yYw)
set cnw=yYw
set yYw=null
return cnw
endfunction
function nYw takes integer eYw,unit qYw,real aYw returns nothing
call TimerStart(pYw(eYw,qYw),aYw,false,Iww)
endfunction
function Ehw takes nothing returns nothing
local unit Whw
if GetSpellAbilityId()!=1093683276 then
set Whw=null
return
endif
set Whw=GetSpellAbilityUnit()
call Jgw(1093681494,GetUnitAbilityLevel(Whw,1093683276),"attackonce",Whw)
call nYw(DO,Whw,12.)
set Whw=null
set Whw=null
endfunction
function Uus takes real Wus,real Eus,real Zus returns real
set v1=Wus*Zus
set m1=Eus*Zus
return v1
endfunction
function WIu takes region mIu,rect QIu returns nothing
call RegionAddRect(mIu,QIu)
endfunction
function initMapBounds takes nothing returns nothing
local rect cond_result
local region receiver
local rect cond_result_1
local region receiver_1
local real tuple_temp
local real tuple_temp_1
local real tuple_temp_2
local real tuple_temp_3
local real tuple_temp_4
local real tuple_temp_5
local real tuple_temp_6
local real tuple_temp_7
if Ie then
set cond_result=Rect(-1024.,-1024.,1024.,1024.)
else
set cond_result=GetPlayableMapRect()
endif
set Pe=cond_result
set receiver=CreateRegion()
call WIu(receiver,Pe)
if Ie then
set cond_result_1=Rect(-1536.,-1536.,1536.,1536.)
else
set cond_result_1=GetWorldBounds()
endif
set Ae=cond_result_1
set receiver_1=CreateRegion()
call WIu(receiver_1,Ae)
set De=receiver_1
set tuple_temp=KUu(Pe)
set tuple_temp_1=VUu(Pe)
set He=tuple_temp
set Je=tuple_temp_1
set tuple_temp_2=XUu(Pe)
set tuple_temp_3=NUu(Pe)
set Ke=tuple_temp_2
set Le=tuple_temp_3
set tuple_temp_4=KUu(Ae)
set tuple_temp_5=VUu(Ae)
set Xe=tuple_temp_4
set Ce=tuple_temp_5
set tuple_temp_6=XUu(Ae)
set tuple_temp_7=NUu(Ae)
set Ve=tuple_temp_6
set Be=tuple_temp_7
call Uus(kus(He,Je,Ke,Le),x1,.5)
call Uus(kus(Xe,Ce,Ve,Be),x1,.5)
endfunction
function Eku takes nothing returns boolean
call initMapBounds()
return true
endfunction
function Wkw takes nothing returns boolean
if not(Du==LoadIntegerBJ(4,GetHandleIdBJ(GetEnumUnit()),Au))then
return false
endif
return true
endfunction
function Ekw takes nothing returns nothing
if Wkw()then
call GroupRemoveUnitSimple(GetEnumUnit(),Hu)
call RemoveUnit(LoadUnitHandleBJ(2,GetHandleIdBJ(GetEnumUnit()),Au))
call RemoveUnit(LoadUnitHandleBJ(3,GetHandleIdBJ(GetEnumUnit()),Au))
call SetPlayerAbilityAvailableBJ(true,1093682504,GetOwningPlayer(GetEnumUnit()))
call UnitRemoveAbilityBJ(1093678680,GetEnumUnit())
set Ju[20]=LoadLocationHandleBJ(0,GetHandleIdBJ(GetEnumUnit()),Au)
call RemoveLocation(Ju[20])
call FlushChildHashtableBJ(GetHandleIdBJ(GetEnumUnit()),Au)
endif
endfunction
function Wmw takes nothing returns boolean
if not(GetDestructableMaxLife(GetEnumDestructable())==69.00)then
return false
endif
return true
endfunction
function Emw takes nothing returns nothing
if Wmw()then
call ChangeElevatorHeight(GetEnumDestructable(),S2I(SubStringBJ(GetEventPlayerChatString(),5,5)))
endif
endfunction
function F0u takes nothing returns nothing
local unit g0u=GetSpellAbilityUnit()
local timer h0u=CreateTimer()
call SaveLocationHandle(nr,GetHandleId(h0u),StringHash("l"),GetSpellTargetLoc())
call SaveUnitHandle(nr,GetHandleId(h0u),StringHash("u"),g0u)
call SaveEffectHandle(nr,GetHandleId(h0u),StringHash("e"),AddSpecialEffectTarget("Abilities\\Spells\\Other\\Bombardment\\BombardmentCaster.mdx",g0u,"overhead"))
call SaveInteger(nr,GetHandleId(h0u),StringHash("i"),0)
call SaveTimerHandle(nr,GetHandleId(g0u),StringHash("bmT"),h0u)
set g0u=null
call TimerStart(h0u,0.25,true,kyw)
set h0u=null
set g0u=null
set h0u=null
endfunction
function F3w takes nothing returns boolean
return GetSpellAbilityId()==1093683792
endfunction
function F4w takes nothing returns nothing
local unit h4w=CreateUnitAtLoc(GetOwningPlayer(GetSpellAbilityUnit()),1747995215,GetUnitLoc(GetEnumUnit()),270.00)
call UnitAddAbility(h4w,1093679415)
call IssueTargetOrder(h4w,"bloodlust",GetEnumUnit())
call eRw(h4w,3.)
set h4w=null
set h4w=null
endfunction
function F5w takes nothing returns nothing
local unit Y5w=GetSpellAbilityUnit()
local unit G5w
local effect g5w
local effect h5w
if(GetUnitAbilityLevel(GetEnumUnit(),1093678917)==3 and GetRandomInt(1,100)<=30)or(GetUnitAbilityLevel(GetEnumUnit(),1093678917)==2 and GetRandomInt(1,100)<=20)or(GetUnitAbilityLevel(GetEnumUnit(),1093678917)==1 and GetRandomInt(1,100)<=10)then
set G5w=CreateUnitAtLoc(GetOwningPlayer(GetEnumUnit()),1747995215,GetUnitLoc(GetEnumUnit()),270.00)
set g5w=AddSpecialEffectTarget("Abilities\\Spells\\Items\\SpellShieldAmulet\\SpellShieldCaster.mdl",GetEnumUnit(),"origin")
set h5w=AddSpecialEffectTarget("Abilities\\Spells\\Other\\Silence\\SilenceTarget.mdl",Y5w,"overhead")
call UnitAddAbility(G5w,1093682521)
call SetUnitAbilityLevel(G5w,1093682521,GetUnitAbilityLevel(Y5w,1097757545))
call IssuePointOrderLoc(G5w,"silence",GetUnitLoc(Y5w))
call TriggerSleepAction(3.00)
call RemoveUnit(G5w)
call DestroyEffect(g5w)
call DestroyEffect(h5w)
endif
set Y5w=null
set G5w=null
set g5w=null
set h5w=null
set Y5w=null
set G5w=null
set g5w=null
set h5w=null
endfunction
function FBw takes nothing returns boolean
return GetSpellAbilityId()==1097035111 or GetSpellAbilityId()==1097887603 or GetSpellAbilityId()==1097888562 or GetSpellAbilityId()==1094938739 or GetSpellAbilityId()==1094935400 or GetSpellAbilityId()==1095656296 or GetSpellAbilityId()==1095656559 or GetSpellAbilityId()==1095660653 or GetSpellAbilityId()==1093682253 or GetSpellAbilityId()==1093677899 or GetSpellAbilityId()==1093677900
endfunction
function FHw takes nothing returns boolean
return GetSpellAbilityId()==1093683253
endfunction
function hJw takes nothing returns boolean
if not(GetUnitTypeId(GetTriggerUnit())==1747994163)then
return false
endif
return true
endfunction
function FJw takes nothing returns nothing
if hJw()then
call CreateDestructableLoc(1110454342,GetUnitLoc(GetTriggerUnit()),0.00,6.00,0)
call RemoveUnit(GetTriggerUnit())
else
call DoNothing()
endif
endfunction
function GLw takes nothing returns boolean
if not(GetRandomInt(1,5)==1)then
return false
endif
return true
endfunction
function RLw takes nothing returns boolean
if not(Bw[1]==0)then
return false
endif
return true
endfunction
function YLw takes nothing returns boolean
if not(bu[Bw[3]]==true)then
return false
endif
return true
endfunction
function gLw takes nothing returns boolean
if not(ru[Bw[3]]<wu[Bw[3]])then
return false
endif
return true
endfunction
function hLw takes nothing returns boolean
if not(IsUnitInGroup(iu[Bw[3]],au)==true)then
return false
endif
return true
endfunction
function FLw takes nothing returns nothing
set Bw[3]=1
loop
exitwhen Bw[3]>Bw[2]
if hLw()then
if gLw()then
call QueueUnitAnimationBJ(iu[Bw[3]],Ou[Bw[3]])
set Nw[1]=GetUnitLoc(iu[Bw[3]])
set Nw[2]=PolarProjectionBJ(Nw[1],su[Bw[3]],Su[Bw[3]])
if YLw()then
call EnumDestructablesInCircleBJ(150.00,Nw[2],ySw)
endif
call SetUnitPositionLoc(iu[Bw[3]],Nw[2])
set ru[Bw[3]]=ru[Bw[3]]+su[Bw[3]]
if GLw()then
call AddSpecialEffectTargetUnitBJ("chest",iu[Bw[3]],cu[Bw[3]])
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
set nu[Bw[3]]=nu[Bw[3]]+180.00/(wu[Bw[3]]/su[Bw[3]])
set du[Bw[3]]=SinBJ(nu[Bw[3]])*pu[Bw[3]]
call SetUnitFlyHeightBJ(iu[Bw[3]],du[Bw[3]],1000000000.00)
call RemoveLocation(Nw[1])
call RemoveLocation(Nw[2])
else
call SetUnitPathing(iu[Bw[3]],true)
call GroupRemoveUnitSimple(iu[Bw[3]],au)
call SetUnitTimeScalePercent(iu[Bw[3]],100.00)
call ResetUnitAnimation(iu[Bw[3]])
set nu[Bw[3]]=0.00
set Bw[1]=Bw[1]-1
if RLw()then
set Bw[2]=0
call DisableTrigger(GetTriggeringTrigger())
endif
endif
endif
set Bw[3]=Bw[3]+1
endloop
endfunction
function FMw takes nothing returns nothing
local unit gMw=GetTriggerUnit()
local real hMw=GetUnitAbilityLevel(gMw,1093683539)
if GetUnitAbilityLevel(gMw,1093683539)==1 then
set hMw=1.
elseif GetUnitAbilityLevel(gMw,1093683539)==2 then
set hMw=1.5
elseif GetUnitAbilityLevel(gMw,1093683539)==3 then
set hMw=2.
endif
if GetUnitState(gMw,UNIT_STATE_MANA)-GetEventDamage()/hMw>=0. then
call SetUnitState(gMw,UNIT_STATE_LIFE,GetUnitState(gMw,UNIT_STATE_LIFE)+GetEventDamage())
call SetUnitState(gMw,UNIT_STATE_MANA,GetUnitState(gMw,UNIT_STATE_MANA)-GetEventDamage()/hMw)
else
call SetUnitState(gMw,UNIT_STATE_LIFE,GetUnitState(gMw,UNIT_STATE_LIFE)+GetUnitState(gMw,UNIT_STATE_MANA)*hMw)
call SetUnitState(gMw,UNIT_STATE_MANA,GetUnitState(gMw,UNIT_STATE_MANA)-GetEventDamage()/hMw)
endif
set gMw=null
set hMw=0.
set gMw=null
endfunction
function F1S takes string g1S returns integer
local integer h1S
set w3[MM]=g1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h1S=kj
set jj[h1S]=1054
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins.","when calling error in ScmdPlayerCameraSettingsBuiltins, line 80")
set h1S=0
endif
else
set Fj=Fj-1
set h1S=hj[Fj]
set jj[h1S]=1054
endif
set MM=MM-1
return h1S
endfunction
function G1S takes string T1S returns integer
local integer Y1S
set w3[MM]=T1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y1S=kj
set jj[Y1S]=865
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins.","when calling error in ScmdPlayerCameraSettingsBuiltins, line 73")
set Y1S=0
endif
else
set Fj=Fj-1
set Y1S=hj[Fj]
set jj[Y1S]=865
endif
set MM=MM-1
return Y1S
endfunction
function R1S takes string d1S returns integer
local integer f1S
set w3[MM]=d1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f1S=kj
set jj[f1S]=864
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins.","when calling error in ScmdPlayerCameraSettingsBuiltins, line 50")
set f1S=0
endif
else
set Fj=Fj-1
set f1S=hj[Fj]
set jj[f1S]=864
endif
set MM=MM-1
return f1S
endfunction
function VkS takes string XkS returns integer
local integer CkS
set w3[MM]=XkS
set MM=MM+1
if Rh==0 then
if Th<32768 then
set Th=Th+1
set CkS=Th
set Yh[CkS]=1657
else
call Mau("Out of memory: Could not create IterableMap.","when calling error in HashMap, line 46")
set CkS=0
endif
else
set Rh=Rh-1
set CkS=fh[Rh]
set Yh[CkS]=1657
endif
set MM=MM-1
return CkS
endfunction
function hHs takes integer GHs,string gHs returns nothing
set w3[MM]=gHs
set MM=MM+1
set GU[GHs]=rDs("when calling new_HashList in HashMap, line 47")
set gU[GHs]=false
set MM=MM-1
endfunction
function jHs takes integer FHs,string kHs returns nothing
set w3[MM]=kHs
set MM=MM+1
call KDs(FHs)
call hHs(FHs,"when calling IterableMap_init in HashMap, line 50")
set MM=MM-1
endfunction
function YHs takes string RHs returns integer
local integer THs
set w3[MM]=RHs
set MM=MM+1
set THs=VkS("when calling alloc_IterableMap in HashMap, line 50")
call jHs(THs,"when calling construct_IterableMap in HashMap, line 50")
set MM=MM-1
return THs
endfunction
function hGs takes integer fGs,timer RGs,real TGs,string YGs returns nothing
local timer GGs
local timer gGs
set w3[MM]=YGs
set MM=MM+1
set GGs=RGs
call Kkr(GGs,fGs,"when calling setData in ClosureTimers, line 134")
set gGs=GGs
call njr(gGs,TGs,Jaw)
set MM=MM-1
set GGs=null
set gGs=null
endfunction
function rhc takes integer Ngc,timer Mgc,real whc,string uhc returns nothing
set w3[MM]=uhc
set MM=MM+1
if jg[Ngc]==0 then
if Ngc==0 then
call Mau("Nullpointer exception when calling CallbackPeriodic.start","when calling error in ClosureTimers, line 132")
else
call Mau("Called CallbackPeriodic.start on invalid object.","when calling error in ClosureTimers, line 132")
endif
endif
call hGs(Ngc,Mgc,whc,"when calling start in ClosureTimers, line 132")
set MM=MM-1
endfunction
function wOu takes timer Vou,real Bou,integer Nou,string Mou returns integer
set w3[MM]=Mou
set MM=MM+1
call rhc(Nou,Vou,Bou,"when calling start in ClosureTimers, line 45")
set MM=MM-1
return Nou
endfunction
function iOu takes real uOu,integer rOu,string sOu returns integer
local integer tOu
set w3[MM]=sOu
set MM=MM+1
set tOu=wOu(wjr("when calling getTimer in ClosureTimers, line 57"),uOu,rOu,"when calling doPeriodically in ClosureTimers, line 57")
set MM=MM-1
return tOu
endfunction
function n1S takes string q1S returns integer
local integer a1S
set w3[MM]=q1S
set MM=MM+1
if Fg==0 then
if kg<32768 then
set kg=kg+1
set a1S=kg
set jg[a1S]=677
else
call Mau("Out of memory: Could not create CallbackPeriodic_doPeriodically_ScmdPlayerCameraSettingsBuiltins.","when calling error in ScmdPlayerCameraSettingsBuiltins, line 38")
set a1S=0
endif
else
set Fg=Fg-1
set a1S=hg[Fg]
set jg[a1S]=677
endif
set MM=MM-1
return a1S
endfunction
function w2u takes nothing returns integer
return td
endfunction
function kGs takes integer FGs returns nothing
endfunction
function xGs takes integer jGs returns nothing
call kGs(jGs)
endfunction
function H7u takes string j7u returns boolean
local integer x7u
local integer v7u
local integer m7u
local integer Q7u
local integer W7u
local integer E7u
local integer Z7u
local integer U7u
local integer I7u
local integer P7u
local real A7u
local integer D7u
set w3[MM]=j7u
set MM=MM+1
set x7u=0
set v7u=bj_MAX_PLAYERS
loop
exitwhen x7u>v7u
set jd[x7u]=YHs("when calling new_IterableMap in ScmdPlayerCameraSettingsBuiltins, line 17")
set x7u=x7u+1
endloop
set A7u=dy/2.
set m7u=n1S("when calling alloc_CallbackPeriodic_doPeriodically_ScmdPlayerCameraSettingsBuiltins in ScmdPlayerCameraSettingsBuiltins, line 38")
call xGs(m7u)
call iOu(A7u,m7u,"when calling doPeriodically in ScmdPlayerCameraSettingsBuiltins, line 38")
call SetCameraField(CAMERA_FIELD_FARZ,Ua,0.)
set Q7u=R1S("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins in ScmdPlayerCameraSettingsBuiltins, line 50")
set W7u=eDt(Q7u,"when calling new_BuiltinData in ScmdPlayerCameraSettingsBuiltins, line 50")
call dao(W7u,o2u(),w2u(),"when calling setArgumentsTypes in ScmdPlayerCameraSettingsBuiltins, line 73")
set U7u=WHt(W7u,"when calling new_BuiltinFunction in ScmdPlayerCameraSettingsBuiltins, line 50")
set D7u=U7u
set E7u=G1S("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins in ScmdPlayerCameraSettingsBuiltins, line 73")
set Z7u=eDt(E7u,"when calling new_BuiltinData in ScmdPlayerCameraSettingsBuiltins, line 73")
call Fao(Z7u,o2u(),"when calling setArgumentsTypes in ScmdPlayerCameraSettingsBuiltins, line 78")
call C4o(D7u,Z7u,"when calling addOverload in ScmdPlayerCameraSettingsBuiltins, line 73")
call jBu(U7u,"cam","when calling registerProtectedBuiltin in ScmdPlayerCameraSettingsBuiltins, line 50")
set I7u=F1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins in ScmdPlayerCameraSettingsBuiltins, line 80")
set P7u=eDt(I7u,"when calling new_BuiltinData in ScmdPlayerCameraSettingsBuiltins, line 80")
call Fao(P7u,w2u(),"when calling setArgumentsTypes in ScmdPlayerCameraSettingsBuiltins, line 84")
call jBu(WHt(P7u,"when calling new_BuiltinFunction in ScmdPlayerCameraSettingsBuiltins, line 80"),"zoom","when calling registerProtectedBuiltin in ScmdPlayerCameraSettingsBuiltins, line 80")
set MM=MM-1
return true
endfunction
function FRo takes nothing returns boolean
set MM=0
return H7u("ScmdPlayerCameraSettingsBuiltins, line 1")
endfunction
function MgS takes integer BgS,string NgS returns nothing
set w3[MM]=NgS
set MM=MM+1
if gg[BgS]==0 then
call Mau("Double free: object of type CallbackCounted","when calling error in ClosureTimers, line 144")
else
set Tg[Yg]=BgS
set Yg=Yg+1
set gg[BgS]=0
endif
set MM=MM-1
endfunction
function Ojr takes timer ojr returns nothing
call PauseTimer(ojr)
endfunction
function Vkr takes timer Lkr,string Xkr returns integer
local integer Ckr
set w3[MM]=Xkr
set MM=MM+1
set Ckr=Nio(ST,cjr(Lkr),"when calling loadInt in TimerUtils, line 22")
set MM=MM-1
return Ckr
endfunction
function sjr takes timer ujr,string rjr returns nothing
set w3[MM]=rjr
set MM=MM+1
if ujr==null then
call Mau("Trying to release a null timer","when calling error in TimerUtils, line 38")
set MM=MM-1
return
endif
if Vkr(ujr,"when calling getData in TimerUtils, line 40")==cT then
call Mau("ReleaseTimer: Double free!","when calling error in TimerUtils, line 41")
set MM=MM-1
return
endif
call Kkr(ujr,cT,"when calling setData in TimerUtils, line 43")
call Ojr(ujr)
set tT[iT]=ujr
set iT=iT+1
set MM=MM-1
endfunction
function dGs takes integer aGs,string nGs returns nothing
set w3[MM]=nGs
set MM=MM+1
call sjr(LW[aGs],"when calling release in ClosureTimers, line 176")
set MM=MM-1
endfunction
function bGs takes integer OGs,string lGs returns nothing
set w3[MM]=lGs
set MM=MM+1
call dGs(OGs,"when calling CallbackCounted_onDestroy in ClosureTimers, line 175")
call MgS(OGs,"when calling dealloc_CallbackCounted in ClosureTimers, line 175")
set MM=MM-1
endfunction
function kgc takes integer hgc,string Fgc returns nothing
set w3[MM]=Fgc
set MM=MM+1
if gg[hgc]==0 then
if hgc==0 then
call Mau("Nullpointer exception when calling CallbackCounted.CallbackCounted","when calling error in ClosureTimers, line 144")
else
call Mau("Called CallbackCounted.CallbackCounted on invalid object.","when calling error in ClosureTimers, line 144")
endif
endif
call bGs(hgc,"when calling destroyCallbackCounted in ClosureTimers, line 144")
set MM=MM-1
endfunction
function iGs takes integer tGs returns boolean
return KW[tGs]==1
endfunction
function Hgc takes integer Pgc,string Agc returns boolean
local boolean Dgc
set w3[MM]=Agc
set MM=MM+1
if gg[Pgc]==0 then
if Pgc==0 then
call Mau("Nullpointer exception when calling CallbackCounted.isLast","when calling error in ClosureTimers, line 156")
else
call Mau("Called CallbackCounted.isLast on invalid object.","when calling error in ClosureTimers, line 156")
endif
endif
set Dgc=iGs(Pgc)
set MM=MM-1
return Dgc
endfunction
function oUS takes string SUS returns integer
local integer cUS
set w3[MM]=SUS
set MM=MM+1
if lj==0 then
if bj<32768 then
set bj=bj+1
set cUS=bj
set yj[cUS]=1494
else
call Mau("Out of memory: Could not create PositionedUnitDataPasteCallback_paste_paste_paste_RegionData_RegionData.","when calling error in RegionData, line 117")
set cUS=0
endif
else
set lj=lj-1
set cUS=Oj[lj]
set yj[cUS]=1494
endif
set MM=MM-1
return cUS
endfunction
function oyc takes string Syc returns integer
local integer cyc
set w3[MM]=Syc
set MM=MM+1
if Yg==0 then
if Gg<32768 then
set Gg=Gg+1
set cyc=Gg
set gg[cyc]=673
else
call Mau("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_PositionedUnitData_UnitData.","when calling error in UnitData, line 1433")
set cyc=0
endif
else
set Yg=Yg-1
set cyc=Tg[Yg]
set gg[cyc]=673
endif
set MM=MM-1
return cyc
endfunction
function nwS takes integer SwS,player cwS,real owS,real OwS,integer lwS,string bwS returns nothing
local integer ywS
local integer pwS
local integer ewS
local real qwS
local real awS
set w3[MM]=bwS
set MM=MM+1
set ywS=uTS(0,"when calling new_Box⟪integer⟫ in UnitData, line 1432")
set ewS=wao(TUu(yZc(eV[SwS],"when calling size in UnitData, line 1433")*1./25),1)
set pwS=oyc("when calling alloc_CallbackCounted_doPeriodicallyCounted_PositionedUnitData_UnitData in UnitData, line 1433")
call qGs(pwS)
set kV[pwS]=ywS
set jV[pwS]=SwS
set xV[pwS]=cwS
set qwS=owS
set awS=OwS
set vV[pwS]=qwS
set mV[pwS]=awS
set QV[pwS]=lwS
call nOu(0.25,ewS,pwS,"when calling doPeriodicallyCounted in UnitData, line 1433")
set MM=MM-1
endfunction
function tOo takes integer Noo,player Moo,real wOo,real uOo,integer rOo,string sOo returns nothing
set w3[MM]=sOo
set MM=MM+1
if Qg[Noo]==0 then
if Noo==0 then
call Mau("Nullpointer exception when calling PositionedUnitData.paste","when calling error in UnitData, line 1431")
else
call Mau("Called PositionedUnitData.paste on invalid object.","when calling error in UnitData, line 1431")
endif
endif
call nwS(Noo,Moo,wOo,uOo,rOo,"when calling paste in UnitData, line 1431")
set MM=MM-1
endfunction
function gqt takes integer qqt,string aqt returns nothing
local integer nqt
local integer dqt
local player fqt
local real Rqt
local real Tqt
local real Yqt
local real Gqt
set w3[MM]=aqt
set MM=MM+1
set dqt=pJ[aJ[qqt]]
set fqt=VD[aJ[qqt]]
set Yqt=SJ[aJ[qqt]]
set Gqt=cJ[aJ[qqt]]
set Rqt=Yqt
set Tqt=Gqt
set nqt=oUS("when calling alloc_PositionedUnitDataPasteCallback_paste_paste_paste_RegionData_RegionData in RegionData, line 117")
set dJ[nqt]=nJ[qqt]
call tOo(dqt,fqt,Rqt,Tqt,nqt,"when calling paste in RegionData, line 117")
set MM=MM-1
set fqt=null
endfunction
function Rkc takes integer dkc,string fkc returns nothing
set w3[MM]=fkc
set MM=MM+1
if Ug[dkc]==0 then
if dkc==0 then
call Mau("Nullpointer exception when calling PositionedDestructableDataPasteCallback.onPasted","when calling error in DestructableData, line 211")
else
call Mau("Called PositionedDestructableDataPasteCallback.onPasted on invalid object.","when calling error in DestructableData, line 211")
endif
endif
call gqt(dkc,"when calling onPasted_paste_paste_RegionData_RegionData in DestructableData, line 211")
set MM=MM-1
endfunction
function Geu takes destructable Teu,real Yeu returns nothing
call SetDestructableMaxLife(Teu,Yeu)
endfunction
function abt takes integer ybt,integer pbt,string ebt returns integer
local integer qbt
set w3[MM]=ebt
set MM=MM+1
set qbt=TZc(UH[ybt],pbt,"when calling get in RawcodeTable, line 59")
set MM=MM-1
return qbt
endfunction
function JBc takes integer PBc,integer ABc,string DBc returns integer
local integer HBc
set w3[MM]=DBc
set MM=MM+1
if Qg[PBc]==0 then
if PBc==0 then
call Mau("Nullpointer exception when calling RawcodeTable.getRawcode","when calling error in RawcodeTable, line 58")
else
call Mau("Called RawcodeTable.getRawcode on invalid object.","when calling error in RawcodeTable, line 58")
endif
endif
set HBc=abt(PBc,ABc,"when calling getRawcode in RawcodeTable, line 58")
set MM=MM-1
return HBc
endfunction
function Jpu takes integer Dpu,integer Hpu returns boolean
return mwu(Dpu,Hpu)
endfunction
function Weu takes destructable meu,real Qeu returns nothing
call SetDestructableOccluderHeight(meu,Qeu)
endfunction
function Xpu takes integer Kpu,integer Lpu returns boolean
return mwu(Kpu,Lpu)
endfunction
function deu takes destructable aeu,real neu returns nothing
call SetDestructableLife(aeu,neu)
endfunction
function jeu takes destructable Feu,real keu returns nothing
call SetDestructableAnimationSpeed(Feu,keu)
endfunction
function bGu takes hashtable cGu,integer oGu,integer OGu,player lGu returns nothing
call SavePlayerHandle(cGu,oGu,OGu,lGu)
endfunction
function fus takes real aus,real nus,real dus returns real
call MoveLocation(rY,aus,nus)
return GetLocationZ(rY)
endfunction
function lHu takes player wHu,integer uHu,real rHu,real sHu,real tHu,real iHu,real SHu,integer cHu returns destructable
local destructable oHu=CreateDestructableZ(uHu,rHu,sHu,fus(rHu,sHu,tHu)+tHu,iHu,SHu,cHu)
local integer OHu=l7s(oHu)
call bGu(Na,OHu,wn,wHu)
call aGu(Na,OHu,un,tHu)
call aGu(Na,OHu,rn,iHu)
call aGu(Na,OHu,sn,SHu)
call uGu(Na,OHu,tn,cHu)
set qnw=oHu
set oHu=null
return qnw
endfunction
function peu takes destructable beu,boolean yeu returns nothing
call SetDestructableInvulnerable(beu,yeu)
endfunction
function qrs takes real yrs,real prs,real ers returns real
set R3=yrs
set T3=prs
set Y3=ers
return R3
endfunction
function Gks takes integer aks,player nks,real dks,real fks,string Rks returns destructable
local destructable Tks
local destructable Yks
set w3[MM]=Rks
set MM=MM+1
set Yks=lHu(nks,JBc(mE[aks],EE[aks],"when calling getRawcode in DestructableData, line 129"),qrs(kus(dks,fks,tEu(ZE[aks],UE[aks]),P1),x1,IE[aks]),T3,Y3,PE[aks],AE[aks],DE[aks])
call peu(Yks,Jpu(QE[aks],0))
set Tks=Yks
if Xpu(WE[aks],0)then
call Weu(Tks,HE[aks])
endif
if Xpu(WE[aks],1)then
call jeu(Tks,JE[aks])
endif
if Xpu(WE[aks],2)then
call Geu(Tks,rgu(KE[aks]))
endif
if Xpu(WE[aks],3)then
call deu(Tks,rgu(LE[aks]))
endif
set MM=MM-1
set Znw=Tks
set Tks=null
set Yks=null
return Znw
endfunction
function Ukc takes integer vkc,player mkc,real Qkc,real Wkc,string Ekc returns destructable
local destructable Zkc
set w3[MM]=Ekc
set MM=MM+1
if Dg[vkc]==0 then
if vkc==0 then
call Mau("Nullpointer exception when calling SingleDestructableData.create","when calling error in DestructableData, line 128")
else
call Mau("Called SingleDestructableData.create on invalid object.","when calling error in DestructableData, line 128")
endif
endif
set Zkc=Gks(vkc,mkc,Qkc,Wkc,"when calling create in DestructableData, line 128")
set MM=MM-1
set udw=Zkc
set Zkc=null
return udw
endfunction
function nhS takes integer qhS,string ahS returns nothing
set w3[MM]=ahS
set MM=MM+1
if Ug[qhS]==0 then
call Mau("Double free: object of type PositionedDestructableDataPasteCallback","when calling error in DestructableData, line 210")
else
set Wg[Eg]=qhS
set Eg=Eg+1
set Ug[qhS]=0
endif
set MM=MM-1
endfunction
function bFs takes integer OFs,string lFs returns nothing
set w3[MM]=lFs
set MM=MM+1
call nhS(OFs,"when calling dealloc_PositionedDestructableDataPasteCallback in DestructableData, line 210")
set MM=MM-1
endfunction
function nkc takes integer qkc,string akc returns nothing
set w3[MM]=akc
set MM=MM+1
if Ug[qkc]==0 then
if qkc==0 then
call Mau("Nullpointer exception when calling PositionedDestructableDataPasteCallback.PositionedDestructableDataPasteCallback","when calling error in DestructableData, line 210")
else
call Mau("Called PositionedDestructableDataPasteCallback.PositionedDestructableDataPasteCallback on invalid object.","when calling error in DestructableData, line 210")
endif
endif
call bFs(qkc,"when calling destroyPositionedDestructableDataPasteCallback in DestructableData, line 210")
set MM=MM-1
endfunction
function PFs takes integer WFs,integer EFs,string ZFs returns nothing
local integer UFs
local integer IFs
set w3[MM]=ZFs
set MM=MM+1
set UFs=VM[hE[WFs]]*25
set IFs=vdo(yZc(eE[FE[WFs]],"when calling size in DestructableData, line 277"),(VM[hE[WFs]]+1)*25)-1
loop
exitwhen UFs>IFs
call Ukc(TZc(eE[FE[WFs]],UFs,"when calling get in DestructableData, line 278"),kE[WFs],jE[WFs],xE[WFs],"when calling create in DestructableData, line 278")
set UFs=UFs+1
endloop
set VM[hE[WFs]]=VM[hE[WFs]]+1
if Hgc(EFs,"when calling isLast in DestructableData, line 280")then
call jqo(hE[WFs],"when calling dispatch_Box⟪integer⟫_destroyBox⟪integer⟫ in DestructableData, line 281")
if vE[WFs]!=0 then
call Rkc(vE[WFs],"when calling onPasted in DestructableData, line 283")
call nkc(vE[WFs],"when calling dispatch_PositionedDestructableDataPasteCallback_destroyPositionedDestructableDataPasteCallback in DestructableData, line 284")
endif
endif
set MM=MM-1
endfunction
function ipc takes integer spc,string tpc returns nothing
set w3[MM]=tpc
set MM=MM+1
if bm[spc]==0 then
call Mau("Double free: object of type UnitDataPasteCallback","when calling error in UnitTypeData, line 1341")
else
set lm=lm+1
set bm[spc]=0
endif
set MM=MM-1
endfunction
function TpS takes integer fpS,string RpS returns nothing
set w3[MM]=RpS
set MM=MM+1
call ipc(fpS,"when calling dealloc_UnitDataPasteCallback in UnitTypeData, line 1341")
set MM=MM-1
endfunction
function Fpo takes integer gpo,string hpo returns nothing
set w3[MM]=hpo
set MM=MM+1
if bm[gpo]==0 then
if gpo==0 then
call Mau("Nullpointer exception when calling UnitDataPasteCallback.UnitDataPasteCallback","when calling error in UnitTypeData, line 1341")
else
call Mau("Called UnitDataPasteCallback.UnitDataPasteCallback on invalid object.","when calling error in UnitTypeData, line 1341")
endif
endif
call TpS(gpo,"when calling destroyUnitDataPasteCallback in UnitTypeData, line 1341")
set MM=MM-1
endfunction
function jpo takes integer kpo returns nothing
endfunction
function pdS takes integer OdS,integer ldS,string bdS returns integer
local integer ydS
set w3[MM]=bdS
set MM=MM+1
set ydS=TZc(QM[OdS],ldS,"when calling get in UnitTypeData, line 1281")
set MM=MM-1
return ydS
endfunction
function Reo takes integer aeo,integer neo,string deo returns integer
local integer feo
set w3[MM]=deo
set MM=MM+1
if am[aeo]==0 then
if aeo==0 then
call Mau("Nullpointer exception when calling UnitTypeTable.getUnitType","when calling error in UnitTypeData, line 1280")
else
call Mau("Called UnitTypeTable.getUnitType on invalid object.","when calling error in UnitTypeData, line 1280")
endif
endif
set feo=pdS(aeo,neo,"when calling getUnitType in UnitTypeData, line 1280")
set MM=MM-1
return feo
endfunction
function GCr takes unit aCr,integer nCr,real dCr,real fCr,real RCr,real TCr,real YCr returns nothing
if PXr(nCr,0)then
call QJu(aCr,dCr)
endif
if PXr(nCr,2)then
call N9s(aCr,fCr)
endif
if PXr(nCr,3)then
call AJu(aCr,RCr)
endif
if PXr(nCr,6)then
call RKu(aCr,TCr)
endif
if PXr(nCr,7)then
call D9s(aCr,twu(YCr))
endif
endfunction
function e2r takes integer y2r,integer p2r returns boolean
return mwu(y2r,p2r)
endfunction
function o2r takes unit i2r,unittype S2r,boolean c2r returns nothing
if c2r then
call UnitAddType(i2r,S2r)
else
call UnitRemoveType(i2r,S2r)
endif
endfunction
function H2r takes unit A2r,integer D2r returns nothing
call o2r(A2r,UNIT_TYPE_GIANT,e2r(D2r,0))
call o2r(A2r,UNIT_TYPE_SUMMONED,e2r(D2r,1))
call o2r(A2r,UNIT_TYPE_UNDEAD,e2r(D2r,2))
call o2r(A2r,UNIT_TYPE_MECHANICAL,e2r(D2r,3))
call o2r(A2r,UNIT_TYPE_PEON,e2r(D2r,4))
call o2r(A2r,UNIT_TYPE_SAPPER,e2r(D2r,5))
call o2r(A2r,UNIT_TYPE_ANCIENT,e2r(D2r,6))
endfunction
function V2r takes integer X2r,integer C2r returns boolean
return mwu(X2r,C2r)
endfunction
function O5r takes unit c5r,integer o5r returns nothing
call o2r(c5r,UNIT_TYPE_TOWNHALL,V2r(o5r,0))
endfunction
function V3i takes integer K3i,integer L3i,string X3i returns string
local string C3i
set w3[MM]=X3i
set MM=MM+1
set C3i=Ceo(nC[K3i],L3i,"when calling get in StringTable, line 61")
set MM=MM-1
return C3i
endfunction
function Sso takes integer rso,integer sso,string tso returns string
local string iso
set w3[MM]=tso
set MM=MM+1
if Qg[rso]==0 then
if rso==0 then
call Mau("Nullpointer exception when calling StringTable.getString","when calling error in StringTable, line 60")
else
call Mau("Called StringTable.getString on invalid object.","when calling error in StringTable, line 60")
endif
endif
set iso=V3i(rso,sso,"when calling getString in StringTable, line 60")
set MM=MM-1
return iso
endfunction
function EMr takes unit kMr,integer jMr,integer xMr,real vMr,integer mMr,integer QMr,integer WMr returns nothing
if wMr(jMr,0)then
call B0s(kMr,xMr,WMr)
endif
if wMr(jMr,2)then
call d_s(kMr,vMr,WMr)
endif
if wMr(jMr,4)then
call b_s(kMr,mMr,WMr)
endif
if wMr(jMr,6)then
call t_s(kMr,QMr,WMr)
endif
endfunction
function R_s takes unit f_s returns real
return BlzGetUnitArmor(f_s)
endfunction
function NHu takes unit BHu returns boolean
return QTu(Na,l7s(BHu),ln)
endfunction
function Lhr takes string Khr returns integer
return S2I(Khr)
endfunction
function wvu takes integer Vxu,string Bxu returns string
local string Nxu=BlzGetAbilityExtendedTooltip(1097690227,0)
local string Mxu
call BlzSetAbilityExtendedTooltip(1097690227,"<"+cmu(Vxu)+","+Bxu+">",0)
set Mxu=BlzGetAbilityExtendedTooltip(1097690227,0)
call BlzSetAbilityExtendedTooltip(1097690227,Nxu,0)
return Mxu
endfunction
function svu takes integer uvu,string rvu returns integer
return Lhr(wvu(uvu,rvu))
endfunction
function Rvu takes integer fvu returns integer
return svu(fvu,"def")
endfunction
function uJu takes unit MHu returns integer
local integer wJu
if NHu(MHu)then
set wJu=iYu(Na,l7s(MHu),ln)
else
set wJu=Rvu(S7s(MHu))
endif
return wJu
endfunction
function tJu takes unit rJu,integer sJu returns nothing
call G_s(rJu,R_s(rJu)+(sJu-uJu(rJu)))
call uGu(Na,l7s(rJu),ln,sJu)
endfunction
function X1r takes unit v1r,integer m1r,integer Q1r,integer W1r,real E1r,integer Z1r,integer U1r,integer I1r,integer P1r,real A1r,integer D1r,integer H1r,integer J1r,integer K1r,integer L1r returns nothing
if S3r(m1r,0)then
call EMr(v1r,Q1r,W1r,E1r,Z1r,U1r,1)
endif
if S3r(m1r,1)then
call EMr(v1r,I1r,P1r,A1r,D1r,H1r,2)
endif
if S3r(m1r,2)then
call tJu(v1r,J1r)
endif
if S3r(m1r,4)then
call v0s(v1r,K1r)
endif
call O9s(v1r,e7s(v1r))
if S3r(m1r,6)then
call Z0s(v1r,L1r)
endif
call f9s(v1r,a7s(v1r))
endfunction
function AbS takes integer IbS,unit PbS returns nothing
call mKu(PbS,tN[IbS])
call wLu(PbS,tN[IbS],iN[IbS])
if t2r(sN[IbS],4)then
call H_s(PbS,tN[IbS],iN[IbS],SN[IbS])
endif
if t2r(sN[IbS],5)then
call j_s(PbS,tN[IbS],iN[IbS],cN[IbS])
endif
endfunction
function Xyo takes integer Jyo,unit Kyo,string Lyo returns nothing
set w3[MM]=Lyo
set MM=MM+1
if im[Jyo]==0 then
if Jyo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.apply","when calling error in UnitTypeData, line 855")
else
call Mau("Called SingleAbilityData.apply on invalid object.","when calling error in UnitTypeData, line 855")
endif
endif
call AbS(Jyo,Kyo)
set MM=MM-1
endfunction
function o6r takes unit S6r,boolean c6r returns nothing
call SuspendHeroXP(S6r,c6r)
endfunction
function PVr takes unit mVr,integer QVr,integer WVr,integer EVr,integer ZVr,integer UVr,integer IVr returns nothing
call o6r(mVr,BCr(QVr,0))
call i6r(mVr,EVr,false)
if BCr(QVr,1)then
call Q6r(mVr,ZVr)
endif
if BCr(QVr,3)then
call Q6r(mVr,UVr)
endif
if BCr(QVr,5)then
call Q6r(mVr,IVr)
endif
endfunction
function lNr takes unit uNr,integer rNr,integer sNr,integer tNr,integer iNr,integer SNr,integer cNr,integer oNr,integer ONr returns nothing
if eBr(rNr,0)then
call PVr(uNr,sNr,tNr,iNr,SNr,cNr,oNr)
endif
if eBr(rNr,1)then
call ous(uNr,ONr)
endif
if eBr(rNr,2)then
call cKu(uNr,1,false)
elseif eBr(rNr,3)then
call cKu(uNr,1,true)
endif
call cKu(uNr,2,eBr(rNr,4))
endfunction
function uXr takes unit KLr,integer LLr,real XLr,integer CLr,integer VLr,integer BLr,integer NLr,integer MLr,real wXr returns nothing
if uLr(LLr,0)then
call CJu(KLr,XLr)
endif
if uLr(LLr,3)then
call KHu(KLr,CWu(CLr))
endif
if uLr(LLr,4)then
call gJu(KLr,VLr,BLr,NLr,MLr)
endif
if uLr(LLr,5)then
call cJu(KLr,wXr)
endif
endfunction
function xqS takes integer nqS,player dqS,real fqS,real RqS,real TqS,string YqS returns unit
local unit GqS
local unit gqS
local integer hqS
local integer FqS
local integer kqS
local integer jqS
set w3[MM]=YqS
set MM=MM+1
set gqS=CreateUnit(dqS,DN[nqS],fqS,RqS,TqS)
call a9s(gqS,q5r(PN[nqS],0))
set GqS=gqS
if q5r(PN[nqS],2)then
call P0s(GqS,Sso(IN[nqS],HN[nqS],"when calling getString in UnitTypeData, line 1136"))
endif
call uXr(GqS,JN[nqS],KN[nqS],LN[nqS],XN[nqS],CN[nqS],VN[nqS],BN[nqS],NN[nqS])
call GCr(GqS,MN[nqS],wM[nqS],uM[nqS],rM[nqS],sM[nqS],tM[nqS])
call lNr(GqS,iM[nqS],SM[nqS],cM[nqS],oM[nqS],OM[nqS],lM[nqS],bM[nqS],yM[nqS])
call X1r(GqS,pM[nqS],eM[nqS],qM[nqS],aM[nqS],nM[nqS],dM[nqS],fM[nqS],RM[nqS],TM[nqS],YM[nqS],GM[nqS],gM[nqS],hM[nqS],FM[nqS])
if eBr(iM[nqS],5)then
set hqS=x1s(kM[nqS],"when calling iterator in UnitTypeData, line 1145")
loop
exitwhen not t1s(hqS)
set FqS=r1s(hqS)
call DKu(GqS,FqS)
endloop
call c1s(hqS,"when calling close in UnitTypeData, line 1145")
endif
if eBr(iM[nqS],6)then
set kqS=x1s(jM[nqS],"when calling iterator in UnitTypeData, line 1148")
loop
exitwhen not t1s(kqS)
set jqS=r1s(kqS)
call Xyo(jqS,GqS,"when calling apply in UnitTypeData, line 1149")
endloop
call c1s(kqS,"when calling close in UnitTypeData, line 1148")
endif
if q5r(PN[nqS],1)then
call k8s(GqS)
endif
call UHu(GqS,not T5r(AN[nqS],0))
call a0s(GqS,fqS,RqS)
if T5r(AN[nqS],1)then
call H2r(GqS,xM[nqS])
endif
if T5r(AN[nqS],2)then
call O5r(GqS,vM[nqS])
endif
if T5r(AN[nqS],3)then
call WaygateActivate(GqS,true)
endif
set MM=MM-1
set Mnw=GqS
set GqS=null
set gqS=null
return Mnw
endfunction
function ueo takes integer Xpo,player Cpo,real Vpo,real Bpo,real Npo,string Mpo returns unit
local unit weo
set w3[MM]=Mpo
set MM=MM+1
if qm[Xpo]==0 then
if Xpo==0 then
call Mau("Nullpointer exception when calling UnitTypeData.create","when calling error in UnitTypeData, line 1131")
else
call Mau("Called UnitTypeData.create on invalid object.","when calling error in UnitTypeData, line 1131")
endif
endif
set weo=xqS(Xpo,Cpo,Vpo,Bpo,Npo,"when calling create in UnitTypeData, line 1131")
set MM=MM-1
set Adw=weo
set weo=null
return Adw
endfunction
function vyS takes integer YyS,player GyS,real gyS,real hyS,string FyS returns unit
local unit kyS
local unit jyS
local unit xyS
set w3[MM]=FyS
set MM=MM+1
set kyS=ueo(Reo(ON[YyS],lN[YyS],"when calling getUnitType in UnitTypeData, line 1329"),GyS,kus(gyS,hyS,tEu(bN[YyS],yN[YyS]),P1),x1,pN[YyS],"when calling create in UnitTypeData, line 1329")
call O9s(kyS,rgu(eN[YyS]))
set jyS=kyS
call f9s(jyS,rgu(qN[YyS]))
set xyS=jyS
set MM=MM-1
set Nnw=xyS
set kyS=null
set jyS=null
set xyS=null
return Nnw
endfunction
function qpo takes integer Opo,player lpo,real bpo,real ypo,string ppo returns unit
local unit epo
set w3[MM]=ppo
set MM=MM+1
if Om[Opo]==0 then
if Opo==0 then
call Mau("Nullpointer exception when calling SingleUnitData.create","when calling error in UnitTypeData, line 1328")
else
call Mau("Called SingleUnitData.create on invalid object.","when calling error in UnitTypeData, line 1328")
endif
endif
set epo=vyS(Opo,lpo,bpo,ypo,"when calling create in UnitTypeData, line 1328")
set MM=MM-1
set Pdw=epo
set epo=null
return Pdw
endfunction
function VpS takes integer JpS,integer KpS,string LpS returns nothing
local integer XpS
local integer CpS
set w3[MM]=LpS
set MM=MM+1
set XpS=VM[mN[JpS]]*25
set CpS=vdo(yZc(fN[QN[JpS]],"when calling size in UnitTypeData, line 1417"),(VM[mN[JpS]]+1)*25)-1
loop
exitwhen XpS>CpS
call qpo(TZc(fN[QN[JpS]],XpS,"when calling get in UnitTypeData, line 1418"),WN[JpS],EN[JpS],ZN[JpS],"when calling create in UnitTypeData, line 1418")
set XpS=XpS+1
endloop
set VM[mN[JpS]]=VM[mN[JpS]]+1
if Hgc(KpS,"when calling isLast in UnitTypeData, line 1420")then
call jqo(mN[JpS],"when calling dispatch_Box⟪integer⟫_destroyBox⟪integer⟫ in UnitTypeData, line 1421")
call jpo(UN[JpS])
call Fpo(UN[JpS],"when calling dispatch_UnitDataPasteCallback_destroyUnitDataPasteCallback in UnitTypeData, line 1423")
endif
set MM=MM-1
endfunction
function x6t takes integer k6t,integer j6t returns nothing
call UnitDamagePoint(WP[k6t],0.,200.,EP[k6t],ZP[k6t],23.75,false,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endfunction
function B_s takes unit X_s,unitintegerfield C_s,integer V_s returns boolean
return BlzSetUnitIntegerField(X_s,C_s,V_s)
endfunction
function hZr takes unit YZr,unittype GZr,boolean gZr returns nothing
if gZr then
call UnitAddType(YZr,GZr)
else
call UnitRemoveType(YZr,GZr)
endif
endfunction
function pUr takes integer bUr,integer yUr returns boolean
return mwu(bUr,yUr)
endfunction
function FUr takes unit gUr,integer hUr returns nothing
call hZr(gUr,UNIT_TYPE_TOWNHALL,pUr(hUr,0))
endfunction
function QUr takes integer vUr,integer mUr returns boolean
return mwu(vUr,mUr)
endfunction
function mZr takes integer xZr,integer vZr returns boolean
return mwu(xZr,vZr)
endfunction
function cUr takes unit iUr,integer SUr returns nothing
call hZr(iUr,UNIT_TYPE_GIANT,mZr(SUr,0))
call hZr(iUr,UNIT_TYPE_SUMMONED,mZr(SUr,1))
call hZr(iUr,UNIT_TYPE_UNDEAD,mZr(SUr,2))
call hZr(iUr,UNIT_TYPE_MECHANICAL,mZr(SUr,3))
call hZr(iUr,UNIT_TYPE_PEON,mZr(SUr,4))
call hZr(iUr,UNIT_TYPE_SAPPER,mZr(SUr,5))
call hZr(iUr,UNIT_TYPE_ANCIENT,mZr(SUr,6))
endfunction
function DDr takes integer PDr,integer ADr returns boolean
return mwu(PDr,ADr)
endfunction
function sAr takes unit VPr,integer BPr,integer NPr,real MPr,integer wAr,integer uAr,integer rAr returns nothing
if DDr(BPr,0)then
call B0s(VPr,NPr,rAr)
endif
if DDr(BPr,2)then
call d_s(VPr,MPr,rAr)
endif
if DDr(BPr,4)then
call b_s(VPr,wAr,rAr)
endif
if DDr(BPr,6)then
call t_s(VPr,uAr,rAr)
endif
endfunction
function CPr takes unit jPr,integer xPr,integer vPr,integer mPr,integer QPr,real WPr,integer EPr,integer ZPr,integer UPr,integer IPr,real PPr,integer APr,integer DPr,integer HPr,integer JPr,integer KPr,integer LPr,integer XPr returns nothing
if QUr(xPr,0)then
call ous(jPr,vPr)
endif
if QUr(xPr,1)then
call cKu(jPr,1,false)
elseif QUr(xPr,2)then
call cKu(jPr,1,true)
endif
call cKu(jPr,2,QUr(xPr,3))
if QUr(xPr,4)then
call sAr(jPr,mPr,QPr,WPr,EPr,ZPr,0)
endif
if QUr(xPr,5)then
call sAr(jPr,UPr,IPr,PPr,APr,DPr,1)
endif
if QUr(xPr,6)then
call tJu(jPr,HPr)
endif
if QUr(xPr,8)then
call v0s(jPr,JPr)
endif
call O9s(jPr,e7s(jPr))
if QUr(xPr,10)then
call Z0s(jPr,KPr)
endif
call f9s(jPr,a7s(jPr))
if QUr(xPr,14)then
call cUr(jPr,LPr)
endif
if QUr(xPr,15)then
call FUr(jPr,XPr)
endif
endfunction
function GGo takes integer fGo,integer RGo,string TGo returns integer
local integer YGo
if RGo<0 or RGo>=6 then
call Mau("Index out of Bounds",TGo)
elseif RGo<=2 then
if RGo<=1 then
if RGo<=0 then
set YGo=kww[fGo]
else
set YGo=jww[fGo]
endif
else
set YGo=xww[fGo]
endif
elseif RGo<=4 then
if RGo<=3 then
set YGo=vww[fGo]
else
set YGo=mww[fGo]
endif
else
set YGo=Qww[fGo]
endif
return YGo
endfunction
function OLu takes unit uLu,string rLu,boolean sLu returns nothing
local integer tLu=l7s(uLu)
local integer iLu=DFr(rLu)
local integer SLu=iYu(hn,tLu,iLu)
local integer cLu
local integer oLu
if(sLu and SLu==0)or((not sLu)and SLu!=0)then
call AddUnitAnimationProperties(uLu,rLu,sLu)
if sLu then
set cLu=iYu(Na,tLu,Gn)+1
call TGu(Na,tLu,Gn+cLu*gn,rLu)
call uGu(hn,tLu,iLu,cLu)
call uGu(Na,tLu,Gn,cLu)
else
set oLu=iYu(Na,tLu,Gn)
call TGu(Na,tLu,Gn+SLu*gn,hYu(Na,tLu,Gn+oLu*gn))
call hGu(hn,tLu,iLu)
call uGu(Na,tLu,Gn,oLu-1)
endif
endif
endfunction
function VQr takes integer XQr,integer CQr returns boolean
return mwu(XQr,CQr)
endfunction
function PWr takes unit xWr,integer vWr,real mWr,integer QWr,integer WWr,integer EWr,integer ZWr,integer UWr,real IWr returns nothing
if VQr(vWr,0)then
call CJu(xWr,mWr)
endif
if VQr(vWr,3)then
call KHu(xWr,CWu(QWr))
endif
if VQr(vWr,4)then
call gJu(xWr,WWr,EWr,ZWr,UWr)
endif
if VQr(vWr,5)then
call cJu(xWr,IWr)
endif
endfunction
function Ggu takes integer Tgu,integer Ygu returns boolean
return mwu(Tgu,Ygu)
endfunction
function xgu takes integer kgu,integer jgu returns boolean
return mwu(kgu,jgu)
endfunction
function fLs takes integer OLs,real lLs,real bLs,string yLs returns item
local item pLs
local item eLs
local item qLs
local item aLs
local item nLs
local item dLs
set w3[MM]=yLs
set MM=MM+1
set pLs=Wgu(AU[OLs],lLs,bLs)
set eLs=pLs
call chu(eLs,Ggu(IU[OLs],0))
set qLs=eLs
call mHu(qLs,Ggu(IU[OLs],1))
set aLs=qLs
call hHu(aLs,Ggu(IU[OLs],2))
set nLs=aLs
call thu(nLs,Ggu(IU[OLs],3))
set dLs=nLs
call ahu(dLs,DU[OLs])
if xgu(PU[OLs],0)then
call Zrs(pLs,HU[OLs])
endif
if xgu(PU[OLs],1)then
call Thu(pLs,Sso(UU[OLs],JU[OLs],"when calling getString in ItemData, line 123"))
endif
if xgu(PU[OLs],2)then
call Fhu(pLs,Sso(UU[OLs],KU[OLs],"when calling getString in ItemData, line 125"))
endif
if xgu(PU[OLs],3)then
call mhu(pLs,Sso(UU[OLs],LU[OLs],"when calling getString in ItemData, line 127"))
endif
if xgu(PU[OLs],4)then
call Uhu(pLs,Sso(UU[OLs],XU[OLs],"when calling getString in ItemData, line 129"))
endif
if xgu(PU[OLs],5)then
call Hhu(pLs,Sso(UU[OLs],CU[OLs],"when calling getString in ItemData, line 131"))
endif
set MM=MM-1
set Anw=pLs
set pLs=null
set eLs=null
set qLs=null
set aLs=null
set nLs=null
set dLs=null
return Anw
endfunction
function OXs takes integer tXs,real iXs,real SXs,string cXs returns item
local item oXs
set w3[MM]=cXs
set MM=MM+1
set oXs=fLs(tXs,kus(iXs,SXs,tEu(VU[tXs],BU[tXs]),P1),x1,"when calling create in ItemData, line 210")
set MM=MM-1
set Hnw=oXs
set oXs=null
return Hnw
endfunction
function aIc takes integer bIc,real yIc,real pIc,string eIc returns item
local item qIc
set w3[MM]=eIc
set MM=MM+1
if Ah[bIc]==0 then
if bIc==0 then
call Mau("Nullpointer exception when calling SingleItemData.create","when calling error in ItemData, line 111")
else
call Mau("Called SingleItemData.create on invalid object.","when calling error in ItemData, line 111")
endif
endif
if Ah[bIc]<=1569 then
set qIc=fLs(bIc,yIc,pIc,"when calling create in ItemData, line 111")
else
set qIc=OXs(bIc,yIc,pIc,"when calling create in ItemData, line 111")
endif
set MM=MM-1
set Sdw=qIc
set qIc=null
return Sdw
endfunction
function GLs takes integer RLs,string TLs returns item
local item YLs
set w3[MM]=TLs
set MM=MM+1
set YLs=aIc(RLs,0.,0.,"when calling create in ItemData, line 135")
set MM=MM-1
set Dnw=YLs
set YLs=null
return Dnw
endfunction
function RIc takes integer nIc,string dIc returns item
local item fIc
set w3[MM]=dIc
set MM=MM+1
if Ah[nIc]==0 then
if nIc==0 then
call Mau("Nullpointer exception when calling SingleItemData.create","when calling error in ItemData, line 134")
else
call Mau("Called SingleItemData.create on invalid object.","when calling error in ItemData, line 134")
endif
endif
set fIc=GLs(nIc,"when calling create in ItemData, line 134")
set MM=MM-1
set cdw=fIc
set fIc=null
return cdw
endfunction
function CDr takes integer LDr,integer XDr returns boolean
return mwu(LDr,XDr)
endfunction
function kuS takes integer huS,unit FuS returns nothing
call mKu(FuS,EV[huS])
call wLu(FuS,EV[huS],ZV[huS])
if CDr(WV[huS],4)then
call H_s(FuS,EV[huS],ZV[huS]-1,UV[huS])
endif
if CDr(WV[huS],5)then
call j_s(FuS,EV[huS],ZV[huS]-1,IV[huS])
endif
endfunction
function YOo takes integer fOo,unit ROo,string TOo returns nothing
set w3[MM]=TOo
set MM=MM+1
if Hv[fOo]==0 then
if fOo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.apply","when calling error in UnitData, line 913")
else
call Mau("Called SingleAbilityData.apply on invalid object.","when calling error in UnitData, line 913")
endif
endif
call kuS(fOo,ROo)
set MM=MM-1
endfunction
function aHr takes integer eHr,integer qHr returns boolean
return mwu(eHr,qHr)
endfunction
function lHr takes integer oHr,integer OHr returns boolean
return mwu(oHr,OHr)
endfunction
function dmr takes integer amr,integer nmr returns boolean
return mwu(amr,nmr)
endfunction
function qQr takes unit iQr,integer SQr,integer cQr,integer oQr,integer OQr,integer lQr,integer bQr,integer yQr,integer pQr,string eQr returns nothing
set w3[MM]=eQr
set MM=MM+1
call o6r(iQr,dmr(SQr,0))
call i6r(iQr,oQr,false)
if dmr(SQr,1)then
call Q6r(iQr,OQr)
endif
if dmr(SQr,3)then
call Q6r(iQr,lQr)
endif
if dmr(SQr,5)then
call Q6r(iQr,bQr)
endif
call H0s(iQr,Sso(pQr,yQr,"when calling getString in UnitData, line 112"))
set MM=MM-1
endfunction
function gEr takes integer YEr,integer GEr returns boolean
return mwu(YEr,GEr)
endfunction
function rZr takes unit CEr,integer VEr,real BEr,real NEr,real MEr,real wZr,real uZr returns nothing
if gEr(VEr,0)then
call QJu(CEr,BEr)
endif
if gEr(VEr,2)then
call N9s(CEr,NEr)
endif
if gEr(VEr,3)then
call AJu(CEr,MEr)
endif
if gEr(VEr,6)then
call RKu(CEr,wZr)
endif
if gEr(VEr,7)then
call D9s(CEr,twu(uZr))
endif
endfunction
function uHr takes integer MDr,integer wHr returns boolean
return mwu(MDr,wHr)
endfunction
function KtS takes integer FtS,player ktS,real jtS,real xtS,real vtS,string mtS returns unit
local unit QtS
local unit WtS
local integer EtS
local integer ZtS
local item UtS
local integer ItS
local integer PtS
local integer AtS
local integer DtS
local integer HtS
local integer JtS
set w3[MM]=mtS
set MM=MM+1
set WtS=CreateUnit(ktS,LV[FtS],jtS,xtS,vtS)
call a9s(WtS,uHr(JV[FtS],0))
set QtS=WtS
if uHr(JV[FtS],2)then
call qQr(QtS,XV[FtS],CV[FtS],VV[FtS],BV[FtS],NV[FtS],MV[FtS],wB[FtS],HV[FtS],"when calling setHeroParameters in UnitData, line 1150")
endif
if uHr(JV[FtS],3)then
call P0s(QtS,Sso(HV[FtS],uB[FtS],"when calling getString in UnitData, line 1153"))
endif
call PWr(QtS,rB[FtS],sB[FtS],tB[FtS],iB[FtS],SB[FtS],cB[FtS],oB[FtS],OB[FtS])
call rZr(QtS,lB[FtS],bB[FtS],yB[FtS],pB[FtS],eB[FtS],qB[FtS])
call CPr(QtS,aB[FtS],nB[FtS],dB[FtS],fB[FtS],RB[FtS],TB[FtS],YB[FtS],GB[FtS],gB[FtS],hB[FtS],FB[FtS],kB[FtS],jB[FtS],xB[FtS],vB[FtS],mB[FtS],QB[FtS])
set EtS=0
set ZtS=nB[FtS]-1
loop
exitwhen EtS>ZtS
if GGo(FtS,EtS,"when reading array SingleUnitData_items in  in UnitData, line 1160")!=0 then
set UtS=RIc(GGo(FtS,EtS,"when reading array SingleUnitData_items in  in UnitData, line 1161"),"when calling create in UnitData, line 1161")
call V5r(QtS,UtS)
call H8s(QtS,UtS,EtS)
endif
set EtS=EtS+1
endloop
if QUr(aB[FtS],12)then
set ItS=x1s(WB[FtS],"when calling iterator in UnitData, line 1166")
loop
exitwhen not t1s(ItS)
set PtS=r1s(ItS)
call DKu(QtS,PtS)
endloop
call c1s(ItS,"when calling close in UnitData, line 1166")
endif
if QUr(aB[FtS],13)then
set AtS=x1s(EB[FtS],"when calling iterator in UnitData, line 1169")
loop
exitwhen not t1s(AtS)
set DtS=r1s(AtS)
call YOo(DtS,QtS,"when calling apply in UnitData, line 1170")
endloop
call c1s(AtS,"when calling close in UnitData, line 1169")
endif
if uHr(JV[FtS],1)then
call k8s(QtS)
endif
if lHr(ZB[FtS],0)or lHr(ZB[FtS],1)then
call O9s(QtS,rgu(UB[FtS]))
endif
if lHr(ZB[FtS],2)or lHr(ZB[FtS],3)then
call f9s(QtS,rgu(IB[FtS]))
endif
call UHu(QtS,not aHr(KV[FtS],1))
call a0s(QtS,jtS,xtS)
if aHr(KV[FtS],2)then
call WaygateActivate(QtS,true)
call WaygateSetDestination(QtS,jtS+PB[FtS],xtS+AB[FtS])
endif
if aHr(KV[FtS],3)then
call B_s(QtS,UNIT_IF_ARMOR_TYPE,DB[FtS])
endif
if aHr(KV[FtS],4)then
call B_s(QtS,UNIT_IF_DEFENSE_TYPE,HB[FtS])
endif
if aHr(KV[FtS],5)then
set HtS=x1s(JB[FtS],"when calling iterator in UnitData, line 1194")
loop
exitwhen not t1s(HtS)
set JtS=r1s(HtS)
call OLu(QtS,Sso(HV[FtS],JtS,"when calling getString in UnitData, line 1195"),true)
endloop
call c1s(HtS,"when calling close in UnitData, line 1194")
endif
if IsUnitType(QtS,UNIT_TYPE_STRUCTURE)then
call UnitAddType(QtS,UNIT_TYPE_SUMMONED)
endif
set MM=MM-1
set Bnw=QtS
set QtS=null
set WtS=null
set UtS=null
return Bnw
endfunction
function FrS takes integer RrS,player TrS,real YrS,real GrS,string grS returns unit
local unit hrS
set w3[MM]=grS
set MM=MM+1
set hrS=KtS(RrS,TrS,kus(YrS,GrS,tEu(PV[RrS],AV[RrS]),P1),x1,DV[RrS],"when calling create in UnitData, line 1349")
set MM=MM-1
set Vnw=hrS
set hrS=null
return Vnw
endfunction
function COo takes integer DOo,player HOo,real JOo,real KOo,string LOo returns unit
local unit XOo
set w3[MM]=LOo
set MM=MM+1
if Xv[DOo]==0 then
if DOo==0 then
call Mau("Nullpointer exception when calling SinglePositionedUnitData.create","when calling error in UnitData, line 1348")
else
call Mau("Called SinglePositionedUnitData.create on invalid object.","when calling error in UnitData, line 1348")
endif
endif
set XOo=FrS(DOo,HOo,JOo,KOo,"when calling create in UnitData, line 1348")
set MM=MM-1
set Udw=XOo
set XOo=null
return Udw
endfunction
function Hbc takes integer Abc,string Dbc returns nothing
set w3[MM]=Dbc
set MM=MM+1
if yj[Abc]==0 then
call Mau("Double free: object of type PositionedUnitDataPasteCallback","when calling error in UnitData, line 1363")
else
set Oj[lj]=Abc
set lj=lj+1
set yj[Abc]=0
endif
set MM=MM-1
endfunction
function IwS takes integer ZwS,string UwS returns nothing
set w3[MM]=UwS
set MM=MM+1
call Hbc(ZwS,"when calling dealloc_PositionedUnitDataPasteCallback in UnitData, line 1363")
set MM=MM-1
endfunction
function cOo takes integer iOo,string SOo returns nothing
set w3[MM]=SOo
set MM=MM+1
if yj[iOo]==0 then
if iOo==0 then
call Mau("Nullpointer exception when calling PositionedUnitDataPasteCallback.PositionedUnitDataPasteCallback","when calling error in UnitData, line 1363")
else
call Mau("Called PositionedUnitDataPasteCallback.PositionedUnitDataPasteCallback on invalid object.","when calling error in UnitData, line 1363")
endif
endif
call IwS(iOo,"when calling destroyPositionedUnitDataPasteCallback in UnitData, line 1363")
set MM=MM-1
endfunction
function Vcc takes string Xcc returns integer
local integer Ccc
set w3[MM]=Xcc
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set Ccc=ZG
set UG[Ccc]=698
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 169")
set Ccc=0
endif
else
set EG=EG-1
set Ccc=WG[EG]
set UG[Ccc]=698
endif
set MM=MM-1
return Ccc
endfunction
function TLi takes integer dLi,string fLi returns nothing
local integer RLi
set w3[MM]=fLi
set MM=MM+1
call FZu("Загрузка завершена!",30.,pa[fX[dLi]])
set RLi=Vcc("when calling alloc_CallbackSingle_nullTimer_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 169")
call KGs(RLi)
set TX[RLi]=RX[dLi]
call Cou(RLi,"when calling nullTimer in SotfrpGuiRegions, line 169")
set MM=MM-1
endfunction
function S3c takes integer t3c,string i3c returns nothing
set w3[MM]=i3c
set MM=MM+1
if tj[t3c]==0 then
if t3c==0 then
call Mau("Nullpointer exception when calling RegionDataPasteCallback.onPasted","when calling error in RegionData, line 25")
else
call Mau("Called RegionDataPasteCallback.onPasted on invalid object.","when calling error in RegionData, line 25")
endif
endif
call TLi(t3c,"when calling onPasted_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in RegionData, line 25")
set MM=MM-1
endfunction
function MZS takes integer BZS,string NZS returns nothing
set w3[MM]=NZS
set MM=MM+1
if tj[BZS]==0 then
call Mau("Double free: object of type RegionDataPasteCallback","when calling error in RegionData, line 24")
else
set uj[rj]=BZS
set rj=rj+1
set tj[BZS]=0
endif
set MM=MM-1
endfunction
function tqt takes integer rqt,string sqt returns nothing
set w3[MM]=sqt
set MM=MM+1
call MZS(rqt,"when calling dealloc_RegionDataPasteCallback in RegionData, line 24")
set MM=MM-1
endfunction
function s3c takes integer u3c,string r3c returns nothing
set w3[MM]=r3c
set MM=MM+1
if tj[u3c]==0 then
if u3c==0 then
call Mau("Nullpointer exception when calling RegionDataPasteCallback.RegionDataPasteCallback","when calling error in RegionData, line 24")
else
call Mau("Called RegionDataPasteCallback.RegionDataPasteCallback on invalid object.","when calling error in RegionData, line 24")
endif
endif
call tqt(u3c,"when calling destroyRegionDataPasteCallback in RegionData, line 24")
set MM=MM-1
endfunction
function kqt takes integer hqt,string Fqt returns nothing
set w3[MM]=Fqt
set MM=MM+1
if dJ[hqt]!=0 then
call S3c(dJ[hqt],"when calling onPasted in RegionData, line 119")
call s3c(dJ[hqt],"when calling dispatch_RegionDataPasteCallback_destroyRegionDataPasteCallback in RegionData, line 120")
endif
set MM=MM-1
endfunction
function lOo takes integer oOo,string OOo returns nothing
set w3[MM]=OOo
set MM=MM+1
if yj[oOo]==0 then
if oOo==0 then
call Mau("Nullpointer exception when calling PositionedUnitDataPasteCallback.onPasted","when calling error in UnitData, line 1364")
else
call Mau("Called PositionedUnitDataPasteCallback.onPasted on invalid object.","when calling error in UnitData, line 1364")
endif
endif
call kqt(oOo,"when calling onPasted_paste_paste_paste_RegionData_RegionData in UnitData, line 1364")
set MM=MM-1
endfunction
function yuS takes integer cuS,integer ouS,string OuS returns nothing
local integer luS
local integer buS
set w3[MM]=OuS
set MM=MM+1
set luS=VM[kV[cuS]]*25
set buS=vdo(yZc(eV[jV[cuS]],"when calling size in UnitData, line 1434"),(VM[kV[cuS]]+1)*25)-1
loop
exitwhen luS>buS
call COo(TZc(eV[jV[cuS]],luS,"when calling get in UnitData, line 1435"),xV[cuS],vV[cuS],mV[cuS],"when calling create in UnitData, line 1435")
set luS=luS+1
endloop
set VM[kV[cuS]]=VM[kV[cuS]]+1
if Hgc(ouS,"when calling isLast in UnitData, line 1437")then
call jqo(kV[cuS],"when calling dispatch_Box⟪integer⟫_destroyBox⟪integer⟫ in UnitData, line 1438")
if QV[cuS]!=0 then
call lOo(QV[cuS],"when calling onPasted in UnitData, line 1440")
call cOo(QV[cuS],"when calling dispatch_PositionedUnitDataPasteCallback_destroyPositionedUnitDataPasteCallback in UnitData, line 1441")
endif
endif
set MM=MM-1
endfunction
function mgc takes integer jgc,integer xgc,string vgc returns nothing
set w3[MM]=vgc
set MM=MM+1
if gg[jgc]==0 then
if jgc==0 then
call Mau("Nullpointer exception when calling CallbackCounted.call","when calling error in ClosureTimers, line 148")
else
call Mau("Called CallbackCounted.call on invalid object.","when calling error in ClosureTimers, line 148")
endif
endif
if gg[jgc]<=673 then
if gg[jgc]<=672 then
call PFs(jgc,xgc,"when calling call_doPeriodicallyCounted_PositionedDestructableData_DestructableData in ClosureTimers, line 148")
else
call yuS(jgc,xgc,"when calling call_doPeriodicallyCounted_PositionedUnitData_UnitData in ClosureTimers, line 148")
endif
elseif gg[jgc]<=674 then
call VpS(jgc,xgc,"when calling call_doPeriodicallyCounted_UnitData_UnitTypeData in ClosureTimers, line 148")
else
call x6t(jgc,xgc)
endif
set MM=MM-1
endfunction
function oGs takes integer SGs,string cGs returns nothing
set w3[MM]=cGs
set MM=MM+1
if KW[SGs]>0 then
call mgc(SGs,SGs,"when calling call in ClosureTimers, line 170")
set KW[SGs]=KW[SGs]-1
else
call kgc(SGs,"when calling dispatch_CallbackCounted_destroyCallbackCounted in ClosureTimers, line 173")
endif
set MM=MM-1
endfunction
function Lgc takes integer Jgc,string Kgc returns nothing
set w3[MM]=Kgc
set MM=MM+1
if gg[Jgc]==0 then
if Jgc==0 then
call Mau("Nullpointer exception when calling CallbackCounted.callAndCount","when calling error in ClosureTimers, line 168")
else
call Mau("Called CallbackCounted.callAndCount on invalid object.","when calling error in ClosureTimers, line 168")
endif
endif
call oGs(Jgc,"when calling callAndCount in ClosureTimers, line 168")
set MM=MM-1
endfunction
function fOu takes string dOu returns nothing
set w3[MM]=dOu
set MM=MM+1
call Lgc(Vkr(GetExpiredTimer(),"when calling getData in ClosureTimers, line 166"),"when calling callAndCount in ClosureTimers, line 166")
set MM=MM-1
endfunction
function FTo takes nothing returns nothing
set MM=0
call fOu("ClosureTimers, line 154")
endfunction
function YVw takes nothing returns boolean
if not(GetUnitAbilityLevelSwapped(1093682996,GetEnumUnit())==0)then
return false
endif
if not(GetUnitAbilityLevelSwapped(1093682999,GetEnumUnit())==0)then
return false
endif
if not(GetUnitAbilityLevelSwapped(1093682997,GetEnumUnit())==0)then
return false
endif
return true
endfunction
function GVw takes nothing returns boolean
if not YVw()then
return false
endif
return true
endfunction
function gVw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function hVw takes nothing returns boolean
if not gVw()then
return false
endif
return true
endfunction
function FVw takes nothing returns nothing
if hVw()then
call SetUnitAbilityLevelSwapped(1093682996,GetEnumUnit(),GetUnitAbilityLevelSwapped(1093682996,GetEnumUnit())+1)
call SetUnitAbilityLevelSwapped(1093682999,GetEnumUnit(),GetUnitAbilityLevelSwapped(1093682999,GetEnumUnit())+1)
call SetUnitAbilityLevelSwapped(1093682997,GetEnumUnit(),GetUnitAbilityLevelSwapped(1093682997,GetEnumUnit())+1)
if GVw()then
call UnitAddAbilityBJ(1093682996,GetEnumUnit())
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1093682996)
else
call DoNothing()
endif
else
call DoNothing()
endif
endfunction
function hXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="~building")then
return false
endif
return true
endfunction
function FXw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(USw))
if hXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],ISw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function FZw takes nothing returns nothing
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_9182","TRIGSTR_9183","ReplaceableTextures\\CommandButtons\\BTNMassTeleport.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_066","TRIGSTR_067","ReplaceableTextures\\CommandButtons\\BTNEngineeringUpgrade.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_8661","TRIGSTR_8662","ReplaceableTextures\\CommandButtons\\BTNBrilliance.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_1139","TRIGSTR_1252","ReplaceableTextures\\CommandButtons\\BTNBrilliance.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_342","TRIGSTR_1288","ReplaceableTextures\\CommandButtons\\BTNFelFireBolt.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_2196","TRIGSTR_2896","ReplaceableTextures\\CommandButtons\\BTNMageFireBolt.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_068","TRIGSTR_069","ReplaceableTextures\\CommandButtons\\BTNBerserkForTrolls.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_070","TRIGSTR_071","ReplaceableTextures\\CommandButtons\\BTNBerserkForTrolls.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_11204","TRIGSTR_11205","ReplaceableTextures\\CommandButtons\\BTNArmorGolem.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_154","TRIGSTR_155","ReplaceableTextures\\CommandButtons\\BTNTameHippogriff.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_100","TRIGSTR_101","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_102","TRIGSTR_103","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_104","TRIGSTR_105","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_106","TRIGSTR_107","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_108","TRIGSTR_109","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_110","TRIGSTR_111","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_112","TRIGSTR_113","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_114","TRIGSTR_115","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_116","TRIGSTR_117","ReplaceableTextures\\CommandButtons\\BTNHoldPosition.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_118","TRIGSTR_119","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_120","TRIGSTR_121","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_122","TRIGSTR_123","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_124","TRIGSTR_125","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_126","TRIGSTR_127","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_128","TRIGSTR_129","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_130","TRIGSTR_131","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_132","TRIGSTR_133","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_134","TRIGSTR_135","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_136","TRIGSTR_137","ReplaceableTextures\\CommandButtons\\BTNWellSpring.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_144","TRIGSTR_145","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_1408")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_1958","TRIGSTR_1968","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_2461")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_2473","TRIGSTR_2547","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_2564")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_2583","TRIGSTR_2611","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_2618")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_2635","TRIGSTR_2650","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_2655")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_2886","TRIGSTR_2940","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_2943")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_2945","TRIGSTR_2949","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_2964")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_2973","TRIGSTR_2982","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3049")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3151","TRIGSTR_3169","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3173")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3177","TRIGSTR_3204","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3208")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3212","TRIGSTR_3228","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3236")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3249","TRIGSTR_3250","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3252")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3258","TRIGSTR_3288","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3297")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3305","TRIGSTR_3313","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3421")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3438","TRIGSTR_3462","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3464")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3467","TRIGSTR_3470","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3473")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3476","TRIGSTR_3479","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3482")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3485","TRIGSTR_3488","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3491")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3494","TRIGSTR_3497","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3503")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3504","TRIGSTR_3506","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3509")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_3513","TRIGSTR_3516","ReplaceableTextures\\CommandButtons\\BTNHumanBuild.blp")
call CreateQuestItemBJ(GetLastCreatedQuestBJ(),"TRIGSTR_3525")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_156","TRIGSTR_157","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_158","TRIGSTR_159","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_160","TRIGSTR_161","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_162","TRIGSTR_163","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_164","TRIGSTR_165","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_166","TRIGSTR_167","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_168","TRIGSTR_169","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_170","TRIGSTR_171","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_172","TRIGSTR_173","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_174","TRIGSTR_175","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_2189","TRIGSTR_2190","ReplaceableTextures\\CommandButtons\\BTNHumanMissileUpOne.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_176","TRIGSTR_177","ReplaceableTextures\\CommandButtons\\BTNMonsoon.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_178","TRIGSTR_179","ReplaceableTextures\\CommandButtons\\BTNMonsoon.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_180","TRIGSTR_181","ReplaceableTextures\\CommandButtons\\BTNMonsoon.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_182","TRIGSTR_183","ReplaceableTextures\\CommandButtons\\BTNTranquility.blp")
call CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED,"TRIGSTR_184","TRIGSTR_185","ReplaceableTextures\\CommandButtons\\BTNTranquility.blp")
call CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED,"TRIGSTR_358","TRIGSTR_520","ReplaceableTextures\\CommandButtons\\BTNPillage.blp")
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function F_u takes nothing returns boolean
local integer g_u=sy
local integer h_u=uy
call LoadStr(i,Vl[g_u],h_u)
return true
endfunction
function Fhw takes nothing returns nothing
local unit Yhw
local real Ghw
local real ghw
local real hhw
if GetUnitAbilityLevel(GetTriggerUnit(),1110455606)==0 or GetEventDamage()==0. then
set Yhw=null
return
endif
set Yhw=GetTriggerUnit()
set Ghw=GetEventDamage()
set ghw=LoadReal(i,HO,GetHandleId(Yhw))
if Ghw/2.<ghw then
set hhw=Ghw/2.
else
set hhw=ghw
endif
call BlzSetEventDamage(Ghw-hhw)
call SaveReal(i,HO,GetHandleId(Yhw),(ghw-hhw)*1.0)
if ghw==hhw then
call UnitRemoveAbility(Yhw,1110455606)
endif
set Yhw=null
set Yhw=null
endfunction
function Fjw takes nothing returns nothing
call CameraClearNoiseForPlayer(GetEnumPlayer())
endfunction
function Gmw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Tmw takes nothing returns boolean
if not(er<=100.00)then
return false
endif
return true
endfunction
function Ymw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function gmw takes nothing returns boolean
if not(CountUnitsInGroup(lr[rr])==0)then
return false
endif
return true
endfunction
function hmw takes nothing returns boolean
if not(GetUnitFlyHeight(GetEnumUnit())<5.00)then
return false
endif
return true
endfunction
function Fmw takes nothing returns nothing
set Ju[2]=GetUnitLoc(Nu)
set er=LoadRealBJ(1,GetHandleIdBJ(GetEnumUnit()),Au)
set qr=LoadRealBJ(2,GetHandleIdBJ(GetEnumUnit()),Au)
set ar=LoadRealBJ(3,GetHandleIdBJ(GetEnumUnit()),Au)
if Tmw()then
set Ju[3]=PolarProjectionBJ(Ju[2],er+2.00,qr+10.00)
call SaveRealBJ(er+2.00,1,GetHandleIdBJ(GetEnumUnit()),Au)
else
set Ju[3]=PolarProjectionBJ(Ju[2],er,qr+5.00)
endif
call SaveRealBJ(qr+10.00,2,GetHandleIdBJ(GetEnumUnit()),Au)
call SaveRealBJ(ar+3.00,3,GetHandleIdBJ(GetEnumUnit()),Au)
call SetUnitPositionLocFacingBJ(GetEnumUnit(),Ju[3],qr+90.00)
call SetUnitFlyHeightBJ(GetEnumUnit(),GetUnitFlyHeight(GetEnumUnit())-3.00,0.00)
call SetUnitScalePercent(GetEnumUnit(),ar,ar,ar)
if hmw()then
call KillUnit(GetEnumUnit())
call GroupRemoveUnitSimple(GetEnumUnit(),lr[rr])
call GroupAddUnitSimple(GetEnumUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetEnumUnit()),Au)
if Gmw()then
call AddSpecialEffectLocBJ(Ju[3],"Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
elseif Ymw()then
call AddSpecialEffectLocBJ(Ju[3],"Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
else
call AddSpecialEffectLocBJ(Ju[3],"Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
endif
call DestroyEffectBJ(GetLastCreatedEffectBJ())
if gmw()then
call SaveIntegerBJ(0,10,Bu,Au)
call SaveIntegerBJ(3,7,Bu,Au)
endif
endif
call RemoveLocation(Ju[2])
call RemoveLocation(Ju[3])
endfunction
function Fws takes nothing returns boolean
return true
endfunction
function G0u takes nothing returns nothing
local timer p0u=GetExpiredTimer()
local location e0u=LoadLocationHandle(nr,GetHandleId(p0u),StringHash("l"))
local unit q0u=LoadUnitHandle(nr,GetHandleId(p0u),StringHash("u"))
local effect a0u=LoadEffectHandle(nr,GetHandleId(p0u),StringHash("e"))
local real n0u=GetLocationX(e0u)
local real d0u=GetLocationY(e0u)
local real f0u=0.
local real R0u=0.
local integer T0u=LoadInteger(nr,GetHandleId(p0u),StringHash("i"))
local integer Y0u=0
if 60-T0u>=3 then
set Y0u=GetRandomInt(1,3)
elseif 60-T0u==2 then
set Y0u=GetRandomInt(1,2)
else
set Y0u=1
endif
loop
set f0u=GetRandomReal(-350.,350.)
set R0u=GetRandomReal(-350.,350.)
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\Other\\Bombardment\\Bombardment.mdx",n0u+f0u,d0u+R0u))
call UnitDamagePoint(q0u,0.,50.,n0u+f0u,d0u+R0u,525.,true,true,ATTACK_TYPE_SIEGE,DAMAGE_TYPE_DEMOLITION,WEAPON_TYPE_WHOKNOWS)
set T0u=T0u+1
set Y0u=Y0u-1
exitwhen Y0u==0
endloop
set n0u=0.
set d0u=0.
set f0u=0.
set R0u=0.
if T0u==60 then
call RemoveLocation(e0u)
call SaveTimerHandle(nr,GetHandleId(q0u),StringHash("bmT"),null)
call FlushChildHashtable(nr,GetHandleId(p0u))
call DestroyTimer(p0u)
call DestroyEffect(a0u)
call IssueImmediateOrder(q0u,"stop")
else
call SaveInteger(nr,GetHandleId(p0u),StringHash("i"),T0u)
endif
set p0u=null
set e0u=null
set q0u=null
set a0u=null
set T0u=0
set p0u=null
set e0u=null
set q0u=null
set a0u=null
endfunction
function G3w takes nothing returns boolean
if GetSpellAbilityId()==1093683799 then
return true
else
return false
endif
endfunction
function G4w takes nothing returns boolean
if GetSpellAbilityId()==1093679414 then
return true
endif
return false
endfunction
function RCw takes nothing returns boolean
if not(IsUnitInGroup(GetTriggerUnit(),fr)==true)then
return false
endif
return true
endfunction
function TCw takes nothing returns boolean
if not(IsUnitInGroup(GetTriggerUnit(),Rr)==true)then
return false
endif
return true
endfunction
function YCw takes nothing returns boolean
if not(IsUnitInGroup(GetTriggerUnit(),dr)==true)then
return false
endif
return true
endfunction
function GCw takes nothing returns nothing
if YCw()then
call GroupRemoveUnitSimple(GetTriggerUnit(),dr)
call GroupAddUnitSimple(GetTriggerUnit(),Rr)
call UnitRemoveAbilityBJ(1093679188,GetTriggerUnit())
call UnitAddAbilityBJ(1093679189,GetTriggerUnit())
call SetUnitAbilityLevelSwapped(1093679189,GetTriggerUnit(),GetUnitAbilityLevelSwapped(1093679190,GetTriggerUnit()))
call UnitMakeAbilityPermanent(GetTriggerUnit(),true,1093679189)
elseif TCw()then
call GroupRemoveUnitSimple(GetTriggerUnit(),Rr)
call GroupAddUnitSimple(GetTriggerUnit(),fr)
call UnitRemoveAbilityBJ(1093679189,GetTriggerUnit())
call UnitAddAbilityBJ(1093679187,GetTriggerUnit())
call SetUnitAbilityLevelSwapped(1093679187,GetTriggerUnit(),GetUnitAbilityLevelSwapped(1093679190,GetTriggerUnit()))
call UnitMakeAbilityPermanent(GetTriggerUnit(),true,1093679187)
elseif RCw()then
call GroupRemoveUnitSimple(GetTriggerUnit(),fr)
call GroupAddUnitSimple(GetTriggerUnit(),dr)
call UnitRemoveAbilityBJ(1093679187,GetTriggerUnit())
call UnitAddAbilityBJ(1093679188,GetTriggerUnit())
call SetUnitAbilityLevelSwapped(1093679188,GetTriggerUnit(),GetUnitAbilityLevelSwapped(1093679190,GetTriggerUnit()))
call UnitMakeAbilityPermanent(GetTriggerUnit(),true,1093679188)
else
call DoNothing()
endif
endfunction
function kYw takes integer gYw,unit hYw returns nothing
local timer FYw
if not HaveSavedHandle(i,ub[gYw],GetHandleId(hYw))then
set FYw=null
return
endif
set FYw=LoadTimerHandle(i,ub[gYw],GetHandleId(hYw))
call LTw(LoadInteger(i,y,GetHandleId(FYw)))
call ATw(FYw)
call RemoveSavedHandle(i,ub[gYw],GetHandleId(hYw))
call kfw(ib[gYw],hYw)
set FYw=null
set FYw=null
endfunction
function GFw takes nothing returns nothing
local unit dFw
local unit fFw
local integer RFw
local integer TFw
local group YFw
if GetSpellAbilityId()!=ul then
set dFw=null
set fFw=null
set YFw=null
return
endif
set dFw=GetSpellAbilityUnit()
set fFw=GetSpellTargetUnit()
set TFw=GetHandleId(dFw)
set RFw=GetUnitAbilityLevel(dFw,ul)
call Jgw(cl,RFw,"attackonce",fFw)
call Jgw(sl,RFw,"attackonce",fFw)
call Jgw(il,RFw,"attackonce",fFw)
set YFw=LoadGroupHandle(i,bl,TFw)
if YFw==null then
set YFw=CreateGroup()
call SaveGroupHandle(i,bl,TFw,YFw)
endif
call kYw(ol,fFw)
call GroupAddUnit(YFw,fFw)
set TFw=GetHandleId(fFw)
call SaveReal(i,Ol,TFw,RFw*200*1.0)
call SaveReal(i,ll,TFw,RFw*200*1.0)
call SaveUnitHandle(i,yl,TFw,dFw)
call nYw(ol,fFw,15.)
set YFw=null
set fFw=null
set dFw=null
set dFw=null
set fFw=null
set YFw=null
endfunction
function GHr takes nothing returns boolean
return true
endfunction
function GHw takes nothing returns boolean
return GetSpellAbilityId()==1093683252
endfunction
function GJw takes nothing returns nothing
local unit TJw=GetSpellAbilityUnit()
local location YJw=GetSpellTargetLoc()
call WaygateSetDestination(TJw,GetLocationX(YJw),GetLocationY(YJw))
call WaygateActivate(TJw,true)
call RemoveLocation(YJw)
set YJw=null
set TJw=null
set TJw=null
set YJw=null
endfunction
function GMw takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(),1093683539)>0 then
return true
endif
return false
endfunction
function FHS takes string gHS returns integer
local integer hHS
set w3[MM]=gHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hHS=kj
set jj[hHS]=1019
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 152")
set hHS=0
endif
else
set Fj=Fj-1
set hHS=hj[Fj]
set jj[hHS]=1019
endif
set MM=MM-1
return hHS
endfunction
function FJS takes string gJS returns integer
local integer hJS
set w3[MM]=gJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hJS=kj
set jj[hJS]=1169
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 216")
set hJS=0
endif
else
set Fj=Fj-1
set hJS=hj[Fj]
set jj[hJS]=1169
endif
set MM=MM-1
return hJS
endfunction
function FKS takes string gKS returns integer
local integer hKS
set w3[MM]=gKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hKS=kj
set jj[hKS]=829
else
call Mau("Out of memory: Could not create IBuiltin_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 296")
set hKS=0
endif
else
set Fj=Fj-1
set hKS=hj[Fj]
set jj[hKS]=829
endif
set MM=MM-1
return hKS
endfunction
function FLS takes string gLS returns integer
local integer hLS
set w3[MM]=gLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hLS=kj
set jj[hLS]=1177
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 413")
set hLS=0
endif
else
set Fj=Fj-1
set hLS=hj[Fj]
set jj[hLS]=1177
endif
set MM=MM-1
return hLS
endfunction
function GHS takes string THS returns integer
local integer YHS
set w3[MM]=THS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set YHS=kj
set jj[YHS]=1018
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 149")
set YHS=0
endif
else
set Fj=Fj-1
set YHS=hj[Fj]
set jj[YHS]=1018
endif
set MM=MM-1
return YHS
endfunction
function GKS takes string TKS returns integer
local integer YKS
set w3[MM]=TKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set YKS=kj
set jj[YKS]=1038
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 293")
set YKS=0
endif
else
set Fj=Fj-1
set YKS=hj[Fj]
set jj[YKS]=1038
endif
set MM=MM-1
return YKS
endfunction
function GLS takes string TLS returns integer
local integer YLS
set w3[MM]=TLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set YLS=kj
set jj[YLS]=1176
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 388")
set YLS=0
endif
else
set Fj=Fj-1
set YLS=hj[Fj]
set jj[YLS]=1176
endif
set MM=MM-1
return YLS
endfunction
function HDS takes string ADS returns integer
local integer DDS
set w3[MM]=ADS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set DDS=kj
set jj[DDS]=1168
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 61")
set DDS=0
endif
else
set Fj=Fj-1
set DDS=hj[Fj]
set jj[DDS]=1168
endif
set MM=MM-1
return DDS
endfunction
function HHS takes string AHS returns integer
local integer DHS
set w3[MM]=AHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set DHS=kj
set jj[DHS]=1024
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 168")
set DHS=0
endif
else
set Fj=Fj-1
set DHS=hj[Fj]
set jj[DHS]=1024
endif
set MM=MM-1
return DHS
endfunction
function HJS takes string AJS returns integer
local integer DJS
set w3[MM]=AJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set DJS=kj
set jj[DJS]=1172
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 266")
set DJS=0
endif
else
set Fj=Fj-1
set DJS=hj[Fj]
set jj[DJS]=1172
endif
set MM=MM-1
return DJS
endfunction
function HKS takes string AKS returns integer
local integer DKS
set w3[MM]=AKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set DKS=kj
set jj[DKS]=1040
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 321")
set DKS=0
endif
else
set Fj=Fj-1
set DKS=hj[Fj]
set jj[DKS]=1040
endif
set MM=MM-1
return DKS
endfunction
function IBu takes integer xBu,integer vBu,string mBu returns nothing
local integer QBu
local integer WBu
local string EBu
local integer ZBu
local integer UBu
set w3[MM]=mBu
set MM=MM+1
set QBu=l5i(xBu,"when calling new_SharedPointer in ScmdBuiltinsRegistrar, line 26")
set WBu=x1s(vBu,"when calling iterator in ScmdBuiltinsRegistrar, line 27")
loop
exitwhen not t1s(WBu)
set EBu=gvr(r1s(WBu),"when calling stringFromIndex in ScmdBuiltinsRegistrar, line 27")
set ZBu=0
set UBu=bj_MAX_PLAYERS-1
loop
exitwhen ZBu>UBu
call F2u(ZBu,EBu,null,null,QBu,true,"when calling assign in ScmdBuiltinsRegistrar, line 29")
set ZBu=ZBu+1
endloop
endloop
call c1s(WBu,"when calling close in ScmdBuiltinsRegistrar, line 27")
call CAc(vBu,"when calling dispatch_LinkedList_destroyLinkedList in ScmdBuiltinsRegistrar, line 30")
set MM=MM-1
endfunction
function LDS takes string JDS returns integer
local integer KDS
set w3[MM]=JDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set KDS=kj
set jj[KDS]=1211
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 87")
set KDS=0
endif
else
set Fj=Fj-1
set KDS=hj[Fj]
set jj[KDS]=1211
endif
set MM=MM-1
return KDS
endfunction
function LHS takes string JHS returns integer
local integer KHS
set w3[MM]=JHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set KHS=kj
set jj[KHS]=1025
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 171")
set KHS=0
endif
else
set Fj=Fj-1
set KHS=hj[Fj]
set jj[KHS]=1025
endif
set MM=MM-1
return KHS
endfunction
function LKS takes string JKS returns integer
local integer KKS
set w3[MM]=JKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set KKS=kj
set jj[KKS]=1216
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 326")
set KKS=0
endif
else
set Fj=Fj-1
set KKS=hj[Fj]
set jj[KKS]=1216
endif
set MM=MM-1
return KKS
endfunction
function M1u takes nothing returns integer
return Qn
endfunction
function MDS takes string BDS returns integer
local integer NDS
set w3[MM]=BDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set NDS=kj
set jj[NDS]=1013
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 109")
set NDS=0
endif
else
set Fj=Fj-1
set NDS=hj[Fj]
set jj[NDS]=1013
endif
set MM=MM-1
return NDS
endfunction
function MHS takes string BHS returns integer
local integer NHS
set w3[MM]=BHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set NHS=kj
set jj[NHS]=1027
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 177")
set NHS=0
endif
else
set Fj=Fj-1
set NHS=hj[Fj]
set jj[NHS]=1027
endif
set MM=MM-1
return NHS
endfunction
function MJS takes string BJS returns integer
local integer NJS
set w3[MM]=BJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set NJS=kj
set jj[NJS]=1030
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 269")
set NJS=0
endif
else
set Fj=Fj-1
set NJS=hj[Fj]
set jj[NJS]=1030
endif
set MM=MM-1
return NJS
endfunction
function N1u takes nothing returns integer
return mn
endfunction
function rDt takes integer wDt,boolean uDt returns nothing
set MJ[wDt]=uDt
endfunction
function Z4o takes integer Q4o,boolean W4o,string E4o returns nothing
set w3[MM]=E4o
set MM=MM+1
if Tx[Q4o]==0 then
if Q4o==0 then
call Mau("Nullpointer exception when calling BuiltinData.setProvidingEnumUnit","when calling error in ScmdDataTypes, line 1411")
else
call Mau("Called BuiltinData.setProvidingEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1411")
endif
endif
call rDt(Q4o,W4o)
set MM=MM-1
endfunction
function iDt takes integer sDt,string tDt returns nothing
set w3[MM]=tDt
set MM=MM+1
call Z4o(sDt,true,"when calling setProvidingEnumUnit in ScmdDataTypes, line 1415")
set MM=MM-1
endfunction
function P4o takes integer U4o,string I4o returns nothing
set w3[MM]=I4o
set MM=MM+1
if Tx[U4o]==0 then
if U4o==0 then
call Mau("Nullpointer exception when calling BuiltinData.setProvidingEnumUnit","when calling error in ScmdDataTypes, line 1414")
else
call Mau("Called BuiltinData.setProvidingEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1414")
endif
endif
call iDt(U4o,"when calling setProvidingEnumUnit in ScmdDataTypes, line 1414")
set MM=MM-1
endfunction
function PDS takes string UDS returns integer
local integer IDS
set w3[MM]=UDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set IDS=kj
set jj[IDS]=1167
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 40")
set IDS=0
endif
else
set Fj=Fj-1
set IDS=hj[Fj]
set jj[IDS]=1167
endif
set MM=MM-1
return IDS
endfunction
function PHS takes string UHS returns integer
local integer IHS
set w3[MM]=UHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set IHS=kj
set jj[IHS]=1023
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 165")
set IHS=0
endif
else
set Fj=Fj-1
set IHS=hj[Fj]
set jj[IHS]=1023
endif
set MM=MM-1
return IHS
endfunction
function PKS takes string UKS returns integer
local integer IKS
set w3[MM]=UKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set IKS=kj
set jj[IKS]=1173
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 313")
set IKS=0
endif
else
set Fj=Fj-1
set IKS=hj[Fj]
set jj[IKS]=1173
endif
set MM=MM-1
return IKS
endfunction
function Qao takes integer kao,integer jao,integer xao,integer vao,string mao returns nothing
set w3[MM]=mao
set MM=MM+1
set VJ[kao]=0
call Cqo(CJ[kao],jao,"when calling add in ScmdDataTypes, line 1394")
set VJ[kao]=VJ[kao]+1
call Cqo(CJ[kao],xao,"when calling add in ScmdDataTypes, line 1394")
set VJ[kao]=VJ[kao]+1
call Cqo(CJ[kao],vao,"when calling add in ScmdDataTypes, line 1394")
set VJ[kao]=VJ[kao]+1
set MM=MM-1
endfunction
function Pao takes integer Wao,integer Eao,integer Zao,integer Uao,string Iao returns nothing
set w3[MM]=Iao
set MM=MM+1
if Tx[Wao]==0 then
if Wao==0 then
call Mau("Nullpointer exception when calling BuiltinData.setArgumentsTypes","when calling error in ScmdDataTypes, line 1391")
else
call Mau("Called BuiltinData.setArgumentsTypes on invalid object.","when calling error in ScmdDataTypes, line 1391")
endif
endif
call Qao(Wao,Eao,Zao,Uao,"when calling setArgumentsTypes in ScmdDataTypes, line 1391")
set MM=MM-1
endfunction
function QDS takes string vDS returns integer
local integer mDS
set w3[MM]=vDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mDS=kj
set jj[mDS]=1209
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 10")
set mDS=0
endif
else
set Fj=Fj-1
set mDS=hj[Fj]
set jj[mDS]=1209
endif
set MM=MM-1
return mDS
endfunction
function QHS takes string vHS returns integer
local integer mHS
set w3[MM]=vHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mHS=kj
set jj[mHS]=1021
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 159")
set mHS=0
endif
else
set Fj=Fj-1
set mHS=hj[Fj]
set jj[mHS]=1021
endif
set MM=MM-1
return mHS
endfunction
function QJS takes string vJS returns integer
local integer mJS
set w3[MM]=vJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mJS=kj
set jj[mJS]=1171
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 263")
set mJS=0
endif
else
set Fj=Fj-1
set mJS=hj[Fj]
set jj[mJS]=1171
endif
set MM=MM-1
return mJS
endfunction
function QKS takes string vKS returns integer
local integer mKS
set w3[MM]=vKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mKS=kj
set jj[mKS]=1039
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 302")
set mKS=0
endif
else
set Fj=Fj-1
set mKS=hj[Fj]
set jj[mKS]=1039
endif
set MM=MM-1
return mKS
endfunction
function QLS takes string vLS returns integer
local integer mLS
set w3[MM]=vLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mLS=kj
set jj[mLS]=1089
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setProvidingEnumUnit_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 457")
set mLS=0
endif
else
set Fj=Fj-1
set mLS=hj[Fj]
set jj[mLS]=1089
endif
set MM=MM-1
return mLS
endfunction
function RHS takes string dHS returns integer
local integer fHS
set w3[MM]=dHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fHS=kj
set jj[fHS]=1017
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 134")
set fHS=0
endif
else
set Fj=Fj-1
set fHS=hj[Fj]
set jj[fHS]=1017
endif
set MM=MM-1
return fHS
endfunction
function RKS takes string dKS returns integer
local integer fKS
set w3[MM]=dKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fKS=kj
set jj[fKS]=1037
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 290")
set fKS=0
endif
else
set Fj=Fj-1
set fKS=hj[Fj]
set jj[fKS]=1037
endif
set MM=MM-1
return fKS
endfunction
function RLS takes string dLS returns integer
local integer fLS
set w3[MM]=dLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fLS=kj
set jj[fLS]=1042
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 380")
set fLS=0
endif
else
set Fj=Fj-1
set fLS=hj[Fj]
set jj[fLS]=1042
endif
set MM=MM-1
return fLS
endfunction
function VDS takes string XDS returns integer
local integer CDS
set w3[MM]=XDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set CDS=kj
set jj[CDS]=1012
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 106")
set CDS=0
endif
else
set Fj=Fj-1
set CDS=hj[Fj]
set jj[CDS]=1012
endif
set MM=MM-1
return CDS
endfunction
function VHS takes string XHS returns integer
local integer CHS
set w3[MM]=XHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set CHS=kj
set jj[CHS]=1026
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 174")
set CHS=0
endif
else
set Fj=Fj-1
set CHS=hj[Fj]
set jj[CHS]=1026
endif
set MM=MM-1
return CHS
endfunction
function VKS takes string XKS returns integer
local integer CKS
set w3[MM]=XKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set CKS=kj
set jj[CKS]=1174
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 329")
set CKS=0
endif
else
set Fj=Fj-1
set CKS=hj[Fj]
set jj[CKS]=1174
endif
set MM=MM-1
return CKS
endfunction
function ZDS takes string WDS returns integer
local integer EDS
set w3[MM]=WDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set EDS=kj
set jj[EDS]=1210
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 25")
set EDS=0
endif
else
set Fj=Fj-1
set EDS=hj[Fj]
set jj[EDS]=1210
endif
set MM=MM-1
return EDS
endfunction
function ZHS takes string WHS returns integer
local integer EHS
set w3[MM]=WHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set EHS=kj
set jj[EHS]=1022
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 162")
set EHS=0
endif
else
set Fj=Fj-1
set EHS=hj[Fj]
set jj[EHS]=1022
endif
set MM=MM-1
return EHS
endfunction
function ZKS takes string WKS returns integer
local integer EKS
set w3[MM]=WKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set EKS=kj
set jj[EKS]=1215
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 307")
set EKS=0
endif
else
set Fj=Fj-1
set EKS=hj[Fj]
set jj[EKS]=1215
endif
set MM=MM-1
return EKS
endfunction
function ZLS takes string WLS returns integer
local integer ELS
set w3[MM]=WLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set ELS=kj
set jj[ELS]=1090
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setProvidingEnumUnit_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 459")
set ELS=0
endif
else
set Fj=Fj-1
set ELS=hj[Fj]
set jj[ELS]=1090
endif
set MM=MM-1
return ELS
endfunction
function bHS takes string OHS returns integer
local integer lHS
set w3[MM]=OHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lHS=kj
set jj[lHS]=1016
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 126")
set lHS=0
endif
else
set Fj=Fj-1
set lHS=hj[Fj]
set jj[lHS]=1016
endif
set MM=MM-1
return lHS
endfunction
function bKS takes string OKS returns integer
local integer lKS
set w3[MM]=OKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lKS=kj
set jj[lKS]=1034
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 281")
set lKS=0
endif
else
set Fj=Fj-1
set lKS=hj[Fj]
set jj[lKS]=1034
endif
set MM=MM-1
return lKS
endfunction
function bLS takes string OLS returns integer
local integer lLS
set w3[MM]=OLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lLS=kj
set jj[lLS]=1175
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 367")
set lLS=0
endif
else
set Fj=Fj-1
set lLS=hj[Fj]
set jj[lLS]=1175
endif
set MM=MM-1
return lLS
endfunction
function eHS takes string yHS returns integer
local integer pHS
set w3[MM]=yHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set pHS=kj
set jj[pHS]=855
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 129")
set pHS=0
endif
else
set Fj=Fj-1
set pHS=hj[Fj]
set jj[pHS]=855
endif
set MM=MM-1
return pHS
endfunction
function eKS takes string yKS returns integer
local integer pKS
set w3[MM]=yKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set pKS=kj
set jj[pKS]=1035
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 284")
set pKS=0
endif
else
set Fj=Fj-1
set pKS=hj[Fj]
set jj[pKS]=1035
endif
set MM=MM-1
return pKS
endfunction
function eLS takes string yLS returns integer
local integer pLS
set w3[MM]=yLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set pLS=kj
set jj[pLS]=860
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 375")
set pLS=0
endif
else
set Fj=Fj-1
set pLS=hj[Fj]
set jj[pLS]=860
endif
set MM=MM-1
return pLS
endfunction
function g5u takes nothing returns integer
return Yd
endfunction
function Tno takes integer dno,integer fno,string Rno returns nothing
set w3[MM]=Rno
set MM=MM+1
set BJ[dno]=true
call Cqo(CJ[dno],fno,"when calling add in ScmdDataTypes, line 1400")
set MM=MM-1
endfunction
function hno takes integer Yno,integer Gno,string gno returns nothing
set w3[MM]=gno
set MM=MM+1
if Tx[Yno]==0 then
if Yno==0 then
call Mau("Nullpointer exception when calling BuiltinData.setVariadicArgumentTypes","when calling error in ScmdDataTypes, line 1397")
else
call Mau("Called BuiltinData.setVariadicArgumentTypes on invalid object.","when calling error in ScmdDataTypes, line 1397")
endif
endif
call Tno(Yno,Gno,"when calling setVariadicArgumentTypes in ScmdDataTypes, line 1397")
set MM=MM-1
endfunction
function iHS takes string sHS returns integer
local integer tHS
set w3[MM]=sHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tHS=kj
set jj[tHS]=1212
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 117")
set tHS=0
endif
else
set Fj=Fj-1
set tHS=hj[Fj]
set jj[tHS]=1212
endif
set MM=MM-1
return tHS
endfunction
function iJS takes string sJS returns integer
local integer tJS
set w3[MM]=sJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tJS=kj
set jj[tJS]=1029
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 183")
set tJS=0
endif
else
set Fj=Fj-1
set tJS=hj[Fj]
set jj[tJS]=1029
endif
set MM=MM-1
return tJS
endfunction
function iKS takes string sKS returns integer
local integer tKS
set w3[MM]=sKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tKS=kj
set jj[tKS]=1032
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 275")
set tKS=0
endif
else
set Fj=Fj-1
set tKS=hj[Fj]
set jj[tKS]=1032
endif
set MM=MM-1
return tKS
endfunction
function iLS takes string sLS returns integer
local integer tLS
set w3[MM]=sLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tLS=kj
set jj[tLS]=859
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 356")
set tLS=0
endif
else
set Fj=Fj-1
set tLS=hj[Fj]
set jj[tLS]=859
endif
set MM=MM-1
return tLS
endfunction
function m4u takes nothing returns integer
return ud
endfunction
function nHS takes string qHS returns integer
local integer aHS
set w3[MM]=qHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set aHS=kj
set jj[aHS]=856
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 131")
set aHS=0
endif
else
set Fj=Fj-1
set aHS=hj[Fj]
set jj[aHS]=856
endif
set MM=MM-1
return aHS
endfunction
function nJS takes string qJS returns integer
local integer aJS
set w3[MM]=qJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set aJS=kj
set jj[aJS]=1214
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 213")
set aJS=0
endif
else
set Fj=Fj-1
set aJS=hj[Fj]
set jj[aJS]=1214
endif
set MM=MM-1
return aJS
endfunction
function nKS takes string qKS returns integer
local integer aKS
set w3[MM]=qKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set aKS=kj
set jj[aKS]=1036
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 287")
set aKS=0
endif
else
set Fj=Fj-1
set aKS=hj[Fj]
set jj[aKS]=1036
endif
set MM=MM-1
return aKS
endfunction
function nLS takes string qLS returns integer
local integer aLS
set w3[MM]=qLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set aLS=kj
set jj[aLS]=861
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 377")
set aLS=0
endif
else
set Fj=Fj-1
set aLS=hj[Fj]
set jj[aLS]=861
endif
set MM=MM-1
return aLS
endfunction
function lno takes integer tno,integer ino,integer Sno,integer cno,integer ono,string Ono returns nothing
set w3[MM]=Ono
set MM=MM+1
set VJ[tno]=0
call Cqo(CJ[tno],ino,"when calling add in ScmdDataTypes, line 1394")
set VJ[tno]=VJ[tno]+1
call Cqo(CJ[tno],Sno,"when calling add in ScmdDataTypes, line 1394")
set VJ[tno]=VJ[tno]+1
call Cqo(CJ[tno],cno,"when calling add in ScmdDataTypes, line 1394")
set VJ[tno]=VJ[tno]+1
call Cqo(CJ[tno],ono,"when calling add in ScmdDataTypes, line 1394")
set VJ[tno]=VJ[tno]+1
set MM=MM-1
endfunction
function nno takes integer bno,integer yno,integer pno,integer eno,integer qno,string ano returns nothing
set w3[MM]=ano
set MM=MM+1
if Tx[bno]==0 then
if bno==0 then
call Mau("Nullpointer exception when calling BuiltinData.setArgumentsTypes","when calling error in ScmdDataTypes, line 1391")
else
call Mau("Called BuiltinData.setArgumentsTypes on invalid object.","when calling error in ScmdDataTypes, line 1391")
endif
endif
call lno(bno,yno,pno,eno,qno,"when calling setArgumentsTypes in ScmdDataTypes, line 1391")
set MM=MM-1
endfunction
function oHS takes string SHS returns integer
local integer cHS
set w3[MM]=SHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cHS=kj
set jj[cHS]=1015
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 123")
set cHS=0
endif
else
set Fj=Fj-1
set cHS=hj[Fj]
set jj[cHS]=1015
endif
set MM=MM-1
return cHS
endfunction
function oJS takes string SJS returns integer
local integer cJS
set w3[MM]=SJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cJS=kj
set jj[cJS]=1213
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 210")
set cJS=0
endif
else
set Fj=Fj-1
set cJS=hj[Fj]
set jj[cJS]=1213
endif
set MM=MM-1
return cJS
endfunction
function oKS takes string SKS returns integer
local integer cKS
set w3[MM]=SKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cKS=kj
set jj[cKS]=1033
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 278")
set cKS=0
endif
else
set Fj=Fj-1
set cKS=hj[Fj]
set jj[cKS]=1033
endif
set MM=MM-1
return cKS
endfunction
function oLS takes string SLS returns integer
local integer cLS
set w3[MM]=SLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cLS=kj
set jj[cLS]=1041
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 364")
set cLS=0
endif
else
set Fj=Fj-1
set cLS=hj[Fj]
set jj[cLS]=1041
endif
set MM=MM-1
return cLS
endfunction
function r4u takes nothing returns integer
return Wn
endfunction
function rHS takes string wHS returns integer
local integer uHS
set w3[MM]=wHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uHS=kj
set jj[uHS]=1014
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 112")
set uHS=0
endif
else
set Fj=Fj-1
set uHS=hj[Fj]
set jj[uHS]=1014
endif
set MM=MM-1
return uHS
endfunction
function rJS takes string wJS returns integer
local integer uJS
set w3[MM]=wJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uJS=kj
set jj[uJS]=1028
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 180")
set uJS=0
endif
else
set Fj=Fj-1
set uJS=hj[Fj]
set jj[uJS]=1028
endif
set MM=MM-1
return uJS
endfunction
function rKS takes string wKS returns integer
local integer uKS
set w3[MM]=wKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uKS=kj
set jj[uKS]=1031
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 272")
set uKS=0
endif
else
set Fj=Fj-1
set uKS=hj[Fj]
set jj[uKS]=1031
endif
set MM=MM-1
return uKS
endfunction
function rLS takes string wLS returns integer
local integer uLS
set w3[MM]=wLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uLS=kj
set jj[uLS]=858
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 349")
set uLS=0
endif
else
set Fj=Fj-1
set uLS=hj[Fj]
set jj[uLS]=858
endif
set MM=MM-1
return uLS
endfunction
function PXS takes string UXS returns integer
local integer IXS
set w3[MM]=UXS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set IXS=yx
set px[IXS]=1418
else
call Mau("Out of memory: Could not create BuiltinSpecialForm.","when calling error in ScmdDataTypes, line 1538")
set IXS=0
endif
else
set bx=bx-1
set IXS=lx[bx]
set px[IXS]=1418
endif
set MM=MM-1
return IXS
endfunction
function MJt takes integer BJt,string NJt returns nothing
set w3[MM]=NJt
set MM=MM+1
set rK[BJt]=rDs("when calling new_HashList in ScmdDataTypes, line 1429")
set sK[BJt]=0
set MM=MM-1
endfunction
function VJt takes integer XJt,string CJt returns nothing
set w3[MM]=CJt
set MM=MM+1
call MJt(XJt,"when calling construct_BuiltinSpecialForm_BuiltinModule in ScmdDataTypes, line 1428")
set MM=MM-1
endfunction
function jJt takes integer gJt,integer hJt,string FJt returns nothing
local integer kJt
set w3[MM]=FJt
set MM=MM+1
if BJ[hJt]then
if sK[gJt]!=0 then
call R4o(sK[gJt],"when calling dispatch_BuiltinData_destroyBuiltinData in ScmdDataTypes, line 1435")
endif
set sK[gJt]=hJt
else
call Nno(rK[gJt],0,"when calling add in ScmdDataTypes, line 1438")
set kJt=yZc(rK[gJt],"when calling size in ScmdDataTypes, line 1439")-2
loop
exitwhen not(kJt>=0 and VJ[hJt]<VJ[TZc(rK[gJt],kJt,"when calling get in ScmdDataTypes, line 1440")])
call BEc(rK[gJt],kJt+1,TZc(rK[gJt],kJt,"when calling get in ScmdDataTypes, line 1441"),"when calling set in ScmdDataTypes, line 1441")
set kJt=kJt-1
endloop
call BEc(rK[gJt],kJt+1,hJt,"when calling set in ScmdDataTypes, line 1443")
endif
set MM=MM-1
endfunction
function t2o takes integer u2o,integer r2o,string s2o returns nothing
set w3[MM]=s2o
set MM=MM+1
if px[u2o]==0 then
if u2o==0 then
call Mau("Nullpointer exception when calling BuiltinSpecialForm.addOverload","when calling error in ScmdDataTypes, line 1432")
else
call Mau("Called BuiltinSpecialForm.addOverload on invalid object.","when calling error in ScmdDataTypes, line 1432")
endif
endif
call jJt(u2o,r2o,"when calling addOverload in ScmdDataTypes, line 1432")
set MM=MM-1
endfunction
function cKt takes integer tKt,integer iKt,string SKt returns nothing
set w3[MM]=SKt
set MM=MM+1
call VJt(tKt,"when calling BuiltinSpecialForm_init in ScmdDataTypes, line 1544")
call t2o(tKt,iKt,"when calling addOverload in ScmdDataTypes, line 1545")
set MM=MM-1
endfunction
function sKt takes integer wKt,string uKt returns integer
local integer rKt
set w3[MM]=uKt
set MM=MM+1
set rKt=PXS("when calling alloc_BuiltinSpecialForm in ScmdDataTypes, line 1544")
call cKt(rKt,wKt,"when calling construct_BuiltinSpecialForm in ScmdDataTypes, line 1544")
set MM=MM-1
return rKt
endfunction
function vno takes integer Fno,integer kno,string jno returns integer
local integer xno
set w3[MM]=jno
set MM=MM+1
set xno=a4s("when calling new_LinkedList in LinkedList, line 406")
call Cqo(xno,Fno,"when calling add in LinkedList, line 408")
call Cqo(xno,kno,"when calling add in LinkedList, line 408")
set MM=MM-1
return xno
endfunction
function xHS takes string kHS returns integer
local integer jHS
set w3[MM]=kHS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jHS=kj
set jj[jHS]=1020
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 156")
set jHS=0
endif
else
set Fj=Fj-1
set jHS=hj[Fj]
set jj[jHS]=1020
endif
set MM=MM-1
return jHS
endfunction
function xJS takes string kJS returns integer
local integer jJS
set w3[MM]=kJS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jJS=kj
set jj[jJS]=1170
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 237")
set jJS=0
endif
else
set Fj=Fj-1
set jJS=hj[Fj]
set jj[jJS]=1170
endif
set MM=MM-1
return jJS
endfunction
function xKS takes string kKS returns integer
local integer jKS
set w3[MM]=kKS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jKS=kj
set jj[jKS]=857
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 298")
set jKS=0
endif
else
set Fj=Fj-1
set jKS=hj[Fj]
set jj[jKS]=857
endif
set MM=MM-1
return jKS
endfunction
function xLS takes string kLS returns integer
local integer jLS
set w3[MM]=kLS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jLS=kj
set jj[jLS]=1091
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 444")
set jLS=0
endif
else
set Fj=Fj-1
set jLS=hj[Fj]
set jj[jLS]=1091
endif
set MM=MM-1
return jLS
endfunction
function y4u takes nothing returns integer
return In
endfunction
function C3u takes string rNu returns boolean
local integer sNu
local integer tNu
local integer iNu
local integer SNu
local integer cNu
local integer oNu
local integer ONu
local integer lNu
local integer bNu
local integer yNu
local integer pNu
local integer eNu
local integer qNu
local integer aNu
local integer nNu
local integer dNu
local integer fNu
local integer RNu
local integer TNu
local integer YNu
local integer GNu
local integer gNu
local integer hNu
local integer FNu
local integer kNu
local integer jNu
local integer xNu
local integer vNu
local integer mNu
local integer QNu
local integer WNu
local integer ENu
local integer ZNu
local integer UNu
local integer INu
local integer PNu
local integer ANu
local integer DNu
local integer HNu
local integer JNu
local integer KNu
local integer LNu
local integer XNu
local integer CNu
local integer VNu
local integer BNu
local integer NNu
local integer MNu
local integer wMu
local integer uMu
local integer rMu
local integer sMu
local integer tMu
local integer iMu
local integer SMu
local integer cMu
local integer oMu
local integer OMu
local integer lMu
local integer bMu
local integer yMu
local integer pMu
local integer eMu
local integer qMu
local integer aMu
local integer nMu
local integer dMu
local integer fMu
local integer RMu
local integer TMu
local integer YMu
local integer GMu
local integer gMu
local integer hMu
local integer FMu
local integer kMu
local integer jMu
local integer xMu
local integer vMu
local integer mMu
local integer QMu
local integer WMu
local integer EMu
local integer ZMu
local integer UMu
local integer IMu
local integer PMu
local integer AMu
local integer DMu
local integer HMu
local integer JMu
local integer KMu
local integer LMu
local integer XMu
local integer CMu
local integer VMu
local integer BMu
local integer NMu
local integer MMu
local integer w3u
local integer u3u
local integer r3u
local integer s3u
local integer t3u
local integer i3u
local integer S3u
local integer c3u
local integer o3u
local integer O3u
local integer l3u
local integer b3u
local integer y3u
local integer p3u
local integer e3u
local integer q3u
local integer a3u
local integer n3u
local integer d3u
local integer f3u
local integer R3u
local integer T3u
local integer Y3u
local integer G3u
local integer g3u
local integer h3u
local integer F3u
local integer k3u
local integer j3u
local integer x3u
local integer v3u
local integer m3u
local integer Q3u
local integer W3u
local integer E3u
local integer Z3u
local integer U3u
local integer I3u
local integer P3u
local integer A3u
local integer D3u
local integer H3u
local integer J3u
local integer K3u
local integer L3u
local integer X3u
set w3[MM]=rNu
set MM=MM+1
set sNu=QDS("when calling alloc_IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 10")
set tNu=eDt(sNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 10")
call hno(tNu,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 24")
call jBu(WHt(tNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 10"),"+","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 10")
set iNu=ZDS("when calling alloc_IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 25")
set SNu=eDt(iNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 25")
call hno(SNu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 39")
call jBu(WHt(SNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 25"),"*","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 25")
set cNu=PDS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 40")
set oNu=eDt(cNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 40")
call Fao(oNu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 60")
set ONu=oNu
call hno(ONu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 60")
call jBu(WHt(ONu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 40"),"-","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 40")
set lNu=HDS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 61")
set bNu=eDt(lNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 61")
call Fao(bNu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 86")
set yNu=bNu
call hno(yNu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 86")
call jBu(WHt(yNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 61"),"/","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 61")
set pNu=LDS("when calling alloc_IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 87")
set eNu=eDt(pNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 87")
call hno(eNu,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 97")
call jBu(WHt(eNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 87"),"println","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 87")
set qNu=VDS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 106")
set aNu=eDt(qNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 106")
call Fao(aNu,N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 108")
call jBu(sKt(aNu,"when calling new_BuiltinSpecialForm in ScmdCoreBuiltins, line 106"),"quote","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 106")
set nNu=MDS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 109")
set dNu=eDt(nNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 109")
call Fao(dNu,N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 111")
call jBu(WHt(dNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 109"),"throw","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 109")
set fNu=rHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 112")
set RNu=eDt(fNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 112")
call Fao(RNu,N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 114")
call jBu(WHt(RNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 112"),"identity","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 112")
set TNu=iHS("when calling alloc_IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 117")
set YNu=eDt(TNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 117")
call hno(YNu,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 122")
call jBu(WHt(YNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 117"),"str","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 117")
set GNu=oHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 123")
set gNu=eDt(GNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 123")
call Fao(gNu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 125")
call jBu(WHt(gNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 123"),"strlen","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 123")
set hNu=bHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 126")
set FNu=eDt(hNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 126")
call Fao(FNu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 128")
call jBu(WHt(FNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 126"),"hash","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 126")
set kNu=eHS("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 129")
set jNu=eDt(kNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 129")
call dao(jNu,o2u(),m4u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 131")
set mNu=WHt(jNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 129")
set H3u=mNu
set xNu=nHS("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 131")
set vNu=eDt(xNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 131")
call Pao(vNu,o2u(),m4u(),m4u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 133")
call C4o(H3u,vNu,"when calling addOverload in ScmdCoreBuiltins, line 131")
call jBu(mNu,"subs","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 129")
set QNu=RHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 134")
set WNu=eDt(QNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 134")
call Fao(WNu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 148")
call jBu(WHt(WNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 134"),"reverse","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 134")
set ENu=GHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 149")
set ZNu=eDt(ENu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 149")
call Pao(ZNu,o2u(),o2u(),o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 151")
call jBu(WHt(ZNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 149"),"replace","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 149")
set UNu=FHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 152")
set INu=eDt(UNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 152")
call Fao(INu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 155")
call jBu(WHt(INu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 152"),"capitalize","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 152")
set PNu=xHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 156")
set ANu=eDt(PNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 156")
call Fao(ANu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 158")
call jBu(WHt(ANu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 156"),"lower-case","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 156")
set DNu=QHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 159")
set HNu=eDt(DNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 159")
call Fao(HNu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 161")
call jBu(WHt(HNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 159"),"upper-case","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 159")
set JNu=ZHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 162")
set KNu=eDt(JNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 162")
call Fao(KNu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 164")
call jBu(WHt(KNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 162"),"trim","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 162")
set LNu=PHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 165")
set XNu=eDt(LNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 165")
call Fao(XNu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 167")
call jBu(WHt(XNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 165"),"triml","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 165")
set CNu=HHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 168")
set VNu=eDt(CNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 168")
call Fao(VNu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 170")
call jBu(WHt(VNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 168"),"trimr","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 168")
set BNu=LHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 171")
set NNu=eDt(BNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 171")
call Fao(NNu,N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 173")
call jBu(WHt(NNu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 171"),"string?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 171")
set MNu=VHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 174")
set wMu=eDt(MNu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 174")
call Fao(wMu,o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 176")
call jBu(WHt(wMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 174"),"blank?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 174")
set uMu=MHS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 177")
set rMu=eDt(uMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 177")
call dao(rMu,o2u(),o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 179")
call jBu(WHt(rMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 177"),"starts-with?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 177")
set sMu=rJS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 180")
set tMu=eDt(sMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 180")
call dao(tMu,o2u(),o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 182")
call jBu(WHt(tMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 180"),"ends-with?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 180")
set iMu=iJS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 183")
set SMu=eDt(iMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 183")
call dao(SMu,o2u(),o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 185")
call jBu(WHt(SMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 183"),"includes?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 183")
set cMu=oJS("when calling alloc_IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 210")
set oMu=eDt(cMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 210")
call hno(oMu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 212")
call jBu(WHt(oMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 210"),"+","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 210")
set OMu=nJS("when calling alloc_IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 213")
set lMu=eDt(OMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 213")
call hno(lMu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 215")
call jBu(WHt(lMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 213"),"*","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 213")
set bMu=FJS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 216")
set yMu=eDt(bMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 216")
call Fao(yMu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 236")
set pMu=yMu
call hno(pMu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 236")
call jBu(WHt(pMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 216"),"-","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 216")
set eMu=xJS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 237")
set qMu=eDt(eMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 237")
call Fao(qMu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 262")
set aMu=qMu
call hno(aMu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 262")
call jBu(WHt(aMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 237"),"/","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 237")
set nMu=QJS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 263")
set dMu=eDt(nMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 263")
call Fao(dMu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 265")
set fMu=dMu
call hno(fMu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 265")
call jBu(WHt(fMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 263"),"max","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 263")
set RMu=HJS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 266")
set TMu=eDt(RMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 266")
call Fao(TMu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 268")
set YMu=TMu
call hno(YMu,M1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 268")
call jBu(WHt(YMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 266"),"min","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 266")
set GMu=MJS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 269")
set gMu=eDt(GMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 269")
call Fao(gMu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 271")
call jBu(WHt(gMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 269"),"int","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 269")
set hMu=rKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 272")
set FMu=eDt(hMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 272")
call Fao(FMu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 274")
call jBu(WHt(FMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 272"),"zero?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 272")
set kMu=iKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 275")
set jMu=eDt(kMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 275")
call Fao(jMu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 277")
call jBu(WHt(jMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 275"),"pos?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 275")
set xMu=oKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 278")
set vMu=eDt(xMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 278")
call Fao(vMu,M1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 280")
call jBu(WHt(vMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 278"),"neg?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 278")
set mMu=bKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 281")
set QMu=eDt(mMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 281")
call Fao(QMu,m4u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 283")
call jBu(WHt(QMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 281"),"even?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 281")
set WMu=eKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 284")
set EMu=eDt(WMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 284")
call Fao(EMu,m4u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 286")
call jBu(WHt(EMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 284"),"odd?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 284")
set ZMu=nKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 287")
set UMu=eDt(ZMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 287")
call Fao(UMu,N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 289")
call IBu(WHt(UMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 287"),vno(Rvr("int?","when calling stringToIndex in ScmdCoreBuiltins, line 289"),Rvr("integer?","when calling stringToIndex in ScmdCoreBuiltins, line 289"),"when calling asList in ScmdCoreBuiltins, line 289"),"when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 287")
set IMu=RKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 290")
set PMu=eDt(IMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 290")
call Fao(PMu,N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 292")
call jBu(WHt(PMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 290"),"real?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 290")
set AMu=GKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 293")
set DMu=eDt(AMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 293")
call Fao(DMu,N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 295")
call jBu(WHt(DMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 293"),"number?","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 293")
set HMu=FKS("when calling alloc_IBuiltin_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 296")
set LMu=WHt(eDt(HMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 296"),"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 296")
set J3u=LMu
set JMu=xKS("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 298")
set KMu=eDt(JMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 298")
call Fao(KMu,w2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 301")
call C4o(J3u,KMu,"when calling addOverload in ScmdCoreBuiltins, line 298")
call jBu(LMu,"rand","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 296")
set XMu=QKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 302")
set CMu=eDt(XMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 302")
call Fao(CMu,m4u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 305")
call jBu(WHt(CMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 302"),"rand-int","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 302")
set VMu=ZKS("when calling alloc_IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 307")
set BMu=eDt(VMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 307")
call hno(BMu,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 312")
call jBu(WHt(BMu,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 307"),"vector","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 307")
set NMu=PKS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 313")
set MMu=eDt(NMu,"when calling new_BuiltinData in ScmdCoreBuiltins, line 313")
call dao(MMu,g5u(),N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 320")
set w3u=MMu
call hno(w3u,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 320")
call jBu(WHt(w3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 313"),"conj","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 313")
set u3u=HKS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 321")
set r3u=eDt(u3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 321")
call dao(r3u,g5u(),m4u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 325")
call jBu(WHt(r3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 321"),"nth","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 321")
set s3u=LKS("when calling alloc_IBuiltin_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 326")
set t3u=eDt(s3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 326")
call hno(t3u,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 328")
call jBu(WHt(t3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 326"),"do","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 326")
set i3u=VKS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 329")
set S3u=eDt(i3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 329")
call Fao(S3u,w2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 348")
set c3u=S3u
call hno(c3u,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 348")
call jBu(sKt(c3u,"when calling new_BuiltinSpecialForm in ScmdCoreBuiltins, line 329"),"do-after","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 329")
set o3u=rLS("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 349")
set O3u=eDt(o3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 349")
call dao(O3u,N1u(),N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 356")
set y3u=sKt(O3u,"when calling new_BuiltinSpecialForm in ScmdCoreBuiltins, line 349")
set K3u=y3u
set l3u=iLS("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 356")
set b3u=eDt(l3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 356")
call Pao(b3u,N1u(),N1u(),N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 363")
call t2o(K3u,b3u,"when calling addOverload in ScmdCoreBuiltins, line 356")
call jBu(y3u,"if","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 349")
set p3u=oLS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 364")
set e3u=eDt(p3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 364")
call Fao(e3u,y4u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 366")
call jBu(WHt(e3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 364"),"not","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 364")
set q3u=bLS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 367")
set a3u=eDt(q3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 367")
call Fao(a3u,N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 374")
set n3u=a3u
call hno(n3u,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 374")
call jBu(WHt(n3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 367"),"=","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 367")
set d3u=eLS("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 375")
set f3u=eDt(d3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 375")
call dao(f3u,o2u(),N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 377")
set Y3u=WHt(f3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 375")
set L3u=Y3u
set R3u=nLS("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 377")
set T3u=eDt(R3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 377")
call Pao(T3u,o2u(),o2u(),N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 379")
call C4o(L3u,T3u,"when calling addOverload in ScmdCoreBuiltins, line 377")
call jBu(Y3u,"def","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 375")
set G3u=RLS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 380")
set g3u=eDt(G3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 380")
call dao(g3u,o2u(),o2u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 387")
call jBu(WHt(g3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 380"),"alias","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 380")
set h3u=GLS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 388")
set F3u=eDt(h3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 388")
call dao(F3u,r4u(),g5u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 412")
set k3u=F3u
call hno(k3u,g5u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 412")
call jBu(WHt(k3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 388"),"mapv","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 388")
set j3u=FLS("when calling alloc_IBuiltin_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 413")
set x3u=eDt(j3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 413")
call Fao(x3u,r4u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 429")
set v3u=x3u
call hno(v3u,N1u(),"when calling setVariadicArgumentTypes in ScmdCoreBuiltins, line 429")
call jBu(WHt(v3u,"when calling new_BuiltinFunction in ScmdCoreBuiltins, line 413"),"apply","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 413")
set m3u=xLS("when calling alloc_IBuiltin_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 444")
set Q3u=eDt(m3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 444")
call dao(Q3u,N1u(),N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 446")
set W3u=Q3u
call P4o(W3u,"when calling setProvidingEnumUnit in ScmdCoreBuiltins, line 446")
call jBu(sKt(W3u,"when calling new_BuiltinSpecialForm in ScmdCoreBuiltins, line 444"),"fn","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 444")
set E3u=QLS("when calling alloc_IBuiltin_setArgumentsTypes_setProvidingEnumUnit_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 457")
set Z3u=eDt(E3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 457")
call Pao(Z3u,o2u(),N1u(),N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 459")
set U3u=Z3u
call P4o(U3u,"when calling setProvidingEnumUnit in ScmdCoreBuiltins, line 459")
set D3u=sKt(U3u,"when calling new_BuiltinSpecialForm in ScmdCoreBuiltins, line 457")
set X3u=D3u
set I3u=ZLS("when calling alloc_IBuiltin_setArgumentsTypes_setProvidingEnumUnit_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 459")
set P3u=eDt(I3u,"when calling new_BuiltinData in ScmdCoreBuiltins, line 459")
call nno(P3u,o2u(),o2u(),N1u(),N1u(),"when calling setArgumentsTypes in ScmdCoreBuiltins, line 461")
set A3u=P3u
call P4o(A3u,"when calling setProvidingEnumUnit in ScmdCoreBuiltins, line 461")
call t2o(X3u,A3u,"when calling addOverload in ScmdCoreBuiltins, line 459")
call jBu(D3u,"defn","when calling registerProtectedBuiltin in ScmdCoreBuiltins, line 457")
set MM=MM-1
return true
endfunction
function GRo takes nothing returns boolean
set MM=0
return C3u("ScmdCoreBuiltins, line 1")
endfunction
function sSu takes string rSu returns nothing
set w3[MM]=rSu
set MM=MM+1
call VSu("when calling generalEventCallback in ClosureEvents, line 294")
set MM=MM-1
endfunction
function GTo takes nothing returns nothing
set MM=0
call sSu("ClosureEvents, line 294")
endfunction
function GTu takes nothing returns boolean
set Ge=InitHashtable()
set ge=InitHashtable()
return true
endfunction
function G_u takes nothing returns boolean
return true
endfunction
function H4w takes nothing returns nothing
call ForGroupBJ(qs,ilw)
call ForGroupBJ(es,Slw)
endfunction
function H6w takes nothing returns nothing
local group D6w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(D6w,GetSpellTargetLoc(),300.,Condition(lbw))
call ForGroup(D6w,bbw)
call DestroyGroup(D6w)
set D6w=null
set D6w=null
endfunction
function H9u takes nothing returns nothing
local timer P9u=CreateTimer()
local location A9u=GetUnitLoc(GetSpellAbilityUnit())
local location D9u=GetSpellTargetLoc()
call SaveLocationHandle(nr,GetHandleId(P9u),StringHash("l1"),A9u)
call SaveLocationHandle(nr,GetHandleId(P9u),StringHash("l2"),D9u)
set A9u=null
set D9u=null
call SaveInteger(nr,GetHandleId(P9u),StringHash("i"),1)
call TimerStart(P9u,0.1,true,fyw)
set P9u=null
set P9u=null
set A9u=null
set D9u=null
endfunction
function ACw takes nothing returns boolean
if not GetBooleanAnd(GetUnitAbilityLevelSwapped(1093684023,GetEnumUnit())==0,GetUnitAbilityLevelSwapped(1093684022,GetEnumUnit())==0)then
return false
endif
return true
endfunction
function DCw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function HCw takes nothing returns nothing
if DCw()then
if ACw()then
call UnitAddAbilityBJ(1093684022,GetEnumUnit())
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1093684022)
endif
endif
endfunction
function HGu takes nothing returns boolean
set Qe="ReplaceableTextures\\CommandButtons\\BTNSelectHeroOn.blp"
set We="ReplaceableTextures\\CommandButtons\\BTNSell.blp"
return true
endfunction
function HLw takes nothing returns nothing
set gs[3]=1
loop
exitwhen gs[3]>gs[2]
if IsUnitInGroup(ms[gs[3]],Ys)==true then
if Fs[gs[3]]<Rs[gs[3]]then
call QueueUnitAnimation(ms[gs[3]],fs[gs[3]])
set xs[1]=GetUnitLoc(ms[gs[3]])
set xs[2]=PolarProjectionBJ(xs[1],js[gs[3]],ds[gs[3]])
if vs[gs[3]]==true then
call EnumDestructablesInCircleBJ(150.00,xs[2],RSw)
endif
call SetUnitPositionLoc(ms[gs[3]],xs[2])
set Fs[gs[3]]=Fs[gs[3]]+js[gs[3]]
if GetRandomInt(1,5)==1 then
call DestroyEffect(AddSpecialEffectTarget(Ts[gs[3]],ms[gs[3]],"chest"))
endif
set ks[gs[3]]=ks[gs[3]]+180.00/(Rs[gs[3]]/js[gs[3]])
set hs[gs[3]]=SinBJ(ks[gs[3]])*Gs[gs[3]]
call SetUnitFlyHeight(ms[gs[3]],hs[gs[3]],1000000000.00)
call RemoveLocation(xs[1])
call RemoveLocation(xs[2])
else
call SetUnitPathing(ms[gs[3]],true)
call GroupRemoveUnit(Ys,ms[gs[3]])
call SetUnitTimeScale(ms[gs[3]],1.)
call SetUnitAnimation(ms[gs[3]],"stand")
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl",Ks[gs[3]],"chest"))
call UnitDamageTarget(ms[gs[3]],Ks[gs[3]],225.*(2.-GetUnitState(Ks[gs[3]],UNIT_STATE_LIFE)/GetUnitState(Ks[gs[3]],UNIT_STATE_MAX_LIFE)),true,true,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
if GetUnitState(Ks[gs[3]],UNIT_STATE_LIFE)/GetUnitState(Ks[gs[3]],UNIT_STATE_MAX_LIFE)<=0.25 then
call iTw(1.)
call UnitRemoveAbility(ms[gs[3]],1095722360)
call UnitAddAbility(ms[gs[3]],1095722360)
call UnitMakeAbilityPermanent(ms[gs[3]],true,1095722360)
endif
set ks[gs[3]]=0.00
set gs[1]=gs[1]-1
if gs[1]==0 then
set gs[2]=0
call DisableTrigger(GetTriggeringTrigger())
endif
endif
endif
set gs[3]=gs[3]+1
endloop
endfunction
function ZSc takes string WSc returns integer
local integer ESc
set w3[MM]=WSc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set ESc=cg
set og[ESc]=1472
else
call Mau("Out of memory: Could not create OnPointCast_onPointCast_SotfrpGuiLocust.","when calling error in SotfrpGuiLocust, line 24")
set ESc=0
endif
else
set Sg=Sg-1
set ESc=ig[Sg]
set og[ESc]=1472
endif
set MM=MM-1
return ESc
endfunction
function CTr takes string ATr returns boolean
local integer DTr
local integer HTr
local unit JTr
local integer KTr
local unit LTr
local integer XTr
set w3[MM]=ATr
set MM=MM+1
set Bf=1095577709
set DTr=0
set HTr=bj_MAX_PLAYERS-1
loop
exitwhen DTr>HTr
set JTr=Ofr(DTr)
if JTr!=null then
set LTr=JTr
set XTr=Bf
set KTr=ZSc("when calling alloc_OnPointCast_onPointCast_SotfrpGuiLocust in SotfrpGuiLocust, line 24")
call kYs(KTr)
set DL[KTr]=DTr
call ESu(LTr,XTr,KTr,"when calling onPointCast in SotfrpGuiLocust, line 24")
endif
set DTr=DTr+1
endloop
set MM=MM-1
set JTr=null
set LTr=null
return true
endfunction
function HRo takes nothing returns boolean
set MM=0
return CTr("SotfrpGuiLocust, line 1")
endfunction
function HUu takes nothing returns boolean
set Pa=128*16
return true
endfunction
function HUw takes nothing returns boolean
return GetEventPlayerChatString()=="ai 1 on" or GetEventPlayerChatString()=="ai 1 off" or GetEventPlayerChatString()=="ai 2 on" or GetEventPlayerChatString()=="ai 2 off"
endfunction
function HVw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true and GetUnitAbilityLevel(GetEnumUnit(),1093683783)==0 and GetUnitAbilityLevel(GetEnumUnit(),1093683784)==0 then
call UnitAddAbility(GetEnumUnit(),1093683783)
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1093683783)
endif
endfunction
function DWw takes nothing returns boolean
if GetSpellAbilityId()==1414358065 then
return true
endif
if GetSpellAbilityId()==1414358066 then
return true
endif
if GetSpellAbilityId()==1414358067 then
return true
endif
if GetSpellAbilityId()==1414358068 then
return true
endif
return false
endfunction
function HWw takes nothing returns boolean
if not(gw==true)then
return false
endif
if not DWw()then
return false
endif
return true
endfunction
function jTw takes string FTw returns nothing
local sound kTw=CreateSound(FTw,false,true,true,10,10,"CombatSoundsEAX")
call SetSoundChannel(kTw,5)
call SetSoundVolume(kTw,127)
call SetSoundPitch(kTw,1.)
call SetSoundDistances(kTw,999999.,99999.)
call SetSoundDistanceCutoff(kTw,99999.)
call SetSoundConeAngles(kTw,0.0,0.0,127)
call SetSoundConeOrientation(kTw,0.0,0.0,0.0)
call SetSoundPosition(kTw,0.0,0.0,50.0)
call StartSound(kTw)
call StopSound(kTw,false,false)
set kTw=null
set kTw=null
endfunction
function HZw takes nothing returns nothing
call jTw("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldTarget.wav")
call jTw("Abilities\\Spells\\Orc\\EtherealForm\\SpiritWalkerMorph.wav")
endfunction
function UFw takes unit EFw returns nothing
local timer ZFw=ITw()
call SaveUnitHandle(i,y,GetHandleId(ZFw),EFw)
call TimerStart(ZFw,0.,false,lww_3411)
set ZFw=null
set ZFw=null
endfunction
function H_u takes nothing returns boolean
call UFw(ry)
return true
endfunction
function Plc takes string Ulc returns integer
local integer Ilc
set w3[MM]=Ulc
set MM=MM+1
if Rh==0 then
if Th<32768 then
set Th=Th+1
set Ilc=Th
set Yh[Ilc]=1655
else
call Mau("Out of memory: Could not create Table.","when calling error in Table, line 6")
set Ilc=0
endif
else
set Rh=Rh-1
set Ilc=fh[Rh]
set Yh[Ilc]=1655
endif
set MM=MM-1
return Ilc
endfunction
function O7S takes string c7S returns integer
local integer o7S
set w3[MM]=c7S
set MM=MM+1
set o7S=Plc("when calling alloc_Table in Table, line 5")
call b7S(o7S)
set MM=MM-1
return o7S
endfunction
function Akr takes string Pkr returns boolean
set w3[MM]=Pkr
set MM=MM+1
set iT=0
set ST=O7S("when calling new_Table in TimerUtils, line 13")
set cT=679645218
call HDs("when calling new_HashMap in TimerUtils, line 59")
set MM=MM-1
return true
endfunction
function Hfo takes nothing returns boolean
set MM=0
return Akr("TimerUtils, line 1")
endfunction
function Hjw takes nothing returns nothing
set Ju[8]=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[8],bj_UNIT_FACING)
call UnitAddAbilityBJ(1093678670,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093678670,GetLastCreatedUnit(),Mu)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"thunderbolt",GetEnumUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
endfunction
function Hku takes nothing returns boolean
set Ne=3.141592654
set Me=6.28318
set wq=1.570796326
return true
endfunction
function Hmw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call CreateDestructableLoc(1146385016,G,270.00,1.00,0)
call RemoveLocation(G)
endfunction
function Hvw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function Dxw takes nothing returns boolean
if not(RectContainsLoc(GetPlayableMapRect(),Ju[9])==false)then
return false
endif
return true
endfunction
function Hxw takes nothing returns nothing
set Ju[9]=GetSpellTargetLoc()
if Dxw()then
call IssueImmediateOrderBJ(GetTriggerUnit(),"stop")
set Xu=GetForceOfPlayer(GetOwningPlayer(GetTriggerUnit()))
call DisplayTextToForce(Xu,"TRIGSTR_8544")
call DestroyForce(Xu)
endif
call RemoveLocation(Ju[9])
endfunction
function I1w takes nothing returns nothing
local unit m1w=GetSpellTargetUnit()
local unit Q1w=GetSpellAbilityUnit()
local real W1w=GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_LIFE)
local real E1w=GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_MANA)
local integer U1w=0
local effect Z1w
if IsUnitInGroup(Q1w,rs)==true then
call GroupRemoveUnit(rs,Q1w)
call iTw(1.)
endif
call GroupAddUnit(rs,Q1w)
call UnitAddAbility(Q1w,1093683017)
call UnitMakeAbilityPermanent(Q1w,true,1093683017)
call AddSpecialEffectLoc("Abilities\\Spells\\Undead\\DeathPact\\DeathPactTarget.mdl",GetUnitLoc(m1w))
call AddSpecialEffectLoc("Abilities\\Spells\\Undead\\DeathPact\\DeathPactCaster.mdl",GetUnitLoc(m1w))
call AddSpecialEffectLoc("Objects\\Spawnmodels\\Undead\\UndeadDissipate\\UndeadDissipate.mdl",GetUnitLoc(m1w))
call AddSpecialEffectLoc("Abilities\\Spells\\Undead\\DeathPact\\DeathPactTarget.mdl",GetUnitLoc(Q1w))
call AddSpecialEffectLoc("Abilities\\Spells\\Undead\\DeathPact\\DeathPactCaster.mdl",GetUnitLoc(Q1w))
set Z1w=AddSpecialEffectTarget("Abilities\\Spells\\Undead\\DarkSummoning\\DarkSummonMissile.mdl",Q1w,"chest")
call SetUnitExploded(m1w,true)
call KillUnit(m1w)
if GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682260)==3 then
call UnitAddAbility(Q1w,1093682481)
call UnitMakeAbilityPermanent(Q1w,true,1093682481)
call SetUnitState(Q1w,UNIT_STATE_LIFE,W1w+375.)
call UnitAddAbility(Q1w,1093682482)
call UnitMakeAbilityPermanent(Q1w,true,1093682482)
call SetUnitState(Q1w,UNIT_STATE_MANA,E1w+375.)
call UnitAddAbility(Q1w,1093682263)
call UnitMakeAbilityPermanent(Q1w,true,1093682263)
elseif GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682260)==2 then
call UnitAddAbility(Q1w,1093682266)
call UnitMakeAbilityPermanent(Q1w,true,1093682266)
call SetUnitState(Q1w,UNIT_STATE_LIFE,W1w+250.)
call UnitAddAbility(Q1w,1093682480)
call UnitMakeAbilityPermanent(Q1w,true,1093682480)
call SetUnitState(Q1w,UNIT_STATE_MANA,E1w+250.)
call UnitAddAbility(Q1w,1093682262)
call UnitMakeAbilityPermanent(Q1w,true,1093682262)
elseif GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682260)==1 then
call UnitAddAbility(Q1w,1093682264)
call UnitMakeAbilityPermanent(Q1w,true,1093682264)
call SetUnitState(Q1w,UNIT_STATE_LIFE,W1w+125.)
call UnitAddAbility(Q1w,1093682265)
call UnitMakeAbilityPermanent(Q1w,true,1093682265)
call SetUnitState(Q1w,UNIT_STATE_MANA,E1w+125.)
call UnitAddAbility(Q1w,1093682261)
call UnitMakeAbilityPermanent(Q1w,true,1093682261)
endif
loop
exitwhen IsUnitInGroup(Q1w,rs)==false
call iTw(1.)
set U1w=U1w+1
if U1w==15 or GetUnitState(Q1w,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(rs,Q1w)
endif
endloop
call DestroyEffect(Z1w)
call UnitRemoveAbility(Q1w,1093683017)
call UnitRemoveAbility(Q1w,1110455110)
call UnitRemoveAbility(Q1w,1093682481)
call UnitRemoveAbility(Q1w,1093682482)
call UnitRemoveAbility(Q1w,1093682263)
call UnitRemoveAbility(Q1w,1093682266)
call UnitRemoveAbility(Q1w,1093682480)
call UnitRemoveAbility(Q1w,1093682262)
call UnitRemoveAbility(Q1w,1093682264)
call UnitRemoveAbility(Q1w,1093682265)
call UnitRemoveAbility(Q1w,1093682261)
set m1w=null
set Q1w=null
set W1w=0.
set E1w=0.
set Z1w=null
set U1w=0
set m1w=null
set Q1w=null
set Z1w=null
endfunction
function I3w takes nothing returns nothing
local integer E3w=1
local unit Z3w=GetSpellAbilityUnit()
local unit U3w=GetSpellTargetUnit()
loop
exitwhen E3w>1000000000
if ut[E3w]==null then
set ut[E3w]=Z3w
set rt[E3w]=U3w
call UnitRemoveAbility(ut[E3w],1093683783)
call UnitAddAbility(ut[E3w],1093683784)
call UnitMakeAbilityPermanent(ut[E3w],true,1093683784)
set E3w=0
set Z3w=null
set U3w=null
set Z3w=null
set U3w=null
return
endif
set E3w=E3w+1
endloop
set E3w=0
set Z3w=null
set U3w=null
set Z3w=null
set U3w=null
endfunction
function I4w takes nothing returns nothing
local group m4w=GetUnitsInRangeOfLocMatching(600.00,GetSpellTargetLoc(),Condition(rlw))
local unit Q4w=GetSpellAbilityUnit()
local unit W4w=null
local integer E4w=GetUnitAbilityLevel(Q4w,1093683536)
local integer Z4w=0
local integer U4w=0
if E4w==1 then
set U4w=85
elseif E4w==2 then
set U4w=125
elseif E4w==3 then
set U4w=180
endif
call GroupAddUnit(qs,Q4w)
call SetUnitPathing(Q4w,false)
call UnitAddAbility(Q4w,1093683533)
call UnitMakeAbilityPermanent(Q4w,true,1093683533)
loop
exitwhen IsUnitInGroup(Q4w,qs)==false
set W4w=FirstOfGroup(m4w)
call GroupRemoveUnit(m4w,W4w)
if BlzIsUnitInvulnerable(W4w)==false and GetUnitState(W4w,UNIT_STATE_LIFE)>0. and IsUnitLoaded(W4w)==false then
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",W4w,"overhead"))
call iTw(1.)
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl",GetUnitLoc(Q4w)))
call SetUnitPositionLoc(Q4w,GetUnitLoc(W4w))
call SetUnitFacing(Q4w,AngleBetweenPoints(GetUnitLoc(Q4w),GetUnitLoc(W4w)))
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdl",GetUnitLoc(Q4w)))
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl",W4w,"chest"))
call SetUnitAnimation(Q4w,"attack")
call UnitDamageTarget(Q4w,W4w,U4w,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
set Z4w=Z4w+1
endif
if Z4w==2+2*E4w or FirstOfGroup(m4w)==null or GetUnitState(Q4w,UNIT_STATE_LIFE)<=0. or IsUnitLoaded(Q4w)==true or GetUnitAbilityLevel(Q4w,1111844210)>0 or GetUnitAbilityLevel(Q4w,1115120994)>0 or GetUnitAbilityLevel(Q4w,1115120993)>0 or GetUnitAbilityLevel(Q4w,1113943667)>0 or GetUnitAbilityLevel(Q4w,1113943655)>0 or GetUnitAbilityLevel(Q4w,1113943649)>0 or GetUnitAbilityLevel(Q4w,1113880182)>0 or GetUnitAbilityLevel(Q4w,1114467444)>0 or GetUnitAbilityLevel(Q4w,1112757326)>0 or GetUnitAbilityLevel(Q4w,1112560453)>0 or GetUnitAbilityLevel(Q4w,1112896364)>0 or GetUnitAbilityLevel(Q4w,1112896372)>0 or GetUnitAbilityLevel(Q4w,1112896368)>0 or GetUnitAbilityLevel(Q4w,1113815395)>0 or GetUnitAbilityLevel(Q4w,1113815346)>0 then
call iTw(0.5)
call UnitRemoveAbility(Q4w,1093683533)
call SetUnitPathing(Q4w,true)
call GroupRemoveUnit(qs,Q4w)
call SetUnitAnimation(Q4w,"stand")
endif
endloop
call DestroyGroup(m4w)
set m4w=null
set Q4w=null
set W4w=null
set E4w=0
set Z4w=0
set U4w=0
set m4w=null
set Q4w=null
set W4w=null
endfunction
function I9u takes nothing returns nothing
local timer v9u=GetExpiredTimer()
local location m9u=LoadLocationHandle(nr,GetHandleId(v9u),StringHash("l1"))
local location Q9u=LoadLocationHandle(nr,GetHandleId(v9u),StringHash("l2"))
local integer W9u=LoadInteger(nr,GetHandleId(v9u),StringHash("i"))
local real E9u=GetLocationX(m9u)+W9u*250*Cos(Atan2(GetLocationY(Q9u)-GetLocationY(m9u),GetLocationX(Q9u)-GetLocationX(m9u)))
local real Z9u=GetLocationY(m9u)+W9u*250*Sin(Atan2(GetLocationY(Q9u)-GetLocationY(m9u),GetLocationX(Q9u)-GetLocationX(m9u)))
local unit U9u=CreateUnit(Player(PLAYER_NEUTRAL_PASSIVE),1747995215,E9u,Z9u,0.)
call UnitAddAbility(U9u,1095721574)
call IssuePointOrder(U9u,"flamestrike",E9u,Z9u)
call eRw(U9u,2.5)
set U9u=null
set W9u=W9u+1
if W9u==6 then
call FlushChildHashtable(nr,GetHandleId(v9u))
call DestroyTimer(v9u)
call RemoveLocation(m9u)
call RemoveLocation(Q9u)
else
call SaveInteger(nr,GetHandleId(v9u),StringHash("i"),W9u)
endif
set v9u=null
set m9u=null
set Q9u=null
set W9u=0
set v9u=null
set m9u=null
set Q9u=null
set U9u=null
endfunction
function EAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="pause timer")then
return false
endif
return true
endfunction
function UAw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,6)=="timer ")then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),7,9))>=0.00)then
return false
endif
return true
endfunction
function WAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="remove timer")then
return false
endif
return true
endfunction
function ZAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="unpause timer")then
return false
endif
return true
endfunction
function IAw takes nothing returns nothing
if WAw()then
call DestroyTimerDialogBJ(jw)
call PauseTimerBJ(true,xw)
endif
if EAw()then
call PauseTimerBJ(true,xw)
endif
if ZAw()then
call PauseTimerBJ(false,xw)
endif
if UAw()then
call DestroyTimerDialogBJ(jw)
call PauseTimerBJ(true,xw)
call StartTimerBJ(xw,false,S2R(SubStringBJ(GetEventPlayerChatString(),7,9))*60.00)
call CreateTimerDialogBJ(GetLastCreatedTimerBJ(),SubStringBJ(GetEventPlayerChatString(),11,StringLength(GetEventPlayerChatString())))
set jw=GetLastCreatedTimerDialogBJ()
endif
if true then
endif
endfunction
function UCw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function ICw takes nothing returns nothing
if UCw()then
call GroupRemoveUnitSimple(GetEnumUnit(),yt)
call UnitRemoveAbilityBJ(1093684023,GetEnumUnit())
call UnitRemoveAbilityBJ(1093684025,GetEnumUnit())
call UnitRemoveAbilityBJ(1093684022,GetEnumUnit())
endif
endfunction
function IIw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,1)=="@")then
return false
endif
return true
endfunction
function ILw takes nothing returns nothing
call KillDestructable(GetEnumDestructable())
endfunction
function Fcc takes string gcc returns integer
local integer hcc
set w3[MM]=gcc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hcc=kj
set jj[hcc]=1083
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 122")
set hcc=0
endif
else
set Fj=Fj-1
set hcc=hj[Fj]
set jj[hcc]=1083
endif
set MM=MM-1
return hcc
endfunction
function Foc takes string goc returns integer
local integer hoc
set w3[MM]=goc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set hoc=cg
set og[hoc]=1460
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 216")
set hoc=0
endif
else
set Sg=Sg-1
set hoc=ig[Sg]
set og[hoc]=1460
endif
set MM=MM-1
return hoc
endfunction
function G4u takes nothing returns integer
return Cn
endfunction
function GSu takes unit dSu,integer fSu,integer RSu,string TSu returns integer
local integer YSu
set w3[MM]=TSu
set MM=MM+1
set YSu=jSu(dSu,fSu,RSu,"when calling addSpellInternal in ClosureEvents, line 132")
set MM=MM-1
return YSu
endfunction
function Goc takes string Toc returns integer
local integer Yoc
set w3[MM]=Toc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set Yoc=cg
set og[Yoc]=1459
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 213")
set Yoc=0
endif
else
set Sg=Sg-1
set Yoc=ig[Sg]
set og[Yoc]=1459
endif
set MM=MM-1
return Yoc
endfunction
function Hoc takes string Aoc returns integer
local integer Doc
set w3[MM]=Aoc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set Doc=cg
set og[Doc]=1473
else
call Mau("Out of memory: Could not create OnPointCast_onPointCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 236")
set Doc=0
endif
else
set Sg=Sg-1
set Doc=ig[Sg]
set og[Doc]=1473
endif
set MM=MM-1
return Doc
endfunction
function Loc takes string Joc returns integer
local integer Koc
set w3[MM]=Joc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set Koc=cg
set og[Koc]=1465
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 245")
set Koc=0
endif
else
set Sg=Sg-1
set Koc=ig[Sg]
set og[Koc]=1465
endif
set MM=MM-1
return Koc
endfunction
function Pcc takes string Ucc returns integer
local integer Icc
set w3[MM]=Ucc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Icc=kj
set jj[Icc]=1084
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 158")
set Icc=0
endif
else
set Fj=Fj-1
set Icc=hj[Fj]
set jj[Icc]=1084
endif
set MM=MM-1
return Icc
endfunction
function Poc takes string Uoc returns integer
local integer Ioc
set w3[MM]=Uoc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set Ioc=cg
set og[Ioc]=1464
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 231")
set Ioc=0
endif
else
set Sg=Sg-1
set Ioc=ig[Sg]
set og[Ioc]=1464
endif
set MM=MM-1
return Ioc
endfunction
function Qcc takes string vcc returns integer
local integer mcc
set w3[MM]=vcc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mcc=kj
set jj[mcc]=1094
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 134")
set mcc=0
endif
else
set Fj=Fj-1
set mcc=hj[Fj]
set jj[mcc]=1094
endif
set MM=MM-1
return mcc
endfunction
function Qoc takes string voc returns integer
local integer moc
set w3[MM]=voc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set moc=cg
set og[moc]=1462
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 223")
set moc=0
endif
else
set Sg=Sg-1
set moc=ig[Sg]
set og[moc]=1462
endif
set MM=MM-1
return moc
endfunction
function Roc takes string doc returns integer
local integer foc
set w3[MM]=doc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set foc=cg
set og[foc]=1458
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 210")
set foc=0
endif
else
set Sg=Sg-1
set foc=ig[Sg]
set og[foc]=1458
endif
set MM=MM-1
return foc
endfunction
function Voc takes string Xoc returns integer
local integer Coc
set w3[MM]=Xoc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set Coc=cg
set og[Coc]=1466
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 249")
set Coc=0
endif
else
set Sg=Sg-1
set Coc=ig[Sg]
set og[Coc]=1466
endif
set MM=MM-1
return Coc
endfunction
function Zoc takes string Woc returns integer
local integer Eoc
set w3[MM]=Woc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set Eoc=cg
set og[Eoc]=1463
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 227")
set Eoc=0
endif
else
set Sg=Sg-1
set Eoc=ig[Sg]
set og[Eoc]=1463
endif
set MM=MM-1
return Eoc
endfunction
function YYr takes integer aYr,integer nYr,boolean dYr returns nothing
local player RYr=pa[aYr]
local integer TYr=nYr
local integer fYr
if dYr then
set fYr=1
else
set fYr=0
endif
call SetPlayerTechResearched(RYr,TYr,fYr)
set RYr=null
endfunction
function hYr takes integer GYr,integer gYr returns nothing
call YYr(GYr,gYr,true)
endfunction
function ncc takes string qcc returns integer
local integer acc
set w3[MM]=qcc
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set acc=pY
set eY[acc]=1598
else
call Mau("Out of memory: Could not create StringLevelClosure_presetBaseOrderID_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 37")
set acc=0
endif
else
set yY=yY-1
set acc=bY[yY]
set eY[acc]=1598
endif
set MM=MM-1
return acc
endfunction
function noc takes string qoc returns integer
local integer aoc
set w3[MM]=qoc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set aoc=cg
set og[aoc]=1457
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 207")
set aoc=0
endif
else
set Sg=Sg-1
set aoc=ig[Sg]
set og[aoc]=1457
endif
set MM=MM-1
return aoc
endfunction
function roc takes string woc returns integer
local integer uoc
set w3[MM]=woc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uoc=kj
set jj[uoc]=1085
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 180")
set uoc=0
endif
else
set Fj=Fj-1
set uoc=hj[Fj]
set jj[uoc]=1085
endif
set MM=MM-1
return uoc
endfunction
function BHs takes integer VHs returns nothing
endfunction
function rJs takes integer uJs returns nothing
call SDs(uJs)
call BHs(uJs)
endfunction
function rjS takes string wjS returns integer
local integer ujS
set w3[MM]=wjS
set MM=MM+1
if ah==0 then
if nh<32768 then
set nh=nh+1
set ujS=nh
set dh[ujS]=827
else
call Mau("Out of memory: Could not create HashSet.","when calling error in HashSet, line 5")
set ujS=0
endif
else
set ah=ah-1
set ujS=qh[ah]
set dh[ujS]=827
endif
set MM=MM-1
return ujS
endfunction
function wJs takes string NHs returns integer
local integer MHs
set w3[MM]=NHs
set MM=MM+1
set MHs=rjS("when calling alloc_HashSet in HashSet, line 4")
call rJs(MHs)
set MM=MM-1
return MHs
endfunction
function xoc takes string koc returns integer
local integer joc
set w3[MM]=koc
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set joc=cg
set og[joc]=1461
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 219")
set joc=0
endif
else
set Sg=Sg-1
set joc=ig[Sg]
set og[joc]=1461
endif
set MM=MM-1
return joc
endfunction
function gGr takes string FYr returns boolean
local integer kYr
local integer jYr
local integer xYr
local integer vYr
local integer mYr
local integer QYr
local integer WYr
local integer EYr
local integer ZYr
local integer UYr
local integer IYr
local integer PYr
local integer AYr
local unit DYr
local integer HYr
local integer JYr
local integer KYr
local integer LYr
local integer XYr
local integer CYr
local integer VYr
local integer BYr
local integer NYr
local integer MYr
local integer wGr
local integer uGr
local unit rGr
local integer sGr
local unit tGr
local integer iGr
local unit SGr
local integer cGr
local unit oGr
local integer OGr
local unit lGr
local integer bGr
local unit yGr
local integer pGr
local unit eGr
local integer qGr
local unit aGr
local integer nGr
local unit dGr
local integer fGr
local unit RGr
local integer TGr
local unit YGr
local integer GGr
set w3[MM]=FYr
set MM=MM+1
set sR=2016423989
set tR=1380790321
set iR=1380790322
if Ie then
set jYr=sDi("when calling new_SotfrpGuiCommandPalettePreset in SotfrpGuiRegions, line 37")
set uGr=jYr
set kYr=ncc("when calling alloc_StringLevelClosure_presetBaseOrderID_SotfrpGuiRegions in SotfrpGuiRegions, line 37")
call fnc(uGr,kYr,"when calling presetBaseOrderID in SotfrpGuiRegions, line 37")
endif
set SR=1095577711
set cR=1095577712
set oR=1095577713
set OR=1095577714
set lR=1095577715
set bR=1095577716
set yR=1095577717
set pR=1095577718
set eR=1095577719
set qR=1095577720
set aR=1095577721
set fR=HDs("when calling new_HashMap in SotfrpGuiRegions, line 73")
call e7u(sR,"when calling protectUnitType in SotfrpGuiRegions, line 121")
set xYr=Fcc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 122")
set vYr=eDt(xYr,"when calling new_BuiltinData in SotfrpGuiRegions, line 122")
call Fao(vYr,o2u(),"when calling setArgumentsTypes in SotfrpGuiRegions, line 133")
call jBu(WHt(vYr,"when calling new_BuiltinFunction in SotfrpGuiRegions, line 122"),"saveregion","when calling registerProtectedBuiltin in SotfrpGuiRegions, line 122")
set mYr=Qcc("when calling alloc_IBuiltin_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 134")
set QYr=eDt(mYr,"when calling new_BuiltinData in SotfrpGuiRegions, line 134")
call Fao(QYr,G4u(),"when calling setArgumentsTypes in SotfrpGuiRegions, line 157")
set WYr=QYr
call P4o(WYr,"when calling setProvidingEnumUnit in SotfrpGuiRegions, line 157")
call jBu(sKt(WYr,"when calling new_BuiltinSpecialForm in SotfrpGuiRegions, line 134"),"forregion","when calling registerProtectedBuiltin in SotfrpGuiRegions, line 134")
set EYr=Pcc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 158")
set ZYr=eDt(EYr,"when calling new_BuiltinData in SotfrpGuiRegions, line 158")
call Fao(ZYr,o2u(),"when calling setArgumentsTypes in SotfrpGuiRegions, line 179")
call jBu(WHt(ZYr,"when calling new_BuiltinFunction in SotfrpGuiRegions, line 158"),"loadregion","when calling registerProtectedBuiltin in SotfrpGuiRegions, line 158")
set UYr=roc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 180")
set IYr=eDt(UYr,"when calling new_BuiltinData in SotfrpGuiRegions, line 180")
call Fao(IYr,o2u(),"when calling setArgumentsTypes in SotfrpGuiRegions, line 201")
call jBu(WHt(IYr,"when calling new_BuiltinFunction in SotfrpGuiRegions, line 180"),"loadlegacyregion","when calling registerProtectedBuiltin in SotfrpGuiRegions, line 180")
set PYr=0
set AYr=bj_MAX_PLAYERS-1
loop
exitwhen PYr>AYr
set DYr=Ofr(PYr)
if DYr!=null then
call hYr(PYr,iR)
set rGr=DYr
set sGr=SR
set HYr=noc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 207")
call bYs(HYr)
set mX[HYr]=PYr
call GSu(rGr,sGr,HYr,"when calling onCast in SotfrpGuiRegions, line 207")
set tGr=DYr
set iGr=cR
set JYr=Roc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 210")
call bYs(JYr)
set QX[JYr]=PYr
call GSu(tGr,iGr,JYr,"when calling onCast in SotfrpGuiRegions, line 210")
set SGr=DYr
set cGr=oR
set KYr=Goc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 213")
call bYs(KYr)
set WX[KYr]=PYr
call GSu(SGr,cGr,KYr,"when calling onCast in SotfrpGuiRegions, line 213")
set oGr=DYr
set OGr=OR
set LYr=Foc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 216")
call bYs(LYr)
set EX[LYr]=PYr
call GSu(oGr,OGr,LYr,"when calling onCast in SotfrpGuiRegions, line 216")
set lGr=DYr
set bGr=lR
set XYr=xoc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 219")
call bYs(XYr)
set ZX[XYr]=PYr
call GSu(lGr,bGr,XYr,"when calling onCast in SotfrpGuiRegions, line 219")
set yGr=DYr
set pGr=bR
set CYr=Qoc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 223")
call bYs(CYr)
set UX[CYr]=PYr
call GSu(yGr,pGr,CYr,"when calling onCast in SotfrpGuiRegions, line 223")
set eGr=DYr
set qGr=yR
set VYr=Zoc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 227")
call bYs(VYr)
set IX[VYr]=PYr
call GSu(eGr,qGr,VYr,"when calling onCast in SotfrpGuiRegions, line 227")
set aGr=DYr
set nGr=pR
set BYr=Poc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 231")
call bYs(BYr)
set PX[BYr]=PYr
call GSu(aGr,nGr,BYr,"when calling onCast in SotfrpGuiRegions, line 231")
set dR[PYr]=wJs("when calling new_HashSet in SotfrpGuiRegions, line 235")
set dGr=DYr
set fGr=eR
set NYr=Hoc("when calling alloc_OnPointCast_onPointCast_SotfrpGuiRegions in SotfrpGuiRegions, line 236")
call kYs(NYr)
set AX[NYr]=PYr
call ESu(dGr,fGr,NYr,"when calling onPointCast in SotfrpGuiRegions, line 236")
set RGr=DYr
set TGr=qR
set MYr=Loc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 245")
call bYs(MYr)
set DX[MYr]=PYr
call GSu(RGr,TGr,MYr,"when calling onCast in SotfrpGuiRegions, line 245")
set YGr=DYr
set GGr=aR
set wGr=Voc("when calling alloc_OnCastListener_onCast_SotfrpGuiRegions in SotfrpGuiRegions, line 249")
call bYs(wGr)
set HX[wGr]=PYr
call GSu(YGr,GGr,wGr,"when calling onCast in SotfrpGuiRegions, line 249")
endif
set PYr=PYr+1
endloop
set MM=MM-1
set DYr=null
set rGr=null
set tGr=null
set SGr=null
set oGr=null
set lGr=null
set yGr=null
set eGr=null
set aGr=null
set dGr=null
set RGr=null
set YGr=null
return true
endfunction
function IRo takes nothing returns boolean
set MM=0
return gGr("SotfrpGuiRegions, line 1")
endfunction
function IXw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,4)=="item")then
return false
endif
return true
endfunction
function Qhw takes unit xhw returns nothing
local real vhw=LoadReal(i,HO,GetHandleId(xhw))+GetUnitAbilityLevel(xhw,1093683276)*100*(2.-GetWidgetLife(xhw)/BlzGetUnitMaxHP(xhw))
local real mhw=400*GetUnitAbilityLevel(xhw,1093683276)
if vhw>mhw then
set vhw=mhw
endif
call SaveReal(i,HO,GetHandleId(xhw),vhw*1.0)
endfunction
function I_u takes nothing returns boolean
call Qhw(ry)
return true
endfunction
function Ieu takes nothing returns boolean
return true
endfunction
function initializeTable takes string w__wurst_stackPos returns nothing
local integer i_1
set w3[MM]=w__wurst_stackPos
set MM=MM+1
set i_1=0
loop
exitwhen i_1>15
call sSo(Pp,DFr(Ip[i_1]),i_1,"when calling saveInt in Colors, line 207")
set i_1=i_1+1
endloop
set MM=MM-1
endfunction
function ybu takes string xOu returns boolean
local integer vOu
local integer mOu
local integer QOu
local integer WOu
local integer EOu
local integer ZOu
local integer UOu
local integer IOu
local integer POu
local integer AOu
local integer DOu
local integer HOu
local integer JOu
local integer KOu
local integer LOu
local integer XOu
local integer COu
local integer VOu
local integer BOu
local integer NOu
local integer MOu
local integer wlu
local integer ulu
local integer rlu
local integer slu
local integer tlu
local integer ilu
local integer Slu
local integer clu
local integer olu
local integer Olu
local integer llu
local integer blu
local integer ylu
local integer plu
local integer elu
local integer qlu
local integer alu
local integer nlu
local integer dlu
local integer flu
local integer Rlu
local integer Tlu
local integer Ylu
local integer Glu
local integer glu
local integer hlu
local integer Flu
local integer klu
local integer jlu
local integer xlu
local integer vlu
local integer mlu
local integer Qlu
local integer Wlu
local integer Elu
local integer Zlu
local integer Ulu
local integer Ilu
local integer Plu
local integer Alu
local integer Dlu
local integer Hlu
local integer Jlu
local integer Klu
local integer Llu
local integer Xlu
local integer Clu
local integer Vlu
local integer Blu
local integer Nlu
local integer Mlu
local integer wbu
local integer ubu
local integer rbu
local integer sbu
local integer tbu
local integer ibu
local integer Sbu
local integer cbu
local integer obu
local integer Obu
local integer lbu
local integer bbu
set w3[MM]=xOu
set MM=MM+1
set vOu=255
set mOu=255
set QOu=255
set WOu=255
set fp=vOu
set Rp=mOu
set Tp=QOu
set Yp=WOu
set EOu=0
set ZOu=0
set UOu=0
set IOu=0
set Gp=EOu
set gp=ZOu
set hp=UOu
set Fp=IOu
set POu=255
set AOu=204
set DOu=0
set HOu=255
set kp=POu
set jp=AOu
set xp=DOu
set vp=HOu
set mp="black"
set Qp=23
set JOu=255
set KOu=2
set LOu=2
set Wp[0]=JOu
set Ep[0]=KOu
set Zp[0]=LOu
set XOu=0
set COu=65
set VOu=255
set Wp[1]=XOu
set Ep[1]=COu
set Zp[1]=VOu
set BOu=27
set NOu=229
set MOu=184
set Wp[2]=BOu
set Ep[2]=NOu
set Zp[2]=MOu
set wlu=83
set ulu=0
set rlu=128
set Wp[3]=wlu
set Ep[3]=ulu
set Zp[3]=rlu
set slu=255
set tlu=252
set ilu=0
set Wp[4]=slu
set Ep[4]=tlu
set Zp[4]=ilu
set Slu=254
set clu=137
set olu=13
set Wp[5]=Slu
set Ep[5]=clu
set Zp[5]=olu
set Olu=31
set llu=191
set blu=0
set Wp[6]=Olu
set Ep[6]=llu
set Zp[6]=blu
set ylu=228
set plu=90
set elu=175
set Wp[7]=ylu
set Ep[7]=plu
set Zp[7]=elu
set qlu=148
set alu=149
set nlu=150
set Wp[8]=qlu
set Ep[8]=alu
set Zp[8]=nlu
set dlu=125
set flu=190
set Rlu=241
set Wp[9]=dlu
set Ep[9]=flu
set Zp[9]=Rlu
set Tlu=15
set Ylu=97
set Glu=69
set Wp[10]=Tlu
set Ep[10]=Ylu
set Zp[10]=Glu
set glu=77
set hlu=41
set Flu=3
set Wp[11]=glu
set Ep[11]=hlu
set Zp[11]=Flu
set klu=155
set jlu=0
set xlu=0
set Wp[12]=klu
set Ep[12]=jlu
set Zp[12]=xlu
set vlu=0
set mlu=0
set Qlu=195
set Wp[13]=vlu
set Ep[13]=mlu
set Zp[13]=Qlu
set Wlu=0
set Elu=234
set Zlu=255
set Wp[14]=Wlu
set Ep[14]=Elu
set Zp[14]=Zlu
set Ulu=190
set Ilu=0
set Plu=254
set Wp[15]=Ulu
set Ep[15]=Ilu
set Zp[15]=Plu
set Alu=235
set Dlu=205
set Hlu=135
set Wp[16]=Alu
set Ep[16]=Dlu
set Zp[16]=Hlu
set Jlu=248
set Klu=164
set Llu=139
set Wp[17]=Jlu
set Ep[17]=Klu
set Zp[17]=Llu
set Xlu=191
set Clu=255
set Vlu=128
set Wp[18]=Xlu
set Ep[18]=Clu
set Zp[18]=Vlu
set Blu=220
set Nlu=185
set Mlu=235
set Wp[19]=Blu
set Ep[19]=Nlu
set Zp[19]=Mlu
set wbu=40
set ubu=40
set rbu=40
set Wp[20]=wbu
set Ep[20]=ubu
set Zp[20]=rbu
set sbu=235
set tbu=240
set ibu=255
set Wp[21]=sbu
set Ep[21]=tbu
set Zp[21]=ibu
set Sbu=0
set cbu=120
set obu=30
set Wp[22]=Sbu
set Ep[22]=cbu
set Zp[22]=obu
set Obu=164
set lbu=111
set bbu=51
set Wp[23]=Obu
set Ep[23]=lbu
set Zp[23]=bbu
set Up[0]="red"
set Up[1]="blue"
set Up[2]="teal"
set Up[3]="purple"
set Up[4]="yellow"
set Up[5]="orange"
set Up[6]="green"
set Up[7]="pink"
set Up[8]="gray"
set Up[9]="light blue"
set Up[10]="dark green"
set Up[11]="brown"
set Up[12]="maroon"
set Up[13]="navy"
set Up[14]="turquoise"
set Up[15]="violet"
set Up[16]="wheat"
set Up[17]="peach"
set Up[18]="mint"
set Up[19]="lavender"
set Up[20]="coal"
set Up[21]="snow"
set Up[22]="emerald"
set Up[23]="peanut"
set Ip[0]="0"
set Ip[1]="1"
set Ip[2]="2"
set Ip[3]="3"
set Ip[4]="4"
set Ip[5]="5"
set Ip[6]="6"
set Ip[7]="7"
set Ip[8]="8"
set Ip[9]="9"
set Ip[10]="A"
set Ip[11]="B"
set Ip[12]="C"
set Ip[13]="D"
set Ip[14]="E"
set Ip[15]="F"
set Pp=O7S("when calling new_Table in Colors, line 155")
call initializeTable("when calling initializeTable in Colors, line 210")
set MM=MM-1
return true
endfunction
function Ifo takes nothing returns boolean
set MM=0
return ybu("Colors, line 1")
endfunction
function Ikr takes nothing returns boolean
return true
endfunction
function Imw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Vuw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function Uxw takes nothing returns boolean
if not(CountUnitsInGroup(Lu)==0)then
return false
endif
if not(CountUnitsInGroup(Hu)==0)then
return false
endif
if not(CountUnitsInGroup(Ku)==0)then
return false
endif
return true
endfunction
function Ixw takes nothing returns nothing
set Du=Du+1
call ForGroupBJ(Hu,luw)
call ForGroupBJ(Ku,buw)
if Uxw()then
set Du=0
call DisableTrigger(GetTriggeringTrigger())
endif
endfunction
function J2w takes nothing returns boolean
if GetSpellAbilityId()==1093682512 then
return true
endif
return false
endfunction
function U5w takes nothing returns boolean
if GetSpellAbilityId()==1093679412 or GetSpellAbilityId()==1093678664 or GetSpellAbilityId()==1093679441 or GetSpellAbilityId()==1093678662 or GetSpellAbilityId()==1093679160 or GetSpellAbilityId()==1093681459 or GetSpellAbilityId()==1093679427 or GetSpellAbilityId()==1093679428 or GetSpellAbilityId()==1093682511 or GetSpellAbilityId()==1093682512 or GetSpellAbilityId()==1093678415 or GetSpellAbilityId()==1093678416 or GetSpellAbilityId()==1093679445 or GetSpellAbilityId()==1093678681 or GetSpellAbilityId()==1093678920 or GetSpellAbilityId()==1093678938 or GetSpellAbilityId()==1093679413 or GetSpellAbilityId()==1095710530 or GetSpellAbilityId()==1093682246 or GetSpellAbilityId()==1093678919 or GetSpellAbilityId()==1093678915 or GetSpellAbilityId()==1093682505 or GetSpellAbilityId()==1093679157 or GetSpellAbilityId()==1093682233 or GetSpellAbilityId()==1093681456 or GetSpellAbilityId()==1093679182 or GetSpellAbilityId()==1093678155 or GetSpellAbilityId()==1093679155 or GetSpellAbilityId()==1093682002 or GetSpellAbilityId()==1093678145 or GetSpellAbilityId()==1093682000 or GetSpellAbilityId()==1093682001 or GetSpellAbilityId()==1093679430 or GetSpellAbilityId()==1093679440 or GetSpellAbilityId()==1093682241 or GetSpellAbilityId()==1093682483 or GetSpellAbilityId()==1093679442 or GetSpellAbilityId()==1093679153 then
return true
else
return false
endif
endfunction
function Z5w takes nothing returns boolean
if GetSpellAbilityId()==1097360737 or GetSpellAbilityId()==1097099635 or GetSpellAbilityId()==1095264354 or GetSpellAbilityId()==1095262842 or GetSpellAbilityId()==1095268197 or GetSpellAbilityId()==1095267426 or GetSpellAbilityId()==1095263859 or GetSpellAbilityId()==1095267427 or GetSpellAbilityId()==1097098094 or GetSpellAbilityId()==1097098088 or GetSpellAbilityId()==1097888359 or GetSpellAbilityId()==1097885490 or GetSpellAbilityId()==1096905588 or GetSpellAbilityId()==1095725928 or GetSpellAbilityId()==1095725874 or GetSpellAbilityId()==1095726963 or GetSpellAbilityId()==1095726898 or GetSpellAbilityId()==1095725926 or GetSpellAbilityId()==1095723127 or GetSpellAbilityId()==1095657591 or GetSpellAbilityId()==1095721836 or GetSpellAbilityId()==1098018924 or GetSpellAbilityId()==1097687602 or GetSpellAbilityId()==1098018925 or GetSpellAbilityId()==1098015081 or GetSpellAbilityId()==1097102957 or GetSpellAbilityId()==1096115822 or GetSpellAbilityId()==1096115299 or GetSpellAbilityId()==1096116589 or GetSpellAbilityId()==1096115059 or GetSpellAbilityId()==1096115042 or GetSpellAbilityId()==1098280551 or GetSpellAbilityId()==1096901741 or GetSpellAbilityId()==1095067243 or GetSpellAbilityId()==1095069026 or GetSpellAbilityId()==1095070568 or GetSpellAbilityId()==1095067246 or GetSpellAbilityId()==1094937967 or GetSpellAbilityId()==1094940517 or GetSpellAbilityId()==1094939746 or GetSpellAbilityId()==1094935162 or GetSpellAbilityId()==1094939496 or GetSpellAbilityId()==1094939508 or GetSpellAbilityId()==1098347112 or GetSpellAbilityId()==1098347111 or GetSpellAbilityId()==1098347123 or GetSpellAbilityId()==1094935414 or GetSpellAbilityId()==1094935346 or GetSpellAbilityId()==1094935347 or GetSpellAbilityId()==1094939449 or GetSpellAbilityId()==1094939494 or GetSpellAbilityId()==1094936174 or GetSpellAbilityId()==1094935394 or GetSpellAbilityId()==1094935142 or GetSpellAbilityId()==1097754725 or GetSpellAbilityId()==1097754673 or GetSpellAbilityId()==1097754674 or GetSpellAbilityId()==1094935651 or GetSpellAbilityId()==1097687652 or GetSpellAbilityId()==1097690722 or GetSpellAbilityId()==1097687650 or GetSpellAbilityId()==1094936162 or GetSpellAbilityId()==1098344034 or GetSpellAbilityId()==1094935139 or GetSpellAbilityId()==1094939239 or GetSpellAbilityId()==1094939238 or GetSpellAbilityId()==1095657075 or GetSpellAbilityId()==1094936179 or GetSpellAbilityId()==1094939236 or GetSpellAbilityId()==1094939507 or GetSpellAbilityId()==1094938741 or GetSpellAbilityId()==1094935653 or GetSpellAbilityId()==1094937968 or GetSpellAbilityId()==1094936172 or GetSpellAbilityId()==1094935661 or GetSpellAbilityId()==1097102189 or GetSpellAbilityId()==1094935602 or GetSpellAbilityId()==1094936178 or GetSpellAbilityId()==1094935393 or GetSpellAbilityId()==1094939747 or GetSpellAbilityId()==1094939698 or GetSpellAbilityId()==1094936694 or GetSpellAbilityId()==1094935404 or GetSpellAbilityId()==1094939448 or GetSpellAbilityId()==1095658863 or GetSpellAbilityId()==1094939447 or GetSpellAbilityId()==1095657587 or GetSpellAbilityId()==1095660401 or GetSpellAbilityId()==1098019697 or GetSpellAbilityId()==1095660391 or GetSpellAbilityId()==1098019687 or GetSpellAbilityId()==1095660386 or GetSpellAbilityId()==1095657058 or GetSpellAbilityId()==1095656038 or GetSpellAbilityId()==1095656294 or GetSpellAbilityId()==1095660134 or GetSpellAbilityId()==1095661421 or GetSpellAbilityId()==1098083440 or GetSpellAbilityId()==1095657068 or GetSpellAbilityId()==1095656307 or GetSpellAbilityId()==1095656241 or GetSpellAbilityId()==1095656242 or GetSpellAbilityId()==1095656243 or GetSpellAbilityId()==1095660407 or GetSpellAbilityId()==1095658605 or GetSpellAbilityId()==1097753709 then
return true
else
return false
endif
endfunction
function J5w takes nothing returns nothing
local unit I5w=GetSpellAbilityUnit()
local unit P5w=GetSpellTargetUnit()
local integer A5w=GetUnitCurrentOrder(I5w)
local unit D5w
local effect H5w
if(GetUnitAbilityLevel(I5w,1093682522)==3 and GetRandomInt(1,100)<=45)or(GetUnitAbilityLevel(I5w,1093682522)==2 and GetRandomInt(1,100)<=30)or(GetUnitAbilityLevel(I5w,1093682522)==1 and GetRandomInt(1,100)<=15)and Z5w()or U5w()then
set D5w=CreateUnitAtLoc(GetOwningPlayer(I5w),1747995215,GetUnitLoc(I5w),GetUnitFacing(I5w))
set H5w=AddSpecialEffectTarget("Abilities\\Spells\\Orc\\FeralSpirit\\feralspiritdone.mdl",I5w,"chest")
call UnitAddAbility(D5w,GetSpellAbilityId())
call SetUnitAbilityLevel(D5w,GetSpellAbilityId(),GetUnitAbilityLevel(I5w,GetSpellAbilityId()))
call IssueTargetOrderById(D5w,A5w,P5w)
call IssuePointOrderByIdLoc(D5w,A5w,GetSpellTargetLoc())
call IssueImmediateOrderById(D5w,A5w)
call TriggerSleepAction(12.00)
call RemoveUnit(D5w)
call DestroyEffect(H5w)
endif
set I5w=null
set P5w=null
set A5w=0
set D5w=null
set H5w=null
set I5w=null
set P5w=null
set D5w=null
set H5w=null
endfunction
function J7w takes nothing returns boolean
if not(GetSpellAbilityId()==1093682006)then
return false
endif
return true
endfunction
function J8w takes nothing returns nothing
local timer U8w=null
local unit I8w=null
local unit P8w=GetSpellAbilityUnit()
local integer A8w=GetUnitAbilityLevel(P8w,1095722099)
local integer D8w=1
local group H8w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(H8w,GetUnitLoc(P8w),200.,Condition(Syw))
if IsUnitInGroup(P8w,Tt[2])then
set D8w=4
elseif IsUnitInGroup(P8w,Tt[1])then
set D8w=3
set U8w=LoadTimerHandle(nr,GetHandleId(P8w),StringHash("dsT"))
call FlushChildHashtable(nr,GetHandleId(U8w))
call DestroyTimer(U8w)
call GroupRemoveUnit(Tt[1],P8w)
call GroupAddUnit(Tt[2],P8w)
set U8w=CreateTimer()
call SaveTimerHandle(nr,GetHandleId(P8w),StringHash("dsT"),U8w)
call SaveUnitHandle(nr,GetHandleId(U8w),StringHash("u"),P8w)
call TimerStart(U8w,6.,false,cyw)
set U8w=null
elseif IsUnitInGroup(P8w,Tt[0])then
set D8w=2
set U8w=LoadTimerHandle(nr,GetHandleId(P8w),StringHash("dsT"))
call FlushChildHashtable(nr,GetHandleId(U8w))
call DestroyTimer(U8w)
call GroupRemoveUnit(Tt[0],P8w)
call GroupAddUnit(Tt[1],P8w)
set U8w=CreateTimer()
call SaveTimerHandle(nr,GetHandleId(P8w),StringHash("dsT"),U8w)
call SaveUnitHandle(nr,GetHandleId(U8w),StringHash("u"),P8w)
call TimerStart(U8w,6.,false,cyw)
set U8w=null
else
call GroupAddUnit(Tt[0],P8w)
set U8w=CreateTimer()
call SaveTimerHandle(nr,GetHandleId(P8w),StringHash("dsT"),U8w)
call SaveUnitHandle(nr,GetHandleId(U8w),StringHash("u"),P8w)
call TimerStart(U8w,6.,false,cyw)
set U8w=null
endif
loop
set I8w=FirstOfGroup(H8w)
call GroupRemoveUnit(H8w,I8w)
call UnitDamageTarget(P8w,I8w,D8w*12.5*(A8w+1),true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\HealingSpray\\HealBottleMissile.mdl",I8w,"chest"))
exitwhen FirstOfGroup(H8w)==null
endloop
call DestroyGroup(H8w)
set H8w=null
set A8w=0
set I8w=null
loop
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Other\\DivineStorm\\DivineStorm.mdx",GetUnitLoc(P8w)))
set D8w=D8w-1
exitwhen D8w==0
endloop
set P8w=null
set U8w=null
set I8w=null
set P8w=null
set H8w=null
endfunction
function JBw takes nothing returns boolean
if not(GetSpellAbilityId()==1093677900)then
return false
endif
return true
endfunction
function HDw takes nothing returns boolean
if not(GetDestructableMaxLife(GetEnumDestructable())==2501.00)then
return false
endif
return true
endfunction
function JDw takes nothing returns nothing
if HDw()then
call SetDestructableInvulnerableBJ(GetEnumDestructable(),true)
call ModifyGateBJ(bj_GATEOPERATION_OPEN,GetEnumDestructable())
call ModifyGateBJ(bj_GATEOPERATION_DESTROY,GetEnumDestructable())
call RemoveDestructable(GetEnumDestructable())
endif
endfunction
function JGu takes nothing returns boolean
set Ee=2147483647
set Ze=-2147483648
return true
endfunction
function JGw takes nothing returns nothing
local unit HGw
if GetSpellAbilityId()==T then
set HGw=GetSpellTargetUnit()
call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Human\\HCancelDeath\\HCancelDeath.mdl",GetUnitX(HGw),GetUnitY(HGw)))
call RemoveUnit(HGw)
set HGw=null
endif
set HGw=null
endfunction
function JHw takes nothing returns boolean
if GetSpellAbilityId()==1093683256 then
return true
else
return false
endif
endfunction
function JKw takes nothing returns nothing
local unit HKw=GetSpellAbilityUnit()
if GetSpellAbilityId()==1097028403 then
call UnitRemoveAbility(HKw,1097024051)
call UnitAddAbility(HKw,1097024052)
call UnitMakeAbilityPermanent(HKw,true,1097024052)
call UnitRemoveAbility(HKw,1097025618)
else
call UnitRemoveAbility(HKw,1097024052)
call UnitAddAbility(HKw,1097024051)
call UnitMakeAbilityPermanent(HKw,true,1097024051)
call UnitAddAbility(HKw,1097025618)
call UnitMakeAbilityPermanent(HKw,true,1097025618)
endif
set HKw=null
set HKw=null
endfunction
function JMw takes nothing returns boolean
if GetSpellAbilityId()==1093683001 then
return true
else
return false
endif
endfunction
function yvr takes string bvr returns boolean
set w3[MM]=bvr
set MM=MM+1
call Gkr("when calling create in TypeCastingJurst, line 4")
set MM=MM-1
return true
endfunction
function JRo takes nothing returns boolean
set MM=0
return yvr("TypeCastingJurst, line 1")
endfunction
function PRw takes unit ERw returns nothing
local real ZRw=GetUnitX(ERw)
local real URw=GetUnitY(ERw)
local real IRw=GetUnitFacing(ERw)
call SetUnitPosition(ERw,ZRw,URw)
call SetUnitFacing(ERw,IRw)
set IRw=IRw*bj_DEGTORAD
set ZRw=ZRw+10.00*Cos(IRw)
set URw=URw+10.00*Sin(IRw)
set IRw=0.
set bj_lastCreatedDestructable=CreateDestructable(1148546413,ZRw,URw,0.00,1.00,0)
set ZRw=0.
set URw=0.
call UnitAddAbility(ERw,1094797617)
call IssueTargetOrder(ERw,"grabtree",bj_lastCreatedDestructable)
call UnitRemoveAbility(ERw,1094797617)
call UnitRemoveAbility(ERw,1096894768)
call UnitAddAbility(ERw,1096894769)
set ERw=null
call RemoveDestructable(bj_lastCreatedDestructable)
set bj_lastCreatedDestructable=null
endfunction
function JUw takes nothing returns nothing
call PRw(GetEnumUnit())
endfunction
function JVw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call UnitRemoveAbility(GetEnumUnit(),1093683783)
call UnitRemoveAbility(GetEnumUnit(),1093683784)
endif
endfunction
function JXw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,4)=="item")then
return false
endif
return true
endfunction
function J_u takes nothing returns boolean
call UnitRemoveAbility(ry,1093681487)
return true
endfunction
function DTo takes integer UTo,integer ITo,unit PTo,string ATo returns nothing
if ITo<0 or ITo>=6 then
call Mau("Index out of Bounds",ATo)
elseif ITo<=2 then
if ITo<=1 then
if ITo<=0 then
set L0w[UTo]=PTo
else
set X0w[UTo]=PTo
endif
else
set C0w[UTo]=PTo
endif
elseif ITo<=4 then
if ITo<=3 then
set V0w[UTo]=PTo
else
set B0w[UTo]=PTo
endif
else
set N0w[UTo]=PTo
endif
endfunction
function Mxs takes integer Vxs,unit Bxs,string Nxs returns nothing
set w3[MM]=Nxs
set MM=MM+1
if iZ[Vxs]<Kp then
set iZ[Vxs]=iZ[Vxs]+1
set tZ[Vxs]=ModuloInteger(tZ[Vxs]+1,Kp)
call DTo(Vxs,tZ[Vxs],Bxs,"when writing array ArrayQueue_units in DummyRecycler, line 71")
else
call Mau("Queue Overflow","when calling error in DummyRecycler, line 73")
endif
set MM=MM-1
endfunction
function Ijc takes integer Ejc,unit Zjc,string Ujc returns nothing
set w3[MM]=Ujc
set MM=MM+1
if Bg[Ejc]==0 then
if Ejc==0 then
call Mau("Nullpointer exception when calling ArrayQueue.enqueue","when calling error in DummyRecycler, line 67")
else
call Mau("Called ArrayQueue.enqueue on invalid object.","when calling error in DummyRecycler, line 67")
endif
endif
call Mxs(Ejc,Zjc,"when calling enqueue in DummyRecycler, line 67")
set MM=MM-1
endfunction
function Qus takes real jus,real xus,real vus,real mus returns real
set t1=jus-vus
set i1=xus-mus
return t1
endfunction
function MhS takes string BhS returns integer
local integer NhS
set w3[MM]=BhS
set MM=MM+1
if Cg==0 then
if Vg<32768 then
set Vg=Vg+1
set NhS=Vg
set Bg[NhS]=637
else
call Mau("Out of memory: Could not create ArrayQueue.","when calling error in DummyRecycler, line 61")
set NhS=0
endif
else
set Cg=Cg-1
set NhS=Xg[Cg]
set Bg[NhS]=637
endif
set MM=MM-1
return NhS
endfunction
function uvs takes integer wvs returns nothing
set sZ[wvs]=0
set tZ[wvs]=0
set iZ[wvs]=0
endfunction
function Svs takes integer ivs returns nothing
call uvs(ivs)
endfunction
function tvs takes string rvs returns integer
local integer svs
set w3[MM]=rvs
set MM=MM+1
set svs=MhS("when calling alloc_ArrayQueue in DummyRecycler, line 61")
call Svs(svs)
set MM=MM-1
return svs
endfunction
function Keu takes string Peu returns boolean
local integer Aeu
local integer Deu
local integer Heu
local integer Jeu
set w3[MM]=Peu
set MM=MM+1
set Ap=2019849581
set Dp=2020765556
set Hp=8
set Jp=360*1./Hp
set Kp=6
set Lp=CreateTimer()
set Xp=0
set Aeu=0
set Deu=Hp-1
loop
exitwhen Aeu>Deu
set Cp[Aeu]=tvs("when calling new_ArrayQueue in DummyRecycler, line 152")
set Heu=0
set Jeu=Kp-1
loop
exitwhen Heu>Jeu
call Ijc(Cp[Aeu],tqu(Qus(Ve,Be,16.,16.),i1,Ty,wwu(Aeu*Jp)),"when calling enqueue in DummyRecycler, line 154")
set Heu=Heu+1
endloop
set Aeu=Aeu+1
endloop
set MM=MM-1
return true
endfunction
function Jfo takes nothing returns boolean
set MM=0
return Keu("DummyRecycler, line 1")
endfunction
function Jjw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function Jku takes nothing returns boolean
return true
endfunction
function Hkw takes nothing returns boolean
if not(RectContainsLoc(GetPlayableMapRect(),Ju[9])==false)then
return false
endif
return true
endfunction
function Jkw takes nothing returns nothing
set Ju[9]=GetSpellTargetLoc()
if Hkw()then
call IssueImmediateOrderBJ(GetTriggerUnit(),"stop")
set Xu=GetForceOfPlayer(GetOwningPlayer(GetTriggerUnit()))
call DisplayTextToForce(Xu,"TRIGSTR_8260")
call DestroyForce(Xu)
endif
call RemoveLocation(Ju[9])
endfunction
function Jvw takes nothing returns nothing
set Ju[8]=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[8],bj_UNIT_FACING)
call UnitAddAbilityBJ(1093678659,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"slow",GetEnumUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
endfunction
function K1w takes nothing returns nothing
local unit D1w=GetSpellAbilityUnit()
local integer H1w=0
local integer J1w=6*GetUnitAbilityLevel(D1w,1093683288)
if IsUnitInGroup(D1w,Ls)==true then
call GroupRemoveUnit(Ls,D1w)
call iTw(1.)
endif
call GroupAddUnit(Ls,D1w)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Invisibility\\InvisibilityTarget.mdl",D1w,"chest"))
call UnitAddAbility(D1w,1093683504)
call UnitMakeAbilityPermanent(D1w,true,1093683504)
call UnitAddAbility(D1w,1093682743)
call UnitMakeAbilityPermanent(D1w,true,1093682743)
call SetUnitAbilityLevel(D1w,1093682743,J1w/6)
loop
exitwhen IsUnitInGroup(D1w,Ls)==false
call iTw(1.)
set H1w=H1w+1
if H1w==J1w or GetUnitState(D1w,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(Ls,D1w)
endif
endloop
call UnitRemoveAbility(D1w,1093683504)
call UnitRemoveAbility(D1w,1093682743)
call UnitRemoveAbility(D1w,1110455129)
set D1w=null
set H1w=0
set J1w=0
set D1w=null
endfunction
function K3w takes nothing returns nothing
local integer D3w=1
local unit H3w=GetSpellAbilityUnit()
local location J3w=GetSpellTargetLoc()
loop
exitwhen D3w>1000000000
if H3w==ut[D3w]then
call GroupRemoveUnit(ps,rt[D3w])
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl",GetUnitLoc(rt[D3w])))
call SetUnitPositionLoc(rt[D3w],J3w)
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",GetUnitLoc(rt[D3w])))
call UnitRemoveAbility(ut[D3w],1093683784)
call UnitAddAbility(ut[D3w],1093683783)
call UnitMakeAbilityPermanent(ut[D3w],true,1093683783)
set ut[D3w]=null
set rt[D3w]=null
set D3w=0
set H3w=null
set J3w=null
set H3w=null
set J3w=null
return
endif
set D3w=D3w+1
endloop
set D3w=0
set H3w=null
set J3w=null
set H3w=null
set J3w=null
endfunction
function K4w takes nothing returns boolean
if GetSpellAbilityId()==1093682517 then
return true
endif
return false
endfunction
function K6w takes nothing returns boolean
return GetSpellAbilityId()==1093679408
endfunction
function K7w takes nothing returns nothing
call UnitAddAbilityBJ(1098084457,GetSpellAbilityUnit())
call UnitAddAbilityBJ(1093682007,GetSpellAbilityUnit())
call UnitRemoveAbilityBJ(1093682006,GetSpellAbilityUnit())
endfunction
function K9u takes nothing returns boolean
return GetSpellAbilityId()==1095722359
endfunction
function JCw takes nothing returns boolean
if not(GetEventPlayerChatString()=="'herostickygrenade")then
return false
endif
return true
endfunction
function PCw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@herostickygrenade")then
return false
endif
return true
endfunction
function KCw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(acw))
if JCw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],ncw)
elseif PCw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],dcw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function KDw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.,G,Etw)
call RemoveLocation(G)
endfunction
function AEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414360372)then
return false
endif
return true
endfunction
function DEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414360371)then
return false
endif
return true
endfunction
function HEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414360370)then
return false
endif
return true
endfunction
function IEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414360374)then
return false
endif
return true
endfunction
function JEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414360369)then
return false
endif
return true
endfunction
function PEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414360373)then
return false
endif
return true
endfunction
function UEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414360375)then
return false
endif
return true
endfunction
function KEw takes nothing returns nothing
if JEw()then
set vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]=0
elseif HEw()then
set vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]=1
elseif DEw()then
set vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]=2
elseif AEw()then
set vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]=3
elseif PEw()then
set vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]=4
elseif IEw()then
set vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]=5
elseif UEw()then
set vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]=6
endif
endfunction
function KFw takes nothing returns nothing
local unit HFw
local unit JFw
if GetSpellAbilityId()!=1093684552 then
set HFw=null
set JFw=null
return
endif
set HFw=GetSpellAbilityUnit()
set JFw=GetSpellTargetUnit()
call UnitDamageTarget(HFw,JFw,50*GetUnitAbilityLevel(HFw,1093684552),true,true,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPriest.mdl",JFw,"chest"))
call SetWidgetLife(HFw,GetWidgetLife(HFw)+100*GetUnitAbilityLevel(HFw,1093684552))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",HFw,"origin"))
call kYw(el,HFw)
call UnitRemoveAbility(HFw,1110455628)
set JFw=null
set HFw=null
set HFw=null
set JFw=null
endfunction
function KHw takes nothing returns nothing
set kw[GetPlayerId(GetTriggerPlayer())]=null
call GetPlayerId(GetTriggerPlayer())
call RemoveUnit(ss[GetPlayerId(GetTriggerPlayer())])
set ss[GetPlayerId(GetTriggerPlayer())]=CreateUnitAtLoc(GetTriggerPlayer(),1747996983,GetUnitLoc(GetSpellAbilityUnit()),270.00)
endfunction
function KLw takes nothing returns boolean
if not(GetSpellAbilityId()==1093683540)then
return false
endif
return true
endfunction
function JPw takes nothing returns boolean
if GetUnitTypeId(GetSoldUnit())==1747996211 then
return true
endif
if GetUnitTypeId(GetSoldUnit())==1747996210 then
return true
endif
return false
endfunction
function KPw takes nothing returns boolean
if not JPw()then
return false
endif
return true
endfunction
function KQu takes nothing returns boolean
set ya=Filter(eaw)
return true
endfunction
function ymr takes string bmr returns boolean
set w3[MM]=bmr
set MM=MM+1
if Ie then
call wJs("when calling new_HashSet in UniqueIdValidator, line 7")
endif
set MM=MM-1
return true
endfunction
function KRo takes nothing returns boolean
set MM=0
return ymr("UniqueIdValidator, line 1")
endfunction
function KRw takes unit ARw returns nothing
local real DRw=GetUnitX(ARw)
local real HRw=GetUnitY(ARw)
local real JRw=GetUnitFacing(ARw)
call SetUnitPosition(ARw,DRw,HRw)
call SetUnitFacing(ARw,JRw)
set JRw=JRw*bj_DEGTORAD
set DRw=DRw+10.00*Cos(JRw)
set HRw=HRw+10.00*Sin(JRw)
set JRw=0.
set bj_lastCreatedDestructable=CreateDestructable(1148546413,DRw,HRw,0.00,1.00,0)
set DRw=0.
set HRw=0.
call UnitAddAbility(ARw,1094797616)
call IssueTargetOrder(ARw,"grabtree",bj_lastCreatedDestructable)
call UnitRemoveAbility(ARw,1094797616)
call UnitRemoveAbility(ARw,1096894769)
call UnitAddAbility(ARw,1096894768)
set ARw=null
call RemoveDestructable(bj_lastCreatedDestructable)
set bj_lastCreatedDestructable=null
endfunction
function KUw takes nothing returns nothing
call KRw(GetEnumUnit())
endfunction
function KXw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call CreateItemLoc(1227896408,G)
call RemoveLocation(G)
endfunction
function K_u takes nothing returns boolean
return true
endfunction
function GZS takes string TZS returns integer
local integer YZS
set w3[MM]=TZS
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set YZS=ZG
set UG[YZS]=689
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_Preloader.","when calling error in Preloader, line 55")
set YZS=0
endif
else
set EG=EG-1
set YZS=WG[EG]
set UG[YZS]=689
endif
set MM=MM-1
return YZS
endfunction
function wZu takes string NEu returns boolean
local integer MEu
set w3[MM]=NEu
set MM=MM+1
set ma=true
set Qa=CreateGroup()
set Wa=I5r(Ty,Ap,0.,0.,0.)
if Wa==null then
call Mau("DUMMY_UNITID ("+cmu(Ap)+") not added correctly to the map.","when calling error in Preloader, line 53")
endif
if ma then
set MEu=GZS("when calling alloc_CallbackSingle_nullTimer_Preloader in Preloader, line 55")
call KGs(MEu)
call Cou(MEu,"when calling nullTimer in Preloader, line 55")
endif
set MM=MM-1
return true
endfunction
function Kfo takes nothing returns boolean
set MM=0
return wZu("Preloader, line 1")
endfunction
function Kjw takes nothing returns nothing
set Ju[8]=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[8],bj_UNIT_FACING)
call UnitAddAbilityBJ(1093678659,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"slow",GetEnumUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
endfunction
function Kxw takes nothing returns boolean
if not(GetSpellAbilityId()==1093678935)then
return false
endif
return true
endfunction
function L2w takes nothing returns nothing
local unit K2w=CreateUnitAtLoc(Player(PLAYER_NEUTRAL_PASSIVE),1747995215,GetUnitLoc(GetSpellAbilityUnit()),GetUnitFacing(GetSpellAbilityUnit()))
call UnitAddAbility(K2w,1093682513)
call SetUnitAbilityLevel(K2w,1093682513,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682512))
call IssuePointOrderLoc(K2w,"blizzard",GetSpellTargetLoc())
call TriggerSleepAction(12.00)
call RemoveUnit(K2w)
set K2w=null
set K2w=null
endfunction
function L5w takes nothing returns boolean
return GetSpellAbilityId()==1093682755 or GetSpellAbilityId()==1093682756
endfunction
function L6w takes nothing returns boolean
return IsPlayerEnemy(GetOwningPlayer(GetSpellAbilityUnit()),GetOwningPlayer(GetFilterUnit()))and IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)==false and BlzIsUnitInvulnerable(GetFilterUnit())==false
endfunction
function L8w takes nothing returns boolean
return GetSpellAbilityId()==1095722081
endfunction
function LAw takes nothing returns nothing
local integer DAw=0
local integer HAw=0
local integer JAw=0
local integer KAw=0
set DAw=6
set HAw=StringLength(GetEventPlayerChatString())
loop
exitwhen DAw>HAw
if SubString(GetEventPlayerChatString(),DAw-1,DAw)=="-" then
set JAw=S2I(SubString(GetEventPlayerChatString(),5,DAw-1))
set KAw=S2I(SubString(GetEventPlayerChatString(),DAw,StringLength(GetEventPlayerChatString())))
if KAw<JAw then
set JAw=JAw+KAw
set KAw=JAw-KAw
set JAw=JAw-KAw
endif
call DisplayTextToPlayer(GetLocalPlayer(),0.,0.,k[GetPlayerId(GetTriggerPlayer())+1]+GetPlayerName(GetTriggerPlayer())+"|r|CFF808040 ________ |r"+I2S(GetRandomInt(JAw,KAw))+"|CFF808040 ("+I2S(JAw)+"-"+I2S(KAw)+")")
set DAw=0
set HAw=0
set JAw=0
set KAw=0
return
endif
set DAw=DAw+1
endloop
set DAw=0
set HAw=0
endfunction
function JIw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function KIw takes nothing returns boolean
if not JIw()then
return false
endif
return true
endfunction
function LIw takes nothing returns nothing
if KIw()then
set bj_forLoopBIndex=1
set bj_forLoopBIndexEnd=fw
loop
exitwhen bj_forLoopBIndex>bj_forLoopBIndexEnd
call UnitRemoveAbilityBJ(Rw[GetForLoopIndexB()],GetEnumUnit())
set bj_forLoopBIndex=bj_forLoopBIndex+1
endloop
call UnitRemoveAbilityBJ(1095069029,GetEnumUnit())
endif
endfunction
function LKw takes nothing returns boolean
return GetSpellAbilityId()==1097028405 or GetSpellAbilityId()==1097028406
endfunction
function LLw takes nothing returns nothing
set Zs=0.00
set Es=false
set Ps=GetUnitLoc(GetSpellTargetUnit())
set As=GetTriggerUnit()
set Is=30.00
set Us="Abilities\\Weapons\\FaerieDragonMissile\\FaerieDragonMissile.mdl"
set Qs="walk"
set Ws=0.30
set Ds=GetUnitAbilityLevelSwapped(1093683540,GetTriggerUnit())
set Js=GetSpellTargetUnit()
call CreateNUnitsAtLoc(1,1747995215,GetOwningPlayer(GetSpellAbilityUnit()),GetUnitLoc(GetSpellTargetUnit()),bj_UNIT_FACING)
call UnitAddAbilityBJ(1093683541,GetLastCreatedUnit())
call UnitApplyTimedLifeBJ(3.00,1112820806,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"attackonce",GetSpellTargetUnit())
call ConditionalTriggerExecute(KS)
endfunction
function LQu takes nothing returns boolean
return IsUnitOwnedByPlayer(GetFilterUnit(),ba)
endfunction
function ctt takes integer Stt returns nothing
endfunction
function ltt takes integer ott,integer Ott returns nothing
call ctt(ott)
set AD[ott]=ModuloInteger(Ott,256)
set DD[ott]=ModuloInteger(Ott,65536)/256
set HD[ott]=ModuloInteger(Ott,16777216)/65536
set JD[ott]=Ott/16777216
endfunction
function rES takes string wES returns integer
local integer uES
set w3[MM]=wES
set MM=MM+1
if Yk==0 then
if Gk<32768 then
set Gk=Gk+1
set uES=Gk
set gk[uES]=1239
else
call Mau("Out of memory: Could not create IdGenerator.","when calling error in ObjectIdGenerator, line 14")
set uES=0
endif
else
set Yk=Yk-1
set uES=Tk[Yk]
set gk[uES]=1239
endif
set MM=MM-1
return uES
endfunction
function Nst takes integer Cst,string Vst returns integer
local integer Bst
set w3[MM]=Vst
set MM=MM+1
set Bst=rES("when calling alloc_IdGenerator in ObjectIdGenerator, line 20")
call ltt(Bst,Cst)
set MM=MM-1
return Bst
endfunction
function iES takes integer sES,string tES returns nothing
set w3[MM]=tES
set MM=MM+1
if gk[sES]==0 then
call Mau("Double free: object of type IdGenerator","when calling error in ObjectIdGenerator, line 14")
else
set Tk[Yk]=sES
set Yk=Yk+1
set gk[sES]=0
endif
set MM=MM-1
endfunction
function ytt takes integer btt returns nothing
endfunction
function qtt takes integer ptt,string ett returns nothing
set w3[MM]=ett
set MM=MM+1
call ytt(ptt)
call iES(ptt,"when calling dealloc_IdGenerator in ObjectIdGenerator, line 14")
set MM=MM-1
endfunction
function bXc takes integer OXc,string lXc returns nothing
set w3[MM]=lXc
set MM=MM+1
if gk[OXc]==0 then
if OXc==0 then
call Mau("Nullpointer exception when calling IdGenerator.IdGenerator","when calling error in ObjectIdGenerator, line 14")
else
call Mau("Called IdGenerator.IdGenerator on invalid object.","when calling error in ObjectIdGenerator, line 14")
endif
endif
call qtt(OXc,"when calling destroyIdGenerator in ObjectIdGenerator, line 14")
set MM=MM-1
endfunction
function GFr takes string fFr,string RFr returns integer
local integer TFr=0
local integer YFr=vhr(fFr)-vhr(RFr)
loop
exitwhen TFr>YFr
if Dhr(fFr,TFr,TFr+vhr(RFr))==RFr then
return TFr
endif
set TFr=TFr+1
endloop
return-1
endfunction
function umu takes string Cvu,string Vvu returns integer
local integer Bvu
local integer Nvu
local integer Mvu
local integer wmu
set w3[MM]=Vvu
set MM=MM+1
set Bvu=0
if vhr(Cvu)!=4 then
call Mau("Fourchar value must be 4 chars long","when calling error in ObjectIds, line 36")
else
set Nvu=1
set Mvu=0
loop
exitwhen Mvu>3
set wmu=GFr(hq,Mhr(Cvu,3-Mvu))
set Bvu=Bvu+Nvu*wmu
set Nvu=Nvu*256
set Mvu=Mvu+1
endloop
endif
set MM=MM-1
return Bvu
endfunction
function imu takes string rmu,string smu returns integer
local integer tmu
set w3[MM]=smu
set MM=MM+1
set tmu=umu(rmu,"when calling fromRawCode in ObjectIds, line 47")
set MM=MM-1
return tmu
endfunction
function CJr takes string JJr returns nothing
local integer KJr
local integer LJr
local integer XJr
set w3[MM]=JJr
set MM=MM+1
if Ie and vhr(WT)!=2 then
endif
set KJr=Nst(imu(QT+"00","when calling fromRawCode in UnitShops, line 93"),"when calling new_IdGenerator in UnitShops, line 93")
set LJr=0
set XJr=mT-1
loop
exitwhen LJr>XJr
call RXc(KJr,"when calling next in UnitShops, line 95")
set LJr=LJr+1
endloop
call bXc(KJr,"when calling dispatch_IdGenerator_destroyIdGenerator in UnitShops, line 96")
set MM=MM-1
endfunction
function YJr takes integer aJr,integer nJr returns integer
local integer dJr
local integer fJr
local integer RJr
local integer TJr
if aJr==3 then
set dJr=0
else
set dJr=aJr+1
endif
set TJr=dJr
if aJr==3 then
if nJr==2 then
set fJr=0
else
set fJr=nJr+1
endif
set RJr=fJr
else
set RJr=nJr
endif
set h6=TJr
set F6=RJr
return h6
endfunction
function qJr takes nothing returns integer
set G6=0
set g6=0
return G6
endfunction
function HJr takes string FJr returns nothing
local integer kJr
local integer jJr
local integer xJr
local integer vJr
local integer mJr
local integer QJr
local integer WJr
local integer EJr
local integer ZJr
local integer UJr
local integer IJr
local integer PJr
local integer AJr
local integer DJr
set w3[MM]=FJr
set MM=MM+1
if Ie and vhr(WT)!=2 then
endif
if Ie and vhr(ET)!=2 then
endif
set kJr=Nst(imu(WT+"00","when calling fromRawCode in UnitShops, line 62"),"when calling new_IdGenerator in UnitShops, line 62")
set ZJr=qJr()
set UJr=g6
set jJr=ZJr
set xJr=UJr
set vJr=0
set mJr=vT-1
loop
exitwhen vJr>mJr
set AT[vJr]=RXc(kJr,"when calling next in UnitShops, line 65")
call KZc(KT,AT[vJr],vJr,"when calling put in UnitShops, line 66")
set IJr=jJr
set PJr=xJr
set DT[vJr]=IJr
set HT[vJr]=PJr
set AJr=YJr(jJr,xJr)
set DJr=F6
set jJr=AJr
set xJr=DJr
set vJr=vJr+1
endloop
call bXc(kJr,"when calling dispatch_IdGenerator_destroyIdGenerator in UnitShops, line 69")
set QJr=Nst(imu(ET+"00","when calling fromRawCode in UnitShops, line 70"),"when calling new_IdGenerator in UnitShops, line 70")
set WJr=0
set EJr=vT-1
loop
exitwhen WJr>EJr
set JT[WJr]=RXc(QJr,"when calling next in UnitShops, line 72")
set WJr=WJr+1
endloop
call bXc(QJr,"when calling dispatch_IdGenerator_destroyIdGenerator in UnitShops, line 73")
set MM=MM-1
endfunction
function Hyc takes string Ayc returns integer
local integer Dyc
set w3[MM]=Ayc
set MM=MM+1
if Hk==0 then
if Jk<32768 then
set Jk=Jk+1
set Dyc=Jk
set Kk[Dyc]=1490
else
call Mau("Out of memory: Could not create PlayerDefinedUnitTypesLoadCallback_registerPlayerDefinedUnitTypesLoadCallback_UnitShops.","when calling error in UnitShops, line 155")
set Dyc=0
endif
else
set Hk=Hk-1
set Dyc=Dk[Hk]
set Kk[Dyc]=1490
endif
set MM=MM-1
return Dyc
endfunction
function UQu takes integer ZQu returns nothing
set oa[ca]=ZQu
set ca=ca+1
endfunction
function tKr takes nothing returns nothing
local real wKr=kus(Xe,Be,2048.,-2048.)
local real uKr=x1
local real VJr=wKr
local real BJr=uKr
local integer NJr=0
local integer MJr=mT-1
local real rKr
local real sKr
loop
exitwhen NJr>MJr
set rKr=kus(VJr,BJr,256.,0.)
set sKr=x1
set VJr=rKr
set BJr=sKr
set NJr=NJr+1
endloop
endfunction
function oJr takes string SJr returns boolean
local integer cJr
set w3[MM]=SJr
set MM=MM+1
set xT[0]="Q"
set xT[1]="W"
set xT[2]="E"
set xT[3]="R"
set xT[4]="A"
set xT[5]="S"
set xT[6]="D"
set xT[7]="F"
set xT[8]="Z"
set xT[9]="X"
set xT[10]="C"
set xT[11]="V"
set vT=120
set mT=10
set QT="xs"
set WT="AT"
set ET="RT"
set ZT=Qe
set UT="Пустой слот"
set IT="Задать базовый тип"
set PT="Макс. здоровье: {0}
Макс. мана: {1}"
set KT=HDs("when calling new_HashMap in UnitShops, line 54")
call HJr("when calling generateAbilitiesIds in UnitShops, line 152")
call CJr("when calling generateShopsIds in UnitShops, line 153")
call tKr()
set cJr=Hyc("when calling alloc_PlayerDefinedUnitTypesLoadCallback_registerPlayerDefinedUnitTypesLoadCallback_UnitShops in UnitShops, line 155")
call UQu(cJr)
set MM=MM-1
return true
endfunction
function LRo takes nothing returns boolean
set MM=0
return oJr("UnitShops, line 1")
endfunction
function XRw takes unit LRw returns nothing
if GetUnitAbilityLevel(LRw,1096894786)==0 then
call UnitAddAbility(LRw,1094797618)
endif
set LRw=null
endfunction
function LUw takes nothing returns nothing
call XRw(GetEnumUnit())
endfunction
function LVw takes nothing returns nothing
local group KVw=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(Ucw))
if GetEventPlayerChatString()=="'translocation" then
call ForGroup(KVw,Icw)
elseif GetEventPlayerChatString()=="@translocation" then
call ForGroup(KVw,Pcw)
endif
call DestroyGroup(KVw)
set KVw=null
set KVw=null
endfunction
function KZw takes nothing returns boolean
if not(IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)==true)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
return true
endfunction
function LZw takes nothing returns nothing
if KZw()then
call SetUnitOwner(GetEnumUnit(),Player(bj_PLAYER_NEUTRAL_VICTIM),true)
endif
endfunction
function L_u takes nothing returns boolean
set ty=1095656300
set iy=1095331446
set Sy=1098282348
set cy=1097625441
set oy=1097625443
set Oy=1097101935
return true
endfunction
function Pvu takes string Ivu returns boolean
set w3[MM]=Ivu
set MM=MM+1
set Yq=Nst(2016423984,"when calling new_IdGenerator in ObjectIdGenerator, line 7")
call Nst(1213018160,"when calling new_IdGenerator in ObjectIdGenerator, line 8")
set Gq=Nst(1095577648,"when calling new_IdGenerator in ObjectIdGenerator, line 9")
set gq=Nst(1112354864,"when calling new_IdGenerator in ObjectIdGenerator, line 10")
call Nst(1229795376,"when calling new_IdGenerator in ObjectIdGenerator, line 11")
call Nst(1380790320,"when calling new_IdGenerator in ObjectIdGenerator, line 12")
set MM=MM-1
return true
endfunction
function Lfo takes nothing returns boolean
set MM=0
return Pvu("ObjectIdGenerator, line 1")
endfunction
function Lkw takes nothing returns boolean
if not(GetSpellAbilityId()==1093682504)then
return false
endif
return true
endfunction
function Kmw takes nothing returns boolean
if not(R2I(GetDestructableMaxLife(GetEnumDestructable()))==69)then
return false
endif
return true
endfunction
function Lmw takes nothing returns nothing
if Kmw()then
call RemoveDestructable(GetEnumDestructable())
endif
endfunction
function Vpr takes integer Xpr,string Cpr returns nothing
set Vd[Cd]=Xpr
set Bd[Cd]=Cpr
set Cd=Cd+1
endfunction
function Lpr takes nothing returns boolean
set Cd=0
call Vpr(1095262582,"avatar")
call Vpr(1095655798,"avatar2")
call Vpr(1095262830,"banish")
call Vpr(1095262824,"bash")
call Vpr(1095262842,"blizzard")
call Vpr(1095262562,"brillianceaura")
call Vpr(1095262564,"devotionaura")
call Vpr(1095263347,"divineshield")
call Vpr(1095263859,"flamestrike")
call Vpr(1095264354,"holylight")
call Vpr(1095265652,"massteleport")
call Vpr(1095266424,"phoenix")
call Vpr(1095266917,"resurrection")
call Vpr(1095263346,"siphonmana")
call Vpr(1095267426,"stormbolt")
call Vpr(1095268197,"summonwaterelemental")
call Vpr(1095267427,"thunderclap")
call Vpr(1095726692,"bigbadvoodoo")
call Vpr(1095726967,"bladestorm")
call Vpr(1095721836,"chainlightning")
call Vpr(1095721842,"criticalstrike")
call Vpr(1095722353,"earthquake")
call Vpr(1095721317,"enduranceaura")
call Vpr(1095725618,"enduranceaura2")
call Vpr(1095722611,"farsight")
call Vpr(1095725926,"feralspirit")
call Vpr(1095723127,"healingwave")
call Vpr(1095657591,"healingwave2")
call Vpr(1095723128,"hex")
call Vpr(1095657592,"hex2")
call Vpr(1095725669,"reincarnation")
call Vpr(1095725619,"reincarnation2")
call Vpr(1095725943,"serpentward")
call Vpr(1098019703,"serpentward2")
call Vpr(1095725875,"shockwave")
call Vpr(1095725876,"shockwave2")
call Vpr(1095724147,"voodoospirits")
call Vpr(1095726963,"warstomp")
call Vpr(1095726898,"warstomp2")
call Vpr(1095726955,"windwalk")
call Vpr(1096114542,"animatedead")
call Vpr(1096115042,"carrionbeetles")
call Vpr(1096115059,"carrionswarm")
call Vpr(1096115314,"darkritual")
call Vpr(1096115300,"deathanddecay")
call Vpr(1096115312,"deathpact")
call Vpr(1096115809,"frostarmor")
call Vpr(1096115829,"frostarmor2")
call Vpr(1096115822,"frostnova")
call Vpr(1096116589,"impale")
call Vpr(1096116590,"inferno")
call Vpr(1096117363,"locustswarm")
call Vpr(1096119148,"sleep")
call Vpr(1096119411,"spikedcarapace")
call Vpr(1096114549,"unholyaura")
call Vpr(1096114550,"vampiricaura")
call Vpr(1095066220,"blink")
call Vpr(1095066994,"entanglingroots")
call Vpr(1095066998,"evasion")
call Vpr(1095067243,"fanofknives")
call Vpr(1095067246,"forceofnature")
call Vpr(1095068013,"immolation")
call Vpr(1095069026,"manaburn")
call Vpr(1095070580,"scout")
call Vpr(1095263841,"searingarrows")
call Vpr(1095070568,"shadowstrike")
call Vpr(1095070566,"starfall")
call Vpr(1095065960,"thornsaura")
call Vpr(1095070833,"tranquility")
call Vpr(1095065970,"trueshotaura")
call Vpr(1095070582,"vengeance")
call Vpr(1095655778,"acidbomb")
call Vpr(1096904043,"attributebonus")
call Vpr(1095656050,"battleroar")
call Vpr(1095656033,"blackarrow")
call Vpr(1093679177,"plaguearrow")
call Vpr(1095656038,"breathoffire")
call Vpr(1095656294,"breathoffire2")
call Vpr(1095656296,"charm")
call Vpr(1095656289,"cleavingattack")
call Vpr(1095656307,"clusterrockets")
call Vpr(1095656241,"clusterrockets2")
call Vpr(1095656242,"clusterrockets3")
call Vpr(1095656243,"clusterrockets4")
call Vpr(1095263073,"coldarrows")
call Vpr(1095656547,"darkconversion")
call Vpr(1397646435,"darkconversion2")
call Vpr(1095656560,"darkportal")
call Vpr(1397646436,"deathanddecay2")
call Vpr(1095656549,"demolish")
call Vpr(1095656497,"demolish2")
call Vpr(1095656498,"demolish3")
call Vpr(1095656499,"demolish4")
call Vpr(1095656559,"doom")
call Vpr(1095656546,"drunkenbrawler")
call Vpr(1097032802,"drunkenbrawler2")
call Vpr(1095656552,"drunkenhaze")
call Vpr(1097032808,"drunkenhaze2")
call Vpr(1397646705,"earthquake2")
call Vpr(1094939447,"feralspirit2")
call Vpr(1095657060,"fingerofdeath")
call Vpr(1095657058,"firebolt")
call Vpr(1095657068,"forkedlightning")
call Vpr(1095657057,"frostarrows")
call Vpr(1095657587,"healingspray")
call Vpr(1095657588,"howlofterror")
call Vpr(1095657827,"incinerate")
call Vpr(1095657825,"incinerate2")
call Vpr(1095656562,"lifedrain")
call Vpr(1095658867,"manashield")
call Vpr(1095658863,"monsoon")
call Vpr(1095660409,"pocketfactory")
call Vpr(1095660337,"pocketfactory2")
call Vpr(1095660338,"pocketfactory3")
call Vpr(1095660339,"pocketfactory4")
call Vpr(1095069793,"poisonarrows")
call Vpr(1095660131,"rainofchaos")
call Vpr(1095660083,"rainofchaos2")
call Vpr(1095660134,"rainoffire")
call Vpr(1095660082,"reincarnation3")
call Vpr(1095660142,"reincarnation4")
call Vpr(1095660393,"silence")
call Vpr(1095660399,"soulburn")
call Vpr(1095660396,"soulpreservation")
call Vpr(1094939448,"spiritbeast")
call Vpr(1095660404,"stampede")
call Vpr(1098019696,"stampede2")
call Vpr(1095070562,"starfall2")
call Vpr(1094873954,"stormbolt2")
call Vpr(1095660391,"summonbear")
call Vpr(1095660407,"summonhawk")
call Vpr(1095658605,"summonlavaspawn")
call Vpr(1098019687,"summonmisha")
call Vpr(1098083440,"summonprawns")
call Vpr(1095660401,"summonquilbeast")
call Vpr(1098019697,"summonquilbeast2")
call Vpr(1095660655,"tornado")
call Vpr(1095660653,"transmute")
call Vpr(1095661155,"volcano")
call Vpr(1095661421,"wateryminion")
call Vpr(1095661419,"windwalk2")
call Vpr(1095724393,"mirrorimage")
call Vpr(1096115299,"deathcoil")
call Vpr(1093678933,"flameburst")
call Vpr(1093678673,"shadowfury")
call Vpr(1093678934,"slowingaura")
call Vpr(1093678931,"graspofdarkness")
call Vpr(1093678937,"breathoffrost")
call Vpr(1093678938,"chainoffrost")
call Vpr(1093679153,"sandbreath")
call Vpr(1093679154,"lightningballs")
call Vpr(1093679155,"forceofnature2")
call Vpr(1093678664,"blizzard2")
call Vpr(1093679157,"rainoffire2")
call Vpr(1093679160,"monsoon2")
call Vpr(1093678932,"darksummoning")
call Vpr(1095656806,"stormearthandfire")
call Vpr(1097033062,"stormearthandfire2")
call Vpr(1095265380,"lightofdawn")
call Vpr(1093678919,"powershot")
call Vpr(1093684314,"waveoflight")
call Vpr(1093679171,"summoningritual")
call Vpr(1093679172,"mindflay")
call Vpr(1093679173,"poisonspray")
call Vpr(1093679174,"felprotection")
call Vpr(1093679178,"searingtotem")
call Vpr(1093679182,"summonghouls")
call Vpr(1093678678,"storm")
call Vpr(1093679186,"powerwave")
call Vpr(1093679191,"massentanglingroots")
call Vpr(1093679193,"masspolymorph")
call Vpr(1093679408,"masshex")
call Vpr(1093679410,"masscyclone")
call Vpr(1093679412,"holylight2")
call Vpr(1093679413,"deathcoil2")
call Vpr(1093679414,"massbloodlust")
call Vpr(1093682488,"blessing")
call Vpr(1093679427,"lifebloom")
call Vpr(1093679428,"lifebloom2")
call Vpr(1093679429,"polymorph")
call Vpr(1093679430,"chainheal")
call Vpr(1093684056,"deathanddecay3")
call Vpr(1093679440,"chainofdeath")
call Vpr(1093679441,"flashofdeath")
call Vpr(1093678662,"lavaburst")
call Vpr(1093679442,"energybeam")
call Vpr(1093679443,"suddenrush")
call Vpr(1093679444,"secondwind")
call Vpr(1093679445,"summonrockgolems")
call Vpr(1093681456,"summonrevenants")
call Vpr(1093681459,"summonseaelemental")
call Vpr(1093678669,"invisibility")
call Vpr(1093682257,"deadlyplague")
call Vpr(1093677900,"voodoocharm")
call Vpr(1093678155,"holyrain")
call Vpr(1093679425,"antimagicshell")
call Vpr(1093679426,"antimagicshell2")
call Vpr(1093681490,"wither")
call Vpr(1093679432,"baneofdoom")
call Vpr(1093681986,"poweroverwhelming")
call Vpr(1093681996,"sunderingblow")
call Vpr(1093682000,"felenergy")
call Vpr(1093682001,"felenergy2")
call Vpr(1093682002,"heroicthrow")
call Vpr(1093678145,"heroicthrow2")
call Vpr(1093677899,"aimedshot")
call Vpr(1093678914,"mobilization")
call Vpr(1093677903,"remorselesswinter")
call Vpr(1093678915,"death'sembrace")
call Vpr(1093679446,"energystrike")
call Vpr(1093678642,"chaosbolt")
call Vpr(1093683019,"stimulatingdrink")
call Vpr(1093682227,"avengingwrath")
call Vpr(1093682233,"fire")
call Vpr(1093682241,"thunderball")
call Vpr(1093682245,"totemofthunderstorm")
call Vpr(1093677895,"multishot")
call Vpr(1093684051,"magicmultishot")
call Vpr(1093684052,"rocketmultishot")
call Vpr(1093682254,"fierymultishot")
call Vpr(1093677913,"fierypotion")
call Vpr(1093679169,"forestspirits")
call Vpr(1093678415,"holywake")
call Vpr(1093678416,"deathwake")
call Vpr(1093682224,"envenomedweapons")
call Vpr(1093682243,"flare")
call Vpr(1093682246,"mobilization2")
call Vpr(1093682247,"layonhands")
call Vpr(1093682253,"suddendoom")
call Vpr(1093684274,"glow")
call Vpr(1093682260,"soulleech")
call Vpr(1093682483,"electrostaticstrike")
call Vpr(1093682486,"earthbindtotem")
call Vpr(1093682497,"manatidetotem")
call Vpr(1093682502,"whirlwind")
call Vpr(1093682503,"deathpact2")
call Vpr(1093678641,"illusion")
call Vpr(1093682504,"elementalblast")
call Vpr(1093678920,"bloodyfangs")
call Vpr(1093678681,"blazesaw")
call Vpr(1093682506,"heroicleap")
call Vpr(1093682509,"armyofthedeadzombie")
call Vpr(1093682511,"rainofstars")
call Vpr(1093682512,"rainofstars2")
call Vpr(1093678150,"firestorm")
call Vpr(1093682515,"leapoffaith")
call Vpr(1093678917,"mirroroffate")
call Vpr(1093682517,"sweepingstrikes")
call Vpr(1093682522,"echooftheelements")
call Vpr(1093682003,"shadowdance")
call Vpr(1093682740,"deadlysickles")
call Vpr(1093682742,"dodge")
call Vpr(1093678661,"stormofsouls")
call Vpr(1093682760,"ironcapture")
call Vpr(1093678644,"poweraura")
call Vpr(1093678663,"auraofterror")
call Vpr(1093682505,"howlingblast")
call Vpr(1093682762,"forceofnature3")
call Vpr(1093682764,"greatforceofnature")
call Vpr(1093682766,"greatforceofnature2")
call Vpr(1093682768,"armyofthedeadskeletons")
call Vpr(1093682769,"explosivewave")
call Vpr(1093682770,"frostbolt")
call Vpr(1093682771,"hurlboulder")
call Vpr(1093682772,"fear")
call Vpr(1093682777,"waspswarm")
call Vpr(1093682993,"attention")
call Vpr(1093682994,"attention2")
call Vpr(1093682995,"attention3")
call Vpr(1094935923,"charactershield")
call Vpr(1093678682,"specialmanashield")
call Vpr(1093678896,"rebirth")
call Vpr(1093682776,"strike")
call Vpr(1093678897,"instantdamage")
call Vpr(1093677107,"massdamage")
call Vpr(1093677109,"massannihilation")
call Vpr(1093678898,"stun")
call Vpr(1093678899,"specialcriticalstrike")
call Vpr(1093677106,"insuperableobstacle")
call Vpr(1093677105,"massstun")
call Vpr(1093681465,"specialblink")
call Vpr(1093678900,"iconofsin")
call Vpr(1093678901,"handofdestruction")
call Vpr(1093678903,"rainofhellfire")
call Vpr(1093681473,"infinityterror")
call Vpr(1093678904,"wordoflies")
call Vpr(1093678913,"tormentofpain")
call Vpr(1093678905,"gripofdecay")
call Vpr(1093683018,"shadowstep")
call Vpr(1093683509,"shieldwall")
call Vpr(1093683015,"firefury")
call Vpr(1093683279,"ravager")
call Vpr(1093683281,"recklessness")
call Vpr(1093683287,"deathstrike")
call Vpr(1093683288,"cloakofshadows")
call Vpr(1093683505,"deepwounds")
call Vpr(1093678640,"jump")
call Vpr(1093683280,"resistantskin")
call Vpr(1093683506,"resistantskin")
call Vpr(1093683508,"windfury")
call Vpr(1093679185,"danceofdeath")
call Vpr(1093683536,"danceofpain")
call Vpr(1093683540,"charge")
call Vpr(1093678672,"auraofdestruction")
call Vpr(1093683761,"divineshieldalter")
call Vpr(1095725939,"seismicslam")
call Vpr(1093683792,"warbanner")
call Vpr(1093683001,"temporalrift")
call Vpr(1093683289,"iceblock")
call Vpr(1093683799,"feigndeath")
call Vpr(1093684045,"protectionfield")
call Vpr(pq,"meteor")
call Vpr(1093684053,"shroudofconcealment")
call Vpr(1093684057,"felprotectionalter")
call Vpr(1093684276,"hunter'smark")
call Vpr(1093684278,"lightningwhip")
call Vpr(1093684280,"scannersweep")
call Vpr(1093682761,"fieryprison")
call Vpr(1095722083,"dragon'scall")
call Vpr(1095721843,"colossussmash")
call Vpr(1095722360,"execute")
call Vpr(1095722354,"enragedregeneration")
call Vpr(1095725665,"rampage")
call Vpr(1095721581,"bombardment")
call Vpr(1095724656,"noblephantasm")
call Vpr(1095722099,"divinestorm")
call Vpr(1095722081,"disarm")
call Vpr(1095721591,"burningwave")
call Vpr(1095722359,"explosivewave2")
call Vpr(1095722868,"glaivethrow")
call Vpr(1095723105,"hatred")
call Vpr(1095725933,"surgeofmalice")
call Vpr(1095721573,"battleenravishment")
call Vpr(1095066213,"battleenravishment")
call Vpr(1093682227,"enrage")
call Vpr(1093683523,"magefirebolt")
call Vpr(1093683524,"mageflamestrike")
call Vpr(1093683014,"felfirebolt")
call Vpr(1093678128,"felrainoffire")
call Vpr(1093683020,"felrainoffire2")
call Vpr(1093683025,"felflamestrike")
call Vpr(1093683026,"felbreathoffire")
call Vpr(1093683027,"felincinerate")
call Vpr(1093683028,"felincinerate2")
call Vpr(1093683031,"felsoulburn")
call Vpr(1093683033,"fellavaburst")
call Vpr(1093683251,"felfierypotion")
call Vpr(1093684554,"auraofblight")
call Vpr(1093684556,"tormentingplague")
call Vpr(1093684561,"immolationaura")
call Vpr(1093684550,"iceboundfortitude")
call Vpr(1093684545,"shatteringthrow")
call Vpr(1093684552,"victoryrush")
call Vpr(1093684546,"desperateplea")
call Vpr(1093684557,"powerwordshield")
call Vpr(1093684303,"lightningbarrier")
call Vpr(1093684304,"lightningbarrieralter")
call Vpr(1093684309,"magicbarrier")
call Vpr(1093684310,"magicbarrieralter")
call Vpr(1093684311,"flamebarrier")
call Vpr(1093684312,"flamebarrieralter")
call Vpr(1093684534,"frostbarrier")
call Vpr(1093684535,"frostbarrieralter")
call Vpr(1093684300,"crushingwave")
call Vpr(1093684302,"reversepower")
call Vpr(my,"cleave")
call Vpr(GR,"stickygrenadenew")
call Vpr(1093683276,"ignorepain")
call Vpr(oT,"touchofkarma")
call Vpr(Vp,"emergencyevade")
call Vpr(kq,"obliterate")
call Vpr(Ha,"rollthebones")
return true
endfunction
function M2w takes nothing returns boolean
if GetSpellAbilityId()==1095726967 then
return true
else
return false
endif
endfunction
function M3w takes nothing returns nothing
call GroupRemoveUnit(ps,GetSpellAbilityUnit())
endfunction
function MBw takes nothing returns boolean
if not(GetSpellAbilityId()==1093682997)then
return false
endif
return true
endfunction
function MEw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,6)=="height")then
return false
endif
return true
endfunction
function BGw takes integer VGw returns nothing
set Pb[VGw]=Pb[0]
set Pb[0]=VGw
endfunction
function Ofw takes integer ofw returns nothing
set sy=ofw
call TriggerEvaluate(mb[xb[ofw]])
endfunction
function MGw takes nothing returns nothing
local integer NGw=LoadInteger(i,y,GetHandleId(GetExpiredTimer()))
call SetUnitX(Zb[NGw],GetUnitX(Zb[NGw])+Wb[NGw])
call SetUnitY(Zb[NGw],GetUnitY(Zb[NGw])+Eb[NGw])
set Qb[NGw]=Qb[NGw]-1
if Qb[NGw]==0 then
call ATw(GetExpiredTimer())
call Ofw(Ub[NGw])
call BGw(NGw)
endif
endfunction
function MJw takes nothing returns nothing
local location BJw=Location(GetSpellTargetX(),GetSpellTargetY())
local integer NJw=GetSpellAbilityId()
if NJw==1097024817 then
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl",BJw))
endif
if NJw==1097024818 then
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl",BJw))
endif
if NJw==1097024819 then
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\ReviveHuman\\ReviveHuman.mdl",BJw))
endif
if NJw==1097024820 then
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Undead\\UndeadDissipate\\UndeadDissipate.mdl",BJw))
endif
if NJw==1097024821 then
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Naga\\NagaDeath\\NagaDeath.mdl",BJw))
endif
if NJw==1097024822 then
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\NightElf\\NEDeathMedium\\NEDeath.mdl",BJw))
endif
if NJw==1097024823 then
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Undead\\UDeathMedium\\UDeath.mdl",BJw))
endif
set NJw=0
call RemoveLocation(BJw)
set BJw=null
set BJw=null
endfunction
function MKw takes nothing returns nothing
local unit NKw=GetSpellAbilityUnit()
if GetSpellAbilityId()==1097028407 then
call UnitRemoveAbility(NKw,1097024055)
call UnitAddAbility(NKw,1097024056)
call UnitMakeAbilityPermanent(NKw,true,1097024056)
call UnitRemoveAbility(NKw,1097026671)
call UnitRemoveAbility(NKw,1097028940)
else
call UnitRemoveAbility(NKw,1097024056)
call UnitAddAbility(NKw,1097024055)
call UnitMakeAbilityPermanent(NKw,true,1097024055)
call UnitAddAbility(NKw,1097026671)
call UnitMakeAbilityPermanent(NKw,true,1097026671)
call UnitAddAbility(NKw,1097028940)
call UnitMakeAbilityPermanent(NKw,true,1097028940)
endif
set NKw=null
set NKw=null
endfunction
function NLw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function MLw takes nothing returns nothing
if NLw()then
call UnitRemoveTypeBJ(UNIT_TYPE_UNDEAD,GetEnumUnit())
endif
endfunction
function MNw takes nothing returns boolean
return IsUnitInRangeLoc(GetFilterUnit(),GetUnitLoc(Os),50.)==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_FLYING)==false and IsUnitAlly(GetFilterUnit(),GetOwningPlayer(Os))==false and GetOwningPlayer(GetFilterUnit())!=GetOwningPlayer(Os)
endfunction
function Ecu takes nothing returns integer
return Op[lp-1]
endfunction
function FPi takes integer gPi,destructable hPi returns nothing
call leu(hPi)
endfunction
function OPi takes integer cPi,destructable oPi returns nothing
call leu(oPi)
endfunction
function DZu takes nothing returns integer
set L1=0
return L1
endfunction
function Kks takes integer Iks returns nothing
local integer Pks=0
local integer Aks
local integer Dks
local real Hks
local real Jks
set QE[Iks]=Pks
set Aks=0
set WE[Iks]=Aks
set Dks=DZu()
set EE[Iks]=Dks
set Hks=uEu()
set Jks=U1
set ZE[Iks]=Hks
set UE[Iks]=Jks
set IE[Iks]=0.0
set PE[Iks]=0.0
set AE[Iks]=1.0
set DE[Iks]=1
set HE[Iks]=0.0
set JE[Iks]=0.0
set KE[Iks]=0
set LE[Iks]=0
endfunction
function Mks takes integer Bks,integer Nks returns nothing
call Kks(Bks)
set mE[Bks]=Nks
endfunction
function ZhS takes string WhS returns integer
local integer EhS
set w3[MM]=WhS
set MM=MM+1
if Pg==0 then
if Ag<32768 then
set Ag=Ag+1
set EhS=Ag
set Dg[EhS]=1568
else
call Mau("Out of memory: Could not create SingleDestructableData.","when calling error in DestructableData, line 54")
set EhS=0
endif
else
set Pg=Pg-1
set EhS=Ig[Pg]
set Dg[EhS]=1568
endif
set MM=MM-1
return EhS
endfunction
function Vks takes integer Lks,string Xks returns integer
local integer Cks
set w3[MM]=Xks
set MM=MM+1
set Cks=ZhS("when calling alloc_SingleDestructableData in DestructableData, line 71")
call Mks(Cks,Lks)
set MM=MM-1
return Cks
endfunction
function pYu takes hashtable lYu,integer bYu,integer yYu returns player
return LoadPlayerHandle(lYu,bYu,yYu)
endfunction
function eHu takes destructable pHu returns player
return pYu(Na,l7s(pHu),wn)
endfunction
function jwu takes integer Fwu,integer kwu returns integer
set c3=bgu(Fwu,hy[kwu])
return c3
endfunction
function Iwu takes integer Zwu,integer Uwu returns integer
set O3=jwu(Zwu,Uwu)
return O3
endfunction
function Apu takes integer Ipu,integer Ppu returns integer
set r1=Iwu(Ipu,Ppu)
return r1
endfunction
function Jhr takes string Hhr returns real
return S2R(Hhr)
endfunction
function Svu takes integer tvu,string ivu returns real
return Jhr(wvu(tvu,ivu+",."))
endfunction
function Qvu takes integer mvu returns real
return Svu(mvu,"occH")
endfunction
function RHu takes destructable fHu returns real
return nYu(Na,l7s(fHu),sn)
endfunction
function Reu takes destructable feu returns real
return GetDestructableLife(feu)
endfunction
function Upu takes integer Epu,integer Zpu returns integer
set u1=Ewu(Epu,Zpu)
return u1
endfunction
function YHu takes destructable THu returns integer
return iYu(Na,l7s(THu),tn)
endfunction
function aHu takes destructable qHu returns real
return nYu(Na,l7s(qHu),un)
endfunction
function cEu takes real iEu,real SEu returns real
set A1=iEu
set D1=SEu
return A1
endfunction
function dHu takes destructable nHu returns real
return nYu(Na,l7s(nHu),rn)
endfunction
function heu takes destructable geu returns real
return GetDestructableMaxLife(geu)
endfunction
function oeu takes destructable ceu returns integer
return GetDestructableTypeId(ceu)
endfunction
function pUu takes real bUu returns integer
local integer yUu
if bUu>0. then
set yUu=qUu(bUu+.5)
else
set yUu=qUu(bUu-.5)
endif
return yUu
endfunction
function qeu takes destructable eeu returns boolean
return IsDestructableInvulnerable(eeu)
endfunction
function Seu takes destructable ieu returns real
return GetDestructableY(ieu)
endfunction
function teu takes destructable seu returns real
return GetDestructableX(seu)
endfunction
function reu takes destructable ueu returns real
set F3=teu(ueu)
set k3=Seu(ueu)
return F3
endfunction
function veu takes destructable xeu returns real
return GetDestructableOccluderHeight(xeu)
endfunction
function vvu takes integer xvu returns real
return Svu(xvu,"HP")
endfunction
function qks takes integer AFs,destructable DFs,real HFs,real JFs,string KFs returns nothing
local integer LFs
local integer XFs
local integer CFs
local integer VFs
local integer BFs
local integer NFs
local integer MFs
local integer wks
local integer uks
local real rks
local real sks
local integer tks
local integer iks
local integer Sks
local integer cks
local integer oks
local integer Oks
local integer lks
local integer bks
local integer yks
local integer pks
local integer eks
set w3[MM]=KFs
set MM=MM+1
set NFs=0
set QE[AFs]=NFs
set MFs=0
set WE[AFs]=MFs
set wks=IBc(mE[AFs],oeu(DFs),"when calling addRawcode in DestructableData, line 77")
set EE[AFs]=wks
if qeu(DFs)then
set uks=Upu(QE[AFs],0)
set QE[AFs]=uks
endif
set rks=cEu(Qus(reu(DFs),k3,HFs,JFs),i1)
set sks=D1
set ZE[AFs]=rks
set UE[AFs]=sks
set IE[AFs]=aHu(DFs)
if IE[AFs]!=0. then
set tks=Upu(QE[AFs],1)
set QE[AFs]=tks
set LFs=qUu(IE[AFs])
if rgu(LFs)!=IE[AFs]or LFs>255 then
set iks=Upu(QE[AFs],2)
set QE[AFs]=iks
set XFs=qUu(IE[AFs]*10.)+32767
if(XFs-32767)*1./10==IE[AFs]and XFs>=0 and XFs<=65535 then
set Sks=Apu(QE[AFs],1)
set QE[AFs]=Sks
endif
endif
endif
set PE[AFs]=dHu(DFs)
set AE[AFs]=RHu(DFs)
if AE[AFs]!=0. then
set cks=Upu(QE[AFs],3)
set QE[AFs]=cks
set CFs=qUu(AE[AFs])
if rgu(CFs)!=AE[AFs]or CFs>255 then
set oks=Upu(QE[AFs],4)
set QE[AFs]=oks
set VFs=qUu(AE[AFs]*10.)+32767
if(VFs-32767)*1./10==AE[AFs]and VFs>=0 and VFs<=65535 then
set Oks=Apu(QE[AFs],3)
set QE[AFs]=Oks
endif
endif
endif
set DE[AFs]=YHu(DFs)
set BFs=DE[AFs]
if BFs==1 then
set lks=Upu(QE[AFs],5)
set QE[AFs]=lks
elseif BFs==2 then
set bks=Upu(QE[AFs],6)
set QE[AFs]=bks
elseif BFs==3 then
set yks=Upu(QE[AFs],5)
set QE[AFs]=yks
set pks=Upu(QE[AFs],6)
set QE[AFs]=pks
endif
set HE[AFs]=veu(DFs)
if HE[AFs]!=Qvu(oeu(DFs))then
endif
set KE[AFs]=pUu(heu(DFs))
if KE[AFs]!=pUu(vvu(oeu(DFs)))then
endif
set LE[AFs]=pUu(Reu(DFs))
if LE[AFs]!=KE[AFs]then
endif
if WE[AFs]!=0 then
set eks=Upu(QE[AFs],7)
set QE[AFs]=eks
endif
set MM=MM-1
endfunction
function xkc takes integer gkc,destructable hkc,real Fkc,real kkc,string jkc returns nothing
set w3[MM]=jkc
set MM=MM+1
if Dg[gkc]==0 then
if gkc==0 then
call Mau("Nullpointer exception when calling SingleDestructableData.build","when calling error in DestructableData, line 74")
else
call Mau("Called SingleDestructableData.build on invalid object.","when calling error in DestructableData, line 74")
endif
endif
call qks(gkc,hkc,Fkc,kkc,"when calling build in DestructableData, line 74")
set MM=MM-1
endfunction
function UTu takes hashtable WTu,integer ETu,integer ZTu returns boolean
return HaveSavedReal(WTu,ETu,ZTu)
endfunction
function yHu takes destructable bHu returns boolean
return UTu(Na,l7s(bHu),un)
endfunction
function QFs takes integer kFs,destructable jFs,string xFs returns nothing
local integer vFs
local integer mFs
set w3[MM]=xFs
set MM=MM+1
if yHu(jFs)and eHu(jFs)==TE[kFs]then
set mFs=eE[YE[kFs]]
set vFs=Vks(pE[YE[kFs]],"when calling new_SingleDestructableData in DestructableData, line 272")
call xkc(vFs,jFs,GE[kFs],gE[kFs],"when calling build in DestructableData, line 272")
call Nno(mFs,vFs,"when calling add in DestructableData, line 272")
endif
set MM=MM-1
endfunction
function Tgc takes integer dgc,destructable fgc,string Rgc returns nothing
set w3[MM]=Rgc
set MM=MM+1
if ag[dgc]==0 then
if dgc==0 then
call Mau("Nullpointer exception when calling ForGroupCallbackD.callback","when calling error in ClosureForGroups, line 149")
else
call Mau("Called ForGroupCallbackD.callback on invalid object.","when calling error in ClosureForGroups, line 149")
endif
endif
if ag[dgc]<=809 then
if ag[dgc]<=808 then
call FPi(dgc,fgc)
else
call QFs(dgc,fgc,"when calling callback_forDestructablesInRect_PositionedDestructableData_DestructableData in ClosureForGroups, line 149")
endif
else
call OPi(dgc,fgc)
endif
set MM=MM-1
endfunction
function Wcu takes string Qcu returns boolean
set w3[MM]=Qcu
set MM=MM+1
call Tgc(Ecu(),GetEnumDestructable(),"when calling callback in ClosureForGroups, line 152")
set MM=MM-1
return false
endfunction
function wou takes string Ncu returns boolean
local boolean Mcu
set w3[MM]=Ncu
set MM=MM+1
set Mcu=Wcu("when calling filterD in ClosureForGroups, line 181")
set MM=MM-1
return Mcu
endfunction
function MRo takes nothing returns boolean
set MM=0
return wou("ClosureForGroups, line 181")
endfunction
function MVw takes nothing returns nothing
local group NVw=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(Dcw))
if GetEventPlayerChatString()=="'immunitytoprolongedlossofcontrol" then
call ForGroup(NVw,Hcw)
elseif GetEventPlayerChatString()=="@immunitytoprolongedlossofcontrol" then
call ForGroup(NVw,Jcw)
endif
call DestroyGroup(NVw)
set NVw=null
set NVw=null
endfunction
function NXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="item truemage'sstaff")then
return false
endif
return true
endfunction
function MXw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
if NXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],NSw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function BZw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function NZw takes nothing returns boolean
if not BZw()then
return false
endif
return true
endfunction
function MZw takes nothing returns nothing
if NZw()then
call AddSpecialEffectTargetUnitBJ(Q[S2I(SubStringBJ(GetEventPlayerChatString(),7,7))],GetEnumUnit(),m[S2I(SubStringBJ(GetEventPlayerChatString(),5,6))])
set X[GetConvertedPlayerId(GetTriggerPlayer())]=X[GetConvertedPlayerId(GetTriggerPlayer())]+1
if GetTriggerPlayer()==Player(0)then
set W[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(1)then
set E[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(2)then
set J[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(3)then
set H[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(4)then
set D[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(5)then
set A[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(6)then
set P[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(7)then
set I[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(8)then
set U[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(9)then
set Z[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(10)then
set L[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(11)then
set K[X[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
endif
endfunction
function AHr takes code PHr returns nothing
call ixr(FT,Condition(PHr))
endfunction
function HHr takes code DHr returns nothing
call ixr(hT,Condition(DHr))
endfunction
function ZgS takes string WgS returns integer
local integer EgS
set w3[MM]=WgS
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set EgS=ZG
set UG[EgS]=687
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_ClosureEvents.","when calling error in ClosureEvents, line 292")
set EgS=0
endif
else
set EG=EG-1
set EgS=WG[EG]
set UG[EgS]=687
endif
set MM=MM-1
return EgS
endfunction
function diu takes string aiu returns boolean
local integer niu
set w3[MM]=aiu
set MM=MM+1
set Ky=ConvertPlayerEvent(96)
set Ny=HDs("when calling new_HashMap in ClosureEvents, line 99")
set My=HDs("when calling new_HashMap in ClosureEvents, line 100")
set rp=false
set Ly=CreateTrigger()
set Xy=CreateTrigger()
set Cy=CreateTrigger()
set By=0
call HHr(Bqw)
call AHr(Nqw)
set niu=ZgS("when calling alloc_CallbackSingle_nullTimer_ClosureEvents in ClosureEvents, line 292")
call KGs(niu)
call Cou(niu,"when calling nullTimer in ClosureEvents, line 292")
set MM=MM-1
return true
endfunction
function Mfo takes nothing returns boolean
set MM=0
return diu("ClosureEvents, line 1")
endfunction
function Mjw takes nothing returns nothing
call CameraClearNoiseForPlayer(GetEnumPlayer())
endfunction
function Mmu takes nothing returns boolean
set Xq=851971
set Hq=851985
set Jq=852488
set Kq=851986
set Lq=851972
return true
endfunction
function Mmw takes nothing returns nothing
call IssueImmediateOrderBJ(GetOrderedUnit(),"stop")
endfunction
function N1w takes nothing returns nothing
local unit C1w=GetSpellTargetUnit()
local integer V1w=0
local integer B1w=GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682515)
if IsUnitInGroup(C1w,Bs)==true then
call GroupRemoveUnit(Bs,C1w)
call iTw(1.)
endif
call GroupAddUnit(Bs,C1w)
call UnitAddAbility(C1w,1093683764)
call UnitMakeAbilityPermanent(C1w,true,1093683764)
call SetUnitAbilityLevel(C1w,1093683764,B1w)
loop
exitwhen IsUnitInGroup(C1w,Bs)==false
call DestroyEffect(AddSpecialEffectTarget("Units\\NightElf\\Wisp\\WispExplode.mdl",C1w,"origin"))
call iTw(1.)
set V1w=V1w+1
if V1w==8 or GetUnitState(C1w,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(Bs,C1w)
endif
endloop
call UnitRemoveAbility(C1w,1093683764)
call UnitRemoveAbility(C1w,1110454354)
set C1w=null
set V1w=0
set C1w=null
endfunction
function N3w takes nothing returns boolean
if GetSpellAbilityId()==1095265652 then
return true
endif
return false
endfunction
function N4w takes nothing returns boolean
if GetSpellAbilityId()==1093682742 then
return true
endif
return false
endfunction
function N5w takes nothing returns boolean
if GetSpellAbilityId()==1093684045 then
return true
else
return false
endif
endfunction
function N6w takes nothing returns nothing
local group B6w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(B6w,GetSpellTargetLoc(),300.,Condition(ebw))
call ForGroup(B6w,qbw)
call DestroyGroup(B6w)
set B6w=null
set B6w=null
endfunction
function N7w takes nothing returns nothing
call UnitRemoveAbilityBJ(1098084457,GetSpellAbilityUnit())
call UnitAddAbilityBJ(1093682006,GetSpellAbilityUnit())
call UnitRemoveAbilityBJ(1093682007,GetSpellAbilityUnit())
endfunction
function NAw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,3)=="sky")then
return false
endif
return true
endfunction
function NDu takes nothing returns nothing
call jGu(Na,l7s(GetFilterUnit()))
endfunction
function NDw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
if SubStringBJ(GetEventPlayerChatString(),6,7)=="a1" then
call CreateDestructableLoc(1096053874,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,4))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="a2" then
call CreateDestructableLoc(1096053859,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,2))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="b1" then
call CreateDestructableLoc(1112831095,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="b2" then
call CreateDestructableLoc(1112831075,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,2))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="o1" then
call CreateDestructableLoc(1330934903,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="c1" then
call CreateDestructableLoc(1498703476,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,1))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="c2" then
call CreateDestructableLoc(1498706804,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,1))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="c3" then
call CreateDestructableLoc(1498702708,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,1))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="c4" then
call CreateDestructableLoc(1247044468,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,1))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="c5" then
call CreateDestructableLoc(1247048823,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="d1" then
call CreateDestructableLoc(1146385256,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,7))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="f1" then
call CreateDestructableLoc(1129608306,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,4))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="f2" then
call CreateDestructableLoc(1129608291,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,2))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="i1" then
call CreateDestructableLoc(1230271607,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="i2" then
call CreateDestructableLoc(1230271587,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,2))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="l1" then
call CreateDestructableLoc(1179939959,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="l2" then
call CreateDestructableLoc(1280601204,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="l3" then
call CreateDestructableLoc(1465152372,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="l4" then
call CreateDestructableLoc(1465152631,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="n1" then
call CreateDestructableLoc(1314157687,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="n2" then
call CreateDestructableLoc(1314157667,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,2))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="s1" then
call CreateDestructableLoc(1515484279,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,9))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="s2" then
call CreateDestructableLoc(1515484259,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,2))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="u1" then
call CreateDestructableLoc(1196716904,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,GetRandomInt(0,7))
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="wI" then
call CreateDestructableLoc(1280603954,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,2)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="w\\" then
call CreateDestructableLoc(1280603953,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,2)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="w/" then
call CreateDestructableLoc(1280603955,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,2)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,7)=="w-" then
call CreateDestructableLoc(1280603952,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,2)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,10)=="rock0" then
call CreateDestructableLoc(1280602723,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,0)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,10)=="rock1" then
call CreateDestructableLoc(1280602723,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,1)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,10)=="rock2" then
call CreateDestructableLoc(1280602723,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,2)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,10)=="rock3" then
call CreateDestructableLoc(1280602723,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,3)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,10)=="rock4" then
call CreateDestructableLoc(1280602723,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,4)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,10)=="rock5" then
call CreateDestructableLoc(1280602723,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,5)
else
call DoNothing()
endif
if SubStringBJ(GetEventPlayerChatString(),6,10)=="sm" then
call CreateDestructableLoc(1110454611,GetUnitLoc(GetEnumUnit()),GetRandomDirectionDeg(),1.00,5)
else
call DoNothing()
endif
call RemoveLocation(G)
endfunction
function NFw takes nothing returns nothing
local unit VFw
local timer BFw
if GetUnitAbilityLevel(GetEventDamageSource(),1112499570)==0 or GetEventDamage()==0. or IsUnitInGroup(GetEventDamageSource(),ql)then
set VFw=null
set BFw=null
return
endif
set VFw=GetEventDamageSource()
call SetWidgetLife(VFw,GetWidgetLife(VFw)+25*LoadInteger(i,al,GetHandleId(VFw)))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",VFw,"origin"))
call GroupAddUnit(ql,VFw)
set BFw=ITw()
call SaveUnitHandle(i,y,GetHandleId(BFw),VFw)
call TimerStart(BFw,0.5,false,eww_2837)
set BFw=null
set VFw=null
set VFw=null
set BFw=null
endfunction
function NHw takes nothing returns boolean
return GetDestructableTypeId(GetTriggerDestructable())==1146383478
endfunction
function NMw takes nothing returns nothing
local unit KMw=GetSpellTargetUnit()
local location LMw=null
local real XMw=0.
local real CMw=0.
local effect VMw=null
local integer BMw=0
if IsUnitInGroup(KMw,tt)==true then
call GroupRemoveUnit(St,KMw)
call GroupRemoveUnit(tt,KMw)
call iTw(1.)
endif
set LMw=GetUnitLoc(GetSpellTargetUnit())
set XMw=GetUnitState(GetSpellTargetUnit(),UNIT_STATE_LIFE)
set CMw=GetUnitState(GetSpellTargetUnit(),UNIT_STATE_MANA)
set VMw=AddSpecialEffectTarget("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareTarget.mdl",GetSpellTargetUnit(),"overhead")
call UnitDamageTarget(GetSpellAbilityUnit(),GetSpellTargetUnit(),625.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call GroupAddUnit(tt,KMw)
call GroupAddUnit(St,KMw)
call UnitAddAbility(KMw,1093683796)
call UnitMakeAbilityPermanent(KMw,true,1093683796)
loop
exitwhen IsUnitInGroup(KMw,tt)==false
call iTw(1.)
set BMw=BMw+1
if BMw==10 then
call GroupRemoveUnit(tt,KMw)
endif
endloop
call DestroyEffect(VMw)
if IsUnitInGroup(KMw,St)==true and GetUnitState(KMw,UNIT_STATE_LIFE)>0. then
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl",GetUnitLoc(KMw)))
call SetUnitPositionLoc(KMw,LMw)
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl",GetUnitLoc(KMw)))
call SetUnitState(KMw,UNIT_STATE_LIFE,XMw)
call SetUnitState(KMw,UNIT_STATE_MANA,CMw)
endif
call UnitRemoveAbility(KMw,1093683796)
call UnitRemoveAbility(KMw,1110455367)
call GroupRemoveUnit(St,KMw)
call GroupRemoveUnit(tt,KMw)
call RemoveLocation(LMw)
set KMw=null
set LMw=null
set XMw=0.
set CMw=0.
set VMw=null
set BMw=0
set KMw=null
set LMw=null
set VMw=null
endfunction
function NNw takes nothing returns boolean
return GetSpellAbilityId()==1093683279
endfunction
function Flt takes integer Glt,unit glt,string hlt returns nothing
set w3[MM]=hlt
set MM=MM+1
call Cqo(mH[Glt],vvr(glt),"when calling add in PlayerUtil, line 29")
set MM=MM-1
endfunction
function ZLt takes integer ELt returns integer
return iK[ELt]
endfunction
function h2o takes integer Y2o,string G2o returns integer
local integer g2o
set w3[MM]=G2o
set MM=MM+1
if hx[Y2o]==0 then
if Y2o==0 then
call Mau("Nullpointer exception when calling Context.getPlayerId","when calling error in ScmdDataTypes, line 1157")
else
call Mau("Called Context.getPlayerId on invalid object.","when calling error in ScmdDataTypes, line 1157")
endif
endif
set g2o=ZLt(Y2o)
set MM=MM-1
return g2o
endfunction
function k7u takes unit Y7u,integer G7u,string g7u returns boolean
local player h7u
local boolean F7u
set w3[MM]=g7u
set MM=MM+1
set h7u=g7s(Y7u)
set F7u=(not d7u(S7s(Y7u),"when calling isUnitTypeProtected in ScmdPermissions, line 27"))and pa[G7u]==h7u or(not PWu(h7u))or kd[G7u]>kd[bWu(h7u)]
set MM=MM-1
set h7u=null
return F7u
endfunction
function Imi takes integer Emi,unit Zmi,string Umi returns nothing
set w3[MM]=Umi
set MM=MM+1
if k7u(Zmi,h2o(vL[Emi],"when calling getPlayerId in ScmdUnitParamLinkingBuiltins, line 183"),"when calling isUnitAccessibleByPlayer in ScmdUnitParamLinkingBuiltins, line 183")then
call Iqo(mL[Emi],Zmi)
endif
set MM=MM-1
endfunction
function DHu takes unit AHu returns boolean
return jTu(Na,l7s(AHu),on)
endfunction
function cFt takes integer SFt returns nothing
endfunction
function rDS takes integer wDS,string uDS returns nothing
set w3[MM]=uDS
set MM=MM+1
if Lj[wDS]==0 then
call Mau("Double free: object of type AbilityIterator","when calling error in SaveableHandles, line 533")
else
set Hj[Jj]=wDS
set Jj=Jj+1
set Lj[wDS]=0
endif
set MM=MM-1
endfunction
function Kht takes integer Hht,string Jht returns nothing
set w3[MM]=Jht
set MM=MM+1
call cFt(Hht)
call rDS(Hht,"when calling dealloc_AbilityIterator in SaveableHandles, line 533")
set MM=MM-1
endfunction
function l1o takes integer o1o,string O1o returns nothing
set w3[MM]=O1o
set MM=MM+1
if Lj[o1o]==0 then
if o1o==0 then
call Mau("Nullpointer exception when calling AbilityIterator.AbilityIterator","when calling error in SaveableHandles, line 533")
else
call Mau("Called AbilityIterator.AbilityIterator on invalid object.","when calling error in SaveableHandles, line 533")
endif
endif
call Kht(o1o,"when calling destroyAbilityIterator in SaveableHandles, line 533")
set MM=MM-1
endfunction
function Dht takes integer Pht,string Aht returns nothing
set w3[MM]=Aht
set MM=MM+1
call l1o(Pht,"when calling dispatch_AbilityIterator_destroyAbilityIterator in SaveableHandles, line 552")
set MM=MM-1
endfunction
function Eht takes integer Wht returns boolean
return ZJ[Wht]<=UJ[Wht]
endfunction
function Fvu takes integer hvu returns integer
return svu(hvu,"armor")
endfunction
function MAS takes string BAS returns integer
local integer NAS
set w3[MM]=BAS
set MM=MM+1
if Jj==0 then
if Kj<32768 then
set Kj=Kj+1
set NAS=Kj
set Lj[NAS]=631
else
call Mau("Out of memory: Could not create AbilityIterator.","when calling error in SaveableHandles, line 533")
set NAS=0
endif
else
set Jj=Jj-1
set NAS=Hj[Jj]
set Lj[NAS]=631
endif
set MM=MM-1
return NAS
endfunction
function Vht takes integer Cht returns nothing
endfunction
function iFt takes integer rFt,unit sFt,integer tFt returns nothing
call Vht(rFt)
set EJ[rFt]=l7s(sFt)
set UJ[rFt]=tFt+iYu(Na,EJ[rFt],tFt)*gn
set ZJ[rFt]=tFt+gn
endfunction
function uFt takes unit Bht,integer Nht,string Mht returns integer
local integer wFt
set w3[MM]=Mht
set MM=MM+1
set wFt=MAS("when calling alloc_AbilityIterator in SaveableHandles, line 538")
call iFt(wFt,Bht,Nht)
set MM=MM-1
return wFt
endfunction
function HXu takes unit PXu,string AXu returns integer
local integer DXu
set w3[MM]=AXu
set MM=MM+1
set DXu=uFt(PXu,Tn,"when calling new_AbilityIterator in SaveableHandles, line 558")
set MM=MM-1
return DXu
endfunction
function Iht takes integer Zht returns integer
local integer Uht=iYu(Na,EJ[Zht],ZJ[Zht])
set ZJ[Zht]=ZJ[Zht]+gn
return Uht
endfunction
function AuS takes integer IuS returns nothing
local integer PuS=0
set WV[IuS]=PuS
set EV[IuS]=0
set ZV[IuS]=0
set UV[IuS]=0
set IV[IuS]=0.0
endfunction
function LuS takes integer KuS returns nothing
call AuS(KuS)
endfunction
function byc takes string Oyc returns integer
local integer lyc
set w3[MM]=Oyc
set MM=MM+1
if Av==0 then
if Dv<32768 then
set Dv=Dv+1
set lyc=Dv
set Hv[lyc]=1566
else
call Mau("Out of memory: Could not create SingleAbilityData.","when calling error in UnitData, line 877")
set lyc=0
endif
else
set Av=Av-1
set lyc=Pv[Av]
set Hv[lyc]=1566
endif
set MM=MM-1
return lyc
endfunction
function JuS takes string DuS returns integer
local integer HuS
set w3[MM]=DuS
set MM=MM+1
set HuS=byc("when calling alloc_SingleAbilityData in UnitData, line 886")
call LuS(HuS)
set MM=MM-1
return HuS
endfunction
function L_s takes unit J_s,unitintegerfield K_s returns integer
return BlzGetUnitIntegerField(J_s,K_s)
endfunction
function NDr takes integer VDr,integer BDr returns integer
set d6=Ewu(VDr,BDr)
return d6
endfunction
function NXu takes unit CXu,string VXu returns integer
local integer BXu
set w3[MM]=VXu
set MM=MM+1
set BXu=uFt(CXu,Rn,"when calling new_AbilityIterator in SaveableHandles, line 564")
set MM=MM-1
return BXu
endfunction
function OFt takes integer oFt returns boolean
return PJ[oFt]<=AJ[oFt]
endfunction
function PHu takes unit IHu returns boolean
return LTu(Na,l7s(IHu),on)
endfunction
function Q0s takes unit m0s returns integer
return BlzGetUnitMaxMana(m0s)
endfunction
function R7s takes unit f7s returns string
return GetUnitName(f7s)
endfunction
function RFt takes integer fFt returns integer
return fFt
endfunction
function E7s takes unit W7s returns real
return GetUnitTurnSpeed(W7s)
endfunction
function EJu takes unit WJu returns real
return nYu(Na,l7s(WJu),an)
endfunction
function rwu takes real uwu returns real
set r3=uwu*ly
return r3
endfunction
function G0s takes unit Y0s returns real
set Q2=rwu(GetUnitDefaultPropWindow(Y0s))
return Q2
endfunction
function HJu takes unit DJu returns real
return nYu(Na,l7s(DJu),nn)
endfunction
function KJu takes unit JJu returns boolean
return UTu(Na,l7s(JJu),nn)
endfunction
function Q7s takes unit m7s returns real
set m2=GetUnitPropWindow(m7s)
return m2
endfunction
function TEr takes integer fEr,integer REr returns integer
set g2=Ewu(fEr,REr)
return g2
endfunction
function UJu takes unit ZJu returns boolean
return UTu(Na,l7s(ZJu),an)
endfunction
function YKu takes unit TKu returns real
return nYu(Na,l7s(TKu),fn)
endfunction
function gKu takes unit GKu returns boolean
return UTu(Na,l7s(GKu),fn)
endfunction
function h0s takes unit g0s returns real
return GetUnitDefaultTurnSpeed(g0s)
endfunction
function XEr takes unit FEr returns integer
local integer UEr=0
local integer kEr=UEr
local real jEr=0.0
local integer xEr
local real vEr
local real mEr
local integer QEr
local integer WEr
local real EEr
local real ZEr
local integer IEr
local integer PEr
local integer AEr
local integer DEr
local integer HEr
local integer JEr
local integer KEr
local integer LEr
if UJu(FEr)then
set IEr=TEr(kEr,0)
set kEr=IEr
set jEr=EJu(FEr)
set xEr=qUu(jEr*10.)
if xEr*1./10==jEr and xEr<=65535 then
set PEr=TEr(kEr,1)
set kEr=PEr
endif
endif
set vEr=0.0
if E7s(FEr)!=h0s(FEr)then
set AEr=TEr(kEr,2)
set kEr=AEr
set vEr=E7s(FEr)
endif
set mEr=0.0
if KJu(FEr)then
set DEr=TEr(kEr,3)
set kEr=DEr
set mEr=HJu(FEr)
set QEr=qUu(mEr*100.)
if QEr*1./100==mEr and QEr<=255 then
set HEr=TEr(kEr,4)
set kEr=HEr
else
set WEr=qUu(mEr*1000.)
if WEr*1./1000==mEr and WEr<=65535 then
set JEr=TEr(kEr,5)
set kEr=JEr
endif
endif
endif
set EEr=0.0
if gKu(FEr)then
set KEr=TEr(kEr,6)
set kEr=KEr
set EEr=YKu(FEr)
endif
set ZEr=0.0
if Q7s(FEr)!=G0s(FEr)then
set LEr=TEr(kEr,7)
set kEr=LEr
set ZEr=N_u(Q7s(FEr))
endif
set W2=kEr
set E2=jEr
set Z2=vEr
set U2=mEr
set I2=EEr
set P2=ZEr
return W2
endfunction
function XXu takes unit JXu,string KXu returns integer
local integer LXu
set w3[MM]=KXu
set MM=MM+1
set LXu=uFt(JXu,Yn,"when calling new_AbilityIterator in SaveableHandles, line 561")
set MM=MM-1
return LXu
endfunction
function Xht takes integer Lht returns integer
return Lht
endfunction
function cHr takes integer iHr,integer SHr returns integer
set R6=Iwu(iHr,SHr)
return R6
endfunction
function dGo takes integer eGo,integer qGo,integer aGo,string nGo returns nothing
if qGo<0 or qGo>=6 then
call Mau("Index out of Bounds",nGo)
elseif qGo<=2 then
if qGo<=1 then
if qGo<=0 then
set kww[eGo]=aGo
else
set jww[eGo]=aGo
endif
else
set xww[eGo]=aGo
endif
elseif qGo<=4 then
if qGo<=3 then
set vww[eGo]=aGo
else
set mww[eGo]=aGo
endif
else
set Qww[eGo]=aGo
endif
endfunction
function KDr takes integer HDr,integer JDr returns integer
set n6=Ewu(HDr,JDr)
return n6
endfunction
function Q_s takes unit x_s,integer v_s,integer m_s returns real
return BlzGetUnitAbilityCooldown(x_s,v_s,m_s)
endfunction
function U_s takes unit W_s,integer E_s,integer Z_s returns integer
return BlzGetUnitAbilityManaCost(W_s,E_s,Z_s)
endfunction
function guS takes integer puS,unit euS,integer quS returns nothing
local integer auS
local integer nuS
local integer duS
local integer fuS
local integer RuS
local integer TuS
local integer YuS
local integer GuS
set EV[puS]=quS
set ZV[puS]=r7s(euS,EV[puS])
set auS=ZV[puS]
if auS==1 then
set nuS=KDr(WV[puS],0)
set WV[puS]=nuS
elseif auS==2 then
set duS=KDr(WV[puS],1)
set WV[puS]=duS
elseif auS==3 then
set fuS=KDr(WV[puS],2)
set WV[puS]=fuS
elseif auS==4 then
set RuS=KDr(WV[puS],3)
set WV[puS]=RuS
endif
set UV[puS]=U_s(euS,quS,ZV[puS]-1)
if UV[puS]!=BlzGetAbilityManaCost(quS,ZV[puS]-1)then
set TuS=KDr(WV[puS],4)
set WV[puS]=TuS
endif
set IV[puS]=Q_s(euS,quS,ZV[puS]-1)
if IV[puS]!=BlzGetAbilityCooldown(quS,ZV[puS]-1)then
set YuS=KDr(WV[puS],5)
set WV[puS]=YuS
endif
if(not CDr(WV[puS],4))or UV[puS]<=255 and(not CDr(WV[puS],4))or(qUu(IV[puS]*2.)*1./2==IV[puS]and IV[puS]*2.<=255.)then
set GuS=KDr(WV[puS],6)
set WV[puS]=GuS
endif
endfunction
function dOo takes integer eOo,unit qOo,integer aOo,string nOo returns nothing
set w3[MM]=nOo
set MM=MM+1
if Hv[eOo]==0 then
if eOo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.build","when calling error in UnitData, line 888")
else
call Mau("Called SingleAbilityData.build on invalid object.","when calling error in UnitData, line 888")
endif
endif
call guS(eOo,qOo,aOo)
set MM=MM-1
endfunction
function h8s takes unit g8s returns boolean
return IsUnitPaused(g8s)
endfunction
function BJu takes unit VJu returns real
return nYu(Na,l7s(VJu),dn)
endfunction
function LQr takes integer JQr,integer KQr returns integer
set M4=Ewu(JQr,KQr)
return M4
endfunction
function MJu takes unit NJu returns boolean
return UTu(Na,l7s(NJu),dn)
endfunction
function OJu takes unit oJu returns real
return nYu(Na,l7s(oJu),bn)
endfunction
function VHu takes unit CHu returns boolean
return QTu(Na,l7s(CHu),On)
endfunction
function XHu takes unit LHu returns playercolor
return CWu(iYu(Na,l7s(LHu),On))
endfunction
function bJu takes unit lJu returns boolean
return UTu(Na,l7s(lJu),bn)
endfunction
function kJu takes unit hJu returns integer
local integer FJu=l7s(hJu)
set w4=iYu(Na,FJu,yn)
set u4=iYu(Na,FJu,pn)
set r4=iYu(Na,FJu,en)
set s4=iYu(Na,FJu,qn)
return w4
endfunction
function xJu takes unit jJu returns boolean
return QTu(Na,l7s(jJu),yn)
endfunction
function jWr takes unit NQr returns integer
local integer bWr=0
local integer MQr=bWr
local real wWr=0.0
local integer uWr
local integer rWr
local integer sWr
local integer tWr
local integer iWr
local integer SWr
local integer cWr
local real oWr
local integer OWr
local integer lWr
local integer yWr
local integer pWr
local integer eWr
local integer qWr
local integer aWr
local integer nWr
local integer dWr
local integer fWr
local integer RWr
local integer TWr
local integer YWr
local integer GWr
local integer gWr
local integer hWr
local integer FWr
local integer kWr
if MJu(NQr)then
set yWr=LQr(MQr,0)
set MQr=yWr
set wWr=BJu(NQr)
set uWr=qUu(wWr)
if rgu(uWr)==wWr and uWr<=255 then
set pWr=LQr(MQr,1)
set MQr=pWr
else
set rWr=qUu(wWr*10.)
if rWr*1./10==wWr and rWr<=65535 then
set eWr=LQr(MQr,2)
set MQr=eWr
endif
endif
endif
set sWr=0
if VHu(NQr)then
set qWr=LQr(MQr,3)
set MQr=qWr
set sWr=wEu(XHu(NQr))
endif
set aWr=0
set nWr=0
set dWr=0
set fWr=0
set tWr=aWr
set iWr=nWr
set SWr=dWr
set cWr=fWr
if xJu(NQr)then
set RWr=LQr(MQr,4)
set MQr=RWr
set TWr=kJu(NQr)
set YWr=u4
set GWr=r4
set gWr=s4
set tWr=TWr
set iWr=YWr
set SWr=GWr
set cWr=gWr
endif
set oWr=0.0
if bJu(NQr)then
set hWr=LQr(MQr,5)
set MQr=hWr
set oWr=OJu(NQr)
set OWr=qUu(oWr*100.)
if OWr*1./100==oWr and OWr>=0 and OWr<=255 then
set FWr=LQr(MQr,6)
set MQr=FWr
else
set lWr=qUu(oWr*1000.)+32767
if(lWr-32767)*1./1000==oWr and lWr>=0 and lWr<=65535 then
set kWr=LQr(MQr,7)
set MQr=kWr
endif
endif
endif
set o2=MQr
set O2=wWr
set l2=sWr
set b2=tWr
set y2=iWr
set p2=SWr
set e2=cWr
set q2=oWr
return o2
endfunction
function jvu takes integer kvu returns integer
return svu(kvu,"defType")
endfunction
function Dgu takes item Agu returns nothing
call RemoveItem(Agu)
endfunction
function Fgu takes integer ggu,integer hgu returns integer
set f1=Ewu(ggu,hgu)
return f1
endfunction
function Ghu takes item Yhu returns string
return BlzGetItemDescription(Yhu)
endfunction
function Jgu takes item Hgu returns integer
return GetItemTypeId(Hgu)
endfunction
function Ohu takes item ohu returns boolean
return IsItemInvulnerable(ohu)
endfunction
function Phu takes item Ihu returns string
return BlzGetItemIconPath(Ihu)
endfunction
function Rgu takes integer dgu,integer fgu returns integer
set d1=Ewu(dgu,fgu)
return d1
endfunction
function Uvu takes integer Zvu returns integer
return svu(Zvu,"HP")
endfunction
function WHu takes item QHu returns boolean
return LTu(Na,l7s(QHu),cn)
endfunction
function Whu takes item Qhu returns string
return BlzGetItemExtendedTooltip(Qhu)
endfunction
function bhu takes item lhu returns boolean
return IsItemPawnable(lhu)
endfunction
function dhu takes item nhu returns string
return GetItemName(nhu)
endfunction
function jHu takes item FHu returns boolean
local boolean kHu
if jTu(Na,l7s(FHu),Sn)then
set kHu=LTu(Na,l7s(FHu),Sn)
else
set kHu=true
endif
return kHu
endfunction
function jhu takes item khu returns string
return BlzGetItemTooltip(khu)
endfunction
function phu takes item yhu returns integer
return GetItemCharges(yhu)
endfunction
function oLs takes integer WKs,item EKs,string ZKs returns nothing
local integer UKs
local item IKs
local integer PKs
local integer AKs
local integer DKs
local integer HKs
local integer JKs
local integer KKs
local integer LKs
local integer XKs
local integer CKs
local integer VKs
local integer BKs
local integer NKs
local integer MKs
local integer wLs
local integer uLs
local integer rLs
local integer sLs
local integer tLs
local integer iLs
local integer SLs
local integer cLs
set w3[MM]=ZKs
set MM=MM+1
set AU[WKs]=Jgu(EKs)
set PKs=0
set IU[WKs]=PKs
if Ohu(EKs)then
set AKs=Rgu(IU[WKs],0)
set IU[WKs]=AKs
endif
if WHu(EKs)then
set DKs=Rgu(IU[WKs],1)
set IU[WKs]=DKs
endif
if jHu(EKs)then
set HKs=Rgu(IU[WKs],2)
set IU[WKs]=HKs
endif
if bhu(EKs)then
set JKs=Rgu(IU[WKs],3)
set IU[WKs]=JKs
endif
set DU[WKs]=phu(EKs)
set UKs=DU[WKs]
if UKs==0 then
set KKs=Rgu(IU[WKs],4)
set IU[WKs]=KKs
elseif UKs==1 then
set LKs=Rgu(IU[WKs],5)
set IU[WKs]=LKs
elseif DU[WKs]>255 then
set XKs=Rgu(IU[WKs],6)
set IU[WKs]=XKs
if DU[WKs]>65535 then
set CKs=Rgu(IU[WKs],4)
set IU[WKs]=CKs
endif
endif
if Qrs(EKs)!=rgu(Uvu(AU[WKs]))then
set VKs=Fgu(PU[WKs],0)
set PU[WKs]=VKs
set HU[WKs]=Qrs(EKs)
endif
set IKs=Wgu(AU[WKs],0.,0.)
if dhu(EKs)!=dhu(IKs)then
set BKs=Fgu(PU[WKs],1)
set PU[WKs]=BKs
set NKs=uso(UU[WKs],dhu(EKs),"when calling addString in ItemData, line 93")
set JU[WKs]=NKs
endif
if Ghu(EKs)!=Ghu(IKs)then
set MKs=Fgu(PU[WKs],2)
set PU[WKs]=MKs
set wLs=uso(UU[WKs],Ghu(EKs),"when calling addString in ItemData, line 96")
set KU[WKs]=wLs
endif
if jhu(EKs)!=jhu(IKs)then
set uLs=Fgu(PU[WKs],3)
set PU[WKs]=uLs
set rLs=uso(UU[WKs],jhu(EKs),"when calling addString in ItemData, line 99")
set LU[WKs]=rLs
endif
if Whu(EKs)!=Whu(IKs)then
set sLs=Fgu(PU[WKs],4)
set PU[WKs]=sLs
set tLs=uso(UU[WKs],Whu(EKs),"when calling addString in ItemData, line 102")
set XU[WKs]=tLs
endif
if Phu(EKs)!=Phu(IKs)then
set iLs=Fgu(PU[WKs],5)
set PU[WKs]=iLs
set SLs=uso(UU[WKs],Phu(EKs),"when calling addString in ItemData, line 105")
set CU[WKs]=SLs
endif
call Dgu(IKs)
if PU[WKs]!=0 then
set cLs=Rgu(IU[WKs],7)
set IU[WKs]=cLs
endif
set MM=MM-1
set IKs=null
endfunction
function lIc takes integer cIc,item oIc,string OIc returns nothing
set w3[MM]=OIc
set MM=MM+1
if Ah[cIc]==0 then
if cIc==0 then
call Mau("Nullpointer exception when calling SingleItemData.build","when calling error in ItemData, line 62")
else
call Mau("Called SingleItemData.build on invalid object.","when calling error in ItemData, line 62")
endif
endif
call oLs(cIc,oIc,"when calling build in ItemData, line 62")
set MM=MM-1
endfunction
function o7s takes unit c7s returns real
return M5r(c7s,UNIT_STATE_LIFE)
endfunction
function EUr takes nothing returns integer
set u5=0
set r5=0
set s5=0.
set t5=0
set i5=0
return u5
endfunction
function lUr takes integer oUr,integer OUr returns integer
set B2=Ewu(oUr,OUr)
return B2
endfunction
function m5r takes unit x5r,unittype v5r returns boolean
return IsUnitType(x5r,v5r)
endfunction
function GUr takes unit fUr returns integer
local integer TUr=0
local integer RUr=TUr
local integer YUr
if m5r(fUr,UNIT_TYPE_TOWNHALL)then
set YUr=lUr(RUr,0)
set RUr=YUr
endif
set M2=RUr
return M2
endfunction
function jZr takes integer FZr,integer kZr returns integer
set X2=Ewu(FZr,kZr)
return X2
endfunction
function KZr takes integer QZr returns integer
local integer EZr=0
local integer WZr=EZr
local integer ZZr
local integer UZr
local integer IZr
local integer PZr
local integer AZr
local integer DZr
local integer HZr
local integer JZr
if IsUnitIdType(QZr,UNIT_TYPE_GIANT)then
set ZZr=jZr(WZr,0)
set WZr=ZZr
endif
if IsUnitIdType(QZr,UNIT_TYPE_SUMMONED)then
set UZr=jZr(WZr,1)
set WZr=UZr
endif
if IsUnitIdType(QZr,UNIT_TYPE_UNDEAD)then
set IZr=jZr(WZr,2)
set WZr=IZr
endif
if IsUnitIdType(QZr,UNIT_TYPE_MECHANICAL)then
set PZr=jZr(WZr,3)
set WZr=PZr
endif
if IsUnitIdType(QZr,UNIT_TYPE_PEON)then
set AZr=jZr(WZr,4)
set WZr=AZr
endif
if IsUnitIdType(QZr,UNIT_TYPE_SAPPER)then
set DZr=jZr(WZr,5)
set WZr=DZr
endif
if IsUnitIdType(QZr,UNIT_TYPE_ANCIENT)then
set HZr=jZr(WZr,6)
set WZr=HZr
endif
if IsUnitIdType(QZr,UNIT_TYPE_TAUREN)then
set JZr=jZr(WZr,7)
set WZr=JZr
endif
set C2=WZr
return C2
endfunction
function Yvu takes integer Tvu returns integer
return svu(Tvu,"HP")
endfunction
function bKu takes unit oKu,integer OKu returns boolean
local integer lKu=OKu
if lKu==0 then
return A7s(oKu,1096894768)
elseif lKu==1 then
return A7s(oKu,1096894769)
elseif lKu==2 then
return A7s(oKu,1094797618)
else
return false
endif
endfunction
function dUr takes integer eUr returns integer
local integer aUr=0
local integer qUr=aUr
local integer nUr
if IsUnitIdType(eUr,UNIT_TYPE_TOWNHALL)then
set nUr=lUr(qUr,0)
set qUr=nUr
endif
set N2=qUr
return N2
endfunction
function e1o takes integer b1o,string y1o returns boolean
local boolean p1o
set w3[MM]=y1o
set MM=MM+1
if Lj[b1o]==0 then
if b1o==0 then
call Mau("Nullpointer exception when calling AbilityIterator.hasNext","when calling error in SaveableHandles, line 543")
else
call Mau("Called AbilityIterator.hasNext on invalid object.","when calling error in SaveableHandles, line 543")
endif
endif
set p1o=Eht(b1o)
set MM=MM-1
return p1o
endfunction
function gvu takes integer Gvu returns integer
return svu(Gvu,"manaN")
endfunction
function IDr takes integer ZDr,integer UDr returns integer
set X5=Ewu(ZDr,UDr)
return X5
endfunction
function L0s takes unit J0s,integer K0s returns integer
return BlzGetUnitBaseDamage(J0s,K0s)
endfunction
function Ovu takes integer cvu,integer ovu returns integer
return svu(cvu,"dmgplus"+tgu(ovu))
endfunction
function c_s takes unit i_s,integer S_s returns integer
return BlzGetUnitDiceSides(i_s,S_s)
endfunction
function dvu takes integer avu,integer nvu returns integer
return svu(avu,"dice"+tgu(nvu))
endfunction
function e_s takes unit y_s,integer p_s returns real
return BlzGetUnitAttackCooldown(y_s,p_s)
endfunction
function qvu takes integer pvu,integer evu returns integer
return svu(pvu,"sides"+tgu(evu))
endfunction
function w_s takes unit N0s,integer M0s returns integer
return BlzGetUnitDiceNumber(N0s,M0s)
endfunction
function yvu takes integer lvu,integer bvu returns real
return Svu(lvu,"cool"+tgu(bvu))
endfunction
function kPr takes unit OPr,integer lPr returns integer
local integer bPr=S7s(OPr)
local integer yPr=L0s(OPr,lPr)
local real pPr=e_s(OPr,lPr)
local integer ePr=c_s(OPr,lPr)
local integer qPr=w_s(OPr,lPr)
local integer dPr=0
local integer aPr=dPr
local integer nPr
local integer fPr
local integer RPr
local integer TPr
local integer YPr
local integer GPr
local integer gPr
local integer hPr
local integer FPr
if yPr!=Ovu(bPr,lPr)then
set fPr=IDr(aPr,0)
set aPr=fPr
if yPr>255 or yPr<0 then
set RPr=IDr(aPr,1)
set aPr=RPr
endif
endif
if pPr!=yvu(bPr,lPr)then
set TPr=IDr(aPr,2)
set aPr=TPr
set nPr=qUu(pPr*100.)
if nPr*1./100==pPr and nPr<=255 then
set YPr=IDr(aPr,3)
set aPr=YPr
endif
endif
if ePr!=qvu(bPr,lPr)then
set GPr=IDr(aPr,4)
set aPr=GPr
if ePr>255 then
set gPr=IDr(aPr,5)
set aPr=gPr
endif
endif
if qPr!=dvu(bPr,lPr)then
set hPr=IDr(aPr,6)
set aPr=hPr
if qPr>255 then
set FPr=IDr(aPr,7)
set aPr=FPr
endif
endif
set G5=aPr
set g5=yPr
set h5=pPr
set F5=ePr
set k5=qPr
return G5
endfunction
function n1o takes integer q1o,string a1o returns nothing
set w3[MM]=a1o
set MM=MM+1
if Lj[q1o]==0 then
if q1o==0 then
call Mau("Nullpointer exception when calling AbilityIterator.close","when calling error in SaveableHandles, line 551")
else
call Mau("Called AbilityIterator.close on invalid object.","when calling error in SaveableHandles, line 551")
endif
endif
call Dht(q1o,"when calling close in SaveableHandles, line 551")
set MM=MM-1
endfunction
function tUr takes unit LZr returns integer
local integer CZr=0
local integer XZr=CZr
local integer VZr
local integer BZr
local integer NZr
local integer MZr
local integer wUr
local integer uUr
local integer rUr
local integer sUr
if m5r(LZr,UNIT_TYPE_GIANT)then
set VZr=jZr(XZr,0)
set XZr=VZr
endif
if m5r(LZr,UNIT_TYPE_SUMMONED)then
set BZr=jZr(XZr,1)
set XZr=BZr
endif
if m5r(LZr,UNIT_TYPE_UNDEAD)then
set NZr=jZr(XZr,2)
set XZr=NZr
endif
if m5r(LZr,UNIT_TYPE_MECHANICAL)then
set MZr=jZr(XZr,3)
set XZr=MZr
endif
if m5r(LZr,UNIT_TYPE_PEON)then
set wUr=jZr(XZr,4)
set XZr=wUr
endif
if m5r(LZr,UNIT_TYPE_SAPPER)then
set uUr=jZr(XZr,5)
set XZr=uUr
endif
if m5r(LZr,UNIT_TYPE_ANCIENT)then
set rUr=jZr(XZr,6)
set XZr=rUr
endif
if m5r(LZr,UNIT_TYPE_TAUREN)then
set sUr=jZr(XZr,7)
set XZr=sUr
endif
set V2=XZr
return V2
endfunction
function xUr takes integer kUr,integer jUr returns integer
set w5=Ewu(kUr,jUr)
return w5
endfunction
function oPr takes unit ZUr,string UUr returns integer
local integer IUr
local integer PUr
local integer AUr
local integer DUr
local integer HUr
local real JUr
local integer KUr
local integer LUr
local integer XUr
local integer CUr
local real VUr
local integer BUr
local integer NUr
local integer MUr
local integer wIr
local real uIr
local integer rIr
local integer sIr
local integer tIr
local integer iIr
local integer SIr
local integer cIr
local integer oIr
local integer OIr
local integer lIr
local integer bIr
local integer yIr
local integer pIr
local integer eIr
local integer qIr
local integer aIr
local integer nIr
local integer dIr
local integer fIr
local real RIr
local integer TIr
local integer YIr
local integer GIr
local integer gIr
local real hIr
local integer FIr
local integer kIr
local integer jIr
local integer xIr
local integer vIr
local real mIr
local integer QIr
local integer WIr
local integer EIr
local integer ZIr
local real UIr
local integer IIr
local integer PIr
local integer AIr
local integer DIr
local integer HIr
local integer JIr
local real KIr
local integer LIr
local integer XIr
local integer CIr
local integer VIr
local integer BIr
local integer NIr
local integer MIr
local integer wPr
local integer uPr
local integer rPr
local integer sPr
local integer tPr
local integer iPr
local integer SPr
local integer cPr
set w3[MM]=UUr
set MM=MM+1
set IUr=S7s(ZUr)
set pIr=0
set PUr=pIr
set AUr=0
if H7s(ZUr)!=0 then
set eIr=xUr(PUr,0)
set PUr=eIr
set AUr=H7s(ZUr)
endif
if bKu(ZUr,0)then
set qIr=xUr(PUr,1)
set PUr=qIr
endif
if bKu(ZUr,1)then
set aIr=xUr(PUr,2)
set PUr=aIr
endif
if bKu(ZUr,2)then
set nIr=xUr(PUr,3)
set PUr=nIr
endif
set dIr=EUr()
set fIr=r5
set RIr=s5
set TIr=t5
set YIr=i5
set DUr=dIr
set HUr=fIr
set JUr=RIr
set KUr=TIr
set LUr=YIr
set GIr=kPr(ZUr,0)
set gIr=g5
set hIr=h5
set FIr=F5
set kIr=k5
set XUr=GIr
set CUr=gIr
set VUr=hIr
set BUr=FIr
set NUr=kIr
if XUr!=0 then
set jIr=xUr(PUr,4)
set PUr=jIr
set xIr=XUr
set vIr=CUr
set mIr=VUr
set QIr=BUr
set WIr=NUr
set DUr=xIr
set HUr=vIr
set JUr=mIr
set KUr=QIr
set LUr=WIr
endif
set EIr=EUr()
set ZIr=r5
set UIr=s5
set IIr=t5
set PIr=i5
set MUr=EIr
set wIr=ZIr
set uIr=UIr
set rIr=IIr
set sIr=PIr
set AIr=kPr(ZUr,1)
set tIr=AIr
if tIr!=0 then
set DIr=xUr(PUr,5)
set PUr=DIr
set HIr=XUr
set JIr=CUr
set KIr=VUr
set LIr=BUr
set XIr=NUr
set MUr=HIr
set wIr=JIr
set uIr=KIr
set rIr=LIr
set sIr=XIr
endif
set iIr=0
if NHu(ZUr)then
set CIr=xUr(PUr,6)
set PUr=CIr
set iIr=uJu(ZUr)
if iIr>=0 and iIr<=255 then
set VIr=xUr(PUr,7)
set PUr=VIr
endif
endif
set SIr=k0s(ZUr)
if SIr!=Yvu(IUr)then
set BIr=xUr(PUr,8)
set PUr=BIr
if SIr<=65535 then
set NIr=xUr(PUr,9)
set PUr=NIr
endif
endif
set cIr=Q0s(ZUr)
if cIr!=gvu(IUr)then
set MIr=xUr(PUr,10)
set PUr=MIr
if cIr<=65535 then
set wPr=xUr(PUr,11)
set PUr=wPr
endif
endif
set oIr=HXu(ZUr,"when calling removedAbilities in UnitData, line 616")
if e1o(oIr,"when calling hasNext in UnitData, line 617")then
set uPr=xUr(PUr,12)
set PUr=uPr
endif
call n1o(oIr,"when calling close in UnitData, line 619")
set OIr=XXu(ZUr,"when calling modifiedAbilities in UnitData, line 620")
if e1o(OIr,"when calling hasNext in UnitData, line 621")then
set rPr=xUr(PUr,13)
set PUr=rPr
else
set lIr=NXu(ZUr,"when calling addedAbilities in UnitData, line 624")
if e1o(lIr,"when calling hasNext in UnitData, line 625")then
set sPr=xUr(PUr,13)
set PUr=sPr
endif
call n1o(lIr,"when calling close in UnitData, line 627")
endif
call n1o(OIr,"when calling close in UnitData, line 628")
set tPr=tUr(ZUr)
set bIr=tPr
if bIr!=KZr(IUr)then
set iPr=xUr(PUr,14)
set PUr=iPr
endif
set SPr=GUr(ZUr)
set yIr=SPr
if yIr!=dUr(IUr)then
set cPr=xUr(PUr,15)
set PUr=cPr
endif
set MM=MM-1
set j5=PUr
set x5=AUr
set v5=DUr
set m5=HUr
set Q5=JUr
set W5=KUr
set E5=LUr
set Z5=MUr
set U5=wIr
set I5=uIr
set P5=rIr
set A5=sIr
set D5=iIr
set H5=SIr
set J5=cIr
set K5=bIr
set L5=yIr
return j5
endfunction
function pHr takes integer bHr,integer yHr returns integer
set T6=Ewu(bHr,yHr)
return T6
endfunction
function WFt takes integer QFt returns nothing
endfunction
function oDS takes integer SDS,string cDS returns nothing
set w3[MM]=cDS
set MM=MM+1
if Bj[SDS]==0 then
call Mau("Double free: object of type AnimationPropertiesIterator","when calling error in SaveableHandles, line 566")
else
set Xj[Cj]=SDS
set Cj=Cj+1
set Bj[SDS]=0
endif
set MM=MM-1
endfunction
function dFt takes integer aFt,string nFt returns nothing
set w3[MM]=nFt
set MM=MM+1
call WFt(aFt)
call oDS(aFt,"when calling dealloc_AnimationPropertiesIterator in SaveableHandles, line 566")
set MM=MM-1
endfunction
function R1o takes integer d1o,string f1o returns nothing
set w3[MM]=f1o
set MM=MM+1
if Bj[d1o]==0 then
if d1o==0 then
call Mau("Nullpointer exception when calling AnimationPropertiesIterator.AnimationPropertiesIterator","when calling error in SaveableHandles, line 566")
else
call Mau("Called AnimationPropertiesIterator.AnimationPropertiesIterator on invalid object.","when calling error in SaveableHandles, line 566")
endif
endif
call dFt(d1o,"when calling destroyAnimationPropertiesIterator in SaveableHandles, line 566")
set MM=MM-1
endfunction
function qFt takes integer pFt,string eFt returns nothing
set w3[MM]=eFt
set MM=MM+1
call R1o(pFt,"when calling dispatch_AnimationPropertiesIterator_destroyAnimationPropertiesIterator in SaveableHandles, line 585")
set MM=MM-1
endfunction
function iDS takes string sDS returns integer
local integer tDS
set w3[MM]=sDS
set MM=MM+1
if Cj==0 then
if Vj<32768 then
set Vj=Vj+1
set tDS=Vj
set Bj[tDS]=635
else
call Mau("Out of memory: Could not create AnimationPropertiesIterator.","when calling error in SaveableHandles, line 566")
set tDS=0
endif
else
set Cj=Cj-1
set tDS=Xj[Cj]
set Bj[tDS]=635
endif
set MM=MM-1
return tDS
endfunction
function YFt takes integer TFt returns nothing
endfunction
function mFt takes integer jFt,unit xFt,integer vFt returns nothing
call YFt(jFt)
set IJ[jFt]=l7s(xFt)
set AJ[jFt]=vFt+iYu(Na,IJ[jFt],vFt)*gn
set PJ[jFt]=vFt+gn
endfunction
function kFt takes unit GFt,integer gFt,string hFt returns integer
local integer FFt
set w3[MM]=hFt
set MM=MM+1
set FFt=iDS("when calling alloc_AnimationPropertiesIterator in SaveableHandles, line 571")
call mFt(FFt,GFt,gFt)
set MM=MM-1
return FFt
endfunction
function rCu takes unit MXu,string wCu returns integer
local integer uCu
set w3[MM]=wCu
set MM=MM+1
set uCu=kFt(MXu,Gn,"when calling new_AnimationPropertiesIterator in SaveableHandles, line 591")
set MM=MM-1
return uCu
endfunction
function tHr takes integer rHr,integer sHr returns integer
set f6=Ewu(rHr,sHr)
return f6
endfunction
function F6r takes unit g6r,boolean h6r returns integer
return GetHeroAgi(g6r,h6r)
endfunction
function G6r takes unit T6r,boolean Y6r returns integer
return GetHeroStr(T6r,Y6r)
endfunction
function Tmr takes integer fmr,integer Rmr returns integer
set k4=Ewu(fmr,Rmr)
return k4
endfunction
function Y7s takes unit T7s returns string
return GetHeroProperName(T7s)
endfunction
function l6r takes unit O6r returns boolean
return IsSuspendedXP(O6r)
endfunction
function qmr takes integer pmr,integer emr returns integer
set F4=Ewu(pmr,emr)
return F4
endfunction
function u6r takes unit w6r returns integer
return GetHeroXP(w6r)
endfunction
function x6r takes unit k6r,boolean j6r returns integer
return GetHeroInt(k6r,j6r)
endfunction
function tQr takes unit Fmr,integer kmr,string jmr returns integer
local integer xmr
local integer vmr
local integer mmr
local integer Qmr
local unit Wmr
local unit Emr
local integer Zmr
local integer Umr
local integer Imr
local integer Pmr
local integer Amr
local integer Dmr
local integer Hmr
local integer Jmr
local integer Kmr
local integer Lmr
local integer Xmr
local integer Cmr
local integer Vmr
local integer Bmr
local integer Nmr
local integer Mmr
local integer wQr
local integer uQr
local integer rQr
local integer sQr
set w3[MM]=jmr
set MM=MM+1
set xmr=S7s(Fmr)
set Amr=0
set vmr=Amr
set Dmr=0
set mmr=Dmr
set Qmr=u6r(Fmr)
if l6r(Fmr)then
set Hmr=qmr(vmr,0)
set vmr=Hmr
endif
set Emr=I5r(Ty,xmr,0.,0.,wwu(0.))
call i6r(Emr,Qmr,false)
set Wmr=Emr
set Zmr=G6r(Fmr,false)
if Zmr!=G6r(Wmr,false)then
set Jmr=qmr(vmr,1)
set vmr=Jmr
if Zmr>255 then
set Kmr=qmr(vmr,2)
set vmr=Kmr
if Zmr>65535 then
set Lmr=qmr(vmr,7)
set vmr=Lmr
set Xmr=Tmr(mmr,0)
set mmr=Xmr
endif
endif
endif
set Umr=F6r(Fmr,false)
if Umr!=F6r(Wmr,false)then
set Cmr=qmr(vmr,3)
set vmr=Cmr
if Umr>255 then
set Vmr=qmr(vmr,4)
set vmr=Vmr
if Umr>65535 then
set Bmr=qmr(vmr,7)
set vmr=Bmr
set Nmr=Tmr(mmr,1)
set mmr=Nmr
endif
endif
endif
set Imr=x6r(Fmr,false)
if Imr!=x6r(Wmr,false)then
set Mmr=qmr(vmr,5)
set vmr=Mmr
if Imr>255 then
set wQr=qmr(vmr,6)
set vmr=wQr
if Imr>65535 then
set uQr=qmr(vmr,7)
set vmr=uQr
set rQr=Tmr(mmr,2)
set mmr=rQr
endif
endif
endif
call E8s(Wmr)
set sQr=uso(kmr,Y7s(Fmr),"when calling addString in UnitData, line 97")
set Pmr=sQr
set MM=MM-1
set U4=vmr
set I4=mmr
set P4=Qmr
set A4=Zmr
set D4=Umr
set H4=Imr
set J4=Pmr
set Wmr=null
set Emr=null
return U4
endfunction
function PjS takes string UjS returns integer
local integer IjS
set w3[MM]=UjS
set MM=MM+1
if Ih==0 then
if Ph<32768 then
set Ph=Ph+1
set IjS=Ph
set Ah[IjS]=1569
else
call Mau("Out of memory: Could not create SingleItemData.","when calling error in ItemData, line 44")
set IjS=0
endif
else
set Ih=Ih-1
set IjS=Uh[Ih]
set Ah[IjS]=1569
endif
set MM=MM-1
return IjS
endfunction
function VLs takes integer ALs returns nothing
local integer DLs=0
local integer HLs
local integer JLs
local integer KLs
local integer LLs
local integer XLs
local integer CLs
set IU[ALs]=DLs
set HLs=0
set PU[ALs]=HLs
set AU[ALs]=0
set DU[ALs]=0
set HU[ALs]=0.0
set JLs=Mgr()
set JU[ALs]=JLs
set KLs=Mgr()
set KU[ALs]=KLs
set LLs=Mgr()
set LU[ALs]=LLs
set XLs=Mgr()
set XU[ALs]=XLs
set CLs=Mgr()
set CU[ALs]=CLs
endfunction
function sXs takes integer uXs,integer rXs returns nothing
call VLs(uXs)
set UU[uXs]=rXs
endfunction
function wXs takes integer BLs,string NLs returns integer
local integer MLs
set w3[MM]=NLs
set MM=MM+1
set MLs=PjS("when calling alloc_SingleItemData in ItemData, line 59")
call sXs(MLs,BLs)
set MM=MM-1
return MLs
endfunction
function y7s takes unit b7s returns real
return M5r(b7s,UNIT_STATE_MANA)
endfunction
function yFt takes integer lFt returns string
local string bFt=hYu(Na,IJ[lFt],PJ[lFt])
set PJ[lFt]=PJ[lFt]+gn
return bFt
endfunction
function htS takes integer JrS,unit KrS,string LrS returns nothing
local integer XrS
local integer CrS
local item VrS
local integer BrS
local integer NrS
local integer MrS
local integer wsS
local integer usS
local integer rsS
local integer ssS
local integer tsS
local integer isS
local integer SsS
local string csS
local integer osS
local integer OsS
local integer lsS
local integer bsS
local integer ysS
local integer psS
local integer esS
local integer qsS
local integer asS
local integer nsS
local integer dsS
local integer fsS
local integer RsS
local integer TsS
local integer YsS
local integer GsS
local integer gsS
local integer hsS
local integer FsS
local real ksS
local integer jsS
local integer xsS
local integer vsS
local integer msS
local integer QsS
local real WsS
local integer EsS
local integer ZsS
local real UsS
local real IsS
local real PsS
local real AsS
local real DsS
local integer HsS
local integer JsS
local integer KsS
local integer LsS
local integer XsS
local real CsS
local integer VsS
local integer BsS
local integer NsS
local integer MsS
local real wtS
local integer utS
local integer rtS
local integer stS
local integer ttS
local integer itS
local integer StS
local integer ctS
local integer otS
local integer OtS
local integer ltS
local integer btS
local integer ytS
local integer ptS
local integer etS
local integer qtS
local integer atS
local integer ntS
local real dtS
local real ftS
local integer RtS
local integer TtS
local integer YtS
local integer GtS
local integer gtS
set w3[MM]=LrS
set MM=MM+1
set ysS=0
set JV[JrS]=ysS
set psS=0
set KV[JrS]=psS
set LV[JrS]=S7s(KrS)
if A7s(KrS,Sy)then
set esS=NDr(JV[JrS],0)
set JV[JrS]=esS
endif
if h8s(KrS)then
set qsS=NDr(JV[JrS],1)
set JV[JrS]=qsS
endif
if IsHeroUnitId(LV[JrS])then
set asS=NDr(JV[JrS],2)
set JV[JrS]=asS
set nsS=tQr(KrS,HV[JrS],"when calling getHeroParameters in UnitData, line 1073")
set dsS=I4
set fsS=P4
set RsS=A4
set TsS=D4
set YsS=H4
set GsS=J4
set XV[JrS]=nsS
set CV[JrS]=dsS
set VV[JrS]=fsS
set BV[JrS]=RsS
set NV[JrS]=TsS
set MV[JrS]=YsS
set wB[JrS]=GsS
endif
if R7s(KrS)!=GetObjectName(LV[JrS])then
set gsS=NDr(JV[JrS],3)
set JV[JrS]=gsS
set hsS=uso(HV[JrS],R7s(KrS),"when calling addString in UnitData, line 1077")
set uB[JrS]=hsS
endif
set FsS=jWr(KrS)
set ksS=O2
set jsS=l2
set xsS=b2
set vsS=y2
set msS=p2
set QsS=e2
set WsS=q2
set rB[JrS]=FsS
set sB[JrS]=ksS
set tB[JrS]=jsS
set iB[JrS]=xsS
set SB[JrS]=vsS
set cB[JrS]=msS
set oB[JrS]=QsS
set OB[JrS]=WsS
if rB[JrS]!=0 then
set EsS=NDr(JV[JrS],4)
set JV[JrS]=EsS
endif
set ZsS=XEr(KrS)
set UsS=E2
set IsS=Z2
set PsS=U2
set AsS=I2
set DsS=P2
set lB[JrS]=ZsS
set bB[JrS]=UsS
set yB[JrS]=IsS
set pB[JrS]=PsS
set eB[JrS]=AsS
set qB[JrS]=DsS
if lB[JrS]!=0 then
set HsS=NDr(JV[JrS],5)
set JV[JrS]=HsS
endif
set JsS=oPr(KrS,"when calling getStats in UnitData, line 1086")
set KsS=x5
set LsS=v5
set XsS=m5
set CsS=Q5
set VsS=W5
set BsS=E5
set NsS=Z5
set MsS=U5
set wtS=I5
set utS=P5
set rtS=A5
set stS=D5
set ttS=H5
set itS=J5
set StS=K5
set ctS=L5
set aB[JrS]=JsS
set nB[JrS]=KsS
set dB[JrS]=LsS
set fB[JrS]=XsS
set RB[JrS]=CsS
set TB[JrS]=VsS
set YB[JrS]=BsS
set GB[JrS]=NsS
set gB[JrS]=MsS
set hB[JrS]=wtS
set FB[JrS]=utS
set kB[JrS]=rtS
set jB[JrS]=stS
set xB[JrS]=ttS
set vB[JrS]=itS
set mB[JrS]=StS
set QB[JrS]=ctS
if aB[JrS]!=0 then
set otS=NDr(JV[JrS],6)
set JV[JrS]=otS
set XrS=0
set CrS=nB[JrS]-1
loop
exitwhen XrS>CrS
set VrS=L7s(KrS,XrS)
if VrS!=null then
set BrS=wXs(HV[JrS],"when calling new_SingleItemData in UnitData, line 1092")
call lIc(BrS,VrS,"when calling build in UnitData, line 1092")
call dGo(JrS,XrS,BrS,"when writing array SingleUnitData_items in UnitData, line 1092")
else
call dGo(JrS,XrS,0,"when writing array SingleUnitData_items in UnitData, line 1094")
endif
set XrS=XrS+1
endloop
endif
if pUu(o7s(KrS))!=k0s(KrS)then
set OtS=tHr(ZB[JrS],0)
set ZB[JrS]=OtS
set UB[JrS]=pUu(o7s(KrS))
if UB[JrS]<=65535 then
set ltS=tHr(ZB[JrS],1)
set ZB[JrS]=ltS
if UB[JrS]<=255 then
set btS=cHr(ZB[JrS],0)
set ZB[JrS]=btS
endif
endif
endif
if pUu(y7s(KrS))!=Q0s(KrS)then
set ytS=tHr(ZB[JrS],2)
set ZB[JrS]=ytS
set IB[JrS]=pUu(y7s(KrS))
if IB[JrS]<=65535 then
set ptS=xUr(ZB[JrS],11)
set ZB[JrS]=ptS
if IB[JrS]<=255 then
set etS=cHr(ZB[JrS],2)
set ZB[JrS]=etS
endif
endif
endif
if ZB[JrS]!=0 then
set qtS=pHr(KV[JrS],0)
set KV[JrS]=qtS
endif
if DHu(KrS)and(not PHu(KrS))then
set atS=pHr(KV[JrS],1)
set KV[JrS]=atS
endif
set NrS=Xht(HXu(KrS,"when calling removedAbilities in UnitData, line 1117"))
loop
exitwhen not Eht(NrS)
set MrS=Iht(NrS)
if MrS!=Sy then
call Cqo(WB[JrS],MrS,"when calling add in UnitData, line 1119")
endif
endloop
call Dht(NrS,"when calling close in UnitData, line 1117")
set wsS=Xht(XXu(KrS,"when calling modifiedAbilities in UnitData, line 1120"))
loop
exitwhen not Eht(wsS)
set usS=Iht(wsS)
set OsS=EB[JrS]
set rsS=JuS("when calling new_SingleAbilityData in UnitData, line 1121")
call dOo(rsS,KrS,usS,"when calling build in UnitData, line 1121")
call Cqo(OsS,rsS,"when calling add in UnitData, line 1121")
endloop
call Dht(wsS,"when calling close in UnitData, line 1120")
set ssS=Xht(NXu(KrS,"when calling addedAbilities in UnitData, line 1122"))
loop
exitwhen not Eht(ssS)
set tsS=Iht(ssS)
if tsS!=Sy then
set lsS=EB[JrS]
set isS=JuS("when calling new_SingleAbilityData in UnitData, line 1124")
call dOo(isS,KrS,tsS,"when calling build in UnitData, line 1124")
call Cqo(lsS,isS,"when calling add in UnitData, line 1124")
endif
endloop
call Dht(ssS,"when calling close in UnitData, line 1122")
if WaygateIsActive(KrS)then
set ntS=pHr(KV[JrS],2)
set KV[JrS]=ntS
set dtS=cEu(Qus(WaygateGetDestinationX(KrS),WaygateGetDestinationY(KrS),F7s(KrS),h3),i1)
set ftS=D1
set PB[JrS]=dtS
set AB[JrS]=ftS
endif
if L_s(KrS,UNIT_IF_ARMOR_TYPE)!=Fvu(LV[JrS])then
set RtS=pHr(KV[JrS],3)
set KV[JrS]=RtS
set DB[JrS]=L_s(KrS,UNIT_IF_ARMOR_TYPE)
endif
if L_s(KrS,UNIT_IF_DEFENSE_TYPE)!=jvu(LV[JrS])then
set TtS=pHr(KV[JrS],4)
set KV[JrS]=TtS
set HB[JrS]=L_s(KrS,UNIT_IF_DEFENSE_TYPE)
endif
set SsS=RFt(rCu(KrS,"when calling animationProperties in UnitData, line 1137"))
loop
exitwhen not OFt(SsS)
set csS=yFt(SsS)
set bsS=JB[JrS]
set YtS=uso(HV[JrS],csS,"when calling addString in UnitData, line 1138")
set osS=YtS
call Cqo(bsS,osS,"when calling add in UnitData, line 1138")
endloop
call qFt(SsS,"when calling close in UnitData, line 1137")
if not gDc(JB[JrS],"when calling isEmpty in UnitData, line 1139")then
set GtS=pHr(KV[JrS],5)
set KV[JrS]=GtS
endif
if KV[JrS]!=0 then
set gtS=NDr(JV[JrS],7)
set JV[JrS]=gtS
endif
set MM=MM-1
set VrS=null
endfunction
function frS takes integer yrS,unit prS,real erS,real qrS,string arS returns nothing
local real nrS
local real drS
set w3[MM]=arS
set MM=MM+1
set nrS=cEu(Qus(F7s(prS),h3,erS,qrS),i1)
set drS=D1
set PV[yrS]=nrS
set AV[yrS]=drS
set DV[yrS]=GetUnitFacing(prS)
call htS(yrS,prS,"when calling build in UnitData, line 1346")
set MM=MM-1
endfunction
function AOo takes integer EOo,unit ZOo,real UOo,real IOo,string POo returns nothing
set w3[MM]=POo
set MM=MM+1
if Xv[EOo]==0 then
if EOo==0 then
call Mau("Nullpointer exception when calling SinglePositionedUnitData.build","when calling error in UnitData, line 1342")
else
call Mau("Called SinglePositionedUnitData.build on invalid object.","when calling error in UnitData, line 1342")
endif
endif
call frS(EOo,ZOo,UOo,IOo,"when calling build in UnitData, line 1342")
set MM=MM-1
endfunction
function BQr takes nothing returns integer
set w2=0
set u2=0.
set r2=0
set s2=0
set t2=0
set i2=0
set S2=0
set c2=0.
return w2
endfunction
function WUr takes nothing returns integer
set S5=0
set c5=0
set o5=EUr()
set O5=r5
set l5=s5
set b5=t5
set y5=i5
set p5=EUr()
set e5=r5
set q5=s5
set a5=t5
set n5=i5
set d5=0
set f5=0
set R5=0
set T5=0
set Y5=0
return S5
endfunction
function hEr takes nothing returns integer
set h2=0
set F2=0.
set k2=0.
set j2=0.
set x2=0.
set v2=0.
return h2
endfunction
function hmr takes nothing returns integer
set j4=0
set x4=0
set v4=0
set m4=0
set Q4=0
set W4=0
set E4=Mgr()
return j4
endfunction
function YcS takes integer kSS,string jSS returns nothing
local integer xSS
local integer vSS
local integer mSS
local integer QSS
local integer WSS
local integer ESS
local integer ZSS
local integer USS
local integer ISS
local integer PSS
local integer ASS
local real DSS
local integer HSS
local integer JSS
local integer KSS
local integer LSS
local integer XSS
local real CSS
local integer VSS
local real BSS
local real NSS
local real MSS
local real wcS
local real ucS
local integer rcS
local integer scS
local integer tcS
local integer icS
local real ScS
local integer ccS
local integer ocS
local integer OcS
local integer lcS
local real bcS
local integer ycS
local integer pcS
local integer ecS
local integer qcS
local integer acS
local integer ncS
local integer dcS
local integer fcS
local real RcS
local real TcS
set w3[MM]=jSS
set MM=MM+1
set xSS=0
set JV[kSS]=xSS
set vSS=0
set KV[kSS]=vSS
set LV[kSS]=0
set mSS=hmr()
set QSS=x4
set WSS=v4
set ESS=m4
set ZSS=Q4
set USS=W4
set ISS=E4
set XV[kSS]=mSS
set CV[kSS]=QSS
set VV[kSS]=WSS
set BV[kSS]=ESS
set NV[kSS]=ZSS
set MV[kSS]=USS
set wB[kSS]=ISS
set PSS=Mgr()
set uB[kSS]=PSS
set ASS=BQr()
set DSS=u2
set HSS=r2
set JSS=s2
set KSS=t2
set LSS=i2
set XSS=S2
set CSS=c2
set rB[kSS]=ASS
set sB[kSS]=DSS
set tB[kSS]=HSS
set iB[kSS]=JSS
set SB[kSS]=KSS
set cB[kSS]=LSS
set oB[kSS]=XSS
set OB[kSS]=CSS
set VSS=hEr()
set BSS=F2
set NSS=k2
set MSS=j2
set wcS=x2
set ucS=v2
set lB[kSS]=VSS
set bB[kSS]=BSS
set yB[kSS]=NSS
set pB[kSS]=MSS
set eB[kSS]=wcS
set qB[kSS]=ucS
set rcS=WUr()
set scS=c5
set tcS=o5
set icS=O5
set ScS=l5
set ccS=b5
set ocS=y5
set OcS=p5
set lcS=e5
set bcS=q5
set ycS=a5
set pcS=n5
set ecS=d5
set qcS=f5
set acS=R5
set ncS=T5
set dcS=Y5
set aB[kSS]=rcS
set nB[kSS]=scS
set dB[kSS]=tcS
set fB[kSS]=icS
set RB[kSS]=ScS
set TB[kSS]=ccS
set YB[kSS]=ocS
set GB[kSS]=OcS
set gB[kSS]=lcS
set hB[kSS]=bcS
set FB[kSS]=ycS
set kB[kSS]=pcS
set jB[kSS]=ecS
set xB[kSS]=qcS
set vB[kSS]=acS
set mB[kSS]=ncS
set QB[kSS]=dcS
set WB[kSS]=a4s("when calling new_LinkedList in UnitData, line 1037")
set EB[kSS]=a4s("when calling new_LinkedList in UnitData, line 1038")
set fcS=0
set ZB[kSS]=fcS
set UB[kSS]=0
set IB[kSS]=0
set RcS=uEu()
set TcS=U1
set PB[kSS]=RcS
set AB[kSS]=TcS
set DB[kSS]=0
set HB[kSS]=0
set JB[kSS]=a4s("when calling new_LinkedList in UnitData, line 1049")
set MM=MM-1
endfunction
function vcS takes integer kcS,integer jcS,string xcS returns nothing
set w3[MM]=xcS
set MM=MM+1
call YcS(kcS,"when calling SingleUnitData_init in UnitData, line 1058")
set HV[kcS]=jcS
set MM=MM-1
endfunction
function vrS takes integer krS returns nothing
local real jrS=uEu()
local real xrS=U1
set PV[krS]=jrS
set AV[krS]=xrS
set DV[krS]=0.0
endfunction
function PrS takes integer ZrS,integer UrS,string IrS returns nothing
set w3[MM]=IrS
set MM=MM+1
call vcS(ZrS,UrS,"when calling construct_SingleUnitData in UnitData, line 1339")
call vrS(ZrS)
set MM=MM-1
endfunction
function nyc takes string qyc returns integer
local integer ayc
set w3[MM]=qyc
set MM=MM+1
if Kv==0 then
if Lv<32768 then
set Lv=Lv+1
set ayc=Lv
set Xv[ayc]=1574
else
call Mau("Out of memory: Could not create SinglePositionedUnitData.","when calling error in UnitData, line 1334")
set ayc=0
endif
else
set Kv=Kv-1
set ayc=Jv[Kv]
set Xv[ayc]=1574
endif
set MM=MM-1
return ayc
endfunction
function ErS takes integer mrS,string QrS returns integer
local integer WrS
set w3[MM]=QrS
set MM=MM+1
set WrS=nyc("when calling alloc_SinglePositionedUnitData in UnitData, line 1339")
call PrS(WrS,mrS,"when calling construct_SinglePositionedUnitData in UnitData, line 1339")
set MM=MM-1
return WrS
endfunction
function rIu takes rect MUu,real wIu,real uIu returns boolean
return wIu>KUu(MUu)and wIu<XUu(MUu)and uIu>VUu(MUu)and uIu<NUu(MUu)
endfunction
function SuS takes integer uuS,unit ruS,string suS returns nothing
local integer tuS
local integer iuS
set w3[MM]=suS
set MM=MM+1
if rIu(GV[uuS],F7s(ruS),h3)and(not d7u(S7s(ruS),"when calling isUnitTypeProtected in UnitData, line 1428"))then
set iuS=eV[gV[uuS]]
set tuS=ErS(yV[gV[uuS]],"when calling new_SinglePositionedUnitData in UnitData, line 1429")
call AOo(tuS,ruS,hV[uuS],FV[uuS],"when calling build in UnitData, line 1429")
call Nno(iuS,tuS,"when calling add in UnitData, line 1429")
endif
set MM=MM-1
endfunction
function LOc takes integer JOc,string KOc returns nothing
set w3[MM]=KOc
set MM=MM+1
if Qg[JOc]==0 then
call Mau("Double free: object of type StringTable","when calling error in StringTable, line 43")
else
set xg[vg]=JOc
set vg=vg+1
set Qg[JOc]=0
endif
set MM=MM-1
endfunction
function Zpc takes integer Wpc,string Epc returns nothing
set w3[MM]=Epc
set MM=MM+1
if km[Wpc]==0 then
call Mau("Double free: object of type StringHashList","when calling error in Utility, line 188")
else
set gm[hm]=Wpc
set hm=hm+1
set km[Wpc]=0
endif
set MM=MM-1
endfunction
function pfS takes integer yfS returns nothing
call jGu(MT,yfS)
set PM[yfS]=0
endfunction
function Ieo takes integer Zeo,string Ueo returns nothing
set w3[MM]=Ueo
set MM=MM+1
if km[Zeo]==0 then
if Zeo==0 then
call Mau("Nullpointer exception when calling StringHashList.clear","when calling error in Utility, line 209")
else
call Mau("Called StringHashList.clear on invalid object.","when calling error in Utility, line 209")
endif
endif
call pfS(Zeo)
set MM=MM-1
endfunction
function jfS takes integer FfS,string kfS returns nothing
set w3[MM]=kfS
set MM=MM+1
call Ieo(FfS,"when calling clear in Utility, line 269")
set MM=MM-1
endfunction
function mfS takes integer xfS,string vfS returns nothing
set w3[MM]=vfS
set MM=MM+1
call jfS(xfS,"when calling StringHashList_onDestroy in Utility, line 268")
call Zpc(xfS,"when calling dealloc_StringHashList in Utility, line 268")
set MM=MM-1
endfunction
function Eeo takes integer Qeo,string Weo returns nothing
set w3[MM]=Weo
set MM=MM+1
if km[Qeo]==0 then
if Qeo==0 then
call Mau("Nullpointer exception when calling StringHashList.StringHashList","when calling error in Utility, line 188")
else
call Mau("Called StringHashList.StringHashList on invalid object.","when calling error in Utility, line 188")
endif
endif
call mfS(Qeo,"when calling destroyStringHashList in Utility, line 188")
set MM=MM-1
endfunction
function Hpc takes integer Apc,string Dpc returns nothing
set w3[MM]=Dpc
set MM=MM+1
if mm[Apc]==0 then
call Mau("Double free: object of type StringHashMap","when calling error in Utility, line 81")
else
set jm[xm]=Apc
set xm=xm+1
set mm[Apc]=0
endif
set MM=MM-1
endfunction
function vGu takes hashtable xGu returns nothing
call FlushParentHashtable(xGu)
endfunction
function yRS takes integer bRS returns nothing
call vGu(AM[bRS])
call vGu(DM[bRS])
endfunction
function qRS takes integer pRS,string eRS returns nothing
set w3[MM]=eRS
set MM=MM+1
call yRS(pRS)
call Hpc(pRS,"when calling dealloc_StringHashMap in Utility, line 135")
set MM=MM-1
endfunction
function Neo takes integer Veo,string Beo returns nothing
set w3[MM]=Beo
set MM=MM+1
if mm[Veo]==0 then
if Veo==0 then
call Mau("Nullpointer exception when calling StringHashMap.StringHashMap","when calling error in Utility, line 81")
else
call Mau("Called StringHashMap.StringHashMap on invalid object.","when calling error in Utility, line 81")
endif
endif
call qRS(Veo,"when calling destroyStringHashMap in Utility, line 81")
set MM=MM-1
endfunction
function g1i takes integer Y1i,string G1i returns nothing
set w3[MM]=G1i
set MM=MM+1
call Neo(aC[Y1i],"when calling dispatch_StringHashMap_destroyStringHashMap in StringTable, line 106")
call Eeo(nC[Y1i],"when calling dispatch_StringHashList_destroyStringHashList in StringTable, line 107")
set MM=MM-1
endfunction
function E3i takes integer Q3i,string W3i returns nothing
set w3[MM]=W3i
set MM=MM+1
call g1i(Q3i,"when calling StringTable_onDestroy in StringTable, line 105")
call LOc(Q3i,"when calling dealloc_StringTable in StringTable, line 105")
set MM=MM-1
endfunction
function Cro takes integer Lro,string Xro returns nothing
set w3[MM]=Xro
set MM=MM+1
if Qg[Lro]==0 then
if Lro==0 then
call Mau("Nullpointer exception when calling StringTable.StringTable","when calling error in StringTable, line 43")
else
call Mau("Called StringTable.StringTable on invalid object.","when calling error in StringTable, line 43")
endif
endif
call E3i(Lro,"when calling destroyStringTable in StringTable, line 43")
set MM=MM-1
endfunction
function Gyc takes string Tyc returns integer
local integer Yyc
set w3[MM]=Tyc
set MM=MM+1
if Kv==0 then
if Lv<32768 then
set Lv=Lv+1
set Yyc=Lv
set Xv[Yyc]=1573
else
call Mau("Out of memory: Could not create SingleUnitData.","when calling error in UnitData, line 1018")
set Yyc=0
endif
else
set Kv=Kv-1
set Yyc=Jv[Kv]
set Xv[Yyc]=1573
endif
set MM=MM-1
return Yyc
endfunction
function FcS takes integer GcS,string gcS returns integer
local integer hcS
set w3[MM]=gcS
set MM=MM+1
set hcS=Gyc("when calling alloc_SingleUnitData in UnitData, line 1058")
call vcS(hcS,GcS,"when calling construct_SingleUnitData in UnitData, line 1058")
set MM=MM-1
return hcS
endfunction
function Fyc takes integer gyc,string hyc returns nothing
set w3[MM]=hyc
set MM=MM+1
if Xv[gyc]==0 then
call Mau("Double free: object of type SingleUnitData","when calling error in UnitData, line 1018")
else
set Jv[Kv]=gyc
set Kv=Kv+1
set Xv[gyc]=0
endif
set MM=MM-1
endfunction
function CuS takes integer XuS returns nothing
endfunction
function eyc takes integer yyc,string pyc returns nothing
set w3[MM]=pyc
set MM=MM+1
if Hv[yyc]==0 then
call Mau("Double free: object of type SingleAbilityData","when calling error in UnitData, line 877")
else
set Pv[Av]=yyc
set Av=Av+1
set Hv[yyc]=0
endif
set MM=MM-1
endfunction
function NuS takes integer VuS,string BuS returns nothing
set w3[MM]=BuS
set MM=MM+1
call CuS(VuS)
call eyc(VuS,"when calling dealloc_SingleAbilityData in UnitData, line 877")
set MM=MM-1
endfunction
function pOo takes integer bOo,string yOo returns nothing
set w3[MM]=yOo
set MM=MM+1
if Hv[bOo]==0 then
if bOo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.SingleAbilityData","when calling error in UnitData, line 877")
else
call Mau("Called SingleAbilityData.SingleAbilityData on invalid object.","when calling error in UnitData, line 877")
endif
endif
call NuS(bOo,"when calling destroySingleAbilityData in UnitData, line 877")
set MM=MM-1
endfunction
function ZcS takes integer mcS,string QcS returns nothing
local integer WcS
local integer EcS
set w3[MM]=QcS
set MM=MM+1
call CAc(JB[mcS],"when calling dispatch_LinkedList_destroyLinkedList in UnitData, line 1052")
set WcS=x1s(EB[mcS],"when calling iterator in UnitData, line 1053")
loop
exitwhen not t1s(WcS)
set EcS=r1s(WcS)
call pOo(EcS,"when calling dispatch_SingleAbilityData_destroySingleAbilityData in UnitData, line 1054")
endloop
call c1s(WcS,"when calling close in UnitData, line 1053")
call CAc(EB[mcS],"when calling dispatch_LinkedList_destroyLinkedList in UnitData, line 1055")
call CAc(WB[mcS],"when calling dispatch_LinkedList_destroyLinkedList in UnitData, line 1056")
set MM=MM-1
endfunction
function PcS takes integer UcS,string IcS returns nothing
set w3[MM]=IcS
set MM=MM+1
call ZcS(UcS,"when calling SingleUnitData_onDestroy in UnitData, line 1051")
call Fyc(UcS,"when calling dealloc_SingleUnitData in UnitData, line 1051")
set MM=MM-1
endfunction
function Slo takes integer tlo,string ilo returns nothing
set w3[MM]=ilo
set MM=MM+1
if Xv[tlo]==0 then
if tlo==0 then
call Mau("Nullpointer exception when calling SingleUnitData.SingleUnitData","when calling error in UnitData, line 1018")
else
call Mau("Called SingleUnitData.SingleUnitData on invalid object.","when calling error in UnitData, line 1018")
endif
endif
call PcS(tlo,"when calling destroySingleUnitData in UnitData, line 1018")
set MM=MM-1
endfunction
function HOc takes string AOc returns integer
local integer DOc
set w3[MM]=AOc
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set DOc=mg
set Qg[DOc]=724
else
call Mau("Out of memory: Could not create StringTable.","when calling error in StringTable, line 43")
set DOc=0
endif
else
set vg=vg-1
set DOc=xg[vg]
set Qg[DOc]=724
endif
set MM=MM-1
return DOc
endfunction
function Qpc takes string vpc returns integer
local integer mpc
set w3[MM]=vpc
set MM=MM+1
if hm==0 then
if Fm<32768 then
set Fm=Fm+1
set mpc=Fm
set km[mpc]=1585
else
call Mau("Out of memory: Could not create StringHashList.","when calling error in Utility, line 188")
set mpc=0
endif
else
set hm=hm-1
set mpc=gm[hm]
set km[mpc]=1585
endif
set MM=MM-1
return mpc
endfunction
function GfS takes integer YfS returns nothing
set PM[YfS]=0
endfunction
function hfS takes integer gfS returns nothing
call GfS(gfS)
endfunction
function TfS takes string ffS returns integer
local integer RfS
set w3[MM]=ffS
set MM=MM+1
set RfS=Qpc("when calling alloc_StringHashList in Utility, line 261")
call hfS(RfS)
set MM=MM-1
return RfS
endfunction
function q1i takes integer y1i,string p1i returns nothing
local integer e1i
set w3[MM]=p1i
set MM=MM+1
set e1i=0
set pC[y1i]=e1i
set eC[y1i]=false
set qC[y1i]=false
set aC[y1i]=oRS("when calling new_StringHashMap in StringTable, line 50")
set nC[y1i]=TfS("when calling new_StringHashList in StringTable, line 51")
set MM=MM-1
endfunction
function T1i takes integer f1i,string R1i returns nothing
set w3[MM]=R1i
set MM=MM+1
call q1i(f1i,"when calling StringTable_init in StringTable, line 43")
set MM=MM-1
endfunction
function d1i takes string a1i returns integer
local integer n1i
set w3[MM]=a1i
set MM=MM+1
set n1i=HOc("when calling alloc_StringTable in StringTable, line 43")
call T1i(n1i,"when calling construct_StringTable in StringTable, line 43")
set MM=MM-1
return n1i
endfunction
function dlo takes integer blo,player ylo,real plo,real elo,real qlo,string alo returns unit
local unit nlo
set w3[MM]=alo
set MM=MM+1
if Xv[blo]==0 then
if blo==0 then
call Mau("Nullpointer exception when calling SingleUnitData.create","when calling error in UnitData, line 1145")
else
call Mau("Called SingleUnitData.create on invalid object.","when calling error in UnitData, line 1145")
endif
endif
set nlo=KtS(blo,ylo,plo,elo,qlo,"when calling create in UnitData, line 1145")
set MM=MM-1
set Idw=nlo
set nlo=null
return Idw
endfunction
function llo takes integer clo,unit olo,string Olo returns nothing
set w3[MM]=Olo
set MM=MM+1
if Xv[clo]==0 then
if clo==0 then
call Mau("Nullpointer exception when calling SingleUnitData.build","when calling error in UnitData, line 1061")
else
call Mau("Called SingleUnitData.build on invalid object.","when calling error in UnitData, line 1061")
endif
endif
call htS(clo,olo,"when calling build in UnitData, line 1061")
set MM=MM-1
endfunction
function WAi takes integer YAi,unit GAi,string gAi returns nothing
local real hAi
local real FAi
local real kAi
local integer jAi
local integer xAi
local integer vAi
local real mAi
local real QAi
set w3[MM]=gAi
set MM=MM+1
if IsUnitInRangeXY(GAi,HL[YAi],JL[YAi],200.)and A7s(GAi,oy)and(not d7u(S7s(GAi),"when calling isUnitTypeProtected in SotfrpGuiLocust, line 26"))then
call DKu(GAi,oy)
set mAi=F7s(GAi)
set QAi=h3
set hAi=mAi
set FAi=QAi
set kAi=GetUnitFacing(GAi)
set jAi=d1i("when calling new_StringTable in SotfrpGuiLocust, line 30")
set vAi=FcS(jAi,"when calling new_SingleUnitData in SotfrpGuiLocust, line 31")
call llo(vAi,GAi,"when calling build in SotfrpGuiLocust, line 31")
set xAi=vAi
call E8s(GAi)
call dlo(xAi,pa[KL[YAi]],hAi,FAi,kAi,"when calling create in SotfrpGuiLocust, line 33")
call Slo(xAi,"when calling dispatch_SingleUnitData_destroySingleUnitData in SotfrpGuiLocust, line 34")
call Cro(jAi,"when calling dispatch_StringTable_destroyStringTable in SotfrpGuiLocust, line 35")
endif
set MM=MM-1
endfunction
function h3s takes integer Y3s,unit G3s,string g3s returns nothing
set w3[MM]=g3s
set MM=MM+1
call Cqo(yP[Y3s],vvr(G3s),"when calling add in LinkedList, line 540")
set MM=MM-1
endfunction
function p4i takes integer b4i,unit y4i returns nothing
set AR=AR+1
set PR=y4i
endfunction
function M5S takes integer B5S,integer N5S returns nothing
call RemoveSavedInteger(VR,B5S,N5S)
endfunction
function Lio takes integer Hio,integer Jio,string Kio returns nothing
set w3[MM]=Kio
set MM=MM+1
if Yh[Hio]==0 then
if Hio==0 then
call Mau("Nullpointer exception when calling Table.removeInt","when calling error in Table, line 24")
else
call Mau("Called Table.removeInt on invalid object.","when calling error in Table, line 24")
endif
endif
call M5S(Hio,Jio)
set MM=MM-1
endfunction
function UDs takes integer WDs,integer EDs,string ZDs returns nothing
set w3[MM]=ZDs
set MM=MM+1
if PZc(WDs,EDs,"when calling has in HashMap, line 28")then
set YU[WDs]=YU[WDs]-1
endif
call Lio(WDs,EDs,"when calling removeInt in HashMap, line 30")
set MM=MM-1
endfunction
function tZc takes integer uZc,integer rZc,string sZc returns nothing
set w3[MM]=sZc
set MM=MM+1
if dh[uZc]==0 then
if uZc==0 then
call Mau("Nullpointer exception when calling HashList.removeAt","when calling error in HashList, line 53")
else
call Mau("Called HashList.removeAt on invalid object.","when calling error in HashList, line 53")
endif
endif
if dh[uZc]<=826 then
call ZAs(uZc,rZc,"when calling removeAt in HashList, line 53")
else
call AHs(uZc,rZc,"when calling removeAt in HashList, line 53")
endif
set MM=MM-1
endfunction
function HAs takes integer UAs,integer IAs,string PAs returns nothing
local integer AAs
local integer DAs
set w3[MM]=PAs
set MM=MM+1
set AAs=0
set DAs=TU[UAs]-1
loop
exitwhen AAs>DAs
if IAs==iYu(Ge,UAs,AAs)then
call tZc(UAs,AAs,"when calling removeAt in HashList, line 63")
exitwhen true
endif
set AAs=AAs+1
endloop
set MM=MM-1
endfunction
function oZc takes integer iZc,integer SZc,string cZc returns nothing
set w3[MM]=cZc
set MM=MM+1
if dh[iZc]==0 then
if iZc==0 then
call Mau("Nullpointer exception when calling HashList.remove","when calling error in HashList, line 60")
else
call Mau("Called HashList.remove on invalid object.","when calling error in HashList, line 60")
endif
endif
if dh[iZc]<=826 then
call HAs(iZc,SZc,"when calling remove in HashList, line 60")
else
call KHs(iZc,SZc,"when calling remove in HashList, line 60")
endif
set MM=MM-1
endfunction
function lHs takes integer cHs,integer oHs,string OHs returns nothing
set w3[MM]=OHs
set MM=MM+1
call UDs(cHs,oHs,"when calling remove in HashMap, line 66")
if TUc(cHs,oHs,"when calling hasKey in HashMap, line 67")then
call oZc(GU[cHs],oHs,"when calling remove in HashMap, line 68")
endif
set MM=MM-1
endfunction
function pUc takes integer lUc,integer bUc,string yUc returns nothing
set w3[MM]=yUc
set MM=MM+1
if Yh[lUc]==0 then
if lUc==0 then
call Mau("Nullpointer exception when calling IterableMap.remove","when calling error in HashMap, line 65")
else
call Mau("Called IterableMap.remove on invalid object.","when calling error in HashMap, line 65")
endif
endif
call lHs(lUc,bUc,"when calling remove in HashMap, line 65")
set MM=MM-1
endfunction
function DQi takes integer UQi,unit IQi,string PQi returns nothing
local group AQi
set w3[MM]=PQi
set MM=MM+1
set AQi=Dvr(BZc(EL[UQi],vvr(IQi),"when calling get in ScmdUnitParamLinkingBuiltins, line 48"),"when calling groupFromIndex in ScmdUnitParamLinkingBuiltins, line 48")
if AQi!=null then
call Hno(AQi,IQi)
if oTu(AQi)==0 then
call STu(AQi)
endif
call pUc(EL[UQi],vvr(IQi),"when calling remove in ScmdUnitParamLinkingBuiltins, line 53")
endif
set MM=MM-1
set AQi=null
endfunction
function iwo takes integer rwo,unit swo,string two returns nothing
set w3[MM]=two
set MM=MM+1
if rv[rwo]==0 then
if rwo==0 then
call Mau("Nullpointer exception when calling DisjointGroups.delete","when calling error in ScmdUnitParamLinkingBuiltins, line 47")
else
call Mau("Called DisjointGroups.delete on invalid object.","when calling error in ScmdUnitParamLinkingBuiltins, line 47")
endif
endif
call DQi(rwo,swo,"when calling delete in ScmdUnitParamLinkingBuiltins, line 47")
set MM=MM-1
endfunction
function gbr takes unit Tbr,integer Ybr,string Gbr returns nothing
set w3[MM]=Gbr
set MM=MM+1
call iwo(BZc(Ud,Ybr,"when calling get in ScmdUnitParamLinkingBuiltins, line 156"),Tbr,"when calling delete in ScmdUnitParamLinkingBuiltins, line 156")
set MM=MM-1
endfunction
function tQi takes integer uQi,unit rQi,string sQi returns nothing
set w3[MM]=sQi
set MM=MM+1
if k7u(rQi,h2o(QL[uQi],"when calling getPlayerId in ScmdUnitParamLinkingBuiltins, line 192"),"when calling isUnitAccessibleByPlayer in ScmdUnitParamLinkingBuiltins, line 192")then
call gbr(rQi,WL[uQi],"when calling unlinkParameter in ScmdUnitParamLinkingBuiltins, line 193")
endif
set MM=MM-1
endfunction
function xlt takes integer klt,unit jlt returns nothing
call E8s(jlt)
endfunction
function egc takes integer bgc,unit ygc,string pgc returns nothing
set w3[MM]=pgc
set MM=MM+1
if yg[bgc]==0 then
if bgc==0 then
call Mau("Nullpointer exception when calling ForGroupCallback.callback","when calling error in ClosureForGroups, line 4")
else
call Mau("Called ForGroupCallback.callback on invalid object.","when calling error in ClosureForGroups, line 4")
endif
endif
if yg[bgc]<=802 then
if yg[bgc]<=800 then
if yg[bgc]<=799 then
call h3s(bgc,ygc,"when calling callback_forEachFrom_LinkedList in ClosureForGroups, line 4")
else
call xlt(bgc,ygc)
endif
elseif yg[bgc]<=801 then
call SuS(bgc,ygc,"when calling callback_forUnitsOfPlayer_PositionedUnitData_UnitData in ClosureForGroups, line 4")
else
call WAi(bgc,ygc,"when calling callback_forUnitsOfPlayer_onPointCast_SotfrpGuiLocust in ClosureForGroups, line 4")
endif
elseif yg[bgc]<=804 then
if yg[bgc]<=803 then
call Flt(bgc,ygc,"when calling callback_forUnitsSelected_PlayerUtil in ClosureForGroups, line 4")
else
call p4i(bgc,ygc)
endif
elseif yg[bgc]<=805 then
call Imi(bgc,ygc,"when calling callback_forUnitsSelected_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins in ClosureForGroups, line 4")
else
call tQi(bgc,ygc,"when calling callback_forUnitsSelected_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins in ClosureForGroups, line 4")
endif
set MM=MM-1
endfunction
function pcu takes nothing returns integer
return tp[ip-1]
endfunction
function ycu takes unit lcu,string bcu returns nothing
set w3[MM]=bcu
set MM=MM+1
if cp<Sp then
call egc(pcu(),lcu,"when calling callback in ClosureForGroups, line 18")
endif
set cp=cp+1
set MM=MM-1
endfunction
function Ocu takes string ocu returns nothing
set w3[MM]=ocu
set MM=MM+1
call ycu(GetFilterUnit(),"when calling filterCallback in ClosureForGroups, line 14")
set MM=MM-1
endfunction
function NRo takes nothing returns nothing
set MM=0
call Ocu("ClosureForGroups, line 14")
endfunction
function NUw takes nothing returns boolean
return GetUnitAbilityLevel(GetDyingUnit(),1096894768)>0 or GetUnitAbilityLevel(GetDyingUnit(),1096894769)>0
endfunction
function bES takes string OES returns integer
local integer lES
set w3[MM]=OES
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set lES=ZG
set UG[lES]=688
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_OnUnitEnterLeave.","when calling error in OnUnitEnterLeave, line 63")
set lES=0
endif
else
set EG=EG-1
set lES=WG[EG]
set UG[lES]=688
endif
set MM=MM-1
return lES
endfunction
function vWu takes player kWu,integer jWu,boolean xWu returns nothing
call SetPlayerAbilityAvailable(kWu,jWu,xWu)
endfunction
function Gmu takes string fmu returns boolean
local integer Rmu
local integer Tmu
local integer Ymu
set w3[MM]=fmu
set MM=MM+1
set Eq=CreateTrigger()
set Zq=CreateGroup()
set Iq=0
set Pq=1095577654
set Rmu=0
set Tmu=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen Rmu>Tmu
call vWu(pa[Rmu],Pq,false)
set Rmu=Rmu+1
endloop
set Ymu=bES("when calling alloc_CallbackSingle_nullTimer_OnUnitEnterLeave in OnUnitEnterLeave, line 63")
call KGs(Ymu)
call Cou(Ymu,"when calling nullTimer in OnUnitEnterLeave, line 63")
set MM=MM-1
return true
endfunction
function Nfo takes nothing returns boolean
set MM=0
return Gmu("OnUnitEnterLeave, line 1")
endfunction
function Bjw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Vjw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function Njw takes nothing returns nothing
if Bjw()then
call UnitDamageTargetBJ(Nu,GetEnumUnit(),xu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_COLD)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
elseif Vjw()then
call UnitDamageTargetBJ(Nu,GetEnumUnit(),vu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_FIRE)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
else
call UnitDamageTargetBJ(Nu,GetEnumUnit(),mu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_LIGHTNING)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
endif
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endfunction
function Nmw takes nothing returns boolean
if not(GetIssuedOrderIdBJ()==String2OrderIdBJ("attackground"))then
return false
endif
return true
endfunction
function Nvw takes nothing returns nothing
call CameraClearNoiseForPlayer(GetEnumPlayer())
endfunction
function Nws takes nothing returns boolean
set XT[0]=0
set XT[1]=1095577649
set XT[2]=1095577650
set XT[3]=1095577651
set XT[4]=1095577652
set XT[5]=1095577653
set XT[6]=iy
set CT=GetCameraBoundMaxX()+GetCameraMargin(CAMERA_MARGIN_RIGHT)
set VT=GetCameraBoundMinX()-GetCameraMargin(CAMERA_MARGIN_LEFT)
set BT=GetCameraBoundMaxY()+GetCameraMargin(CAMERA_MARGIN_TOP)
set NT=GetCameraBoundMinY()-GetCameraMargin(CAMERA_MARGIN_BOTTOM)
set MT=InitHashtable()
return true
endfunction
function O2w takes nothing returns nothing
local unit i2w=GetSpellAbilityUnit()
local effect S2w=null
local integer c2w=0
local integer o2w=GetUnitAbilityLevel(i2w,1093683281)
if IsUnitInGroup(i2w,ct)==true then
call GroupRemoveUnit(ct,i2w)
call iTw(1.)
endif
call GroupAddUnit(ct,i2w)
set S2w=AddSpecialEffectTarget("Abilities\\Spells\\Orc\\SpiritLink\\SpiritLinkTarget.mdl",i2w,"chest")
call UnitAddAbility(i2w,1093683286)
call UnitMakeAbilityPermanent(i2w,true,1093683286)
call SetUnitAbilityLevel(i2w,1093683286,o2w)
call UnitAddAbility(i2w,1093683285)
call UnitMakeAbilityPermanent(i2w,true,1093683285)
call SetUnitAbilityLevel(i2w,1093683285,o2w)
set o2w=0
loop
exitwhen IsUnitInGroup(i2w,ct)==false
call iTw(1.)
set c2w=c2w+1
if c2w==2 then
call DestroyEffect(S2w)
set S2w=null
endif
if c2w==12 or GetUnitState(i2w,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(ct,i2w)
endif
endloop
call UnitRemoveAbility(i2w,1093683286)
call UnitRemoveAbility(i2w,1093683285)
call UnitRemoveAbility(i2w,1110455128)
set i2w=null
set c2w=0
set i2w=null
set S2w=null
endfunction
function O4w takes nothing returns nothing
call SetUnitLifeBJ(GetSpellAbilityUnit(),GetUnitStateSwap(UNIT_STATE_LIFE,GetSpellAbilityUnit())+GetUnitStateSwap(UNIT_STATE_LIFE,GetSpellTargetUnit()))
call ExplodeUnitBJ(GetSpellTargetUnit())
endfunction
function O8w takes nothing returns boolean
return GetSpellAbilityId()==1093682994
endfunction
function O9u takes nothing returns nothing
local timer i9u=GetExpiredTimer()
local unit S9u=LoadUnitHandle(nr,GetHandleId(i9u),StringHash("u"))
local location c9u=LoadLocationHandle(nr,GetHandleId(i9u),StringHash("l"))
local unit o9u=CreateUnit(GetOwningPlayer(S9u),1747995215,GetUnitX(S9u),GetUnitY(S9u),GetUnitFacing(S9u))
call FlushChildHashtable(nr,GetHandleId(i9u))
call DestroyTimer(i9u)
set i9u=null
call UnitAddAbility(o9u,1093684275)
call IssuePointOrderLoc(o9u,"flamestrike",c9u)
call eRw(o9u,2.5)
set o9u=null
set c9u=null
set S9u=null
set i9u=null
set S9u=null
set c9u=null
set o9u=null
endfunction
function OBw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call UnitRemoveAbility(GetEnumUnit(),1093683539)
endif
endfunction
function OFw takes nothing returns nothing
local unit cFw=GetEnumUnit()
local real oFw=LoadReal(i,ll,GetHandleId(cFw))
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",cFw,"origin"))
if pl<oFw then
call SetWidgetLife(cFw,GetWidgetLife(cFw)+pl)
call SaveReal(i,ll,GetHandleId(cFw),(oFw-pl)*1.0)
else
call SetWidgetLife(cFw,GetWidgetLife(cFw)+oFw)
call kYw(ol,cFw)
call UnitRemoveAbility(cFw,tl)
endif
set cFw=null
set cFw=null
endfunction
function oHw takes nothing returns boolean
if not(fu==true)then
return false
endif
if not(GetDestructableMaxLife(GetEnumDestructable())<=500.00)then
return false
endif
return true
endfunction
function OHw takes nothing returns nothing
if oHw()then
call SetDestructableInvulnerableBJ(GetEnumDestructable(),true)
call KillDestructable(GetEnumDestructable())
call RemoveDestructable(GetEnumDestructable())
else
call DoNothing()
endif
endfunction
function OIw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())and GetUnitTypeId(GetFilterUnit())!=1747988528
endfunction
function OJw takes nothing returns boolean
if not(ls[0]==true)then
return false
endif
return true
endfunction
function RTw takes location nTw,location dTw returns real
local real fTw=bj_RADTODEG*Atan2(GetLocationY(dTw)-GetLocationY(nTw),GetLocationX(dTw)-GetLocationX(nTw))
set nTw=null
set dTw=null
return fTw
endfunction
function OMw takes nothing returns nothing
local unit SMw=GetSpellTargetUnit()
local unit cMw=GetSpellAbilityUnit()
local integer oMw=0
call GroupRemoveUnit(ps,SMw)
call GroupRemoveUnit(es,cMw)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",SMw,"overhead"))
call iTw(0.5)
call GroupAddUnit(ps,SMw)
call GroupAddUnit(es,cMw)
call SetUnitPathing(cMw,false)
call UnitAddAbility(cMw,1093683533)
call UnitMakeAbilityPermanent(cMw,true,1093683533)
call UnitAddAbility(SMw,1093683535)
call UnitMakeAbilityPermanent(SMw,true,1093683535)
loop
exitwhen IsUnitInGroup(SMw,ps)==false
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl",GetUnitLoc(cMw)))
call SetUnitPosition(cMw,GetUnitX(SMw)-130.+GetRandomInt(30,230),GetUnitY(SMw)-130.+GetRandomInt(30,230))
call SetUnitFacing(cMw,RTw(GetUnitLoc(cMw),GetUnitLoc(SMw)))
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdl",GetUnitLoc(cMw)))
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl",SMw,"chest"))
call SetUnitAnimation(cMw,"attack")
call UnitDamageTarget(cMw,SMw,100.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call iTw(0.5)
set oMw=oMw+1
if oMw==10 or BlzIsUnitInvulnerable(SMw)==true or GetUnitState(cMw,UNIT_STATE_LIFE)<=0. or GetUnitState(SMw,UNIT_STATE_LIFE)<=0. or IsUnitLoaded(SMw)==true or IsUnitLoaded(cMw)==true or GetUnitAbilityLevel(cMw,1111844210)>0 or GetUnitAbilityLevel(cMw,1115120994)>0 or GetUnitAbilityLevel(cMw,1115120993)>0 or GetUnitAbilityLevel(cMw,1113943667)>0 or GetUnitAbilityLevel(cMw,1113943655)>0 or GetUnitAbilityLevel(cMw,1113943649)>0 or GetUnitAbilityLevel(SMw,1113880182)>0 or GetUnitAbilityLevel(cMw,1113880182)>0 or GetUnitAbilityLevel(cMw,1114467444)>0 or GetUnitAbilityLevel(SMw,1114205814)>0 or GetUnitAbilityLevel(SMw,1114207859)>0 or GetUnitAbilityLevel(SMw,1112504171)>0 or GetUnitAbilityLevel(cMw,1112757326)>0 or GetUnitAbilityLevel(cMw,1112560453)>0 or GetUnitAbilityLevel(cMw,1112896364)>0 or GetUnitAbilityLevel(cMw,1112896372)>0 or GetUnitAbilityLevel(cMw,1112896368)>0 or GetUnitAbilityLevel(cMw,1113815395)>0 or GetUnitAbilityLevel(cMw,1113815346)>0 then
call GroupRemoveUnit(ps,SMw)
endif
endloop
call UnitRemoveAbility(cMw,1093683533)
call SetUnitPathing(cMw,true)
call GroupRemoveUnit(es,cMw)
call SetUnitAnimation(cMw,"stand")
call UnitRemoveAbility(SMw,1093683535)
call UnitRemoveAbility(SMw,1110455352)
set SMw=null
set cMw=null
set oMw=0
set SMw=null
set cMw=null
endfunction
function o1S takes string S1S returns integer
local integer c1S
set w3[MM]=S1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c1S=kj
set jj[c1S]=1208
else
call Mau("Out of memory: Could not create IBuiltin_setVariadicArgumentTypes_ScmdParser.","when calling error in ScmdParser, line 147")
set c1S=0
endif
else
set Fj=Fj-1
set c1S=hj[Fj]
set jj[c1S]=1208
endif
set MM=MM-1
return c1S
endfunction
function F6u takes string G6u returns boolean
local integer g6u
local integer h6u
set w3[MM]=G6u
set MM=MM+1
set g6u=o1S("when calling alloc_IBuiltin_setVariadicArgumentTypes_ScmdParser in ScmdParser, line 147")
set h6u=eDt(g6u,"when calling new_BuiltinData in ScmdParser, line 147")
call hno(h6u,N1u(),"when calling setVariadicArgumentTypes in ScmdParser, line 152")
set hd=l5i(WHt(h6u,"when calling new_BuiltinFunction in ScmdParser, line 147"),"when calling new_SharedPointer in ScmdParser, line 147")
set MM=MM-1
return true
endfunction
function ORo takes nothing returns boolean
set MM=0
return F6u("ScmdParser, line 1")
endfunction
function kmu takes nothing returns unit
return Uq[Iq-1]
endfunction
function ybr takes string Obr returns nothing
local integer lbr
local integer bbr
set w3[MM]=Obr
set MM=MM+1
set lbr=fHs(Ud,"when calling iterator in ScmdUnitParamLinkingBuiltins, line 66")
loop
exitwhen not PPs(lbr,"when calling hasNext in ScmdUnitParamLinkingBuiltins, line 66")
set bbr=EPs(lbr,"when calling next in ScmdUnitParamLinkingBuiltins, line 66")
call iwo(BZc(Ud,bbr,"when calling get in ScmdUnitParamLinkingBuiltins, line 67"),kmu(),"when calling delete in ScmdUnitParamLinkingBuiltins, line 67")
endloop
call HPs(lbr,"when calling close in ScmdUnitParamLinkingBuiltins, line 66")
set MM=MM-1
endfunction
function OTo takes nothing returns nothing
set MM=0
call ybr("ScmdUnitParamLinkingBuiltins, line 65")
endfunction
function OZw takes nothing returns nothing
set Ns[wt]=1093683763
set Ms[wt]="bronzehelmet"
set wt=wt+1
set Ns[wt]=1093683766
set Ms[wt]="bronzechestplate"
set wt=wt+1
set Ns[wt]=1093683767
set Ms[wt]="bronzebootrf"
set wt=wt+1
set Ns[wt]=1093683768
set Ms[wt]="bronzebootlf"
set wt=wt+1
set Ns[wt]=1093683777
set Ms[wt]="bronzebracerrh"
set wt=wt+1
set Ns[wt]=1093683769
set Ms[wt]="bronzebracerlh"
set wt=wt+1
set Ns[wt]=1093683778
set Ms[wt]="bronzebucklerrh"
set wt=wt+1
set Ns[wt]=1093683779
set Ms[wt]="bronzebucklerlh"
set wt=wt+1
set Ns[wt]=1093683780
set Ms[wt]="voodoomask"
set wt=wt+1
set Ns[wt]=1093683782
set Ms[wt]="longswordrh"
set wt=wt+1
set Ns[wt]=1093683781
set Ms[wt]="longswordlh"
set wt=wt+1
set Ns[wt]=1093683802
set Ms[wt]="lightassaultriflerh"
set wt=wt+1
set Ns[wt]=1093683801
set Ms[wt]="lightassaultriflelh"
set wt=wt+1
set Ns[wt]=1093684035
set Ms[wt]="lightsaberrh"
set wt=wt+1
set Ns[wt]=1093684034
set Ms[wt]="lightsaberlh"
set wt=wt+1
set Ns[wt]=1093684289
set Ms[wt]="aetherbladerh"
set wt=wt+1
set Ns[wt]=1093684281
set Ms[wt]="aetherbladelh"
set wt=wt+1
set Ns[wt]=1093684291
set Ms[wt]="eaglebladerh"
set wt=wt+1
set Ns[wt]=1093684290
set Ms[wt]="eaglebladelh"
set wt=wt+1
set Ns[wt]=1093684292
set Ms[wt]="eagleblade2rh"
set wt=wt+1
set Ns[wt]=1093684293
set Ms[wt]="eagleblade2lh"
set wt=wt+1
set Ns[wt]=1093684294
set Ms[wt]="scepterofthetidesrh"
set wt=wt+1
set Ns[wt]=1093684295
set Ms[wt]="scepterofthetideslh"
set wt=wt+1
set Ns[wt]=1093684297
set Ms[wt]="bronzemaulrh"
set wt=wt+1
set Ns[wt]=1093684296
set Ms[wt]="bronzemaullh"
set wt=wt+1
set Ns[wt]=1093684298
set Ms[wt]="admiral'shat"
set wt=wt+1
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function dmu takes nothing returns nothing
local trigger nmu=CreateTrigger()
call rfw(nmu,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(nmu,Filter(baw))
call TriggerRegisterEnterRegion(vq,De,Filter(yaw))
call TriggerAddCondition(mq,Filter(paw))
set nmu=null
endfunction
function Omu takes nothing returns boolean
set kq=1093684037
set jq=1110455617
set xq=1093684038
set vq=CreateTrigger()
set mq=CreateTrigger()
set Qq="Abilities\\Spells\\Custom\\Obliterate\\Obliterate"
set Wq="Abilities\\Spells\\Custom\\Obliterate\\ObliterateTarget.wav"
call dmu()
return true
endfunction
function Ous takes nothing returns boolean
call InitHashtable()
return true
endfunction
function P7w takes nothing returns boolean
if not(GetSpellAbilityId()==1093678926)then
return false
endif
return true
endfunction
function IDw takes nothing returns boolean
if not(GetDestructableMaxLife(GetEnumDestructable())==2501.00)then
return false
endif
return true
endfunction
function PDw takes nothing returns nothing
if IDw()then
call ModifyGateBJ(bj_GATEOPERATION_DESTROY,GetEnumDestructable())
endif
endfunction
function PFw takes nothing returns nothing
local unit IFw=LoadUnitHandle(i,y,GetHandleId(GetExpiredTimer()))
call ATw(GetExpiredTimer())
call BlzEndUnitAbilityCooldown(IFw,1093684552)
call Jgw(1093684553,GetUnitAbilityLevel(IFw,1093684552),"attackonce",IFw)
call BlzSetUnitAbilityManaCost(IFw,1093684552,1,0)
call BlzSetUnitAbilityManaCost(IFw,1093684552,2,0)
call BlzSetUnitAbilityManaCost(IFw,1093684552,3,0)
call nYw(el,IFw,5.)
set IFw=null
set IFw=null
endfunction
function PHw takes nothing returns boolean
if GetSpellAbilityId()==1093683255 then
return true
else
return false
endif
endfunction
function PJw takes nothing returns boolean
return GetUnitTypeId(GetOrderedUnit())==1747988528 and GetIssuedOrderId()!=OrderId("load")and GetIssuedOrderId()!=OrderId("unload")and GetOrderTargetUnit()==null or GetUnitState(GetOrderTargetUnit(),UNIT_STATE_LIFE)>0.
endfunction
function PKw takes nothing returns nothing
local unit IKw=GetSpellAbilityUnit()
if GetSpellAbilityId()==1097028401 then
call UnitRemoveAbility(IKw,1097024049)
call UnitAddAbility(IKw,1097024050)
call UnitMakeAbilityPermanent(IKw,true,1097024050)
call UnitRemoveAbility(IKw,1097028691)
else
call UnitRemoveAbility(IKw,1097024050)
call UnitAddAbility(IKw,1097024049)
call UnitMakeAbilityPermanent(IKw,true,1097024049)
call UnitAddAbility(IKw,1097028691)
call UnitMakeAbilityPermanent(IKw,true,1097028691)
endif
set IKw=null
set IKw=null
endfunction
function PLw takes nothing returns nothing
set gs[3]=1
loop
exitwhen gs[3]>gs[2]
if IsUnitInGroup(ms[gs[3]],Ys)==true then
if Fs[gs[3]]<Rs[gs[3]]then
call QueueUnitAnimation(ms[gs[3]],fs[gs[3]])
set xs[1]=GetUnitLoc(ms[gs[3]])
set xs[2]=PolarProjectionBJ(xs[1],js[gs[3]],ds[gs[3]])
if vs[gs[3]]==true then
call EnumDestructablesInCircleBJ(150.00,xs[2],dSw)
endif
call SetUnitPositionLoc(ms[gs[3]],xs[2])
set Fs[gs[3]]=Fs[gs[3]]+js[gs[3]]
if GetRandomInt(1,5)==1 then
call DestroyEffect(AddSpecialEffectTarget(Ts[gs[3]],ms[gs[3]],"chest"))
endif
set ks[gs[3]]=ks[gs[3]]+180.00/(Rs[gs[3]]/js[gs[3]])
set hs[gs[3]]=SinBJ(ks[gs[3]])*Gs[gs[3]]
call SetUnitFlyHeight(ms[gs[3]],hs[gs[3]],1000000000.00)
call RemoveLocation(xs[1])
call RemoveLocation(xs[2])
else
call SetUnitPathing(ms[gs[3]],true)
call GroupRemoveUnit(Ys,ms[gs[3]])
call SetUnitTimeScale(ms[gs[3]],1.)
call SetUnitAnimation(ms[gs[3]],"stand")
call UnitDamageTarget(ms[gs[3]],Ks[gs[3]],25+25*Hs[gs[3]],true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
set ks[gs[3]]=0.00
set gs[1]=gs[1]-1
if gs[1]==0 then
set gs[2]=0
call DisableTrigger(GetTriggeringTrigger())
endif
endif
endif
set gs[3]=gs[3]+1
endloop
endfunction
function PMw takes nothing returns boolean
return GetSpellAbilityId()==1093684276
endfunction
function PNw takes nothing returns nothing
local unit ZNw=GetSpellTargetUnit()
local unit UNw=GetSpellAbilityUnit()
local timer INw=CreateTimer()
if IsUnitInGroup(ZNw,cs)==true then
call GroupRemoveUnit(cs,ZNw)
call GroupRemoveUnit(os,ZNw)
endif
call TimerStart(INw,0.01,false,null)
loop
exitwhen TimerGetRemaining(INw)<=0.
endloop
call GroupAddUnit(cs,ZNw)
call TimerStart(INw,15.,false,null)
loop
if TimerGetRemaining(INw)<=0. or IsUnitInGroup(ZNw,cs)==false then
call DestroyTimer(INw)
set INw=null
set ZNw=null
set UNw=null
set ZNw=null
set UNw=null
set INw=null
return
endif
exitwhen GetUnitAbilityLevel(ZNw,1110454840)>0 or TimerGetRemaining(INw)<=0.
endloop
call DestroyTimer(INw)
set INw=null
loop
exitwhen GetUnitAbilityLevel(ZNw,1110454840)==0
endloop
set INw=CreateTimer()
call GroupAddUnit(os,ZNw)
call UnitAddAbility(ZNw,1110455124)
call UnitMakeAbilityPermanent(ZNw,true,1110455124)
call TimerStart(INw,1.,false,null)
loop
if IsUnitInGroup(ZNw,os)==false then
call DestroyTimer(INw)
set INw=null
set ZNw=null
set UNw=null
set ZNw=null
set UNw=null
set INw=null
return
endif
exitwhen TimerGetRemaining(INw)<=0.
endloop
call UnitDamageTarget(UNw,ZNw,25.00,false,true,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call TimerStart(INw,1.,false,null)
loop
if IsUnitInGroup(ZNw,os)==false then
call DestroyTimer(INw)
set INw=null
set ZNw=null
set UNw=null
set ZNw=null
set UNw=null
set INw=null
return
endif
exitwhen TimerGetRemaining(INw)<=0.
endloop
call UnitDamageTarget(UNw,ZNw,25.00,false,true,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call TimerStart(INw,1.,false,null)
loop
if IsUnitInGroup(ZNw,os)==false then
call DestroyTimer(INw)
set INw=null
set ZNw=null
set UNw=null
set ZNw=null
set UNw=null
set INw=null
return
endif
exitwhen TimerGetRemaining(INw)<=0.
endloop
call UnitDamageTarget(UNw,ZNw,25.00,false,true,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call TimerStart(INw,1.,false,null)
loop
if IsUnitInGroup(ZNw,os)==false then
call DestroyTimer(INw)
set INw=null
set ZNw=null
set UNw=null
set ZNw=null
set UNw=null
set INw=null
return
endif
exitwhen TimerGetRemaining(INw)<=0.
endloop
call UnitDamageTarget(UNw,ZNw,25.00,false,true,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call TimerStart(INw,1.,false,null)
loop
if IsUnitInGroup(ZNw,os)==false then
call DestroyTimer(INw)
set INw=null
set ZNw=null
set UNw=null
set ZNw=null
set UNw=null
set INw=null
return
endif
exitwhen TimerGetRemaining(INw)<=0.
endloop
call UnitDamageTarget(UNw,ZNw,25.00,false,true,ATTACK_TYPE_MAGIC,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call DestroyTimer(INw)
set INw=null
call GroupRemoveUnit(os,ZNw)
call UnitRemoveAbility(ZNw,1110455124)
set ZNw=null
set UNw=null
set ZNw=null
set UNw=null
set INw=null
endfunction
function PPw takes nothing returns nothing
call SetPlayerHandicapXPBJ(GetEnumPlayer(),0.00)
endfunction
function Ftc takes string gtc returns integer
local integer htc
set w3[MM]=gtc
set MM=MM+1
if Vx==0 then
if Bx<32768 then
set Bx=Bx+1
set htc=Bx
set Nx[htc]=1241
else
call Mau("Out of memory: Could not create InputStreamProcessor_registerInputStreamProcessor_SotFRP_LegacyLoad.","when calling error in SotFRP_LegacyLoad, line 227")
set htc=0
endif
else
set Vx=Vx-1
set htc=Cx[Vx]
set Nx[htc]=1241
endif
set MM=MM-1
return htc
endfunction
function Qtc takes string vtc returns integer
local integer mtc
set w3[MM]=vtc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mtc=kj
set jj[mtc]=1075
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_LegacyLoad.","when calling error in SotFRP_LegacyLoad, line 229")
set mtc=0
endif
else
set Fj=Fj-1
set mtc=hj[Fj]
set jj[mtc]=1075
endif
set MM=MM-1
return mtc
endfunction
function xtc takes string ktc returns integer
local integer jtc
set w3[MM]=ktc
set MM=MM+1
if Vx==0 then
if Bx<32768 then
set Bx=Bx+1
set jtc=Bx
set Nx[jtc]=1242
else
call Mau("Out of memory: Could not create InputStreamProcessor_registerInputStreamProcessor_SotFRP_LegacyLoad.","when calling error in SotFRP_LegacyLoad, line 228")
set jtc=0
endif
else
set Vx=Vx-1
set jtc=Cx[Vx]
set Nx[jtc]=1242
endif
set MM=MM-1
return jtc
endfunction
function yer takes string cer returns boolean
local integer oer
local integer Oer
local integer ler
local integer ber
set w3[MM]=cer
set MM=MM+1
set uf="nEaPy9rLwNfVqb0Qizj3DkGc1OhTU4XsZgMpYKBtl26JI5FmxCoAv8euWRdH7S"
set rf=vhr(uf)
set sf=16
set tf=17
set Sf=18
set cf=19
set of=20
set Of=21
set lf=22
set bf=23
set yf=24
set pf=25
set ef=26
set qf=27
set af=28
set oer=Ftc("when calling alloc_InputStreamProcessor_registerInputStreamProcessor_SotFRP_LegacyLoad in SotFRP_LegacyLoad, line 227")
call G8r(oer,"516b1b971d90fd815f889fd50ac4e3a2a8d0dc5b28736ce07441aef387cdb54968a8666ee1dd2dc47e308adc87e4e8be60ca0d2359b31efa0f671370f1cf4av","91f155fb26f5616f2df290e8d6ba88bd64225e28f73784bc6c61ff61595b8ee9dcfc5b1ce2106a7b500a92b9c08dd64be8cf9c7e36b14e28445989a0a0bf72p","when calling registerInputStreamProcessor in SotFRP_LegacyLoad, line 227")
set Oer=xtc("when calling alloc_InputStreamProcessor_registerInputStreamProcessor_SotFRP_LegacyLoad in SotFRP_LegacyLoad, line 228")
call G8r(Oer,"VGxSRk1sbHFSbWxQVkdONFdrUnJkMXB0VVRSTlZGWnRUMFJuTlZwdFVURk5SMFpxVGtkVmVsbFVTbWhQUjFGM1drZE5NVmxxU1RST2VrMHlXVEpWZDA1NlVUQk5WMFp","NTE2YjFiOTcxZDkwZmQ4MTVmODg5ZmQ1MGFjNGUzYTJhOGQwZGM1YjI4NzM2Y2UwNzQ0MWFlZjM4N2NkYjU0OTY4YTg2NjZlZTFkZDJkYzQ3ZTMwOGFkYzg3ZTRlOGJ","when calling registerInputStreamProcessor in SotFRP_LegacyLoad, line 228")
set ler=Qtc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotFRP_LegacyLoad in SotFRP_LegacyLoad, line 229")
set ber=eDt(ler,"when calling new_BuiltinData in SotFRP_LegacyLoad, line 229")
call Fao(ber,S2u(),"when calling setArgumentsTypes in SotFRP_LegacyLoad, line 235")
call jBu(WHt(ber,"when calling new_BuiltinFunction in SotFRP_LegacyLoad, line 229"),"setlegacyloadingrect","when calling registerProtectedBuiltin in SotFRP_LegacyLoad, line 229")
set MM=MM-1
return true
endfunction
function PRo takes nothing returns boolean
set MM=0
return yer("SotFRP_LegacyLoad, line 1")
endfunction
function PVw takes nothing returns nothing
local group IVw=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(Qcw))
if GetEventPlayerChatString()=="'clotofenergy" then
call ForGroup(IVw,Wcw)
elseif GetEventPlayerChatString()=="@clotofenergy" then
call ForGroup(IVw,Ecw)
endif
call DestroyGroup(IVw)
set IVw=null
set IVw=null
endfunction
function EWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="hdungeonbluefog")then
return false
endif
return true
endfunction
function FWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="hlordaeronrain")then
return false
endif
return true
endfunction
function GWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="hnorthrendsnow")then
return false
endif
return true
endfunction
function IWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="hashenvillerain")then
return false
endif
return true
endfunction
function QWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="hdungeongreenfog")then
return false
endif
return true
endfunction
function RWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="loutlandwind")then
return false
endif
return true
endfunction
function TWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="houtlandwind")then
return false
endif
return true
endfunction
function UWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="lashenvillerain")then
return false
endif
return true
endfunction
function WWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="ldungeonbluefog")then
return false
endif
return true
endfunction
function YWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="lnorthrendsnow")then
return false
endif
return true
endfunction
function ZWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="dalaranshield")then
return false
endif
return true
endfunction
function dWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="raysofmoonlight")then
return false
endif
return true
endfunction
function fWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="raysoflight")then
return false
endif
return true
endfunction
function gWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="northrendblizzard")then
return false
endif
return true
endfunction
function hWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="llordaeronrain")then
return false
endif
return true
endfunction
function jWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="hdungeonwhitefog")then
return false
endif
return true
endfunction
function kWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="ldungeonwhitefog")then
return false
endif
return true
endfunction
function mWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="ldungeongreenfog")then
return false
endif
return true
endfunction
function nWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="hwind")then
return false
endif
return true
endfunction
function vWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="hdungeonredfog")then
return false
endif
return true
endfunction
function xWw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),10,121)=="ldungeonredfog")then
return false
endif
return true
endfunction
function PWw takes nothing returns nothing
call RemoveWeatherEffectBJ(uw)
if IWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1380018290)
elseif UWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1380019314)
elseif ZWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1296393331)
elseif EWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1178886760)
elseif WWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1178886764)
elseif QWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1178888040)
elseif mWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1178888044)
elseif vWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1178890856)
elseif xWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1178890860)
elseif jWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1178892136)
elseif kWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1178892140)
elseif FWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1380739186)
elseif hWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1380740210)
elseif gWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1397645939)
elseif GWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1397647475)
elseif YWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1397648499)
elseif TWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1464820599)
elseif RWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1464822903)
elseif fWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1280467297)
elseif dWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1280470369)
elseif nWw()then
call AddWeatherEffectSaveLast(GetPlayableMapRect(),1464755063)
else
return
endif
call EnableWeatherEffect(GetLastCreatedWeatherEffect(),true)
set uw=GetLastCreatedWeatherEffect()
endfunction
function PXw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call CreateItemLoc(1227896624,G)
call RemoveLocation(G)
endfunction
function Jhw takes unit Dhw returns nothing
local integer Hhw=LoadInteger(i,VO,GetHandleId(Dhw))
call BlzSetUnitAbilityManaCost(Dhw,JO,1,BlzGetUnitAbilityManaCost(Dhw,JO,1)-30*Hhw)
call BlzSetUnitAbilityManaCost(Dhw,JO,2,BlzGetUnitAbilityManaCost(Dhw,JO,2)-30*Hhw)
call BlzSetUnitAbilityManaCost(Dhw,JO,3,BlzGetUnitAbilityManaCost(Dhw,JO,3)-30*Hhw)
call SaveInteger(i,VO,GetHandleId(Dhw),0)
endfunction
function P_u takes nothing returns boolean
call Jhw(ry)
return true
endfunction
function Pau takes nothing returns boolean
set we=60
set ue=-1
set re=InitHashtable()
set se=""
set te=false
return true
endfunction
function initTypecastData takes string w__wurst_stackPos returns nothing
set w3[MM]=w__wurst_stackPos
set MM=MM+1
call WSo(YT,0,"","when calling saveString in TypeCasting, line 12")
set MM=MM-1
endfunction
function lvr takes string Ovr returns boolean
set w3[MM]=Ovr
set MM=MM+1
set YT=O7S("when calling new_Table in TypeCasting, line 7")
set GT=1000.
call initTypecastData("when calling initTypecastData in TypeCasting, line 15")
set MM=MM-1
return true
endfunction
function Pfo takes nothing returns boolean
set MM=0
return lvr("TypeCasting, line 1")
endfunction
function Phw takes nothing returns nothing
local unit Ihw=GetEnumUnit()
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",Ihw,"origin"))
call SetWidgetLife(Ihw,GetWidgetLife(Ihw)+wl*(1.-0.33*(3-LoadInteger(i,MO,GetHandleId(Ihw)))))
set Ihw=null
set Ihw=null
endfunction
function Ikw takes nothing returns boolean
if not(CountUnitsInGroup(Lu)==0)then
return false
endif
if not(CountUnitsInGroup(Hu)==0)then
return false
endif
if not(CountUnitsInGroup(Ku)==0)then
return false
endif
return true
endfunction
function Pkw takes nothing returns nothing
set Du=Du+1
call ForGroupBJ(Hu,hww_3086)
call ForGroupBJ(Ku,Fww_577)
if Ikw()then
set Du=0
call DisableTrigger(GetTriggeringTrigger())
endif
endfunction
function fxr takes trigger dxr returns nothing
call TriggerExecute(dxr)
endfunction
function Pmu takes nothing returns nothing
local unit Imu=GetTriggerUnit()
if r7s(Imu,Pq)==0 then
call hmu(Imu)
call fxr(Eq)
call Fmu()
endif
set Imu=null
endfunction
function Bwu takes nothing returns nothing
local integer Cwu=0
local integer Vwu=1
loop
exitwhen not(Cwu<=32)
set xy[Cwu]=Vwu
set Vwu=Vwu*2
set Cwu=Cwu+1
endloop
endfunction
function Jwu takes nothing returns nothing
local integer Awu=0
local integer Dwu=0
local integer Hwu
loop
exitwhen not(Dwu<256)
set Hwu=0
loop
exitwhen not(Hwu<16)
set Fy[Dwu]=Awu
set Dwu=Dwu+1
set Hwu=Hwu+1
endloop
set Awu=Awu+1
endloop
endfunction
function Xwu takes nothing returns nothing
local integer Kwu=0
local integer Lwu
loop
exitwhen not(Kwu<256)
set Lwu=0
loop
exitwhen not(Lwu<16)
set ky[Kwu]=Lwu
set Kwu=Kwu+1
set Lwu=Lwu+1
endloop
endloop
endfunction
function initBitwise takes nothing returns nothing
call Jwu()
call Xwu()
call Bwu()
endfunction
function Pwu takes nothing returns boolean
set jy[0]=0
set jy[1]=0
set jy[2]=0
set jy[3]=0
set jy[4]=0
set jy[5]=0
set jy[6]=0
set jy[7]=0
set jy[8]=0
set jy[9]=0
set jy[10]=0
set jy[11]=0
set jy[12]=0
set jy[13]=0
set jy[14]=0
set jy[15]=0
set jy[16]=0
set jy[17]=1
set jy[18]=0
set jy[19]=1
set jy[20]=0
set jy[21]=1
set jy[22]=0
set jy[23]=1
set jy[24]=0
set jy[25]=1
set jy[26]=0
set jy[27]=1
set jy[28]=0
set jy[29]=1
set jy[30]=0
set jy[31]=1
set jy[32]=0
set jy[33]=0
set jy[34]=2
set jy[35]=2
set jy[36]=0
set jy[37]=0
set jy[38]=2
set jy[39]=2
set jy[40]=0
set jy[41]=0
set jy[42]=2
set jy[43]=2
set jy[44]=0
set jy[45]=0
set jy[46]=2
set jy[47]=2
set jy[48]=0
set jy[49]=1
set jy[50]=2
set jy[51]=3
set jy[52]=0
set jy[53]=1
set jy[54]=2
set jy[55]=3
set jy[56]=0
set jy[57]=1
set jy[58]=2
set jy[59]=3
set jy[60]=0
set jy[61]=1
set jy[62]=2
set jy[63]=3
set jy[64]=0
set jy[65]=0
set jy[66]=0
set jy[67]=0
set jy[68]=4
set jy[69]=4
set jy[70]=4
set jy[71]=4
set jy[72]=0
set jy[73]=0
set jy[74]=0
set jy[75]=0
set jy[76]=4
set jy[77]=4
set jy[78]=4
set jy[79]=4
set jy[80]=0
set jy[81]=1
set jy[82]=0
set jy[83]=1
set jy[84]=4
set jy[85]=5
set jy[86]=4
set jy[87]=5
set jy[88]=0
set jy[89]=1
set jy[90]=0
set jy[91]=1
set jy[92]=4
set jy[93]=5
set jy[94]=4
set jy[95]=5
set jy[96]=0
set jy[97]=0
set jy[98]=2
set jy[99]=2
set jy[100]=4
set jy[101]=4
set jy[102]=6
set jy[103]=6
set jy[104]=0
set jy[105]=0
set jy[106]=2
set jy[107]=2
set jy[108]=4
set jy[109]=4
set jy[110]=6
set jy[111]=6
set jy[112]=0
set jy[113]=1
set jy[114]=2
set jy[115]=3
set jy[116]=4
set jy[117]=5
set jy[118]=6
set jy[119]=7
set jy[120]=0
set jy[121]=1
set jy[122]=2
set jy[123]=3
set jy[124]=4
set jy[125]=5
set jy[126]=6
set jy[127]=7
set jy[128]=0
set jy[129]=0
set jy[130]=0
set jy[131]=0
set jy[132]=0
set jy[133]=0
set jy[134]=0
set jy[135]=0
set jy[136]=8
set jy[137]=8
set jy[138]=8
set jy[139]=8
set jy[140]=8
set jy[141]=8
set jy[142]=8
set jy[143]=8
set jy[144]=0
set jy[145]=1
set jy[146]=0
set jy[147]=1
set jy[148]=0
set jy[149]=1
set jy[150]=0
set jy[151]=1
set jy[152]=8
set jy[153]=9
set jy[154]=8
set jy[155]=9
set jy[156]=8
set jy[157]=9
set jy[158]=8
set jy[159]=9
set jy[160]=0
set jy[161]=0
set jy[162]=2
set jy[163]=2
set jy[164]=0
set jy[165]=0
set jy[166]=2
set jy[167]=2
set jy[168]=8
set jy[169]=8
set jy[170]=10
set jy[171]=10
set jy[172]=8
set jy[173]=8
set jy[174]=10
set jy[175]=10
set jy[176]=0
set jy[177]=1
set jy[178]=2
set jy[179]=3
set jy[180]=0
set jy[181]=1
set jy[182]=2
set jy[183]=3
set jy[184]=8
set jy[185]=9
set jy[186]=10
set jy[187]=11
set jy[188]=8
set jy[189]=9
set jy[190]=10
set jy[191]=11
set jy[192]=0
set jy[193]=0
set jy[194]=0
set jy[195]=0
set jy[196]=4
set jy[197]=4
set jy[198]=4
set jy[199]=4
set jy[200]=8
set jy[201]=8
set jy[202]=8
set jy[203]=8
set jy[204]=12
set jy[205]=12
set jy[206]=12
set jy[207]=12
set jy[208]=0
set jy[209]=1
set jy[210]=0
set jy[211]=1
set jy[212]=4
set jy[213]=5
set jy[214]=4
set jy[215]=5
set jy[216]=8
set jy[217]=9
set jy[218]=8
set jy[219]=9
set jy[220]=12
set jy[221]=13
set jy[222]=12
set jy[223]=13
set jy[224]=0
set jy[225]=0
set jy[226]=2
set jy[227]=2
set jy[228]=4
set jy[229]=4
set jy[230]=6
set jy[231]=6
set jy[232]=8
set jy[233]=8
set jy[234]=10
set jy[235]=10
set jy[236]=12
set jy[237]=12
set jy[238]=14
set jy[239]=14
set jy[240]=0
set jy[241]=1
set jy[242]=2
set jy[243]=3
set jy[244]=4
set jy[245]=5
set jy[246]=6
set jy[247]=7
set jy[248]=8
set jy[249]=9
set jy[250]=10
set jy[251]=11
set jy[252]=12
set jy[253]=13
set jy[254]=14
set jy[255]=15
call initBitwise()
return true
endfunction
function R5w takes nothing returns boolean
if GetSpellAbilityId()==1093682756 or GetSpellAbilityId()==1093682755 or GetSpellAbilityId()==1093682742 or GetSpellAbilityId()==1093682507 or GetSpellAbilityId()==1093678671 or GetSpellAbilityId()==1093677899 or GetSpellAbilityId()==1093682253 or GetSpellAbilityId()==1093677900 or GetSpellAbilityId()==1093682247 or GetSpellAbilityId()==1093682517 or GetSpellAbilityId()==1093679444 or GetSpellAbilityId()==1093678642 or GetSpellAbilityId()==1093682260 then
return false
else
return true
endif
endfunction
function f5w takes nothing returns boolean
if GetSpellAbilityId()==1097166451 or GetSpellAbilityId()==1098343778 or GetSpellAbilityId()==1095657060 or GetSpellAbilityId()==1095656559 or GetSpellAbilityId()==1095660653 or GetSpellAbilityId()==1097690227 or GetSpellAbilityId()==1095263346 or GetSpellAbilityId()==1095656562 or GetSpellAbilityId()==1095656296 or GetSpellAbilityId()==1094935400 then
return false
else
return true
endif
endfunction
function Q5w takes nothing returns nothing
local unit k5w=GetSpellAbilityUnit()
local unit j5w=GetSpellTargetUnit()
local unit x5w
local effect v5w
local effect m5w
if GetSpellAbilityId()==1097757545 or GetSpellAbilityId()==1094939497 then
call ForGroup(GetUnitsInRangeOfLocMatching(200+75*(GetUnitAbilityLevel(k5w,1097757545)-1),GetSpellTargetLoc(),Condition(Plw)),Alw)
elseif(GetUnitAbilityLevel(j5w,1093678917)==3 and GetRandomInt(1,100)<=30)or(GetUnitAbilityLevel(j5w,1093678917)==2 and GetRandomInt(1,100)<=20)or(GetUnitAbilityLevel(j5w,1093678917)==1 and GetRandomInt(1,100)<=10)and f5w()and R5w()then
set x5w=CreateUnitAtLoc(GetOwningPlayer(j5w),1747995215,GetUnitLoc(j5w),270.00)
set v5w=AddSpecialEffectTarget("Abilities\\Spells\\Items\\SpellShieldAmulet\\SpellShieldCaster.mdl",j5w,"origin")
set m5w=AddSpecialEffectTarget("Abilities\\Spells\\Other\\Silence\\SilenceTarget.mdl",k5w,"overhead")
call UnitAddAbility(x5w,GetSpellAbilityId())
call SetUnitAbilityLevel(x5w,GetSpellAbilityId(),GetUnitAbilityLevel(k5w,GetSpellAbilityId()))
call IssueTargetOrderById(x5w,GetUnitCurrentOrder(k5w),k5w)
call TriggerSleepAction(3.00)
call RemoveUnit(x5w)
call DestroyEffect(v5w)
call DestroyEffect(m5w)
endif
set k5w=null
set j5w=null
set x5w=null
set v5w=null
set m5w=null
set k5w=null
set j5w=null
set x5w=null
set v5w=null
set m5w=null
endfunction
function Q7w takes nothing returns nothing
local unit F7w=GetSpellTargetUnit()
local unit k7w=GetSpellAbilityUnit()
local integer j7w=0
local effect x7w=null
local effect v7w=null
local group m7w=CreateGroup()
if GetSpellAbilityId()==1093684022 then
call UnitAddAbility(k7w,1093684025)
call UnitMakeAbilityPermanent(k7w,true,1093684025)
call UnitMakeAbilityPermanent(k7w,true,1093684024)
call UnitMakeAbilityPermanent(k7w,true,1093684033)
call UnitAddAbility(k7w,1093684023)
call UnitMakeAbilityPermanent(k7w,true,1093684023)
call GroupAddUnit(yt,k7w)
if IsUnitInGroup(F7w,pt)==true then
call GroupRemoveUnit(pt,F7w)
call iTw(1.00)
endif
call UnitAddAbility(F7w,1093684036)
call UnitMakeAbilityPermanent(F7w,true,1093684036)
call GroupAddUnit(pt,F7w)
set x7w=AddSpecialEffectTarget("Abilities\\Spells\\Other\\Incinerate\\IncinerateBuff.mdl",F7w,"chest")
set v7w=AddSpecialEffectTarget("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",F7w,"overhead")
loop
exitwhen IsUnitInGroup(k7w,yt)==false
set j7w=j7w+1
if j7w==30 or IsUnitInGroup(F7w,pt)==false then
call GroupRemoveUnit(yt,k7w)
call UnitRemoveAbility(k7w,1093684023)
call UnitRemoveAbility(k7w,1093684025)
endif
call iTw(0.125)
endloop
set j7w=0
if IsUnitInGroup(F7w,pt)==true then
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\FragmentationShards\\FragBoomSpawn.mdl",F7w,"origin"))
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl",F7w,"origin"))
call UnitDamagePoint(k7w,0.,200.,GetUnitX(F7w),GetUnitY(F7w),475.,true,true,ATTACK_TYPE_SIEGE,DAMAGE_TYPE_DEMOLITION,WEAPON_TYPE_WHOKNOWS)
call GroupEnumUnitsInRangeOfLoc(m7w,GetUnitLoc(F7w),200.,null)
call ForGroup(m7w,jbw)
call DestroyGroup(m7w)
set m7w=null
call GroupRemoveUnit(pt,F7w)
endif
call UnitRemoveAbility(F7w,1093684036)
call UnitRemoveAbility(F7w,1110455371)
call DestroyEffect(x7w)
call DestroyEffect(v7w)
set x7w=null
set v7w=null
else
call GroupRemoveUnit(yt,k7w)
call UnitRemoveAbility(k7w,1093684023)
call UnitRemoveAbility(k7w,1093684025)
endif
set F7w=null
set k7w=null
set F7w=null
set k7w=null
set x7w=null
set v7w=null
set m7w=null
endfunction
function Q8w takes nothing returns boolean
return IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(GetSpellAbilityUnit()))
endfunction
function mDw takes nothing returns boolean
if not(GetOwningPlayer(GetEnumUnit())==GetTriggerPlayer())then
return false
endif
return true
endfunction
function QDw takes nothing returns nothing
if mDw()then
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.,G,mtw)
call RemoveLocation(G)
endif
endfunction
function BWw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358066)then
return false
endif
return true
endfunction
function FEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358068)then
return false
endif
return true
endfunction
function GEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358066)then
return false
endif
return true
endfunction
function JWw takes nothing returns boolean
if not(vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]==6)then
return false
endif
return true
endfunction
function KWw takes nothing returns boolean
if not JWw()then
return false
endif
return true
endfunction
function CWw takes nothing returns boolean
if not(vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]==5)then
return false
endif
return true
endfunction
function MWw takes nothing returns boolean
if not CWw()then
return false
endif
return true
endfunction
function NWw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358065)then
return false
endif
return true
endfunction
function wEw takes nothing returns boolean
if not(vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]==4)then
return false
endif
return true
endfunction
function OEw takes nothing returns boolean
if not wEw()then
return false
endif
return true
endfunction
function SEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358067)then
return false
endif
return true
endfunction
function TEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358068)then
return false
endif
return true
endfunction
function VWw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358067)then
return false
endif
return true
endfunction
function LWw takes nothing returns boolean
if not(vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]==6)then
return false
endif
return true
endfunction
function XWw takes nothing returns boolean
if not LWw()then
return false
endif
return true
endfunction
function YEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358067)then
return false
endif
return true
endfunction
function aEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358067)then
return false
endif
return true
endfunction
function cEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358066)then
return false
endif
return true
endfunction
function dEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358065)then
return false
endif
return true
endfunction
function lEw takes nothing returns boolean
if not(vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]==3)then
return false
endif
return true
endfunction
function fEw takes nothing returns boolean
if not lEw()then
return false
endif
return true
endfunction
function gEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358065)then
return false
endif
return true
endfunction
function REw takes nothing returns boolean
if not(vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]==1)then
return false
endif
if not(Vw==true)then
return false
endif
return true
endfunction
function hEw takes nothing returns boolean
if not REw()then
return false
endif
return true
endfunction
function iEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358068)then
return false
endif
return true
endfunction
function jEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358066)then
return false
endif
return true
endfunction
function kEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358067)then
return false
endif
return true
endfunction
function mEw takes nothing returns boolean
if not(RectContainsLoc(It,GetSpellTargetLoc())==false)then
return false
endif
return true
endfunction
function nEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358066)then
return false
endif
return true
endfunction
function oEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358065)then
return false
endif
return true
endfunction
function qEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358068)then
return false
endif
return true
endfunction
function vEw takes nothing returns boolean
if not(vt[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))-1]==0)then
return false
endif
return true
endfunction
function xEw takes nothing returns boolean
if not(GetSpellAbilityId()==1414358065)then
return false
endif
return true
endfunction
function QEw takes nothing returns nothing
set G=GetSpellTargetLoc()
if mEw()then
if vEw()then
if xEw()then
call SetTerrainTypeBJ(G,Tw[GetConvertedPlayerId(GetTriggerPlayer())],-1,1,0)
elseif jEw()then
call SetTerrainTypeBJ(G,Tw[GetConvertedPlayerId(GetTriggerPlayer())],-1,2,0)
elseif kEw()then
call SetTerrainTypeBJ(G,Tw[GetConvertedPlayerId(GetTriggerPlayer())],-1,3,0)
elseif FEw()then
call SetTerrainTypeBJ(G,Tw[GetConvertedPlayerId(GetTriggerPlayer())],-1,4,0)
endif
elseif hEw()then
if gEw()then
call TerrainDeformationCraterBJ(0.10,true,G,92.00,-(1.00*Gw[GetConvertedPlayerId(GetTriggerPlayer())]))
elseif GEw()then
call TerrainDeformationCraterBJ(0.10,true,G,220.00,-(1.00*Gw[GetConvertedPlayerId(GetTriggerPlayer())]))
elseif YEw()then
call TerrainDeformationCraterBJ(0.10,true,G,380.00,-(1.00*Gw[GetConvertedPlayerId(GetTriggerPlayer())]))
elseif TEw()then
call TerrainDeformationCraterBJ(0.10,true,G,572.00,-(1.00*Gw[GetConvertedPlayerId(GetTriggerPlayer())]))
endif
elseif fEw()then
if dEw()then
call ForForce(GetPlayersAll(),arw)
elseif nEw()then
call ForForce(GetPlayersAll(),nrw)
elseif aEw()then
call ForForce(GetPlayersAll(),drw)
elseif qEw()then
call ForForce(GetPlayersAll(),frw)
endif
elseif OEw()then
if oEw()then
call ForForce(GetPlayersAll(),Rrw)
elseif cEw()then
call ForForce(GetPlayersAll(),Trw)
elseif SEw()then
call ForForce(GetPlayersAll(),Yrw)
elseif iEw()then
call ForForce(GetPlayersAll(),Grw)
endif
elseif MWw()then
if NWw()then
call SetBlightRadiusLocBJ(true,Player(bj_PLAYER_NEUTRAL_VICTIM),G,92.00)
call SetBlightRadiusLocBJ(false,Player(bj_PLAYER_NEUTRAL_VICTIM),G,92.00)
elseif BWw()then
call SetBlightRadiusLocBJ(true,Player(bj_PLAYER_NEUTRAL_VICTIM),G,220.00)
call SetBlightRadiusLocBJ(false,Player(bj_PLAYER_NEUTRAL_VICTIM),G,220.00)
elseif VWw()then
call SetBlightRadiusLocBJ(true,Player(bj_PLAYER_NEUTRAL_VICTIM),G,380.00)
call SetBlightRadiusLocBJ(false,Player(bj_PLAYER_NEUTRAL_VICTIM),G,380.00)
else
call SetBlightRadiusLocBJ(true,Player(bj_PLAYER_NEUTRAL_VICTIM),G,572.00)
call SetBlightRadiusLocBJ(false,Player(bj_PLAYER_NEUTRAL_VICTIM),G,572.00)
endif
elseif XWw()then
set Tw[GetConvertedPlayerId(GetTriggerPlayer())]=GetTerrainTypeBJ(G)
endif
elseif KWw()then
set Tw[GetConvertedPlayerId(GetTriggerPlayer())]=GetTerrainTypeBJ(G)
endif
call RemoveLocation(G)
endfunction
function QHw takes nothing returns boolean
return GetSpellAbilityId()==1093683254
endfunction
function QJw takes nothing returns boolean
return GetUnitTypeId(GetOrderedUnit())==1747988528 and GetIssuedOrderId()!=OrderId("smart")
endfunction
function FKw takes integer gKw,boolean hKw returns nothing
if hKw then
call SetPlayerTechResearched(r[gKw],Yl,1)
call SetPlayerTechResearched(r[gKw],Gl,0)
else
call SetPlayerTechResearched(r[gKw],Yl,0)
call SetPlayerTechResearched(r[gKw],Gl,1)
endif
endfunction
function ZTw takes integer WTw,integer ETw returns nothing
call SaveInteger(i,Kl[WTw],Ll[WTw],ETw)
set Ll[WTw]=Ll[WTw]+1
endfunction
function Wfw takes real mfw returns real
local real Qfw=I2R(R2I(mfw))
if Qfw==mfw or mfw<0. then
return Qfw
else
return Qfw+1.
endif
endfunction
function sGw takes integer BYw,real NYw,real MYw,real wGw,real uGw returns nothing
local lightning rGw=AddLightning(ab[BYw],false,NYw,MYw,wGw,uGw)
if s!=r[qb[BYw]]then
call SetLightningColor(rGw,0.,0.,0.,0.)
endif
call SaveLightningHandle(i,pb[BYw],eb[BYw],rGw)
set rGw=null
set eb[BYw]=eb[BYw]+1
set rGw=null
endfunction
function lGw takes integer tGw,real iGw,real SGw,real cGw returns nothing
local integer oGw=R2I(Wfw(RAbsBJ(cGw/yb)))
local real OGw=cGw/oGw
loop
exitwhen oGw==0
call sGw(tGw,iGw,SGw,iGw+OGw,SGw)
set iGw=iGw+OGw
set oGw=oGw-1
endloop
endfunction
function nGw takes integer bGw,real yGw,real pGw,real eGw returns nothing
local integer qGw=R2I(Wfw(RAbsBJ(eGw/yb)))
local real aGw=eGw/qGw
loop
exitwhen qGw==0
call sGw(bGw,yGw,pGw,yGw,pGw+aGw)
set pGw=pGw+aGw
set qGw=qGw-1
endloop
endfunction
function TGw takes integer RGw returns nothing
call lGw(RGw,Rb[RGw],Tb[RGw],Yb[RGw]-Rb[RGw])
call lGw(RGw,Yb[RGw],Gb[RGw],Rb[RGw]-Yb[RGw])
call nGw(RGw,Rb[RGw],Gb[RGw],Tb[RGw]-Gb[RGw])
call nGw(RGw,Yb[RGw],Tb[RGw],Gb[RGw]-Tb[RGw])
endfunction
function fGw takes integer dGw returns nothing
loop
exitwhen eb[dGw]==0
set eb[dGw]=eb[dGw]-1
call DestroyLightning(LoadLightningHandle(i,pb[dGw],eb[dGw]))
endloop
call FlushChildHashtable(i,pb[dGw])
endfunction
function GGw takes integer YGw returns nothing
call fGw(YGw)
call SetRect(fb[YGw],Rb[YGw],Tb[YGw],Yb[YGw],Gb[YGw])
call TGw(YGw)
endfunction
function jGw takes integer FGw,string kGw returns nothing
set ab[FGw]=kGw
call GGw(FGw)
endfunction
function QKw takes nothing returns nothing
local integer vKw=GetPlayerId(GetTriggerPlayer())
local unit mKw=GetOrderedUnit()
if GetUnitTypeId(mKw)==1747988528 and OrderId2String(GetIssuedOrderId())=="replenishlifeon" then
call PauseUnit(mKw,true)
call IssueImmediateOrder(mKw,"stop")
call PauseUnit(mKw,false)
call jGw(Fl[vKw],"DRAM")
call ZTw(hl[vKw],Fl[vKw])
set Fl[vKw]=0
set xl[vKw]=false
call FKw(vKw,false)
endif
set mKw=null
set mKw=null
endfunction
function mLw takes nothing returns boolean
if not(gs[1]==0)then
return false
endif
return true
endfunction
function QLw takes nothing returns nothing
if mLw()then
call EnableTrigger(XS)
endif
set gs[1]=gs[1]+1
set gs[2]=gs[2]+1
set xs[1]=GetUnitLoc(As)
set Rs[gs[2]]=DistanceBetweenPoints(xs[1],Ps)
set Fs[gs[2]]=0.00
set js[gs[2]]=Is
set ms[gs[2]]=As
set ds[gs[2]]=AngleBetweenPoints(xs[1],Ps)
set Ts[gs[2]]=Us
set fs[gs[2]]=Qs
set vs[gs[2]]=Es
set Gs[gs[2]]=Zs*Rs[gs[2]]
set Hs[gs[2]]=Ds
set Ks[gs[2]]=Js
call SetUnitPathing(As,false)
call SetUnitTimeScalePercent(As,Ws*100.00)
call SetUnitAnimation(As,Qs)
call GroupAddUnitSimple(As,Ys)
call UnitAddAbilityBJ(1098015094,xr)
call UnitRemoveAbilityBJ(1098015094,xr)
call RemoveLocation(xs[1])
call RemoveLocation(Ps)
endfunction
function QMw takes nothing returns nothing
call SetUnitExploded(GetSpellTargetUnit(),true)
call KillUnit(GetSpellTargetUnit())
endfunction
function QNw takes nothing returns nothing
local integer hNw=GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682996)
local unit FNw=GetSpellAbilityUnit()
local location kNw=GetUnitLoc(GetSpellAbilityUnit())
local real jNw=GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_LIFE)
local real xNw=GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_MANA)
local effect vNw=AddSpecialEffectTarget("Abilities\\Spells\\Human\\ManaFlare\\ManaFlareTarget.mdl",GetSpellAbilityUnit(),"overhead")
local integer mNw=0
call GroupAddUnit(ws,FNw)
call GroupAddUnit(us,FNw)
call UnitAddAbility(FNw,1093682997)
call UnitMakeAbilityPermanent(FNw,true,1093682997)
call SetUnitAbilityLevel(FNw,1093682997,hNw)
call UnitAddAbility(FNw,1093683795)
call UnitMakeAbilityPermanent(FNw,true,1093683795)
call SetUnitAbilityLevel(FNw,1093683795,hNw)
call UnitAddAbility(FNw,1093683000)
call UnitMakeAbilityPermanent(FNw,true,1093683000)
loop
exitwhen IsUnitInGroup(FNw,ws)==false
call iTw(1.)
set mNw=mNw+1
if mNw==10 then
call GroupRemoveUnit(ws,FNw)
endif
endloop
call DestroyEffect(vNw)
if IsUnitInGroup(FNw,us)==true and GetUnitState(FNw,UNIT_STATE_LIFE)>0. then
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl",GetUnitLoc(FNw)))
call SetUnitPositionLoc(FNw,kNw)
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl",GetUnitLoc(FNw)))
call SetUnitState(FNw,UNIT_STATE_LIFE,jNw)
call SetUnitState(FNw,UNIT_STATE_MANA,xNw-(125-25*hNw))
endif
call UnitRemoveAbility(FNw,1093683000)
call UnitRemoveAbility(FNw,1093683795)
call UnitRemoveAbility(FNw,1093682997)
call UnitRemoveAbility(FNw,1110455109)
call GroupRemoveUnit(us,FNw)
call GroupRemoveUnit(ws,FNw)
call RemoveLocation(kNw)
set FNw=null
set kNw=null
set jNw=0.
set xNw=0.
set vNw=null
set hNw=0
set mNw=0
set FNw=null
set kNw=null
set vNw=null
endfunction
function Qsc takes string vsc returns integer
local integer msc
set w3[MM]=vsc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set msc=kj
set jj[msc]=1074
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdWeatherEffectFunctions.","when calling error in ScmdWeatherEffectFunctions, line 6")
set msc=0
endif
else
set Fj=Fj-1
set msc=hj[Fj]
set jj[msc]=1074
endif
set MM=MM-1
return msc
endfunction
function Qbr takes string xbr returns boolean
local integer vbr
local integer mbr
set w3[MM]=xbr
set MM=MM+1
set vbr=Qsc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdWeatherEffectFunctions in ScmdWeatherEffectFunctions, line 6")
set mbr=eDt(vbr,"when calling new_BuiltinData in ScmdWeatherEffectFunctions, line 6")
call dao(mbr,S2u(),m4u(),"when calling setArgumentsTypes in ScmdWeatherEffectFunctions, line 8")
call jBu(WHt(mbr,"when calling new_BuiltinFunction in ScmdWeatherEffectFunctions, line 6"),"addweathereffect","when calling registerProtectedBuiltin in ScmdWeatherEffectFunctions, line 6")
set MM=MM-1
return true
endfunction
function QRo takes nothing returns boolean
set MM=0
return Qbr("ScmdWeatherEffectFunctions, line 1")
endfunction
function DOr takes string POr returns boolean
local boolean AOr
set w3[MM]=POr
set MM=MM+1
set AOr=not d7u(S7s(GetFilterUnit()),"when calling isUnitTypeProtected in ScmdUnitBuiltins, line 229")
set MM=MM-1
return AOr
endfunction
function QTo takes nothing returns boolean
set MM=0
return DOr("ScmdUnitBuiltins, line 229")
endfunction
function mVw takes nothing returns boolean
if not(GetEventPlayerChatString()=="'heroaltertime")then
return false
endif
return true
endfunction
function vVw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@heroaltertime")then
return false
endif
return true
endfunction
function QVw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(jcw))
if mVw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],xcw)
elseif vVw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],vcw)
else
call DoNothing()
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function QYw takes nothing returns nothing
call TriggerRegisterUnitEvent(R,GetFilterUnit(),EVENT_UNIT_DAMAGED)
endfunction
function QZw takes nothing returns nothing
local player vZw=GetEnumPlayer()
local player mZw=null
if GetPlayerController(vZw)==MAP_CONTROL_USER and GetPlayerSlotState(vZw)==PLAYER_SLOT_STATE_PLAYING then
call GetPlayerId(vZw)
call CreateUnitAtLoc(vZw,1747988528,GetStartLocationLoc(GetPlayerStartLocation(vZw)),bj_UNIT_FACING)
endif
call SetPlayerTechResearched(vZw,1383035760,1)
call SetPlayerTechResearched(vZw,1383035490,1)
call SetPlayerTechResearched(vZw,1380934707,1)
call SetPlayerAbilityAvailable(vZw,1093682518,false)
call SetPlayerAbilityAvailable(vZw,1093682754,false)
call SetPlayerAbilityAvailable(vZw,1093682758,false)
call SetPlayerAbilityAvailable(vZw,1093682999,false)
call SetPlayerAbilityAvailable(vZw,1093683000,false)
call SetPlayerAbilityAvailable(vZw,1093683017,false)
call SetPlayerAbilityAvailable(vZw,1093683023,false)
call SetPlayerAbilityAvailable(vZw,1093683286,false)
call SetPlayerAbilityAvailable(vZw,1093683504,false)
call SetPlayerAbilityAvailable(vZw,1093683760,false)
call SetPlayerAbilityAvailable(vZw,1093684033,false)
call SetPlayerAbilityAvailable(vZw,1093684025,false)
call SetPlayerAbilityAvailable(vZw,1093677908,false)
call SetPlayerAbilityAvailable(vZw,1097024049,false)
call SetPlayerAbilityAvailable(vZw,1097024050,false)
call SetPlayerAbilityAvailable(vZw,1097024051,false)
call SetPlayerAbilityAvailable(vZw,1097024052,false)
call SetPlayerAbilityAvailable(vZw,1097024053,false)
call SetPlayerAbilityAvailable(vZw,1097024054,false)
call SetPlayerAbilityAvailable(vZw,1097024055,false)
call SetPlayerAbilityAvailable(vZw,1097024056,false)
call SetPlayerAbilityAvailable(vZw,1097028691,false)
call SetPlayerTechMaxAllowed(vZw,1212502607,-1)
call SetPlayerState(vZw,PLAYER_STATE_RESOURCE_GOLD,1000000000)
call SetPlayerState(vZw,PLAYER_STATE_RESOURCE_LUMBER,1000000000)
call SetPlayerState(vZw,PLAYER_STATE_RESOURCE_FOOD_CAP,300)
call SetPlayerState(vZw,PLAYER_STATE_FOOD_CAP_CEILING,300)
set mZw=Player(0)
if vZw!=mZw then
call SetPlayerAlliance(vZw,mZw,ALLIANCE_PASSIVE,true)
call SetPlayerAlliance(vZw,mZw,ALLIANCE_HELP_REQUEST,true)
call SetPlayerAlliance(vZw,mZw,ALLIANCE_HELP_RESPONSE,true)
call SetPlayerAlliance(vZw,mZw,ALLIANCE_SHARED_XP,true)
call SetPlayerAlliance(vZw,mZw,ALLIANCE_SHARED_SPELLS,true)
call SetPlayerAlliance(vZw,mZw,ALLIANCE_SHARED_VISION,false)
call SetPlayerAlliance(vZw,mZw,ALLIANCE_SHARED_CONTROL,false)
call SetPlayerAlliance(vZw,mZw,ALLIANCE_SHARED_ADVANCED_CONTROL,false)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_PASSIVE,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_HELP_REQUEST,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_HELP_RESPONSE,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_XP,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_SPELLS,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_VISION,false)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_CONTROL,false)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_ADVANCED_CONTROL,false)
endif
set mZw=Player(bj_PLAYER_NEUTRAL_VICTIM)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_PASSIVE,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_HELP_REQUEST,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_HELP_RESPONSE,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_XP,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_SPELLS,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_VISION,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_CONTROL,true)
call SetPlayerAlliance(mZw,vZw,ALLIANCE_SHARED_ADVANCED_CONTROL,true)
call SetPlayerName(mZw,"_________ ____")
set mZw=null
set ss[GetPlayerId(vZw)]=CreateUnitAtLoc(vZw,1747996983,GetRectCenter(GetPlayableMapRect()),270.00)
call GetPlayerId(vZw)
call CreateUnitAtLoc(vZw,1952666169,GetRectCenter(GetPlayableMapRect()),270.00)
call StoreString(xt,I2S(GetPlayerId(vZw)),"a!","______")
call StoreString(xt,I2S(GetPlayerId(vZw)),"a%","______")
set vZw=null
set vZw=null
set mZw=null
endfunction
function Ykw takes unit dkw,unit fkw returns nothing
local real Rkw=GetWidgetLife(fkw)/BlzGetUnitMaxHP(fkw)
local timer Tkw
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodPriest.mdl",fkw,"chest"))
call UnitDamageTarget(dkw,fkw,350.,true,true,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
if Rkw<=0.35 then
set Tkw=ITw()
call SaveUnitHandle(i,y,GetHandleId(Tkw),dkw)
call TimerStart(Tkw,1.5,false,Yww_2225)
set Tkw=null
endif
set Tkw=null
endfunction
function bfw takes integer lfw returns nothing
if lfw==0 then
return
elseif jb[lfw]!=-1 then
return
endif
set sy=lfw
call TriggerEvaluate(vb[xb[lfw]])
set jb[lfw]=Fb
set Fb=lfw
endfunction
function Q_u takes nothing returns boolean
local integer m_u=sy
call Ykw(Db[m_u],Hb[m_u])
call bfw(m_u)
return true
endfunction
function mmw takes nothing returns boolean
if GetEventPlayerChatString()=="set 1" then
return true
endif
if GetEventPlayerChatString()=="set 2" then
return true
endif
if GetEventPlayerChatString()=="set 3" then
return true
endif
return false
endfunction
function Qmw takes nothing returns boolean
if not mmw()then
return false
endif
return true
endfunction
function Qou takes nothing returns boolean
set dp=200
return true
endfunction
function Qpu takes nothing returns boolean
call PreloadGenClear()
return true
endfunction
function R7w takes nothing returns nothing
local group f7w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(f7w,GetSpellTargetLoc(),800.,Condition(gbw))
call ForGroup(f7w,hbw)
call DestroyGroup(f7w)
set f7w=null
set f7w=null
endfunction
function VRw takes unit CRw returns nothing
if GetUnitAbilityLevel(CRw,1096894786)==0 then
call UnitRemoveAbility(CRw,1094797618)
endif
set CRw=null
endfunction
function R8w takes nothing returns nothing
local unit f8w=GetSpellAbilityUnit()
if GetSpellAbilityId()==1098086193 then
call UnitRemoveAbility(f8w,1098086193)
call UnitAddAbility(f8w,1098086194)
call UnitMakeAbilityPermanent(f8w,true,1098086194)
call AddUnitAnimationProperties(f8w,"alternate",true)
call KRw(f8w)
call XRw(f8w)
else
call UnitRemoveAbility(f8w,1098086194)
call UnitAddAbility(f8w,1098086193)
call UnitMakeAbilityPermanent(f8w,true,1098086193)
call AddUnitAnimationProperties(f8w,"alternate",false)
call VRw(f8w)
call PRw(f8w)
endif
set f8w=null
set f8w=null
endfunction
function RIw takes nothing returns nothing
call WRw(GetEnumUnit(),1096971630,1)
endfunction
function RJw takes nothing returns boolean
return GetSpellAbilityId()==1093677113
endfunction
function RMw takes nothing returns nothing
local integer fMw=0
loop
exitwhen fMw>Cs
call UnitRemoveAbility(GetEnumUnit(),Vs[fMw])
set fMw=fMw+1
endloop
set fMw=0
endfunction
function RPw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())
endfunction
function FPS takes string gPS returns integer
local integer hPS
set w3[MM]=gPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hPS=kj
set jj[hPS]=991
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 31")
set hPS=0
endif
else
set Fj=Fj-1
set hPS=hj[Fj]
set jj[hPS]=991
endif
set MM=MM-1
return hPS
endfunction
function GPS takes string TPS returns integer
local integer YPS
set w3[MM]=TPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set YPS=kj
set jj[YPS]=990
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 26")
set YPS=0
endif
else
set Fj=Fj-1
set YPS=hj[Fj]
set jj[YPS]=990
endif
set MM=MM-1
return YPS
endfunction
function HPS takes string APS returns integer
local integer DPS
set w3[MM]=APS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set DPS=kj
set jj[DPS]=996
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 51")
set DPS=0
endif
else
set Fj=Fj-1
set DPS=hj[Fj]
set jj[DPS]=996
endif
set MM=MM-1
return DPS
endfunction
function LPS takes string JPS returns integer
local integer KPS
set w3[MM]=JPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set KPS=kj
set jj[KPS]=997
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 55")
set KPS=0
endif
else
set Fj=Fj-1
set KPS=hj[Fj]
set jj[KPS]=997
endif
set MM=MM-1
return KPS
endfunction
function PPS takes string UPS returns integer
local integer IPS
set w3[MM]=UPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set IPS=kj
set jj[IPS]=995
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 47")
set IPS=0
endif
else
set Fj=Fj-1
set IPS=hj[Fj]
set jj[IPS]=995
endif
set MM=MM-1
return IPS
endfunction
function QPS takes string vPS returns integer
local integer mPS
set w3[MM]=vPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mPS=kj
set jj[mPS]=993
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 39")
set mPS=0
endif
else
set Fj=Fj-1
set mPS=hj[Fj]
set jj[mPS]=993
endif
set MM=MM-1
return mPS
endfunction
function RPS takes string dPS returns integer
local integer fPS
set w3[MM]=dPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fPS=kj
set jj[fPS]=989
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 22")
set fPS=0
endif
else
set Fj=Fj-1
set fPS=hj[Fj]
set jj[fPS]=989
endif
set MM=MM-1
return fPS
endfunction
function ZPS takes string WPS returns integer
local integer EPS
set w3[MM]=WPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set EPS=kj
set jj[EPS]=994
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 43")
set EPS=0
endif
else
set Fj=Fj-1
set EPS=hj[Fj]
set jj[EPS]=994
endif
set MM=MM-1
return EPS
endfunction
function bPS takes string OPS returns integer
local integer lPS
set w3[MM]=OPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lPS=kj
set jj[lPS]=854
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 11")
set lPS=0
endif
else
set Fj=Fj-1
set lPS=hj[Fj]
set jj[lPS]=854
endif
set MM=MM-1
return lPS
endfunction
function c2u takes nothing returns integer
return Od
endfunction
function ePS takes string yPS returns integer
local integer pPS
set w3[MM]=yPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set pPS=kj
set jj[pPS]=987
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 14")
set pPS=0
endif
else
set Fj=Fj-1
set pPS=hj[Fj]
set jj[pPS]=987
endif
set MM=MM-1
return pPS
endfunction
function h5u takes nothing returns integer
return gd
endfunction
function iPS takes string sPS returns integer
local integer tPS
set w3[MM]=sPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tPS=kj
set jj[tPS]=986
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 6")
set tPS=0
endif
else
set Fj=Fj-1
set tPS=hj[Fj]
set jj[tPS]=986
endif
set MM=MM-1
return tPS
endfunction
function XAt takes integer KAt,boolean LAt returns nothing
set NJ[KAt]=LAt
endfunction
function g4o takes integer T4o,boolean Y4o,string G4o returns nothing
set w3[MM]=G4o
set MM=MM+1
if Tx[T4o]==0 then
if T4o==0 then
call Mau("Nullpointer exception when calling BuiltinData.setRequiringEnumUnit","when calling error in ScmdDataTypes, line 1402")
else
call Mau("Called BuiltinData.setRequiringEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1402")
endif
endif
call XAt(T4o,Y4o)
set MM=MM-1
endfunction
function BAt takes integer CAt,string VAt returns nothing
set w3[MM]=VAt
set MM=MM+1
call g4o(CAt,true,"when calling setRequiringEnumUnit in ScmdDataTypes, line 1406")
set MM=MM-1
endfunction
function k4o takes integer h4o,string F4o returns nothing
set w3[MM]=F4o
set MM=MM+1
if Tx[h4o]==0 then
if h4o==0 then
call Mau("Nullpointer exception when calling BuiltinData.setRequiringEnumUnit","when calling error in ScmdDataTypes, line 1405")
else
call Mau("Called BuiltinData.setRequiringEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1405")
endif
endif
call BAt(h4o,"when calling setRequiringEnumUnit in ScmdDataTypes, line 1405")
set MM=MM-1
endfunction
function nPS takes string qPS returns integer
local integer aPS
set w3[MM]=qPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set aPS=kj
set jj[aPS]=988
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 18")
set aPS=0
endif
else
set Fj=Fj-1
set aPS=hj[Fj]
set jj[aPS]=988
endif
set MM=MM-1
return aPS
endfunction
function oPS takes string SPS returns integer
local integer cPS
set w3[MM]=SPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cPS=kj
set jj[cPS]=1097
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 9")
set cPS=0
endif
else
set Fj=Fj-1
set cPS=hj[Fj]
set jj[cPS]=1097
endif
set MM=MM-1
return cPS
endfunction
function Cao takes integer Aao,integer Dao,integer Hao,integer Jao,integer Kao,integer Lao,string Xao returns nothing
set w3[MM]=Xao
set MM=MM+1
set VJ[Aao]=0
call Cqo(CJ[Aao],Dao,"when calling add in ScmdDataTypes, line 1394")
set VJ[Aao]=VJ[Aao]+1
call Cqo(CJ[Aao],Hao,"when calling add in ScmdDataTypes, line 1394")
set VJ[Aao]=VJ[Aao]+1
call Cqo(CJ[Aao],Jao,"when calling add in ScmdDataTypes, line 1394")
set VJ[Aao]=VJ[Aao]+1
call Cqo(CJ[Aao],Kao,"when calling add in ScmdDataTypes, line 1394")
set VJ[Aao]=VJ[Aao]+1
call Cqo(CJ[Aao],Lao,"when calling add in ScmdDataTypes, line 1394")
set VJ[Aao]=VJ[Aao]+1
set MM=MM-1
endfunction
function sno takes integer Vao,integer Bao,integer Nao,integer Mao,integer wno,integer uno,string rno returns nothing
set w3[MM]=rno
set MM=MM+1
if Tx[Vao]==0 then
if Vao==0 then
call Mau("Nullpointer exception when calling BuiltinData.setArgumentsTypes","when calling error in ScmdDataTypes, line 1391")
else
call Mau("Called BuiltinData.setArgumentsTypes on invalid object.","when calling error in ScmdDataTypes, line 1391")
endif
endif
call Cao(Vao,Bao,Nao,Mao,wno,uno,"when calling setArgumentsTypes in ScmdDataTypes, line 1391")
set MM=MM-1
endfunction
function xPS takes string kPS returns integer
local integer jPS
set w3[MM]=kPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jPS=kj
set jj[jPS]=992
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 35")
set jPS=0
endif
else
set Fj=Fj-1
set jPS=hj[Fj]
set jj[jPS]=992
endif
set MM=MM-1
return jPS
endfunction
function pDu takes string QAu returns boolean
local integer WAu
local integer EAu
local integer ZAu
local integer UAu
local integer IAu
local integer PAu
local integer AAu
local integer DAu
local integer HAu
local integer JAu
local integer KAu
local integer LAu
local integer XAu
local integer CAu
local integer VAu
local integer BAu
local integer NAu
local integer MAu
local integer wDu
local integer uDu
local integer rDu
local integer sDu
local integer tDu
local integer iDu
local integer SDu
local integer cDu
local integer oDu
local integer ODu
local integer lDu
local integer bDu
local integer yDu
set w3[MM]=QAu
set MM=MM+1
set WAu=iPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 6")
set EAu=eDt(WAu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 6")
call Pao(EAu,o2u(),w2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 8")
call jBu(WHt(EAu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 6"),"addspecialeffect","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 6")
set ZAu=oPS("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 9")
set UAu=eDt(ZAu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 9")
call dao(UAu,o2u(),o2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 11")
set IAu=UAu
call k4o(IAu,"when calling setRequiringEnumUnit in SLangSpecialEffectFunctions, line 11")
set DAu=WHt(IAu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 9")
set yDu=DAu
set PAu=bPS("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 11")
set AAu=eDt(PAu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 11")
call Pao(AAu,h5u(),o2u(),o2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 13")
call C4o(yDu,AAu,"when calling addOverload in SLangSpecialEffectFunctions, line 11")
call jBu(DAu,"addspecialeffecttarget","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 9")
set HAu=ePS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 14")
set JAu=eDt(HAu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 14")
call sno(JAu,c2u(),m4u(),m4u(),m4u(),m4u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 17")
call jBu(WHt(JAu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 14"),"setspecialeffectvertexcolor","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 14")
set KAu=nPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 18")
set LAu=eDt(KAu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 18")
call dao(LAu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 21")
call jBu(WHt(LAu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 18"),"setspecialeffectx","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 18")
set XAu=RPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 22")
set CAu=eDt(XAu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 22")
call dao(CAu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 25")
call jBu(WHt(CAu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 22"),"setspecialeffecty","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 22")
set VAu=GPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 26")
set BAu=eDt(VAu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 26")
call dao(BAu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 30")
call jBu(WHt(BAu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 26"),"setspecialeffectz","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 26")
set NAu=FPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 31")
set MAu=eDt(NAu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 31")
call dao(MAu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 34")
call jBu(WHt(MAu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 31"),"setspecialeffectscale","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 31")
set wDu=xPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 35")
set uDu=eDt(wDu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 35")
call dao(uDu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 38")
call jBu(WHt(uDu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 35"),"setspecialeffectheight","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 35")
set rDu=QPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 39")
set sDu=eDt(rDu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 39")
call dao(sDu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 42")
call jBu(WHt(sDu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 39"),"setspecialeffecttimescale","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 39")
set tDu=ZPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 43")
set iDu=eDt(tDu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 43")
call dao(iDu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 46")
call jBu(WHt(iDu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 43"),"setspecialeffecttime","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 43")
set SDu=PPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 47")
set cDu=eDt(SDu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 47")
call dao(cDu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 50")
call jBu(WHt(cDu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 47"),"setspecialeffectyaw","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 47")
set oDu=HPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 51")
set ODu=eDt(oDu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 51")
call dao(ODu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 54")
call jBu(WHt(ODu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 51"),"setspecialeffectpitch","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 51")
set lDu=LPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in SLangSpecialEffectFunctions, line 55")
set bDu=eDt(lDu,"when calling new_BuiltinData in SLangSpecialEffectFunctions, line 55")
call dao(bDu,c2u(),w2u(),"when calling setArgumentsTypes in SLangSpecialEffectFunctions, line 58")
call jBu(WHt(bDu,"when calling new_BuiltinFunction in SLangSpecialEffectFunctions, line 55"),"setspecialeffectroll","when calling registerProtectedBuiltin in SLangSpecialEffectFunctions, line 55")
set MM=MM-1
return true
endfunction
function RRo takes nothing returns boolean
set MM=0
return pDu("SLangSpecialEffectFunctions, line 1")
endfunction
function s5S takes integer u5S,integer r5S returns nothing
call RemoveSavedHandle(CR,u5S,r5S)
endfunction
function jto takes integer hto,integer Fto,string kto returns nothing
set w3[MM]=kto
set MM=MM+1
if Wv[hto]==0 then
if hto==0 then
call Mau("Nullpointer exception when calling Table.removeHandle","when calling error in TableJurst, line 47")
else
call Mau("Called Table.removeHandle on invalid object.","when calling error in TableJurst, line 47")
endif
endif
call s5S(hto,Fto)
set MM=MM-1
endfunction
function LGS takes integer JGS,string KGS returns nothing
set w3[MM]=KGS
set MM=MM+1
if RG[JGS]==0 then
call Mau("Double free: object of type Buff","when calling error in BuffsJurst, line 3")
else
set nG[dG]=JGS
set dG=dG+1
set RG[JGS]=0
endif
set MM=MM-1
endfunction
function mqs takes integer vqs returns nothing
endfunction
function hqs takes integer Gqs,string gqs returns nothing
set w3[MM]=gqs
set MM=MM+1
call mqs(Gqs)
call LGS(Gqs,"when calling dealloc_Buff in BuffsJurst, line 3")
set MM=MM-1
endfunction
function eTc takes integer yTc,string pTc returns nothing
set w3[MM]=pTc
set MM=MM+1
if RG[yTc]==0 then
if yTc==0 then
call Mau("Nullpointer exception when calling Buff.Buff","when calling error in BuffsJurst, line 3")
else
call Mau("Called Buff.Buff on invalid object.","when calling error in BuffsJurst, line 3")
endif
endif
call hqs(yTc,"when calling destroyBuff in BuffsJurst, line 3")
set MM=MM-1
endfunction
function Yqs takes integer Rqs,string Tqs returns nothing
set w3[MM]=Tqs
set MM=MM+1
call eTc(Rqs,"when calling dispatch_Buff_destroyBuff in BuffsJurst, line 16")
set MM=MM-1
endfunction
function nTc takes integer qTc,string aTc returns nothing
set w3[MM]=aTc
set MM=MM+1
if RG[qTc]==0 then
if qTc==0 then
call Mau("Nullpointer exception when calling Buff.destroy","when calling error in BuffsJurst, line 15")
else
call Mau("Called Buff.destroy on invalid object.","when calling error in BuffsJurst, line 15")
endif
endif
call Yqs(qTc,"when calling destroy in BuffsJurst, line 15")
set MM=MM-1
endfunction
function n5S takes integer e5S,integer q5S,real a5S returns nothing
call SaveReal(CR,e5S,q5S,a5S)
endfunction
function Bto takes integer Lto,integer Xto,real Cto,string Vto returns nothing
set w3[MM]=Vto
set MM=MM+1
if Wv[Lto]==0 then
if Lto==0 then
call Mau("Nullpointer exception when calling Table.saveReal","when calling error in TableJurst, line 63")
else
call Mau("Called Table.saveReal on invalid object.","when calling error in TableJurst, line 63")
endif
endif
call n5S(Lto,Xto,Cto)
set MM=MM-1
endfunction
function p5S takes integer b5S,integer y5S returns real
return LoadReal(CR,b5S,y5S)
endfunction
function Kto takes integer Ato,integer Dto,string Hto returns real
local real Jto
set w3[MM]=Hto
set MM=MM+1
if Wv[Ato]==0 then
if Ato==0 then
call Mau("Nullpointer exception when calling Table.loadReal","when calling error in TableJurst, line 59")
else
call Mau("Called Table.loadReal on invalid object.","when calling error in TableJurst, line 59")
endif
endif
set Jto=p5S(Ato,Dto)
set MM=MM-1
return Jto
endfunction
function R5S takes integer d5S,integer f5S returns unit
return LoadUnitHandle(CR,d5S,f5S)
endfunction
function rio takes integer Nto,integer Mto,string wio returns unit
local unit uio
set w3[MM]=wio
set MM=MM+1
if Wv[Nto]==0 then
if Nto==0 then
call Mau("Nullpointer exception when calling Table.loadUnit","when calling error in TableJurst, line 99")
else
call Mau("Called Table.loadUnit on invalid object.","when calling error in TableJurst, line 99")
endif
endif
set uio=R5S(Nto,Mto)
set MM=MM-1
set jdw=uio
set uio=null
return jdw
endfunction
function Hjr takes unit Ijr,string Pjr returns nothing
local integer Ajr
local real Djr
set w3[MM]=Pjr
set MM=MM+1
set Ajr=GetHandleId(Ijr)
set Djr=Kto(fT,Ajr,"when calling loadReal in TouchOfKarma, line 75")
call UnitDamageTarget(rio(dT,Ajr,"when calling loadUnit in TouchOfKarma, line 76"),Ijr,Djr/6.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call Bto(fT,Ajr,Djr-Djr/6.,"when calling saveReal in TouchOfKarma, line 77")
set MM=MM-1
endfunction
function N0S takes integer C0S,unit V0S,string B0S returns nothing
set w3[MM]=B0S
set MM=MM+1
call Hjr(V0S,"when calling OnDotDamage in TouchOfKarma, line 88")
set MM=MM-1
endfunction
function l5S takes integer c5S,integer o5S,integer O5S returns nothing
call SaveInteger(CR,c5S,o5S,O5S)
endfunction
function Pto takes integer Eto,integer Zto,integer Uto,string Ito returns nothing
set w3[MM]=Ito
set MM=MM+1
if Wv[Eto]==0 then
if Eto==0 then
call Mau("Nullpointer exception when calling Table.saveInteger","when calling error in TableJurst, line 55")
else
call Mau("Called Table.saveInteger on invalid object.","when calling error in TableJurst, line 55")
endif
endif
call l5S(Eto,Zto,Uto)
set MM=MM-1
endfunction
function mjr takes unit jjr,string xjr returns nothing
local integer vjr
set w3[MM]=xjr
set MM=MM+1
set vjr=GetHandleId(jjr)
call Bto(qT,vjr,75.+GetUnitAbilityLevel(jjr,oT)*250,"when calling saveReal in TouchOfKarma, line 53")
call Pto(aT,vjr,GetUnitAbilityLevel(jjr,oT),"when calling saveInteger in TouchOfKarma, line 54")
if not IsUnitInGroup(jjr,TT)then
call GroupAddUnit(TT,jjr)
call TriggerRegisterUnitEvent(RT,jjr,EVENT_UNIT_DAMAGED)
endif
set MM=MM-1
endfunction
function P0S takes integer Z0S,unit U0S,string I0S returns nothing
set w3[MM]=I0S
set MM=MM+1
call mjr(U0S,"when calling OnBuffApplication in TouchOfKarma, line 82")
set MM=MM-1
endfunction
function Pbr takes unit Ibr returns nothing
if not IsUnitInGroup(Ibr,Jd)then
call GroupAddUnit(Jd,Ibr)
call TriggerRegisterUnitEvent(Hd,Ibr,EVENT_UNIT_DAMAGED)
endif
endfunction
function cWi takes integer iWi,unit SWi returns nothing
call Pbr(SWi)
endfunction
function xau takes unit jau returns nothing
call UnitAddAbility(jau,Bp)
call UnitMakeAbilityPermanent(jau,true,Bp)
endfunction
function evs takes integer yvs,unit pvs returns nothing
call xau(pvs)
endfunction
function mau takes unit vau returns nothing
call UnitRemoveAbility(vau,Bp)
endfunction
function gvs takes integer Yvs,unit Gvs returns nothing
call mau(Gvs)
endfunction
function rYc takes integer MTc,unit wYc,string uYc returns nothing
set w3[MM]=uYc
set MM=MM+1
if jG[MTc]==0 then
if MTc==0 then
call Mau("Nullpointer exception when calling UnitHandler.evaluate","when calling error in BuffsJurst, line 24")
else
call Mau("Called UnitHandler.evaluate on invalid object.","when calling error in BuffsJurst, line 24")
endif
endif
if jG[MTc]<=1677 then
if jG[MTc]<=1676 then
if jG[MTc]<=1675 then
call evs(MTc,wYc)
else
call P0S(MTc,wYc,"when calling evaluate in BuffsJurst, line 24")
endif
else
call cWi(MTc,wYc)
endif
elseif jG[MTc]<=1678 then
call gvs(MTc,wYc)
else
call N0S(MTc,wYc,"when calling evaluate in BuffsJurst, line 24")
endif
set MM=MM-1
endfunction
function Msu takes string Vsu returns nothing
local timer Bsu
local integer Nsu
set w3[MM]=Vsu
set MM=MM+1
set Bsu=GetExpiredTimer()
set Nsu=Vkr(Bsu,"when calling getData in BuffsJurst, line 72")
call sjr(Bsu,"when calling release in BuffsJurst, line 73")
call jto(BQ[CQ[Nsu]],GetHandleId(VQ[Nsu]),"when calling removeHandle in BuffsJurst, line 74")
if uW[CQ[Nsu]]!=0 then
call rYc(uW[CQ[Nsu]],VQ[Nsu],"when calling evaluate in BuffsJurst, line 76")
endif
if rW[CQ[Nsu]]!=0 then
call rYc(rW[CQ[Nsu]],VQ[Nsu],"when calling evaluate in BuffsJurst, line 79")
endif
call nTc(Nsu,"when calling destroy in BuffsJurst, line 81")
set MM=MM-1
set Bsu=null
endfunction
function RTo takes nothing returns nothing
set MM=0
call Msu("BuffsJurst, line 136")
endfunction
function dXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@mechanical")then
return false
endif
return true
endfunction
function fXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="~mechanical")then
return false
endif
return true
endfunction
function RXw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(QSw))
if fXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],WSw)
elseif dXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],ESw)
else
call DoNothing()
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function Rgr takes nothing returns boolean
set UR="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ"
set IR="0123456789"
call vhr(IR)
call vhr(UR)
return true
endfunction
function Rkr takes nothing returns boolean
set CR=InitHashtable()
return true
endfunction
function Rtu takes nothing returns boolean
return true
endfunction
function i4w takes nothing returns boolean
if not(UnitHasBuffBJ(GetAttacker(),1110454849)==true)then
return false
endif
return true
endfunction
function r4w takes nothing returns boolean
if not(UnitHasBuffBJ(GetAttacker(),1110454361)==true)then
return false
endif
return true
endfunction
function s4w takes nothing returns boolean
if not(UnitHasBuffBJ(GetAttacker(),1110454851)==true)then
return false
endif
return true
endfunction
function t4w takes nothing returns boolean
if not(UnitHasBuffBJ(GetAttacker(),1110454850)==true)then
return false
endif
return true
endfunction
function u4w takes nothing returns boolean
if not(UnitHasBuffBJ(GetAttacker(),1110454852)==true)then
return false
endif
return true
endfunction
function S4w takes nothing returns nothing
call CreateNUnitsAtLoc(1,1747995215,GetOwningPlayer(GetAttacker()),GetUnitLoc(GetAttacker()),bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(3.00,1112820806,GetLastCreatedUnit())
if i4w()then
call UnitRemoveBuffBJ(1110454849,GetAttacker())
call UnitAddAbilityBJ(1093682229,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093682229,GetLastCreatedUnit(),GetUnitAbilityLevelSwapped(1093682227,GetAttacker()))
call IssueTargetOrderBJ(GetLastCreatedUnit(),"bloodlust",GetAttacker())
elseif t4w()then
call UnitRemoveBuffBJ(1110454850,GetAttacker())
call UnitAddAbilityBJ(1093682230,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093682230,GetLastCreatedUnit(),GetUnitAbilityLevelSwapped(1093682227,GetAttacker()))
call IssueTargetOrderBJ(GetLastCreatedUnit(),"bloodlust",GetAttacker())
elseif s4w()then
call UnitRemoveBuffBJ(1110454851,GetAttacker())
call UnitAddAbilityBJ(1093682231,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093682231,GetLastCreatedUnit(),GetUnitAbilityLevelSwapped(1093682227,GetAttacker()))
call IssueTargetOrderBJ(GetLastCreatedUnit(),"bloodlust",GetAttacker())
elseif r4w()then
call UnitRemoveBuffBJ(1110454361,GetAttacker())
call UnitAddAbilityBJ(1093682232,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093682232,GetLastCreatedUnit(),GetUnitAbilityLevelSwapped(1093682227,GetAttacker()))
call IssueTargetOrderBJ(GetLastCreatedUnit(),"bloodlust",GetAttacker())
elseif u4w()then
call UnitRemoveBuffBJ(1110454852,GetAttacker())
call UnitAddAbilityBJ(1093682232,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093682232,GetLastCreatedUnit(),GetUnitAbilityLevelSwapped(1093682227,GetAttacker()))
call IssueTargetOrderBJ(GetLastCreatedUnit(),"bloodlust",GetAttacker())
else
call UnitAddAbilityBJ(1093682228,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093682228,GetLastCreatedUnit(),GetUnitAbilityLevelSwapped(1093682227,GetAttacker()))
call IssueTargetOrderBJ(GetLastCreatedUnit(),"bloodlust",GetAttacker())
endif
endfunction
function S5w takes nothing returns boolean
if not(GetSpellAbilityId()==1093679160)then
return false
endif
return true
endfunction
function S7w takes nothing returns nothing
local group i7w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(i7w,GetSpellTargetLoc(),300.,Condition(dbw))
call ForGroup(i7w,fbw)
call DestroyGroup(i7w)
set i7w=null
set i7w=null
endfunction
function S8r takes nothing returns boolean
return true
endfunction
function S8w takes nothing returns boolean
return GetSpellAbilityId()==1093682993
endfunction
function SAw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(qtw))
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],atw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function SCw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function SHw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.,G,Htw)
call RemoveLocation(G)
endfunction
function SIw takes nothing returns nothing
local unit sIw=GetDyingUnit()
local trigger tIw=CreateTrigger()
local timer iIw=null
call TriggerRegisterUnitStateEvent(tIw,sIw,UNIT_STATE_LIFE,GREATER_THAN_OR_EQUAL,1.)
call TriggerAddAction(tIw,Gsw)
if IsUnitType(sIw,UNIT_TYPE_HERO)==false then
set iIw=CreateTimer()
call SaveTriggerHandle(nr,GetHandleId(iIw),StringHash("aiR"),tIw)
call SaveUnitHandle(nr,GetHandleId(iIw),StringHash("aiRu"),sIw)
call SaveTimerHandle(nr,GetHandleId(sIw),StringHash("aiR"),iIw)
call TimerStart(iIw,120.,false,gsw)
set iIw=null
endif
set tIw=null
set sIw=null
set sIw=null
set tIw=null
set iIw=null
endfunction
function QvS takes string vvS returns integer
local integer mvS
set w3[MM]=vvS
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set mvS=cg
set og[mvS]=1468
else
call Mau("Out of memory: Could not create OnPointCast_onPointCast_Meteor.","when calling error in Meteor, line 48")
set mvS=0
endif
else
set Sg=Sg-1
set mvS=ig[Sg]
set og[mvS]=1468
endif
set MM=MM-1
return mvS
endfunction
function rju takes string Mku returns boolean
local integer wju
local integer uju
set w3[MM]=Mku
set MM=MM+1
set pq=1097688436
set eq=1095577656
set uju=pq
set wju=QvS("when calling alloc_OnPointCast_onPointCast_Meteor in Meteor, line 48")
call kYs(wju)
call ASu(uju,wju,"when calling onPointCast in Meteor, line 48")
set MM=MM-1
return true
endfunction
function SRo takes nothing returns boolean
set MM=0
return rju("Meteor, line 1")
endfunction
function dLt takes integer aLt,item nLt returns nothing
set eK[aLt]=nLt
endfunction
function E5o takes integer m5o,item Q5o,string W5o returns nothing
set w3[MM]=W5o
set MM=MM+1
if hx[m5o]==0 then
if m5o==0 then
call Mau("Nullpointer exception when calling Context.setSpellTargetItem","when calling error in ScmdDataTypes, line 1202")
else
call Mau("Called Context.setSpellTargetItem on invalid object.","when calling error in ScmdDataTypes, line 1202")
endif
endif
call dLt(m5o,Q5o)
set MM=MM-1
endfunction
function qLt takes integer pLt,destructable eLt returns nothing
set pK[pLt]=eLt
endfunction
function F5o takes integer G5o,destructable g5o,string h5o returns nothing
set w3[MM]=h5o
set MM=MM+1
if hx[G5o]==0 then
if G5o==0 then
call Mau("Nullpointer exception when calling Context.setSpellTargetDestructable","when calling error in ScmdDataTypes, line 1196")
else
call Mau("Called Context.setSpellTargetDestructable on invalid object.","when calling error in ScmdDataTypes, line 1196")
endif
endif
call qLt(G5o,g5o)
set MM=MM-1
endfunction
function wLt takes integer NKt,unit MKt returns nothing
set cK[NKt]=MKt
endfunction
function I2o takes integer E2o,unit Z2o,string U2o returns nothing
set w3[MM]=U2o
set MM=MM+1
if hx[E2o]==0 then
if E2o==0 then
call Mau("Nullpointer exception when calling Context.setTriggerUnit","when calling error in ScmdDataTypes, line 1166")
else
call Mau("Called Context.setTriggerUnit on invalid object.","when calling error in ScmdDataTypes, line 1166")
endif
endif
call wLt(E2o,Z2o)
set MM=MM-1
endfunction
function gLt takes integer YLt,integer GLt returns nothing
set yK[YLt]=GLt
endfunction
function J5o takes integer A5o,integer D5o,string H5o returns nothing
set w3[MM]=H5o
set MM=MM+1
if hx[A5o]==0 then
if A5o==0 then
call Mau("Nullpointer exception when calling Context.setSpellAbilityId","when calling error in ScmdDataTypes, line 1208")
else
call Mau("Called Context.setSpellAbilityId on invalid object.","when calling error in ScmdDataTypes, line 1208")
endif
endif
call gLt(A5o,D5o)
set MM=MM-1
endfunction
function TLt takes integer fLt,item RLt returns nothing
set qK[fLt]=RLt
endfunction
function M5o takes integer V5o,item B5o,string N5o returns nothing
set w3[MM]=N5o
set MM=MM+1
if hx[V5o]==0 then
if V5o==0 then
call Mau("Nullpointer exception when calling Context.setManipulatedItem","when calling error in ScmdDataTypes, line 1214")
else
call Mau("Called Context.setManipulatedItem on invalid object.","when calling error in ScmdDataTypes, line 1214")
endif
endif
call TLt(V5o,B5o)
set MM=MM-1
endfunction
function LBS takes string JBS returns integer
local integer KBS
set w3[MM]=JBS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set KBS=yx
set px[KBS]=1420
else
call Mau("Out of memory: Could not create RuntimeFunction.","when calling error in ScmdDataTypes, line 1318")
set KBS=0
endif
else
set bx=bx-1
set KBS=lx[bx]
set px[KBS]=1420
endif
set MM=MM-1
return KBS
endfunction
function W2t takes integer Q2t returns nothing
endfunction
function m6i takes integer v6i returns string
return HK[v6i]
endfunction
function B1t takes integer V1t returns string
return m6i(V1t)
endfunction
function D5i takes integer A5i returns string
return"SpecialEffect { modelName: \""+DK[A5i]+"\" }"
endfunction
function MCS takes string BCS returns integer
local integer NCS
set w3[MM]=BCS
set MM=MM+1
if kx==0 then
if jx<32768 then
set jx=jx+1
set NCS=jx
set xx[NCS]=820
else
call Mau("Out of memory: Could not create GenericSharedPointer.","when calling error in ScmdDataTypes, line 100")
set NCS=0
endif
else
set kx=kx-1
set NCS=Fx[kx]
set xx[NCS]=820
endif
set MM=MM-1
return NCS
endfunction
function TBt takes integer RBt returns nothing
call fBt(RBt)
endfunction
function lBt takes string oBt returns integer
local integer OBt
set w3[MM]=oBt
set MM=MM+1
set OBt=MCS("when calling alloc_GenericSharedPointer in ScmdDataTypes, line 120")
call TBt(OBt)
set MM=MM-1
return OBt
endfunction
function cBt takes integer tBt,string iBt returns integer
local integer SBt
set w3[MM]=iBt
set MM=MM+1
set SBt=lBt("when calling new_GenericSharedPointer in ScmdDataTypes, line 131")
set YK[SBt]=YK[tBt]
set GK[SBt]=GK[tBt]
call h7o(GK[tBt],"when calling increase in ScmdDataTypes, line 134")
set MM=MM-1
return SBt
endfunction
function S5i takes integer s5i,string t5i returns integer
local integer i5i
set w3[MM]=t5i
set MM=MM+1
set i5i=cBt(s5i,"when calling clone in ScmdDataTypes, line 172")
set MM=MM-1
return i5i
endfunction
function b7o takes integer o7o,string O7o returns integer
local integer l7o
set w3[MM]=O7o
set MM=MM+1
if xx[o7o]==0 then
if o7o==0 then
call Mau("Nullpointer exception when calling GenericSharedPointer.clone","when calling error in ScmdDataTypes, line 130")
else
call Mau("Called GenericSharedPointer.clone on invalid object.","when calling error in ScmdDataTypes, line 130")
endif
endif
if xx[o7o]<=820 then
set l7o=cBt(o7o,"when calling clone in ScmdDataTypes, line 130")
else
set l7o=S5i(o7o,"when calling clone in ScmdDataTypes, line 130")
endif
set MM=MM-1
return l7o
endfunction
function E0i takes integer v0i,integer m0i,string Q0i returns integer
local integer W0i
set w3[MM]=Q0i
set MM=MM+1
set W0i=b7o(TZc(sL[v0i],m0i,"when calling get in ScmdDataTypes, line 1094"),"when calling clone in ScmdDataTypes, line 1094")
set MM=MM-1
return W0i
endfunction
function M9o takes integer C9o,integer V9o,string B9o returns integer
local integer N9o
set w3[MM]=B9o
set MM=MM+1
if px[C9o]==0 then
if C9o==0 then
call Mau("Nullpointer exception when calling Vector.get","when calling error in ScmdDataTypes, line 1093")
else
call Mau("Called Vector.get on invalid object.","when calling error in ScmdDataTypes, line 1093")
endif
endif
set N9o=E0i(C9o,V9o,"when calling get in ScmdDataTypes, line 1093")
set MM=MM-1
return N9o
endfunction
function O3t takes integer o3t returns string
return"Item { name: \""+dhu(xK[o3t])+"\" }"
endfunction
function Zeu takes destructable Eeu returns string
return GetDestructableName(Eeu)
endfunction
function PXt takes integer IXt returns string
return"Destructable { name: \""+Zeu(nK[IXt])+"\" }"
endfunction
function l9i takes integer O9i returns string
return wL[O9i]
endfunction
function U7o takes integer W7o,string E7o returns string
local string Z7o
set w3[MM]=E7o
set MM=MM+1
if Ix[W7o]==0 then
if W7o==0 then
call Mau("Nullpointer exception when calling GenericTypeToken.getName","when calling error in ScmdDataTypes, line 16")
else
call Mau("Called GenericTypeToken.getName on invalid object.","when calling error in ScmdDataTypes, line 16")
endif
endif
set Z7o=l9i(W7o)
set MM=MM-1
return Z7o
endfunction
function AKt takes integer PKt returns integer
return Kn
endfunction
function q1t takes integer e1t returns integer
return td
endfunction
function C1t takes integer X1t returns integer
return q1t(X1t)
endfunction
function FDt takes integer hDt returns integer
return Pn
endfunction
function G5i takes integer Y5i returns integer
return od
endfunction
function JPt takes integer HPt returns integer
return In
endfunction
function LIt takes integer KIt returns integer
return Un
endfunction
function P5i takes integer I5i returns integer
return Od
endfunction
function PCt takes integer ICt returns integer
return Cn
endfunction
function RAt takes integer fAt returns integer
return JPt(fAt)
endfunction
function RKt takes integer fKt returns integer
return Dn
endfunction
function UXt takes integer ZXt returns integer
return Ln
endfunction
function VHt takes integer CHt returns integer
return An
endfunction
function W3t takes integer Q3t returns integer
return sd
endfunction
function WNt takes integer QNt returns integer
return wd
endfunction
function Y4t takes integer T4t returns integer
return id
endfunction
function c3t takes integer S3t returns integer
return rd
endfunction
function h0i takes integer g0i returns integer
return Yd
endfunction
function x6i takes integer j6i returns integer
return ld
endfunction
function i7i takes integer t7i returns integer
return x6i(t7i)
endfunction
function j8i takes integer k8i returns integer
return pd
endfunction
function j_i takes integer k_i returns integer
return gd
endfunction
function k7i takes integer F7i returns integer
return bd
endfunction
function l2t takes integer O2t returns integer
return Sd
endfunction
function m2t takes integer v2t returns integer
return cd
endfunction
function m9i takes integer v9i returns integer
return Rd
endfunction
function rMt takes integer uMt returns integer
return ud
endfunction
function mMt takes integer vMt returns integer
return rMt(vMt)
endfunction
function oCt takes integer cCt returns integer
return Xn
endfunction
function r0i takes integer u0i returns integer
return Td
endfunction
function uNt takes integer wNt returns integer
return Mn
endfunction
function u_i takes integer w_i returns integer
return Gd
endfunction
function x8o takes integer F8o,string k8o returns integer
local integer j8o
set w3[MM]=k8o
set MM=MM+1
if px[F8o]==0 then
if F8o==0 then
call Mau("Nullpointer exception when calling Object.getTypeToken","when calling error in ScmdDataTypes, line 65")
else
call Mau("Called Object.getTypeToken on invalid object.","when calling error in ScmdDataTypes, line 65")
endif
endif
if px[F8o]<=1434 then
if px[F8o]<=1425 then
if px[F8o]<=1421 then
if px[F8o]<=1418 then
if px[F8o]<=1417 then
set j8o=FDt(F8o)
else
set j8o=VHt(F8o)
endif
elseif px[F8o]<=1420 then
set j8o=m2t(F8o)
else
set j8o=RKt(F8o)
endif
elseif px[F8o]<=1423 then
if px[F8o]<=1422 then
set j8o=oCt(F8o)
else
set j8o=AKt(F8o)
endif
elseif px[F8o]<=1424 then
set j8o=PCt(F8o)
else
set j8o=uNt(F8o)
endif
elseif px[F8o]<=1429 then
if px[F8o]<=1427 then
if px[F8o]<=1426 then
set j8o=WNt(F8o)
else
set j8o=LIt(F8o)
endif
elseif px[F8o]<=1428 then
set j8o=j_i(F8o)
else
set j8o=UXt(F8o)
endif
elseif px[F8o]<=1431 then
if px[F8o]<=1430 then
set j8o=c3t(F8o)
else
set j8o=r0i(F8o)
endif
elseif px[F8o]<=1433 then
set j8o=RAt(F8o)
else
set j8o=mMt(F8o)
endif
elseif px[F8o]<=1443 then
if px[F8o]<=1439 then
if px[F8o]<=1436 then
if px[F8o]<=1435 then
set j8o=C1t(F8o)
else
set j8o=i7i(F8o)
endif
elseif px[F8o]<=1437 then
set j8o=W3t(F8o)
else
set j8o=q1t(F8o)
endif
elseif px[F8o]<=1441 then
if px[F8o]<=1440 then
set j8o=rMt(F8o)
else
set j8o=Y4t(F8o)
endif
elseif px[F8o]<=1442 then
set j8o=l2t(F8o)
else
set j8o=G5i(F8o)
endif
elseif px[F8o]<=1447 then
if px[F8o]<=1445 then
if px[F8o]<=1444 then
set j8o=P5i(F8o)
else
set j8o=x6i(F8o)
endif
elseif px[F8o]<=1446 then
set j8o=JPt(F8o)
else
set j8o=k7i(F8o)
endif
elseif px[F8o]<=1449 then
if px[F8o]<=1448 then
set j8o=j8i(F8o)
else
set j8o=m9i(F8o)
endif
elseif px[F8o]<=1450 then
set j8o=h0i(F8o)
else
set j8o=u_i(F8o)
endif
set MM=MM-1
return j8o
endfunction
function S1t takes integer s1t,string t1t returns string
local string i1t
set w3[MM]=t1t
set MM=MM+1
set i1t=U7o(x8o(s1t,"when calling getTypeToken in ScmdDataTypes, line 68"),"when calling getName in ScmdDataTypes, line 68")+" { }"
set MM=MM-1
return i1t
endfunction
function W9i takes integer Q9i returns string
return"undefined"
endfunction
function WMt takes integer QMt returns string
return m6i(QMt)
endfunction
function YAt takes integer TAt returns string
return m6i(TAt)
endfunction
function Z3t takes integer E3t returns string
return"null"
endfunction
function c7i takes integer S7i returns string
return m6i(S7i)
endfunction
function nBt takes integer aBt returns integer
return YK[aBt]
endfunction
function f7o takes integer a7o,string n7o returns integer
local integer d7o
set w3[MM]=n7o
set MM=MM+1
if xx[a7o]==0 then
if a7o==0 then
call Mau("Nullpointer exception when calling GenericSharedPointer.get","when calling error in ScmdDataTypes, line 154")
else
call Mau("Called GenericSharedPointer.get on invalid object.","when calling error in ScmdDataTypes, line 154")
endif
endif
set d7o=nBt(a7o)
set MM=MM-1
return d7o
endfunction
function g4t takes integer G4t returns string
return"Rect { minX: "+xUu(KUu(QK[G4t]))+", minY: "+xUu(VUu(QK[G4t]))+", maxX: "+xUu(XUu(QK[G4t]))+", maxY: "+xUu(NUu(QK[G4t]))+" }"
endfunction
function h5i takes integer g5i returns string
return"Sound { fileName: \""+PK[g5i]+"\" }"
endfunction
function x0i takes integer F0i,string k0i returns integer
local integer j0i
set w3[MM]=k0i
set MM=MM+1
set j0i=yZc(sL[F0i],"when calling size in ScmdDataTypes, line 1110")
set MM=MM-1
return j0i
endfunction
function s0o takes integer w0o,string u0o returns integer
local integer r0o
set w3[MM]=u0o
set MM=MM+1
if px[w0o]==0 then
if w0o==0 then
call Mau("Nullpointer exception when calling Vector.size","when calling error in ScmdDataTypes, line 1109")
else
call Mau("Called Vector.size on invalid object.","when calling error in ScmdDataTypes, line 1109")
endif
endif
set r0o=x0i(w0o,"when calling size in ScmdDataTypes, line 1109")
set MM=MM-1
return r0o
endfunction
function sNt takes integer rNt returns string
return"Group { size: "+tgu(oTu(hK[rNt]))+" }"
endfunction
function s_i takes integer r_i returns string
return"WeatherEffect { }"
endfunction
function t0i takes integer s0i returns string
return"Unit { name: \""+R7s(rL[s0i])+"\" }"
endfunction
function v8i takes integer x8i returns string
return"Trigger { }"
endfunction
function x7i takes integer j7i returns string
return KK[j7i]
endfunction
function y2t takes integer b2t returns string
return"Region { }"
endfunction
function Zgo takes integer kgo,integer jgo,string xgo returns nothing
local string vgo
local integer mgo
local string Qgo
local string Wgo
local string Ego
if kgo==0 then
set w3[MM]=xgo
set MM=MM+1
set vgo=""
if s0o(jgo,"when calling size in ScmdDataTypes, line 1082")>0 then
set Wgo=vgo
call Zgo(1,f7o(M9o(jgo,0,"when calling get in ScmdDataTypes, line 1083"),"when calling get in ScmdDataTypes, line 1083"),"when calling toString in ScmdDataTypes, line 1083")
set vgo=Wgo+Snw
set mgo=1
loop
exitwhen not(mgo<s0o(jgo,"when calling size in ScmdDataTypes, line 1085"))
set Ego=vgo
call Zgo(1,f7o(M9o(jgo,mgo,"when calling get in ScmdDataTypes, line 1086"),"when calling get in ScmdDataTypes, line 1086"),"when calling toString in ScmdDataTypes, line 1086")
set vgo=Ego+", "+Snw
set mgo=mgo+1
endloop
endif
set MM=MM-1
set Snw="["+vgo+"]"
return
elseif kgo==1 then
set w3[MM]=xgo
set MM=MM+1
if px[jgo]==0 then
if jgo==0 then
call Mau("Nullpointer exception when calling Object.toString","when calling error in ScmdDataTypes, line 67")
else
call Mau("Called Object.toString on invalid object.","when calling error in ScmdDataTypes, line 67")
endif
endif
if px[jgo]<=1437 then
if px[jgo]<=1431 then
if px[jgo]<=1428 then
if px[jgo]<=1425 then
if px[jgo]<=1424 then
set Qgo=S1t(jgo,"when calling toString in ScmdDataTypes, line 67")
else
set Qgo=sNt(jgo)
endif
else
set Qgo=S1t(jgo,"when calling toString in ScmdDataTypes, line 67")
endif
elseif px[jgo]<=1430 then
if px[jgo]<=1429 then
set Qgo=PXt(jgo)
else
set Qgo=O3t(jgo)
endif
else
set Qgo=t0i(jgo)
endif
elseif px[jgo]<=1434 then
if px[jgo]<=1433 then
if px[jgo]<=1432 then
set Qgo=S1t(jgo,"when calling toString in ScmdDataTypes, line 67")
else
set Qgo=YAt(jgo)
endif
else
set Qgo=WMt(jgo)
endif
elseif px[jgo]<=1436 then
if px[jgo]<=1435 then
set Qgo=B1t(jgo)
else
set Qgo=c7i(jgo)
endif
else
set Qgo=Z3t(jgo)
endif
elseif px[jgo]<=1444 then
if px[jgo]<=1441 then
if px[jgo]<=1440 then
if px[jgo]<=1438 then
set Qgo=S1t(jgo,"when calling toString in ScmdDataTypes, line 67")
else
set Qgo=m6i(jgo)
endif
else
set Qgo=g4t(jgo)
endif
elseif px[jgo]<=1443 then
if px[jgo]<=1442 then
set Qgo=y2t(jgo)
else
set Qgo=h5i(jgo)
endif
else
set Qgo=D5i(jgo)
endif
elseif px[jgo]<=1448 then
if px[jgo]<=1447 then
if px[jgo]<=1446 then
set Qgo=m6i(jgo)
else
set Qgo=x7i(jgo)
endif
else
set Qgo=v8i(jgo)
endif
elseif px[jgo]<=1450 then
if px[jgo]<=1449 then
set Qgo=W9i(jgo)
else
call Zgo(0,jgo,"when calling toString in ScmdDataTypes, line 67")
set Qgo=Snw
endif
else
set Qgo=s_i(jgo)
endif
set MM=MM-1
set Snw=Qgo
return
endif
endfunction
function hXt takes integer gXt returns integer
return aK[gXt]
endfunction
function n6o takes integer e6o,string q6o returns integer
local integer a6o
set w3[MM]=q6o
set MM=MM+1
if hx[e6o]==0 then
if e6o==0 then
call Mau("Nullpointer exception when calling Context.getSymbolMap","when calling error in ScmdDataTypes, line 1230")
else
call Mau("Called Context.getSymbolMap on invalid object.","when calling error in ScmdDataTypes, line 1230")
endif
endif
set a6o=hXt(e6o)
set MM=MM-1
return a6o
endfunction
function GXt takes integer nXt,string dXt,string fXt returns integer
local integer RXt
local integer TXt
local integer YXt
set w3[MM]=fXt
set MM=MM+1
set RXt=BZc(aK[nXt],Rvr(dXt,"when calling stringToIndex in ScmdDataTypes, line 1227"),"when calling get in ScmdDataTypes, line 1227")
if RXt!=0 then
set TXt=b7o(RXt,"when calling clone in ScmdDataTypes, line 1228")
else
set TXt=0
endif
set YXt=TXt
set MM=MM-1
return YXt
endfunction
function p6o takes integer O6o,string l6o,string b6o returns integer
local integer y6o
set w3[MM]=b6o
set MM=MM+1
if hx[O6o]==0 then
if O6o==0 then
call Mau("Nullpointer exception when calling Context.resolve","when calling error in ScmdDataTypes, line 1226")
else
call Mau("Called Context.resolve on invalid object.","when calling error in ScmdDataTypes, line 1226")
endif
endif
set y6o=GXt(O6o,l6o,"when calling resolve in ScmdDataTypes, line 1226")
set MM=MM-1
return y6o
endfunction
function M2t takes integer D2t,integer H2t,integer J2t,integer K2t,string L2t returns nothing
local integer X2t
local integer C2t
local integer V2t
local string B2t
local integer N2t
set w3[MM]=L2t
set MM=MM+1
call BVt(D2t)
call W2t(D2t)
set EK[D2t]=rDs("when calling new_HashList in ScmdDataTypes, line 1327")
set X2t=kAs(J2t,"when calling iterator in ScmdDataTypes, line 1328")
loop
exitwhen not PPs(X2t,"when calling hasNext in ScmdDataTypes, line 1328")
set C2t=EPs(X2t,"when calling next in ScmdDataTypes, line 1328")
set N2t=EK[D2t]
call Zgo(1,f7o(C2t,"when calling get in ScmdDataTypes, line 1329"),"when calling toString in ScmdDataTypes, line 1329")
call Nno(N2t,Rvr(Snw,"when calling stringToIndex in ScmdDataTypes, line 1329"),"when calling add in ScmdDataTypes, line 1329")
endloop
call HPs(X2t,"when calling close in ScmdDataTypes, line 1328")
set ZK[D2t]=K2t
set UK[D2t]=YHs("when calling new_IterableMap in ScmdDataTypes, line 1331")
set V2t=fHs(n6o(H2t,"when calling getSymbolMap in ScmdDataTypes, line 1332"),"when calling iterator in ScmdDataTypes, line 1332")
loop
exitwhen not PPs(V2t,"when calling hasNext in ScmdDataTypes, line 1332")
set B2t=gvr(EPs(V2t,"when calling next in ScmdDataTypes, line 1332"),"when calling stringFromIndex in ScmdDataTypes, line 1332")
call OUc(UK[D2t],Rvr(B2t,"when calling stringToIndex in ScmdDataTypes, line 1333"),p6o(H2t,B2t,"when calling resolve in ScmdDataTypes, line 1333"),"when calling put in ScmdDataTypes, line 1333")
endloop
call HPs(V2t,"when calling close in ScmdDataTypes, line 1332")
set MM=MM-1
endfunction
function A2t takes integer E2t,integer Z2t,integer U2t,string I2t returns integer
local integer P2t
set w3[MM]=I2t
set MM=MM+1
set P2t=LBS("when calling alloc_RuntimeFunction in ScmdDataTypes, line 1326")
call M2t(P2t,E2t,Z2t,U2t,"when calling construct_RuntimeFunction in ScmdDataTypes, line 1326")
set MM=MM-1
return P2t
endfunction
function O0i takes integer o0i returns unit
return rL[o0i]
endfunction
function H9o takes integer P9o,string A9o returns unit
local unit D9o
set w3[MM]=A9o
set MM=MM+1
if px[P9o]==0 then
if P9o==0 then
call Mau("Nullpointer exception when calling Unit.getInner","when calling error in ScmdDataTypes, line 795")
else
call Mau("Called Unit.getInner on invalid object.","when calling error in ScmdDataTypes, line 795")
endif
endif
set D9o=O0i(P9o)
set MM=MM-1
set gdw=D9o
set D9o=null
return gdw
endfunction
function Y1t takes integer T1t returns real
return vK[T1t]
endfunction
function I8o takes integer E8o,string Z8o returns real
local real U8o
set w3[MM]=Z8o
set MM=MM+1
if px[E8o]==0 then
if E8o==0 then
call Mau("Nullpointer exception when calling Real.realValue","when calling error in ScmdDataTypes, line 473")
else
call Mau("Called Real.realValue on invalid object.","when calling error in ScmdDataTypes, line 473")
endif
endif
if px[E8o]<=1435 then
set U8o=Y1t(E8o)
else
set U8o=Y1t(E8o)
endif
set MM=MM-1
return U8o
endfunction
function rer takes string Bpr,string Npr returns integer
local integer Mpr
local integer wer
local integer uer
set w3[MM]=Npr
set MM=MM+1
set Mpr=rDs("when calling new_HashList in SotFRP_HeroAbilList, line 23")
set wer=0
set uer=Cd-1
loop
exitwhen wer>uer
if Bd[wer]==Bpr then
call Nno(Mpr,Vd[wer],"when calling add in SotFRP_HeroAbilList, line 26")
endif
set wer=wer+1
endloop
set MM=MM-1
return Mpr
endfunction
function syr takes string Nbr,string Mbr returns integer
local integer wyr
local integer uyr
local integer ryr
set w3[MM]=Mbr
set MM=MM+1
set wyr=rDs("when calling new_HashList in SotFRP_AbilList, line 15")
set uyr=0
set ryr=Kd-1
loop
exitwhen uyr>ryr
if Xd[uyr]==Nbr then
call Nno(wyr,Ld[uyr],"when calling add in SotFRP_AbilList, line 18")
endif
set uyr=uyr+1
endloop
set MM=MM-1
return wyr
endfunction
function spr takes string Myr,string wpr returns integer
local integer upr
local integer rpr
set w3[MM]=wpr
set MM=MM+1
if Dhr(Myr,0,4)=="hero" then
set upr=rer(Vhr(Myr,4),"when calling getRegisteredHeroAbilityIdByName in SotFRP_AbilitySystem, line 12")
else
set upr=syr(Myr,"when calling getRegisteredAbilityIdByName in SotFRP_AbilitySystem, line 12")
endif
set rpr=upr
set MM=MM-1
return rpr
endfunction
function Kpr takes unit Zpr,string Upr,integer Ipr,real Ppr,string Apr returns nothing
local integer Dpr
local integer Hpr
local integer Jpr
set w3[MM]=Apr
set MM=MM+1
set Dpr=spr(Upr,"when calling getAbilityIdByName in SotFRP_AbilitySystem, line 39")
set Hpr=kAs(Dpr,"when calling iterator in SotFRP_AbilitySystem, line 40")
loop
exitwhen not PPs(Hpr,"when calling hasNext in SotFRP_AbilitySystem, line 40")
set Jpr=EPs(Hpr,"when calling next in SotFRP_AbilitySystem, line 40")
call j_s(Zpr,Jpr,Ipr,Ppr)
endloop
call HPs(Hpr,"when calling close in SotFRP_AbilitySystem, line 40")
call vEc(Dpr,"when calling dispatch_HashList_destroyHashList in SotFRP_AbilitySystem, line 42")
set MM=MM-1
endfunction
function YPt takes integer dPt,integer fPt,string RPt returns integer
local integer TPt
set w3[MM]=RPt
set MM=MM+1
set TPt=f7o(TZc(JJ[dPt],fPt,"when calling get in ScmdDataTypes, line 1268"),"when calling get in ScmdDataTypes, line 1268")
set MM=MM-1
return TPt
endfunction
function N1o takes integer X1o,integer C1o,string V1o returns integer
local integer B1o
set w3[MM]=V1o
set MM=MM+1
if nx[X1o]==0 then
if X1o==0 then
call Mau("Nullpointer exception when calling Arguments.get","when calling error in ScmdDataTypes, line 1267")
else
call Mau("Called Arguments.get on invalid object.","when calling error in ScmdDataTypes, line 1267")
endif
endif
set B1o=YPt(X1o,C1o,"when calling get in ScmdDataTypes, line 1267")
set MM=MM-1
return B1o
endfunction
function U6i takes integer Z6i returns string
return HK[Z6i]
endfunction
function S9o takes integer s9o,string t9o returns string
local string i9o
set w3[MM]=t9o
set MM=MM+1
if px[s9o]==0 then
if s9o==0 then
call Mau("Nullpointer exception when calling String.getInner","when calling error in ScmdDataTypes, line 349")
else
call Mau("Called String.getInner on invalid object.","when calling error in ScmdDataTypes, line 349")
endif
endif
if px[s9o]<=1440 then
if px[s9o]<=1436 then
set i9o=U6i(s9o)
else
set i9o=U6i(s9o)
endif
else
set i9o=U6i(s9o)
endif
set MM=MM-1
return i9o
endfunction
function cMt takes integer SMt returns integer
return kK[SMt]
endfunction
function t8o takes integer u8o,string r8o returns integer
local integer s8o
set w3[MM]=r8o
set MM=MM+1
if px[u8o]==0 then
if u8o==0 then
call Mau("Nullpointer exception when calling Integer.intValue","when calling error in ScmdDataTypes, line 528")
else
call Mau("Called Integer.intValue on invalid object.","when calling error in ScmdDataTypes, line 528")
endif
endif
if px[u8o]<=1434 then
set s8o=cMt(u8o)
else
set s8o=cMt(u8o)
endif
set MM=MM-1
return s8o
endfunction
function X8o takes integer J8o,string K8o returns integer
local integer L8o
set w3[MM]=K8o
set MM=MM+1
if xx[J8o]==0 then
if J8o==0 then
call Mau("Nullpointer exception when calling SharedPointer.clone","when calling error in ScmdDataTypes, line 171")
else
call Mau("Called SharedPointer.clone on invalid object.","when calling error in ScmdDataTypes, line 171")
endif
endif
set L8o=S5i(J8o,"when calling clone in ScmdDataTypes, line 171")
set MM=MM-1
return L8o
endfunction
function x4u takes string k4u returns integer
local integer j4u
set w3[MM]=k4u
set MM=MM+1
set j4u=X8o(Nn,"when calling clone in ScmdDataTypes, line 128")
set MM=MM-1
return j4u
endfunction
function AEi takes integer EEi,integer ZEi,integer UEi,string IEi returns integer
local integer PEi
set w3[MM]=IEi
set MM=MM+1
call Kpr(H9o(N1o(UEi,0,"when calling get in SotFRP_AbilitySystem, line 83"),"when calling getInner in SotFRP_AbilitySystem, line 83"),S9o(N1o(UEi,1,"when calling get in SotFRP_AbilitySystem, line 83"),"when calling getInner in SotFRP_AbilitySystem, line 83"),t8o(N1o(UEi,2,"when calling get in SotFRP_AbilitySystem, line 83"),"when calling intValue in SotFRP_AbilitySystem, line 83"),I8o(N1o(UEi,3,"when calling get in SotFRP_AbilitySystem, line 83"),"when calling realValue in SotFRP_AbilitySystem, line 83"),"when calling setAbilityCooldown in SotFRP_AbilitySystem, line 83")
set PEi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 84")
set MM=MM-1
return PEi
endfunction
function kKt takes integer FKt returns nothing
endfunction
function QKt takes integer mKt returns nothing
call kKt(mKt)
if Jn==0 then
set tK[mKt]=CreateCameraSetup()
else
set tK[mKt]=Hn[Jn-1]
set Jn=Jn-1
call CameraSetupSetField(tK[mKt],CAMERA_FIELD_ZOFFSET,0.,0.)
call CameraSetupSetField(tK[mKt],CAMERA_FIELD_ROTATION,0.,0.)
call CameraSetupSetField(tK[mKt],CAMERA_FIELD_ANGLE_OF_ATTACK,0.,0.)
call CameraSetupSetField(tK[mKt],CAMERA_FIELD_TARGET_DISTANCE,0.,0.)
call CameraSetupSetField(tK[mKt],CAMERA_FIELD_ROLL,0.,0.)
call CameraSetupSetField(tK[mKt],CAMERA_FIELD_FIELD_OF_VIEW,0.,0.)
call CameraSetupSetField(tK[mKt],CAMERA_FIELD_FARZ,0.,0.)
call CameraSetupSetDestPosition(tK[mKt],0.,0.,0.)
endif
endfunction
function VXS takes string XXS returns integer
local integer CXS
set w3[MM]=XXS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set CXS=yx
set px[CXS]=1421
else
call Mau("Out of memory: Could not create CameraSetup.","when calling error in ScmdDataTypes, line 854")
set CXS=0
endif
else
set bx=bx-1
set CXS=lx[bx]
set px[CXS]=1421
endif
set MM=MM-1
return CXS
endfunction
function vKt takes string jKt returns integer
local integer xKt
set w3[MM]=jKt
set MM=MM+1
set xKt=VXS("when calling alloc_CameraSetup in ScmdDataTypes, line 865")
call QKt(xKt)
set MM=MM-1
return xKt
endfunction
function AFt takes integer EFt,integer ZFt,integer UFt,string IFt returns integer
local integer PFt
set w3[MM]=IFt
set MM=MM+1
set PFt=l5i(vKt("when calling new_CameraSetup in ScmdCameraSetupBuiltins, line 7"),"when calling new_SharedPointer in ScmdCameraSetupBuiltins, line 7")
set MM=MM-1
return PFt
endfunction
function adu takes player qdu returns integer
return Oe[bWu(qdu)]
endfunction
function Ydu takes player Rdu,real Tdu returns nothing
set pZ[adu(Rdu)]=Tdu
endfunction
function ASi takes integer ESi,integer ZSi,integer USi,string ISi returns integer
local integer PSi
set w3[MM]=ISi
set MM=MM+1
call Ydu(pa[h2o(ZSi,"when calling getPlayerId in ScmdSystemsSettingsBuiltins, line 13")],I8o(N1o(USi,0,"when calling get in ScmdSystemsSettingsBuiltins, line 13"),"when calling realValue in ScmdSystemsSettingsBuiltins, line 13"))
set PSi=x4u("when calling nullptr in ScmdSystemsSettingsBuiltins, line 14")
set MM=MM-1
return PSi
endfunction
function x4t takes integer j4t returns rect
return QK[j4t]
endfunction
function H8o takes integer P8o,string A8o returns rect
local rect D8o
set w3[MM]=A8o
set MM=MM+1
if px[P8o]==0 then
if P8o==0 then
call Mau("Nullpointer exception when calling Rect.getInner","when calling error in ScmdDataTypes, line 702")
else
call Mau("Called Rect.getInner on invalid object.","when calling error in ScmdDataTypes, line 702")
endif
endif
set D8o=x4t(P8o)
set MM=MM-1
set Tdw=D8o
set D8o=null
return Tdw
endfunction
function MVS takes string BVS returns integer
local integer NVS
set w3[MM]=BVS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set NVS=yx
set px[NVS]=1437
else
call Mau("Out of memory: Could not create Null.","when calling error in ScmdDataTypes, line 85")
set NVS=0
endif
else
set bx=bx-1
set NVS=lx[bx]
set px[NVS]=1437
endif
set MM=MM-1
return NVS
endfunction
function D3t takes integer A3t returns nothing
endfunction
function X3t takes integer L3t returns nothing
call D3t(L3t)
endfunction
function K3t takes string H3t returns integer
local integer J3t
set w3[MM]=H3t
set MM=MM+1
set J3t=MVS("when calling alloc_Null in ScmdDataTypes, line 89")
call X3t(J3t)
set MM=MM-1
return J3t
endfunction
function SIu takes rect iIu returns real
return GetRectCenterX(iIu)
endfunction
function oIu takes rect cIu returns real
return GetRectCenterY(cIu)
endfunction
function AZi takes integer QZi,integer WZi,integer EZi,string ZZi returns integer
local integer UZi
local rect IZi
local integer PZi
set w3[MM]=ZZi
set MM=MM+1
set UZi=h2o(WZi,"when calling getPlayerId in SotFRP_SaveLoad, line 125")
set IZi=H8o(N1o(EZi,0,"when calling get in SotFRP_SaveLoad, line 126"),"when calling getInner in SotFRP_SaveLoad, line 126")
set ff[UZi]=rgu(pUu((SIu(IZi)-64.)/128.))*128.+64.
set Rf[UZi]=rgu(pUu((oIu(IZi)-64.)/128.))*128.+64.
set PZi=l5i(K3t("when calling new_Null in SotFRP_SaveLoad, line 129"),"when calling new_SharedPointer in SotFRP_SaveLoad, line 129")
set MM=MM-1
set IZi=null
return PZi
endfunction
function Rws takes unit aws,unitweaponrealfield nws,integer dws,real fws returns boolean
return BlzSetUnitWeaponRealField(aws,nws,dws,fws)
endfunction
function DLt takes integer ALt returns unit
return SK[ALt]
endfunction
function W2o takes integer v2o,string m2o returns unit
local unit Q2o
set w3[MM]=m2o
set MM=MM+1
if hx[v2o]==0 then
if v2o==0 then
call Mau("Nullpointer exception when calling Context.getEnumUnit","when calling error in ScmdDataTypes, line 1163")
else
call Mau("Called Context.getEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1163")
endif
endif
set Q2o=DLt(v2o)
set MM=MM-1
set ydw=Q2o
set Q2o=null
return ydw
endfunction
function Afi takes integer Efi,integer Zfi,integer Ufi,string Ifi returns integer
local integer Pfi
set w3[MM]=Ifi
set MM=MM+1
call Rws(W2o(Zfi,"when calling getEnumUnit in ScmdUnitBuiltins, line 418"),UNIT_WEAPON_RF_ATTACK_RANGE,t8o(N1o(Ufi,1,"when calling get in ScmdUnitBuiltins, line 418"),"when calling intValue in ScmdUnitBuiltins, line 418"),I8o(N1o(Ufi,0,"when calling get in ScmdUnitBuiltins, line 418"),"when calling realValue in ScmdUnitBuiltins, line 418"))
set Pfi=x4u("when calling nullptr in ScmdUnitBuiltins, line 419")
set MM=MM-1
return Pfi
endfunction
function FVS takes string gVS returns integer
local integer hVS
set w3[MM]=gVS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set hVS=yx
set px[hVS]=1440
else
call Mau("Out of memory: Could not create Integer.","when calling error in ScmdDataTypes, line 476")
set hVS=0
endif
else
set bx=bx-1
set hVS=lx[bx]
set px[hVS]=1440
endif
set MM=MM-1
return hVS
endfunction
function OMt takes integer oMt returns nothing
endfunction
function P6i takes integer I6i returns nothing
endfunction
function X6i takes integer K6i,string L6i returns nothing
call P6i(K6i)
set HK[K6i]=L6i
endfunction
function g1t takes integer G1t returns nothing
endfunction
function Z1t takes integer Q1t,real W1t,string E1t returns nothing
call X6i(Q1t,E1t)
call g1t(Q1t)
set vK[Q1t]=W1t
endfunction
function aMt takes integer eMt,integer qMt returns nothing
call Z1t(eMt,rgu(qMt),tgu(qMt))
call OMt(eMt)
set kK[eMt]=qMt
endfunction
function pMt takes integer lMt,string bMt returns integer
local integer yMt
set w3[MM]=bMt
set MM=MM+1
set yMt=FVS("when calling alloc_Integer in ScmdDataTypes, line 485")
call aMt(yMt,lMt)
set MM=MM-1
return yMt
endfunction
function Ani takes integer Eni,integer Zni,integer Uni,string Ini returns integer
local integer Pni
set w3[MM]=Ini
set MM=MM+1
set Pni=l5i(pMt(w_s(H9o(N1o(Uni,0,"when calling get in ScmdUnitBuiltins, line 365"),"when calling getInner in ScmdUnitBuiltins, line 365"),t8o(N1o(Uni,1,"when calling get in ScmdUnitBuiltins, line 365"),"when calling intValue in ScmdUnitBuiltins, line 365")),"when calling new_Integer in ScmdUnitBuiltins, line 365"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 365")
set MM=MM-1
return Pni
endfunction
function bBS takes string OBS returns integer
local integer lBS
set w3[MM]=OBS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set lBS=yx
set px[lBS]=1439
else
call Mau("Out of memory: Could not create Real.","when calling error in ScmdDataTypes, line 421")
set lBS=0
endif
else
set bx=bx-1
set lBS=lx[bx]
set px[lBS]=1439
endif
set MM=MM-1
return lBS
endfunction
function m1t takes integer x1t,real v1t returns nothing
call X6i(x1t,xUu(v1t))
call g1t(x1t)
set vK[x1t]=v1t
endfunction
function j1t takes real h1t,string F1t returns integer
local integer k1t
set w3[MM]=F1t
set MM=MM+1
set k1t=bBS("when calling alloc_Real in ScmdDataTypes, line 430")
call m1t(k1t,h1t)
set MM=MM-1
return k1t
endfunction
function Aoi takes integer Eoi,integer Zoi,integer Uoi,string Ioi returns integer
local integer Poi
set w3[MM]=Ioi
set MM=MM+1
set Poi=l5i(j1t(V_u(Q7s(H9o(N1o(Uoi,0,"when calling get in ScmdUnitBuiltins, line 89"),"when calling getInner in ScmdUnitBuiltins, line 89"))),"when calling new_Real in ScmdUnitBuiltins, line 89"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 89")
set MM=MM-1
return Poi
endfunction
function Aqi takes integer Eqi,integer Zqi,integer Uqi,string Iqi returns integer
local integer Pqi
set w3[MM]=Iqi
set MM=MM+1
call f9s(W2o(Zqi,"when calling getEnumUnit in ScmdUnitBuiltins, line 307"),I8o(N1o(Uqi,0,"when calling get in ScmdUnitBuiltins, line 307"),"when calling realValue in ScmdUnitBuiltins, line 307"))
set Pqi=x4u("when calling nullptr in ScmdUnitBuiltins, line 308")
set MM=MM-1
return Pqi
endfunction
function FBS takes string gBS returns integer
local integer hBS
set w3[MM]=gBS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set hBS=yx
set px[hBS]=1441
else
call Mau("Out of memory: Could not create Rect.","when calling error in ScmdDataTypes, line 678")
set hBS=0
endif
else
set bx=bx-1
set hBS=lx[bx]
set px[hBS]=1441
endif
set MM=MM-1
return hBS
endfunction
function m4t takes integer v4t returns nothing
endfunction
function L4t takes integer A4t,real D4t,real H4t,real J4t,real K4t returns nothing
call m4t(A4t)
set QK[A4t]=Rect(D4t,H4t,J4t,K4t)
endfunction
function P4t takes real Q4t,real W4t,real E4t,real Z4t,string U4t returns integer
local integer I4t
set w3[MM]=U4t
set MM=MM+1
set I4t=FBS("when calling alloc_Rect in ScmdDataTypes, line 687")
call L4t(I4t,Q4t,W4t,E4t,Z4t)
set MM=MM-1
return I4t
endfunction
function Ati takes integer Eti,integer Zti,integer Uti,string Iti returns integer
local integer Pti
set w3[MM]=Iti
set MM=MM+1
set Pti=l5i(P4t(I8o(N1o(Uti,0,"when calling get in ScmdRectBuiltins, line 11"),"when calling realValue in ScmdRectBuiltins, line 11"),I8o(N1o(Uti,1,"when calling get in ScmdRectBuiltins, line 11"),"when calling realValue in ScmdRectBuiltins, line 11"),I8o(N1o(Uti,2,"when calling get in ScmdRectBuiltins, line 11"),"when calling realValue in ScmdRectBuiltins, line 11"),I8o(N1o(Uti,3,"when calling get in ScmdRectBuiltins, line 11"),"when calling realValue in ScmdRectBuiltins, line 11"),"when calling new_Rect in ScmdRectBuiltins, line 11"),"when calling new_SharedPointer in ScmdRectBuiltins, line 11")
set MM=MM-1
return Pti
endfunction
function bVS takes string OVS returns integer
local integer lVS
set w3[MM]=OVS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set lVS=yx
set px[lVS]=1425
else
call Mau("Out of memory: Could not create Group.","when calling error in ScmdDataTypes, line 730")
set lVS=0
endif
else
set bx=bx-1
set lVS=lx[bx]
set px[lVS]=1425
endif
set MM=MM-1
return lVS
endfunction
function lNt takes integer ONt returns nothing
endfunction
function qNt takes integer eNt returns nothing
call lNt(eNt)
set hK[eNt]=CreateGroup()
endfunction
function pNt takes string bNt returns integer
local integer yNt
set w3[MM]=bNt
set MM=MM+1
set yNt=bVS("when calling alloc_Group in ScmdDataTypes, line 739")
call qNt(yNt)
set MM=MM-1
return yNt
endfunction
function Ayi takes integer Eyi,integer Zyi,integer Uyi,string Iyi returns integer
local integer Pyi
set w3[MM]=Iyi
set MM=MM+1
set Pyi=l5i(pNt("when calling new_Group in ScmdUnitBuiltins, line 223"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 223")
set MM=MM-1
return Pyi
endfunction
function Ylr takes unit alr,string nlr returns boolean
local armortype dlr=ARMOR_TYPE_WHOKNOWS
local boolean flr=true
local string Rlr=nlr
local boolean Tlr
if Rlr=="ethereal" then
set dlr=ARMOR_TYPE_ETHREAL
elseif Rlr=="flesh" then
set dlr=ARMOR_TYPE_FLESH
elseif Rlr=="metal" then
set dlr=ARMOR_TYPE_METAL
elseif Rlr=="stone" then
set dlr=ARMOR_TYPE_STONE
elseif Rlr=="whoknows" then
set dlr=ARMOR_TYPE_WHOKNOWS
elseif Rlr=="wood" then
set dlr=ARMOR_TYPE_WOOD
else
set flr=false
endif
if flr then
set Tlr=B_s(alr,UNIT_IF_ARMOR_TYPE,l7s(dlr))
else
set Tlr=false
endif
set dlr=null
return Tlr
endfunction
function NPt takes integer BPt returns nothing
endfunction
function iAt takes integer sAt,boolean tAt returns nothing
call X6i(sAt,tsu(tAt))
call NPt(sAt)
set KJ[sAt]=tAt
endfunction
function oXS takes string SXS returns integer
local integer cXS
set w3[MM]=SXS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set cXS=yx
set px[cXS]=1446
else
call Mau("Out of memory: Could not create Boolean.","when calling error in ScmdDataTypes, line 352")
set cXS=0
endif
else
set bx=bx-1
set cXS=lx[bx]
set px[cXS]=1446
endif
set MM=MM-1
return cXS
endfunction
function rAt takes boolean MPt,string wAt returns integer
local integer uAt
set w3[MM]=wAt
set MM=MM+1
set uAt=oXS("when calling alloc_Boolean in ScmdDataTypes, line 361")
call iAt(uAt,MPt)
set MM=MM-1
return uAt
endfunction
function BRi takes integer KRi,integer LRi,integer XRi,string CRi returns integer
local integer VRi
set w3[MM]=CRi
set MM=MM+1
set VRi=l5i(rAt(Ylr(W2o(LRi,"when calling getEnumUnit in ScmdUnitBuiltins, line 515"),S9o(N1o(XRi,0,"when calling get in ScmdUnitBuiltins, line 515"),"when calling getInner in ScmdUnitBuiltins, line 515")),"when calling new_Boolean in ScmdUnitBuiltins, line 515"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 515")
set MM=MM-1
return VRi
endfunction
function BUi takes integer KUi,integer LUi,integer XUi,string CUi returns integer
local integer VUi
set w3[MM]=CUi
set MM=MM+1
call S9s(H9o(N1o(XUi,0,"when calling get in SotfrpGuiCoreUnit, line 73"),"when calling getInner in SotfrpGuiCoreUnit, line 73"),brs(F7s(H9o(N1o(XUi,0,"when calling get in SotfrpGuiCoreUnit, line 73"),"when calling getInner in SotfrpGuiCoreUnit, line 73")),h3,F7s(Ofr(h2o(LUi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 73"))),h3))
set VUi=x4u("when calling nullptr in SotfrpGuiCoreUnit, line 74")
set MM=MM-1
return VUi
endfunction
function npr takes unit bpr,string ypr,string ppr returns nothing
local integer epr
local integer qpr
local integer apr
set w3[MM]=ppr
set MM=MM+1
set epr=spr(ypr,"when calling getAbilityIdByName in SotFRP_AbilitySystem, line 21")
set qpr=kAs(epr,"when calling iterator in SotFRP_AbilitySystem, line 22")
loop
exitwhen not PPs(qpr,"when calling hasNext in SotFRP_AbilitySystem, line 22")
set apr=EPs(qpr,"when calling next in SotFRP_AbilitySystem, line 22")
call DKu(bpr,apr)
endloop
call HPs(qpr,"when calling close in SotFRP_AbilitySystem, line 22")
call vEc(epr,"when calling dispatch_HashList_destroyHashList in SotFRP_AbilitySystem, line 24")
set MM=MM-1
endfunction
function BWi takes integer KWi,integer LWi,integer XWi,string CWi returns integer
local integer VWi
set w3[MM]=CWi
set MM=MM+1
call npr(W2o(LWi,"when calling getEnumUnit in SotFRP_AbilitySystem, line 59"),S9o(N1o(XWi,0,"when calling get in SotFRP_AbilitySystem, line 59"),"when calling getInner in SotFRP_AbilitySystem, line 59"),"when calling removeAbility in SotFRP_AbilitySystem, line 59")
set VWi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 60")
set MM=MM-1
return VWi
endfunction
function Bai takes integer Kai,integer Lai,integer Xai,string Cai returns integer
local integer Vai
set w3[MM]=Cai
set MM=MM+1
call b_s(W2o(Lai,"when calling getEnumUnit in ScmdUnitBuiltins, line 344"),t8o(N1o(Xai,0,"when calling get in ScmdUnitBuiltins, line 344"),"when calling intValue in ScmdUnitBuiltins, line 344"),t8o(N1o(Xai,1,"when calling get in ScmdUnitBuiltins, line 344"),"when calling intValue in ScmdUnitBuiltins, line 344"))
set Vai=x4u("when calling nullptr in ScmdUnitBuiltins, line 345")
set MM=MM-1
return Vai
endfunction
function Bdi takes integer Kdi,integer Ldi,integer Xdi,string Cdi returns integer
local integer Vdi
set w3[MM]=Cdi
set MM=MM+1
set Vdi=l5i(pMt(uJu(H9o(N1o(Xdi,0,"when calling get in ScmdUnitBuiltins, line 398"),"when calling getInner in ScmdUnitBuiltins, line 398")),"when calling new_Integer in ScmdUnitBuiltins, line 398"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 398")
set MM=MM-1
return Vdi
endfunction
function Bei takes integer Kei,integer Lei,integer Xei,string Cei returns integer
local integer Vei
set w3[MM]=Cei
set MM=MM+1
call Z0s(H9o(N1o(Xei,0,"when calling get in ScmdUnitBuiltins, line 286"),"when calling getInner in ScmdUnitBuiltins, line 286"),t8o(N1o(Xei,1,"when calling get in ScmdUnitBuiltins, line 286"),"when calling intValue in ScmdUnitBuiltins, line 286"))
set Vei=x4u("when calling nullptr in ScmdUnitBuiltins, line 287")
set MM=MM-1
return Vei
endfunction
function Bii takes integer Kii,integer Lii,integer Xii,string Cii returns integer
local integer Vii
set w3[MM]=Cii
set MM=MM+1
call PlayMusicEx(S9o(N1o(Xii,0,"when calling get in ScmdSoundFunctions, line 11"),"when calling getInner in ScmdSoundFunctions, line 11"),t8o(N1o(Xii,1,"when calling get in ScmdSoundFunctions, line 11"),"when calling intValue in ScmdSoundFunctions, line 11"),t8o(N1o(Xii,2,"when calling get in ScmdSoundFunctions, line 11"),"when calling intValue in ScmdSoundFunctions, line 11"))
set Vii=x4u("when calling nullptr in ScmdSoundFunctions, line 12")
set MM=MM-1
return Vii
endfunction
function GNS takes string TNS returns integer
local integer YNS
set w3[MM]=TNS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set YNS=yx
set px[YNS]=1445
else
call Mau("Out of memory: Could not create String.","when calling error in ScmdDataTypes, line 299")
set YNS=0
endif
else
set bx=bx-1
set YNS=lx[bx]
set px[YNS]=1445
endif
set MM=MM-1
return YNS
endfunction
function J6i takes string A6i,string D6i returns integer
local integer H6i
set w3[MM]=D6i
set MM=MM+1
set H6i=GNS("when calling alloc_String in ScmdDataTypes, line 308")
call X6i(H6i,A6i)
set MM=MM-1
return H6i
endfunction
function Bxt takes integer Kxt,integer Lxt,integer Xxt,string Cxt returns integer
local integer Vxt
set w3[MM]=Cxt
set MM=MM+1
set Vxt=l5i(J6i(Vhr(S9o(N1o(Xxt,0,"when calling get in ScmdCoreBuiltins, line 130"),"when calling getInner in ScmdCoreBuiltins, line 130"),t8o(N1o(Xxt,1,"when calling get in ScmdCoreBuiltins, line 130"),"when calling intValue in ScmdCoreBuiltins, line 130")),"when calling new_String in ScmdCoreBuiltins, line 130"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 130")
set MM=MM-1
return Vxt
endfunction
function COi takes integer HOi,integer JOi,integer KOi,string LOi returns integer
local integer XOi
set w3[MM]=LOi
set MM=MM+1
call QJu(W2o(JOi,"when calling getEnumUnit in ScmdUnitBuiltins, line 118"),I8o(N1o(KOi,0,"when calling get in ScmdUnitBuiltins, line 118"),"when calling realValue in ScmdUnitBuiltins, line 118"))
set XOi=x4u("when calling nullptr in ScmdUnitBuiltins, line 119")
set MM=MM-1
return XOi
endfunction
function CYi takes integer HYi,integer JYi,integer KYi,string LYi returns integer
local integer XYi
set w3[MM]=LYi
set MM=MM+1
call P6r(W2o(JYi,"when calling getEnumUnit in ScmdUnitBuiltins, line 597"),t8o(N1o(KYi,0,"when calling get in ScmdUnitBuiltins, line 597"),"when calling intValue in ScmdUnitBuiltins, line 597"))
set XYi=x4u("when calling nullptr in ScmdUnitBuiltins, line 598")
set MM=MM-1
return XYi
endfunction
function Pbu takes integer Ebu,integer Zbu,integer Ubu,integer Ibu returns integer
set m3=Ebu
set Q3=Zbu
set W3=Ubu
return m3
endfunction
function Fbu takes playercolor qbu returns integer
local integer abu
local integer nbu
local integer dbu
local integer fbu
local integer Rbu
local integer Tbu
local integer Ybu
local integer Gbu
local integer gbu
local integer hbu
if wEu(qbu)<=Qp then
set fbu=wEu(qbu)
set Rbu=Wp[fbu]
set Tbu=Ep[fbu]
set Ybu=Zp[fbu]
set abu=Rbu
set nbu=Tbu
set dbu=Ybu
else
set Gbu=Pbu(Gp,gp,hp,Fp)
set gbu=Q3
set hbu=W3
set abu=Gbu
set nbu=gbu
set dbu=hbu
endif
set j3=abu
set x3=nbu
set v3=dbu
return j3
endfunction
function LWu takes player KWu returns playercolor
return GetPlayerColor(KWu)
endfunction
function vbu takes integer kbu,integer jbu,integer xbu returns string
return"|cff"+lyu(kbu)+lyu(jbu)+lyu(xbu)
endfunction
function Dqt takes integer Iqt,integer Pqt,string Aqt returns string
return"|cFF808040[|r"+vbu(Fbu(LWu(pa[Pqt])),x3,v3)+"IC|r"+"|cFF808040]|r "+Aqt
endfunction
function ebu takes player pbu returns string
return vbu(Fbu(LWu(pbu)),x3,v3)+GetPlayerName(pbu)+"|r"
endfunction
function Lqt takes integer Hqt,integer Jqt,string Kqt returns string
return"|cff808040[OOC]|r "+ebu(pa[Jqt])+": "+Kqt
endfunction
function uat takes integer Nqt,integer Mqt,string wat returns string
return"|cff808040[SYS]|r "+wat
endfunction
function F3c takes integer T3c,integer Y3c,string G3c,string g3c returns string
local string h3c
set w3[MM]=g3c
set MM=MM+1
if aj[T3c]==0 then
if T3c==0 then
call Mau("Nullpointer exception when calling IMessageFormatter.call","when calling error in SLangChatSystem, line 133")
else
call Mau("Called IMessageFormatter.call on invalid object.","when calling error in SLangChatSystem, line 133")
endif
endif
if aj[T3c]<=1222 then
if aj[T3c]<=1221 then
set h3c=Dqt(T3c,Y3c,G3c)
else
set h3c=Lqt(T3c,Y3c,G3c)
endif
else
set h3c=uat(T3c,Y3c,G3c)
endif
set MM=MM-1
return h3c
endfunction
function D1s takes integer Z1s,integer U1s returns integer
local integer I1s=RP[Z1s]
local integer P1s=0
local integer A1s=U1s
loop
exitwhen P1s>A1s
set I1s=qP[I1s]
set P1s=P1s+1
endloop
return I1s
endfunction
function KDc takes integer ADc,integer DDc,string HDc returns integer
local integer JDc
set w3[MM]=HDc
set MM=MM+1
if WF[ADc]==0 then
if ADc==0 then
call Mau("Nullpointer exception when calling LinkedList.getEntry","when calling error in LinkedList, line 381")
else
call Mau("Called LinkedList.getEntry on invalid object.","when calling error in LinkedList, line 381")
endif
endif
set JDc=D1s(ADc,DDc)
set MM=MM-1
return JDc
endfunction
function E1s takes integer v1s,integer m1s,string Q1s returns integer
local integer W1s
set w3[MM]=Q1s
set MM=MM+1
set W1s=pP[KDc(v1s,m1s,"when calling getEntry in LinkedList, line 66")]
set MM=MM-1
return W1s
endfunction
function wDc takes integer VAc,integer BAc,string NAc returns integer
local integer MAc
set w3[MM]=NAc
set MM=MM+1
if WF[VAc]==0 then
if VAc==0 then
call Mau("Nullpointer exception when calling LinkedList.get","when calling error in LinkedList, line 65")
else
call Mau("Called LinkedList.get on invalid object.","when calling error in LinkedList, line 65")
endif
endif
set MAc=E1s(VAc,BAc,"when calling get in LinkedList, line 65")
set MM=MM-1
return MAc
endfunction
function gdt takes integer ddt,integer fdt,string Rdt returns string
local integer Tdt
local string Ydt
local integer Gdt
set w3[MM]=Rdt
set MM=MM+1
set Gdt=YJ[ddt]
if gJ[ddt]>Va then
set Tdt=fdt-gJ[ddt]+Va
else
set Tdt=fdt
endif
set Ydt=gvr(wDc(Gdt,Tdt,"when calling get in SLangChatSystem, line 117"),"when calling stringFromIndex in SLangChatSystem, line 117")
set MM=MM-1
return Ydt
endfunction
function K3c takes integer A3c,integer D3c,string H3c returns string
local string J3c
set w3[MM]=H3c
set MM=MM+1
if Uj[A3c]==0 then
if A3c==0 then
call Mau("Nullpointer exception when calling Log.get","when calling error in SLangChatSystem, line 116")
else
call Mau("Called Log.get on invalid object.","when calling error in SLangChatSystem, line 116")
endif
endif
set J3c=gdt(A3c,D3c,"when calling get in SLangChatSystem, line 116")
set MM=MM-1
return J3c
endfunction
function pku takes integer lku,string bku returns string
local string yku
set w3[MM]=bku
set MM=MM+1
set yku=MFu(lku,"","when calling joinBy in LinkedList, line 576")
set MM=MM-1
return yku
endfunction
function wfu takes framehandle Ndu,string Mdu returns nothing
call BlzFrameSetText(Ndu,Mdu)
endfunction
function Sft takes integer sft,string tft returns nothing
local string ift
set w3[MM]=tft
set MM=MM+1
if mJ[sft]then
set ift=K3c(jJ[sft],vJ[sft],"when calling get in SLangChatSystem, line 69")
if xJ[sft]<Ca then
call Cqo(QJ[sft],Rvr(ift,"when calling stringToIndex in SLangChatSystem, line 72"),"when calling add in SLangChatSystem, line 72")
set xJ[sft]=xJ[sft]+1
else
call gvr(oDc(QJ[sft],"when calling dequeue in SLangChatSystem, line 77"),"when calling stringFromIndex in SLangChatSystem, line 77")
call Cqo(QJ[sft],Rvr(ift,"when calling stringToIndex in SLangChatSystem, line 79"),"when calling add in SLangChatSystem, line 79")
endif
set vJ[sft]=vJ[sft]+1
call wfu(kJ[sft],pku(QJ[sft],"when calling join in SLangChatSystem, line 82"))
endif
set MM=MM-1
endfunction
function c1o takes integer i1o,string S1o returns nothing
set w3[MM]=S1o
set MM=MM+1
if Dj[i1o]==0 then
if i1o==0 then
call Mau("Nullpointer exception when calling LogBoard.refresh","when calling error in SLangChatSystem, line 66")
else
call Mau("Called LogBoard.refresh on invalid object.","when calling error in SLangChatSystem, line 66")
endif
endif
call Sft(i1o,"when calling refresh in SLangChatSystem, line 66")
set MM=MM-1
endfunction
function vdt takes integer hdt,string Fdt,string kdt returns nothing
local integer jdt
local integer xdt
set w3[MM]=kdt
set MM=MM+1
set gJ[hdt]=gJ[hdt]+1
if RDc(YJ[hdt],"when calling size in SLangChatSystem, line 107")==Va then
call gvr(oDc(YJ[hdt],"when calling dequeue in SLangChatSystem, line 108"),"when calling stringFromIndex in SLangChatSystem, line 108")
endif
call Cqo(YJ[hdt],Rvr("|cFFFFCC00"+tgu(gJ[hdt])+".|r "+Fdt+"|n","when calling stringToIndex in SLangChatSystem, line 109"),"when calling add in SLangChatSystem, line 109")
set jdt=kAs(GJ[hdt],"when calling iterator in SLangChatSystem, line 110")
loop
exitwhen not PPs(jdt,"when calling hasNext in SLangChatSystem, line 110")
set xdt=EPs(jdt,"when calling next in SLangChatSystem, line 110")
call c1o(xdt,"when calling refresh in SLangChatSystem, line 111")
endloop
call HPs(jdt,"when calling close in SLangChatSystem, line 110")
set MM=MM-1
endfunction
function P3c takes integer Z3c,string U3c,string I3c returns nothing
set w3[MM]=I3c
set MM=MM+1
if Uj[Z3c]==0 then
if Z3c==0 then
call Mau("Nullpointer exception when calling Log.add","when calling error in SLangChatSystem, line 105")
else
call Mau("Called Log.add on invalid object.","when calling error in SLangChatSystem, line 105")
endif
endif
call vdt(Z3c,U3c,"when calling add in SLangChatSystem, line 105")
set MM=MM-1
endfunction
function xFr takes string gFr,string hFr,integer FFr returns integer
local integer kFr=FFr
local integer jFr=vhr(gFr)-vhr(hFr)
loop
exitwhen kFr>jFr
if Dhr(gFr,kFr,kFr+vhr(hFr))==hFr then
return kFr
endif
set kFr=kFr+1
endloop
return-1
endfunction
function PFr takes string WFr,string EFr,string ZFr returns string
local string UFr=WFr
local integer IFr
if vhr(EFr)>0 then
set IFr=GFr(WFr,EFr)
loop
exitwhen not(IFr!=-1)
set UFr=Dhr(UFr,0,IFr)+ZFr+Dhr(UFr,IFr+vhr(EFr),vhr(UFr))
set IFr=xFr(UFr,EFr,IFr+vhr(ZFr))
endloop
endif
return UFr
endfunction
function Bnt takes integer Jnt,integer Knt,string Lnt,player Xnt,string Cnt returns nothing
local string Vnt
set w3[MM]=Cnt
set MM=MM+1
set Vnt=PFr(F3c(RJ[Jnt],Knt,Lnt,"when calling call in SLangChatSystem, line 148"),"|n"," ")
call FZu(Vnt,60.,Xnt)
call P3c(TJ[Jnt],Vnt,"when calling add in SLangChatSystem, line 150")
set MM=MM-1
endfunction
function a3c takes integer b3c,integer y3c,string p3c,player e3c,string q3c returns nothing
set w3[MM]=q3c
set MM=MM+1
if Qj[b3c]==0 then
if b3c==0 then
call Mau("Nullpointer exception when calling Channel.send","when calling error in SLangChatSystem, line 147")
else
call Mau("Called Channel.send on invalid object.","when calling error in SLangChatSystem, line 147")
endif
endif
call Bnt(b3c,y3c,p3c,e3c,"when calling send in SLangChatSystem, line 147")
set MM=MM-1
endfunction
function Cat takes integer Hat,integer Jat,integer Kat,string Lat returns integer
local integer Xat
set w3[MM]=Lat
set MM=MM+1
call a3c(Ka,h2o(Jat,"when calling getPlayerId in SLangChatSystem, line 203"),S9o(N1o(Kat,0,"when calling get in SLangChatSystem, line 203"),"when calling getInner in SLangChatSystem, line 203"),ea,"when calling send in SLangChatSystem, line 203")
set Xat=x4u("when calling nullptr in SLangChatSystem, line 204")
set MM=MM-1
return Xat
endfunction
function kUu takes real YUu,real GUu,real gUu returns real
local real hUu
local real FUu
if YUu<=GUu then
set FUu=GUu
else
if YUu>=gUu then
set hUu=gUu
else
set hUu=YUu
endif
set FUu=hUu
endif
return FUu
endfunction
function Cgi takes integer Hgi,integer Jgi,integer Kgi,string Lgi returns integer
local integer Xgi
set w3[MM]=Lgi
set MM=MM+1
call f0s(H9o(N1o(Kgi,0,"when calling get in ScmdUnitBuiltins, line 666"),"when calling getInner in ScmdUnitBuiltins, line 666"),kUu(I8o(N1o(Kgi,1,"when calling get in ScmdUnitBuiltins, line 666"),"when calling realValue in ScmdUnitBuiltins, line 666"),NT,BT))
set Xgi=x4u("when calling nullptr in ScmdUnitBuiltins, line 667")
set MM=MM-1
return Xgi
endfunction
function PNt takes integer INt returns nothing
endfunction
function HNt takes integer ANt,handle DNt returns nothing
call PNt(ANt)
set FK[ANt]=DNt
endfunction
function Z_i takes integer E_i returns nothing
endfunction
function P_i takes integer U_i,widget I_i returns nothing
call HNt(U_i,I_i)
call Z_i(U_i)
set iL[U_i]=I_i
endfunction
function a3t takes integer q3t returns nothing
endfunction
function G3t takes integer T3t,item Y3t returns nothing
call P_i(T3t,Y3t)
call a3t(T3t)
set xK[T3t]=Y3t
endfunction
function HVS takes string AVS returns integer
local integer DVS
set w3[MM]=AVS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set DVS=yx
set px[DVS]=1430
else
call Mau("Out of memory: Could not create Item.","when calling error in ScmdDataTypes, line 807")
set DVS=0
endif
else
set bx=bx-1
set DVS=lx[bx]
set px[DVS]=1430
endif
set MM=MM-1
return DVS
endfunction
function R3t takes item n3t,string d3t returns integer
local integer f3t
set w3[MM]=d3t
set MM=MM+1
set f3t=HVS("when calling alloc_Item in ScmdDataTypes, line 816")
call G3t(f3t,n3t)
set MM=MM-1
return f3t
endfunction
function Cwi takes integer Hwi,integer Jwi,integer Kwi,string Lwi returns integer
local integer Xwi
set w3[MM]=Lwi
set MM=MM+1
set Xwi=l5i(R3t(L7s(W2o(Jwi,"when calling getEnumUnit in ScmdItemBuiltins, line 9"),t8o(N1o(Kwi,0,"when calling get in ScmdItemBuiltins, line 9"),"when calling intValue in ScmdItemBuiltins, line 9")),"when calling new_Item in ScmdItemBuiltins, line 9"),"when calling new_SharedPointer in ScmdItemBuiltins, line 9")
set MM=MM-1
return Xwi
endfunction
function OPt takes integer SPt,integer cPt,string oPt returns nothing
set w3[MM]=oPt
set MM=MM+1
call tZc(JJ[SPt],cPt,"when calling removeAt in ScmdDataTypes, line 1259")
set MM=MM-1
endfunction
function D1o takes integer I1o,integer P1o,string A1o returns nothing
set w3[MM]=A1o
set MM=MM+1
if nx[I1o]==0 then
if I1o==0 then
call Mau("Nullpointer exception when calling Arguments.removeAt","when calling error in ScmdDataTypes, line 1258")
else
call Mau("Called Arguments.removeAt on invalid object.","when calling error in ScmdDataTypes, line 1258")
endif
endif
call OPt(I1o,P1o,"when calling removeAt in ScmdDataTypes, line 1258")
set MM=MM-1
endfunction
function TYu takes hashtable dYu,integer fYu,integer RYu returns rect
return LoadRectHandle(dYu,fYu,RYu)
endfunction
function J6S takes integer D6S,integer H6S returns rect
return TYu(VR,D6S,H6S)
endfunction
function cco takes integer sco,integer tco,string ico returns rect
local rect Sco
set w3[MM]=ico
set MM=MM+1
if Yh[sco]==0 then
if sco==0 then
call Mau("Nullpointer exception when calling Table.loadRect","when calling error in Table, line 147")
else
call Mau("Called Table.loadRect on invalid object.","when calling error in Table, line 147")
endif
endif
set Sco=J6S(sco,tco)
set MM=MM-1
set Edw=Sco
set Sco=null
return Edw
endfunction
function Mvr takes integer Vvr,string Bvr returns rect
local rect Nvr
set w3[MM]=Bvr
set MM=MM+1
call yco(YT,0,ConvertFogState(Vvr),"when calling saveFogState in TypeCasting, line 137")
set Nvr=cco(YT,0,"when calling loadRect in TypeCasting, line 138")
set MM=MM-1
set Qnw=Nvr
set Nvr=null
return Qnw
endfunction
function Zcc takes string Wcc returns integer
local integer Ecc
set w3[MM]=Wcc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set Ecc=NY
set MY[Ecc]=792
else
call Mau("Out of memory: Could not create ForForceCallback_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 146")
set Ecc=0
endif
else
set BY=BY-1
set Ecc=VY[BY]
set MY[Ecc]=792
endif
set MM=MM-1
return Ecc
endfunction
function nsu takes boolexpr asu returns nothing
call DestroyBoolExpr(asu)
endfunction
function qsu takes boolexpr psu,boolexpr esu returns boolexpr
return And(psu,esu)
endfunction
function sWu takes player NQu,rect MQu,boolexpr wWu returns group
local group uWu=CreateGroup()
local boolexpr rWu
set ba=NQu
set rWu=qsu(ya,wWu)
call GroupEnumUnitsInRect(uWu,MQu,rWu)
call nsu(rWu)
set enw=uWu
set uWu=null
set rWu=null
return enw
endfunction
function fpt takes integer dpt returns rect
return MH[dpt]
endfunction
function ZMc takes integer QMc,string WMc returns rect
local rect EMc
set w3[MM]=WMc
set MM=MM+1
if wj[QMc]==0 then
if QMc==0 then
call Mau("Nullpointer exception when calling RectDrawing.asRect","when calling error in RectDrawing, line 110")
else
call Mau("Called RectDrawing.asRect on invalid object.","when calling error in RectDrawing, line 110")
endif
endif
set EMc=fpt(QMc)
set MM=MM-1
set ldw=EMc
set EMc=null
return ldw
endfunction
function umr takes rect wmr returns integer
return l7s(wmr)
endfunction
function vGr takes integer hGr,string FGr returns integer
local integer kGr
local integer jGr
local integer xGr
set w3[MM]=FGr
set MM=MM+1
set kGr=a4s("when calling new_LinkedList in SotfrpGuiRegions, line 78")
set jGr=kAs(dR[hGr],"when calling iterator in SotfrpGuiRegions, line 79")
loop
exitwhen not PPs(jGr,"when calling hasNext in SotfrpGuiRegions, line 79")
set xGr=EPs(jGr,"when calling next in SotfrpGuiRegions, line 79")
call Cqo(kGr,umr(ZMc(xGr,"when calling asRect in SotfrpGuiRegions, line 80")),"when calling add in SotfrpGuiRegions, line 80")
endloop
call HPs(jGr,"when calling close in SotfrpGuiRegions, line 79")
set MM=MM-1
return kGr
endfunction
function KLt takes integer HLt,unit JLt returns nothing
set SK[HLt]=JLt
endfunction
function x2o takes integer F2o,unit k2o,string j2o returns nothing
set w3[MM]=j2o
set MM=MM+1
if hx[F2o]==0 then
if F2o==0 then
call Mau("Nullpointer exception when calling Context.setEnumUnit","when calling error in ScmdDataTypes, line 1160")
else
call Mau("Called Context.setEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1160")
endif
endif
call KLt(F2o,k2o)
set MM=MM-1
endfunction
function DKi takes integer YKi,integer GKi,integer gKi,string hKi returns integer
local integer FKi
local group kKi
local integer jKi
local integer xKi
local rect vKi
local group mKi
local unit QKi
local group WKi
local unit EKi
local group ZKi
local unit UKi
local integer IKi
local integer PKi
local integer AKi
set w3[MM]=hKi
set MM=MM+1
set FKi=x4u("when calling nullptr in SotfrpGuiRegions, line 135")
set kKi=CreateGroup()
set jKi=vGr(h2o(GKi,"when calling getPlayerId in SotfrpGuiRegions, line 137"),"when calling getSelectedRects in SotfrpGuiRegions, line 137")
set xKi=x1s(jKi,"when calling iterator in SotfrpGuiRegions, line 138")
loop
exitwhen not t1s(xKi)
set vKi=Mvr(r1s(xKi),"when calling rectFromIndex in SotfrpGuiRegions, line 138")
set mKi=sWu(pa[h2o(GKi,"when calling getPlayerId in SotfrpGuiRegions, line 139")],vKi,Filter(rnw))
set WKi=mKi
loop
exitwhen not lTu(WKi)
set QKi=aTu(WKi)
call Iqo(kKi,QKi)
endloop
call STu(mKi)
endloop
call c1s(xKi,"when calling close in SotfrpGuiRegions, line 138")
call CAc(jKi,"when calling dispatch_LinkedList_destroyLinkedList in SotfrpGuiRegions, line 143")
set EKi=W2o(GKi,"when calling getEnumUnit in SotfrpGuiRegions, line 144")
set ZKi=yTu(kKi)
loop
exitwhen not lTu(ZKi)
set UKi=aTu(ZKi)
set IKi=Zcc("when calling alloc_ForForceCallback_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 146")
set bX[IKi]=GKi
set yX[IKi]=UKi
set pX[IKi]=gKi
set eX[IKi]=FKi
call Inu(IKi,"when calling execute in SotfrpGuiRegions, line 146")
set PKi=px[f7o(FKi,"when calling get in SotfrpGuiRegions, line 152")]
if PKi>=1422 and PKi<=1423 then
exitwhen true
endif
endloop
call dTu(ZKi)
call x2o(GKi,EKi,"when calling setEnumUnit in SotfrpGuiRegions, line 154")
call STu(kKi)
set AKi=FKi
set MM=MM-1
set kKi=null
set vKi=null
set mKi=null
set QKi=null
set WKi=null
set EKi=null
set ZKi=null
set UKi=null
return AKi
endfunction
function DOi takes integer ZOi,integer UOi,integer IOi,string POi returns integer
local integer AOi
set w3[MM]=POi
set MM=MM+1
call dJu(H9o(N1o(IOi,0,"when calling get in ScmdUnitBuiltins, line 114"),"when calling getInner in ScmdUnitBuiltins, line 114"),t8o(N1o(IOi,1,"when calling get in ScmdUnitBuiltins, line 114"),"when calling intValue in ScmdUnitBuiltins, line 114"),t8o(N1o(IOi,2,"when calling get in ScmdUnitBuiltins, line 114"),"when calling intValue in ScmdUnitBuiltins, line 114"),t8o(N1o(IOi,3,"when calling get in ScmdUnitBuiltins, line 114"),"when calling intValue in ScmdUnitBuiltins, line 114"),t8o(N1o(IOi,4,"when calling get in ScmdUnitBuiltins, line 114"),"when calling intValue in ScmdUnitBuiltins, line 114"))
set AOi=x4u("when calling nullptr in ScmdUnitBuiltins, line 115")
set MM=MM-1
return AOi
endfunction
function VPt takes integer CPt returns boolean
return KJ[CPt]
endfunction
function c4o takes integer t4o,string i4o returns boolean
local boolean S4o
set w3[MM]=i4o
set MM=MM+1
if px[t4o]==0 then
if t4o==0 then
call Mau("Nullpointer exception when calling Boolean.booleanValue","when calling error in ScmdDataTypes, line 404")
else
call Mau("Called Boolean.booleanValue on invalid object.","when calling error in ScmdDataTypes, line 404")
endif
endif
if px[t4o]<=1433 then
set S4o=VPt(t4o)
else
set S4o=VPt(t4o)
endif
set MM=MM-1
return S4o
endfunction
function DYi takes integer ZYi,integer UYi,integer IYi,string PYi returns integer
local integer AYi
set w3[MM]=PYi
set MM=MM+1
set AYi=l5i(pMt(F6r(H9o(N1o(IYi,0,"when calling get in ScmdUnitBuiltins, line 594"),"when calling getInner in ScmdUnitBuiltins, line 594"),c4o(N1o(IYi,1,"when calling get in ScmdUnitBuiltins, line 594"),"when calling booleanValue in ScmdUnitBuiltins, line 594")),"when calling new_Integer in ScmdUnitBuiltins, line 594"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 594")
set MM=MM-1
return AYi
endfunction
function Yfo takes integer ffo,integer Rfo,string Tfo returns nothing
set w3[MM]=Tfo
set MM=MM+1
call Nno(sL[ffo],Rfo,"when calling add in ScmdDataTypes, line 1104")
set MM=MM-1
endfunction
function Ffo takes integer Gfo,integer gfo,string hfo returns nothing
set w3[MM]=hfo
set MM=MM+1
if px[Gfo]==0 then
if Gfo==0 then
call Mau("Nullpointer exception when calling Vector.push","when calling error in ScmdDataTypes, line 1102")
else
call Mau("Called Vector.push on invalid object.","when calling error in ScmdDataTypes, line 1102")
endif
endif
call Yfo(Gfo,gfo,"when calling push in ScmdDataTypes, line 1102")
set MM=MM-1
endfunction
function P0i takes integer I0i returns nothing
endfunction
function L0i takes integer J0i,string K0i returns nothing
set w3[MM]=K0i
set MM=MM+1
call P0i(J0i)
set sL[J0i]=rDs("when calling new_HashList in ScmdDataTypes, line 1062")
set MM=MM-1
endfunction
function QMS takes string vMS returns integer
local integer mMS
set w3[MM]=vMS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set mMS=yx
set px[mMS]=1450
else
call Mau("Out of memory: Could not create Vector.","when calling error in ScmdDataTypes, line 1052")
set mMS=0
endif
else
set bx=bx-1
set mMS=lx[bx]
set px[mMS]=1450
endif
set MM=MM-1
return mMS
endfunction
function H0i takes string A0i returns integer
local integer D0i
set w3[MM]=A0i
set MM=MM+1
set D0i=QMS("when calling alloc_Vector in ScmdDataTypes, line 1061")
call L0i(D0i,"when calling construct_Vector in ScmdDataTypes, line 1061")
set MM=MM-1
return D0i
endfunction
function nPt takes integer ePt,string qPt returns integer
local integer aPt
set w3[MM]=qPt
set MM=MM+1
set aPt=vZc(JJ[ePt],"when calling iterator in ScmdDataTypes, line 1265")
set MM=MM-1
return aPt
endfunction
function DZt takes integer QZt,integer WZt,integer EZt,string ZZt returns integer
local integer UZt
local integer IZt
local integer PZt
local integer AZt
set w3[MM]=ZZt
set MM=MM+1
set UZt=H0i("when calling new_Vector in ScmdCoreBuiltins, line 308")
set IZt=nPt(EZt,"when calling iterator in ScmdCoreBuiltins, line 309")
loop
exitwhen not PPs(IZt,"when calling hasNext in ScmdCoreBuiltins, line 309")
set PZt=EPs(IZt,"when calling next in ScmdCoreBuiltins, line 309")
call Ffo(UZt,b7o(PZt,"when calling clone in ScmdCoreBuiltins, line 310"),"when calling push in ScmdCoreBuiltins, line 310")
endloop
call HPs(IZt,"when calling close in ScmdCoreBuiltins, line 309")
set AZt=l5i(UZt,"when calling new_SharedPointer in ScmdCoreBuiltins, line 311")
set MM=MM-1
return AZt
endfunction
function Idt takes integer mdt,string Qdt,player Wdt,string Edt returns nothing
local integer Zdt
local string Udt
set w3[MM]=Edt
set MM=MM+1
call PreloadGenClear()
set Zdt=x1s(YJ[mdt],"when calling iterator in SLangChatSystem, line 121")
loop
exitwhen not t1s(Zdt)
set Udt=gvr(r1s(Zdt),"when calling stringFromIndex in SLangChatSystem, line 121")
call Preload(Udt)
endloop
call c1s(Zdt,"when calling close in SLangChatSystem, line 121")
if ea==Wdt then
call PreloadGenEnd("SotFRP\\LogDumps\\"+Qdt+".pld")
endif
set MM=MM-1
endfunction
function B3c takes integer L3c,string X3c,player C3c,string V3c returns nothing
set w3[MM]=V3c
set MM=MM+1
if Uj[L3c]==0 then
if L3c==0 then
call Mau("Nullpointer exception when calling Log.dump","when calling error in SLangChatSystem, line 119")
else
call Mau("Called Log.dump on invalid object.","when calling error in SLangChatSystem, line 119")
endif
endif
call Idt(L3c,X3c,C3c,"when calling dump in SLangChatSystem, line 119")
set MM=MM-1
endfunction
function Mnt takes integer Nnt returns integer
return TJ[Nnt]
endfunction
function R3c takes integer n3c,string d3c returns integer
local integer f3c
set w3[MM]=d3c
set MM=MM+1
if Qj[n3c]==0 then
if n3c==0 then
call Mau("Nullpointer exception when calling Channel.log","when calling error in SLangChatSystem, line 152")
else
call Mau("Called Channel.log on invalid object.","when calling error in SLangChatSystem, line 152")
endif
endif
set f3c=Mnt(n3c)
set MM=MM-1
return f3c
endfunction
function FCS takes string gCS returns integer
local integer hCS
set w3[MM]=gCS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set hCS=yx
set px[hCS]=1422
else
call Mau("Out of memory: Could not create Exception.","when calling error in ScmdDataTypes, line 183")
set hCS=0
endif
else
set bx=bx-1
set hCS=lx[bx]
set px[hCS]=1422
endif
set MM=MM-1
return hCS
endfunction
function FCt takes integer hCt returns nothing
endfunction
function xCt takes integer kCt,string jCt returns nothing
call FCt(kCt)
set dK[kCt]=jCt
set fK[kCt]=0
endfunction
function qCt takes string yCt,string pCt returns integer
local integer eCt
set w3[MM]=pCt
set MM=MM+1
set eCt=FCS("when calling alloc_Exception in ScmdDataTypes, line 194")
call xCt(eCt,yCt)
set MM=MM-1
return eCt
endfunction
function Dat takes integer Qat,integer Wat,integer Eat,string Zat returns integer
local boolean Uat
local string Iat
local integer Pat
local integer Aat
set w3[MM]=Zat
set MM=MM+1
set Uat=true
set Iat=bFr(S9o(N1o(Eat,0,"when calling get in SLangChatSystem, line 192"),"when calling getInner in SLangChatSystem, line 192"))
if Iat=="IC" then
call B3c(R3c(Ka,"when calling log in SLangChatSystem, line 194"),S9o(N1o(Eat,1,"when calling get in SLangChatSystem, line 194"),"when calling getInner in SLangChatSystem, line 194"),pa[h2o(Wat,"when calling getPlayerId in SLangChatSystem, line 194")],"when calling dump in SLangChatSystem, line 194")
elseif Iat=="OOC" then
call B3c(R3c(La,"when calling log in SLangChatSystem, line 196"),S9o(N1o(Eat,1,"when calling get in SLangChatSystem, line 196"),"when calling getInner in SLangChatSystem, line 196"),pa[h2o(Wat,"when calling getPlayerId in SLangChatSystem, line 196")],"when calling dump in SLangChatSystem, line 196")
else
set Uat=false
endif
if Uat then
set Pat=x4u("when calling nullptr in SLangChatSystem, line 199")
else
set Pat=l5i(qCt("Wrong channel","when calling new_Exception in SLangChatSystem, line 199"),"when calling new_SharedPointer in SLangChatSystem, line 199")
endif
set Aat=Pat
set MM=MM-1
return Aat
endfunction
function Dgi takes integer Zgi,integer Ugi,integer Igi,string Pgi returns integer
local integer Agi
set w3[MM]=Pgi
set MM=MM+1
call f0s(W2o(Ugi,"when calling getEnumUnit in ScmdUnitBuiltins, line 663"),kUu(I8o(N1o(Igi,0,"when calling get in ScmdUnitBuiltins, line 663"),"when calling realValue in ScmdUnitBuiltins, line 663"),NT,BT))
set Agi=x4u("when calling nullptr in ScmdUnitBuiltins, line 664")
set MM=MM-1
return Agi
endfunction
function hBt takes integer YBt,string GBt returns integer
local integer gBt
set w3[MM]=GBt
set MM=MM+1
set gBt=MCS("when calling alloc_GenericSharedPointer in ScmdDataTypes, line 122")
call xBt(gBt,YBt,"when calling construct_GenericSharedPointer2 in ScmdDataTypes, line 122")
set MM=MM-1
return gBt
endfunction
function Dwi takes integer Wwi,integer Ewi,integer Zwi,string Uwi returns integer
local string Iwi
local integer Pwi
local integer Awi
set w3[MM]=Uwi
set MM=MM+1
set Iwi=S9o(N1o(Zwi,0,"when calling get in ScmdFogOfWarBuiltins, line 42"),"when calling getInner in ScmdFogOfWarBuiltins, line 42")
if vhr(Iwi)==4 then
set Pwi=pMt(imu(Iwi,"when calling fromRawCode in ScmdFogOfWarBuiltins, line 43"),"when calling new_Integer in ScmdFogOfWarBuiltins, line 43")
else
set Pwi=qCt("Raw code must be 4 chars long","when calling new_Exception in ScmdFogOfWarBuiltins, line 43")
endif
set Awi=hBt(Pwi,"when calling new_GenericSharedPointer in ScmdFogOfWarBuiltins, line 43")
set MM=MM-1
return Awi
endfunction
function EOi takes integer xOi,integer vOi,integer mOi,string QOi returns integer
local integer WOi
set w3[MM]=QOi
set MM=MM+1
call dJu(W2o(vOi,"when calling getEnumUnit in ScmdUnitBuiltins, line 111"),t8o(N1o(mOi,0,"when calling get in ScmdUnitBuiltins, line 111"),"when calling intValue in ScmdUnitBuiltins, line 111"),t8o(N1o(mOi,1,"when calling get in ScmdUnitBuiltins, line 111"),"when calling intValue in ScmdUnitBuiltins, line 111"),t8o(N1o(mOi,2,"when calling get in ScmdUnitBuiltins, line 111"),"when calling intValue in ScmdUnitBuiltins, line 111"),t8o(N1o(mOi,3,"when calling get in ScmdUnitBuiltins, line 111"),"when calling intValue in ScmdUnitBuiltins, line 111"))
set WOi=x4u("when calling nullptr in ScmdUnitBuiltins, line 112")
set MM=MM-1
return WOi
endfunction
function vPt takes integer jPt,string xPt returns nothing
set w3[MM]=xPt
set MM=MM+1
set JJ[jPt]=rDs("when calling new_HashList in ScmdDataTypes, line 1245")
set MM=MM-1
endfunction
function UPt takes integer EPt,string ZPt returns nothing
set w3[MM]=ZPt
set MM=MM+1
call vPt(EPt,"when calling Arguments_init in ScmdDataTypes, line 1243")
set MM=MM-1
endfunction
function rXS takes string wXS returns integer
local integer uXS
set w3[MM]=wXS
set MM=MM+1
if qx==0 then
if ax<32768 then
set ax=ax+1
set uXS=ax
set nx[uXS]=636
else
call Mau("Out of memory: Could not create Arguments.","when calling error in ScmdDataTypes, line 1243")
set uXS=0
endif
else
set qx=qx-1
set uXS=ex[qx]
set nx[uXS]=636
endif
set MM=MM-1
return uXS
endfunction
function WPt takes string mPt returns integer
local integer QPt
set w3[MM]=mPt
set MM=MM+1
set QPt=rXS("when calling alloc_Arguments in ScmdDataTypes, line 1243")
call UPt(QPt,"when calling construct_Arguments in ScmdDataTypes, line 1243")
set MM=MM-1
return QPt
endfunction
function gVt takes integer YVt,string GVt returns nothing
set w3[MM]=GVt
set MM=MM+1
set TK[YVt]=WPt("when calling new_Arguments in ScmdDataTypes, line 1581")
set MM=MM-1
endfunction
function PVt takes integer ZVt,integer UVt,string IVt returns nothing
set w3[MM]=IVt
set MM=MM+1
call gVt(ZVt,"when calling Expression_init in ScmdDataTypes, line 1591")
set RK[ZVt]=b7o(UVt,"when calling clone in ScmdDataTypes, line 1592")
set MM=MM-1
endfunction
function ZCS takes string WCS returns integer
local integer ECS
set w3[MM]=WCS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set ECS=yx
set px[ECS]=1424
else
call Mau("Out of memory: Could not create Expression.","when calling error in ScmdDataTypes, line 1573")
set ECS=0
endif
else
set bx=bx-1
set ECS=lx[bx]
set px[ECS]=1424
endif
set MM=MM-1
return ECS
endfunction
function EVt takes integer mVt,string QVt returns integer
local integer WVt
set w3[MM]=QVt
set MM=MM+1
set WVt=ZCS("when calling alloc_Expression in ScmdDataTypes, line 1591")
call PVt(WVt,mVt,"when calling construct_Expression2 in ScmdDataTypes, line 1591")
set MM=MM-1
return WVt
endfunction
function lpr takes unit tpr,string ipr,string Spr returns nothing
local integer cpr
local integer opr
local integer Opr
set w3[MM]=Spr
set MM=MM+1
set cpr=spr(ipr,"when calling getAbilityIdByName in SotFRP_AbilitySystem, line 15")
set opr=kAs(cpr,"when calling iterator in SotFRP_AbilitySystem, line 16")
loop
exitwhen not PPs(opr,"when calling hasNext in SotFRP_AbilitySystem, line 16")
set Opr=EPs(opr,"when calling next in SotFRP_AbilitySystem, line 16")
call mKu(tpr,Opr)
endloop
call HPs(opr,"when calling close in SotFRP_AbilitySystem, line 16")
call vEc(cpr,"when calling dispatch_HashList_destroyHashList in SotFRP_AbilitySystem, line 18")
set MM=MM-1
endfunction
function EWi takes integer xWi,integer vWi,integer mWi,string QWi returns integer
local integer WWi
set w3[MM]=QWi
set MM=MM+1
call lpr(H9o(N1o(mWi,0,"when calling get in SotFRP_AbilitySystem, line 52"),"when calling getInner in SotFRP_AbilitySystem, line 52"),S9o(N1o(mWi,1,"when calling get in SotFRP_AbilitySystem, line 52"),"when calling getInner in SotFRP_AbilitySystem, line 52"),"when calling addAbility in SotFRP_AbilitySystem, line 52")
set WWi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 53")
set MM=MM-1
return WWi
endfunction
function EYi takes integer xYi,integer vYi,integer mYi,string QYi returns integer
local integer WYi
set w3[MM]=QYi
set MM=MM+1
set WYi=l5i(pMt(F6r(W2o(vYi,"when calling getEnumUnit in ScmdUnitBuiltins, line 592"),c4o(N1o(mYi,0,"when calling get in ScmdUnitBuiltins, line 592"),"when calling booleanValue in ScmdUnitBuiltins, line 592")),"when calling new_Integer in ScmdUnitBuiltins, line 592"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 592")
set MM=MM-1
return WYi
endfunction
function KXt takes integer JXt returns destructable
return nK[JXt]
endfunction
function W_i takes integer Q_i returns widget
return iL[Q_i]
endfunction
function e3t takes integer p3t returns item
return xK[p3t]
endfunction
function c0o takes integer t0o,string i0o returns widget
local widget S0o
set w3[MM]=i0o
set MM=MM+1
if px[t0o]==0 then
if t0o==0 then
call Mau("Nullpointer exception when calling Widget.getInner","when calling error in ScmdDataTypes, line 773")
else
call Mau("Called Widget.getInner on invalid object.","when calling error in ScmdDataTypes, line 773")
endif
endif
if px[t0o]<=1429 then
if px[t0o]<=1428 then
set S0o=W_i(t0o)
else
set S0o=KXt(t0o)
endif
elseif px[t0o]<=1430 then
set S0o=e3t(t0o)
else
set S0o=O0i(t0o)
endif
set MM=MM-1
set hdw=S0o
set S0o=null
return hdw
endfunction
function Egi takes integer xgi,integer vgi,integer mgi,string Qgi returns integer
local integer Wgi
set w3[MM]=Qgi
set MM=MM+1
set Wgi=l5i(j1t(Ars(c0o(N1o(mgi,0,"when calling get in ScmdUnitBuiltins, line 660"),"when calling getInner in ScmdUnitBuiltins, line 660")),"when calling new_Real in ScmdUnitBuiltins, line 660"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 660")
set MM=MM-1
return Wgi
endfunction
function oau takes effect Sau,real cau returns nothing
call BlzSetSpecialEffectRoll(Sau,cau)
endfunction
function X5i takes integer L5i returns effect
return AK[L5i]
endfunction
function r9o takes integer M8o,string w9o returns effect
local effect u9o
set w3[MM]=w9o
set MM=MM+1
if px[M8o]==0 then
if M8o==0 then
call Mau("Nullpointer exception when calling SpecialEffect.getInner","when calling error in ScmdDataTypes, line 619")
else
call Mau("Called SpecialEffect.getInner on invalid object.","when calling error in ScmdDataTypes, line 619")
endif
endif
set u9o=X5i(M8o)
set MM=MM-1
set Ydw=u9o
set u9o=null
return Ydw
endfunction
function FGt takes integer TGt,integer YGt,integer GGt,string gGt returns integer
local integer hGt
set w3[MM]=gGt
set MM=MM+1
call oau(r9o(N1o(GGt,0,"when calling get in SLangSpecialEffectFunctions, line 56"),"when calling getInner in SLangSpecialEffectFunctions, line 56"),I8o(N1o(GGt,1,"when calling get in SLangSpecialEffectFunctions, line 56"),"when calling realValue in SLangSpecialEffectFunctions, line 56"))
set hGt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 57")
set MM=MM-1
return hGt
endfunction
function lXt takes integer OXt returns item
return qK[OXt]
endfunction
function s6o takes integer w6o,string u6o returns item
local item r6o
set w3[MM]=u6o
set MM=MM+1
if hx[w6o]==0 then
if w6o==0 then
call Mau("Nullpointer exception when calling Context.getManipulatedItem","when calling error in ScmdDataTypes, line 1217")
else
call Mau("Called Context.getManipulatedItem on invalid object.","when calling error in ScmdDataTypes, line 1217")
endif
endif
set r6o=lXt(w6o)
set MM=MM-1
set ddw=r6o
set r6o=null
return ddw
endfunction
function Fht takes integer Tht,integer Yht,integer Ght,string ght returns integer
local integer hht
set w3[MM]=ght
set MM=MM+1
set hht=l5i(R3t(s6o(Yht,"when calling getManipulatedItem in SLangTriggerFunctions, line 115"),"when calling new_Item in SLangTriggerFunctions, line 115"),"when calling new_SharedPointer in SLangTriggerFunctions, line 115")
set MM=MM-1
return hht
endfunction
function N7s takes unit V7s,string B7s returns boolean
return IssueImmediateOrder(V7s,B7s)
endfunction
function Fji takes integer Tji,integer Yji,integer Gji,string gji returns integer
local integer hji
set w3[MM]=gji
set MM=MM+1
set hji=l5i(rAt(N7s(W2o(Yji,"when calling getEnumUnit in ScmdUnitBuiltins, line 771"),S9o(N1o(Gji,0,"when calling get in ScmdUnitBuiltins, line 771"),"when calling getInner in ScmdUnitBuiltins, line 771")),"when calling new_Boolean in ScmdUnitBuiltins, line 771"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 771")
set MM=MM-1
return hji
endfunction
function MUS takes string BUS returns integer
local integer NUS
set w3[MM]=BUS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set NUS=kj
set jj[NUS]=966
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_assign_setArgumentsTypes_registerBuiltin_SLangChatSystem.","when calling error in SLangChatSystem, line 222")
set NUS=0
endif
else
set Fj=Fj-1
set NUS=hj[Fj]
set jj[NUS]=966
endif
set MM=MM-1
return NUS
endfunction
function E2u takes integer k2u,string j2u,string x2u,string v2u,integer m2u,string Q2u returns boolean
local boolean W2u
set w3[MM]=Q2u
set MM=MM+1
set W2u=F2u(k2u,j2u,x2u,v2u,m2u,false,"when calling assign in ScmdDataTypes, line 272")
set MM=MM-1
return W2u
endfunction
function V2u takes integer J2u,string K2u,integer L2u,string X2u returns boolean
local boolean C2u
set w3[MM]=X2u
set MM=MM+1
set C2u=E2u(J2u,K2u,null,null,L2u,"when calling assign in ScmdDataTypes, line 278")
set MM=MM-1
return C2u
endfunction
function Fnt takes integer ant,integer nnt,integer dnt,string fnt returns integer
local string Rnt
local integer Tnt
local integer Ynt
local integer Gnt
local integer gnt
local string hnt
set w3[MM]=fnt
set MM=MM+1
set Rnt=S9o(N1o(dnt,1,"when calling get in SLangChatSystem, line 221"),"when calling getInner in SLangChatSystem, line 221")
set gnt=h2o(nnt,"when calling getPlayerId in SLangChatSystem, line 222")
set hnt=S9o(N1o(dnt,0,"when calling get in SLangChatSystem, line 222"),"when calling getInner in SLangChatSystem, line 222")
set Tnt=MUS("when calling alloc_IBuiltin_setArgumentsTypes_assign_setArgumentsTypes_registerBuiltin_SLangChatSystem in SLangChatSystem, line 222")
set fJ[Tnt]=Rnt
set Ynt=eDt(Tnt,"when calling new_BuiltinData in SLangChatSystem, line 222")
call Fao(Ynt,o2u(),"when calling setArgumentsTypes in SLangChatSystem, line 225")
set Gnt=l5i(rAt(V2u(gnt,hnt,l5i(WHt(Ynt,"when calling new_BuiltinFunction in SLangChatSystem, line 222"),"when calling new_SharedPointer in SLangChatSystem, line 222"),"when calling assign in SLangChatSystem, line 222"),"when calling new_Boolean in SLangChatSystem, line 222"),"when calling new_SharedPointer in SLangChatSystem, line 222")
set MM=MM-1
return Gnt
endfunction
function i8r takes string s8r returns integer
local integer t8r
set w3[MM]=s8r
set MM=MM+1
set t8r=l5i(qCt("Unknown camera setting","when calling new_Exception in ScmdPlayerCameraSettingsBuiltins, line 46"),"when calling new_SharedPointer in ScmdPlayerCameraSettingsBuiltins, line 46")
set MM=MM-1
return t8r
endfunction
function K7u takes camerafield J7u returns integer
return l7s(J7u)
endfunction
function M7u takes integer C7u,camerafield V7u,real B7u,string N7u returns nothing
set w3[MM]=N7u
set MM=MM+1
call OUc(jd[C7u],K7u(V7u),evr(B7u),"when calling put in ScmdPlayerCameraSettingsBuiltins, line 20")
if ea==pa[C7u]then
call SetCameraField(V7u,B7u,0.)
endif
set MM=MM-1
endfunction
function aUc takes integer eUc,string qUc returns nothing
set w3[MM]=qUc
set MM=MM+1
if Yh[eUc]==0 then
if eUc==0 then
call Mau("Nullpointer exception when calling IterableMap.flush","when calling error in HashMap, line 71")
else
call Mau("Called IterableMap.flush on invalid object.","when calling error in HashMap, line 71")
endif
endif
call NDs(eUc,"when calling flush in HashMap, line 71")
set MM=MM-1
endfunction
function r8r takes integer w8r,string u8r returns nothing
set w3[MM]=u8r
set MM=MM+1
call aUc(jd[w8r],"when calling flush in ScmdPlayerCameraSettingsBuiltins, line 31")
call M7u(w8r,CAMERA_FIELD_FARZ,Ua,"when calling setCameraField in ScmdPlayerCameraSettingsBuiltins, line 32")
if ea==pa[w8r]then
call ResetToGameCamera(0.)
call SetCameraField(CAMERA_FIELD_FARZ,Ua,0.)
endif
set MM=MM-1
endfunction
function Fti takes integer fti,integer Rti,integer Tti,string Yti returns integer
local string Gti
local integer gti
local integer hti
set w3[MM]=Yti
set MM=MM+1
set Gti=S9o(N1o(Tti,0,"when calling get in ScmdPlayerCameraSettingsBuiltins, line 74"),"when calling getInner in ScmdPlayerCameraSettingsBuiltins, line 74")
if Gti=="reset" then
call r8r(h2o(Rti,"when calling getPlayerId in ScmdPlayerCameraSettingsBuiltins, line 76"),"when calling resetCamera in ScmdPlayerCameraSettingsBuiltins, line 76")
endif
if Gti!="reset" then
set gti=i8r("when calling makeUnknownCameraSettingException in ScmdPlayerCameraSettingsBuiltins, line 77")
else
set gti=x4u("when calling nullptr in ScmdPlayerCameraSettingsBuiltins, line 77")
endif
set hti=gti
set MM=MM-1
return hti
endfunction
function R6r takes unit d6r,integer f6r returns boolean
return UnitStripHeroLevel(d6r,f6r)
endfunction
function n6r takes unit e6r,integer q6r,boolean a6r returns nothing
call SetHeroLevel(e6r,q6r,a6r)
endfunction
function p6r takes unit b6r returns integer
local integer y6r
if m5r(b6r,UNIT_TYPE_HERO)then
set y6r=GetHeroLevel(b6r)
else
set y6r=GetUnitLevel(b6r)
endif
return y6r
endfunction
function GTi takes integer aTi,integer nTi,integer dTi,string fTi returns integer
local unit RTi
local integer TTi
local integer YTi
set w3[MM]=fTi
set MM=MM+1
set RTi=W2o(nTi,"when calling getEnumUnit in ScmdUnitBuiltins, line 551")
set TTi=t8o(N1o(dTi,0,"when calling get in ScmdUnitBuiltins, line 552"),"when calling intValue in ScmdUnitBuiltins, line 552")
if TTi>=p6r(RTi)then
call n6r(RTi,TTi,false)
else
call R6r(RTi,p6r(RTi)-TTi)
endif
set YTi=x4u("when calling nullptr in ScmdUnitBuiltins, line 557")
set MM=MM-1
set RTi=null
return YTi
endfunction
function PJS takes string UJS returns integer
local integer IJS
set w3[MM]=UJS
set MM=MM+1
if sx==0 then
if tx<32768 then
set tx=tx+1
set IJS=tx
set ix[IJS]=1496
else
call Mau("Out of memory: Could not create RealBinOp_reduceNumbers_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 264")
set IJS=0
endif
else
set sx=sx-1
set IJS=rx[sx]
set ix[IJS]=1496
endif
set MM=MM-1
return IJS
endfunction
function ZJS takes string WJS returns integer
local integer EJS
set w3[MM]=WJS
set MM=MM+1
if Mj==0 then
if wx<32768 then
set wx=wx+1
set EJS=wx
set ux[EJS]=1247
else
call Mau("Out of memory: Could not create IntBinOp_reduceNumbers_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 264")
set EJS=0
endif
else
set Mj=Mj-1
set EJS=Nj[Mj]
set ux[EJS]=1247
endif
set MM=MM-1
return EJS
endfunction
function VWt takes integer LWt,integer XWt,integer CWt returns integer
return vdo(XWt,CWt)
endfunction
function YQt takes integer fQt,integer RQt,integer TQt returns integer
return RQt*TQt
endfunction
function kWt takes integer gWt,integer hWt,integer FWt returns integer
return wao(hWt,FWt)
endfunction
function tQt takes integer uQt,integer rQt,integer sQt returns integer
return rQt+sQt
endfunction
function F1o takes integer T1o,integer Y1o,integer G1o,string g1o returns integer
local integer h1o
set w3[MM]=g1o
set MM=MM+1
if ux[T1o]==0 then
if T1o==0 then
call Mau("Nullpointer exception when calling IntBinOp.apply","when calling error in ScmdCoreBuiltins, line 189")
else
call Mau("Called IntBinOp.apply on invalid object.","when calling error in ScmdCoreBuiltins, line 189")
endif
endif
if ux[T1o]<=1248 then
if ux[T1o]<=1247 then
set h1o=kWt(T1o,Y1o,G1o)
else
set h1o=VWt(T1o,Y1o,G1o)
endif
elseif ux[T1o]<=1249 then
set h1o=tQt(T1o,Y1o,G1o)
else
set h1o=YQt(T1o,Y1o,G1o)
endif
set MM=MM-1
return h1o
endfunction
function pPt takes integer lPt,string bPt returns integer
local integer yPt
set w3[MM]=bPt
set MM=MM+1
set yPt=yZc(JJ[lPt],"when calling size in ScmdDataTypes, line 1262")
set MM=MM-1
return yPt
endfunction
function L1o takes integer H1o,string J1o returns integer
local integer K1o
set w3[MM]=J1o
set MM=MM+1
if nx[H1o]==0 then
if H1o==0 then
call Mau("Nullpointer exception when calling Arguments.size","when calling error in ScmdDataTypes, line 1261")
else
call Mau("Called Arguments.size on invalid object.","when calling error in ScmdDataTypes, line 1261")
endif
endif
set K1o=pPt(H1o,"when calling size in ScmdDataTypes, line 1261")
set MM=MM-1
return K1o
endfunction
function FQt takes integer GQt,real gQt,real hQt returns real
return gQt*hQt
endfunction
function pfo takes real Ofo,real lfo returns real
local real bfo=Ia
local real yfo
if Ofo>bfo then
set yfo=Ofo
else
set yfo=bfo
endif
set bfo=yfo
if lfo>bfo then
set yfo=lfo
else
set yfo=bfo
endif
set bfo=yfo
return bfo
endfunction
function mWt takes integer jWt,real xWt,real vWt returns real
return pfo(xWt,vWt)
endfunction
function oQt takes integer iQt,real SQt,real cQt returns real
return SQt+cQt
endfunction
function dfo takes real efo,real qfo returns real
local real afo=Ua
local real nfo
if efo<afo then
set nfo=efo
else
set nfo=afo
endif
set afo=nfo
if qfo<afo then
set nfo=qfo
else
set nfo=afo
endif
set afo=nfo
return afo
endfunction
function wEt takes integer BWt,real NWt,real MWt returns real
return dfo(NWt,MWt)
endfunction
function Q1o takes integer k1o,real j1o,real x1o,string v1o returns real
local real m1o
set w3[MM]=v1o
set MM=MM+1
if ix[k1o]==0 then
if k1o==0 then
call Mau("Nullpointer exception when calling RealBinOp.apply","when calling error in ScmdCoreBuiltins, line 192")
else
call Mau("Called RealBinOp.apply on invalid object.","when calling error in ScmdCoreBuiltins, line 192")
endif
endif
if ix[k1o]<=1497 then
if ix[k1o]<=1496 then
set m1o=mWt(k1o,j1o,x1o)
else
set m1o=wEt(k1o,j1o,x1o)
endif
elseif ix[k1o]<=1498 then
set m1o=oQt(k1o,j1o,x1o)
else
set m1o=FQt(k1o,j1o,x1o)
endif
set MM=MM-1
return m1o
endfunction
function R1t takes integer f1t returns integer
return qUu(vK[f1t])
endfunction
function T8o takes integer d8o,string f8o returns integer
local integer R8o
set w3[MM]=f8o
set MM=MM+1
if px[d8o]==0 then
if d8o==0 then
call Mau("Nullpointer exception when calling Number.intValue","when calling error in ScmdDataTypes, line 409")
else
call Mau("Called Number.intValue on invalid object.","when calling error in ScmdDataTypes, line 409")
endif
endif
if px[d8o]<=1435 then
if px[d8o]<=1434 then
set R8o=cMt(d8o)
else
set R8o=R1t(d8o)
endif
elseif px[d8o]<=1439 then
set R8o=R1t(d8o)
else
set R8o=cMt(d8o)
endif
set MM=MM-1
return R8o
endfunction
function h8o takes integer Y8o,string G8o returns real
local real g8o
set w3[MM]=G8o
set MM=MM+1
if px[Y8o]==0 then
if Y8o==0 then
call Mau("Nullpointer exception when calling Number.realValue","when calling error in ScmdDataTypes, line 411")
else
call Mau("Called Number.realValue on invalid object.","when calling error in ScmdDataTypes, line 411")
endif
endif
if px[Y8o]<=1435 then
set g8o=Y1t(Y8o)
else
set g8o=Y1t(Y8o)
endif
set MM=MM-1
return g8o
endfunction
function e1u takes integer V3u,integer B3u,integer N3u,real M3u,integer w1u,string u1u returns integer
local boolean r1u
local integer s1u
local integer t1u
local integer i1u
local real S1u
local integer c1u
local integer o1u
local integer O1u
local integer l1u
local integer b1u
local integer y1u
local integer p1u
set w3[MM]=u1u
set MM=MM+1
set r1u=false
set s1u=0
set t1u=L1o(V3u,"when calling size in ScmdCoreBuiltins, line 196")-1
loop
exitwhen s1u>t1u
set y1u=px[N1o(V3u,s1u,"when calling get in ScmdCoreBuiltins, line 197")]
if not(y1u==1434 or y1u==1440)then
set r1u=true
endif
set s1u=s1u+1
endloop
set i1u=B3u
set S1u=M3u
if r1u then
set c1u=0
set o1u=L1o(V3u,"when calling size in ScmdCoreBuiltins, line 202")-1
loop
exitwhen c1u>o1u
set S1u=Q1o(w1u,S1u,h8o(N1o(V3u,c1u,"when calling get in ScmdCoreBuiltins, line 203"),"when calling realValue in ScmdCoreBuiltins, line 203"),"when calling apply in ScmdCoreBuiltins, line 203")
set c1u=c1u+1
endloop
else
set O1u=0
set l1u=L1o(V3u,"when calling size in ScmdCoreBuiltins, line 205")-1
loop
exitwhen O1u>l1u
set i1u=F1o(N3u,i1u,T8o(N1o(V3u,O1u,"when calling get in ScmdCoreBuiltins, line 206"),"when calling intValue in ScmdCoreBuiltins, line 206"),"when calling apply in ScmdCoreBuiltins, line 206")
set O1u=O1u+1
endloop
endif
if r1u then
set b1u=j1t(S1u,"when calling new_Real in ScmdCoreBuiltins, line 207")
else
set b1u=pMt(i1u,"when calling new_Integer in ScmdCoreBuiltins, line 207")
endif
set p1u=l5i(b1u,"when calling new_SharedPointer in ScmdCoreBuiltins, line 207")
set MM=MM-1
return p1u
endfunction
function GWt takes integer yWt,integer pWt,integer eWt,string qWt returns integer
local integer aWt
local integer nWt
local integer dWt
local integer fWt
local integer RWt
local integer TWt
local real YWt
set w3[MM]=qWt
set MM=MM+1
set fWt=eWt
set RWt=Ze
set aWt=ZJS("when calling alloc_IntBinOp_reduceNumbers_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 264")
set TWt=aWt
set YWt=Ia
set nWt=PJS("when calling alloc_RealBinOp_reduceNumbers_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 264")
set dWt=e1u(fWt,RWt,TWt,YWt,nWt,"when calling reduceNumbers in ScmdCoreBuiltins, line 264")
set MM=MM-1
return dWt
endfunction
function Wbu takes playercolor mbu returns string
local string Qbu
if wEu(mbu)<=Qp then
set Qbu=Up[wEu(mbu)]
else
set Qbu=mp
endif
return Qbu
endfunction
function Gci takes integer qci,integer aci,integer nci,string dci returns integer
local player fci
local string Rci
local string Tci
local integer Yci
set w3[MM]=dci
set MM=MM+1
set fci=g7s(W2o(aci,"when calling getEnumUnit in ScmdUnitBuiltins, line 51"))
if fci==pa[PLAYER_NEUTRAL_AGGRESSIVE]then
set Tci="hostile"
else
if fci==pa[PLAYER_NEUTRAL_PASSIVE]then
set Rci="neutral"
else
set Rci=Wbu(LWu(fci))
endif
set Tci=Rci
endif
set Yci=l5i(J6i(Tci,"when calling new_String in ScmdUnitBuiltins, line 52"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 52")
set MM=MM-1
set fci=null
return Yci
endfunction
function C8i takes integer K8i,integer L8i,string X8i returns nothing
set w3[MM]=X8i
set MM=MM+1
call Nno(MK[K8i],L8i,"when calling add in ScmdDataTypes, line 978")
set MM=MM-1
endfunction
function I9o takes integer E9o,integer Z9o,string U9o returns nothing
set w3[MM]=U9o
set MM=MM+1
if px[E9o]==0 then
if E9o==0 then
call Mau("Nullpointer exception when calling Trigger.addOwnedObject","when calling error in ScmdDataTypes, line 977")
else
call Mau("Called Trigger.addOwnedObject on invalid object.","when calling error in ScmdDataTypes, line 977")
endif
endif
call C8i(E9o,Z9o,"when calling addOwnedObject in ScmdDataTypes, line 977")
set MM=MM-1
endfunction
function ZBS takes string WBS returns integer
local integer EBS
set w3[MM]=WBS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set EBS=yx
set px[EBS]=1442
else
call Mau("Out of memory: Could not create Region.","when calling error in ScmdDataTypes, line 708")
set EBS=0
endif
else
set bx=bx-1
set EBS=lx[bx]
set px[EBS]=1442
endif
set MM=MM-1
return EBS
endfunction
function n2t takes integer a2t returns nothing
endfunction
function g2t takes integer Y2t,region G2t returns nothing
call n2t(Y2t)
set WK[Y2t]=G2t
endfunction
function T2t takes region d2t,string f2t returns integer
local integer R2t
set w3[MM]=f2t
set MM=MM+1
set R2t=ZBS("when calling alloc_Region in ScmdDataTypes, line 714")
call g2t(R2t,d2t)
set MM=MM-1
return R2t
endfunction
function Q8i takes integer m8i returns trigger
return CK[m8i]
endfunction
function h9o takes integer Y9o,string G9o returns trigger
local trigger g9o
set w3[MM]=G9o
set MM=MM+1
if px[Y9o]==0 then
if Y9o==0 then
call Mau("Nullpointer exception when calling Trigger.getInner","when calling error in ScmdDataTypes, line 956")
else
call Mau("Called Trigger.getInner on invalid object.","when calling error in ScmdDataTypes, line 956")
endif
endif
set g9o=Q8i(Y9o)
set MM=MM-1
set Gdw=g9o
set g9o=null
return Gdw
endfunction
function Ggt takes integer qgt,integer agt,integer ngt,string dgt returns integer
local integer fgt
local rect Rgt
local region Tgt
local integer Ygt
set w3[MM]=dgt
set MM=MM+1
set fgt=N1o(ngt,0,"when calling get in SLangTriggerFunctions, line 76")
set Rgt=H8o(N1o(ngt,1,"when calling get in SLangTriggerFunctions, line 77"),"when calling getInner in SLangTriggerFunctions, line 77")
if Rgt==Ae then
call mxr(h9o(fgt,"when calling getInner in SLangTriggerFunctions, line 79"),De,null)
else
set Tgt=CreateRegion()
call WIu(Tgt,Rgt)
call mxr(h9o(fgt,"when calling getInner in SLangTriggerFunctions, line 83"),Tgt,null)
call I9o(fgt,T2t(Tgt,"when calling new_Region in SLangTriggerFunctions, line 84"),"when calling addOwnedObject in SLangTriggerFunctions, line 84")
endif
call ixr(h9o(fgt,"when calling getInner in SLangTriggerFunctions, line 85"),Condition(Vaw))
set Ygt=x4u("when calling nullptr in SLangTriggerFunctions, line 88")
set MM=MM-1
set Rgt=null
set Tgt=null
return Ygt
endfunction
function Gki takes integer dki,integer fki,integer Rki,string Tki returns integer
local integer Yki
set w3[MM]=Tki
set MM=MM+1
call k8s(H9o(N1o(Rki,0,"when calling get in ScmdUnitBuiltins, line 739"),"when calling getInner in ScmdUnitBuiltins, line 739"))
set Yki=x4u("when calling nullptr in ScmdUnitBuiltins, line 740")
set MM=MM-1
return Yki
endfunction
function Uhr takes string Whr returns string
local integer Ehr=0
local integer Zhr=vhr(Whr)
loop
exitwhen not(Ehr!=Zhr and Mhr(Whr,Ehr)==" ")
set Ehr=Ehr+1
endloop
loop
exitwhen not(Ehr!=Zhr and Mhr(Whr,Zhr-1)==" ")
set Zhr=Zhr-1
endloop
return Dhr(Whr,Ehr,Zhr)
endfunction
function Qhr takes string mhr returns boolean
return mhr!=null and vhr(Uhr(mhr))>0
endfunction
function Gmt takes integer dmt,integer fmt,integer Rmt,string Tmt returns integer
local integer Ymt
set w3[MM]=Tmt
set MM=MM+1
set Ymt=l5i(rAt(not Qhr(S9o(N1o(Rmt,0,"when calling get in ScmdCoreBuiltins, line 175"),"when calling getInner in ScmdCoreBuiltins, line 175")),"when calling new_Boolean in ScmdCoreBuiltins, line 175"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 175")
set MM=MM-1
return Ymt
endfunction
function Gwi takes integer dwi,integer fwi,integer Rwi,string Twi returns integer
local integer Ywi
set w3[MM]=Twi
set MM=MM+1
call FogMaskEnable(false)
call FogEnable(false)
set Ywi=x4u("when calling nullptr in ScmdFogOfWarBuiltins, line 26")
set MM=MM-1
return Ywi
endfunction
function B8s takes unit C8s,string V8s returns nothing
call SetUnitAnimation(C8s,V8s)
endfunction
function Gxi takes integer dxi,integer fxi,integer Rxi,string Txi returns integer
local integer Yxi
set w3[MM]=Txi
set MM=MM+1
call B8s(W2o(fxi,"when calling getEnumUnit in ScmdUnitBuiltins, line 793"),S9o(N1o(Rxi,0,"when calling get in ScmdUnitBuiltins, line 793"),"when calling getInner in ScmdUnitBuiltins, line 793"))
set Yxi=x4u("when calling nullptr in ScmdUnitBuiltins, line 794")
set MM=MM-1
return Yxi
endfunction
function H2u takes integer Z2u,string U2u,string I2u,integer P2u,string A2u returns boolean
local boolean D2u
set w3[MM]=A2u
set MM=MM+1
set D2u=E2u(Z2u,U2u,I2u,null,P2u,"when calling assign in ScmdDataTypes, line 275")
set MM=MM-1
return D2u
endfunction
function B9i takes integer C9i,integer V9i returns boolean
return px[V9i]==1449
endfunction
function BKt takes integer CKt,integer VKt returns boolean
return px[VKt]==1423
endfunction
function EIt takes integer QIt,integer WIt returns boolean
return true
endfunction
function FMt takes integer GMt,integer gMt returns boolean
local integer hMt=px[gMt]
return hMt==1434 or hMt==1440
endfunction
function G0i takes integer T0i,integer Y0i returns boolean
return px[Y0i]==1431
endfunction
function G6i takes integer T6i,integer Y6i returns boolean
return px[Y6i]==1444
endfunction
function G8i takes integer T8i,integer Y8i returns boolean
return px[Y8i]==1447
endfunction
function H1t takes integer P1t,integer A1t returns boolean
local integer D1t=px[A1t]
return(D1t>=1434 and D1t<=1435)or(D1t>=1439 and D1t<=1440)
endfunction
function HVt takes integer AVt,integer DVt returns boolean
return px[DVt]==1424
endfunction
function IKt takes integer ZKt,integer UKt returns boolean
return px[UKt]==1421
endfunction
function JIt takes integer AIt,integer DIt returns boolean
local integer HIt=px[DIt]
return(HIt>=1415 and HIt<=1417)or(HIt>=1417 and HIt<=1420)
endfunction
function L_i takes integer H_i,integer J_i returns boolean
local integer K_i=px[J_i]
return K_i>=1428 and K_i<=1431
endfunction
function M3t takes integer B3t,integer N3t returns boolean
return px[N3t]==1437
endfunction
function PIt takes integer ZIt,integer UIt returns boolean
local integer IIt=px[UIt]
return(IIt>=1434 and IIt<=1435)or(IIt>=1438 and IIt<=1440)
endfunction
function SCt takes integer tCt,integer iCt returns boolean
return px[iCt]==1429
endfunction
function UCt takes integer WCt,integer ECt returns boolean
local integer ZCt=px[ECt]
return ZCt>=1422 and ZCt<=1423
endfunction
function V0i takes integer X0i,integer C0i returns boolean
return px[C0i]==1450
endfunction
function VNt takes integer LNt,integer XNt returns boolean
local integer CNt=px[XNt]
return CNt>=1426 and CNt<=1431
endfunction
function W5i takes integer m5i,integer Q5i returns boolean
return px[Q5i]==1443
endfunction
function XHt takes integer KHt,integer LHt returns boolean
return px[LHt]==1417
endfunction
function Y_i takes integer R_i,integer T_i returns boolean
return px[T_i]==1451
endfunction
function i2t takes integer s2t,integer t2t returns boolean
return px[t2t]==1441
endfunction
function j3t takes integer F3t,integer k3t returns boolean
return px[k3t]==1430
endfunction
function kNt takes integer hNt,integer FNt returns boolean
return px[FNt]==1425
endfunction
function o9i takes integer S9i,integer c9i returns boolean
return px[c9i]==1448
endfunction
function qAt takes integer yAt,integer pAt returns boolean
local integer eAt=px[pAt]
return eAt==1433 or eAt==1446
endfunction
function qKt takes integer pKt,integer eKt returns boolean
return px[eKt]==1418
endfunction
function r5i takes integer w5i,integer u5i returns boolean
return px[u5i]==1420
endfunction
function sBt takes integer wBt,integer uBt returns boolean
local integer rBt=px[uBt]
return rBt==1417 or(rBt>=1419 and rBt<=1420)
endfunction
function uPt takes integer MIt,integer wPt returns boolean
return px[wPt]==1427
endfunction
function w7i takes integer B6i,integer N6i returns boolean
local integer M6i=px[N6i]
return(M6i>=1433 and M6i<=1436)or(M6i>=1439 and M6i<=1440)or(M6i>=1445 and M6i<=1446)
endfunction
function x2t takes integer k2t,integer j2t returns boolean
return px[j2t]==1442
endfunction
function O8o takes integer i8o,integer S8o,string c8o returns boolean
local boolean o8o
set w3[MM]=c8o
set MM=MM+1
if Ox[i8o]==0 then
if i8o==0 then
call Mau("Nullpointer exception when calling IsInstanceChecker.isInstance","when calling error in ScmdDataTypes, line 21")
else
call Mau("Called IsInstanceChecker.isInstance on invalid object.","when calling error in ScmdDataTypes, line 21")
endif
endif
if Ox[i8o]<=1286 then
if Ox[i8o]<=1278 then
if Ox[i8o]<=1274 then
if Ox[i8o]<=1272 then
if Ox[i8o]<=1271 then
set o8o=uPt(i8o,S8o)
else
set o8o=qAt(i8o,S8o)
endif
elseif Ox[i8o]<=1273 then
set o8o=XHt(i8o,S8o)
else
set o8o=qKt(i8o,S8o)
endif
elseif Ox[i8o]<=1276 then
if Ox[i8o]<=1275 then
set o8o=IKt(i8o,S8o)
else
set o8o=BKt(i8o,S8o)
endif
elseif Ox[i8o]<=1277 then
set o8o=SCt(i8o,S8o)
else
set o8o=UCt(i8o,S8o)
endif
elseif Ox[i8o]<=1282 then
if Ox[i8o]<=1280 then
if Ox[i8o]<=1279 then
set o8o=HVt(i8o,S8o)
else
set o8o=sBt(i8o,S8o)
endif
elseif Ox[i8o]<=1281 then
set o8o=kNt(i8o,S8o)
else
set o8o=VNt(i8o,S8o)
endif
elseif Ox[i8o]<=1284 then
if Ox[i8o]<=1283 then
set o8o=FMt(i8o,S8o)
else
set o8o=j3t(i8o,S8o)
endif
elseif Ox[i8o]<=1285 then
set o8o=M3t(i8o,S8o)
else
set o8o=H1t(i8o,S8o)
endif
elseif Ox[i8o]<=1294 then
if Ox[i8o]<=1290 then
if Ox[i8o]<=1288 then
if Ox[i8o]<=1287 then
set o8o=i2t(i8o,S8o)
else
set o8o=x2t(i8o,S8o)
endif
elseif Ox[i8o]<=1289 then
set o8o=r5i(i8o,S8o)
else
set o8o=EIt(i8o,S8o)
endif
elseif Ox[i8o]<=1292 then
if Ox[i8o]<=1291 then
set o8o=PIt(i8o,S8o)
else
set o8o=JIt(i8o,S8o)
endif
elseif Ox[i8o]<=1293 then
set o8o=W5i(i8o,S8o)
else
set o8o=G6i(i8o,S8o)
endif
elseif Ox[i8o]<=1298 then
if Ox[i8o]<=1296 then
if Ox[i8o]<=1295 then
set o8o=w7i(i8o,S8o)
else
set o8o=G8i(i8o,S8o)
endif
elseif Ox[i8o]<=1297 then
set o8o=o9i(i8o,S8o)
else
set o8o=B9i(i8o,S8o)
endif
elseif Ox[i8o]<=1300 then
if Ox[i8o]<=1299 then
set o8o=G0i(i8o,S8o)
else
set o8o=V0i(i8o,S8o)
endif
elseif Ox[i8o]<=1301 then
set o8o=Y_i(i8o,S8o)
else
set o8o=L_i(i8o,S8o)
endif
set MM=MM-1
return o8o
endfunction
function q9i takes integer b9i,integer y9i,string p9i returns boolean
local boolean e9i
set w3[MM]=p9i
set MM=MM+1
set e9i=O8o(uL[b9i],y9i,"when calling isInstance in ScmdDataTypes, line 39")
set MM=MM-1
return e9i
endfunction
function H7o takes integer I7o,integer P7o,string A7o returns boolean
local boolean D7o
set w3[MM]=A7o
set MM=MM+1
if Ix[I7o]==0 then
if I7o==0 then
call Mau("Nullpointer exception when calling GenericTypeToken.isInstance","when calling error in ScmdDataTypes, line 18")
else
call Mau("Called GenericTypeToken.isInstance on invalid object.","when calling error in ScmdDataTypes, line 18")
endif
endif
set D7o=q9i(I7o,P7o,"when calling isInstance in ScmdDataTypes, line 18")
set MM=MM-1
return D7o
endfunction
function Iqu takes effect Zqu,real Uqu returns nothing
call BlzSetSpecialEffectScale(Zqu,Uqu)
endfunction
function HYt takes integer UYt,integer IYt,integer PYt,string AYt returns integer
local integer DYt
set w3[MM]=AYt
set MM=MM+1
call Iqu(r9o(N1o(PYt,0,"when calling get in SLangSpecialEffectFunctions, line 32"),"when calling getInner in SLangSpecialEffectFunctions, line 32"),I8o(N1o(PYt,1,"when calling get in SLangSpecialEffectFunctions, line 32"),"when calling realValue in SLangSpecialEffectFunctions, line 32"))
set DYt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 33")
set MM=MM-1
return DYt
endfunction
function VLt takes integer CLt returns unit
return oK[CLt]
endfunction
function N2o takes integer C2o,string V2o returns unit
local unit B2o
set w3[MM]=V2o
set MM=MM+1
if hx[C2o]==0 then
if C2o==0 then
call Mau("Nullpointer exception when calling Context.getSpellAbilityUnit","when calling error in ScmdDataTypes, line 1175")
else
call Mau("Called Context.getSpellAbilityUnit on invalid object.","when calling error in ScmdDataTypes, line 1175")
endif
endif
set B2o=VLt(C2o)
set MM=MM-1
set edw=B2o
set B2o=null
return edw
endfunction
function GMS takes string TMS returns integer
local integer YMS
set w3[MM]=TMS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set YMS=yx
set px[YMS]=1431
else
call Mau("Out of memory: Could not create Unit.","when calling error in ScmdDataTypes, line 782")
set YMS=0
endif
else
set bx=bx-1
set YMS=lx[bx]
set px[YMS]=1431
endif
set MM=MM-1
return YMS
endfunction
function b0i takes integer l0i returns nothing
endfunction
function d0i takes integer a0i,unit n0i returns nothing
call P_i(a0i,n0i)
call b0i(a0i)
set rL[a0i]=n0i
endfunction
function q0i takes unit y0i,string p0i returns integer
local integer e0i
set w3[MM]=p0i
set MM=MM+1
set e0i=GMS("when calling alloc_Unit in ScmdDataTypes, line 791")
call d0i(e0i,y0i)
set MM=MM-1
return e0i
endfunction
function Hgt takes integer Ugt,integer Igt,integer Pgt,string Agt returns integer
local integer Dgt
set w3[MM]=Agt
set MM=MM+1
set Dgt=l5i(q0i(N2o(Igt,"when calling getSpellAbilityUnit in SLangTriggerFunctions, line 97"),"when calling new_Unit in SLangTriggerFunctions, line 97"),"when calling new_SharedPointer in SLangTriggerFunctions, line 97")
set MM=MM-1
return Dgt
endfunction
function Hki takes integer Uki,integer Iki,integer Pki,string Aki returns integer
local integer Dki
set w3[MM]=Aki
set MM=MM+1
call E8s(W2o(Iki,"when calling getEnumUnit in ScmdUnitBuiltins, line 750"))
set Dki=x4u("when calling nullptr in ScmdUnitBuiltins, line 751")
set MM=MM-1
return Dki
endfunction
function Hkt takes integer hkt,integer Fkt,integer kkt,string jkt returns integer
local boolean xkt
local integer vkt
local integer mkt
local integer Qkt
local real Wkt
local integer Ekt
local integer Zkt
local integer Ukt
local integer Ikt
local integer Pkt
local integer Akt
local integer Dkt
set w3[MM]=jkt
set MM=MM+1
set xkt=false
set vkt=0
set mkt=L1o(kkt,"when calling size in ScmdCoreBuiltins, line 12")-1
loop
exitwhen vkt>mkt
set Akt=px[N1o(kkt,vkt,"when calling get in ScmdCoreBuiltins, line 13")]
if not(Akt==1434 or Akt==1440)then
set xkt=true
endif
set vkt=vkt+1
endloop
set Qkt=0
set Wkt=0.0
if xkt then
set Ekt=0
set Zkt=L1o(kkt,"when calling size in ScmdCoreBuiltins, line 18")-1
loop
exitwhen Ekt>Zkt
set Wkt=Wkt+h8o(N1o(kkt,Ekt,"when calling get in ScmdCoreBuiltins, line 19"),"when calling realValue in ScmdCoreBuiltins, line 19")
set Ekt=Ekt+1
endloop
else
set Ukt=0
set Ikt=L1o(kkt,"when calling size in ScmdCoreBuiltins, line 21")-1
loop
exitwhen Ukt>Ikt
set Qkt=Qkt+T8o(N1o(kkt,Ukt,"when calling get in ScmdCoreBuiltins, line 22"),"when calling intValue in ScmdCoreBuiltins, line 22")
set Ukt=Ukt+1
endloop
endif
if xkt then
set Pkt=j1t(Wkt,"when calling new_Real in ScmdCoreBuiltins, line 23")
else
set Pkt=pMt(Qkt,"when calling new_Integer in ScmdCoreBuiltins, line 23")
endif
set Dkt=l5i(Pkt,"when calling new_SharedPointer in ScmdCoreBuiltins, line 23")
set MM=MM-1
return Dkt
endfunction
function QFr takes string vFr,string mFr returns boolean
return GFr(vFr,mFr)!=-1
endfunction
function Hmt takes integer Umt,integer Imt,integer Pmt,string Amt returns integer
local integer Dmt
set w3[MM]=Amt
set MM=MM+1
set Dmt=l5i(rAt(QFr(S9o(N1o(Pmt,0,"when calling get in ScmdCoreBuiltins, line 184"),"when calling getInner in ScmdCoreBuiltins, line 184"),S9o(N1o(Pmt,1,"when calling get in ScmdCoreBuiltins, line 184"),"when calling getInner in ScmdCoreBuiltins, line 184")),"when calling new_Boolean in ScmdCoreBuiltins, line 184"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 184")
set MM=MM-1
return Dmt
endfunction
function Hvt takes integer Uvt,integer Ivt,integer Pvt,string Avt returns integer
local integer Dvt
set w3[MM]=Avt
set MM=MM+1
set Dvt=l5i(J6i(bFr(S9o(N1o(Pvt,0,"when calling get in ScmdCoreBuiltins, line 160"),"when calling getInner in ScmdCoreBuiltins, line 160")),"when calling new_String in ScmdCoreBuiltins, line 160"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 160")
set MM=MM-1
return Dvt
endfunction
function w9s takes unit N8s,integer M8s returns nothing
call SetUnitAnimationByIndex(N8s,M8s)
endfunction
function Hxi takes integer Uxi,integer Ixi,integer Pxi,string Axi returns integer
local integer Dxi
set w3[MM]=Axi
set MM=MM+1
call w9s(H9o(N1o(Pxi,0,"when calling get in ScmdUnitBuiltins, line 803"),"when calling getInner in ScmdUnitBuiltins, line 803"),t8o(N1o(Pxi,1,"when calling get in ScmdUnitBuiltins, line 803"),"when calling intValue in ScmdUnitBuiltins, line 803"))
set Dxi=x4u("when calling nullptr in ScmdUnitBuiltins, line 804")
set MM=MM-1
return Dxi
endfunction
function pKu takes unit yKu returns nothing
if A7s(yKu,1096894768)then
call cKu(yKu,1,false)
elseif A7s(yKu,1096894769)then
call cKu(yKu,1,true)
endif
endfunction
function nKu takes unit eKu,boolean qKu,boolean aKu returns nothing
call UnitRemoveBuffs(eKu,qKu,aKu)
call pKu(eKu)
endfunction
function IGi takes integer QGi,integer WGi,integer EGi,string ZGi returns integer
local integer UGi
set w3[MM]=ZGi
set MM=MM+1
call nKu(H9o(N1o(EGi,0,"when calling get in ScmdUnitBuiltins, line 634"),"when calling getInner in ScmdUnitBuiltins, line 634"),c4o(N1o(EGi,1,"when calling get in ScmdUnitBuiltins, line 634"),"when calling booleanValue in ScmdUnitBuiltins, line 634"),c4o(N1o(EGi,2,"when calling get in ScmdUnitBuiltins, line 634"),"when calling booleanValue in ScmdUnitBuiltins, line 634"))
set UGi=x4u("when calling nullptr in ScmdUnitBuiltins, line 635")
set MM=MM-1
return UGi
endfunction
function Tfr takes player yfr,integer pfr,string efr,real qfr,real afr returns group
local group nfr=CreateGroup()
local integer dfr=UnitId(efr)
local integer ffr=0
local integer Rfr=pfr-1
loop
exitwhen ffr>Rfr
call Iqo(nfr,CreateUnit(yfr,dfr,qfr,afr,bj_UNIT_FACING))
set ffr=ffr+1
endloop
set gnw=nfr
set nfr=null
return gnw
endfunction
function YNt takes integer RNt,group TNt returns nothing
call lNt(RNt)
set hK[RNt]=TNt
endfunction
function fNt takes group aNt,string nNt returns integer
local integer dNt
set w3[MM]=nNt
set MM=MM+1
set dNt=bVS("when calling alloc_Group in ScmdDataTypes, line 742")
call YNt(dNt,aNt)
set MM=MM-1
return dNt
endfunction
function IIi takes integer QIi,integer WIi,integer EIi,string ZIi returns integer
local integer UIi
set w3[MM]=ZIi
set MM=MM+1
set UIi=l5i(fNt(Tfr(pa[h2o(WIi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 111")],t8o(N1o(EIi,0,"when calling get in SotfrpGuiCoreUnit, line 111"),"when calling intValue in SotfrpGuiCoreUnit, line 111"),S9o(N1o(EIi,1,"when calling get in SotfrpGuiCoreUnit, line 111"),"when calling getInner in SotfrpGuiCoreUnit, line 111"),F7s(Wf[h2o(WIi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 111")]),h3),"when calling new_Group in SotfrpGuiCoreUnit, line 111"),"when calling new_SharedPointer in SotfrpGuiCoreUnit, line 111")
set MM=MM-1
return UIi
endfunction
function ITi takes integer QTi,integer WTi,integer ETi,string ZTi returns integer
local integer UTi
set w3[MM]=ZTi
set MM=MM+1
set UTi=l5i(pMt(p6r(W2o(WTi,"when calling getEnumUnit in ScmdUnitBuiltins, line 568")),"when calling new_Integer in ScmdUnitBuiltins, line 568"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 568")
set MM=MM-1
return UTi
endfunction
function Ibi takes integer Qbi,integer Wbi,integer Ebi,string Zbi returns integer
local integer Ubi
set w3[MM]=Zbi
set MM=MM+1
call RKu(H9o(N1o(Ebi,0,"when calling get in ScmdUnitBuiltins, line 165"),"when calling getInner in ScmdUnitBuiltins, line 165"),I8o(N1o(Ebi,1,"when calling get in ScmdUnitBuiltins, line 165"),"when calling realValue in ScmdUnitBuiltins, line 165"))
set Ubi=x4u("when calling nullptr in ScmdUnitBuiltins, line 166")
set MM=MM-1
return Ubi
endfunction
function Ihi takes integer Qhi,integer Whi,integer Ehi,string Zhi returns integer
local integer Uhi
set w3[MM]=Zhi
set MM=MM+1
set Uhi=l5i(pMt(S7s(W2o(Whi,"when calling getEnumUnit in ScmdUnitBuiltins, line 691")),"when calling new_Integer in ScmdUnitBuiltins, line 691"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 691")
set MM=MM-1
return Uhi
endfunction
function Ili takes integer Qli,integer Wli,integer Eli,string Zli returns integer
local integer Uli
set w3[MM]=Zli
set MM=MM+1
set Uli=l5i(j1t(E7s(H9o(N1o(Eli,0,"when calling get in ScmdUnitBuiltins, line 139"),"when calling getInner in ScmdUnitBuiltins, line 139")),"when calling new_Real in ScmdUnitBuiltins, line 139"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 139")
set MM=MM-1
return Uli
endfunction
function p8o takes integer l8o,string b8o returns item
local item y8o
set w3[MM]=b8o
set MM=MM+1
if px[l8o]==0 then
if l8o==0 then
call Mau("Nullpointer exception when calling Item.getInner","when calling error in ScmdDataTypes, line 820")
else
call Mau("Called Item.getInner on invalid object.","when calling error in ScmdDataTypes, line 820")
endif
endif
set y8o=e3t(l8o)
set MM=MM-1
set Rdw=y8o
set y8o=null
return Rdw
endfunction
function Iui takes integer Qui,integer Wui,integer Eui,string Zui returns integer
local integer Uui
set w3[MM]=Zui
set MM=MM+1
call Uhu(p8o(N1o(Eui,0,"when calling get in ScmdItemBuiltins, line 34"),"when calling getInner in ScmdItemBuiltins, line 34"),S9o(N1o(Eui,1,"when calling get in ScmdItemBuiltins, line 34"),"when calling getInner in ScmdItemBuiltins, line 34"))
set Uui=x4u("when calling nullptr in ScmdItemBuiltins, line 35")
set MM=MM-1
return Uui
endfunction
function qlr takes unit Olr,string llr returns boolean
local defensetype blr=DEFENSE_TYPE_NONE
local boolean ylr=true
local string plr=llr
local boolean elr
if plr=="light" then
set blr=DEFENSE_TYPE_LIGHT
elseif plr=="medium" then
set blr=DEFENSE_TYPE_MEDIUM
elseif plr=="large" or plr=="heavy" then
set blr=DEFENSE_TYPE_LARGE
elseif plr=="fort" or plr=="fortified" then
set blr=DEFENSE_TYPE_FORT
elseif plr=="hero" then
set blr=DEFENSE_TYPE_HERO
elseif plr=="divine" then
set blr=DEFENSE_TYPE_DIVINE
elseif plr=="none" or plr=="unarmored" then
set blr=DEFENSE_TYPE_NONE
else
set ylr=false
endif
if ylr then
set elr=B_s(Olr,UNIT_IF_DEFENSE_TYPE,l7s(blr))
else
set elr=false
endif
set blr=null
return elr
endfunction
function JRi takes integer IRi,integer PRi,integer ARi,string DRi returns integer
local integer HRi
set w3[MM]=DRi
set MM=MM+1
set HRi=l5i(rAt(qlr(H9o(N1o(ARi,0,"when calling get in ScmdUnitBuiltins, line 490"),"when calling getInner in ScmdUnitBuiltins, line 490"),S9o(N1o(ARi,1,"when calling get in ScmdUnitBuiltins, line 490"),"when calling getInner in ScmdUnitBuiltins, line 490")),"when calling new_Boolean in ScmdUnitBuiltins, line 490"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 490")
set MM=MM-1
return HRi
endfunction
function JUi takes integer IUi,integer PUi,integer AUi,string DUi returns integer
local integer HUi
set w3[MM]=DUi
set MM=MM+1
call S9s(W2o(PUi,"when calling getEnumUnit in SotfrpGuiCoreUnit, line 70"),brs(F7s(W2o(PUi,"when calling getEnumUnit in SotfrpGuiCoreUnit, line 70")),h3,F7s(Ofr(h2o(PUi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 70"))),h3))
set HUi=x4u("when calling nullptr in SotfrpGuiCoreUnit, line 71")
set MM=MM-1
return HUi
endfunction
function hpr takes unit dpr,string fpr,integer Rpr,string Tpr returns nothing
local integer Ypr
local integer Gpr
local integer gpr
set w3[MM]=Tpr
set MM=MM+1
set Ypr=spr(fpr,"when calling getAbilityIdByName in SotFRP_AbilitySystem, line 27")
set Gpr=kAs(Ypr,"when calling iterator in SotFRP_AbilitySystem, line 28")
loop
exitwhen not PPs(Gpr,"when calling hasNext in SotFRP_AbilitySystem, line 28")
set gpr=EPs(Gpr,"when calling next in SotFRP_AbilitySystem, line 28")
call wLu(dpr,gpr,Rpr)
endloop
call HPs(Gpr,"when calling close in SotFRP_AbilitySystem, line 28")
call vEc(Ypr,"when calling dispatch_HashList_destroyHashList in SotFRP_AbilitySystem, line 30")
set MM=MM-1
endfunction
function JWi takes integer ZWi,integer UWi,integer IWi,string PWi returns integer
local unit AWi
local unit DWi
local integer HWi
set w3[MM]=PWi
set MM=MM+1
set AWi=H9o(N1o(IWi,0,"when calling get in SotFRP_AbilitySystem, line 55"),"when calling getInner in SotFRP_AbilitySystem, line 55")
call lpr(AWi,S9o(N1o(IWi,1,"when calling get in SotFRP_AbilitySystem, line 55"),"when calling getInner in SotFRP_AbilitySystem, line 55"),"when calling addAbility in SotFRP_AbilitySystem, line 55")
set DWi=AWi
call hpr(DWi,S9o(N1o(IWi,1,"when calling get in SotFRP_AbilitySystem, line 55"),"when calling getInner in SotFRP_AbilitySystem, line 55"),t8o(N1o(IWi,2,"when calling get in SotFRP_AbilitySystem, line 55"),"when calling intValue in SotFRP_AbilitySystem, line 55"),"when calling setAbilityLevel in SotFRP_AbilitySystem, line 55")
set HWi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 56")
set MM=MM-1
set AWi=null
set DWi=null
return HWi
endfunction
function Jai takes integer Iai,integer Pai,integer Aai,string Dai returns integer
local integer Hai
set w3[MM]=Dai
set MM=MM+1
set Hai=l5i(pMt(L0s(H9o(N1o(Aai,0,"when calling get in ScmdUnitBuiltins, line 341"),"when calling getInner in ScmdUnitBuiltins, line 341"),t8o(N1o(Aai,1,"when calling get in ScmdUnitBuiltins, line 341"),"when calling intValue in ScmdUnitBuiltins, line 341")),"when calling new_Integer in ScmdUnitBuiltins, line 341"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 341")
set MM=MM-1
return Hai
endfunction
function Jdi takes integer Idi,integer Pdi,integer Adi,string Ddi returns integer
local integer Hdi
set w3[MM]=Ddi
set MM=MM+1
set Hdi=l5i(pMt(uJu(W2o(Pdi,"when calling getEnumUnit in ScmdUnitBuiltins, line 396")),"when calling new_Integer in ScmdUnitBuiltins, line 396"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 396")
set MM=MM-1
return Hdi
endfunction
function Jei takes integer Iei,integer Pei,integer Aei,string Dei returns integer
local integer Hei
set w3[MM]=Dei
set MM=MM+1
call Z0s(W2o(Pei,"when calling getEnumUnit in ScmdUnitBuiltins, line 283"),t8o(N1o(Aei,0,"when calling get in ScmdUnitBuiltins, line 283"),"when calling intValue in ScmdUnitBuiltins, line 283"))
set Hei=x4u("when calling nullptr in ScmdUnitBuiltins, line 284")
set MM=MM-1
return Hei
endfunction
function Jii takes integer Iii,integer Pii,integer Aii,string Dii returns integer
local integer Hii
set w3[MM]=Dii
set MM=MM+1
call PlayMusic(S9o(N1o(Aii,0,"when calling get in ScmdSoundFunctions, line 7"),"when calling getInner in ScmdSoundFunctions, line 7"))
set Hii=x4u("when calling nullptr in ScmdSoundFunctions, line 8")
set MM=MM-1
return Hii
endfunction
function Jxt takes integer Ixt,integer Pxt,integer Axt,string Dxt returns integer
local integer Hxt
set w3[MM]=Dxt
set MM=MM+1
set Hxt=l5i(pMt(DFr(S9o(N1o(Axt,0,"when calling get in ScmdCoreBuiltins, line 127"),"when calling getInner in ScmdCoreBuiltins, line 127")),"when calling new_Integer in ScmdCoreBuiltins, line 127"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 127")
set MM=MM-1
return Hxt
endfunction
function KEt takes integer IEt,integer PEt,integer AEt,string DEt returns integer
local integer HEt
local integer JEt
set w3[MM]=DEt
set MM=MM+1
set HEt=px[N1o(AEt,0,"when calling get in ScmdCoreBuiltins, line 288")]
set JEt=l5i(rAt(HEt==1434 or HEt==1440,"when calling new_Boolean in ScmdCoreBuiltins, line 288"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 288")
set MM=MM-1
return JEt
endfunction
function KGi takes integer PGi,integer AGi,integer DGi,string HGi returns integer
local integer JGi
set w3[MM]=HGi
set MM=MM+1
call SetUnitFacing(W2o(AGi,"when calling getEnumUnit in ScmdUnitBuiltins, line 638"),I8o(N1o(DGi,0,"when calling get in ScmdUnitBuiltins, line 638"),"when calling realValue in ScmdUnitBuiltins, line 638"))
set JGi=x4u("when calling nullptr in ScmdUnitBuiltins, line 639")
set MM=MM-1
return JGi
endfunction
function KIi takes integer PIi,integer AIi,integer DIi,string HIi returns integer
local integer JIi
set w3[MM]=HIi
set MM=MM+1
set JIi=l5i(fNt(Tfr(pa[PLAYER_NEUTRAL_AGGRESSIVE],t8o(N1o(DIi,0,"when calling get in SotfrpGuiCoreUnit, line 114"),"when calling intValue in SotfrpGuiCoreUnit, line 114"),S9o(N1o(DIi,1,"when calling get in SotfrpGuiCoreUnit, line 114"),"when calling getInner in SotfrpGuiCoreUnit, line 114"),F7s(Wf[h2o(AIi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 114")]),h3),"when calling new_Group in SotfrpGuiCoreUnit, line 114"),"when calling new_SharedPointer in SotfrpGuiCoreUnit, line 114")
set MM=MM-1
return JIi
endfunction
function GxS takes string TxS returns integer
local integer YxS
set w3[MM]=TxS
set MM=MM+1
if SF==0 then
if cF<32768 then
set cF=cF+1
set YxS=cF
set oF[YxS]=1315
else
call Mau("Out of memory: Could not create LegacyPositionedUnitData.","when calling error in LegacyUnitData, line 390")
set YxS=0
endif
else
set SF=SF-1
set YxS=iF[SF]
set oF[YxS]=1315
endif
set MM=MM-1
return YxS
endfunction
function JBs takes integer DBs,string HBs returns nothing
set w3[MM]=HBs
set MM=MM+1
set hI[DBs]=rDs("when calling new_HashList in LegacyUnitData, line 394")
set MM=MM-1
endfunction
function MBs takes integer VBs,integer BBs,string NBs returns nothing
set w3[MM]=NBs
set MM=MM+1
call JBs(VBs,"when calling LegacyPositionedUnitData_init in LegacyUnitData, line 396")
set gI[VBs]=BBs
set MM=MM-1
endfunction
function CBs takes integer KBs,string LBs returns integer
local integer XBs
set w3[MM]=LBs
set MM=MM+1
set XBs=GxS("when calling alloc_LegacyPositionedUnitData in LegacyUnitData, line 396")
call MBs(XBs,KBs,"when calling construct_LegacyPositionedUnitData in LegacyUnitData, line 396")
set MM=MM-1
return XBs
endfunction
function iBs takes integer rBs,string sBs returns nothing
local integer tBs
set w3[MM]=sBs
set MM=MM+1
set tBs=0
set qI[rBs]=tBs
set aI[rBs]=oRS("when calling new_StringHashMap in LegacyStringTable, line 19")
set nI[rBs]=TfS("when calling new_StringHashList in LegacyStringTable, line 20")
set MM=MM-1
endfunction
function bBs takes integer OBs,string lBs returns nothing
set w3[MM]=lBs
set MM=MM+1
call iBs(OBs,"when calling StringTable_init in LegacyStringTable, line 15")
set MM=MM-1
endfunction
function bxS takes string OxS returns integer
local integer lxS
set w3[MM]=OxS
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set lxS=mg
set Qg[lxS]=723
else
call Mau("Out of memory: Could not create StringTable.","when calling error in LegacyStringTable, line 15")
set lxS=0
endif
else
set vg=vg-1
set lxS=xg[vg]
set Qg[lxS]=723
endif
set MM=MM-1
return lxS
endfunction
function oBs takes string SBs returns integer
local integer cBs
set w3[MM]=SBs
set MM=MM+1
set cBs=bxS("when calling alloc_StringTable in LegacyStringTable, line 15")
call bBs(cBs,"when calling construct_StringTable in LegacyStringTable, line 15")
set MM=MM-1
return cBs
endfunction
function ECs takes integer vCs,string mCs returns nothing
local real QCs
local real WCs
set w3[MM]=mCs
set MM=MM+1
set QCs=0.
set WCs=0.
set OI[vCs]=QCs
set lI[vCs]=WCs
set bI[vCs]=oBs("when calling new_StringTable in LegacySaveData, line 30")
set yI[vCs]=CBs(bI[vCs],"when calling new_LegacyPositionedUnitData in LegacySaveData, line 31")
set MM=MM-1
endfunction
function vct takes integer xct returns nothing
endfunction
function Wct takes integer mct,player Qct returns nothing
call vct(mct)
set VD[mct]=Qct
endfunction
function LCs takes integer DCs,player HCs,string JCs,string KCs returns nothing
set w3[MM]=KCs
set MM=MM+1
call Wct(DCs,HCs)
call ECs(DCs,"when calling LegacySaveData_init in LegacySaveData, line 33")
set oI[DCs]=JCs
set MM=MM-1
endfunction
function LjS takes string JjS returns integer
local integer KjS
set w3[MM]=JjS
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set KjS=mg
set Qg[KjS]=717
else
call Mau("Out of memory: Could not create LegacySaveData.","when calling error in LegacySaveData, line 21")
set KjS=0
endif
else
set vg=vg-1
set KjS=xg[vg]
set Qg[KjS]=717
endif
set MM=MM-1
return KjS
endfunction
function ACs takes player ZCs,string UCs,string ICs returns integer
local integer PCs
set w3[MM]=ICs
set MM=MM+1
set PCs=LjS("when calling alloc_LegacySaveData in LegacySaveData, line 33")
call LCs(PCs,ZCs,UCs,"when calling construct_LegacySaveData in LegacySaveData, line 33")
set MM=MM-1
return PCs
endfunction
function Dus takes real Ius,real Pus,real Aus returns real
set a4=Ius/Aus
set n4=Pus/Aus
return a4
endfunction
function tIu takes rect sIu returns real
set C1=SIu(sIu)
set V1=oIu(sIu)
return C1
endfunction
function JGr takes integer mGr,string QGr returns real
local real WGr
local real EGr
local integer ZGr
local integer UGr
local rect IGr
local real PGr
local real AGr
local real DGr
local real HGr
set w3[MM]=QGr
set MM=MM+1
set PGr=0.
set AGr=0.
set WGr=PGr
set EGr=AGr
set ZGr=vGr(mGr,"when calling getSelectedRects in SotfrpGuiRegions, line 85")
set UGr=x1s(ZGr,"when calling iterator in SotfrpGuiRegions, line 86")
loop
exitwhen not t1s(UGr)
set IGr=Mvr(r1s(UGr),"when calling rectFromIndex in SotfrpGuiRegions, line 86")
set DGr=kus(WGr,EGr,Dus(tIu(IGr),V1,rgu(RDc(ZGr,"when calling size in SotfrpGuiRegions, line 87"))),n4)
set HGr=x1
set WGr=DGr
set EGr=HGr
endloop
call c1s(UGr,"when calling close in SotfrpGuiRegions, line 86")
call CAc(ZGr,"when calling dispatch_LinkedList_destroyLinkedList in SotfrpGuiRegions, line 88")
set MM=MM-1
set p4=WGr
set e4=EGr
set IGr=null
return p4
endfunction
function MUs takes integer VUs,string BUs returns integer
local integer NUs
set w3[MM]=BUs
set MM=MM+1
set NUs=FQc(VUs,1,"when calling getCount in HashData, line 202")
set MM=MM-1
return NUs
endfunction
function bWc takes integer oWc,string OWc returns integer
local integer lWc
set w3[MM]=OWc
set MM=MM+1
if FY[oWc]==0 then
if oWc==0 then
call Mau("Nullpointer exception when calling HashReader.getRealCount","when calling error in HashData, line 201")
else
call Mau("Called HashReader.getRealCount on invalid object.","when calling error in HashData, line 201")
endif
endif
set lWc=MUs(oWc,"when calling getRealCount in HashData, line 201")
set MM=MM-1
return lWc
endfunction
function emS takes string ymS returns integer
local integer pmS
set w3[MM]=ymS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set pmS=IY
set PY[pmS]=1372
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 298")
set pmS=0
endif
else
set UY=UY-1
set pmS=ZY[UY]
set PY[pmS]=1372
endif
set MM=MM-1
return pmS
endfunction
function nmS takes string qmS returns integer
local integer amS
set w3[MM]=qmS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set amS=HY
set JY[amS]=1336
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 298")
set amS=0
endif
else
set DY=DY-1
set amS=AY[DY]
set JY[amS]=1336
endif
set MM=MM-1
return amS
endfunction
function QmS takes string vmS returns integer
local integer mmS
set w3[MM]=vmS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set mmS=IY
set PY[mmS]=1375
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 357")
set mmS=0
endif
else
set UY=UY-1
set mmS=ZY[UY]
set PY[mmS]=1375
endif
set MM=MM-1
return mmS
endfunction
function ZmS takes string WmS returns integer
local integer EmS
set w3[MM]=WmS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set EmS=HY
set JY[EmS]=1339
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 357")
set EmS=0
endif
else
set DY=DY-1
set EmS=AY[DY]
set JY[EmS]=1339
endif
set MM=MM-1
return EmS
endfunction
function L8t takes integer P8t,string A8t returns nothing
local integer D8t
local integer H8t
local integer J8t
local integer K8t
set w3[MM]=A8t
set MM=MM+1
set J8t=aq
set D8t=QmS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 357")
set vA[D8t]=P8t
set K8t=D8t
set H8t=ZmS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 357")
set mA[H8t]=P8t
call rdu(J8t,K8t,H8t,"when calling executeWhile in NetworkData, line 357")
set MM=MM-1
endfunction
function CJc takes integer LJc,string XJc returns nothing
set w3[MM]=XJc
set MM=MM+1
if rk[LJc]==0 then
if LJc==0 then
call Mau("Nullpointer exception when calling Network.writeReals","when calling error in NetworkData, line 356")
else
call Mau("Called Network.writeReals on invalid object.","when calling error in NetworkData, line 356")
endif
endif
call L8t(LJc,"when calling writeReals in NetworkData, line 356")
set MM=MM-1
endfunction
function GmS takes string TmS returns integer
local integer YmS
set w3[MM]=TmS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set YmS=HY
set JY[YmS]=1337
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 345")
set YmS=0
endif
else
set DY=DY-1
set YmS=AY[DY]
set JY[YmS]=1337
endif
set MM=MM-1
return YmS
endfunction
function RmS takes string dmS returns integer
local integer fmS
set w3[MM]=dmS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set fmS=IY
set PY[fmS]=1373
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 345")
set fmS=0
endif
else
set UY=UY-1
set fmS=ZY[UY]
set PY[fmS]=1373
endif
set MM=MM-1
return fmS
endfunction
function v8t takes integer g8t,string h8t returns nothing
local integer F8t
local integer k8t
local integer j8t
local integer x8t
set w3[MM]=h8t
set MM=MM+1
set j8t=aq
set F8t=RmS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 345")
set FA[F8t]=g8t
set x8t=F8t
set k8t=GmS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 345")
set kA[k8t]=g8t
call rdu(j8t,x8t,k8t,"when calling executeWhile in NetworkData, line 345")
set MM=MM-1
endfunction
function DJc takes integer PJc,string AJc returns nothing
set w3[MM]=AJc
set MM=MM+1
if rk[PJc]==0 then
if PJc==0 then
call Mau("Nullpointer exception when calling Network.writeInts","when calling error in NetworkData, line 344")
else
call Mau("Called Network.writeInts on invalid object.","when calling error in NetworkData, line 344")
endif
endif
call v8t(PJc,"when calling writeInts in NetworkData, line 344")
set MM=MM-1
endfunction
function iQS takes string sQS returns integer
local integer tQS
set w3[MM]=sQS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set tQS=IY
set PY[tQS]=1379
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 381")
set tQS=0
endif
else
set UY=UY-1
set tQS=ZY[UY]
set PY[tQS]=1379
endif
set MM=MM-1
return tQS
endfunction
function oQS takes string SQS returns integer
local integer cQS
set w3[MM]=SQS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set cQS=HY
set JY[cQS]=1343
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 381")
set cQS=0
endif
else
set DY=DY-1
set cQS=AY[DY]
set JY[cQS]=1343
endif
set MM=MM-1
return cQS
endfunction
function T9t takes integer q9t,string a9t returns nothing
local integer n9t
local integer d9t
local integer f9t
local integer R9t
set w3[MM]=a9t
set MM=MM+1
set f9t=aq
set n9t=iQS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 381")
set PA[n9t]=q9t
set R9t=n9t
set d9t=oQS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 381")
set AA[d9t]=q9t
call rdu(f9t,R9t,d9t,"when calling executeWhile in NetworkData, line 381")
set MM=MM-1
endfunction
function cKc takes integer iKc,string SKc returns nothing
set w3[MM]=SKc
set MM=MM+1
if rk[iKc]==0 then
if iKc==0 then
call Mau("Nullpointer exception when calling Network.writeStrings","when calling error in NetworkData, line 380")
else
call Mau("Called Network.writeStrings on invalid object.","when calling error in NetworkData, line 380")
endif
endif
call T9t(iKc,"when calling writeStrings in NetworkData, line 380")
set MM=MM-1
endfunction
function nQS takes string qQS returns integer
local integer aQS
set w3[MM]=qQS
set MM=MM+1
if yk==0 then
if pk<32768 then
set pk=pk+1
set aQS=pk
set ek[aQS]=1647
else
call Mau("Out of memory: Could not create SynchronizationCallback_onSynced_Network_NetworkData.","when calling error in NetworkData, line 420")
set aQS=0
endif
else
set yk=yk-1
set aQS=bk[yk]
set ek[aQS]=1647
endif
set MM=MM-1
return aQS
endfunction
function LmS takes string JmS returns integer
local integer KmS
set w3[MM]=JmS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set KmS=IY
set PY[KmS]=1377
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 369")
set KmS=0
endif
else
set UY=UY-1
set KmS=ZY[UY]
set PY[KmS]=1377
endif
set MM=MM-1
return KmS
endfunction
function VmS takes string XmS returns integer
local integer CmS
set w3[MM]=XmS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set CmS=HY
set JY[CmS]=1341
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Network_NetworkData.","when calling error in NetworkData, line 369")
set CmS=0
endif
else
set DY=DY-1
set CmS=AY[DY]
set JY[CmS]=1341
endif
set MM=MM-1
return CmS
endfunction
function c9t takes integer u9t,string r9t returns nothing
local integer s9t
local integer t9t
local integer i9t
local integer S9t
set w3[MM]=r9t
set MM=MM+1
set i9t=aq
set s9t=LmS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 369")
set EA[s9t]=u9t
set S9t=s9t
set t9t=VmS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 369")
set ZA[t9t]=u9t
call rdu(i9t,S9t,t9t,"when calling executeWhile in NetworkData, line 369")
set MM=MM-1
endfunction
function uKc takes integer MJc,string wKc returns nothing
set w3[MM]=wKc
set MM=MM+1
if rk[MJc]==0 then
if MJc==0 then
call Mau("Nullpointer exception when calling Network.writeBooleans","when calling error in NetworkData, line 368")
else
call Mau("Called Network.writeBooleans on invalid object.","when calling error in NetworkData, line 368")
endif
endif
call c9t(MJc,"when calling writeBooleans in NetworkData, line 368")
set MM=MM-1
endfunction
function q8t takes integer l8t,string b8t returns nothing
local integer y8t
local integer p8t
local integer e8t
set w3[MM]=b8t
set MM=MM+1
set y8t=c2S("when calling new_SimpleSynchronizer in NetworkData, line 393")
call Zvc(rA[l8t],"when calling reset in NetworkData, line 396")
call Zvc(sA[l8t],"when calling reset in NetworkData, line 397")
call Zvc(tA[l8t],"when calling reset in NetworkData, line 398")
call Zvc(iA[l8t],"when calling reset in NetworkData, line 399")
call Ufu(dq,NP[l8t])
call Ufu(fq,NP[l8t])
if ea==cA[l8t]then
call DJc(l8t,"when calling writeInts in NetworkData, line 407")
call uKc(l8t,"when calling writeBooleans in NetworkData, line 408")
call CJc(l8t,"when calling writeReals in NetworkData, line 409")
call cKc(l8t,"when calling writeStrings in NetworkData, line 410")
call Qvc(rA[l8t],"when calling sync in NetworkData, line 413")
call Qvc(tA[l8t],"when calling sync in NetworkData, line 414")
call Qvc(sA[l8t],"when calling sync in NetworkData, line 415")
call Qvc(iA[l8t],"when calling sync in NetworkData, line 416")
endif
call Lso(y8t,"when calling sync in NetworkData, line 419")
set e8t=y8t
set p8t=nQS("when calling alloc_SynchronizationCallback_onSynced_Network_NetworkData in NetworkData, line 420")
set JA[p8t]=l8t
call Bso(e8t,p8t,"when calling onSynced in NetworkData, line 420")
set MM=MM-1
endfunction
function pKc takes integer bKc,string yKc returns nothing
set w3[MM]=yKc
set MM=MM+1
if rk[bKc]==0 then
if bKc==0 then
call Mau("Nullpointer exception when calling Network.sendRound","when calling error in NetworkData, line 392")
else
call Mau("Called Network.sendRound on invalid object.","when calling error in NetworkData, line 392")
endif
endif
call q8t(bKc,"when calling sendRound in NetworkData, line 392")
set MM=MM-1
endfunction
function sIs takes integer wIs,string uIs returns integer
local integer rIs
set w3[MM]=uIs
set MM=MM+1
set rIs=FQc(wIs,3,"when calling getCount in HashData, line 205")
set MM=MM-1
return rIs
endfunction
function qWc takes integer yWc,string pWc returns integer
local integer eWc
set w3[MM]=pWc
set MM=MM+1
if FY[yWc]==0 then
if yWc==0 then
call Mau("Nullpointer exception when calling HashReader.getBooleanCount","when calling error in HashData, line 204")
else
call Mau("Called HashReader.getBooleanCount on invalid object.","when calling error in HashData, line 204")
endif
endif
set eWc=sIs(yWc,"when calling getBooleanCount in HashData, line 204")
set MM=MM-1
return eWc
endfunction
function O8t takes integer D7t,string H7t returns nothing
local integer J7t
local integer K7t
local integer L7t
local integer X7t
local integer C7t
local integer V7t
local integer B7t
local boolean N7t
local integer M7t
local integer w8t
local integer u8t
local integer r8t
local integer s8t
local integer t8t
local integer i8t
local integer S8t
local integer c8t
local integer o8t
set w3[MM]=H7t
set MM=MM+1
if not PWu(cA[D7t])then
call mJc(D7t,"when calling abort in NetworkData, line 288")
set MM=MM-1
return
endif
if ea==cA[D7t]then
set wA[D7t]=lEc(MP[D7t],"when calling intoReader in NetworkData, line 293")
set MP[D7t]=0
set u8t=aq
set J7t=emS("when calling alloc_LimitedExecuteCondition_executeWhile_Network_NetworkData in NetworkData, line 298")
set gA[J7t]=D7t
set r8t=J7t
set K7t=nmS("when calling alloc_LimitedExecuteAction_executeWhile_Network_NetworkData in NetworkData, line 298")
set hA[K7t]=D7t
call rdu(u8t,r8t,K7t,"when calling executeWhile in NetworkData, line 298")
call yro(uA[D7t],"when calling encode in NetworkData, line 302")
set L7t=cWc(wA[D7t],"when calling getIntCount in NetworkData, line 305")
set X7t=bWc(wA[D7t],"when calling getRealCount in NetworkData, line 306")
set C7t=qWc(wA[D7t],"when calling getBooleanCount in NetworkData, line 307")
set V7t=Zro(uA[D7t],"when calling getIntCount in NetworkData, line 308")
set B7t=tfo(L7t,X7t,C7t,V7t)
set N7t=ModuloInteger(B7t,Re)>0
set s8t=B7t/Re
if N7t then
set w8t=1
else
set w8t=0
endif
set M7t=s8t+w8t
set t8t=L7t
set i8t=X7t
set S8t=C7t
set c8t=V7t
set o8t=M7t
set oA[D7t]=t8t
set OA[D7t]=i8t
set lA[D7t]=S8t
set bA[D7t]=c8t
set yA[D7t]=o8t
set pA[D7t]=true
call kHc(SA[D7t],oA[D7t],OA[D7t],lA[D7t],bA[D7t],yA[D7t],"when calling setCounts in NetworkData, line 322")
call KHc(SA[D7t],"when calling sync in NetworkData, line 323")
endif
call pKc(D7t,"when calling sendRound in NetworkData, line 327")
set MM=MM-1
endfunction
function EJc takes integer QJc,string WJc returns nothing
set w3[MM]=WJc
set MM=MM+1
if rk[QJc]==0 then
if QJc==0 then
call Mau("Nullpointer exception when calling Network.sendMetadata","when calling error in NetworkData, line 285")
else
call Mau("Called Network.sendMetadata on invalid object.","when calling error in NetworkData, line 285")
endif
endif
call O8t(QJc,"when calling sendMetadata in NetworkData, line 285")
set MM=MM-1
endfunction
function D9t takes integer I9t,integer P9t,string A9t returns nothing
set w3[MM]=A9t
set MM=MM+1
set fA[I9t]=P9t
call EJc(I9t,"when calling sendMetadata in NetworkData, line 464")
set MM=MM-1
endfunction
function RKc takes integer nKc,integer dKc,string fKc returns nothing
set w3[MM]=fKc
set MM=MM+1
if rk[nKc]==0 then
if nKc==0 then
call Mau("Nullpointer exception when calling Network.start","when calling error in NetworkData, line 462")
else
call Mau("Called Network.start on invalid object.","when calling error in NetworkData, line 462")
endif
endif
call D9t(nKc,dKc,"when calling start in NetworkData, line 462")
set MM=MM-1
endfunction
function VES takes string XES returns integer
local integer CES
set w3[MM]=XES
set MM=MM+1
if tk==0 then
if ik<32768 then
set ik=ik+1
set CES=ik
set Sk[CES]=1410
else
call Mau("Out of memory: Could not create NetworkFinishedCallback_start_Persistable_PersistableData.","when calling error in PersistableData, line 139")
set CES=0
endif
else
set tk=tk-1
set CES=sk[tk]
set Sk[CES]=1410
endif
set MM=MM-1
return CES
endfunction
function HES takes string AES returns integer
local integer DES
set w3[MM]=AES
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set DES=NY
set MY[DES]=794
else
call Mau("Out of memory: Could not create ForForceCallback_try_Persistable_PersistableData.","when calling error in PersistableData, line 98")
set DES=0
endif
else
set BY=BY-1
set DES=VY[BY]
set MY[DES]=794
endif
set MM=MM-1
return DES
endfunction
function LES takes string JES returns integer
local integer KES
set w3[MM]=JES
set MM=MM+1
if ok==0 then
if Ok<32768 then
set Ok=Ok+1
set KES=Ok
set lk[KES]=1413
else
call Mau("Out of memory: Could not create NetworkWriteCallback_write_Persistable_PersistableData.","when calling error in PersistableData, line 113")
set KES=0
endif
else
set ok=ok-1
set KES=ck[ok]
set lk[KES]=1413
endif
set MM=MM-1
return KES
endfunction
function PES takes string UES returns integer
local integer IES
set w3[MM]=UES
set MM=MM+1
if ok==0 then
if Ok<32768 then
set Ok=Ok+1
set IES=Ok
set lk[IES]=1412
else
call Mau("Out of memory: Could not create NetworkWriteCallback_write_Persistable_PersistableData.","when calling error in PersistableData, line 95")
set IES=0
endif
else
set ok=ok-1
set IES=ck[ok]
set lk[IES]=1412
endif
set MM=MM-1
return IES
endfunction
function ZES takes string WES returns integer
local integer EES
set w3[MM]=WES
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set EES=NY
set MY[EES]=793
else
call Mau("Out of memory: Could not create ForForceCallback_try_Persistable_PersistableData.","when calling error in PersistableData, line 79")
set EES=0
endif
else
set BY=BY-1
set EES=VY[BY]
set MY[EES]=793
endif
set MM=MM-1
return EES
endfunction
function omS takes string SmS returns integer
local integer cmS
set w3[MM]=SmS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set cmS=NY
set MY[cmS]=770
else
call Mau("Out of memory: Could not create ForForceCallback_execute_Network_NetworkData.","when calling error in NetworkData, line 273")
set cmS=0
endif
else
set BY=BY-1
set cmS=VY[BY]
set MY[cmS]=770
endif
set MM=MM-1
return cmS
endfunction
function W7t takes integer x7t,integer v7t,string m7t returns nothing
local integer Q7t
set w3[MM]=m7t
set MM=MM+1
set Q7t=omS("when calling alloc_ForForceCallback_execute_Network_NetworkData in NetworkData, line 273")
set RA[Q7t]=x7t
set TA[Q7t]=v7t
call Inu(Q7t,"when calling execute in NetworkData, line 273")
set MM=MM-1
endfunction
function jJc takes integer hJc,integer FJc,string kJc returns nothing
set w3[MM]=kJc
set MM=MM+1
if rk[hJc]==0 then
if hJc==0 then
call Mau("Nullpointer exception when calling Network.write","when calling error in NetworkData, line 271")
else
call Mau("Called Network.write on invalid object.","when calling error in NetworkData, line 271")
endif
endif
call W7t(hJc,FJc,"when calling write in NetworkData, line 271")
set MM=MM-1
endfunction
function eec takes integer yec,string pec returns nothing
set w3[MM]=pec
set MM=MM+1
if Nm[yec]==0 then
call Mau("Double free: object of type Box⟪DataReader103⟫","when calling error in Box, line 14")
else
set Cm[Vm]=yec
set Vm=Vm+1
set Nm[yec]=0
endif
set MM=MM-1
endfunction
function bTS takes integer OTS,string lTS returns nothing
set w3[MM]=lTS
set MM=MM+1
call Box_onDestroy(OTS)
call eec(OTS,"when calling dealloc_Box⟪DataReader103⟫ in Box, line 13")
set MM=MM-1
endfunction
function mqo takes integer xqo,string vqo returns nothing
set w3[MM]=vqo
set MM=MM+1
if Nm[xqo]==0 then
if xqo==0 then
call Mau("Nullpointer exception when calling Box⟪DataReader103⟫.Box","when calling error in Box, line 14")
else
call Mau("Called Box⟪DataReader103⟫.Box on invalid object.","when calling error in Box, line 14")
endif
endif
call bTS(xqo,"when calling destroyBox⟪DataReader103⟫ in Box, line 14")
set MM=MM-1
endfunction
function bec takes string Oec returns integer
local integer lec
set w3[MM]=Oec
set MM=MM+1
if Vm==0 then
if Bm<32768 then
set Bm=Bm+1
set lec=Bm
set Nm[lec]=652
else
call Mau("Out of memory: Could not create Box⟪DataReader103⟫.","when calling error in Box, line 14")
set lec=0
endif
else
set Vm=Vm-1
set lec=Cm[Vm]
set Nm[lec]=652
endif
set MM=MM-1
return lec
endfunction
function UTS takes integer ZTS returns nothing
endfunction
function kTS takes integer hTS,integer FTS returns nothing
call UTS(hTS)
set BM[hTS]=FTS
endfunction
function oTS takes integer iTS,string STS returns integer
local integer cTS
set w3[MM]=STS
set MM=MM+1
set cTS=bec("when calling alloc_Box⟪DataReader103⟫ in Box, line 17")
call kTS(cTS,iTS)
set MM=MM-1
return cTS
endfunction
function bgS takes integer OgS,string lgS returns nothing
set w3[MM]=lgS
set MM=MM+1
if VG[OgS]==0 then
call Mau("Double free: object of type ByteBuffer","when calling error in ByteBuffer, line 15")
else
set LG[XG]=OgS
set XG=XG+1
set VG[OgS]=0
endif
set MM=MM-1
endfunction
function sfs takes integer ufs,string rfs returns nothing
set w3[MM]=rfs
set MM=MM+1
call Rio(pW[ufs],"when calling dispatch_Table_destroyTable in ByteBuffer, line 30")
set MM=MM-1
endfunction
function Sfs takes integer tfs,string ifs returns nothing
set w3[MM]=ifs
set MM=MM+1
call sfs(tfs,"when calling ByteBuffer_onDestroy in ByteBuffer, line 29")
call bgS(tfs,"when calling dealloc_ByteBuffer in ByteBuffer, line 29")
set MM=MM-1
endfunction
function qYc takes integer pYc,string eYc returns nothing
set w3[MM]=eYc
set MM=MM+1
if VG[pYc]==0 then
if pYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.ByteBuffer","when calling error in ByteBuffer, line 15")
else
call Mau("Called ByteBuffer.ByteBuffer on invalid object.","when calling error in ByteBuffer, line 15")
endif
endif
call Sfs(pYc,"when calling destroyByteBuffer in ByteBuffer, line 15")
set MM=MM-1
endfunction
function Wos takes integer mos,string Qos returns nothing
set w3[MM]=Qos
set MM=MM+1
if nQ[mos]!=0 then
call qYc(nQ[mos],"when calling dispatch_ByteBuffer_destroyByteBuffer in Base64Data, line 85")
endif
set MM=MM-1
endfunction
function xYS takes integer kYS,string jYS returns nothing
set w3[MM]=jYS
set MM=MM+1
if FY[kYS]==0 then
call Mau("Double free: object of type Base64DataReader","when calling error in Base64Data, line 77")
else
set GY[gY]=kYS
set gY=gY+1
set FY[kYS]=0
endif
set MM=MM-1
endfunction
function Tos takes integer fos,string Ros returns nothing
set w3[MM]=Ros
set MM=MM+1
call Wos(fos,"when calling Base64DataReader_onDestroy in Base64Data, line 83")
call xYS(fos,"when calling dealloc_Base64DataReader in Base64Data, line 83")
set MM=MM-1
endfunction
function GZs takes integer YZs returns nothing
endfunction
function ekS takes integer ykS,string pkS returns nothing
set w3[MM]=pkS
set MM=MM+1
if FY[ykS]==0 then
call Mau("Double free: object of type HashDataProxyReader","when calling error in HashData, line 228")
else
set GY[gY]=ykS
set gY=gY+1
set FY[ykS]=0
endif
set MM=MM-1
endfunction
function lZs takes integer oZs,string OZs returns nothing
set w3[MM]=OZs
set MM=MM+1
call GZs(oZs)
call ekS(oZs,"when calling dealloc_HashDataProxyReader in HashData, line 228")
set MM=MM-1
endfunction
function ohS takes integer ShS,string chS returns nothing
set w3[MM]=chS
set MM=MM+1
if FY[ShS]==0 then
call Mau("Double free: object of type DataReader","when calling error in DataInterfaces, line 82")
else
set GY[gY]=ShS
set gY=gY+1
set FY[ShS]=0
endif
set MM=MM-1
endfunction
function shs takes integer uhs,string rhs returns nothing
set w3[MM]=rhs
set MM=MM+1
call ohS(uhs,"when calling dealloc_DataReader in DataInterfaces, line 82")
set MM=MM-1
endfunction
function tFc takes integer rFc,string sFc returns nothing
set w3[MM]=sFc
set MM=MM+1
if FY[rFc]==0 then
if rFc==0 then
call Mau("Nullpointer exception when calling DataReader.DataReader","when calling error in DataInterfaces, line 82")
else
call Mau("Called DataReader.DataReader on invalid object.","when calling error in DataInterfaces, line 82")
endif
endif
if FY[rFc]<=711 then
if FY[rFc]<=710 then
call shs(rFc,"when calling destroyDataReader in DataInterfaces, line 82")
else
call Tos(rFc,"when calling destroyBase64DataReader in DataInterfaces, line 82")
endif
elseif FY[rFc]<=712 then
call lZs(rFc,"when calling destroyHashDataProxyReader in DataInterfaces, line 82")
else
call MZs(rFc,"when calling destroyHashReader in DataInterfaces, line 82")
endif
set MM=MM-1
endfunction
function sct takes integer DSt,integer HSt,string JSt returns nothing
local integer KSt
local integer LSt
local boolean XSt
local integer CSt
local integer VSt
local integer BSt
local boolean NSt
local integer MSt
local integer wct
local integer uct
local integer rct
set w3[MM]=JSt
set MM=MM+1
set KSt=uTS(0,"when calling new_Box⟪integer⟫ in PersistableData, line 76")
set LSt=oTS(0,"when calling new_Box⟪DataReader103⟫ in PersistableData, line 77")
set CSt=ZES("when calling alloc_ForForceCallback_try_Persistable_PersistableData in PersistableData, line 79")
set ND[CSt]=DSt
set MD[CSt]=LSt
set XSt=Jnu(CSt,"when calling try in PersistableData, line 79")
set VSt=BM[LSt]
call mqo(LSt,"when calling dispatch_Box⟪DataReader103⟫_destroyBox⟪DataReader103⟫ in PersistableData, line 92")
if XSt and VSt!=0 then
set uct=HSt
set BSt=PES("when calling alloc_NetworkWriteCallback_write_Persistable_PersistableData in PersistableData, line 95")
call jJc(uct,BSt,"when calling write in PersistableData, line 95")
set MSt=HES("when calling alloc_ForForceCallback_try_Persistable_PersistableData in PersistableData, line 98")
set wH[MSt]=HSt
set uH[MSt]=VSt
set rH[MSt]=DSt
set NSt=Jnu(MSt,"when calling try in PersistableData, line 98")
if NSt then
call jqo(KSt,"when calling dispatch_Box⟪integer⟫_destroyBox⟪integer⟫ in PersistableData, line 104")
if VSt!=0 then
call tFc(VSt,"when calling dispatch_DataReader_destroyDataReader in PersistableData, line 106")
endif
set MM=MM-1
return
else
set VM[KSt]=2
endif
else
set VM[KSt]=1
endif
set rct=HSt
set wct=LES("when calling alloc_NetworkWriteCallback_write_Persistable_PersistableData in PersistableData, line 113")
set sH[wct]=KSt
call jJc(rct,wct,"when calling write in PersistableData, line 113")
call jqo(KSt,"when calling dispatch_Box⟪integer⟫_destroyBox⟪integer⟫ in PersistableData, line 117")
if VSt!=0 then
call tFc(VSt,"when calling dispatch_DataReader_destroyDataReader in PersistableData, line 119")
endif
set MM=MM-1
endfunction
function XCc takes integer JCc,integer KCc,string LCc returns nothing
set w3[MM]=LCc
set MM=MM+1
if Qg[JCc]==0 then
if JCc==0 then
call Mau("Nullpointer exception when calling Persistable.readIntoNetwork","when calling error in PersistableData, line 75")
else
call Mau("Called Persistable.readIntoNetwork on invalid object.","when calling error in PersistableData, line 75")
endif
endif
call sct(JCc,KCc,"when calling readIntoNetwork in PersistableData, line 75")
set MM=MM-1
endfunction
function MvS takes string BvS returns integer
local integer NvS
set w3[MM]=BvS
set MM=MM+1
if wk==0 then
if uk<32768 then
set uk=uk+1
set NvS=uk
set rk[NvS]=1404
else
call Mau("Out of memory: Could not create Network.","when calling error in NetworkData, line 204")
set NvS=0
endif
else
set wk=wk-1
set NvS=MF[wk]
set rk[NvS]=1404
endif
set MM=MM-1
return NvS
endfunction
function D2s takes integer P2s,string A2s returns nothing
set w3[MM]=A2s
set MM=MM+1
set xP[P2s]=RRu(P2s,"when calling get in Metadata, line 24")
set MM=MM-1
endfunction
function C2s takes integer L2s,string X2s returns nothing
set w3[MM]=X2s
set MM=MM+1
call D2s(L2s,"when calling MetadataStore_init in Metadata, line 26")
call Ufu(Sq,xP[L2s])
set MM=MM-1
endfunction
function FvS takes string gvS returns integer
local integer hvS
set w3[MM]=gvS
set MM=MM+1
if KF==0 then
if LF<32768 then
set LF=LF+1
set hvS=LF
set XF[hvS]=1402
else
call Mau("Out of memory: Could not create MetadataStore.","when calling error in Metadata, line 12")
set hvS=0
endif
else
set KF=KF-1
set hvS=JF[KF]
set XF[hvS]=1402
endif
set MM=MM-1
return hvS
endfunction
function K2s takes string H2s returns integer
local integer J2s
set w3[MM]=H2s
set MM=MM+1
set J2s=FvS("when calling alloc_MetadataStore in Metadata, line 26")
call C2s(J2s,"when calling construct_MetadataStore in Metadata, line 26")
set MM=MM-1
return J2s
endfunction
function GkS takes string TkS returns integer
local integer YkS
set w3[MM]=TkS
set MM=MM+1
if jY==0 then
if xY<32768 then
set xY=xY+1
set YkS=xY
set vY[YkS]=731
else
call Mau("Out of memory: Could not create HashWriter.","when calling error in HashData, line 8")
set YkS=0
endif
else
set jY=jY-1
set YkS=kY[jY]
set vY[YkS]=731
endif
set MM=MM-1
return YkS
endfunction
function TPs takes integer fPs,string RPs returns nothing
set w3[MM]=RPs
set MM=MM+1
set eU[fPs]=O7S("when calling new_Table in HashData, line 9")
set qU[fPs]=0
set aU[fPs]=0
set nU[fPs]=0
set dU[fPs]=0
set MM=MM-1
endfunction
function kPs takes integer hPs,string FPs returns nothing
set w3[MM]=FPs
set MM=MM+1
call TPs(hPs,"when calling HashWriter_init in HashData, line 8")
set MM=MM-1
endfunction
function gPs takes string YPs returns integer
local integer GPs
set w3[MM]=YPs
set MM=MM+1
set GPs=GkS("when calling alloc_HashWriter in HashData, line 8")
call kPs(GPs,"when calling construct_HashWriter in HashData, line 8")
set MM=MM-1
return GPs
endfunction
function OWs takes integer oWs returns nothing
set mZ[oWs]=-1
set QZ[oWs]=-1
set EZ[oWs]=0
endfunction
function RWs takes integer aWs,gamecache nWs,string dWs,integer fWs returns nothing
call OWs(aWs)
set xZ[aWs]=nWs
set vZ[aWs]=dWs
set WZ[aWs]=fWs
endfunction
function xFS takes string kFS returns integer
local integer jFS
set w3[MM]=kFS
set MM=MM+1
if th==0 then
if ih<32768 then
set ih=ih+1
set jFS=ih
set Sh[jFS]=818
else
call Mau("Out of memory: Could not create GamecacheBuffer.","when calling error in GamecacheBuffer, line 21")
set jFS=0
endif
else
set th=th-1
set jFS=sh[th]
set Sh[jFS]=818
endif
set MM=MM-1
return jFS
endfunction
function qWs takes gamecache lWs,string bWs,integer yWs,string pWs returns integer
local integer eWs
set w3[MM]=pWs
set MM=MM+1
set eWs=xFS("when calling alloc_GamecacheBuffer in GamecacheBuffer, line 29")
call RWs(eWs,lWs,bWs,yWs)
set MM=MM-1
return eWs
endfunction
function kMi takes integer hMi,string FMi returns nothing
set w3[MM]=FMi
set MM=MM+1
set VX[hMi]=""
set BX[hMi]=0
set NX[hMi]=gPs("when calling new_HashWriter in StringEncoder, line 63")
set wC[hMi]=gPs("when calling new_HashWriter in StringEncoder, line 66")
set MM=MM-1
endfunction
function WMi takes integer mMi,string QMi returns nothing
set w3[MM]=QMi
set MM=MM+1
call kMi(mMi,"when calling StringEncoder_init in StringEncoder, line 58")
set MM=MM-1
endfunction
function bOc takes string OOc returns integer
local integer lOc
set w3[MM]=OOc
set MM=MM+1
if yv==0 then
if pv<32768 then
set pv=pv+1
set lOc=pv
set ev[lOc]=1583
else
call Mau("Out of memory: Could not create StringEncoder.","when calling error in StringEncoder, line 59")
set lOc=0
endif
else
set yv=yv-1
set lOc=bv[yv]
set ev[lOc]=1583
endif
set MM=MM-1
return lOc
endfunction
function vMi takes string jMi returns integer
local integer xMi
set w3[MM]=jMi
set MM=MM+1
set xMi=bOc("when calling alloc_StringEncoder in StringEncoder, line 58")
call WMi(xMi,"when calling construct_StringEncoder in StringEncoder, line 58")
set MM=MM-1
return xMi
endfunction
function xQS takes string kQS returns integer
local integer jQS
set w3[MM]=kQS
set MM=MM+1
if tk==0 then
if ik<32768 then
set ik=ik+1
set jQS=ik
set Sk[jQS]=1409
else
call Mau("Out of memory: Could not create NetworkFinishedCallback_Network_NetworkData.","when calling error in NetworkData, line 244")
set jQS=0
endif
else
set tk=tk-1
set jQS=sk[tk]
set Sk[jQS]=1409
endif
set MM=MM-1
return jQS
endfunction
function s0t takes integer H9t,string J9t returns nothing
local integer K9t
local integer L9t
local integer X9t
local integer C9t
local integer V9t
local integer B9t
local integer N9t
local integer M9t
local integer w0t
local integer u0t
local integer r0t
set w3[MM]=J9t
set MM=MM+1
set NP[H9t]=RRu(H9t,"when calling get in NetworkData, line 213")
set MP[H9t]=gPs("when calling new_HashWriter in NetworkData, line 216")
set uA[H9t]=vMi("when calling new_StringEncoder in NetworkData, line 222")
set rA[H9t]=qWs(dq,NP[H9t],0,"when calling new_GamecacheBuffer in NetworkData, line 225")
set sA[H9t]=qWs(dq,NP[H9t],1,"when calling new_GamecacheBuffer in NetworkData, line 226")
set tA[H9t]=qWs(dq,NP[H9t],2,"when calling new_GamecacheBuffer in NetworkData, line 227")
set iA[H9t]=qWs(fq,NP[H9t],0,"when calling new_GamecacheBuffer in NetworkData, line 228")
set SA[H9t]=K2s("when calling new_MetadataStore in NetworkData, line 231")
set L9t=uq
set X9t=rq
set C9t=sq
set V9t=tq
set B9t=iq
set oA[H9t]=L9t
set OA[H9t]=X9t
set lA[H9t]=C9t
set bA[H9t]=V9t
set yA[H9t]=B9t
set pA[H9t]=false
set N9t=uq
set M9t=rq
set w0t=sq
set u0t=tq
set r0t=iq
set eA[H9t]=N9t
set qA[H9t]=M9t
set aA[H9t]=w0t
set nA[H9t]=u0t
set dA[H9t]=r0t
set K9t=xQS("when calling alloc_NetworkFinishedCallback_Network_NetworkData in NetworkData, line 244")
set fA[H9t]=K9t
set MM=MM-1
endfunction
function b0t takes integer o0t,player O0t,string l0t returns nothing
set w3[MM]=l0t
set MM=MM+1
call s0t(o0t,"when calling Network_init in NetworkData, line 246")
set cA[o0t]=O0t
set MM=MM-1
endfunction
function c0t takes player t0t,string i0t returns integer
local integer S0t
set w3[MM]=i0t
set MM=MM+1
set S0t=MvS("when calling alloc_Network in NetworkData, line 246")
call b0t(S0t,t0t,"when calling construct_Network in NetworkData, line 246")
set MM=MM-1
return S0t
endfunction
function fct takes integer pct,integer ect,string qct returns nothing
local integer act
local integer nct
local integer dct
set w3[MM]=qct
set MM=MM+1
set act=c0t(VD[pct],"when calling new_Network in PersistableData, line 134")
if ea==VD[pct]then
call XCc(pct,act,"when calling readIntoNetwork in PersistableData, line 137")
endif
set dct=act
set nct=VES("when calling alloc_NetworkFinishedCallback_start_Persistable_PersistableData in PersistableData, line 139")
set tH[nct]=pct
set iH[nct]=ect
call RKc(dct,nct,"when calling start in PersistableData, line 139")
set MM=MM-1
endfunction
function cVc takes integer tVc,integer iVc,string SVc returns nothing
set w3[MM]=SVc
set MM=MM+1
if Qg[tVc]==0 then
if tVc==0 then
call Mau("Nullpointer exception when calling Persistable.load","when calling error in PersistableData, line 133")
else
call Mau("Called Persistable.load on invalid object.","when calling error in PersistableData, line 133")
endif
endif
call fct(tVc,iVc,"when calling load in PersistableData, line 133")
set MM=MM-1
endfunction
function ioc takes string soc returns integer
local integer toc
set w3[MM]=soc
set MM=MM+1
if vk==0 then
if mk<32768 then
set mk=mk+1
set toc=mk
set Qk[toc]=1483
else
call Mau("Out of memory: Could not create PersistableLoadCallback_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 185")
set toc=0
endif
else
set vk=vk-1
set toc=xk[vk]
set Qk[toc]=1483
endif
set MM=MM-1
return toc
endfunction
function KLi takes integer jLi,integer xLi,integer vLi,string mLi returns integer
local real QLi
local real WLi
local integer ELi
local integer ZLi
local integer ULi
local integer ILi
local integer PLi
local real ALi
local real DLi
local real HLi
local real JLi
set w3[MM]=mLi
set MM=MM+1
set ALi=JGr(h2o(xLi,"when calling getPlayerId in SotfrpGuiRegions, line 181"),"when calling getSelectedOrigin in SotfrpGuiRegions, line 181")
set DLi=e4
set QLi=ALi
set WLi=DLi
set ELi=ACs(pa[h2o(xLi,"when calling getPlayerId in SotfrpGuiRegions, line 182")],S9o(N1o(vLi,0,"when calling get in SotfrpGuiRegions, line 182"),"when calling getInner in SotfrpGuiRegions, line 182"),"when calling new_LegacySaveData in SotfrpGuiRegions, line 182")
set ZLi=h2o(xLi,"when calling getPlayerId in SotfrpGuiRegions, line 183")
call FZu("Чтение файла и синхронизация данных...",30.,pa[ZLi])
set PLi=ELi
set ULi=ioc("when calling alloc_PersistableLoadCallback_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 185")
set GX[ULi]=ELi
set HLi=QLi
set JLi=WLi
set gX[ULi]=HLi
set hX[ULi]=JLi
set FX[ULi]=ZLi
call cVc(PLi,ULi,"when calling load in SotfrpGuiRegions, line 185")
set ILi=x4u("when calling nullptr in SotfrpGuiRegions, line 200")
set MM=MM-1
return ILi
endfunction
function KQt takes integer kQt,integer jQt,integer xQt,string vQt returns integer
local boolean mQt
local integer QQt
local integer WQt
local integer EQt
local real ZQt
local integer UQt
local integer IQt
local integer PQt
local integer AQt
local integer DQt
local integer HQt
local integer JQt
set w3[MM]=vQt
set MM=MM+1
set mQt=false
set QQt=0
set WQt=L1o(xQt,"when calling size in ScmdCoreBuiltins, line 218")-1
loop
exitwhen QQt>WQt
set HQt=px[N1o(xQt,QQt,"when calling get in ScmdCoreBuiltins, line 219")]
if not(HQt==1434 or HQt==1440)then
set mQt=true
endif
set QQt=QQt+1
endloop
set EQt=T8o(N1o(xQt,0,"when calling get in ScmdCoreBuiltins, line 221"),"when calling intValue in ScmdCoreBuiltins, line 221")
set ZQt=h8o(N1o(xQt,0,"when calling get in ScmdCoreBuiltins, line 222"),"when calling realValue in ScmdCoreBuiltins, line 222")
if mQt then
if L1o(xQt,"when calling size in ScmdCoreBuiltins, line 224")==1 then
set ZQt=-ZQt
else
set UQt=1
set IQt=L1o(xQt,"when calling size in ScmdCoreBuiltins, line 227")-1
loop
exitwhen UQt>IQt
set ZQt=ZQt-h8o(N1o(xQt,UQt,"when calling get in ScmdCoreBuiltins, line 228"),"when calling realValue in ScmdCoreBuiltins, line 228")
set UQt=UQt+1
endloop
endif
elseif L1o(xQt,"when calling size in ScmdCoreBuiltins, line 230")==1 then
set EQt=-EQt
else
set PQt=1
set AQt=L1o(xQt,"when calling size in ScmdCoreBuiltins, line 233")-1
loop
exitwhen PQt>AQt
set EQt=EQt-T8o(N1o(xQt,PQt,"when calling get in ScmdCoreBuiltins, line 234"),"when calling intValue in ScmdCoreBuiltins, line 234")
set PQt=PQt+1
endloop
endif
if mQt then
set DQt=j1t(ZQt,"when calling new_Real in ScmdCoreBuiltins, line 235")
else
set DQt=pMt(EQt,"when calling new_Integer in ScmdCoreBuiltins, line 235")
endif
set JQt=hBt(DQt,"when calling new_GenericSharedPointer in ScmdCoreBuiltins, line 235")
set MM=MM-1
return JQt
endfunction
function KTi takes integer PTi,integer ATi,integer DTi,string HTi returns integer
local integer JTi
set w3[MM]=HTi
set MM=MM+1
set JTi=l5i(pMt(p6r(H9o(N1o(DTi,0,"when calling get in ScmdUnitBuiltins, line 570"),"when calling getInner in ScmdUnitBuiltins, line 570")),"when calling new_Integer in ScmdUnitBuiltins, line 570"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 570")
set MM=MM-1
return JTi
endfunction
function OFr takes string oFr returns string
return StringCase(oFr,false)
endfunction
function Y4u takes string f4u,string R4u returns integer
local integer T4u
set w3[MM]=R4u
set MM=MM+1
set T4u=l5i(qCt(f4u,"when calling new_Exception in ScmdDataTypes, line 199"),"when calling new_SharedPointer in ScmdDataTypes, line 199")
set MM=MM-1
return T4u
endfunction
function qyu takes string byu returns playercolor
local playercolor yyu=null
local integer pyu=0
local integer eyu=Qp
loop
exitwhen pyu>eyu
if OFr(byu)==Up[pyu]then
set yyu=CWu(pyu)
exitwhen true
endif
set pyu=pyu+1
endloop
set onw=yyu
set yyu=null
return onw
endfunction
function mAu takes string YAu,string GAu returns player
local playercolor gAu
local integer hAu
local integer FAu
local player kAu
local integer jAu
local player xAu
local integer vAu
set w3[MM]=GAu
set MM=MM+1
set gAu=qyu(YAu)
if gAu!=null or OFr(YAu)=="red" then
set hAu=0
set FAu=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen hAu>FAu
if LWu(pa[hAu])==gAu then
set MM=MM-1
set N1=pa[hAu]
set M1=0
set gAu=null
set kAu=null
set xAu=null
return N1
endif
set hAu=hAu+1
endloop
endif
set xAu=null
set vAu=Y4u("Invalid color name","when calling wrap in SLangPlayerFunctions, line 69")
set kAu=xAu
set jAu=vAu
set MM=MM-1
set N1=kAu
set M1=jAu
set gAu=null
set kAu=null
set xAu=null
return N1
endfunction
function KTt takes integer WTt,integer ETt,integer ZTt,string UTt returns integer
local player ITt
local integer PTt
local integer ATt
local integer DTt
local player HTt
local integer JTt
set w3[MM]=UTt
set MM=MM+1
set HTt=mAu(S9o(N1o(ZTt,0,"when calling get in SLangPlayerFunctions, line 108"),"when calling getInner in SLangPlayerFunctions, line 108"),"when calling resolvePlayer in SLangPlayerFunctions, line 108")
set JTt=M1
set ITt=HTt
set PTt=JTt
if PTt==0 then
call SetPlayerAllianceStateVisionBJ(pa[h2o(ETt,"when calling getPlayerId in SLangPlayerFunctions, line 110")],ITt,false)
endif
if PTt!=0 then
set ATt=PTt
else
set ATt=x4u("when calling nullptr in SLangPlayerFunctions, line 111")
endif
set DTt=ATt
set MM=MM-1
set ITt=null
set HTt=null
return DTt
endfunction
function LJS takes string JJS returns integer
local integer KJS
set w3[MM]=JJS
set MM=MM+1
if Mj==0 then
if wx<32768 then
set wx=wx+1
set KJS=wx
set ux[KJS]=1248
else
call Mau("Out of memory: Could not create IntBinOp_reduceNumbers_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 267")
set KJS=0
endif
else
set Mj=Mj-1
set KJS=Nj[Mj]
set ux[KJS]=1248
endif
set MM=MM-1
return KJS
endfunction
function VJS takes string XJS returns integer
local integer CJS
set w3[MM]=XJS
set MM=MM+1
if sx==0 then
if tx<32768 then
set tx=tx+1
set CJS=tx
set ix[CJS]=1497
else
call Mau("Out of memory: Could not create RealBinOp_reduceNumbers_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 267")
set CJS=0
endif
else
set sx=sx-1
set CJS=rx[sx]
set ix[CJS]=1497
endif
set MM=MM-1
return CJS
endfunction
function KWt takes integer QWt,integer WWt,integer EWt,string ZWt returns integer
local integer UWt
local integer IWt
local integer PWt
local integer AWt
local integer DWt
local integer HWt
local real JWt
set w3[MM]=ZWt
set MM=MM+1
set AWt=EWt
set DWt=Ee
set UWt=LJS("when calling alloc_IntBinOp_reduceNumbers_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 267")
set HWt=UWt
set JWt=Ua
set IWt=VJS("when calling alloc_RealBinOp_reduceNumbers_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 267")
set PWt=e1u(AWt,DWt,HWt,JWt,IWt,"when calling reduceNumbers in ScmdCoreBuiltins, line 267")
set MM=MM-1
return PWt
endfunction
function Kbi takes integer Pbi,integer Abi,integer Dbi,string Hbi returns integer
local integer Jbi
set w3[MM]=Hbi
set MM=MM+1
call ous(W2o(Abi,"when calling getEnumUnit in ScmdUnitBuiltins, line 169"),t8o(N1o(Dbi,0,"when calling get in ScmdUnitBuiltins, line 169"),"when calling intValue in ScmdUnitBuiltins, line 169"))
set Jbi=x4u("when calling nullptr in ScmdUnitBuiltins, line 170")
set MM=MM-1
return Jbi
endfunction
function EOr takes string QOr returns integer
local integer WOr
set w3[MM]=QOr
set MM=MM+1
set WOr=l5i(qCt("Wrong color name","when calling new_Exception in ScmdUnitBuiltins, line 15"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 15")
set MM=MM-1
return WOr
endfunction
function Kci takes integer Wci,integer Eci,integer Zci,string Uci returns integer
local string Ici
local playercolor Pci
local playercolor Aci
local boolean Dci
local integer Hci
local integer Jci
set w3[MM]=Uci
set MM=MM+1
set Ici=OFr(S9o(N1o(Zci,0,"when calling get in ScmdUnitBuiltins, line 58"),"when calling getInner in ScmdUnitBuiltins, line 58"))
if Ici=="black" then
set Aci=qa
else
set Aci=qyu(Ici)
endif
set Pci=Aci
set Dci=Pci!=null or OFr(Ici)=="red"
if Dci then
call KHu(W2o(Eci,"when calling getEnumUnit in ScmdUnitBuiltins, line 62"),Pci)
endif
if Dci then
set Hci=x4u("when calling nullptr in ScmdUnitBuiltins, line 63")
else
set Hci=EOr("when calling newWCNException in ScmdUnitBuiltins, line 63")
endif
set Jci=Hci
set MM=MM-1
set Pci=null
set Aci=null
return Jci
endfunction
function Khi takes integer Phi,integer Ahi,integer Dhi,string Hhi returns integer
local integer Jhi
set w3[MM]=Hhi
set MM=MM+1
set Jhi=l5i(pMt(S7s(H9o(N1o(Dhi,0,"when calling get in ScmdUnitBuiltins, line 693"),"when calling getInner in ScmdUnitBuiltins, line 693")),"when calling new_Integer in ScmdUnitBuiltins, line 693"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 693")
set MM=MM-1
return Jhi
endfunction
function Kjt takes integer hjt,integer Fjt,integer kjt,string jjt returns integer
local boolean xjt
local boolean vjt
local integer mjt
local integer Qjt
local integer Wjt
local real Ejt
local integer Zjt
local integer Ujt
local integer Ijt
local integer Pjt
local integer Ajt
local integer Djt
local integer Hjt
local integer Jjt
set w3[MM]=jjt
set MM=MM+1
set xjt=false
set vjt=false
set mjt=0
set Qjt=L1o(kjt,"when calling size in ScmdCoreBuiltins, line 64")-1
loop
exitwhen mjt>Qjt
set Hjt=px[N1o(kjt,mjt,"when calling get in ScmdCoreBuiltins, line 65")]
if not(Hjt==1434 or Hjt==1440)then
set xjt=true
endif
if L1o(kjt,"when calling size in ScmdCoreBuiltins, line 67")==1 or mjt>0 and h8o(N1o(kjt,mjt,"when calling get in ScmdCoreBuiltins, line 67"),"when calling realValue in ScmdCoreBuiltins, line 67")==0. then
set vjt=true
exitwhen true
endif
set mjt=mjt+1
endloop
set Wjt=T8o(N1o(kjt,0,"when calling get in ScmdCoreBuiltins, line 70"),"when calling intValue in ScmdCoreBuiltins, line 70")
set Ejt=h8o(N1o(kjt,0,"when calling get in ScmdCoreBuiltins, line 71"),"when calling realValue in ScmdCoreBuiltins, line 71")
if not vjt then
if xjt then
if L1o(kjt,"when calling size in ScmdCoreBuiltins, line 74")==1 then
set Ejt=1./Ejt
else
set Zjt=1
set Ujt=L1o(kjt,"when calling size in ScmdCoreBuiltins, line 77")-1
loop
exitwhen Zjt>Ujt
set Ejt=Ejt/h8o(N1o(kjt,Zjt,"when calling get in ScmdCoreBuiltins, line 78"),"when calling realValue in ScmdCoreBuiltins, line 78")
set Zjt=Zjt+1
endloop
endif
elseif L1o(kjt,"when calling size in ScmdCoreBuiltins, line 80")==1 then
set Wjt=1/Wjt
else
set Ijt=1
set Pjt=L1o(kjt,"when calling size in ScmdCoreBuiltins, line 83")-1
loop
exitwhen Ijt>Pjt
set Wjt=Wjt/T8o(N1o(kjt,Ijt,"when calling get in ScmdCoreBuiltins, line 84"),"when calling intValue in ScmdCoreBuiltins, line 84")
set Ijt=Ijt+1
endloop
endif
endif
if vjt then
set Djt=qCt("Division by zero","when calling new_Exception in ScmdCoreBuiltins, line 85")
else
if xjt then
set Ajt=j1t(Ejt,"when calling new_Real in ScmdCoreBuiltins, line 85")
else
set Ajt=pMt(Wjt,"when calling new_Integer in ScmdCoreBuiltins, line 85")
endif
set Djt=Ajt
endif
set Jjt=l5i(Djt,"when calling new_SharedPointer in ScmdCoreBuiltins, line 85")
set MM=MM-1
return Jjt
endfunction
function Kli takes integer Pli,integer Ali,integer Dli,string Hli returns integer
local integer Jli
set w3[MM]=Hli
set MM=MM+1
call AJu(W2o(Ali,"when calling getEnumUnit in ScmdUnitBuiltins, line 142"),I8o(N1o(Dli,0,"when calling get in ScmdUnitBuiltins, line 142"),"when calling realValue in ScmdUnitBuiltins, line 142"))
set Jli=x4u("when calling nullptr in ScmdUnitBuiltins, line 143")
set MM=MM-1
return Jli
endfunction
function Kui takes integer Pui,integer Aui,integer Dui,string Hui returns integer
local integer Jui
set w3[MM]=Hui
set MM=MM+1
call Hhu(p8o(N1o(Dui,0,"when calling get in ScmdItemBuiltins, line 38"),"when calling getInner in ScmdItemBuiltins, line 38"),S9o(N1o(Dui,1,"when calling get in ScmdItemBuiltins, line 38"),"when calling getInner in ScmdItemBuiltins, line 38"))
set Jui=x4u("when calling nullptr in ScmdItemBuiltins, line 39")
set MM=MM-1
return Jui
endfunction
function CCt takes integer XCt returns integer
return TK[XCt]
endfunction
function L6o takes integer H6o,string J6o returns integer
local integer K6o
set w3[MM]=J6o
set MM=MM+1
if px[H6o]==0 then
if H6o==0 then
call Mau("Nullpointer exception when calling Expression.getArgs","when calling error in ScmdDataTypes, line 1610")
else
call Mau("Called Expression.getArgs on invalid object.","when calling error in ScmdDataTypes, line 1610")
endif
endif
set K6o=CCt(H6o)
set MM=MM-1
return K6o
endfunction
function LFi takes integer AFi,integer DFi,integer HFi,string JFi returns integer
local integer KFi
set w3[MM]=JFi
set MM=MM+1
set KFi=l5i(J6i(R7s(W2o(DFi,"when calling getEnumUnit in ScmdUnitBuiltins, line 726")),"when calling new_String in ScmdUnitBuiltins, line 726"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 726")
set MM=MM-1
return KFi
endfunction
function LGt takes integer AGt,integer DGt,integer HGt,string JGt returns integer
local integer KGt
set w3[MM]=JGt
set MM=MM+1
call pxr(h9o(N1o(HGt,0,"when calling get in SLangTriggerFunctions, line 16"),"when calling getInner in SLangTriggerFunctions, line 16"))
set KGt=x4u("when calling nullptr in SLangTriggerFunctions, line 17")
set MM=MM-1
return KGt
endfunction
function JWu takes player DWu,playercolor HWu returns nothing
call SetPlayerColor(DWu,HWu)
endfunction
function LRt takes integer QRt,integer WRt,integer ERt,string ZRt returns integer
local player URt
local integer IRt
local playercolor PRt
local playercolor ARt
local integer DRt
local integer HRt
local player JRt
local integer KRt
set w3[MM]=ZRt
set MM=MM+1
set JRt=mAu(S9o(N1o(ERt,0,"when calling get in SLangPlayerFunctions, line 73"),"when calling getInner in SLangPlayerFunctions, line 73"),"when calling resolvePlayer in SLangPlayerFunctions, line 73")
set KRt=M1
set URt=JRt
set IRt=KRt
if IRt==0 then
if OWu(URt)==MAP_CONTROL_USER and qWu(URt)==PLAYER_SLOT_STATE_PLAYING then
set IRt=Y4u("Color is occupied","when calling wrap in SLangPlayerFunctions, line 76")
else
set PRt=LWu(pa[h2o(WRt,"when calling getPlayerId in SLangPlayerFunctions, line 78")])
set ARt=LWu(URt)
call JWu(URt,PRt)
call s9s(Ofr(bWu(URt)),PRt)
call JWu(pa[h2o(WRt,"when calling getPlayerId in SLangPlayerFunctions, line 82")],ARt)
call s9s(Ofr(h2o(WRt,"when calling getPlayerId in SLangPlayerFunctions, line 83")),ARt)
endif
endif
if IRt!=0 then
set DRt=IRt
else
set DRt=x4u("when calling nullptr in SLangPlayerFunctions, line 84")
endif
set HRt=DRt
set MM=MM-1
set URt=null
set PRt=null
set ARt=null
set JRt=null
return HRt
endfunction
function V4s takes integer K4s,integer L4s,string X4s returns string
local string C4s
set w3[MM]=X4s
set MM=MM+1
set C4s=jSo(gP[K4s],L4s,"when calling loadString in Locale, line 35")
set MM=MM-1
return C4s
endfunction
function SHc takes integer rHc,integer sHc,string tHc returns string
local string iHc
set w3[MM]=tHc
set MM=MM+1
if HF[rHc]==0 then
if rHc==0 then
call Mau("Nullpointer exception when calling Locale.getLocalizedObjectName","when calling error in Locale, line 34")
else
call Mau("Called Locale.getLocalizedObjectName on invalid object.","when calling error in Locale, line 34")
endif
endif
set iHc=V4s(rHc,sHc,"when calling getLocalizedObjectName in Locale, line 34")
set MM=MM-1
return iHc
endfunction
function Qku takes player Rku,integer Tku,string Yku returns nothing
local rect Gku
local group gku
local unit hku
local group Fku
local string kku
local integer jku
local integer xku
local integer vku
local integer mku
set w3[MM]=Yku
set MM=MM+1
call bWu(Rku)
set Gku=GetWorldBounds()
set gku=GetUnitsInRectAll(Gku)
call gIu(Gku)
set Fku=gku
loop
exitwhen not lTu(Fku)
set hku=aTu(Fku)
if Rku==ea then
set kku=SHc(Tku,S7s(hku),"when calling getLocalizedObjectName in Locale, line 66")
if kku!=null then
call P0s(hku,kku)
endif
endif
endloop
set jku=kAs(hP[Tku],"when calling iterator in Locale, line 69")
loop
exitwhen not PPs(jku,"when calling hasNext in Locale, line 69")
set xku=EPs(jku,"when calling next in Locale, line 69")
set vku=1
set mku=BZc(FP[Tku],xku,"when calling get in Locale, line 70")
loop
exitwhen vku>mku
if Rku==ea then
if DTu(kP[Tku],xku,vku)then
call BlzSetAbilityTooltip(xku,hYu(kP[Tku],xku,vku),vku)
endif
if DTu(jP[Tku],xku,vku)then
call BlzSetAbilityExtendedTooltip(xku,hYu(jP[Tku],xku,vku),vku)
endif
endif
set vku=vku+1
endloop
endloop
call HPs(jku,"when calling close in Locale, line 69")
call STu(gku)
set MM=MM-1
set Gku=null
set gku=null
set hku=null
set Fku=null
endfunction
function Lft takes integer Uft,integer Ift,integer Pft,string Aft returns integer
local integer Dft
local string Hft
local integer Jft
local integer Kft
set w3[MM]=Aft
set MM=MM+1
set Dft=0
set Hft=S9o(N1o(Pft,0,"when calling get in SLangPlayerFunctions, line 25"),"when calling getInner in SLangPlayerFunctions, line 25")
if Hft=="en" then
call Qku(pa[h2o(Ift,"when calling getPlayerId in SLangPlayerFunctions, line 27")],nf,"when calling setLocale in SLangPlayerFunctions, line 27")
elseif Hft=="ru" then
call Qku(pa[h2o(Ift,"when calling getPlayerId in SLangPlayerFunctions, line 29")],df,"when calling setLocale in SLangPlayerFunctions, line 29")
else
set Dft=l5i(qCt("Wrong locale","when calling new_Exception in SLangPlayerFunctions, line 31"),"when calling new_SharedPointer in SLangPlayerFunctions, line 31")
endif
if Dft==0 then
set Jft=l5i(K3t("when calling new_Null in SLangPlayerFunctions, line 32"),"when calling new_SharedPointer in SLangPlayerFunctions, line 32")
else
set Jft=Dft
endif
set Kft=Jft
set MM=MM-1
return Kft
endfunction
function S8s takes unit r8s,string s8s,real t8s,real i8s returns boolean
return IssuePointOrder(r8s,s8s,t8s,i8s)
endfunction
function Lji takes integer Aji,integer Dji,integer Hji,string Jji returns integer
local integer Kji
set w3[MM]=Jji
set MM=MM+1
set Kji=l5i(rAt(S8s(H9o(N1o(Hji,0,"when calling get in ScmdUnitBuiltins, line 778"),"when calling getInner in ScmdUnitBuiltins, line 778"),S9o(N1o(Hji,1,"when calling get in ScmdUnitBuiltins, line 778"),"when calling getInner in ScmdUnitBuiltins, line 778"),I8o(N1o(Hji,2,"when calling get in ScmdUnitBuiltins, line 778"),"when calling realValue in ScmdUnitBuiltins, line 778"),I8o(N1o(Hji,3,"when calling get in ScmdUnitBuiltins, line 778"),"when calling realValue in ScmdUnitBuiltins, line 778")),"when calling new_Boolean in ScmdUnitBuiltins, line 778"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 778")
set MM=MM-1
return Kji
endfunction
function ZVS takes string WVS returns integer
local integer EVS
set w3[MM]=WVS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set EVS=yx
set px[EVS]=1434
else
call Mau("Out of memory: Could not create LiteralInteger.","when calling error in ScmdDataTypes, line 493")
set EVS=0
endif
else
set bx=bx-1
set EVS=lx[bx]
set px[EVS]=1434
endif
set MM=MM-1
return EVS
endfunction
function CMt takes integer XMt returns nothing
endfunction
function RMt takes integer nMt,integer dMt,string fMt returns nothing
call Z1t(nMt,rgu(dMt),fMt)
call OMt(nMt)
set kK[nMt]=dMt
endfunction
function w3t takes integer VMt,integer BMt,string NMt,string MMt returns nothing
call RMt(VMt,BMt,NMt)
call CMt(VMt)
set jK[VMt]=MMt
endfunction
function LMt takes integer AMt,string DMt,string HMt,string JMt returns integer
local integer KMt
set w3[MM]=JMt
set MM=MM+1
set KMt=ZVS("when calling alloc_LiteralInteger in ScmdDataTypes, line 497")
call w3t(KMt,AMt,DMt,HMt)
set MM=MM-1
return KMt
endfunction
function U4u takes string Q4u,string W4u,string E4u returns integer
local integer Z4u
set w3[MM]=E4u
set MM=MM+1
set Z4u=LMt(Lhr(Q4u),Q4u,W4u,"when calling new_LiteralInteger in ScmdDataTypes, line 517")
set MM=MM-1
return Z4u
endfunction
function RBS takes string dBS returns integer
local integer fBS
set w3[MM]=dBS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set fBS=yx
set px[fBS]=1435
else
call Mau("Out of memory: Could not create LiteralReal.","when calling error in ScmdDataTypes, line 438")
set fBS=0
endif
else
set bx=bx-1
set fBS=lx[bx]
set px[fBS]=1435
endif
set MM=MM-1
return fBS
endfunction
function l4t takes integer O4t returns nothing
endfunction
function q4t takes integer b4t,real y4t,string p4t,string e4t returns nothing
call Z1t(b4t,y4t,p4t)
call l4t(b4t)
set mK[b4t]=e4t
endfunction
function o4t takes real s4t,string t4t,string i4t,string S4t returns integer
local integer c4t
set w3[MM]=S4t
set MM=MM+1
set c4t=RBS("when calling alloc_LiteralReal in ScmdDataTypes, line 442")
call q4t(c4t,s4t,t4t,i4t)
set MM=MM-1
return c4t
endfunction
function i2u takes string u2u,string r2u,string s2u returns integer
local integer t2u
set w3[MM]=s2u
set MM=MM+1
set t2u=o4t(Jhr(u2u),u2u,r2u,"when calling new_LiteralReal in ScmdDataTypes, line 462")
set MM=MM-1
return t2u
endfunction
function OAt takes integer SAt,boolean cAt,string oAt returns nothing
call X6i(SAt,oAt)
call NPt(SAt)
set KJ[SAt]=cAt
endfunction
function ZAt takes integer EAt returns nothing
endfunction
function DAt takes integer UAt,boolean IAt,string PAt,string AAt returns nothing
call OAt(UAt,IAt,PAt)
call ZAt(UAt)
set LJ[UAt]=AAt
endfunction
function nXS takes string qXS returns integer
local integer aXS
set w3[MM]=qXS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set aXS=yx
set px[aXS]=1433
else
call Mau("Out of memory: Could not create LiteralBoolean.","when calling error in ScmdDataTypes, line 369")
set aXS=0
endif
else
set bx=bx-1
set aXS=lx[bx]
set px[aXS]=1433
endif
set MM=MM-1
return aXS
endfunction
function WAt takes boolean jAt,string xAt,string vAt,string mAt returns integer
local integer QAt
set w3[MM]=mAt
set MM=MM+1
set QAt=nXS("when calling alloc_LiteralBoolean in ScmdDataTypes, line 373")
call DAt(QAt,jAt,xAt,vAt)
set MM=MM-1
return QAt
endfunction
function n4u takes string p4u,string e4u,string q4u returns integer
local integer a4u
set w3[MM]=q4u
set MM=MM+1
set a4u=WAt(OFr(p4u)=="true",p4u,e4u,"when calling new_LiteralBoolean in ScmdDataTypes, line 393")
set MM=MM-1
return a4u
endfunction
function f7i takes integer d7i returns nothing
endfunction
function G7i takes integer R7i,string T7i,string Y7i returns nothing
call X6i(R7i,T7i)
call f7i(R7i)
set JK[R7i]=Y7i
endfunction
function QNS takes string vNS returns integer
local integer mNS
set w3[MM]=vNS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set mNS=yx
set px[mNS]=1436
else
call Mau("Out of memory: Could not create LiteralString.","when calling error in ScmdDataTypes, line 311")
set mNS=0
endif
else
set bx=bx-1
set mNS=lx[bx]
set px[mNS]=1436
endif
set MM=MM-1
return mNS
endfunction
function n7i takes string p7i,string e7i,string q7i returns integer
local integer a7i
set w3[MM]=q7i
set MM=MM+1
set a7i=QNS("when calling alloc_LiteralString in ScmdDataTypes, line 315")
call G7i(a7i,p7i,e7i)
set MM=MM-1
return a7i
endfunction
function p2u takes string O2u,string l2u,string b2u returns integer
local integer y2u
set w3[MM]=b2u
set MM=MM+1
set y2u=n7i(O2u,l2u,"when calling new_LiteralString in ScmdDataTypes, line 335")
set MM=MM-1
return y2u
endfunction
function u4u takes string w4u returns boolean
return w4u=="0" or w4u=="1" or w4u=="2" or w4u=="3" or w4u=="4" or w4u=="5" or w4u=="6" or w4u=="7" or w4u=="8" or w4u=="9"
endfunction
function M4u takes string P4u,string A4u,string D4u returns integer
local integer H4u
local integer J4u
local integer K4u
local string L4u
local boolean X4u
local integer C4u
local integer V4u
local integer B4u
local integer N4u
set w3[MM]=D4u
set MM=MM+1
if OFr(P4u)=="true" or OFr(P4u)=="false" then
set N4u=n4u(P4u,A4u,"when calling forLiteral in ScmdDataTypes, line 540")
set MM=MM-1
return N4u
endif
set H4u=vhr(P4u)
if Mhr(P4u,0)=="+" or Mhr(P4u,0)=="-" then
set K4u=1
else
set K4u=0
endif
set J4u=K4u
set L4u=Mhr(P4u,J4u)
if u4u(L4u)then
set X4u=false
loop
exitwhen not(J4u<H4u and u4u(L4u)or(L4u=="." and(not X4u)))
if L4u=="." then
set X4u=true
endif
set J4u=J4u+1
set L4u=Mhr(P4u,J4u)
endloop
if J4u==H4u then
if X4u then
set C4u=i2u(P4u,A4u,"when calling forLiteral in ScmdDataTypes, line 552")
else
set C4u=U4u(P4u,A4u,"when calling forLiteral in ScmdDataTypes, line 552")
endif
set V4u=C4u
set MM=MM-1
return V4u
endif
endif
set B4u=p2u(P4u,A4u,"when calling forLiteral in ScmdDataTypes, line 553")
set MM=MM-1
return B4u
endfunction
function MFi takes integer XFi,integer CFi,integer VFi,string BFi returns integer
local integer NFi
set w3[MM]=BFi
set MM=MM+1
set NFi=l5i(J6i(R7s(H9o(N1o(VFi,0,"when calling get in ScmdUnitBuiltins, line 728"),"when calling getInner in ScmdUnitBuiltins, line 728")),"when calling new_String in ScmdUnitBuiltins, line 728"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 728")
set MM=MM-1
return NFi
endfunction
function Txr takes trigger Rxr returns boolean
return IsTriggerEnabled(Rxr)
endfunction
function MGt takes integer XGt,integer CGt,integer VGt,string BGt returns integer
local integer NGt
set w3[MM]=BGt
set MM=MM+1
set NGt=l5i(rAt(Txr(h9o(N1o(VGt,0,"when calling get in SLangTriggerFunctions, line 20"),"when calling getInner in SLangTriggerFunctions, line 20")),"when calling new_Boolean in SLangTriggerFunctions, line 20"),"when calling new_SharedPointer in SLangTriggerFunctions, line 20")
set MM=MM-1
return NGt
endfunction
function MRt takes integer XRt,integer CRt,integer VRt,string BRt returns integer
local integer NRt
set w3[MM]=BRt
set MM=MM+1
set NRt=l5i(J6i(Wbu(LWu(pa[h2o(CRt,"when calling getPlayerId in SLangPlayerFunctions, line 87")])),"when calling new_String in SLangPlayerFunctions, line 87"),"when calling new_SharedPointer in SLangPlayerFunctions, line 87")
set MM=MM-1
return NRt
endfunction
function M_i takes integer X_i,integer C_i,integer V_i,string B_i returns integer
local integer N_i
set w3[MM]=B_i
set MM=MM+1
call FogMaskEnable(c4o(N1o(V_i,0,"when calling get in ScmdFogOfWarBuiltins, line 10"),"when calling booleanValue in ScmdFogOfWarBuiltins, line 10"))
set N_i=x4u("when calling nullptr in ScmdFogOfWarBuiltins, line 11")
set MM=MM-1
return N_i
endfunction
function Mji takes integer Xji,integer Cji,integer Vji,string Bji returns integer
local integer Nji
set w3[MM]=Bji
set MM=MM+1
set Nji=l5i(rAt(q8s(W2o(Cji,"when calling getEnumUnit in ScmdUnitBuiltins, line 781"),S9o(N1o(Vji,0,"when calling get in ScmdUnitBuiltins, line 781"),"when calling getInner in ScmdUnitBuiltins, line 781"),c0o(N1o(Vji,1,"when calling get in ScmdUnitBuiltins, line 781"),"when calling getInner in ScmdUnitBuiltins, line 781")),"when calling new_Boolean in ScmdUnitBuiltins, line 781"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 781")
set MM=MM-1
return Nji
endfunction
function y5i takes integer b5i returns integer
return nBt(b5i)
endfunction
function N8o takes integer C8o,string V8o returns integer
local integer B8o
set w3[MM]=V8o
set MM=MM+1
if xx[C8o]==0 then
if C8o==0 then
call Mau("Nullpointer exception when calling SharedPointer.get","when calling error in ScmdDataTypes, line 180")
else
call Mau("Called SharedPointer.get on invalid object.","when calling error in ScmdDataTypes, line 180")
endif
endif
set B8o=y5i(C8o)
set MM=MM-1
return B8o
endfunction
function NGi takes integer LGi,integer XGi,integer CGi,string VGi returns integer
local integer BGi
set w3[MM]=VGi
set MM=MM+1
call SetUnitFacing(H9o(N1o(CGi,0,"when calling get in ScmdUnitBuiltins, line 641"),"when calling getInner in ScmdUnitBuiltins, line 641"),I8o(N1o(CGi,1,"when calling get in ScmdUnitBuiltins, line 641"),"when calling realValue in ScmdUnitBuiltins, line 641"))
set BGi=x4u("when calling nullptr in ScmdUnitBuiltins, line 642")
set MM=MM-1
return BGi
endfunction
function NTi takes integer LTi,integer XTi,integer CTi,string VTi returns integer
local integer BTi
set w3[MM]=VTi
set MM=MM+1
call Q6r(W2o(XTi,"when calling getEnumUnit in ScmdUnitBuiltins, line 573"),t8o(N1o(CTi,0,"when calling get in ScmdUnitBuiltins, line 573"),"when calling intValue in ScmdUnitBuiltins, line 573"))
set BTi=x4u("when calling nullptr in ScmdUnitBuiltins, line 574")
set MM=MM-1
return BTi
endfunction
function V5i takes integer C5i returns nothing
endfunction
function c6i takes integer s6i,string t6i,real i6i,real S6i returns nothing
call V5i(s6i)
set AK[s6i]=AddSpecialEffect(t6i,i6i,S6i)
set DK[s6i]=t6i
endfunction
function eNS takes string yNS returns integer
local integer pNS
set w3[MM]=yNS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set pNS=yx
set px[pNS]=1444
else
call Mau("Out of memory: Could not create SpecialEffect.","when calling error in ScmdDataTypes, line 592")
set pNS=0
endif
else
set bx=bx-1
set pNS=lx[bx]
set px[pNS]=1444
endif
set MM=MM-1
return pNS
endfunction
function r6i takes string B5i,real N5i,real M5i,string w6i returns integer
local integer u6i
set w3[MM]=w6i
set MM=MM+1
set u6i=eNS("when calling alloc_SpecialEffect in ScmdDataTypes, line 602")
call c6i(u6i,B5i,N5i,M5i)
set MM=MM-1
return u6i
endfunction
function NTt takes integer LTt,integer XTt,integer CTt,string VTt returns integer
local integer BTt
set w3[MM]=VTt
set MM=MM+1
set BTt=l5i(r6i(S9o(N1o(CTt,0,"when calling get in SLangSpecialEffectFunctions, line 7"),"when calling getInner in SLangSpecialEffectFunctions, line 7"),I8o(N1o(CTt,1,"when calling get in SLangSpecialEffectFunctions, line 7"),"when calling realValue in SLangSpecialEffectFunctions, line 7"),I8o(N1o(CTt,2,"when calling get in SLangSpecialEffectFunctions, line 7"),"when calling realValue in SLangSpecialEffectFunctions, line 7"),"when calling new_SpecialEffect in SLangSpecialEffectFunctions, line 7"),"when calling new_SharedPointer in SLangSpecialEffectFunctions, line 7")
set MM=MM-1
return BTt
endfunction
function Nbi takes integer Lbi,integer Xbi,integer Cbi,string Vbi returns integer
local integer Bbi
set w3[MM]=Vbi
set MM=MM+1
call ous(H9o(N1o(Cbi,0,"when calling get in ScmdUnitBuiltins, line 172"),"when calling getInner in ScmdUnitBuiltins, line 172"),t8o(N1o(Cbi,1,"when calling get in ScmdUnitBuiltins, line 172"),"when calling intValue in ScmdUnitBuiltins, line 172"))
set Bbi=x4u("when calling nullptr in ScmdUnitBuiltins, line 173")
set MM=MM-1
return Bbi
endfunction
function Nhi takes integer Lhi,integer Xhi,integer Chi,string Vhi returns integer
local integer Bhi
set w3[MM]=Vhi
set MM=MM+1
set Bhi=l5i(rAt(IsHeroUnitId(t8o(N1o(Chi,0,"when calling get in ScmdUnitBuiltins, line 696"),"when calling intValue in ScmdUnitBuiltins, line 696")),"when calling new_Boolean in ScmdUnitBuiltins, line 696"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 696")
set MM=MM-1
return Bhi
endfunction
function Nli takes integer Lli,integer Xli,integer Cli,string Vli returns integer
local integer Bli
set w3[MM]=Vli
set MM=MM+1
call AJu(H9o(N1o(Cli,0,"when calling get in ScmdUnitBuiltins, line 145"),"when calling getInner in ScmdUnitBuiltins, line 145"),I8o(N1o(Cli,1,"when calling get in ScmdUnitBuiltins, line 145"),"when calling realValue in ScmdUnitBuiltins, line 145"))
set Bli=x4u("when calling nullptr in ScmdUnitBuiltins, line 146")
set MM=MM-1
return Bli
endfunction
function Nui takes integer Lui,integer Xui,integer Cui,string Vui returns integer
local integer Bui
set w3[MM]=Vui
set MM=MM+1
call ahu(p8o(N1o(Cui,0,"when calling get in ScmdItemBuiltins, line 42"),"when calling getInner in ScmdItemBuiltins, line 42"),t8o(N1o(Cui,1,"when calling get in ScmdItemBuiltins, line 42"),"when calling intValue in ScmdItemBuiltins, line 42"))
set Bui=x4u("when calling nullptr in ScmdItemBuiltins, line 43")
set MM=MM-1
return Bui
endfunction
function iPt takes integer rPt,integer sPt,string tPt returns nothing
set w3[MM]=tPt
set MM=MM+1
call Nno(JJ[rPt],sPt,"when calling add in ScmdDataTypes, line 1253")
set MM=MM-1
endfunction
function U1o takes integer W1o,integer E1o,string Z1o returns nothing
set w3[MM]=Z1o
set MM=MM+1
if nx[W1o]==0 then
if W1o==0 then
call Mau("Nullpointer exception when calling Arguments.add","when calling error in ScmdDataTypes, line 1252")
else
call Mau("Called Arguments.add on invalid object.","when calling error in ScmdDataTypes, line 1252")
endif
endif
call iPt(W1o,E1o,"when calling add in ScmdDataTypes, line 1252")
set MM=MM-1
endfunction
function PMt takes integer IMt returns string
return jK[IMt]
endfunction
function kAt takes integer FAt returns string
return LJ[FAt]
endfunction
function r4t takes integer u4t returns string
return mK[u4t]
endfunction
function y7i takes integer b7i returns string
return JK[b7i]
endfunction
function n8o takes integer e8o,string q8o returns string
local string a8o
set w3[MM]=q8o
set MM=MM+1
if px[e8o]==0 then
if e8o==0 then
call Mau("Nullpointer exception when calling Literal.getPreviousWhitespaces","when calling error in ScmdDataTypes, line 297")
else
call Mau("Called Literal.getPreviousWhitespaces on invalid object.","when calling error in ScmdDataTypes, line 297")
endif
endif
if px[e8o]<=1434 then
if px[e8o]<=1433 then
set a8o=kAt(e8o)
else
set a8o=PMt(e8o)
endif
elseif px[e8o]<=1435 then
set a8o=r4t(e8o)
else
set a8o=y7i(e8o)
endif
set MM=MM-1
return a8o
endfunction
function kPt takes integer GPt,integer gPt,string hPt returns integer
local integer FPt
set w3[MM]=hPt
set MM=MM+1
set FPt=TZc(JJ[GPt],gPt,"when calling get in ScmdDataTypes, line 1277")
set MM=MM-1
return FPt
endfunction
function s4o takes integer M1o,integer w4o,string u4o returns integer
local integer r4o
set w3[MM]=u4o
set MM=MM+1
if nx[M1o]==0 then
if M1o==0 then
call Mau("Nullpointer exception when calling Arguments.getPtr","when calling error in ScmdDataTypes, line 1276")
else
call Mau("Called Arguments.getPtr on invalid object.","when calling error in ScmdDataTypes, line 1276")
endif
endif
set r4o=kPt(M1o,w4o,"when calling getPtr in ScmdDataTypes, line 1276")
set MM=MM-1
return r4o
endfunction
function LJt takes integer xJt,integer vJt,string mJt returns integer
local integer QJt
local integer WJt
local string EJt
local string ZJt
local integer UJt
local integer IJt
local integer PJt
local integer AJt
local integer DJt
local integer HJt
local integer JJt
local integer KJt
set w3[MM]=mJt
set MM=MM+1
set QJt=0
set WJt=L1o(vJt,"when calling size in ScmdDataTypes, line 1447")-1
loop
exitwhen WJt<0
set JJt=px[N1o(vJt,WJt,"when calling get in ScmdDataTypes, line 1448")]
if JJt>=1432 and JJt<=1436 then
set QJt=QJt+1
else
exitwhen true
endif
set WJt=WJt-1
endloop
set EJt=""
set ZJt=""
set UJt=yZc(rK[xJt],"when calling size in ScmdDataTypes, line 1454")-1
loop
exitwhen UJt<0
set IJt=TZc(rK[xJt],UJt,"when calling get in ScmdDataTypes, line 1455")
if L1o(vJt,"when calling size in ScmdDataTypes, line 1456")>VJ[IJt]then
if L1o(vJt,"when calling size in ScmdDataTypes, line 1457")-VJ[IJt]>QJt-1 then
exitwhen true
endif
set PJt=0
set AJt=L1o(vJt,"when calling size in ScmdDataTypes, line 1460")-VJ[IJt]+1
loop
exitwhen not(PJt!=AJt)
set DJt=s4o(vJt,L1o(vJt,"when calling size in ScmdDataTypes, line 1462")-1,"when calling getPtr in ScmdDataTypes, line 1462")
set KJt=px[N8o(DJt,"when calling get in ScmdDataTypes, line 1463")]
if not(KJt>=1432 and KJt<=1436)then
exitwhen true
endif
call D1o(vJt,L1o(vJt,"when calling size in ScmdDataTypes, line 1465")-1,"when calling removeAt in ScmdDataTypes, line 1465")
call Zgo(1,N8o(DJt,"when calling get in ScmdDataTypes, line 1466"),"when calling toString in ScmdDataTypes, line 1466")
set ZJt=Snw+EJt+ZJt
set EJt=n8o(N8o(DJt,"when calling get in ScmdDataTypes, line 1467"),"when calling getPreviousWhitespaces in ScmdDataTypes, line 1467")
call KGo(10,DJt,"when calling dispatch_SharedPointer_destroySharedPointer in ScmdDataTypes, line 1468")
set QJt=QJt-1
set PJt=PJt+1
endloop
if PJt!=0 then
call U1o(vJt,l5i(M4u(ZJt,EJt,"when calling forStrings in ScmdDataTypes, line 1472"),"when calling new_SharedPointer in ScmdDataTypes, line 1472"),"when calling add in ScmdDataTypes, line 1472")
endif
endif
if L1o(vJt,"when calling size in ScmdDataTypes, line 1473")==VJ[IJt]then
set HJt=1
loop
exitwhen not(HJt<=QJt and H7o(wDc(CJ[IJt],VJ[IJt]-HJt,"when calling get in ScmdDataTypes, line 1475"),N1o(vJt,VJ[IJt]-HJt,"when calling get in ScmdDataTypes, line 1475"),"when calling isInstance in ScmdDataTypes, line 1475"))
set HJt=HJt+1
endloop
if HJt>QJt then
set MM=MM-1
return IJt
endif
endif
set UJt=UJt-1
endloop
set MM=MM-1
return sK[xJt]
endfunction
function O2o takes integer i2o,integer S2o,string c2o returns integer
local integer o2o
set w3[MM]=c2o
set MM=MM+1
if px[i2o]==0 then
if i2o==0 then
call Mau("Nullpointer exception when calling BuiltinSpecialForm.resolveOverload","when calling error in ScmdDataTypes, line 1445")
else
call Mau("Called BuiltinSpecialForm.resolveOverload on invalid object.","when calling error in ScmdDataTypes, line 1445")
endif
endif
set o2o=LJt(i2o,S2o,"when calling resolveOverload in ScmdDataTypes, line 1445")
set MM=MM-1
return o2o
endfunction
function OEi takes integer tEi,integer iEi,integer SEi,string cEi returns integer
local integer oEi
set w3[MM]=cEi
set MM=MM+1
call hpr(W2o(iEi,"when calling getEnumUnit in SotFRP_AbilitySystem, line 66"),S9o(N1o(SEi,0,"when calling get in SotFRP_AbilitySystem, line 66"),"when calling getInner in SotFRP_AbilitySystem, line 66"),t8o(N1o(SEi,1,"when calling get in SotFRP_AbilitySystem, line 66"),"when calling intValue in SotFRP_AbilitySystem, line 66"),"when calling setAbilityLevel in SotFRP_AbilitySystem, line 66")
set oEi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 67")
set MM=MM-1
return oEi
endfunction
function OIi takes integer tIi,integer iIi,integer SIi,string cIi returns integer
local integer oIi
set w3[MM]=cIi
set MM=MM+1
set oIi=l5i(j1t(v7s(Ofr(h2o(iIi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 81"))),"when calling new_Real in SotfrpGuiCoreUnit, line 81"),"when calling new_SharedPointer in SotfrpGuiCoreUnit, line 81")
set MM=MM-1
return oIi
endfunction
function TAu takes string fAu returns integer
local integer RAu
set w3[MM]=fAu
set MM=MM+1
set RAu=l5i(qCt("Wrong color name","when calling new_Exception in SLangPlayerFunctions, line 17"),"when calling new_SharedPointer in SLangPlayerFunctions, line 17")
set MM=MM-1
return RAu
endfunction
function dAu takes playercolor qAu returns player
local integer aAu=0
local integer nAu=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen aAu>nAu
if LWu(pa[aAu])==qAu then
return pa[aAu]
endif
set aAu=aAu+1
endloop
return null
endfunction
function ORt takes integer rRt,integer sRt,integer tRt,string iRt returns integer
local player SRt
local integer cRt
local integer oRt
set w3[MM]=iRt
set MM=MM+1
set SRt=dAu(qyu(S9o(N1o(tRt,0,"when calling get in SLangPlayerFunctions, line 41"),"when calling getInner in SLangPlayerFunctions, line 41")))
if SRt!=null then
set cRt=l5i(rAt(GetPlayerAlliance(pa[h2o(sRt,"when calling getPlayerId in SLangPlayerFunctions, line 42")],SRt,ALLIANCE_PASSIVE),"when calling new_Boolean in SLangPlayerFunctions, line 42"),"when calling new_SharedPointer in SLangPlayerFunctions, line 42")
else
set cRt=TAu("when calling newWCNException in SLangPlayerFunctions, line 42")
endif
set oRt=cRt
set MM=MM-1
set SRt=null
return oRt
endfunction
function OSi takes integer tSi,integer iSi,integer SSi,string cSi returns integer
local integer oSi
set w3[MM]=cSi
set MM=MM+1
call SetMusicVolume(t8o(N1o(SSi,0,"when calling get in ScmdSoundFunctions, line 19"),"when calling intValue in ScmdSoundFunctions, line 19"))
set oSi=x4u("when calling nullptr in ScmdSoundFunctions, line 20")
set MM=MM-1
return oSi
endfunction
function xlr takes unit Glr,string glr returns boolean
local movetype hlr=MOVE_TYPE_UNKNOWN
local boolean Flr=true
local string klr=glr
local boolean jlr
if klr=="amphibious" or klr=="amph" then
set hlr=MOVE_TYPE_AMPHIBIOUS
elseif klr=="float" then
set hlr=MOVE_TYPE_FLOAT
elseif klr=="fly" then
set hlr=MOVE_TYPE_FLY
elseif klr=="foot" then
set hlr=MOVE_TYPE_FOOT
elseif klr=="horse" then
set hlr=MOVE_TYPE_HORSE
elseif klr=="hover" then
set hlr=MOVE_TYPE_HOVER
elseif klr=="unbuildable" then
set hlr=MOVE_TYPE_UNBUILDABLE
elseif klr=="unknown" then
set hlr=MOVE_TYPE_UNKNOWN
else
set Flr=false
endif
if Flr then
set jlr=B_s(Glr,UNIT_IF_MOVE_TYPE,l7s(hlr))
else
set jlr=false
endif
set hlr=null
return jlr
endfunction
function OTi takes integer tTi,integer iTi,integer STi,string cTi returns integer
local integer oTi
set w3[MM]=cTi
set MM=MM+1
set oTi=l5i(rAt(xlr(W2o(iTi,"when calling getEnumUnit in ScmdUnitBuiltins, line 546"),S9o(N1o(STi,0,"when calling get in ScmdUnitBuiltins, line 546"),"when calling getInner in ScmdUnitBuiltins, line 546")),"when calling new_Boolean in ScmdUnitBuiltins, line 546"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 546")
set MM=MM-1
return oTi
endfunction
function OUt takes integer uUt,integer rUt,integer sUt,string tUt returns integer
local integer iUt
local integer SUt
local integer cUt
local integer oUt
set w3[MM]=tUt
set MM=MM+1
set iUt=N1o(sUt,0,"when calling get in ScmdCoreBuiltins, line 322")
set SUt=t8o(N1o(sUt,1,"when calling get in ScmdCoreBuiltins, line 323"),"when calling intValue in ScmdCoreBuiltins, line 323")
if SUt<s0o(iUt,"when calling size in ScmdCoreBuiltins, line 324")and SUt>=0 then
set cUt=M9o(iUt,SUt,"when calling get in ScmdCoreBuiltins, line 324")
else
set cUt=l5i(qCt("Index out of bounds","when calling new_Exception in ScmdCoreBuiltins, line 324"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 324")
endif
set oUt=cUt
set MM=MM-1
return oUt
endfunction
function OZi takes integer rZi,integer sZi,integer tZi,string iZi returns integer
local integer SZi
local rect cZi
local integer oZi
set w3[MM]=iZi
set MM=MM+1
set SZi=h2o(sZi,"when calling getPlayerId in SotFRP_LegacyLoad, line 230")
set cZi=H8o(N1o(tZi,0,"when calling get in SotFRP_LegacyLoad, line 231"),"when calling getInner in SotFRP_LegacyLoad, line 231")
set Md[SZi]=rgu(pUu((SIu(cZi)-32.)/64.))*64.+32.
set wf[SZi]=rgu(pUu((oIu(cZi)-32.)/64.))*64.+32.
set oZi=l5i(K3t("when calling new_Null in SotFRP_LegacyLoad, line 234"),"when calling new_SharedPointer in SotFRP_LegacyLoad, line 234")
set MM=MM-1
set cZi=null
return oZi
endfunction
function Ofi takes integer tfi,integer ifi,integer Sfi,string cfi returns integer
local integer ofi
set w3[MM]=cfi
set MM=MM+1
call d_s(H9o(N1o(Sfi,0,"when calling get in ScmdUnitBuiltins, line 404"),"when calling getInner in ScmdUnitBuiltins, line 404"),I8o(N1o(Sfi,1,"when calling get in ScmdUnitBuiltins, line 404"),"when calling realValue in ScmdUnitBuiltins, line 404"),t8o(N1o(Sfi,2,"when calling get in ScmdUnitBuiltins, line 404"),"when calling intValue in ScmdUnitBuiltins, line 404"))
set ofi=x4u("when calling nullptr in ScmdUnitBuiltins, line 405")
set MM=MM-1
return ofi
endfunction
function Oni takes integer tni,integer ini,integer Sni,string cni returns integer
local integer oni
set w3[MM]=cni
set MM=MM+1
set oni=l5i(pMt(c_s(W2o(ini,"when calling getEnumUnit in ScmdUnitBuiltins, line 351"),t8o(N1o(Sni,0,"when calling get in ScmdUnitBuiltins, line 351"),"when calling intValue in ScmdUnitBuiltins, line 351")),"when calling new_Integer in ScmdUnitBuiltins, line 351"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 351")
set MM=MM-1
return oni
endfunction
function Ooi takes integer toi,integer ioi,integer Soi,string coi returns integer
local integer ooi
set w3[MM]=coi
set MM=MM+1
call UHu(W2o(ioi,"when calling getEnumUnit in ScmdUnitBuiltins, line 73"),c4o(N1o(Soi,0,"when calling get in ScmdUnitBuiltins, line 73"),"when calling booleanValue in ScmdUnitBuiltins, line 73"))
set ooi=x4u("when calling nullptr in ScmdUnitBuiltins, line 74")
set MM=MM-1
return ooi
endfunction
function Oqi takes integer tqi,integer iqi,integer Sqi,string cqi returns integer
local integer oqi
set w3[MM]=cqi
set MM=MM+1
set oqi=l5i(pMt(Q0s(H9o(N1o(Sqi,1,"when calling get in ScmdUnitBuiltins, line 292"),"when calling getInner in ScmdUnitBuiltins, line 292")),"when calling new_Integer in ScmdUnitBuiltins, line 292"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 292")
set MM=MM-1
return oqi
endfunction
function PFi takes integer QFi,integer WFi,integer EFi,string ZFi returns integer
local string UFi
local integer IFi
set w3[MM]=ZFi
set MM=MM+1
set UFi=S9o(N1o(EFi,1,"when calling get in ScmdUnitBuiltins, line 720"),"when calling getInner in ScmdUnitBuiltins, line 720")
if UFi!=null then
call H0s(H9o(N1o(EFi,0,"when calling get in ScmdUnitBuiltins, line 722"),"when calling getInner in ScmdUnitBuiltins, line 722"),UFi)
endif
set IFi=x4u("when calling nullptr in ScmdUnitBuiltins, line 723")
set MM=MM-1
return IFi
endfunction
function qxr takes trigger exr returns nothing
call EnableTrigger(exr)
endfunction
function PGt takes integer WGt,integer EGt,integer ZGt,string UGt returns integer
local integer IGt
set w3[MM]=UGt
set MM=MM+1
call qxr(h9o(N1o(ZGt,0,"when calling get in SLangTriggerFunctions, line 12"),"when calling getInner in SLangTriggerFunctions, line 12"))
set IGt=x4u("when calling nullptr in SLangTriggerFunctions, line 13")
set MM=MM-1
return IGt
endfunction
function Pji takes integer Wji,integer Eji,integer Zji,string Uji returns integer
local integer Iji
set w3[MM]=Uji
set MM=MM+1
set Iji=l5i(rAt(S8s(W2o(Eji,"when calling getEnumUnit in ScmdUnitBuiltins, line 776"),S9o(N1o(Zji,0,"when calling get in ScmdUnitBuiltins, line 776"),"when calling getInner in ScmdUnitBuiltins, line 776"),I8o(N1o(Zji,1,"when calling get in ScmdUnitBuiltins, line 776"),"when calling realValue in ScmdUnitBuiltins, line 776"),I8o(N1o(Zji,2,"when calling get in ScmdUnitBuiltins, line 776"),"when calling realValue in ScmdUnitBuiltins, line 776")),"when calling new_Boolean in ScmdUnitBuiltins, line 776"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 776")
set MM=MM-1
return Iji
endfunction
function Pnt takes integer Wnt,integer Ent,integer Znt,string Unt returns integer
local integer Int
set w3[MM]=Unt
set MM=MM+1
call a3c(La,h2o(Ent,"when calling getPlayerId in SLangChatSystem, line 228"),S9o(N1o(Znt,0,"when calling get in SLangChatSystem, line 228"),"when calling getInner in SLangChatSystem, line 228"),ea,"when calling send in SLangChatSystem, line 228")
set Int=x4u("when calling nullptr in SLangChatSystem, line 229")
set MM=MM-1
return Int
endfunction
function Q6o takes integer v6o,string m6o returns nothing
set w3[MM]=m6o
set MM=MM+1
if px[v6o]==0 then
if v6o==0 then
call Mau("Nullpointer exception when calling Expression.Expression","when calling error in ScmdDataTypes, line 1573")
else
call Mau("Called Expression.Expression on invalid object.","when calling error in ScmdDataTypes, line 1573")
endif
endif
call KGo(1,v6o,"when calling destroyExpression in ScmdDataTypes, line 1573")
set MM=MM-1
endfunction
function B8i takes integer V8i returns nothing
endfunction
function oXt takes integer cXt returns integer
return yK[cXt]
endfunction
function C5o takes integer K5o,string L5o returns integer
local integer X5o
set w3[MM]=L5o
set MM=MM+1
if hx[K5o]==0 then
if K5o==0 then
call Mau("Nullpointer exception when calling Context.getSpellAbilityId","when calling error in ScmdDataTypes, line 1211")
else
call Mau("Called Context.getSpellAbilityId on invalid object.","when calling error in ScmdDataTypes, line 1211")
endif
endif
set X5o=oXt(K5o)
set MM=MM-1
return X5o
endfunction
function XLt takes integer LLt returns unit
return cK[LLt]
endfunction
function H2o takes integer P2o,string A2o returns unit
local unit D2o
set w3[MM]=A2o
set MM=MM+1
if hx[P2o]==0 then
if P2o==0 then
call Mau("Nullpointer exception when calling Context.getTriggerUnit","when calling error in ScmdDataTypes, line 1169")
else
call Mau("Called Context.getTriggerUnit on invalid object.","when calling error in ScmdDataTypes, line 1169")
endif
endif
set D2o=XLt(P2o)
set MM=MM-1
set pdw=D2o
set D2o=null
return pdw
endfunction
function SXt takes integer iXt returns item
return eK[iXt]
endfunction
function P5o takes integer Z5o,string U5o returns item
local item I5o
set w3[MM]=U5o
set MM=MM+1
if hx[Z5o]==0 then
if Z5o==0 then
call Mau("Nullpointer exception when calling Context.getSpellTargetItem","when calling error in ScmdDataTypes, line 1205")
else
call Mau("Called Context.getSpellTargetItem on invalid object.","when calling error in ScmdDataTypes, line 1205")
endif
endif
set I5o=SXt(Z5o)
set MM=MM-1
set ndw=I5o
set I5o=null
return ndw
endfunction
function NLt takes integer BLt returns unit
return OK[BLt]
endfunction
function S5o takes integer s5o,string t5o returns unit
local unit i5o
set w3[MM]=t5o
set MM=MM+1
if hx[s5o]==0 then
if s5o==0 then
call Mau("Nullpointer exception when calling Context.getSpellTargetUnit","when calling error in ScmdDataTypes, line 1181")
else
call Mau("Called Context.getSpellTargetUnit on invalid object.","when calling error in ScmdDataTypes, line 1181")
endif
endif
set i5o=NLt(s5o)
set MM=MM-1
set qdw=i5o
set i5o=null
return qdw
endfunction
function PLt takes integer ULt,integer ILt returns nothing
set iK[ULt]=ILt
endfunction
function T2o takes integer d2o,integer f2o,string R2o returns nothing
set w3[MM]=R2o
set MM=MM+1
if hx[d2o]==0 then
if d2o==0 then
call Mau("Nullpointer exception when calling Context.setPlayerId","when calling error in ScmdDataTypes, line 1154")
else
call Mau("Called Context.setPlayerId on invalid object.","when calling error in ScmdDataTypes, line 1154")
endif
endif
call PLt(d2o,f2o)
set MM=MM-1
endfunction
function bCS takes string OCS returns integer
local integer lCS
set w3[MM]=OCS
set MM=MM+1
if Gx==0 then
if gx<32768 then
set gx=gx+1
set lCS=gx
set hx[lCS]=705
else
call Mau("Out of memory: Could not create Context.","when calling error in ScmdDataTypes, line 1117")
set lCS=0
endif
else
set Gx=Gx-1
set lCS=Yx[Gx]
set hx[lCS]=705
endif
set MM=MM-1
return lCS
endfunction
function jXt takes integer FXt,string kXt returns nothing
set w3[MM]=kXt
set MM=MM+1
set aK[FXt]=YHs("when calling new_IterableMap in ScmdDataTypes, line 1130")
set MM=MM-1
endfunction
function mXt takes integer xXt,string vXt returns nothing
set w3[MM]=vXt
set MM=MM+1
call jXt(xXt,"when calling Context_init in ScmdDataTypes, line 1117")
set MM=MM-1
endfunction
function WLt takes string mLt returns integer
local integer QLt
set w3[MM]=mLt
set MM=MM+1
set QLt=bCS("when calling alloc_Context in ScmdDataTypes, line 1117")
call mXt(QLt,"when calling construct_Context in ScmdDataTypes, line 1117")
set MM=MM-1
return QLt
endfunction
function sLt takes integer uLt,unit rLt returns nothing
set oK[uLt]=rLt
endfunction
function X2o takes integer J2o,unit K2o,string L2o returns nothing
set w3[MM]=L2o
set MM=MM+1
if hx[J2o]==0 then
if J2o==0 then
call Mau("Nullpointer exception when calling Context.setSpellAbilityUnit","when calling error in ScmdDataTypes, line 1172")
else
call Mau("Called Context.setSpellAbilityUnit on invalid object.","when calling error in ScmdDataTypes, line 1172")
endif
endif
call sLt(J2o,K2o)
set MM=MM-1
endfunction
function rXt takes integer uXt returns real
return bK[uXt]
endfunction
function Y5o takes integer f5o,string R5o returns real
local real T5o
set w3[MM]=R5o
set MM=MM+1
if hx[f5o]==0 then
if f5o==0 then
call Mau("Nullpointer exception when calling Context.getSpellTargetY","when calling error in ScmdDataTypes, line 1193")
else
call Mau("Called Context.getSpellTargetY on invalid object.","when calling error in ScmdDataTypes, line 1193")
endif
endif
set T5o=rXt(f5o)
set MM=MM-1
return T5o
endfunction
function yLt takes integer lLt,real bLt returns nothing
set bK[lLt]=bLt
endfunction
function d5o takes integer q5o,real a5o,string n5o returns nothing
set w3[MM]=n5o
set MM=MM+1
if hx[q5o]==0 then
if q5o==0 then
call Mau("Nullpointer exception when calling Context.setSpellTargetY","when calling error in ScmdDataTypes, line 1190")
else
call Mau("Called Context.setSpellTargetY on invalid object.","when calling error in ScmdDataTypes, line 1190")
endif
endif
call yLt(q5o,a5o)
set MM=MM-1
endfunction
function wXt takes integer MLt returns real
return lK[MLt]
endfunction
function e5o takes integer b5o,string y5o returns real
local real p5o
set w3[MM]=y5o
set MM=MM+1
if hx[b5o]==0 then
if b5o==0 then
call Mau("Nullpointer exception when calling Context.getSpellTargetX","when calling error in ScmdDataTypes, line 1187")
else
call Mau("Called Context.getSpellTargetX on invalid object.","when calling error in ScmdDataTypes, line 1187")
endif
endif
set p5o=wXt(b5o)
set MM=MM-1
return p5o
endfunction
function OLt takes integer cLt,real oLt returns nothing
set lK[cLt]=oLt
endfunction
function l5o takes integer c5o,real o5o,string O5o returns nothing
set w3[MM]=O5o
set MM=MM+1
if hx[c5o]==0 then
if c5o==0 then
call Mau("Nullpointer exception when calling Context.setSpellTargetX","when calling error in ScmdDataTypes, line 1184")
else
call Mau("Called Context.setSpellTargetX on invalid object.","when calling error in ScmdDataTypes, line 1184")
endif
endif
call OLt(c5o,o5o)
set MM=MM-1
endfunction
function SLt takes integer tLt,unit iLt returns nothing
set OK[tLt]=iLt
endfunction
function r5o takes integer M2o,unit w5o,string u5o returns nothing
set w3[MM]=u5o
set MM=MM+1
if hx[M2o]==0 then
if M2o==0 then
call Mau("Nullpointer exception when calling Context.setSpellTargetUnit","when calling error in ScmdDataTypes, line 1178")
else
call Mau("Called Context.setSpellTargetUnit on invalid object.","when calling error in ScmdDataTypes, line 1178")
endif
endif
call SLt(M2o,w5o)
set MM=MM-1
endfunction
function tXt takes integer sXt returns destructable
return pK[sXt]
endfunction
function v5o takes integer k5o,string j5o returns destructable
local destructable x5o
set w3[MM]=j5o
set MM=MM+1
if hx[k5o]==0 then
if k5o==0 then
call Mau("Nullpointer exception when calling Context.getSpellTargetDestructable","when calling error in ScmdDataTypes, line 1199")
else
call Mau("Called Context.getSpellTargetDestructable on invalid object.","when calling error in ScmdDataTypes, line 1199")
endif
endif
set x5o=tXt(k5o)
set MM=MM-1
set adw=x5o
set x5o=null
return adw
endfunction
function vLt takes integer hLt,string FLt returns integer
local integer kLt
local integer jLt
local string xLt
set w3[MM]=FLt
set MM=MM+1
set kLt=WLt("when calling new_Context in ScmdDataTypes, line 1138")
call T2o(kLt,h2o(hLt,"when calling getPlayerId in ScmdDataTypes, line 1139"),"when calling setPlayerId in ScmdDataTypes, line 1139")
call x2o(kLt,W2o(hLt,"when calling getEnumUnit in ScmdDataTypes, line 1140"),"when calling setEnumUnit in ScmdDataTypes, line 1140")
call I2o(kLt,H2o(hLt,"when calling getTriggerUnit in ScmdDataTypes, line 1141"),"when calling setTriggerUnit in ScmdDataTypes, line 1141")
call X2o(kLt,N2o(hLt,"when calling getSpellAbilityUnit in ScmdDataTypes, line 1142"),"when calling setSpellAbilityUnit in ScmdDataTypes, line 1142")
call r5o(kLt,S5o(hLt,"when calling getSpellTargetUnit in ScmdDataTypes, line 1143"),"when calling setSpellTargetUnit in ScmdDataTypes, line 1143")
call l5o(kLt,e5o(hLt,"when calling getSpellTargetX in ScmdDataTypes, line 1144"),"when calling setSpellTargetX in ScmdDataTypes, line 1144")
call d5o(kLt,Y5o(hLt,"when calling getSpellTargetY in ScmdDataTypes, line 1145"),"when calling setSpellTargetY in ScmdDataTypes, line 1145")
call F5o(kLt,v5o(hLt,"when calling getSpellTargetDestructable in ScmdDataTypes, line 1146"),"when calling setSpellTargetDestructable in ScmdDataTypes, line 1146")
call E5o(kLt,P5o(hLt,"when calling getSpellTargetItem in ScmdDataTypes, line 1147"),"when calling setSpellTargetItem in ScmdDataTypes, line 1147")
call J5o(kLt,C5o(hLt,"when calling getSpellAbilityId in ScmdDataTypes, line 1148"),"when calling setSpellAbilityId in ScmdDataTypes, line 1148")
call M5o(kLt,s6o(hLt,"when calling getManipulatedItem in ScmdDataTypes, line 1149"),"when calling setManipulatedItem in ScmdDataTypes, line 1149")
set jLt=fHs(aK[hLt],"when calling iterator in ScmdDataTypes, line 1150")
loop
exitwhen not PPs(jLt,"when calling hasNext in ScmdDataTypes, line 1150")
set xLt=gvr(EPs(jLt,"when calling next in ScmdDataTypes, line 1150"),"when calling stringFromIndex in ScmdDataTypes, line 1150")
call OUc(aK[kLt],Rvr(xLt,"when calling stringToIndex in ScmdDataTypes, line 1151"),b7o(BZc(aK[hLt],Rvr(xLt,"when calling stringToIndex in ScmdDataTypes, line 1151"),"when calling get in ScmdDataTypes, line 1151"),"when calling clone in ScmdDataTypes, line 1151"),"when calling put in ScmdDataTypes, line 1151")
endloop
call HPs(jLt,"when calling close in ScmdDataTypes, line 1150")
set MM=MM-1
return kLt
endfunction
function n2o takes integer e2o,string q2o returns integer
local integer a2o
set w3[MM]=q2o
set MM=MM+1
if hx[e2o]==0 then
if e2o==0 then
call Mau("Nullpointer exception when calling Context.clone","when calling error in ScmdDataTypes, line 1137")
else
call Mau("Called Context.clone on invalid object.","when calling error in ScmdDataTypes, line 1137")
endif
endif
set a2o=vLt(e2o,"when calling clone in ScmdDataTypes, line 1137")
set MM=MM-1
return a2o
endfunction
function i9i takes integer r9i,integer s9i,string t9i returns nothing
set w3[MM]=t9i
set MM=MM+1
call B8i(r9i)
set CK[r9i]=CreateTrigger()
set VK[r9i]=l7s(CK[r9i])
set BK[r9i]=ixr(CK[r9i],dd)
set NK[r9i]=rxr(CK[r9i],fd)
set MK[r9i]=rDs("when calling new_HashList in ScmdDataTypes, line 944")
call sSo(nd,VK[r9i],n2o(s9i,"when calling clone in ScmdDataTypes, line 945"),"when calling saveInt in ScmdDataTypes, line 945")
set MM=MM-1
endfunction
function rMS takes string wMS returns integer
local integer uMS
set w3[MM]=wMS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set uMS=yx
set px[uMS]=1448
else
call Mau("Out of memory: Could not create Trigger.","when calling error in ScmdDataTypes, line 893")
set uMS=0
endif
else
set bx=bx-1
set uMS=lx[bx]
set px[uMS]=1448
endif
set MM=MM-1
return uMS
endfunction
function u9i takes integer N8i,string M8i returns integer
local integer w9i
set w3[MM]=M8i
set MM=MM+1
set w9i=rMS("when calling alloc_Trigger in ScmdDataTypes, line 939")
call i9i(w9i,N8i,"when calling construct_Trigger in ScmdDataTypes, line 939")
set MM=MM-1
return w9i
endfunction
function QGt takes integer kGt,integer jGt,integer xGt,string vGt returns integer
local integer mGt
set w3[MM]=vGt
set MM=MM+1
set mGt=l5i(u9i(jGt,"when calling new_Trigger in SLangTriggerFunctions, line 9"),"when calling new_SharedPointer in SLangTriggerFunctions, line 9")
set MM=MM-1
return mGt
endfunction
function QTt takes integer YTt,integer GTt,integer gTt,string hTt returns integer
local player FTt
local integer kTt
local integer jTt
local integer xTt
local player vTt
local integer mTt
set w3[MM]=hTt
set MM=MM+1
set vTt=mAu(S9o(N1o(gTt,0,"when calling get in SLangPlayerFunctions, line 102"),"when calling getInner in SLangPlayerFunctions, line 102"),"when calling resolvePlayer in SLangPlayerFunctions, line 102")
set mTt=M1
set FTt=vTt
set kTt=mTt
if kTt==0 then
call SetPlayerAllianceStateVisionBJ(pa[h2o(GTt,"when calling getPlayerId in SLangPlayerFunctions, line 104")],FTt,true)
endif
if kTt!=0 then
set jTt=kTt
else
set jTt=x4u("when calling nullptr in SLangPlayerFunctions, line 105")
endif
set xTt=jTt
set MM=MM-1
set FTt=null
set vTt=null
return xTt
endfunction
function Qci takes integer gci,integer hci,integer Fci,string kci returns integer
local player jci
local string xci
local string vci
local integer mci
set w3[MM]=kci
set MM=MM+1
set jci=g7s(H9o(N1o(Fci,0,"when calling get in ScmdUnitBuiltins, line 54"),"when calling getInner in ScmdUnitBuiltins, line 54"))
if jci==pa[PLAYER_NEUTRAL_AGGRESSIVE]then
set vci="hostile"
else
if jci==pa[PLAYER_NEUTRAL_PASSIVE]then
set xci="neutral"
else
set xci=Wbu(LWu(jci))
endif
set vci=xci
endif
set mci=l5i(J6i(vci,"when calling new_String in ScmdUnitBuiltins, line 55"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 55")
set MM=MM-1
set jci=null
return mci
endfunction
function Qji takes integer kji,integer jji,integer xji,string vji returns integer
local integer mji
set w3[MM]=vji
set MM=MM+1
set mji=l5i(rAt(N7s(H9o(N1o(xji,0,"when calling get in ScmdUnitBuiltins, line 773"),"when calling getInner in ScmdUnitBuiltins, line 773"),S9o(N1o(xji,1,"when calling get in ScmdUnitBuiltins, line 773"),"when calling getInner in ScmdUnitBuiltins, line 773")),"when calling new_Boolean in ScmdUnitBuiltins, line 773"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 773")
set MM=MM-1
return mji
endfunction
function Qnt takes integer knt,integer jnt,integer xnt,string vnt returns integer
local integer mnt
set w3[MM]=vnt
set MM=MM+1
call a3c(Ka,h2o(jnt,"when calling getPlayerId in SLangChatSystem, line 223"),vbu(Fbu(LWu(pa[h2o(jnt,"when calling getPlayerId in SLangChatSystem, line 223")])),x3,v3)+fJ[knt]+"|r: "+S9o(N1o(xnt,0,"when calling get in SLangChatSystem, line 223"),"when calling getInner in SLangChatSystem, line 223"),ea,"when calling send in SLangChatSystem, line 223")
set mnt=x4u("when calling nullptr in SLangChatSystem, line 224")
set MM=MM-1
return mnt
endfunction
function Qwi takes integer gwi,integer hwi,integer Fwi,string kwi returns integer
local boolean jwi
local string xwi
local integer vwi
local integer mwi
set w3[MM]=kwi
set MM=MM+1
set jwi=true
set xwi=S9o(N1o(Fwi,0,"when calling get in ScmdFogOfWarBuiltins, line 29"),"when calling getInner in ScmdFogOfWarBuiltins, line 29")
if xwi=="on" or xwi=="true" then
call FogMaskEnable(false)
call FogEnable(false)
elseif xwi=="off" or xwi=="false" then
call FogMaskEnable(true)
call FogEnable(true)
else
set jwi=false
endif
if jwi then
set vwi=x4u("when calling nullptr in ScmdFogOfWarBuiltins, line 38")
else
set vwi=Y4u("Parameter should be \"on\" (\"true\") or \"off\" (\"false\")","when calling wrap in ScmdFogOfWarBuiltins, line 38")
endif
set mwi=vwi
set MM=MM-1
return mwi
endfunction
function iau takes effect sau,real tau returns nothing
call BlzSetSpecialEffectPitch(sau,tau)
endfunction
function RGt takes integer qGt,integer aGt,integer nGt,string dGt returns integer
local integer fGt
set w3[MM]=dGt
set MM=MM+1
call iau(r9o(N1o(nGt,0,"when calling get in SLangSpecialEffectFunctions, line 52"),"when calling getInner in SLangSpecialEffectFunctions, line 52"),I8o(N1o(nGt,1,"when calling get in SLangSpecialEffectFunctions, line 52"),"when calling realValue in SLangSpecialEffectFunctions, line 52"))
set fGt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 53")
set MM=MM-1
return fGt
endfunction
function RIi takes integer lIi,integer bIi,integer yIi,string pIi returns integer
local unit eIi
local integer qIi
local integer aIi
local integer nIi
local integer dIi
local integer fIi
set w3[MM]=pIi
set MM=MM+1
set eIi=W2o(bIi,"when calling getEnumUnit in SotfrpGuiCoreUnit, line 85")
set qIi=h2o(bIi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 86")
set aIi=d1i("when calling new_StringTable in SotfrpGuiCoreUnit, line 87")
set nIi=FcS(aIi,"when calling new_SingleUnitData in SotfrpGuiCoreUnit, line 88")
call llo(nIi,eIi,"when calling build in SotfrpGuiCoreUnit, line 88")
set dIi=nIi
call dlo(dIi,pa[qIi],F7s(Ofr(qIi)),h3,GetUnitFacing(eIi),"when calling create in SotfrpGuiCoreUnit, line 88")
call Slo(dIi,"when calling dispatch_SingleUnitData_destroySingleUnitData in SotfrpGuiCoreUnit, line 88")
call Cro(aIi,"when calling dispatch_StringTable_destroyStringTable in SotfrpGuiCoreUnit, line 89")
set fIi=x4u("when calling nullptr in SotfrpGuiCoreUnit, line 91")
set MM=MM-1
set eIi=null
return fIi
endfunction
function P9i takes integer I9i returns nothing
endfunction
function K9i takes integer J9i returns nothing
call P9i(J9i)
endfunction
function eMS takes string yMS returns integer
local integer pMS
set w3[MM]=yMS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set pMS=yx
set px[pMS]=1449
else
call Mau("Out of memory: Could not create Undefined.","when calling error in ScmdDataTypes, line 70")
set pMS=0
endif
else
set bx=bx-1
set pMS=lx[bx]
set px[pMS]=1449
endif
set MM=MM-1
return pMS
endfunction
function H9i takes string A9i returns integer
local integer D9i
set w3[MM]=A9i
set MM=MM+1
set D9i=eMS("when calling alloc_Undefined in ScmdDataTypes, line 74")
call K9i(D9i)
set MM=MM-1
return D9i
endfunction
function ROi takes integer pOi,integer eOi,integer qOi,string aOi returns integer
local unit nOi
local integer dOi
local integer fOi
set w3[MM]=aOi
set MM=MM+1
set nOi=W2o(eOi,"when calling getEnumUnit in ScmdUnitBuiltins, line 104")
if bJu(nOi)then
set dOi=j1t(OJu(nOi),"when calling new_Real in ScmdUnitBuiltins, line 105")
else
set dOi=H9i("when calling new_Undefined in ScmdUnitBuiltins, line 105")
endif
set fOi=hBt(dOi,"when calling new_GenericSharedPointer in ScmdUnitBuiltins, line 105")
set MM=MM-1
set nOi=null
return fOi
endfunction
function RWi takes integer qWi,integer aWi,integer nWi,string dWi returns integer
local integer fWi
set w3[MM]=dWi
set MM=MM+1
call lpr(W2o(aWi,"when calling getEnumUnit in SotFRP_AbilitySystem, line 46"),S9o(N1o(nWi,0,"when calling get in SotFRP_AbilitySystem, line 46"),"when calling getInner in SotFRP_AbilitySystem, line 46"),"when calling addAbility in SotFRP_AbilitySystem, line 46")
set fWi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 47")
set MM=MM-1
return fWi
endfunction
function Rht takes integer qht,integer aht,integer nht,string dht returns integer
local integer fht
set w3[MM]=dht
set MM=MM+1
set fht=l5i(R3t(P5o(aht,"when calling getSpellTargetItem in SLangTriggerFunctions, line 112"),"when calling new_Item in SLangTriggerFunctions, line 112"),"when calling new_SharedPointer in SLangTriggerFunctions, line 112")
set MM=MM-1
return fht
endfunction
function B6r takes unit C6r,boolean V6r returns nothing
call SetUnitExploded(C6r,V6r)
endfunction
function X6r takes unit L6r returns nothing
call B6r(L6r,true)
call M6r(L6r)
endfunction
function Rji takes integer qji,integer aji,integer nji,string dji returns integer
local integer fji
set w3[MM]=dji
set MM=MM+1
call X6r(H9o(N1o(nji,0,"when calling get in ScmdUnitBuiltins, line 767"),"when calling getInner in ScmdUnitBuiltins, line 767"))
set fji=x4u("when calling nullptr in ScmdUnitBuiltins, line 768")
set MM=MM-1
return fji
endfunction
function Rxt takes integer qxt,integer axt,integer nxt,string dxt returns integer
local integer fxt
set w3[MM]=dxt
set MM=MM+1
set fxt=X8o(s4o(nxt,0,"when calling getPtr in ScmdCoreBuiltins, line 113"),"when calling clone in ScmdCoreBuiltins, line 113")
set MM=MM-1
return fxt
endfunction
function SEt takes integer uEt,integer rEt,integer sEt,string tEt returns integer
local integer iEt
set w3[MM]=tEt
set MM=MM+1
set iEt=l5i(pMt(T8o(N1o(sEt,0,"when calling get in ScmdCoreBuiltins, line 270"),"when calling intValue in ScmdCoreBuiltins, line 270"),"when calling new_Integer in ScmdCoreBuiltins, line 270"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 270")
set MM=MM-1
return iEt
endfunction
function SOi takes integer uOi,integer rOi,integer sOi,string tOi returns integer
local integer iOi
set w3[MM]=tOi
set MM=MM+1
call cJu(W2o(rOi,"when calling getEnumUnit in ScmdUnitBuiltins, line 97"),I8o(N1o(sOi,0,"when calling get in ScmdUnitBuiltins, line 97"),"when calling realValue in ScmdUnitBuiltins, line 97"))
set iOi=x4u("when calling nullptr in ScmdUnitBuiltins, line 98")
set MM=MM-1
return iOi
endfunction
function iws takes unit rws,unitweaponrealfield sws,integer tws returns real
return BlzGetUnitWeaponRealField(rws,sws,tws)
endfunction
function SRi takes integer uRi,integer rRi,integer sRi,string tRi returns integer
local integer iRi
set w3[MM]=tRi
set MM=MM+1
set iRi=l5i(j1t(iws(H9o(N1o(sRi,0,"when calling get in ScmdUnitBuiltins, line 427"),"when calling getInner in ScmdUnitBuiltins, line 427"),UNIT_WEAPON_RF_ATTACK_RANGE,t8o(N1o(sRi,1,"when calling get in ScmdUnitBuiltins, line 427"),"when calling intValue in ScmdUnitBuiltins, line 427")),"when calling new_Real in ScmdUnitBuiltins, line 427"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 427")
set MM=MM-1
return iRi
endfunction
function xnr takes rect jnr returns nothing
call Preload(gf)
set xf=rgu(pUu((SIu(jnr)-64.)/128.))*128.+64.
set vf=rgu(pUu((oIu(jnr)-64.)/128.))*128.+64.
call EnumItemsInRect(jnr,null,Faw)
call Preload(hf)
endfunction
function SUi takes integer uUi,integer rUi,integer sUi,string tUi returns integer
local integer iUi
set w3[MM]=tUi
set MM=MM+1
call PreloadGenClear()
call xnr(H8o(N1o(sUi,0,"when calling get in SotFRP_SaveLoad, line 147"),"when calling getInner in SotFRP_SaveLoad, line 147"))
if ea==pa[h2o(rUi,"when calling getPlayerId in SotFRP_SaveLoad, line 148")]then
call PreloadGenEnd("SotFRP\\Save\\"+S9o(N1o(sUi,1,"when calling get in SotFRP_SaveLoad, line 149"),"when calling getInner in SotFRP_SaveLoad, line 149")+".pld")
endif
set iUi=l5i(K3t("when calling new_Null in SotFRP_SaveLoad, line 150"),"when calling new_SharedPointer in SotFRP_SaveLoad, line 150")
set MM=MM-1
return iUi
endfunction
function Sai takes integer uai,integer rai,integer sai,string tai returns integer
local integer iai
set w3[MM]=tai
set MM=MM+1
set iai=l5i(j1t(y7s(H9o(N1o(sai,0,"when calling get in ScmdUnitBuiltins, line 316"),"when calling getInner in ScmdUnitBuiltins, line 316")),"when calling new_Real in ScmdUnitBuiltins, line 316"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 316")
set MM=MM-1
return iai
endfunction
function uws takes unit N_s,unitrealfield M_s,real wws returns boolean
return BlzSetUnitRealField(N_s,M_s,wws)
endfunction
function Sdi takes integer udi,integer rdi,integer sdi,string tdi returns integer
local integer idi
set w3[MM]=tdi
set MM=MM+1
call uws(W2o(rdi,"when calling getEnumUnit in ScmdUnitBuiltins, line 375"),UNIT_RF_HIT_POINTS_REGENERATION_RATE,I8o(N1o(sdi,0,"when calling get in ScmdUnitBuiltins, line 375"),"when calling realValue in ScmdUnitBuiltins, line 375"))
set idi=x4u("when calling nullptr in ScmdUnitBuiltins, line 376")
set MM=MM-1
return idi
endfunction
function oNt takes integer cNt returns group
return hK[cNt]
endfunction
function X7o takes integer J7o,string K7o returns group
local group L7o
set w3[MM]=K7o
set MM=MM+1
if px[J7o]==0 then
if J7o==0 then
call Mau("Nullpointer exception when calling Group.getInner","when calling error in ScmdDataTypes, line 754")
else
call Mau("Called Group.getInner on invalid object.","when calling error in ScmdDataTypes, line 754")
endif
endif
set L7o=oNt(J7o)
set MM=MM-1
set fdw=L7o
set L7o=null
return fdw
endfunction
function Sei takes integer uei,integer rei,integer sei,string tei returns integer
local integer iei
set w3[MM]=tei
set MM=MM+1
call Iqo(X7o(N1o(sei,0,"when calling get in ScmdUnitBuiltins, line 264"),"when calling getInner in ScmdUnitBuiltins, line 264"),W2o(rei,"when calling getEnumUnit in ScmdUnitBuiltins, line 264"))
set iei=x4u("when calling nullptr in ScmdUnitBuiltins, line 265")
set MM=MM-1
return iei
endfunction
function Sii takes integer uii,integer rii,integer sii,string tii returns integer
local integer iii
set w3[MM]=tii
set MM=MM+1
set iii=l5i(j1t(KUu(H8o(N1o(sii,0,"when calling get in ScmdRectBuiltins, line 20"),"when calling getInner in ScmdRectBuiltins, line 20")),"when calling new_Real in ScmdRectBuiltins, line 20"),"when calling new_SharedPointer in ScmdRectBuiltins, line 20")
set MM=MM-1
return iii
endfunction
function hKt takes integer gKt returns camerasetup
return tK[gKt]
endfunction
function p2o takes integer l2o,string b2o returns camerasetup
local camerasetup y2o
set w3[MM]=b2o
set MM=MM+1
if px[l2o]==0 then
if l2o==0 then
call Mau("Nullpointer exception when calling CameraSetup.getInner","when calling error in ScmdDataTypes, line 886")
else
call Mau("Called CameraSetup.getInner on invalid object.","when calling error in ScmdDataTypes, line 886")
endif
endif
set y2o=hKt(l2o)
set MM=MM-1
set bdw=y2o
set y2o=null
return bdw
endfunction
function Skt takes integer ukt,integer rkt,integer skt,string tkt returns integer
local integer ikt
set w3[MM]=tkt
set MM=MM+1
if ea==pa[h2o(rkt,"when calling getPlayerId in ScmdCameraSetupBuiltins, line 18")]then
call CameraSetupApply(p2o(N1o(skt,0,"when calling get in ScmdCameraSetupBuiltins, line 19"),"when calling getInner in ScmdCameraSetupBuiltins, line 19"),c4o(N1o(skt,1,"when calling get in ScmdCameraSetupBuiltins, line 19"),"when calling booleanValue in ScmdCameraSetupBuiltins, line 19"),c4o(N1o(skt,2,"when calling get in ScmdCameraSetupBuiltins, line 19"),"when calling booleanValue in ScmdCameraSetupBuiltins, line 19"))
endif
set ikt=x4u("when calling nullptr in ScmdCameraSetupBuiltins, line 20")
set MM=MM-1
return ikt
endfunction
function BQu takes player XQu,boolexpr CQu returns group
local group VQu=CreateGroup()
call GroupEnumUnitsOfPlayer(VQu,XQu,CQu)
set pnw=VQu
set VQu=null
return pnw
endfunction
function Spi takes integer upi,integer rpi,integer spi,string tpi returns integer
local integer ipi
set w3[MM]=tpi
set MM=MM+1
set ipi=l5i(fNt(BQu(pa[h2o(rpi,"when calling getPlayerId in ScmdUnitBuiltins, line 232")],Filter(wnw)),"when calling new_Group in ScmdUnitBuiltins, line 232"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 232")
set MM=MM-1
return ipi
endfunction
function Epr takes unit Fpr,string kpr,integer jpr,integer xpr,string vpr returns nothing
local integer mpr
local integer Qpr
local integer Wpr
set w3[MM]=vpr
set MM=MM+1
set mpr=spr(kpr,"when calling getAbilityIdByName in SotFRP_AbilitySystem, line 33")
set Qpr=kAs(mpr,"when calling iterator in SotFRP_AbilitySystem, line 34")
loop
exitwhen not PPs(Qpr,"when calling hasNext in SotFRP_AbilitySystem, line 34")
set Wpr=EPs(Qpr,"when calling next in SotFRP_AbilitySystem, line 34")
call BlzSetUnitAbilityManaCost(Fpr,Wpr,jpr,xpr)
endloop
call HPs(Qpr,"when calling close in SotFRP_AbilitySystem, line 34")
call vEc(mpr,"when calling dispatch_HashList_destroyHashList in SotFRP_AbilitySystem, line 36")
set MM=MM-1
endfunction
function TEi takes integer aEi,integer nEi,integer dEi,string fEi returns integer
local integer REi
set w3[MM]=fEi
set MM=MM+1
call Epr(W2o(nEi,"when calling getEnumUnit in SotFRP_AbilitySystem, line 73"),S9o(N1o(dEi,0,"when calling get in SotFRP_AbilitySystem, line 73"),"when calling getInner in SotFRP_AbilitySystem, line 73"),t8o(N1o(dEi,1,"when calling get in SotFRP_AbilitySystem, line 73"),"when calling intValue in SotFRP_AbilitySystem, line 73"),t8o(N1o(dEi,2,"when calling get in SotFRP_AbilitySystem, line 73"),"when calling intValue in SotFRP_AbilitySystem, line 73"),"when calling setAbilityManaCost in SotFRP_AbilitySystem, line 73")
set REi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 74")
set MM=MM-1
return REi
endfunction
function TSi takes integer aSi,integer nSi,integer dSi,string fSi returns integer
local integer RSi
set w3[MM]=fSi
set MM=MM+1
call ResumeMusic()
set RSi=x4u("when calling nullptr in ScmdSoundFunctions, line 28")
set MM=MM-1
return RSi
endfunction
function TTt takes integer bTt,integer yTt,integer pTt,string eTt returns integer
local player qTt
local integer aTt
local integer nTt
local integer dTt
local player fTt
local integer RTt
set w3[MM]=eTt
set MM=MM+1
set fTt=mAu(S9o(N1o(pTt,0,"when calling get in SLangPlayerFunctions, line 96"),"when calling getInner in SLangPlayerFunctions, line 96"),"when calling resolvePlayer in SLangPlayerFunctions, line 96")
set RTt=M1
set qTt=fTt
set aTt=RTt
if aTt==0 then
call SetPlayerAllianceStateAllyBJ(pa[h2o(yTt,"when calling getPlayerId in SLangPlayerFunctions, line 98")],qTt,false)
endif
if aTt!=0 then
set nTt=aTt
else
set nTt=x4u("when calling nullptr in SLangPlayerFunctions, line 99")
endif
set dTt=nTt
set MM=MM-1
set qTt=null
set fTt=null
return dTt
endfunction
function lws takes unit Sws,unitweaponbooleanfield cws,integer ows,boolean Ows returns boolean
return BlzSetUnitWeaponBooleanField(Sws,cws,ows,Ows)
endfunction
function Tfi takes integer afi,integer nfi,integer dfi,string ffi returns integer
local integer Rfi
set w3[MM]=ffi
set MM=MM+1
set Rfi=l5i(rAt(lws(H9o(N1o(dfi,0,"when calling get in ScmdUnitBuiltins, line 410"),"when calling getInner in ScmdUnitBuiltins, line 410"),UNIT_WEAPON_BF_ATTACKS_ENABLED,t8o(N1o(dfi,1,"when calling get in ScmdUnitBuiltins, line 410"),"when calling intValue in ScmdUnitBuiltins, line 410"),c4o(N1o(dfi,2,"when calling get in ScmdUnitBuiltins, line 410"),"when calling booleanValue in ScmdUnitBuiltins, line 410")),"when calling new_Boolean in ScmdUnitBuiltins, line 410"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 410")
set MM=MM-1
return Rfi
endfunction
function Tni takes integer ani,integer nni,integer dni,string fni returns integer
local integer Rni
set w3[MM]=fni
set MM=MM+1
call t_s(W2o(nni,"when calling getEnumUnit in ScmdUnitBuiltins, line 356"),t8o(N1o(dni,0,"when calling get in ScmdUnitBuiltins, line 356"),"when calling intValue in ScmdUnitBuiltins, line 356"),t8o(N1o(dni,1,"when calling get in ScmdUnitBuiltins, line 356"),"when calling intValue in ScmdUnitBuiltins, line 356"))
set Rni=x4u("when calling nullptr in ScmdUnitBuiltins, line 357")
set MM=MM-1
return Rni
endfunction
function Toi takes integer aoi,integer noi,integer doi,string foi returns integer
local integer Roi
set w3[MM]=foi
set MM=MM+1
call D9s(W2o(noi,"when calling getEnumUnit in ScmdUnitBuiltins, line 80"),wwu(I8o(N1o(doi,0,"when calling get in ScmdUnitBuiltins, line 80"),"when calling realValue in ScmdUnitBuiltins, line 80")))
set Roi=x4u("when calling nullptr in ScmdUnitBuiltins, line 81")
set MM=MM-1
return Roi
endfunction
function Tqi takes integer aqi,integer nqi,integer dqi,string fqi returns integer
local integer Rqi
set w3[MM]=fqi
set MM=MM+1
call SetWidgetLife(c0o(N1o(dqi,0,"when calling get in ScmdUnitBuiltins, line 298"),"when calling getInner in ScmdUnitBuiltins, line 298"),I8o(N1o(dqi,1,"when calling get in ScmdUnitBuiltins, line 298"),"when calling realValue in ScmdUnitBuiltins, line 298"))
set Rqi=x4u("when calling nullptr in ScmdUnitBuiltins, line 299")
set MM=MM-1
return Rqi
endfunction
function Tvt takes integer avt,integer nvt,integer dvt,string fvt returns integer
local integer Rvt
set w3[MM]=fvt
set MM=MM+1
set Rvt=l5i(J6i(PFr(S9o(N1o(dvt,0,"when calling get in ScmdCoreBuiltins, line 150"),"when calling getInner in ScmdCoreBuiltins, line 150"),S9o(N1o(dvt,1,"when calling get in ScmdCoreBuiltins, line 150"),"when calling getInner in ScmdCoreBuiltins, line 150"),S9o(N1o(dvt,2,"when calling get in ScmdCoreBuiltins, line 150"),"when calling getInner in ScmdCoreBuiltins, line 150")),"when calling new_String in ScmdCoreBuiltins, line 150"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 150")
set MM=MM-1
return Rvt
endfunction
function UEt takes integer mEt,integer QEt,integer WEt,string EEt returns integer
local integer ZEt
set w3[MM]=EEt
set MM=MM+1
set ZEt=l5i(rAt(ModuloInteger(t8o(N1o(WEt,0,"when calling get in ScmdCoreBuiltins, line 285"),"when calling intValue in ScmdCoreBuiltins, line 285"),2)!=0,"when calling new_Boolean in ScmdCoreBuiltins, line 285"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 285")
set MM=MM-1
return ZEt
endfunction
function URi takes integer mRi,integer QRi,integer WRi,string ERi returns integer
local integer ZRi
set w3[MM]=ERi
set MM=MM+1
set ZRi=l5i(rAt(qlr(W2o(QRi,"when calling getEnumUnit in ScmdUnitBuiltins, line 488"),S9o(N1o(WRi,0,"when calling get in ScmdUnitBuiltins, line 488"),"when calling getInner in ScmdUnitBuiltins, line 488")),"when calling new_Boolean in ScmdUnitBuiltins, line 488"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 488")
set MM=MM-1
return ZRi
endfunction
function Uai takes integer mai,integer Qai,integer Wai,string Eai returns integer
local integer Zai
set w3[MM]=Eai
set MM=MM+1
set Zai=l5i(pMt(L0s(W2o(Qai,"when calling getEnumUnit in ScmdUnitBuiltins, line 339"),t8o(N1o(Wai,0,"when calling get in ScmdUnitBuiltins, line 339"),"when calling intValue in ScmdUnitBuiltins, line 339")),"when calling new_Integer in ScmdUnitBuiltins, line 339"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 339")
set MM=MM-1
return Zai
endfunction
function Udi takes integer mdi,integer Qdi,integer Wdi,string Edi returns integer
local integer Zdi
set w3[MM]=Edi
set MM=MM+1
call uws(H9o(N1o(Wdi,0,"when calling get in ScmdUnitBuiltins, line 392"),"when calling getInner in ScmdUnitBuiltins, line 392"),UNIT_RF_SIGHT_RADIUS,I8o(N1o(Wdi,1,"when calling get in ScmdUnitBuiltins, line 392"),"when calling realValue in ScmdUnitBuiltins, line 392"))
set Zdi=x4u("when calling nullptr in ScmdUnitBuiltins, line 393")
set MM=MM-1
return Zdi
endfunction
function Uei takes integer mei,integer Qei,integer Wei,string Eei returns integer
local integer Zei
set w3[MM]=Eei
set MM=MM+1
set Zei=l5i(pMt(k0s(H9o(N1o(Wei,0,"when calling get in ScmdUnitBuiltins, line 280"),"when calling getInner in ScmdUnitBuiltins, line 280")),"when calling new_Integer in ScmdUnitBuiltins, line 280"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 280")
set MM=MM-1
return Zei
endfunction
function Uii takes integer mii,integer Qii,integer Wii,string Eii returns integer
local integer Zii
set w3[MM]=Eii
set MM=MM+1
set Zii=X8o(Wd,"when calling clone in ScmdRectBuiltins, line 36")
set MM=MM-1
return Zii
endfunction
function Upi takes integer mpi,integer Qpi,integer Wpi,string Epi returns integer
local integer Zpi
set w3[MM]=Epi
set MM=MM+1
set Zpi=l5i(q0i(CreateUnit(pa[h2o(Qpi,"when calling getPlayerId in ScmdUnitBuiltins, line 250")],UnitId(S9o(N1o(Wpi,0,"when calling get in ScmdUnitBuiltins, line 250"),"when calling getInner in ScmdUnitBuiltins, line 250")),kUu(I8o(N1o(Wpi,1,"when calling get in ScmdUnitBuiltins, line 250"),"when calling realValue in ScmdUnitBuiltins, line 250"),VT,CT),kUu(I8o(N1o(Wpi,2,"when calling get in ScmdUnitBuiltins, line 250"),"when calling realValue in ScmdUnitBuiltins, line 250"),NT,BT),I8o(N1o(Wpi,3,"when calling get in ScmdUnitBuiltins, line 250"),"when calling realValue in ScmdUnitBuiltins, line 250")),"when calling new_Unit in ScmdUnitBuiltins, line 250"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 250")
set MM=MM-1
return Zpi
endfunction
function Uxt takes integer mxt,integer Qxt,integer Wxt,string Ext returns integer
local integer Zxt
set w3[MM]=Ext
set MM=MM+1
set Zxt=l5i(pMt(vhr(S9o(N1o(Wxt,0,"when calling get in ScmdCoreBuiltins, line 124"),"when calling getInner in ScmdCoreBuiltins, line 124")),"when calling new_Integer in ScmdCoreBuiltins, line 124"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 124")
set MM=MM-1
return Zxt
endfunction
function Lqu takes effect Jqu,real Kqu returns nothing
call BlzSetSpecialEffectHeight(Jqu,Kqu)
endfunction
function VYt takes integer JYt,integer KYt,integer LYt,string XYt returns integer
local integer CYt
set w3[MM]=XYt
set MM=MM+1
call Lqu(r9o(N1o(LYt,0,"when calling get in SLangSpecialEffectFunctions, line 36"),"when calling getInner in SLangSpecialEffectFunctions, line 36"),I8o(N1o(LYt,1,"when calling get in SLangSpecialEffectFunctions, line 36"),"when calling realValue in SLangSpecialEffectFunctions, line 36"))
set CYt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 37")
set MM=MM-1
return CYt
endfunction
function Vgt takes integer Jgt,integer Kgt,integer Lgt,string Xgt returns integer
local integer Cgt
set w3[MM]=Xgt
set MM=MM+1
set Cgt=l5i(q0i(S5o(Kgt,"when calling getSpellTargetUnit in SLangTriggerFunctions, line 100"),"when calling new_Unit in SLangTriggerFunctions, line 100"),"when calling new_SharedPointer in SLangTriggerFunctions, line 100")
set MM=MM-1
return Cgt
endfunction
function Vki takes integer Jki,integer Kki,integer Lki,string Xki returns integer
local integer Cki
set w3[MM]=Xki
set MM=MM+1
call E8s(H9o(N1o(Lki,0,"when calling get in ScmdUnitBuiltins, line 753"),"when calling getInner in ScmdUnitBuiltins, line 753"))
set Cki=x4u("when calling nullptr in ScmdUnitBuiltins, line 754")
set MM=MM-1
return Cki
endfunction
function Vvt takes integer Jvt,integer Kvt,integer Lvt,string Xvt returns integer
local integer Cvt
set w3[MM]=Xvt
set MM=MM+1
set Cvt=l5i(J6i(Uhr(S9o(N1o(Lvt,0,"when calling get in ScmdCoreBuiltins, line 163"),"when calling getInner in ScmdCoreBuiltins, line 163")),"when calling new_String in ScmdCoreBuiltins, line 163"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 163")
set MM=MM-1
return Cvt
endfunction
function Vxi takes integer Jxi,integer Kxi,integer Lxi,string Xxi returns integer
local integer Cxi
set w3[MM]=Xxi
set MM=MM+1
call OLu(W2o(Kxi,"when calling getEnumUnit in ScmdUnitBuiltins, line 807"),S9o(N1o(Lxi,0,"when calling get in ScmdUnitBuiltins, line 807"),"when calling getInner in ScmdUnitBuiltins, line 807"),true)
set Cxi=x4u("when calling nullptr in ScmdUnitBuiltins, line 808")
set MM=MM-1
return Cxi
endfunction
function J8i takes integer P8i,integer A8i,string D8i returns nothing
local integer H8i
set w3[MM]=D8i
set MM=MM+1
set H8i=iYu(ad,VK[P8i],-1)
call uGu(ad,VK[P8i],-1,H8i+1)
call uGu(ad,VK[P8i],H8i,b7o(A8i,"when calling clone in ScmdDataTypes, line 975"))
set MM=MM-1
endfunction
function W9o takes integer v9o,integer m9o,string Q9o returns nothing
set w3[MM]=Q9o
set MM=MM+1
if px[v9o]==0 then
if v9o==0 then
call Mau("Nullpointer exception when calling Trigger.addAction","when calling error in ScmdDataTypes, line 972")
else
call Mau("Called Trigger.addAction on invalid object.","when calling error in ScmdDataTypes, line 972")
endif
endif
call J8i(v9o,m9o,"when calling addAction in ScmdDataTypes, line 972")
set MM=MM-1
endfunction
function WEi takes integer jEi,integer xEi,integer vEi,string mEi returns integer
local integer QEi
set w3[MM]=mEi
set MM=MM+1
call Kpr(W2o(xEi,"when calling getEnumUnit in SotFRP_AbilitySystem, line 80"),S9o(N1o(vEi,0,"when calling get in SotFRP_AbilitySystem, line 80"),"when calling getInner in SotFRP_AbilitySystem, line 80"),t8o(N1o(vEi,1,"when calling get in SotFRP_AbilitySystem, line 80"),"when calling intValue in SotFRP_AbilitySystem, line 80"),I8o(N1o(vEi,2,"when calling get in SotFRP_AbilitySystem, line 80"),"when calling realValue in SotFRP_AbilitySystem, line 80"),"when calling setAbilityCooldown in SotFRP_AbilitySystem, line 80")
set QEi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 81")
set MM=MM-1
return QEi
endfunction
function fdu takes player ndu,integer ddu returns nothing
set yZ[adu(ndu)]=ddu
endfunction
function WSi takes integer jSi,integer xSi,integer vSi,string mSi returns integer
local integer QSi
set w3[MM]=mSi
set MM=MM+1
call fdu(pa[h2o(xSi,"when calling getPlayerId in ScmdSystemsSettingsBuiltins, line 9")],t8o(N1o(vSi,0,"when calling get in ScmdSystemsSettingsBuiltins, line 9"),"when calling intValue in ScmdSystemsSettingsBuiltins, line 9"))
set QSi=x4u("when calling nullptr in ScmdSystemsSettingsBuiltins, line 10")
set MM=MM-1
return QSi
endfunction
function Wfi takes integer jfi,integer xfi,integer vfi,string mfi returns integer
local integer Qfi
set w3[MM]=mfi
set MM=MM+1
set Qfi=l5i(j1t(e_s(H9o(N1o(vfi,0,"when calling get in ScmdUnitBuiltins, line 415"),"when calling getInner in ScmdUnitBuiltins, line 415"),t8o(N1o(vfi,1,"when calling get in ScmdUnitBuiltins, line 415"),"when calling intValue in ScmdUnitBuiltins, line 415")),"when calling new_Real in ScmdUnitBuiltins, line 415"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 415")
set MM=MM-1
return Qfi
endfunction
function Jvr takes group Hvr returns integer
return l7s(Hvr)
endfunction
function lQi takes integer iQi,unit SQi,string cQi returns group
local group oQi
local group OQi
set w3[MM]=cQi
set MM=MM+1
set oQi=Dvr(BZc(EL[iQi],vvr(SQi),"when calling get in ScmdUnitParamLinkingBuiltins, line 25"),"when calling groupFromIndex in ScmdUnitParamLinkingBuiltins, line 25")
if oQi==null then
set OQi=CreateGroup()
call Iqo(OQi,SQi)
set oQi=OQi
call OUc(EL[iQi],vvr(SQi),Jvr(oQi),"when calling put in ScmdUnitParamLinkingBuiltins, line 28")
endif
set MM=MM-1
set Xnw=oQi
set oQi=null
set OQi=null
return Xnw
endfunction
function J_o takes integer P_o,unit A_o,string D_o returns group
local group H_o
set w3[MM]=D_o
set MM=MM+1
if rv[P_o]==0 then
if P_o==0 then
call Mau("Nullpointer exception when calling DisjointGroups.getOrMakeGroup","when calling error in ScmdUnitParamLinkingBuiltins, line 24")
else
call Mau("Called DisjointGroups.getOrMakeGroup on invalid object.","when calling error in ScmdUnitParamLinkingBuiltins, line 24")
endif
endif
set H_o=lQi(P_o,A_o,"when calling getOrMakeGroup in ScmdUnitParamLinkingBuiltins, line 24")
set MM=MM-1
set Fdw=H_o
set H_o=null
return Fdw
endfunction
function xQi takes integer bQi,unit yQi,unit pQi,string eQi returns nothing
local group qQi
local group aQi
local group nQi
local group dQi
local group fQi
local group RQi
local unit TQi
local group YQi
local group GQi
local group gQi
local group hQi
local group FQi
local group kQi
local group jQi
set w3[MM]=eQi
set MM=MM+1
set qQi=J_o(bQi,yQi,"when calling getOrMakeGroup in ScmdUnitParamLinkingBuiltins, line 35")
set aQi=J_o(bQi,pQi,"when calling getOrMakeGroup in ScmdUnitParamLinkingBuiltins, line 36")
if qQi!=aQi then
if oTu(qQi)<oTu(aQi)then
set GQi=qQi
set gQi=aQi
set fQi=GQi
set RQi=gQi
else
set hQi=aQi
set FQi=qQi
set fQi=hQi
set RQi=FQi
endif
set kQi=fQi
set jQi=RQi
set nQi=kQi
set dQi=jQi
call rTu(dQi,nQi)
set YQi=nQi
loop
exitwhen not lTu(YQi)
set TQi=aTu(YQi)
call OUc(EL[bQi],vvr(TQi),Jvr(dQi),"when calling put in ScmdUnitParamLinkingBuiltins, line 41")
endloop
call STu(nQi)
endif
set MM=MM-1
set qQi=null
set aQi=null
set nQi=null
set dQi=null
set fQi=null
set RQi=null
set TQi=null
set YQi=null
set GQi=null
set gQi=null
set hQi=null
set FQi=null
set kQi=null
set jQi=null
endfunction
function V_o takes integer K_o,unit L_o,unit X_o,string C_o returns nothing
set w3[MM]=C_o
set MM=MM+1
if rv[K_o]==0 then
if K_o==0 then
call Mau("Nullpointer exception when calling DisjointGroups.unite","when calling error in ScmdUnitParamLinkingBuiltins, line 34")
else
call Mau("Called DisjointGroups.unite on invalid object.","when calling error in ScmdUnitParamLinkingBuiltins, line 34")
endif
endif
call xQi(K_o,L_o,X_o,"when calling unite in ScmdUnitParamLinkingBuiltins, line 34")
set MM=MM-1
endfunction
function Rbr takes group pbr,integer ebr,string qbr returns nothing
local unit abr
local integer nbr
local unit dbr
local group fbr
set w3[MM]=qbr
set MM=MM+1
set abr=FirstOfGroup(pbr)
if abr==null then
set MM=MM-1
set abr=null
set dbr=null
set fbr=null
return
endif
call Hno(pbr,abr)
set nbr=BZc(Ud,ebr,"when calling get in ScmdUnitParamLinkingBuiltins, line 151")
set fbr=pbr
loop
exitwhen not lTu(fbr)
set dbr=aTu(fbr)
call V_o(nbr,abr,dbr,"when calling unite in ScmdUnitParamLinkingBuiltins, line 153")
endloop
set MM=MM-1
set abr=null
set dbr=null
set fbr=null
endfunction
function Rsc takes string dsc returns integer
local integer fsc
set w3[MM]=dsc
set MM=MM+1
if lg==0 then
if bg<32768 then
set bg=bg+1
set fsc=bg
set yg[fsc]=805
else
call Mau("Out of memory: Could not create ForGroupCallback_forUnitsSelected_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 182")
set fsc=0
endif
else
set lg=lg-1
set fsc=Og[lg]
set yg[fsc]=805
endif
set MM=MM-1
return fsc
endfunction
function jbr takes string hbr returns boolean
local string kbr=hbr
local integer Fbr
if kbr=="hp" then
set Fbr=0
elseif kbr=="damage" then
set Fbr=1
elseif kbr=="mana" then
set Fbr=2
elseif kbr=="death" then
set Fbr=3
elseif kbr=="orders" then
set Fbr=4
else
set b4=false
set y4=0
return b4
endif
set b4=true
set y4=Fbr
return b4
endfunction
function Wmi takes integer fmi,integer Rmi,integer Tmi,string Ymi returns integer
local boolean Gmi
local integer gmi
local group hmi
local integer Fmi
local group kmi
local integer jmi
local integer xmi
local player vmi
local boolean mmi
local integer Qmi
set w3[MM]=Ymi
set MM=MM+1
set mmi=jbr(S9o(N1o(Tmi,0,"when calling get in ScmdUnitParamLinkingBuiltins, line 179"),"when calling getInner in ScmdUnitParamLinkingBuiltins, line 179"))
set Qmi=y4
set Gmi=mmi
set gmi=Qmi
if Gmi then
set hmi=CreateGroup()
set vmi=pa[h2o(Rmi,"when calling getPlayerId in ScmdUnitParamLinkingBuiltins, line 182")]
set Fmi=Rsc("when calling alloc_ForGroupCallback_forUnitsSelected_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 182")
set vL[Fmi]=Rmi
set mL[Fmi]=hmi
call mcu(vmi,Fmi,"when calling forUnitsSelected in ScmdUnitParamLinkingBuiltins, line 182")
set kmi=hmi
call Rbr(kmi,gmi,"when calling linkParameter in ScmdUnitParamLinkingBuiltins, line 185")
endif
if Gmi then
set jmi=x4u("when calling nullptr in ScmdUnitParamLinkingBuiltins, line 186")
else
set jmi=Y4u("unknown parameter","when calling wrap in ScmdUnitParamLinkingBuiltins, line 186")
endif
set xmi=jmi
set MM=MM-1
set hmi=null
set kmi=null
set vmi=null
return xmi
endfunction
function Wni takes integer jni,integer xni,integer vni,string mni returns integer
local integer Qni
set w3[MM]=mni
set MM=MM+1
set Qni=l5i(pMt(w_s(W2o(xni,"when calling getEnumUnit in ScmdUnitBuiltins, line 363"),t8o(N1o(vni,0,"when calling get in ScmdUnitBuiltins, line 363"),"when calling intValue in ScmdUnitBuiltins, line 363")),"when calling new_Integer in ScmdUnitBuiltins, line 363"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 363")
set MM=MM-1
return Qni
endfunction
function Woi takes integer joi,integer xoi,integer voi,string moi returns integer
local integer Qoi
set w3[MM]=moi
set MM=MM+1
set Qoi=l5i(j1t(V_u(Q7s(W2o(xoi,"when calling getEnumUnit in ScmdUnitBuiltins, line 87"))),"when calling new_Real in ScmdUnitBuiltins, line 87"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 87")
set MM=MM-1
return Qoi
endfunction
function Wqi takes integer jqi,integer xqi,integer vqi,string mqi returns integer
local integer Qqi
set w3[MM]=mqi
set MM=MM+1
set Qqi=l5i(j1t(GetWidgetLife(c0o(N1o(vqi,0,"when calling get in ScmdUnitBuiltins, line 304"),"when calling getInner in ScmdUnitBuiltins, line 304")),"when calling new_Real in ScmdUnitBuiltins, line 304"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 304")
set MM=MM-1
return Qqi
endfunction
function Wti takes integer kti,integer jti,integer xti,string vti returns integer
local real mti
local integer Qti
set w3[MM]=vti
set MM=MM+1
set mti=I8o(N1o(xti,0,"when calling get in ScmdPlayerCameraSettingsBuiltins, line 81"),"when calling realValue in ScmdPlayerCameraSettingsBuiltins, line 81")
call M7u(h2o(jti,"when calling getPlayerId in ScmdPlayerCameraSettingsBuiltins, line 82"),CAMERA_FIELD_TARGET_DISTANCE,mti,"when calling setCameraField in ScmdPlayerCameraSettingsBuiltins, line 82")
set Qti=x4u("when calling nullptr in ScmdPlayerCameraSettingsBuiltins, line 83")
set MM=MM-1
return Qti
endfunction
function U0i takes integer Z0i returns integer
return sL[Z0i]
endfunction
function X9o takes integer J9o,string K9o returns integer
local integer L9o
set w3[MM]=K9o
set MM=MM+1
if px[J9o]==0 then
if J9o==0 then
call Mau("Nullpointer exception when calling Vector.toHashList","when calling error in ScmdDataTypes, line 1090")
else
call Mau("Called Vector.toHashList on invalid object.","when calling error in ScmdDataTypes, line 1090")
endif
endif
set L9o=U0i(J9o)
set MM=MM-1
return L9o
endfunction
function XFt takes integer DFt,integer HFt,integer JFt,string KFt returns integer
local integer LFt
set w3[MM]=KFt
set MM=MM+1
call CameraSetupSetField(p2o(N1o(JFt,0,"when calling get in ScmdCameraSetupBuiltins, line 10"),"when calling getInner in ScmdCameraSetupBuiltins, line 10"),ConvertCameraField(t8o(N1o(JFt,1,"when calling get in ScmdCameraSetupBuiltins, line 10"),"when calling intValue in ScmdCameraSetupBuiltins, line 10")),I8o(N1o(JFt,2,"when calling get in ScmdCameraSetupBuiltins, line 10"),"when calling realValue in ScmdCameraSetupBuiltins, line 10"),I8o(N1o(JFt,3,"when calling get in ScmdCameraSetupBuiltins, line 10"),"when calling realValue in ScmdCameraSetupBuiltins, line 10"))
set LFt=x4u("when calling nullptr in ScmdCameraSetupBuiltins, line 11")
set MM=MM-1
return LFt
endfunction
function GRr takes string TRr returns integer
local integer YRr
set w3[MM]=TRr
set MM=MM+1
set YRr=l5i(qCt("Unknown destructable","when calling new_Exception in SotfrpGuiDestructables, line 139"),"when calling new_SharedPointer in SotfrpGuiDestructables, line 139")
set MM=MM-1
return YRr
endfunction
function Mfr takes string Vfr,string Bfr returns integer
local integer Nfr
set w3[MM]=Bfr
set MM=MM+1
set Nfr=eqo(Ef,Vfr,"when calling get in SotfrpGuiDestructables, line 27")
set MM=MM-1
return Nfr
endfunction
function pdo takes string tdo,string ido,string Sdo,string cdo,string odo,string Odo,string ldo returns string
local string bdo=tdo
local integer ydo=0
set bdo=PFr(bdo,"{"+tgu(ydo)+"}",ido)
set ydo=ydo+1
set bdo=PFr(bdo,"{"+tgu(ydo)+"}",Sdo)
set ydo=ydo+1
set bdo=PFr(bdo,"{"+tgu(ydo)+"}",cdo)
set ydo=ydo+1
set bdo=PFr(bdo,"{"+tgu(ydo)+"}",odo)
set ydo=ydo+1
set bdo=PFr(bdo,"{"+tgu(ydo)+"}",Odo)
set ydo=ydo+1
set bdo=PFr(bdo,"{"+tgu(ydo)+"}",ldo)
set ydo=ydo+1
return bdo
endfunction
function RRr takes integer yRr,string pRr,string eRr,string qRr,string aRr,string nRr,string dRr returns nothing
local string fRr=pdo(Df,pRr,eRr,qRr,aRr,nRr,dRr)
if ea==pa[yRr]then
call BlzSetAbilityExtendedTooltip(Af,Pf+fRr,0)
endif
endfunction
function sRr takes integer wRr,string uRr returns string
local string rRr
set w3[MM]=uRr
set MM=MM+1
set rRr=gvr(BZc(Zf,wRr,"when calling get in SotfrpGuiDestructables, line 30"),"when calling stringFromIndex in SotfrpGuiDestructables, line 30")
set MM=MM-1
return rRr
endfunction
function ERr takes integer gRr,string hRr returns nothing
local string FRr
local string kRr
local integer jRr
local string xRr
local string vRr
local string mRr
local string QRr
local string WRr
set w3[MM]=hRr
set MM=MM+1
set jRr=gRr
set xRr=sRr(Hf[gRr],"when calling getRegisteredDestructableName in SotfrpGuiDestructables, line 157")
set vRr=cmu(Hf[gRr])
set mRr=xUu(Jf[gRr])
if Kf[gRr]then
set FRr="Случ."
else
set FRr=xUu(Lf[gRr])
endif
set QRr=FRr
set WRr=xUu(Xf[gRr])
if Cf[gRr]then
set kRr="Случ."
else
set kRr=tgu(Vf[gRr])
endif
call RRr(jRr,xRr,vRr,mRr,QRr,WRr,kRr)
set MM=MM-1
endfunction
function PRr takes integer ZRr,integer URr,string IRr returns nothing
set w3[MM]=IRr
set MM=MM+1
set Hf[ZRr]=URr
call ERr(ZRr,"when calling updateInfo in SotfrpGuiDestructables, line 161")
set MM=MM-1
endfunction
function XPi takes integer PPi,integer APi,integer DPi,string HPi returns integer
local integer JPi
local integer KPi
local integer LPi
set w3[MM]=HPi
set MM=MM+1
set JPi=Mfr(S9o(N1o(DPi,0,"when calling get in SotfrpGuiDestructables, line 236"),"when calling getInner in SotfrpGuiDestructables, line 236"),"when calling getRegisteredDestructableId in SotfrpGuiDestructables, line 236")
if JPi!=0 then
call PRr(h2o(APi,"when calling getPlayerId in SotfrpGuiDestructables, line 238"),JPi,"when calling setId in SotfrpGuiDestructables, line 238")
endif
if JPi==0 then
set KPi=GRr("when calling makeUnknownDestructableException in SotfrpGuiDestructables, line 239")
else
set KPi=x4u("when calling nullptr in SotfrpGuiDestructables, line 239")
endif
set LPi=KPi
set MM=MM-1
return LPi
endfunction
function hdu takes player Gdu,real gdu returns nothing
set eZ[adu(Gdu)]=gdu
endfunction
function XSi takes integer DSi,integer HSi,integer JSi,string KSi returns integer
local integer LSi
set w3[MM]=KSi
set MM=MM+1
call hdu(pa[h2o(HSi,"when calling getPlayerId in ScmdSystemsSettingsBuiltins, line 17")],I8o(N1o(JSi,0,"when calling get in ScmdSystemsSettingsBuiltins, line 17"),"when calling realValue in ScmdSystemsSettingsBuiltins, line 17"))
set LSi=x4u("when calling nullptr in ScmdSystemsSettingsBuiltins, line 18")
set MM=MM-1
return LSi
endfunction
function XUt takes integer DUt,integer HUt,integer JUt,string KUt returns integer
local integer LUt
set w3[MM]=KUt
set MM=MM+1
set LUt=l5i(rAt(not c4o(N1o(JUt,0,"when calling get in ScmdCoreBuiltins, line 365"),"when calling booleanValue in ScmdCoreBuiltins, line 365"),"when calling new_Boolean in ScmdCoreBuiltins, line 365"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 365")
set MM=MM-1
return LUt
endfunction
function Ptc takes string Utc returns integer
local integer Itc
set w3[MM]=Utc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set Itc=NY
set MY[Itc]=776
else
call Mau("Out of memory: Could not create ForForceCallback_execute_SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 81")
set Itc=0
endif
else
set BY=BY-1
set Itc=VY[BY]
set MY[Itc]=776
endif
set MM=MM-1
return Itc
endfunction
function Rnr takes integer pnr,rect enr,string qnr returns nothing
local group anr
local unit nnr
local group dnr
local integer fnr
set w3[MM]=qnr
set MM=MM+1
call Preload(Yf)
set anr=sWu(pa[pnr],enr,Filter(gaw))
set dnr=anr
loop
exitwhen not lTu(dnr)
set nnr=aTu(dnr)
set fnr=Ptc("when calling alloc_ForForceCallback_execute_SotFRP_SaveLoad in SotFRP_SaveLoad, line 81")
set IL[fnr]=nnr
set PL[fnr]=enr
call Inu(fnr,"when calling execute in SotFRP_SaveLoad, line 81")
endloop
call STu(anr)
call Preload(Gf)
set MM=MM-1
set anr=null
set nnr=null
set dnr=null
endfunction
function XZi takes integer DZi,integer HZi,integer JZi,string KZi returns integer
local integer LZi
set w3[MM]=KZi
set MM=MM+1
call PreloadGenClear()
call Rnr(h2o(HZi,"when calling getPlayerId in SotFRP_SaveLoad, line 133"),H8o(N1o(JZi,0,"when calling get in SotFRP_SaveLoad, line 133"),"when calling getInner in SotFRP_SaveLoad, line 133"),"when calling writeUnits in SotFRP_SaveLoad, line 133")
if ea==pa[h2o(HZi,"when calling getPlayerId in SotFRP_SaveLoad, line 134")]then
call PreloadGenEnd("SotFRP\\Save\\"+S9o(N1o(JZi,1,"when calling get in SotFRP_SaveLoad, line 135"),"when calling getInner in SotFRP_SaveLoad, line 135")+".pld")
endif
set LZi=l5i(K3t("when calling new_Null in SotFRP_SaveLoad, line 136"),"when calling new_SharedPointer in SotFRP_SaveLoad, line 136")
set MM=MM-1
return LZi
endfunction
function Xfi takes integer Dfi,integer Hfi,integer Jfi,string Kfi returns integer
local integer Lfi
set w3[MM]=Kfi
set MM=MM+1
call Rws(H9o(N1o(Jfi,0,"when calling get in ScmdUnitBuiltins, line 421"),"when calling getInner in ScmdUnitBuiltins, line 421"),UNIT_WEAPON_RF_ATTACK_RANGE,t8o(N1o(Jfi,2,"when calling get in ScmdUnitBuiltins, line 421"),"when calling intValue in ScmdUnitBuiltins, line 421"),I8o(N1o(Jfi,1,"when calling get in ScmdUnitBuiltins, line 421"),"when calling realValue in ScmdUnitBuiltins, line 421"))
set Lfi=x4u("when calling nullptr in ScmdUnitBuiltins, line 422")
set MM=MM-1
return Lfi
endfunction
function Xni takes integer Dni,integer Hni,integer Jni,string Kni returns integer
local integer Lni
set w3[MM]=Kni
set MM=MM+1
call tJu(W2o(Hni,"when calling getEnumUnit in ScmdUnitBuiltins, line 368"),t8o(N1o(Jni,0,"when calling get in ScmdUnitBuiltins, line 368"),"when calling intValue in ScmdUnitBuiltins, line 368"))
set Lni=x4u("when calling nullptr in ScmdUnitBuiltins, line 369")
set MM=MM-1
return Lni
endfunction
function Xoi takes integer Doi,integer Hoi,integer Joi,string Koi returns integer
local integer Loi
set w3[MM]=Koi
set MM=MM+1
set Loi=l5i(j1t(V_u(G0s(W2o(Hoi,"when calling getEnumUnit in ScmdUnitBuiltins, line 92"))),"when calling new_Real in ScmdUnitBuiltins, line 92"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 92")
set MM=MM-1
return Loi
endfunction
function Xqi takes integer Dqi,integer Hqi,integer Jqi,string Kqi returns integer
local integer Lqi
set w3[MM]=Kqi
set MM=MM+1
call f9s(H9o(N1o(Jqi,0,"when calling get in ScmdUnitBuiltins, line 310"),"when calling getInner in ScmdUnitBuiltins, line 310"),I8o(N1o(Jqi,1,"when calling get in ScmdUnitBuiltins, line 310"),"when calling realValue in ScmdUnitBuiltins, line 310"))
set Lqi=x4u("when calling nullptr in ScmdUnitBuiltins, line 311")
set MM=MM-1
return Lqi
endfunction
function Xti takes integer Dti,integer Hti,integer Jti,string Kti returns integer
local integer Lti
set w3[MM]=Kti
set MM=MM+1
set Lti=l5i(j1t(XUu(H8o(N1o(Jti,0,"when calling get in ScmdRectBuiltins, line 14"),"when calling getInner in ScmdRectBuiltins, line 14")),"when calling new_Real in ScmdRectBuiltins, line 14"),"when calling new_SharedPointer in ScmdRectBuiltins, line 14")
set MM=MM-1
return Lti
endfunction
function Xyi takes integer Dyi,integer Hyi,integer Jyi,string Kyi returns integer
local integer Lyi
set w3[MM]=Kyi
set MM=MM+1
set Lyi=l5i(q0i(W2o(Hyi,"when calling getEnumUnit in ScmdUnitBuiltins, line 226"),"when calling new_Unit in ScmdUnitBuiltins, line 226"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 226")
set MM=MM-1
return Lyi
endfunction
function YYi takes integer nYi,integer dYi,integer fYi,string RYi returns integer
local integer TYi
set w3[MM]=RYi
set MM=MM+1
call Z6r(W2o(dYi,"when calling getEnumUnit in ScmdUnitBuiltins, line 585"),t8o(N1o(fYi,0,"when calling get in ScmdUnitBuiltins, line 585"),"when calling intValue in ScmdUnitBuiltins, line 585"))
set TYi=x4u("when calling nullptr in ScmdUnitBuiltins, line 586")
set MM=MM-1
return TYi
endfunction
function bau takes effect Oau,real lau returns nothing
call BlzSetSpecialEffectX(Oau,lau)
endfunction
function YYt takes integer nYt,integer dYt,integer fYt,string RYt returns integer
local integer TYt
set w3[MM]=RYt
set MM=MM+1
call bau(r9o(N1o(fYt,0,"when calling get in SLangSpecialEffectFunctions, line 19"),"when calling getInner in SLangSpecialEffectFunctions, line 19"),I8o(N1o(fYt,1,"when calling get in SLangSpecialEffectFunctions, line 19"),"when calling realValue in SLangSpecialEffectFunctions, line 19"))
set TYt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 20")
set MM=MM-1
return TYt
endfunction
function YZt takes integer qZt,integer aZt,integer nZt,string dZt returns integer
local real fZt
local real RZt
local integer TZt
set w3[MM]=dZt
set MM=MM+1
set fZt=I8o(N1o(nZt,0,"when calling get in ScmdCoreBuiltins, line 299"),"when calling realValue in ScmdCoreBuiltins, line 299")
if fZt>0. then
set RZt=GetRandomReal(0.,fZt)
else
set RZt=GetRandomReal(fZt,0.)
endif
set TZt=l5i(j1t(RZt,"when calling new_Real in ScmdCoreBuiltins, line 300"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 300")
set MM=MM-1
return TZt
endfunction
function Ygi takes integer ngi,integer dgi,integer fgi,string Rgi returns integer
local integer Tgi
set w3[MM]=Rgi
set MM=MM+1
call l0s(H9o(N1o(fgi,0,"when calling get in ScmdUnitBuiltins, line 654"),"when calling getInner in ScmdUnitBuiltins, line 654"),kUu(I8o(N1o(fgi,1,"when calling get in ScmdUnitBuiltins, line 654"),"when calling realValue in ScmdUnitBuiltins, line 654"),VT,CT))
set Tgi=x4u("when calling nullptr in ScmdUnitBuiltins, line 655")
set MM=MM-1
return Tgi
endfunction
function Yus takes real Rus,real Tus returns real
call MoveLocation(rY,Rus,Tus)
return GetLocationZ(rY)
endfunction
function fau takes effect dau returns real
set S1=BlzGetLocalSpecialEffectX(dau)
set c1=BlzGetLocalSpecialEffectY(dau)
return S1
endfunction
function nau takes effect qau,real aau returns nothing
call BlzSetSpecialEffectZ(qau,aau)
endfunction
function ZYt takes integer xYt,integer vYt,integer mYt,string QYt returns integer
local effect WYt
local integer EYt
set w3[MM]=QYt
set MM=MM+1
set WYt=r9o(N1o(mYt,0,"when calling get in SLangSpecialEffectFunctions, line 27"),"when calling getInner in SLangSpecialEffectFunctions, line 27")
call nau(WYt,Yus(fau(WYt),c1)+I8o(N1o(mYt,1,"when calling get in SLangSpecialEffectFunctions, line 28"),"when calling realValue in SLangSpecialEffectFunctions, line 28"))
set EYt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 29")
set MM=MM-1
set WYt=null
return EYt
endfunction
function jyu takes string ayu returns integer
local integer Yyu=0
local integer Gyu=0
local integer gyu=0
local integer nyu=Yyu
local integer dyu=Gyu
local integer fyu=gyu
local integer Ryu=0
local integer Tyu=Qp
local integer hyu
local integer Fyu
local integer kyu
loop
exitwhen Ryu>Tyu
if OFr(ayu)==Up[Ryu]then
set hyu=Wp[Ryu]
set Fyu=Ep[Ryu]
set kyu=Zp[Ryu]
set nyu=hyu
set dyu=Fyu
set fyu=kyu
exitwhen true
endif
set Ryu=Ryu+1
endloop
set I3=nyu
set P3=dyu
set A3=fyu
return I3
endfunction
function Zft takes integer vft,integer mft,integer Qft,string Wft returns integer
local integer Eft
set w3[MM]=Wft
set MM=MM+1
set Eft=l5i(J6i(vbu(jyu(S9o(N1o(Qft,0,"when calling get in SLangPlayerFunctions, line 21"),"when calling getInner in SLangPlayerFunctions, line 21")),P3,A3),"when calling new_String in SLangPlayerFunctions, line 21"),"when calling new_SharedPointer in SLangPlayerFunctions, line 21")
set MM=MM-1
return Eft
endfunction
function Zgt takes integer vgt,integer mgt,integer Qgt,string Wgt returns integer
local integer Egt
set w3[MM]=Wgt
set MM=MM+1
set Egt=l5i(pMt(C5o(mgt,"when calling getSpellAbilityId in SLangTriggerFunctions, line 94"),"when calling new_Integer in SLangTriggerFunctions, line 94"),"when calling new_SharedPointer in SLangTriggerFunctions, line 94")
set MM=MM-1
return Egt
endfunction
function Zki takes integer vki,integer mki,integer Qki,string Wki returns integer
local integer Eki
set w3[MM]=Wki
set MM=MM+1
call x8s(H9o(N1o(Qki,0,"when calling get in ScmdUnitBuiltins, line 746"),"when calling getInner in ScmdUnitBuiltins, line 746"))
set Eki=x4u("when calling nullptr in ScmdUnitBuiltins, line 747")
set MM=MM-1
return Eki
endfunction
function Zmt takes integer vmt,integer mmt,integer Qmt,string Wmt returns integer
local integer Emt
set w3[MM]=Wmt
set MM=MM+1
set Emt=l5i(rAt(sFr(S9o(N1o(Qmt,0,"when calling get in ScmdCoreBuiltins, line 181"),"when calling getInner in ScmdCoreBuiltins, line 181"),S9o(N1o(Qmt,1,"when calling get in ScmdCoreBuiltins, line 181"),"when calling getInner in ScmdCoreBuiltins, line 181")),"when calling new_Boolean in ScmdCoreBuiltins, line 181"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 181")
set MM=MM-1
return Emt
endfunction
function Zvt takes integer vvt,integer mvt,integer Qvt,string Wvt returns integer
local integer Evt
set w3[MM]=Wvt
set MM=MM+1
set Evt=l5i(J6i(OFr(S9o(N1o(Qvt,0,"when calling get in ScmdCoreBuiltins, line 157"),"when calling getInner in ScmdCoreBuiltins, line 157")),"when calling new_String in ScmdCoreBuiltins, line 157"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 157")
set MM=MM-1
return Evt
endfunction
function Zxi takes integer vxi,integer mxi,integer Qxi,string Wxi returns integer
local integer Exi
set w3[MM]=Wxi
set MM=MM+1
call w9s(W2o(mxi,"when calling getEnumUnit in ScmdUnitBuiltins, line 800"),t8o(N1o(Qxi,0,"when calling get in ScmdUnitBuiltins, line 800"),"when calling intValue in ScmdUnitBuiltins, line 800"))
set Exi=x4u("when calling nullptr in ScmdUnitBuiltins, line 801")
set MM=MM-1
return Exi
endfunction
function aUt takes integer lUt,integer bUt,integer yUt,string pUt returns integer
local integer eUt
local integer qUt
set w3[MM]=pUt
set MM=MM+1
if L1o(yUt,"when calling size in ScmdCoreBuiltins, line 327")!=0 then
set eUt=X8o(s4o(yUt,L1o(yUt,"when calling size in ScmdCoreBuiltins, line 327")-1,"when calling getPtr in ScmdCoreBuiltins, line 327"),"when calling clone in ScmdCoreBuiltins, line 327")
else
set eUt=x4u("when calling nullptr in ScmdCoreBuiltins, line 327")
endif
set qUt=eUt
set MM=MM-1
return qUt
endfunction
function aYi takes integer bYi,integer yYi,integer pYi,string eYi returns integer
local integer qYi
set w3[MM]=eYi
set MM=MM+1
set qYi=l5i(pMt(G6r(H9o(N1o(pYi,0,"when calling get in ScmdUnitBuiltins, line 582"),"when calling getInner in ScmdUnitBuiltins, line 582"),c4o(N1o(pYi,1,"when calling get in ScmdUnitBuiltins, line 582"),"when calling booleanValue in ScmdUnitBuiltins, line 582")),"when calling new_Integer in ScmdUnitBuiltins, line 582"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 582")
set MM=MM-1
return qYi
endfunction
function hau takes effect Rau,integer Tau,integer Yau,integer Gau,integer gau returns nothing
call BlzSetSpecialEffectColor(Rau,Tau,Yau,Gau)
call BlzSetSpecialEffectAlpha(Rau,gau)
endfunction
function aYt takes integer bYt,integer yYt,integer pYt,string eYt returns integer
local integer qYt
set w3[MM]=eYt
set MM=MM+1
call hau(r9o(N1o(pYt,0,"when calling get in SLangSpecialEffectFunctions, line 15"),"when calling getInner in SLangSpecialEffectFunctions, line 15"),t8o(N1o(pYt,1,"when calling get in SLangSpecialEffectFunctions, line 15"),"when calling intValue in SLangSpecialEffectFunctions, line 15"),t8o(N1o(pYt,2,"when calling get in SLangSpecialEffectFunctions, line 15"),"when calling intValue in SLangSpecialEffectFunctions, line 15"),t8o(N1o(pYt,3,"when calling get in SLangSpecialEffectFunctions, line 15"),"when calling intValue in SLangSpecialEffectFunctions, line 15"),t8o(N1o(pYt,4,"when calling get in SLangSpecialEffectFunctions, line 15"),"when calling intValue in SLangSpecialEffectFunctions, line 15"))
set qYt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 16")
set MM=MM-1
return qYt
endfunction
function XAs takes integer LAs returns boolean
return TU[LAs]==0
endfunction
function aZc takes integer pZc,string eZc returns boolean
local boolean qZc
set w3[MM]=eZc
set MM=MM+1
if dh[pZc]==0 then
if pZc==0 then
call Mau("Nullpointer exception when calling HashList.isEmpty","when calling error in HashList, line 75")
else
call Mau("Called HashList.isEmpty on invalid object.","when calling error in HashList, line 75")
endif
endif
set qZc=XAs(pZc)
set MM=MM-1
return qZc
endfunction
function agi takes integer bgi,integer ygi,integer pgi,string egi returns integer
local integer qgi
set w3[MM]=egi
set MM=MM+1
call l0s(W2o(ygi,"when calling getEnumUnit in ScmdUnitBuiltins, line 651"),kUu(I8o(N1o(pgi,0,"when calling get in ScmdUnitBuiltins, line 651"),"when calling realValue in ScmdUnitBuiltins, line 651"),VT,CT))
set qgi=x4u("when calling nullptr in ScmdUnitBuiltins, line 652")
set MM=MM-1
return qgi
endfunction
function bWt takes integer LQt,integer XQt,integer CQt,string VQt returns integer
local boolean BQt
local boolean NQt
local integer MQt
local integer wWt
local integer uWt
local real rWt
local integer sWt
local integer tWt
local integer iWt
local integer SWt
local integer cWt
local integer oWt
local integer OWt
local integer lWt
set w3[MM]=VQt
set MM=MM+1
set BQt=false
set NQt=false
set MQt=0
set wWt=L1o(CQt,"when calling size in ScmdCoreBuiltins, line 240")-1
loop
exitwhen MQt>wWt
set OWt=px[N1o(CQt,MQt,"when calling get in ScmdCoreBuiltins, line 241")]
if not(OWt==1434 or OWt==1440)then
set BQt=true
endif
if L1o(CQt,"when calling size in ScmdCoreBuiltins, line 243")==1 or MQt>0 and h8o(N1o(CQt,MQt,"when calling get in ScmdCoreBuiltins, line 243"),"when calling realValue in ScmdCoreBuiltins, line 243")==0. then
set NQt=true
exitwhen true
endif
set MQt=MQt+1
endloop
set uWt=T8o(N1o(CQt,0,"when calling get in ScmdCoreBuiltins, line 246"),"when calling intValue in ScmdCoreBuiltins, line 246")
set rWt=h8o(N1o(CQt,0,"when calling get in ScmdCoreBuiltins, line 247"),"when calling realValue in ScmdCoreBuiltins, line 247")
if not NQt then
if BQt then
if L1o(CQt,"when calling size in ScmdCoreBuiltins, line 250")==1 then
set rWt=1./rWt
else
set sWt=1
set tWt=L1o(CQt,"when calling size in ScmdCoreBuiltins, line 253")-1
loop
exitwhen sWt>tWt
set rWt=rWt/h8o(N1o(CQt,sWt,"when calling get in ScmdCoreBuiltins, line 254"),"when calling realValue in ScmdCoreBuiltins, line 254")
set sWt=sWt+1
endloop
endif
elseif L1o(CQt,"when calling size in ScmdCoreBuiltins, line 256")==1 then
set uWt=1/uWt
else
set iWt=1
set SWt=L1o(CQt,"when calling size in ScmdCoreBuiltins, line 259")-1
loop
exitwhen iWt>SWt
set uWt=uWt/T8o(N1o(CQt,iWt,"when calling get in ScmdCoreBuiltins, line 260"),"when calling intValue in ScmdCoreBuiltins, line 260")
set iWt=iWt+1
endloop
endif
endif
if NQt then
set oWt=qCt("Division by zero","when calling new_Exception in ScmdCoreBuiltins, line 261")
else
if BQt then
set cWt=j1t(rWt,"when calling new_Real in ScmdCoreBuiltins, line 261")
else
set cWt=pMt(uWt,"when calling new_Integer in ScmdCoreBuiltins, line 261")
endif
set oWt=cWt
endif
set lWt=hBt(oWt,"when calling new_GenericSharedPointer in ScmdCoreBuiltins, line 261")
set MM=MM-1
return lWt
endfunction
function bki takes integer Ski,integer cki,integer oki,string Oki returns integer
local integer lki
set w3[MM]=Oki
set MM=MM+1
set lki=l5i(J6i(GetHeroProperName(H9o(N1o(oki,0,"when calling get in ScmdUnitBuiltins, line 733"),"when calling getInner in ScmdUnitBuiltins, line 733")),"when calling new_String in ScmdUnitBuiltins, line 733"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 733")
set MM=MM-1
return lki
endfunction
function Pgs takes integer Zgs,integer Ugs returns nothing
local integer Igs=Ugs
if Igs==1 then
set rE[Zgs]=true
elseif Igs==2 then
set lE[Zgs]=true
endif
endfunction
function Dhc takes integer Ihc,integer Phc,string Ahc returns nothing
set w3[MM]=Ahc
set MM=MM+1
if Qg[Ihc]==0 then
if Ihc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.resetDiceNumber","when calling error in CustomUnitTypes, line 175")
else
call Mau("Called CustomUnitType.resetDiceNumber on invalid object.","when calling error in CustomUnitTypes, line 175")
endif
endif
call Pgs(Ihc,Phc)
set MM=MM-1
endfunction
function vgs takes integer kgs,integer jgs returns nothing
local integer xgs=jgs
if xgs==1 then
set NW[kgs]=true
elseif xgs==2 then
set SE[kgs]=true
endif
endfunction
function Qhc takes integer xhc,integer vhc,string mhc returns nothing
set w3[MM]=mhc
set MM=MM+1
if Qg[xhc]==0 then
if xhc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.resetAttackCooldown","when calling error in CustomUnitTypes, line 143")
else
call Mau("Called CustomUnitType.resetAttackCooldown on invalid object.","when calling error in CustomUnitTypes, line 143")
endif
endif
call vgs(xhc,vhc)
set MM=MM-1
endfunction
function Egs takes integer mgs,integer Qgs returns nothing
local integer Wgs=Qgs
if Wgs==1 then
set wE[mgs]=true
elseif Wgs==2 then
set oE[mgs]=true
endif
endfunction
function Uhc takes integer Whc,integer Ehc,string Zhc returns nothing
set w3[MM]=Zhc
set MM=MM+1
if Qg[Whc]==0 then
if Whc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.resetDiceSides","when calling error in CustomUnitTypes, line 159")
else
call Mau("Called CustomUnitType.resetDiceSides on invalid object.","when calling error in CustomUnitTypes, line 159")
endif
endif
call Egs(Whc,Ehc)
set MM=MM-1
endfunction
function Fgs takes integer Ggs,integer ggs returns nothing
local integer hgs=ggs
if hgs==1 then
set VW[Ggs]=true
elseif hgs==2 then
set tE[Ggs]=true
endif
endfunction
function jhc takes integer hhc,integer Fhc,string khc returns nothing
set w3[MM]=khc
set MM=MM+1
if Qg[hhc]==0 then
if hhc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.resetBaseDamage","when calling error in CustomUnitTypes, line 127")
else
call Mau("Called CustomUnitType.resetBaseDamage on invalid object.","when calling error in CustomUnitTypes, line 127")
endif
endif
call Fgs(hhc,Fhc)
set MM=MM-1
endfunction
function Ygs takes integer Rgs,string Tgs returns nothing
set w3[MM]=Tgs
set MM=MM+1
set CW[Rgs]=0
call jhc(Rgs,1,"when calling resetBaseDamage in CustomUnitTypes, line 95")
call Qhc(Rgs,1,"when calling resetAttackCooldown in CustomUnitTypes, line 96")
call Uhc(Rgs,1,"when calling resetDiceSides in CustomUnitTypes, line 97")
call Dhc(Rgs,1,"when calling resetDiceNumber in CustomUnitTypes, line 98")
call jhc(Rgs,2,"when calling resetBaseDamage in CustomUnitTypes, line 99")
call Qhc(Rgs,2,"when calling resetAttackCooldown in CustomUnitTypes, line 100")
call Uhc(Rgs,2,"when calling resetDiceSides in CustomUnitTypes, line 101")
call Dhc(Rgs,2,"when calling resetDiceNumber in CustomUnitTypes, line 102")
set MM=MM-1
endfunction
function ahc takes integer ehc,string qhc returns nothing
set w3[MM]=qhc
set MM=MM+1
if Qg[ehc]==0 then
if ehc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.reset","when calling error in CustomUnitTypes, line 93")
else
call Mau("Called CustomUnitType.reset on invalid object.","when calling error in CustomUnitTypes, line 93")
endif
endif
call Ygs(ehc,"when calling reset in CustomUnitTypes, line 93")
set MM=MM-1
endfunction
function Hcs takes integer Dcs returns nothing
endfunction
function Lcs takes integer Jcs,integer Kcs returns nothing
call Hcs(Jcs)
set aQ[Jcs]=Kcs
endfunction
function RYS takes string dYS returns integer
local integer fYS
set w3[MM]=dYS
set MM=MM+1
if RY==0 then
if TY<32768 then
set TY=TY+1
set fYS=TY
set YY[fYS]=709
else
call Mau("Out of memory: Could not create Base64DataEncoder.","when calling error in Base64Data, line 60")
set fYS=0
endif
else
set RY=RY-1
set fYS=fY[RY]
set YY[fYS]=709
endif
set MM=MM-1
return fYS
endfunction
function Acs takes integer Ucs,string Ics returns integer
local integer Pcs
set w3[MM]=Ics
set MM=MM+1
set Pcs=RYS("when calling alloc_Base64DataEncoder in Base64Data, line 63")
call Lcs(Pcs,Ucs)
set MM=MM-1
return Pcs
endfunction
function ZYS takes integer WYS,string EYS returns nothing
set w3[MM]=EYS
set MM=MM+1
if vY[WYS]==0 then
call Mau("Double free: object of type Base64DataWriter","when calling error in Base64Data, line 9")
else
set kY[jY]=WYS
set jY=jY+1
set vY[WYS]=0
endif
set MM=MM-1
endfunction
function GGS takes integer TGS,string YGS returns nothing
set w3[MM]=YGS
set MM=MM+1
if cG[TGS]==0 then
call Mau("Double free: object of type BigStringElement","when calling error in BigString, line 15")
else
set tG[iG]=TGS
set iG=iG+1
set cG[TGS]=0
endif
set MM=MM-1
endfunction
function vps takes integer xps returns nothing
endfunction
function Wps takes integer mps,string Qps returns nothing
set w3[MM]=Qps
set MM=MM+1
call vps(mps)
call GGS(mps,"when calling dealloc_BigStringElement in BigString, line 14")
set MM=MM-1
endfunction
function vfc takes integer jfc,string xfc returns nothing
set w3[MM]=xfc
set MM=MM+1
if cG[jfc]==0 then
if jfc==0 then
call Mau("Nullpointer exception when calling BigStringElement.BigStringElement","when calling error in BigString, line 15")
else
call Mau("Called BigStringElement.BigStringElement on invalid object.","when calling error in BigString, line 15")
endif
endif
call Wps(jfc,"when calling destroyBigStringElement in BigString, line 15")
set MM=MM-1
endfunction
function aps takes integer yps,string pps returns nothing
local integer eps
local integer qps
set w3[MM]=pps
set MM=MM+1
set eps=x1s(kQ[yps],"when calling iterator in BigString, line 67")
loop
exitwhen not t1s(eps)
set qps=r1s(eps)
call vfc(qps,"when calling dispatch_BigStringElement_destroyBigStringElement in BigString, line 68")
endloop
call c1s(eps,"when calling close in BigString, line 67")
call CAc(kQ[yps],"when calling dispatch_LinkedList_destroyLinkedList in BigString, line 70")
set MM=MM-1
endfunction
function nGS takes integer qGS,string aGS returns nothing
set w3[MM]=aGS
set MM=MM+1
if sG[qGS]==0 then
call Mau("Double free: object of type BigString","when calling error in BigString, line 39")
else
set wG[uG]=qGS
set uG=uG+1
set sG[qGS]=0
endif
set MM=MM-1
endfunction
function fps takes integer nps,string dps returns nothing
set w3[MM]=dps
set MM=MM+1
call aps(nps,"when calling BigString_onDestroy in BigString, line 66")
call nGS(nps,"when calling dealloc_BigString in BigString, line 66")
set MM=MM-1
endfunction
function Ndc takes integer Vdc,string Bdc returns nothing
set w3[MM]=Bdc
set MM=MM+1
if sG[Vdc]==0 then
if Vdc==0 then
call Mau("Nullpointer exception when calling BigString.BigString","when calling error in BigString, line 39")
else
call Mau("Called BigString.BigString on invalid object.","when calling error in BigString, line 39")
endif
endif
call fps(Vdc,"when calling destroyBigString in BigString, line 39")
set MM=MM-1
endfunction
function Jbs takes integer Dbs,string Hbs returns nothing
set w3[MM]=Hbs
set MM=MM+1
if GQ[Dbs]!=0 then
call Ndc(GQ[Dbs],"when calling dispatch_BigString_destroyBigString in Base64, line 99")
endif
call qYc(gQ[Dbs],"when calling dispatch_ByteBuffer_destroyByteBuffer in Base64, line 100")
set MM=MM-1
endfunction
function rGS takes integer wGS,string uGS returns nothing
set w3[MM]=uGS
set MM=MM+1
if CY[wGS]==0 then
call Mau("Double free: object of type Base64Encoder","when calling error in Base64, line 90")
else
set KY[LY]=wGS
set LY=LY+1
set CY[wGS]=0
endif
set MM=MM-1
endfunction
function jbs takes integer Fbs,string kbs returns nothing
set w3[MM]=kbs
set MM=MM+1
call Jbs(Fbs,"when calling Base64Encoder_onDestroy in Base64, line 97")
call rGS(Fbs,"when calling dealloc_Base64Encoder in Base64, line 97")
set MM=MM-1
endfunction
function Odc takes integer cdc,string odc returns nothing
set w3[MM]=odc
set MM=MM+1
if CY[cdc]==0 then
if cdc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.Base64Encoder","when calling error in Base64, line 90")
else
call Mau("Called Base64Encoder.Base64Encoder on invalid object.","when calling error in Base64, line 90")
endif
endif
call jbs(cdc,"when calling destroyBase64Encoder in Base64, line 90")
set MM=MM-1
endfunction
function vOs takes integer jOs,string xOs returns nothing
set w3[MM]=xOs
set MM=MM+1
if dQ[jOs]!=0 then
call Odc(dQ[jOs],"when calling dispatch_Base64Encoder_destroyBase64Encoder in Base64Data, line 17")
endif
set MM=MM-1
endfunction
function nOs takes integer qOs,string aOs returns nothing
set w3[MM]=aOs
set MM=MM+1
call vOs(qOs,"when calling Base64DataWriter_onDestroy in Base64Data, line 15")
call ZYS(qOs,"when calling dealloc_Base64DataWriter in Base64Data, line 15")
set MM=MM-1
endfunction
function Dnc takes integer Pnc,string Anc returns nothing
set w3[MM]=Anc
set MM=MM+1
if vY[Pnc]==0 then
if Pnc==0 then
call Mau("Nullpointer exception when calling Base64DataWriter.Base64DataWriter","when calling error in Base64Data, line 9")
else
call Mau("Called Base64DataWriter.Base64DataWriter on invalid object.","when calling error in Base64Data, line 9")
endif
endif
call nOs(Pnc,"when calling destroyBase64DataWriter in Base64Data, line 9")
set MM=MM-1
endfunction
function eOs takes integer lOs,string bOs returns integer
local integer yOs
local integer pOs
set w3[MM]=bOs
set MM=MM+1
set yOs=dQ[lOs]
set dQ[lOs]=0
call Dnc(lOs,"when calling dispatch_Base64DataWriter_destroyBase64DataWriter in Base64Data, line 57")
set pOs=Acs(yOs,"when calling new_Base64DataEncoder in Base64Data, line 58")
set MM=MM-1
return pOs
endfunction
function yPs takes integer bPs returns integer
return 0
endfunction
function DFc takes integer IFc,string PFc returns integer
local integer AFc
set w3[MM]=PFc
set MM=MM+1
if vY[IFc]==0 then
if IFc==0 then
call Mau("Nullpointer exception when calling DataWriter.intoEncoder","when calling error in DataInterfaces, line 74")
else
call Mau("Called DataWriter.intoEncoder on invalid object.","when calling error in DataInterfaces, line 74")
endif
endif
if vY[IFc]<=730 then
set AFc=eOs(IFc,"when calling intoEncoder in DataInterfaces, line 74")
else
set AFc=yPs(IFc)
endif
set MM=MM-1
return AFc
endfunction
function cQu takes integer uQu,integer rQu returns string
local integer sQu=uQu
local string tQu=""
local integer iQu=1
local integer SQu=rQu
loop
exitwhen iQu>SQu
set tQu=Ip[ModuloInteger(sQu,16)]+tQu
set sQu=sQu/16
set iQu=iQu+1
endloop
return tQu
endfunction
function GQu takes string RQu,string TQu returns nothing
local string YQu
set w3[MM]=TQu
set MM=MM+1
if vhr(RQu)>ra then
call Mau("exceeded max packet length","when calling error in PacketIO, line 94")
endif
if ta>ia then
call Mau("exceeded max packets per file","when calling error in PacketIO, line 97")
endif
set YQu=cQu(ta,4)
call Preload(Nq+RQu+Mq+YQu+wa)
set ta=ta+1
set MM=MM-1
endfunction
function Eys takes integer Wys returns integer
return vQ[Wys]
endfunction
function Gfc takes integer Rfc,string Tfc returns integer
local integer Yfc
set w3[MM]=Tfc
set MM=MM+1
if sG[Rfc]==0 then
if Rfc==0 then
call Mau("Nullpointer exception when calling BigString.maxLength","when calling error in BigString, line 207")
else
call Mau("Called BigString.maxLength on invalid object.","when calling error in BigString, line 207")
endif
endif
set Yfc=Eys(Rfc)
set MM=MM-1
return Yfc
endfunction
function ays takes integer bys,string yys returns string
local string pys
local string eys
local integer qys
set w3[MM]=yys
set MM=MM+1
if vhr(xQ[bys])>0 then
set eys=xQ[bys]
set xQ[bys]=""
set pys=eys
elseif not gDc(kQ[bys],"when calling isEmpty in BigString, line 124")then
set qys=oDc(kQ[bys],"when calling dequeue in BigString, line 125")
set pys=QQ[qys]
call vfc(qys,"when calling dispatch_BigStringElement_destroyBigStringElement in BigString, line 127")
elseif vhr(jQ[bys])>0 then
set pys=jQ[bys]
set jQ[bys]=""
else
set pys=null
endif
set MM=MM-1
return pys
endfunction
function Sfc takes integer sfc,string tfc returns string
local string ifc
set w3[MM]=tfc
set MM=MM+1
if sG[sfc]==0 then
if sfc==0 then
call Mau("Nullpointer exception when calling BigString.read","when calling error in BigString, line 117")
else
call Mau("Called BigString.read on invalid object.","when calling error in BigString, line 117")
endif
endif
set ifc=ays(sfc,"when calling read in BigString, line 117")
set MM=MM-1
return ifc
endfunction
function vys takes integer kys,string jys returns boolean
local boolean xys
set w3[MM]=jys
set MM=MM+1
set xys=vhr(xQ[kys])>0 or(not gDc(kQ[kys],"when calling isEmpty in BigString, line 202"))or vhr(jQ[kys])>0
set MM=MM-1
return xys
endfunction
function qfc takes integer yfc,string pfc returns boolean
local boolean efc
set w3[MM]=pfc
set MM=MM+1
if sG[yfc]==0 then
if yfc==0 then
call Mau("Nullpointer exception when calling BigString.hasData","when calling error in BigString, line 201")
else
call Mau("Called BigString.hasData on invalid object.","when calling error in BigString, line 201")
endif
endif
set efc=vys(yfc,"when calling hasData in BigString, line 201")
set MM=MM-1
return efc
endfunction
function FQu takes integer gQu,string hQu returns nothing
set w3[MM]=hQu
set MM=MM+1
if Gfc(gQu,"when calling maxLength in PacketIO, line 112")>ra then
call Mau("PacketWriter: trying to write a BigString with maxLength > MAX_PACKET_LENGTH","when calling error in PacketIO, line 113")
endif
loop
exitwhen not qfc(gQu,"when calling hasData in PacketIO, line 115")
call GQu(Sfc(gQu,"when calling read in PacketIO, line 116"),"when calling write in PacketIO, line 116")
endloop
call Ndc(gQu,"when calling dispatch_BigString_destroyBigString in PacketIO, line 118")
set MM=MM-1
endfunction
function QYS takes string vYS returns integer
local integer mYS
set w3[MM]=vYS
set MM=MM+1
if jY==0 then
if xY<32768 then
set xY=xY+1
set mYS=xY
set vY[mYS]=730
else
call Mau("Out of memory: Could not create Base64DataWriter.","when calling error in Base64Data, line 9")
set mYS=0
endif
else
set jY=jY-1
set mYS=kY[jY]
set vY[mYS]=730
endif
set MM=MM-1
return mYS
endfunction
function Jys takes integer Hys returns nothing
set jQ[Hys]=""
set xQ[Hys]=""
set mQ[Hys]=0
endfunction
function Mys takes integer Vys,integer Bys,string Nys returns nothing
set w3[MM]=Nys
set MM=MM+1
call Jys(Vys)
if Bys>Yy then
call Mau("BigString: maxLength needs to be under BIGSTRING_MAX_CHUNK_LENGTH.","when calling error in BigString, line 48")
endif
set vQ[Vys]=Bys
set kQ[Vys]=a4s("when calling new_LinkedList in BigString, line 51")
set MM=MM-1
endfunction
function eGS takes string yGS returns integer
local integer pGS
set w3[MM]=yGS
set MM=MM+1
if uG==0 then
if rG<32768 then
set rG=rG+1
set pGS=rG
set sG[pGS]=645
else
call Mau("Out of memory: Could not create BigString.","when calling error in BigString, line 39")
set pGS=0
endif
else
set uG=uG-1
set pGS=wG[uG]
set sG[pGS]=645
endif
set MM=MM-1
return pGS
endfunction
function Cys takes integer Kys,string Lys returns integer
local integer Xys
set w3[MM]=Lys
set MM=MM+1
set Xys=eGS("when calling alloc_BigString in BigString, line 46")
call Mys(Xys,Kys,"when calling construct_BigString in BigString, line 46")
set MM=MM-1
return Xys
endfunction
function ogS takes string SgS returns integer
local integer cgS
set w3[MM]=SgS
set MM=MM+1
if XG==0 then
if CG<32768 then
set CG=CG+1
set cgS=CG
set VG[cgS]=670
else
call Mau("Out of memory: Could not create ByteBuffer.","when calling error in ByteBuffer, line 15")
set cgS=0
endif
else
set XG=XG-1
set cgS=LG[XG]
set VG[cgS]=670
endif
set MM=MM-1
return cgS
endfunction
function Xds takes integer Zds,string Uds returns nothing
local integer Ids
local integer Pds
local integer Ads
local integer Dds
local integer Hds
local integer Jds
local integer Kds
local integer Lds
set w3[MM]=Uds
set MM=MM+1
set pW[Zds]=O7S("when calling new_Table in ByteBuffer, line 16")
set Ids=0
set Pds=0
set Ads=0
set Dds=0
set eW[Zds]=Ids
set qW[Zds]=Pds
set aW[Zds]=Ads
set nW[Zds]=Dds
set dW[Zds]=0
set Hds=0
set Jds=0
set Kds=0
set Lds=0
set fW[Zds]=Hds
set RW[Zds]=Jds
set TW[Zds]=Kds
set YW[Zds]=Lds
set GW[Zds]=0
set gW[Zds]=-1
set hW[Zds]=-1
set FW[Zds]=0
set MM=MM-1
endfunction
function wfs takes integer Nds,string Mds returns nothing
set w3[MM]=Mds
set MM=MM+1
call Xds(Nds,"when calling ByteBuffer_init in ByteBuffer, line 14")
set MM=MM-1
endfunction
function Bds takes string Cds returns integer
local integer Vds
set w3[MM]=Cds
set MM=MM+1
set Vds=ogS("when calling alloc_ByteBuffer in ByteBuffer, line 14")
call wfs(Vds,"when calling construct_ByteBuffer in ByteBuffer, line 14")
set MM=MM-1
return Vds
endfunction
function mbs takes integer xbs,string vbs returns nothing
set w3[MM]=vbs
set MM=MM+1
set gQ[xbs]=Bds("when calling new_ByteBuffer in Base64, line 92")
set MM=MM-1
endfunction
function Abs takes integer Ubs,integer Ibs,string Pbs returns nothing
set w3[MM]=Pbs
set MM=MM+1
call mbs(Ubs,"when calling Base64Encoder_init in Base64, line 94")
set GQ[Ubs]=Cys(Ibs,"when calling new_BigString in Base64, line 95")
set MM=MM-1
endfunction
function MYS takes string BYS returns integer
local integer NYS
set w3[MM]=BYS
set MM=MM+1
if LY==0 then
if XY<32768 then
set XY=XY+1
set NYS=XY
set CY[NYS]=644
else
call Mau("Out of memory: Could not create Base64Encoder.","when calling error in Base64, line 90")
set NYS=0
endif
else
set LY=LY-1
set NYS=KY[LY]
set CY[NYS]=644
endif
set MM=MM-1
return NYS
endfunction
function Zbs takes integer Qbs,string Wbs returns integer
local integer Ebs
set w3[MM]=Wbs
set MM=MM+1
set Ebs=MYS("when calling alloc_Base64Encoder in Base64, line 94")
call Abs(Ebs,Qbs,"when calling construct_Base64Encoder in Base64, line 94")
set MM=MM-1
return Ebs
endfunction
function fOs takes integer dOs returns nothing
endfunction
function kOs takes integer gOs,integer hOs,string FOs returns nothing
set w3[MM]=FOs
set MM=MM+1
call fOs(gOs)
set dQ[gOs]=Zbs(hOs,"when calling new_Base64Encoder in Base64Data, line 13")
set MM=MM-1
endfunction
function GOs takes integer ROs,string TOs returns integer
local integer YOs
set w3[MM]=TOs
set MM=MM+1
set YOs=QYS("when calling alloc_Base64DataWriter in Base64Data, line 12")
call kOs(YOs,ROs,"when calling construct_Base64DataWriter in Base64Data, line 12")
set MM=MM-1
return YOs
endfunction
function ESt takes integer mSt,string QSt returns integer
local integer WSt
set w3[MM]=QSt
set MM=MM+1
set WSt=GOs(ra,"when calling new_Base64DataWriter in PersistableData, line 70")
set MM=MM-1
return WSt
endfunction
function UCc takes integer WCc,string ECc returns integer
local integer ZCc
set w3[MM]=ECc
set MM=MM+1
if Qg[WCc]==0 then
if WCc==0 then
call Mau("Nullpointer exception when calling Persistable.getWriter","when calling error in PersistableData, line 69")
else
call Mau("Called Persistable.getWriter on invalid object.","when calling error in PersistableData, line 69")
endif
endif
set ZCc=ESt(WCc,"when calling getWriter in PersistableData, line 69")
set MM=MM-1
return ZCc
endfunction
function UZu takes integer EZu,integer ZZu returns integer
set K1=Ewu(EZu,ZZu)
return K1
endfunction
function Huu takes integer Duu returns integer
return ModuloInteger(Duu,256)
endfunction
function Kuu takes integer Juu returns integer
return(Juu-Juu/65536*65536)/256
endfunction
function Uuu takes integer Quu,integer Wuu,integer Euu,integer Zuu returns integer
return Quu+Wuu*256+Euu*65536+Zuu*16777216
endfunction
function xns takes integer Gns,string gns returns nothing
local integer hns
local integer Fns
local integer kns
local integer jns
set w3[MM]=gns
set MM=MM+1
set gW[Gns]=gW[Gns]+1
call sSo(pW[Gns],gW[Gns],Uuu(eW[Gns],qW[Gns],aW[Gns],nW[Gns]),"when calling saveInt in ByteBuffer, line 34")
set hns=0
set Fns=0
set kns=0
set jns=0
set eW[Gns]=hns
set qW[Gns]=Fns
set aW[Gns]=kns
set nW[Gns]=jns
set FW[Gns]=FW[Gns]+dW[Gns]
set dW[Gns]=0
set MM=MM-1
endfunction
function dYc takes integer aYc,string nYc returns nothing
set w3[MM]=nYc
set MM=MM+1
if VG[aYc]==0 then
if aYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.commitInt","when calling error in ByteBuffer, line 32")
else
call Mau("Called ByteBuffer.commitInt on invalid object.","when calling error in ByteBuffer, line 32")
endif
endif
call xns(aYc,"when calling commitInt in ByteBuffer, line 32")
set MM=MM-1
endfunction
function muu takes integer iuu,integer Suu,integer cuu,integer ouu,integer Ouu,integer luu returns integer
local integer buu
local integer yuu
local integer puu
local integer euu
local integer quu
local integer auu
local integer nuu
local integer duu
local integer fuu
local integer Ruu
local integer Tuu
local integer Yuu
local integer Guu
local integer guu
local integer huu
local integer Fuu
local integer kuu
local integer juu
local integer xuu
local integer vuu
if Ouu>1 then
if Ouu==3 then
set quu=iuu
set auu=Suu
set nuu=cuu
set duu=luu
set buu=quu
set yuu=auu
set puu=nuu
set euu=duu
else
set fuu=iuu
set Ruu=Suu
set Tuu=luu
set Yuu=ouu
set buu=fuu
set yuu=Ruu
set puu=Tuu
set euu=Yuu
endif
elseif Ouu==1 then
set Guu=iuu
set guu=luu
set huu=cuu
set Fuu=ouu
set buu=Guu
set yuu=guu
set puu=huu
set euu=Fuu
else
set kuu=luu
set juu=Suu
set xuu=cuu
set vuu=ouu
set buu=kuu
set yuu=juu
set puu=xuu
set euu=vuu
endif
set l3=buu
set b3=yuu
set y3=puu
set p3=euu
return l3
endfunction
function Lns takes integer Ins,integer Pns,string Ans returns nothing
local integer Dns
local integer Hns
local integer Jns
local integer Kns
set w3[MM]=Ans
set MM=MM+1
if dW[Ins]>3 then
call dYc(Ins,"when calling commitInt in ByteBuffer, line 46")
endif
set Dns=muu(eW[Ins],qW[Ins],aW[Ins],nW[Ins],dW[Ins],Pns)
set Hns=b3
set Jns=y3
set Kns=p3
set eW[Ins]=Dns
set qW[Ins]=Hns
set aW[Ins]=Jns
set nW[Ins]=Kns
set dW[Ins]=dW[Ins]+1
set MM=MM-1
endfunction
function hYc takes integer YYc,integer GYc,string gYc returns nothing
set w3[MM]=gYc
set MM=MM+1
if VG[YYc]==0 then
if YYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.writeByteInternal","when calling error in ByteBuffer, line 44")
else
call Mau("Called ByteBuffer.writeByteInternal on invalid object.","when calling error in ByteBuffer, line 44")
endif
endif
call Lns(YYc,GYc,"when calling writeByteInternal in ByteBuffer, line 44")
set MM=MM-1
endfunction
function ids takes integer rds,integer sds,string tds returns nothing
set w3[MM]=tds
set MM=MM+1
call hYc(rds,Huu(sds),"when calling writeByteInternal in ByteBuffer, line 63")
call hYc(rds,Kuu(sds),"when calling writeByteInternal in ByteBuffer, line 64")
set MM=MM-1
endfunction
function IYc takes integer EYc,integer ZYc,string UYc returns nothing
set w3[MM]=UYc
set MM=MM+1
if VG[EYc]==0 then
if EYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.writeShort","when calling error in ByteBuffer, line 62")
else
call Mau("Called ByteBuffer.writeShort on invalid object.","when calling error in ByteBuffer, line 62")
endif
endif
call ids(EYc,ZYc,"when calling writeShort in ByteBuffer, line 62")
set MM=MM-1
endfunction
function nbs takes integer ebs,integer qbs,string abs returns nothing
set w3[MM]=abs
set MM=MM+1
call IYc(gQ[ebs],qbs,"when calling writeShort in Base64, line 165")
set MM=MM-1
endfunction
function Pdc takes integer Zdc,integer Udc,string Idc returns nothing
set w3[MM]=Idc
set MM=MM+1
if CY[Zdc]==0 then
if Zdc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.pushShort","when calling error in Base64, line 164")
else
call Mau("Called Base64Encoder.pushShort on invalid object.","when calling error in Base64, line 164")
endif
endif
call nbs(Zdc,Udc,"when calling pushShort in Base64, line 164")
set MM=MM-1
endfunction
function Hos takes integer Pos,integer Aos,string Dos returns nothing
set w3[MM]=Dos
set MM=MM+1
call Pdc(dQ[Pos],Aos,"when calling pushShort in Base64Data, line 23")
set MM=MM-1
endfunction
function RFc takes integer nFc,integer dFc,string fFc returns nothing
set w3[MM]=fFc
set MM=MM+1
if vY[nFc]==0 then
if nFc==0 then
call Mau("Nullpointer exception when calling DataWriter.writeShort","when calling error in DataInterfaces, line 39")
else
call Mau("Called DataWriter.writeShort on invalid object.","when calling error in DataInterfaces, line 39")
endif
endif
if vY[nFc]<=730 then
call Hos(nFc,dFc,"when calling writeShort in DataInterfaces, line 39")
else
call IIs(nFc,dFc,"when calling writeShort in DataInterfaces, line 39")
endif
set MM=MM-1
endfunction
function uds takes integer Nns,integer Mns,string wds returns nothing
set w3[MM]=wds
set MM=MM+1
call hYc(Nns,Mns,"when calling writeByteInternal in ByteBuffer, line 59")
set MM=MM-1
endfunction
function WYc takes integer vYc,integer mYc,string QYc returns nothing
set w3[MM]=QYc
set MM=MM+1
if VG[vYc]==0 then
if vYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.writeByte","when calling error in ByteBuffer, line 58")
else
call Mau("Called ByteBuffer.writeByte on invalid object.","when calling error in ByteBuffer, line 58")
endif
endif
call uds(vYc,mYc,"when calling writeByte in ByteBuffer, line 58")
set MM=MM-1
endfunction
function pbs takes integer lbs,integer bbs,string ybs returns nothing
set w3[MM]=ybs
set MM=MM+1
call WYc(gQ[lbs],bbs,"when calling writeByte in Base64, line 161")
set MM=MM-1
endfunction
function Edc takes integer mdc,integer Qdc,string Wdc returns nothing
set w3[MM]=Wdc
set MM=MM+1
if CY[mdc]==0 then
if mdc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.pushByte","when calling error in Base64, line 160")
else
call Mau("Called Base64Encoder.pushByte on invalid object.","when calling error in Base64, line 160")
endif
endif
call pbs(mdc,Qdc,"when calling pushByte in Base64, line 160")
set MM=MM-1
endfunction
function Ios takes integer Eos,integer Zos,string Uos returns nothing
set w3[MM]=Uos
set MM=MM+1
call Edc(dQ[Eos],Zos,"when calling pushByte in Base64Data, line 20")
set MM=MM-1
endfunction
function aFc takes integer pFc,integer eFc,string qFc returns nothing
set w3[MM]=qFc
set MM=MM+1
if vY[pFc]==0 then
if pFc==0 then
call Mau("Nullpointer exception when calling DataWriter.writeByte","when calling error in DataInterfaces, line 36")
else
call Mau("Called DataWriter.writeByte on invalid object.","when calling error in DataInterfaces, line 36")
endif
endif
if vY[pFc]<=730 then
call Ios(pFc,eFc,"when calling writeByte in DataInterfaces, line 36")
else
call WIs(pFc,eFc,"when calling writeByte in DataInterfaces, line 36")
endif
set MM=MM-1
endfunction
function nds takes integer Sds,integer cds,string ods returns nothing
local integer Ods
local integer lds
local integer bds
local integer yds
local integer pds
local integer eds
local integer qds
local integer ads
set w3[MM]=ods
set MM=MM+1
set pds=wru(cds)
set eds=q3
set qds=a3
set ads=n3
set Ods=pds
set lds=eds
set bds=qds
set yds=ads
call hYc(Sds,Ods,"when calling writeByteInternal in ByteBuffer, line 69")
call hYc(Sds,lds,"when calling writeByteInternal in ByteBuffer, line 70")
call hYc(Sds,bds,"when calling writeByteInternal in ByteBuffer, line 71")
call hYc(Sds,yds,"when calling writeByteInternal in ByteBuffer, line 72")
set MM=MM-1
endfunction
function HYc takes integer PYc,integer AYc,string DYc returns nothing
set w3[MM]=DYc
set MM=MM+1
if VG[PYc]==0 then
if PYc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.writeInt","when calling error in ByteBuffer, line 67")
else
call Mau("Called ByteBuffer.writeInt on invalid object.","when calling error in ByteBuffer, line 67")
endif
endif
call nds(PYc,AYc,"when calling writeInt in ByteBuffer, line 67")
set MM=MM-1
endfunction
function Tbs takes integer dbs,integer fbs,string Rbs returns nothing
set w3[MM]=Rbs
set MM=MM+1
call HYc(gQ[dbs],fbs,"when calling writeInt in Base64, line 169")
set MM=MM-1
endfunction
function Jdc takes integer Adc,integer Ddc,string Hdc returns nothing
set w3[MM]=Hdc
set MM=MM+1
if CY[Adc]==0 then
if Adc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.pushInt","when calling error in Base64, line 168")
else
call Mau("Called Base64Encoder.pushInt on invalid object.","when calling error in Base64, line 168")
endif
endif
call Tbs(Adc,Ddc,"when calling pushInt in Base64, line 168")
set MM=MM-1
endfunction
function Xos takes integer Jos,integer Kos,string Los returns nothing
set w3[MM]=Los
set MM=MM+1
call Jdc(dQ[Jos],Kos,"when calling pushInt in Base64Data, line 26")
set MM=MM-1
endfunction
function gFc takes integer TFc,integer YFc,string GFc returns nothing
set w3[MM]=GFc
set MM=MM+1
if vY[TFc]==0 then
if TFc==0 then
call Mau("Nullpointer exception when calling DataWriter.writeInt","when calling error in DataInterfaces, line 42")
else
call Mau("Called DataWriter.writeInt on invalid object.","when calling error in DataInterfaces, line 42")
endif
endif
if vY[TFc]<=730 then
call Xos(TFc,YFc,"when calling writeInt in DataInterfaces, line 42")
else
call HIs(TFc,YFc,"when calling writeInt in DataInterfaces, line 42")
endif
set MM=MM-1
endfunction
function XZu takes integer HZu,integer JZu,integer KZu,string LZu returns nothing
set w3[MM]=LZu
set MM=MM+1
if WH[JZu]then
if EH[JZu]then
call gFc(HZu,KZu,"when calling writeInt in RawcodeTable, line 26")
else
call RFc(HZu,KZu,"when calling writeShort in RawcodeTable, line 28")
endif
else
call aFc(HZu,KZu,"when calling writeByte in RawcodeTable, line 30")
endif
set MM=MM-1
endfunction
function Dlt takes integer Wlt,integer Elt,string Zlt returns nothing
local integer Ult
local integer Ilt
local integer Plt
local integer Alt
set w3[MM]=Zlt
set MM=MM+1
if yZc(UH[Wlt],"when calling size in RawcodeTable, line 62")>255 then
set WH[Wlt]=true
set Plt=UZu(QH[Wlt],0)
set QH[Wlt]=Plt
if yZc(UH[Wlt],"when calling size in RawcodeTable, line 65")>65535 then
set EH[Wlt]=true
set Alt=UZu(QH[Wlt],1)
set QH[Wlt]=Alt
endif
endif
call aFc(Elt,QH[Wlt],"when calling writeByte in RawcodeTable, line 69")
call XZu(Elt,Wlt,yZc(UH[Wlt],"when calling size in RawcodeTable, line 71"),"when calling writeRawcodeTableIndex in RawcodeTable, line 71")
set Ult=kAs(UH[Wlt],"when calling iterator in RawcodeTable, line 72")
loop
exitwhen not PPs(Ult,"when calling hasNext in RawcodeTable, line 72")
set Ilt=EPs(Ult,"when calling next in RawcodeTable, line 72")
call gFc(Elt,Ilt,"when calling writeInt in RawcodeTable, line 73")
endloop
call HPs(Ult,"when calling close in RawcodeTable, line 72")
set MM=MM-1
endfunction
function UKr takes integer QKr,integer WKr,integer EKr,string ZKr returns nothing
set w3[MM]=ZKr
set MM=MM+1
if MB[WKr]then
if wN[WKr]then
call gFc(QKr,EKr,"when calling writeInt in UnitTypeDataTable, line 30")
else
call RFc(QKr,EKr,"when calling writeShort in UnitTypeDataTable, line 32")
endif
else
call aFc(QKr,EKr,"when calling writeByte in UnitTypeDataTable, line 34")
endif
set MM=MM-1
endfunction
function wgu takes integer CGu,integer VGu,integer BGu returns integer
local integer NGu
local integer MGu
if CGu<=VGu then
set MGu=VGu
else
if CGu>=BGu then
set NGu=BGu
else
set NGu=CGu
endif
set MGu=NGu
endif
return MGu
endfunction
function uOs takes integer Vos,real Bos,string Nos returns nothing
local integer Mos
local integer wOs
set w3[MM]=Nos
set MM=MM+1
set Mos=qUu(Bos)
set wOs=0
if ModuloReal(Bos,1.)>0.0001 then
set wOs=wgu(qUu(1./oUu(Bos-Mos)),0,65535)
endif
call Jdc(dQ[Vos],Mos,"when calling pushInt in Base64Data, line 33")
call Pdc(dQ[Vos],wOs,"when calling pushShort in Base64Data, line 34")
set MM=MM-1
endfunction
function jFc takes integer hFc,real FFc,string kFc returns nothing
set w3[MM]=kFc
set MM=MM+1
if vY[hFc]==0 then
if hFc==0 then
call Mau("Nullpointer exception when calling DataWriter.writeReal","when calling error in DataInterfaces, line 45")
else
call Mau("Called DataWriter.writeReal on invalid object.","when calling error in DataInterfaces, line 45")
endif
endif
if vY[hFc]<=730 then
call uOs(hFc,FFc,"when calling writeReal in DataInterfaces, line 45")
else
call XIs(hFc,FFc,"when calling writeReal in DataInterfaces, line 45")
endif
set MM=MM-1
endfunction
function KbS takes integer DbS,integer HbS,string JbS returns nothing
set w3[MM]=JbS
set MM=MM+1
call aFc(HbS,sN[DbS],"when calling writeByte in UnitTypeData, line 864")
call gFc(HbS,tN[DbS],"when calling writeInt in UnitTypeData, line 865")
if not(t2r(sN[DbS],0)or t2r(sN[DbS],1)or t2r(sN[DbS],2)or t2r(sN[DbS],3))then
call RFc(HbS,iN[DbS],"when calling writeShort in UnitTypeData, line 868")
endif
if t2r(sN[DbS],4)then
if t2r(sN[DbS],6)then
call aFc(HbS,SN[DbS],"when calling writeByte in UnitTypeData, line 871")
else
call gFc(HbS,SN[DbS],"when calling writeInt in UnitTypeData, line 873")
endif
endif
if t2r(sN[DbS],5)then
if t2r(sN[DbS],6)then
call aFc(HbS,qUu(cN[DbS]*2.),"when calling writeByte in UnitTypeData, line 876")
else
call jFc(HbS,cN[DbS],"when calling writeReal in UnitTypeData, line 878")
endif
endif
set MM=MM-1
endfunction
function Nyo takes integer Cyo,integer Vyo,string Byo returns nothing
set w3[MM]=Byo
set MM=MM+1
if im[Cyo]==0 then
if Cyo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.serialize","when calling error in UnitTypeData, line 863")
else
call Mau("Called SingleAbilityData.serialize on invalid object.","when calling error in UnitTypeData, line 863")
endif
endif
call KbS(Cyo,Vyo,"when calling serialize in UnitTypeData, line 863")
set MM=MM-1
endfunction
function QCr takes integer gCr,integer hCr,real FCr,real kCr,real jCr,real xCr,real vCr,string mCr returns nothing
set w3[MM]=mCr
set MM=MM+1
call aFc(gCr,hCr,"when calling writeByte in UnitTypeData, line 230")
if PXr(hCr,0)then
if PXr(hCr,1)then
call RFc(gCr,qUu(FCr*10.),"when calling writeShort in UnitTypeData, line 234")
else
call jFc(gCr,FCr,"when calling writeReal in UnitTypeData, line 236")
endif
endif
if PXr(hCr,2)then
call RFc(gCr,qUu(kCr*10000.),"when calling writeShort in UnitTypeData, line 238")
endif
if PXr(hCr,3)then
if PXr(hCr,4)then
call aFc(gCr,qUu(jCr*100.),"when calling writeByte in UnitTypeData, line 241")
elseif PXr(hCr,5)then
call RFc(gCr,qUu(jCr*1000.),"when calling writeShort in UnitTypeData, line 243")
else
call jFc(gCr,jCr,"when calling writeReal in UnitTypeData, line 245")
endif
endif
if PXr(hCr,6)then
call jFc(gCr,xCr,"when calling writeReal in UnitTypeData, line 247")
endif
if PXr(hCr,7)then
call RFc(gCr,qUu(vCr*10000.),"when calling writeShort in UnitTypeData, line 249")
endif
set MM=MM-1
endfunction
function VVr takes integer AVr,integer DVr,integer HVr,integer JVr,integer KVr,integer LVr,integer XVr,string CVr returns nothing
set w3[MM]=CVr
set MM=MM+1
call aFc(AVr,DVr,"when calling writeByte in UnitTypeData, line 373")
if BCr(DVr,7)then
call aFc(AVr,HVr,"when calling writeByte in UnitTypeData, line 375")
endif
call gFc(AVr,JVr,"when calling writeInt in UnitTypeData, line 377")
if BCr(DVr,1)then
if BCr(DVr,2)then
if sVr(HVr,0)then
call gFc(AVr,KVr,"when calling writeInt in UnitTypeData, line 382")
else
call RFc(AVr,KVr,"when calling writeShort in UnitTypeData, line 384")
endif
else
call aFc(AVr,KVr,"when calling writeByte in UnitTypeData, line 386")
endif
endif
if BCr(DVr,3)then
if BCr(DVr,4)then
if sVr(HVr,1)then
call gFc(AVr,LVr,"when calling writeInt in UnitTypeData, line 390")
else
call RFc(AVr,LVr,"when calling writeShort in UnitTypeData, line 392")
endif
else
call aFc(AVr,LVr,"when calling writeByte in UnitTypeData, line 394")
endif
endif
if BCr(DVr,5)then
if BCr(DVr,6)then
if sVr(HVr,2)then
call gFc(AVr,XVr,"when calling writeInt in UnitTypeData, line 398")
else
call RFc(AVr,XVr,"when calling writeShort in UnitTypeData, line 400")
endif
else
call aFc(AVr,XVr,"when calling writeByte in UnitTypeData, line 402")
endif
endif
set MM=MM-1
endfunction
function TNr takes integer bNr,integer yNr,integer pNr,integer eNr,integer qNr,integer aNr,integer nNr,integer dNr,integer fNr,string RNr returns nothing
set w3[MM]=RNr
set MM=MM+1
call RFc(bNr,yNr,"when calling writeShort in UnitTypeData, line 520")
if eBr(yNr,0)then
call VVr(bNr,pNr,eNr,qNr,aNr,nNr,dNr,"when calling writeHeroParameters in UnitTypeData, line 523")
endif
if eBr(yNr,1)then
call aFc(bNr,fNr,"when calling writeByte in UnitTypeData, line 526")
endif
set MM=MM-1
endfunction
function JMr takes integer ZMr,integer UMr,integer IMr,real PMr,integer AMr,integer DMr,string HMr returns nothing
set w3[MM]=HMr
set MM=MM+1
call aFc(ZMr,UMr,"when calling writeByte in UnitTypeData, line 614")
if wMr(UMr,0)then
if wMr(UMr,1)then
call gFc(ZMr,IMr,"when calling writeInt in UnitTypeData, line 618")
else
call aFc(ZMr,IMr,"when calling writeByte in UnitTypeData, line 620")
endif
endif
if wMr(UMr,2)then
if wMr(UMr,3)then
call aFc(ZMr,qUu(PMr*100.),"when calling writeByte in UnitTypeData, line 623")
else
call jFc(ZMr,PMr,"when calling writeReal in UnitTypeData, line 625")
endif
endif
if wMr(UMr,4)then
if wMr(UMr,5)then
call gFc(ZMr,AMr,"when calling writeInt in UnitTypeData, line 628")
else
call aFc(ZMr,AMr,"when calling writeByte in UnitTypeData, line 630")
endif
endif
if wMr(UMr,6)then
if wMr(UMr,7)then
call gFc(ZMr,DMr,"when calling writeInt in UnitTypeData, line 633")
else
call aFc(ZMr,DMr,"when calling writeByte in UnitTypeData, line 635")
endif
endif
set MM=MM-1
endfunction
function b4r takes integer C1r,integer V1r,integer B1r,integer N1r,real M1r,integer w4r,integer u4r,integer r4r,integer s4r,real t4r,integer i4r,integer S4r,integer c4r,integer o4r,integer O4r,string l4r returns nothing
set w3[MM]=l4r
set MM=MM+1
call RFc(C1r,V1r,"when calling writeShort in UnitTypeData, line 745")
if S3r(V1r,0)then
call JMr(C1r,B1r,N1r,M1r,w4r,u4r,"when calling writeAttackParameters in UnitTypeData, line 748")
endif
if S3r(V1r,1)then
call JMr(C1r,r4r,s4r,t4r,i4r,S4r,"when calling writeAttackParameters in UnitTypeData, line 750")
endif
if S3r(V1r,2)then
if S3r(V1r,3)then
call aFc(C1r,c4r,"when calling writeByte in UnitTypeData, line 753")
else
call gFc(C1r,c4r,"when calling writeInt in UnitTypeData, line 755")
endif
endif
if S3r(V1r,4)then
if S3r(V1r,5)then
call RFc(C1r,o4r,"when calling writeShort in UnitTypeData, line 758")
else
call gFc(C1r,o4r,"when calling writeInt in UnitTypeData, line 760")
endif
endif
if S3r(V1r,6)then
if S3r(V1r,7)then
call RFc(C1r,O4r,"when calling writeShort in UnitTypeData, line 763")
else
call gFc(C1r,O4r,"when calling writeInt in UnitTypeData, line 765")
endif
endif
set MM=MM-1
endfunction
function thr takes integer whr,integer uhr,integer rhr,string shr returns nothing
set w3[MM]=shr
set MM=MM+1
if eC[uhr]then
if qC[uhr]then
call gFc(whr,rhr,"when calling writeInt in StringTable, line 28")
else
call RFc(whr,rhr,"when calling writeShort in StringTable, line 30")
endif
else
call aFc(whr,rhr,"when calling writeByte in StringTable, line 32")
endif
set MM=MM-1
endfunction
function yXr takes integer rXr,integer sXr,real tXr,integer iXr,integer SXr,integer cXr,integer oXr,integer OXr,real lXr,string bXr returns nothing
set w3[MM]=bXr
set MM=MM+1
call aFc(rXr,sXr,"when calling writeByte in UnitTypeData, line 98")
if uLr(sXr,0)then
if uLr(sXr,1)then
call aFc(rXr,qUu(tXr),"when calling writeByte in UnitTypeData, line 102")
elseif uLr(sXr,2)then
call RFc(rXr,qUu(tXr*10.),"when calling writeShort in UnitTypeData, line 104")
else
call jFc(rXr,tXr,"when calling writeReal in UnitTypeData, line 106")
endif
endif
if uLr(sXr,3)then
call aFc(rXr,iXr,"when calling writeByte in UnitTypeData, line 108")
endif
if uLr(sXr,4)then
call aFc(rXr,SXr,"when calling writeByte in UnitTypeData, line 110")
call aFc(rXr,cXr,"when calling writeByte in UnitTypeData, line 111")
call aFc(rXr,oXr,"when calling writeByte in UnitTypeData, line 112")
call aFc(rXr,OXr,"when calling writeByte in UnitTypeData, line 113")
endif
if uLr(sXr,5)then
if uLr(sXr,6)then
call aFc(rXr,qUu(lXr*100.),"when calling writeByte in UnitTypeData, line 116")
elseif uLr(sXr,7)then
call RFc(rXr,qUu(lXr*1000.)+32767,"when calling writeShort in UnitTypeData, line 118")
else
call jFc(rXr,lXr,"when calling writeReal in UnitTypeData, line 120")
endif
endif
set MM=MM-1
endfunction
function IqS takes integer vqS,integer mqS,string QqS returns nothing
local integer WqS
local integer EqS
local integer ZqS
local integer UqS
set w3[MM]=QqS
set MM=MM+1
call aFc(mqS,PN[vqS],"when calling writeByte in UnitTypeData, line 1169")
if q5r(PN[vqS],7)then
call aFc(mqS,AN[vqS],"when calling writeByte in UnitTypeData, line 1171")
endif
call gFc(mqS,DN[vqS],"when calling writeInt in UnitTypeData, line 1172")
if q5r(PN[vqS],2)then
call thr(mqS,IN[vqS],HN[vqS],"when calling writeStringTableIndex in UnitTypeData, line 1175")
endif
if q5r(PN[vqS],3)then
call yXr(mqS,JN[vqS],KN[vqS],LN[vqS],XN[vqS],CN[vqS],VN[vqS],BN[vqS],NN[vqS],"when calling writeArtParameters in UnitTypeData, line 1178")
endif
if q5r(PN[vqS],4)then
call QCr(mqS,MN[vqS],wM[vqS],uM[vqS],rM[vqS],sM[vqS],tM[vqS],"when calling writeAnimationParameters in UnitTypeData, line 1180")
endif
if q5r(PN[vqS],5)then
call TNr(mqS,iM[vqS],SM[vqS],cM[vqS],oM[vqS],OM[vqS],lM[vqS],bM[vqS],yM[vqS],"when calling writeGeneralStats in UnitTypeData, line 1183")
endif
if q5r(PN[vqS],6)then
call b4r(mqS,pM[vqS],eM[vqS],qM[vqS],aM[vqS],nM[vqS],dM[vqS],fM[vqS],RM[vqS],TM[vqS],YM[vqS],GM[vqS],gM[vqS],hM[vqS],FM[vqS],"when calling writeStats in UnitTypeData, line 1185")
endif
if eBr(iM[vqS],5)then
call aFc(mqS,RDc(kM[vqS],"when calling size in UnitTypeData, line 1188"),"when calling writeByte in UnitTypeData, line 1188")
set WqS=x1s(kM[vqS],"when calling iterator in UnitTypeData, line 1189")
loop
exitwhen not t1s(WqS)
set EqS=r1s(WqS)
call gFc(mqS,EqS,"when calling writeInt in UnitTypeData, line 1190")
endloop
call c1s(WqS,"when calling close in UnitTypeData, line 1189")
endif
if eBr(iM[vqS],6)then
call aFc(mqS,RDc(jM[vqS],"when calling size in UnitTypeData, line 1192"),"when calling writeByte in UnitTypeData, line 1192")
set ZqS=x1s(jM[vqS],"when calling iterator in UnitTypeData, line 1193")
loop
exitwhen not t1s(ZqS)
set UqS=r1s(ZqS)
call Nyo(UqS,mqS,"when calling serialize in UnitTypeData, line 1194")
endloop
call c1s(ZqS,"when calling close in UnitTypeData, line 1193")
endif
if T5r(AN[vqS],1)then
call aFc(mqS,xM[vqS],"when calling writeByte in UnitTypeData, line 1197")
endif
if T5r(AN[vqS],2)then
call aFc(mqS,vM[vqS],"when calling writeByte in UnitTypeData, line 1199")
endif
if T5r(AN[vqS],3)then
endif
set MM=MM-1
endfunction
function ieo takes integer reo,integer seo,string teo returns nothing
set w3[MM]=teo
set MM=MM+1
if qm[reo]==0 then
if reo==0 then
call Mau("Nullpointer exception when calling UnitTypeData.serialize","when calling error in UnitTypeData, line 1168")
else
call Mau("Called UnitTypeData.serialize on invalid object.","when calling error in UnitTypeData, line 1168")
endif
endif
call IqS(reo,seo,"when calling serialize in UnitTypeData, line 1168")
set MM=MM-1
endfunction
function jKr takes integer FKr,integer kKr returns integer
set k6=Ewu(FKr,kKr)
return k6
endfunction
function JlS takes integer ZlS,integer UlS,string IlS returns nothing
local integer PlS
local integer AlS
local integer DlS
local integer HlS
set w3[MM]=IlS
set MM=MM+1
if yZc(VB[ZlS],"when calling size in UnitTypeDataTable, line 96")>255 then
set MB[ZlS]=true
set DlS=jKr(NB[ZlS],0)
set NB[ZlS]=DlS
if yZc(VB[ZlS],"when calling size in UnitTypeDataTable, line 99")>65535 then
set wN[ZlS]=true
set HlS=jKr(NB[ZlS],1)
set NB[ZlS]=HlS
endif
endif
call aFc(UlS,NB[ZlS],"when calling writeByte in UnitTypeDataTable, line 103")
call UKr(UlS,ZlS,yZc(VB[ZlS],"when calling size in UnitTypeDataTable, line 105"),"when calling writeUnitTypeDataTableIndex in UnitTypeDataTable, line 105")
set PlS=kAs(VB[ZlS],"when calling iterator in UnitTypeDataTable, line 106")
loop
exitwhen not PPs(PlS,"when calling hasNext in UnitTypeDataTable, line 106")
set AlS=EPs(PlS,"when calling next in UnitTypeDataTable, line 106")
call ieo(AlS,UlS,"when calling serialize in UnitTypeDataTable, line 107")
endloop
call HPs(PlS,"when calling close in UnitTypeDataTable, line 106")
set MM=MM-1
endfunction
function lsu takes boolean osu returns integer
local integer Osu
if osu then
set Osu=1
else
set Osu=0
endif
return Osu
endfunction
function iOs takes integer rOs,boolean sOs,string tOs returns nothing
set w3[MM]=tOs
set MM=MM+1
call Edc(dQ[rOs],lsu(sOs),"when calling pushByte in Base64Data, line 37")
set MM=MM-1
endfunction
function QFc takes integer xFc,boolean vFc,string mFc returns nothing
set w3[MM]=mFc
set MM=MM+1
if vY[xFc]==0 then
if xFc==0 then
call Mau("Nullpointer exception when calling DataWriter.writeBoolean","when calling error in DataInterfaces, line 48")
else
call Mau("Called DataWriter.writeBoolean on invalid object.","when calling error in DataInterfaces, line 48")
endif
endif
if vY[xFc]<=730 then
call iOs(xFc,vFc,"when calling writeBoolean in DataInterfaces, line 48")
else
call NIs(xFc,vFc,"when calling writeBoolean in DataInterfaces, line 48")
endif
set MM=MM-1
endfunction
function Wyu takes integer xyu,boolean vyu,integer myu,string Qyu returns nothing
set w3[MM]=Qyu
set MM=MM+1
call QFc(xyu,vyu,"when calling writeBoolean in CustomUnitTypes, line 19")
if not vyu then
call gFc(xyu,myu,"when calling writeInt in CustomUnitTypes, line 21")
endif
set MM=MM-1
endfunction
function Xyu takes integer Hyu,boolean Jyu,real Kyu,string Lyu returns nothing
set w3[MM]=Lyu
set MM=MM+1
call QFc(Hyu,Jyu,"when calling writeBoolean in CustomUnitTypes, line 34")
if not Jyu then
call jFc(Hyu,Kyu,"when calling writeReal in CustomUnitTypes, line 36")
endif
set MM=MM-1
endfunction
function ypu takes integer rpu,boolean spu,integer tpu,boolean ipu,real Spu,boolean cpu,integer opu,boolean Opu,integer lpu,string bpu returns nothing
set w3[MM]=bpu
set MM=MM+1
call Wyu(rpu,spu,tpu,"when calling writeOptInt in CustomUnitTypes, line 60")
call Xyu(rpu,ipu,Spu,"when calling writeOptReal in CustomUnitTypes, line 61")
call Wyu(rpu,cpu,opu,"when calling writeOptInt in CustomUnitTypes, line 62")
call Wyu(rpu,Opu,lpu,"when calling writeOptInt in CustomUnitTypes, line 63")
set MM=MM-1
endfunction
function MGs takes integer VGs,integer BGs,string NGs returns nothing
set w3[MM]=NGs
set MM=MM+1
call gFc(BGs,CW[VGs],"when calling writeInt in CustomUnitTypes, line 190")
call ypu(BGs,VW[VGs],BW[VGs],NW[VGs],MW[VGs],wE[VGs],uE[VGs],rE[VGs],sE[VGs],"when calling writeAttackData in CustomUnitTypes, line 191")
call ypu(BGs,tE[VGs],iE[VGs],SE[VGs],cE[VGs],oE[VGs],OE[VGs],lE[VGs],bE[VGs],"when calling writeAttackData in CustomUnitTypes, line 192")
set MM=MM-1
endfunction
function CBc takes integer KBc,integer LBc,string XBc returns nothing
set w3[MM]=XBc
set MM=MM+1
if Qg[KBc]==0 then
if KBc==0 then
call Mau("Nullpointer exception when calling RawcodeTable.serialize","when calling error in RawcodeTable, line 61")
else
call Mau("Called RawcodeTable.serialize on invalid object.","when calling error in RawcodeTable, line 61")
endif
endif
call Dlt(KBc,LBc,"when calling serialize in RawcodeTable, line 61")
set MM=MM-1
endfunction
function yEu takes integer oEu,real OEu,real lEu,string bEu returns nothing
set w3[MM]=bEu
set MM=MM+1
call RFc(oEu,pUu(OEu)+32767,"when calling writeShort in PointData, line 17")
call RFc(oEu,pUu(lEu)+32767,"when calling writeShort in PointData, line 18")
set MM=MM-1
endfunction
function P7S takes integer Q7S,integer W7S,string E7S returns nothing
local boolean Z7S
local integer U7S
local integer I7S
set w3[MM]=E7S
set MM=MM+1
call aFc(W7S,ZC[Q7S],"when calling writeByte in TerrainData, line 88")
call yEu(W7S,UC[Q7S],IC[Q7S],"when calling writePointData in TerrainData, line 90")
call yEu(W7S,PC[Q7S],AC[Q7S],"when calling writePointData in TerrainData, line 91")
if kkr(ZC[Q7S],0)then
if kkr(ZC[Q7S],1)then
call gFc(W7S,yZc(DC[Q7S],"when calling size in TerrainData, line 95"),"when calling writeInt in TerrainData, line 95")
else
call RFc(W7S,yZc(DC[Q7S],"when calling size in TerrainData, line 97"),"when calling writeShort in TerrainData, line 97")
endif
else
call aFc(W7S,yZc(DC[Q7S],"when calling size in TerrainData, line 99"),"when calling writeByte in TerrainData, line 99")
endif
set Z7S=kkr(ZC[Q7S],2)
set U7S=0
set I7S=yZc(DC[Q7S],"when calling size in TerrainData, line 102")-1
loop
exitwhen U7S>I7S
call XZu(W7S,EC[Q7S],TZc(DC[Q7S],U7S,"when calling get in TerrainData, line 103"),"when calling writeRawcodeTableIndex in TerrainData, line 103")
if Z7S then
call aFc(W7S,TZc(HC[Q7S],U7S,"when calling get in TerrainData, line 105"),"when calling writeByte in TerrainData, line 105")
endif
set U7S=U7S+1
endloop
set MM=MM-1
endfunction
function Ico takes integer Eco,integer Zco,string Uco returns nothing
set w3[MM]=Uco
set MM=MM+1
if Iv[Eco]==0 then
if Eco==0 then
call Mau("Nullpointer exception when calling SubRectTileData.serialize","when calling error in TerrainData, line 87")
else
call Mau("Called SubRectTileData.serialize on invalid object.","when calling error in TerrainData, line 87")
endif
endif
call P7S(Eco,Zco,"when calling serialize in TerrainData, line 87")
set MM=MM-1
endfunction
function N9S takes integer L9S,integer X9S,string C9S returns nothing
local integer V9S
local integer B9S
set w3[MM]=C9S
set MM=MM+1
call aFc(X9S,tV[L9S],"when calling writeByte in TerrainData, line 146")
call CBc(iV[L9S],X9S,"when calling serialize in TerrainData, line 148")
if vkr(tV[L9S],0)then
if vkr(tV[L9S],1)then
call gFc(X9S,RDc(SV[L9S],"when calling size in TerrainData, line 152"),"when calling writeInt in TerrainData, line 152")
else
call RFc(X9S,RDc(SV[L9S],"when calling size in TerrainData, line 154"),"when calling writeShort in TerrainData, line 154")
endif
else
call aFc(X9S,RDc(SV[L9S],"when calling size in TerrainData, line 156"),"when calling writeByte in TerrainData, line 156")
endif
set V9S=x1s(SV[L9S],"when calling iterator in TerrainData, line 158")
loop
exitwhen not t1s(V9S)
set B9S=r1s(V9S)
call Ico(B9S,X9S,"when calling serialize in TerrainData, line 159")
endloop
call c1s(V9S,"when calling close in TerrainData, line 158")
set MM=MM-1
endfunction
function Lbc takes string Jbc returns integer
local integer Kbc
set w3[MM]=Jbc
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set Kbc=IY
set PY[Kbc]=1383
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_PositionedUnitData_UnitData.","when calling error in UnitData, line 1404")
set Kbc=0
endif
else
set UY=UY-1
set Kbc=ZY[UY]
set PY[Kbc]=1383
endif
set MM=MM-1
return Kbc
endfunction
function Vbc takes string Xbc returns integer
local integer Cbc
set w3[MM]=Xbc
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set Cbc=HY
set JY[Cbc]=1347
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_PositionedUnitData_UnitData.","when calling error in UnitData, line 1404")
set Cbc=0
endif
else
set DY=DY-1
set Cbc=AY[DY]
set JY[Cbc]=1347
endif
set MM=MM-1
return Cbc
endfunction
function fHr takes integer nHr,integer dHr returns integer
set Y6=Ewu(nHr,dHr)
return Y6
endfunction
function Q_S takes integer G_S,integer g_S,string h_S returns nothing
local integer F_S
local integer k_S
local integer j_S
local integer x_S
local integer v_S
local integer m_S
set w3[MM]=h_S
set MM=MM+1
if yZc(eV[G_S],"when calling size in UnitData, line 1388")>255 then
set v_S=fHr(pV[G_S],0)
set pV[G_S]=v_S
if yZc(eV[G_S],"when calling size in UnitData, line 1390")>65535 then
set m_S=fHr(pV[G_S],1)
set pV[G_S]=m_S
endif
endif
call aFc(g_S,pV[G_S],"when calling writeByte in UnitData, line 1393")
if YHr(pV[G_S],0)then
if YHr(pV[G_S],1)then
call gFc(g_S,yZc(eV[G_S],"when calling size in UnitData, line 1397"),"when calling writeInt in UnitData, line 1397")
else
call RFc(g_S,yZc(eV[G_S],"when calling size in UnitData, line 1399"),"when calling writeShort in UnitData, line 1399")
endif
else
call aFc(g_S,yZc(eV[G_S],"when calling size in UnitData, line 1401"),"when calling writeByte in UnitData, line 1401")
endif
set F_S=vZc(eV[G_S],"when calling iterator in UnitData, line 1403")
set k_S=Lbc("when calling alloc_LimitedExecuteCondition_executeWhile_PositionedUnitData_UnitData in UnitData, line 1404")
set qV[k_S]=F_S
set x_S=k_S
set j_S=Vbc("when calling alloc_LimitedExecuteAction_executeWhile_PositionedUnitData_UnitData in UnitData, line 1404")
set aV[j_S]=F_S
set nV[j_S]=g_S
call rdu(100,x_S,j_S,"when calling executeWhile in UnitData, line 1404")
call kEc(F_S,"when calling close in UnitData, line 1406")
set MM=MM-1
endfunction
function Cgr takes integer Lgr,integer Xgr returns integer
set R4=Ewu(Lgr,Xgr)
return R4
endfunction
function HdS takes integer PdS,string AdS returns boolean
local boolean DdS
set w3[MM]=AdS
set MM=MM+1
set DdS=UM[PdS]<Heo(IM[PdS],"when calling size in Utility, line 279")
set MM=MM-1
return DdS
endfunction
function IdS takes integer EdS,string ZdS returns string
local string UdS
set w3[MM]=ZdS
set MM=MM+1
set UM[EdS]=UM[EdS]+1
set UdS=Ceo(IM[EdS],UM[EdS]-1,"when calling get in Utility, line 286")
set MM=MM-1
return UdS
endfunction
function cfS takes integer SfS returns nothing
endfunction
function xpc takes integer kpc,string jpc returns nothing
set w3[MM]=jpc
set MM=MM+1
if Gm[kpc]==0 then
call Mau("Double free: object of type StringHLIterator","when calling error in Utility, line 271")
else
set Rm[Tm]=kpc
set Tm=Tm+1
set Gm[kpc]=0
endif
set MM=MM-1
endfunction
function wfS takes integer NdS,string MdS returns nothing
set w3[MM]=MdS
set MM=MM+1
call cfS(NdS)
call xpc(NdS,"when calling dealloc_StringHLIterator in Utility, line 271")
set MM=MM-1
endfunction
function meo takes integer xeo,string veo returns nothing
set w3[MM]=veo
set MM=MM+1
if Gm[xeo]==0 then
if xeo==0 then
call Mau("Nullpointer exception when calling StringHLIterator.StringHLIterator","when calling error in Utility, line 271")
else
call Mau("Called StringHLIterator.StringHLIterator on invalid object.","when calling error in Utility, line 271")
endif
endif
call wfS(xeo,"when calling destroyStringHLIterator in Utility, line 271")
set MM=MM-1
endfunction
function LdS takes integer JdS,string KdS returns nothing
set w3[MM]=KdS
set MM=MM+1
call meo(JdS,"when calling dispatch_StringHLIterator_destroyStringHLIterator in Utility, line 289")
set MM=MM-1
endfunction
function Fpc takes string gpc returns integer
local integer hpc
set w3[MM]=gpc
set MM=MM+1
if Tm==0 then
if Ym<32768 then
set Ym=Ym+1
set hpc=Ym
set Gm[hpc]=1584
else
call Mau("Out of memory: Could not create StringHLIterator.","when calling error in Utility, line 271")
set hpc=0
endif
else
set Tm=Tm-1
set hpc=Rm[Tm]
set Gm[hpc]=1584
endif
set MM=MM-1
return hpc
endfunction
function rfS takes integer ufS returns nothing
set UM[ufS]=0
endfunction
function ifS takes integer sfS,integer tfS returns nothing
call rfS(sfS)
set IM[sfS]=tfS
endfunction
function BdS takes integer XdS,string CdS returns integer
local integer VdS
set w3[MM]=CdS
set MM=MM+1
set VdS=Fpc("when calling alloc_StringHLIterator in Utility, line 275")
call ifS(VdS,XdS)
set MM=MM-1
return VdS
endfunction
function bfS takes integer ofS,string OfS returns integer
local integer lfS
set w3[MM]=OfS
set MM=MM+1
set lfS=BdS(ofS,"when calling new_StringHLIterator in Utility, line 252")
set MM=MM-1
return lfS
endfunction
function VOc takes string XOc returns integer
local integer COc
set w3[MM]=XOc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set COc=NY
set MY[COc]=781
else
call Mau("Out of memory: Could not create ForForceCallback_execute_StringTable_StringTable.","when calling error in StringTable, line 66")
set COc=0
endif
else
set BY=BY-1
set COc=VY[BY]
set MY[COc]=781
endif
set MM=MM-1
return COc
endfunction
function s1i takes integer B3i,integer N3i,string M3i,string w1i returns nothing
local integer u1i
local integer r1i
set w3[MM]=w1i
set MM=MM+1
set u1i=vhr(M3i)
call RFc(N3i,vhr(M3i),"when calling writeShort in StringTable, line 65")
set r1i=VOc("when calling alloc_ForForceCallback_execute_StringTable_StringTable in StringTable, line 66")
set dC[r1i]=u1i
set fC[r1i]=N3i
set RC[r1i]=M3i
call Inu(r1i,"when calling execute in StringTable, line 66")
set MM=MM-1
endfunction
function bso takes integer cso,integer oso,string Oso,string lso returns nothing
set w3[MM]=lso
set MM=MM+1
if Qg[cso]==0 then
if cso==0 then
call Mau("Nullpointer exception when calling StringTable.serializeString","when calling error in StringTable, line 63")
else
call Mau("Called StringTable.serializeString on invalid object.","when calling error in StringTable, line 63")
endif
endif
call s1i(cso,oso,Oso,"when calling serializeString in StringTable, line 63")
set MM=MM-1
endfunction
function R3i takes integer p3i,integer e3i,string q3i returns nothing
local integer a3i
local string n3i
local integer d3i
local integer f3i
set w3[MM]=q3i
set MM=MM+1
if Heo(nC[p3i],"when calling size in StringTable, line 81")>255 then
set eC[p3i]=true
set d3i=Cgr(pC[p3i],0)
set pC[p3i]=d3i
if Heo(nC[p3i],"when calling size in StringTable, line 84")>65535 then
set qC[p3i]=true
set f3i=Cgr(pC[p3i],1)
set pC[p3i]=f3i
endif
endif
call aFc(e3i,pC[p3i],"when calling writeByte in StringTable, line 88")
call thr(e3i,p3i,Heo(nC[p3i],"when calling size in StringTable, line 90"),"when calling writeStringTableIndex in StringTable, line 90")
set a3i=bfS(nC[p3i],"when calling iterator in StringTable, line 91")
loop
exitwhen not HdS(a3i,"when calling hasNext in StringTable, line 91")
set n3i=IdS(a3i,"when calling next in StringTable, line 91")
call bso(p3i,e3i,n3i,"when calling serializeString in StringTable, line 92")
endloop
call LdS(a3i,"when calling close in StringTable, line 91")
set MM=MM-1
endfunction
function nxS takes string qxS returns integer
local integer axS
set w3[MM]=qxS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set axS=NY
set MY[axS]=779
else
call Mau("Out of memory: Could not create ForForceCallback_execute_StringTable_LegacyStringTable.","when calling error in LegacyStringTable, line 33")
set axS=0
endif
else
set BY=BY-1
set axS=VY[BY]
set MY[axS]=779
endif
set MM=MM-1
return axS
endfunction
function LVs takes integer PVs,integer AVs,string DVs,string HVs returns nothing
local integer JVs
local integer KVs
set w3[MM]=HVs
set MM=MM+1
set JVs=vhr(DVs)
call RFc(AVs,vhr(DVs),"when calling writeShort in LegacyStringTable, line 32")
set KVs=nxS("when calling alloc_ForForceCallback_execute_StringTable_LegacyStringTable in LegacyStringTable, line 33")
set dI[KVs]=JVs
set fI[KVs]=AVs
set RI[KVs]=DVs
call Inu(KVs,"when calling execute in LegacyStringTable, line 33")
set MM=MM-1
endfunction
function GPc takes integer fPc,integer RPc,string TPc,string YPc returns nothing
set w3[MM]=YPc
set MM=MM+1
if Qg[fPc]==0 then
if fPc==0 then
call Mau("Nullpointer exception when calling StringTable.serializeString","when calling error in LegacyStringTable, line 30")
else
call Mau("Called StringTable.serializeString on invalid object.","when calling error in LegacyStringTable, line 30")
endif
endif
call LVs(fPc,RPc,TPc,"when calling serializeString in LegacyStringTable, line 30")
set MM=MM-1
endfunction
function RVs takes integer qVs,integer aVs,string nVs returns nothing
local integer dVs
local string fVs
set w3[MM]=nVs
set MM=MM+1
call aFc(aVs,qI[qVs],"when calling writeByte in LegacyStringTable, line 48")
call RFc(aVs,Heo(nI[qVs],"when calling size in LegacyStringTable, line 49"),"when calling writeShort in LegacyStringTable, line 49")
set dVs=bfS(nI[qVs],"when calling iterator in LegacyStringTable, line 50")
loop
exitwhen not HdS(dVs,"when calling hasNext in LegacyStringTable, line 50")
set fVs=IdS(dVs,"when calling next in LegacyStringTable, line 50")
call GPc(qVs,aVs,fVs,"when calling serializeString in LegacyStringTable, line 51")
endloop
call LdS(dVs,"when calling close in LegacyStringTable, line 50")
set MM=MM-1
endfunction
function Lhc takes integer Hhc,integer Jhc,string Khc returns nothing
set w3[MM]=Khc
set MM=MM+1
if Qg[Hhc]==0 then
if Hhc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.serialize","when calling error in CustomUnitTypes, line 189")
else
call Mau("Called CustomUnitType.serialize on invalid object.","when calling error in CustomUnitTypes, line 189")
endif
endif
call MGs(Hhc,Jhc,"when calling serialize in CustomUnitTypes, line 189")
set MM=MM-1
endfunction
function UOt takes integer mOt,integer QOt,string WOt returns nothing
local integer EOt
local integer ZOt
set w3[MM]=WOt
set MM=MM+1
call gFc(QOt,Oa,"when calling writeInt in PlayerDefinedUnitTypes, line 30")
set EOt=0
set ZOt=Oa-1
loop
exitwhen EOt>ZOt
call Lhc(OBc(mOt,EOt,"when calling getSlot in PlayerDefinedUnitTypes, line 32"),QOt,"when calling serialize in PlayerDefinedUnitTypes, line 32")
set EOt=EOt+1
endloop
set MM=MM-1
endfunction
function noo takes integer eoo,integer qoo,string aoo returns nothing
set w3[MM]=aoo
set MM=MM+1
if Qg[eoo]==0 then
if eoo==0 then
call Mau("Nullpointer exception when calling TileData.serialize","when calling error in TerrainData, line 145")
else
call Mau("Called TileData.serialize on invalid object.","when calling error in TerrainData, line 145")
endif
endif
call N9S(eoo,qoo,"when calling serialize in TerrainData, line 145")
set MM=MM-1
endfunction
function c9S takes integer t9S,integer i9S,string S9S returns nothing
set w3[MM]=S9S
set MM=MM+1
call aFc(i9S,uV[t9S],"when calling writeByte in TerrainData, line 213")
if Ukr(uV[t9S],0)then
call noo(rV[t9S],i9S,"when calling serialize in TerrainData, line 216")
endif
set MM=MM-1
endfunction
function sCs takes integer uCs,integer rCs returns nothing
endfunction
function Bco takes integer Xco,integer Cco,string Vco returns nothing
set w3[MM]=Vco
set MM=MM+1
if Qg[Xco]==0 then
if Xco==0 then
call Mau("Nullpointer exception when calling TerrainData.serialize","when calling error in TerrainData, line 212")
else
call Mau("Called TerrainData.serialize on invalid object.","when calling error in TerrainData, line 212")
endif
endif
call c9S(Xco,Cco,"when calling serialize in TerrainData, line 212")
set MM=MM-1
endfunction
function Ioo takes integer Eoo,integer Zoo,string Uoo returns nothing
set w3[MM]=Uoo
set MM=MM+1
if Qg[Eoo]==0 then
if Eoo==0 then
call Mau("Nullpointer exception when calling PositionedUnitData.serialize","when calling error in UnitData, line 1387")
else
call Mau("Called PositionedUnitData.serialize on invalid object.","when calling error in UnitData, line 1387")
endif
endif
call Q_S(Eoo,Zoo,"when calling serialize in UnitData, line 1387")
set MM=MM-1
endfunction
function Rso takes integer nso,integer dso,string fso returns nothing
set w3[MM]=fso
set MM=MM+1
if Qg[nso]==0 then
if nso==0 then
call Mau("Nullpointer exception when calling StringTable.serialize","when calling error in StringTable, line 80")
else
call Mau("Called StringTable.serialize on invalid object.","when calling error in StringTable, line 80")
endif
endif
call R3i(nso,dso,"when calling serialize in StringTable, line 80")
set MM=MM-1
endfunction
function Bpu takes integer Cpu,integer Vpu returns integer
set s1=Ewu(Cpu,Vpu)
return s1
endfunction
function RhS takes string dhS returns integer
local integer fhS
set w3[MM]=dhS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set fhS=NY
set MY[fhS]=774
else
call Mau("Out of memory: Could not create ForForceCallback_execute_PositionedDestructableData_DestructableData.","when calling error in DestructableData, line 248")
set fhS=0
endif
else
set BY=BY-1
set fhS=VY[BY]
set MY[fhS]=774
endif
set MM=MM-1
return fhS
endfunction
function weu takes integer Npu,integer Mpu returns boolean
return mwu(Npu,Mpu)
endfunction
function yhs takes integer ths,integer ihs,string Shs returns nothing
local integer chs
local integer ohs
local integer Ohs
local integer lhs
local integer bhs
set w3[MM]=Shs
set MM=MM+1
if yZc(eE[ths],"when calling size in DestructableData, line 231")>255 then
set lhs=Bpu(yE[ths],0)
set yE[ths]=lhs
if yZc(eE[ths],"when calling size in DestructableData, line 233")>65535 then
set bhs=Bpu(yE[ths],1)
set yE[ths]=bhs
endif
endif
call aFc(ihs,yE[ths],"when calling writeByte in DestructableData, line 236")
call CBc(pE[ths],ihs,"when calling serialize in DestructableData, line 238")
if weu(yE[ths],0)then
if weu(yE[ths],1)then
call gFc(ihs,yZc(eE[ths],"when calling size in DestructableData, line 242"),"when calling writeInt in DestructableData, line 242")
else
call RFc(ihs,yZc(eE[ths],"when calling size in DestructableData, line 244"),"when calling writeShort in DestructableData, line 244")
endif
else
call aFc(ihs,yZc(eE[ths],"when calling size in DestructableData, line 246"),"when calling writeByte in DestructableData, line 246")
endif
set chs=kAs(eE[ths],"when calling iterator in DestructableData, line 247")
loop
exitwhen not PPs(chs,"when calling hasNext in DestructableData, line 247")
set ohs=EPs(chs,"when calling next in DestructableData, line 247")
set Ohs=RhS("when calling alloc_ForForceCallback_execute_PositionedDestructableData_DestructableData in DestructableData, line 248")
set qE[Ohs]=ohs
set aE[Ohs]=ihs
call Inu(Ohs,"when calling execute in DestructableData, line 248")
endloop
call HPs(chs,"when calling close in DestructableData, line 247")
set MM=MM-1
endfunction
function VFc takes integer LFc,integer XFc,string CFc returns nothing
set w3[MM]=CFc
set MM=MM+1
if Qg[LFc]==0 then
if LFc==0 then
call Mau("Nullpointer exception when calling PositionedDestructableData.serialize","when calling error in DestructableData, line 230")
else
call Mau("Called PositionedDestructableData.serialize on invalid object.","when calling error in DestructableData, line 230")
endif
endif
call yhs(LFc,XFc,"when calling serialize in DestructableData, line 230")
set MM=MM-1
endfunction
function wet takes integer Bpt,integer Npt,string Mpt returns nothing
set w3[MM]=Mpt
set MM=MM+1
call aFc(Npt,uJ[Bpt],"when calling writeByte in RegionData, line 54")
call jFc(Npt,SJ[Bpt],"when calling writeReal in RegionData, line 56")
call jFc(Npt,cJ[Bpt],"when calling writeReal in RegionData, line 57")
call jFc(Npt,oJ[Bpt],"when calling writeReal in RegionData, line 59")
call jFc(Npt,OJ[Bpt],"when calling writeReal in RegionData, line 60")
call Rso(lJ[Bpt],Npt,"when calling serialize in RegionData, line 62")
if vIu(uJ[Bpt],0)then
call Bco(bJ[Bpt],Npt,"when calling serialize in RegionData, line 65")
endif
if vIu(uJ[Bpt],1)then
call VFc(yJ[Bpt],Npt,"when calling serialize in RegionData, line 67")
endif
if vIu(uJ[Bpt],2)then
call Ioo(pJ[Bpt],Npt,"when calling serialize in RegionData, line 69")
endif
set MM=MM-1
endfunction
function adS takes integer edS,integer qdS returns nothing
endfunction
function geo takes integer Teo,integer Yeo,string Geo returns nothing
set w3[MM]=Geo
set MM=MM+1
if am[Teo]==0 then
if Teo==0 then
call Mau("Nullpointer exception when calling UnitTypeTable.serialize","when calling error in UnitTypeData, line 1283")
else
call Mau("Called UnitTypeTable.serialize on invalid object.","when calling error in UnitTypeData, line 1283")
endif
endif
call adS(Teo,Yeo)
set MM=MM-1
endfunction
function h5r takes integer G5r,integer g5r returns integer
set E9=Ewu(G5r,g5r)
return E9
endfunction
function j5r takes integer F5r,integer k5r returns boolean
return mwu(F5r,k5r)
endfunction
function opc takes string Spc returns integer
local integer cpc
set w3[MM]=Spc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set cpc=NY
set MY[cpc]=783
else
call Mau("Out of memory: Could not create ForForceCallback_execute_UnitData_UnitTypeData.","when calling error in UnitTypeData, line 1384")
set cpc=0
endif
else
set BY=BY-1
set cpc=VY[BY]
set MY[cpc]=783
endif
set MM=MM-1
return cpc
endfunction
function ypS takes integer tpS,integer ipS,string SpS returns nothing
local integer cpS
local integer opS
local integer OpS
local integer lpS
local integer bpS
set w3[MM]=SpS
set MM=MM+1
if yZc(fN[tpS],"when calling size in UnitTypeData, line 1367")>255 then
set lpS=h5r(nN[tpS],0)
set nN[tpS]=lpS
if yZc(fN[tpS],"when calling size in UnitTypeData, line 1369")>65535 then
set bpS=h5r(nN[tpS],1)
set nN[tpS]=bpS
endif
endif
call aFc(ipS,nN[tpS],"when calling writeByte in UnitTypeData, line 1372")
call geo(dN[tpS],ipS,"when calling serialize in UnitTypeData, line 1374")
if j5r(nN[tpS],0)then
if j5r(nN[tpS],1)then
call gFc(ipS,yZc(fN[tpS],"when calling size in UnitTypeData, line 1378"),"when calling writeInt in UnitTypeData, line 1378")
else
call RFc(ipS,yZc(fN[tpS],"when calling size in UnitTypeData, line 1380"),"when calling writeShort in UnitTypeData, line 1380")
endif
else
call aFc(ipS,yZc(fN[tpS],"when calling size in UnitTypeData, line 1382"),"when calling writeByte in UnitTypeData, line 1382")
endif
set cpS=kAs(fN[tpS],"when calling iterator in UnitTypeData, line 1383")
loop
exitwhen not PPs(cpS,"when calling hasNext in UnitTypeData, line 1383")
set opS=EPs(cpS,"when calling next in UnitTypeData, line 1383")
set OpS=opc("when calling alloc_ForForceCallback_execute_UnitData_UnitTypeData in UnitTypeData, line 1384")
set RN[OpS]=opS
set TN[OpS]=ipS
call Inu(OpS,"when calling execute in UnitTypeData, line 1384")
endloop
call HPs(cpS,"when calling close in UnitTypeData, line 1383")
set MM=MM-1
endfunction
function oFc takes integer iFc,integer SFc,string cFc returns nothing
set w3[MM]=cFc
set MM=MM+1
if Qg[iFc]==0 then
if iFc==0 then
call Mau("Nullpointer exception when calling DataSerializable.serialize","when calling error in DataInterfaces, line 25")
else
call Mau("Called DataSerializable.serialize on invalid object.","when calling error in DataInterfaces, line 25")
endif
endif
if Qg[iFc]<=722 then
if Qg[iFc]<=719 then
if Qg[iFc]<=717 then
if Qg[iFc]<=715 then
call MGs(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
else
call sCs(iFc,SFc)
endif
elseif Qg[iFc]<=718 then
call UOt(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
else
call wet(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
endif
elseif Qg[iFc]<=721 then
if Qg[iFc]<=720 then
call yhs(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
else
call Q_S(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
endif
else
call Dlt(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
endif
elseif Qg[iFc]<=725 then
if Qg[iFc]<=724 then
if Qg[iFc]<=723 then
call RVs(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
else
call R3i(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
endif
else
call c9S(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
endif
elseif Qg[iFc]<=727 then
if Qg[iFc]<=726 then
call N9S(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
else
call ypS(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
endif
else
call JlS(iFc,SFc,"when calling serialize in DataInterfaces, line 25")
endif
set MM=MM-1
endfunction
function OOs takes integer SOs,integer cOs,string oOs returns nothing
set w3[MM]=oOs
set MM=MM+1
call oFc(cOs,SOs,"when calling serialize in Base64Data, line 46")
set MM=MM-1
endfunction
function SPs takes integer sPs,integer tPs,string iPs returns nothing
set w3[MM]=iPs
set MM=MM+1
call oFc(tPs,sPs,"when calling serialize in HashData, line 43")
set MM=MM-1
endfunction
function UFc takes integer WFc,integer EFc,string ZFc returns nothing
set w3[MM]=ZFc
set MM=MM+1
if vY[WFc]==0 then
if WFc==0 then
call Mau("Nullpointer exception when calling DataWriter.writeSerializable","when calling error in DataInterfaces, line 54")
else
call Mau("Called DataWriter.writeSerializable on invalid object.","when calling error in DataInterfaces, line 54")
endif
endif
if vY[WFc]<=730 then
call OOs(WFc,EFc,"when calling writeSerializable in DataInterfaces, line 54")
else
call SPs(WFc,EFc,"when calling writeSerializable in DataInterfaces, line 54")
endif
set MM=MM-1
endfunction
function fQu takes nothing returns nothing
set ta=1
call PreloadGenClear()
call PreloadGenStart()
endfunction
function LOt takes integer KOt returns string
return"SotFRP\\Data\\utypes.pld"
endfunction
function bet takes integer let returns string
return"SotFRP\\Save\\"+wJ[let]+".pld"
endfunction
function yCs takes integer bCs returns string
return"SotFRP\\Save\\"+oI[bCs]+".pld"
endfunction
function hCc takes integer YCc,string GCc returns string
local string gCc
set w3[MM]=GCc
set MM=MM+1
if Qg[YCc]==0 then
if YCc==0 then
call Mau("Nullpointer exception when calling Persistable.getPath","when calling error in PersistableData, line 65")
else
call Mau("Called Persistable.getPath on invalid object.","when calling error in PersistableData, line 65")
endif
endif
if Qg[YCc]<=718 then
if Qg[YCc]<=717 then
set gCc=yCs(YCc)
else
set gCc=LOt(YCc)
endif
else
set gCc=bet(YCc)
endif
set MM=MM-1
return gCc
endfunction
function jQu takes string kQu returns nothing
call Preload(ua)
call PreloadGenEnd(kQu)
endfunction
function kVc takes integer hVc,integer FVc returns integer
return 0
endfunction
function Dys takes integer Zys,string Uys returns integer
local integer Iys
local integer Pys
local integer Ays
set w3[MM]=Uys
set MM=MM+1
set Iys=0
if xQ[Zys]!="" then
set Iys=Iys+DFr(xQ[Zys])
endif
set Pys=x1s(kQ[Zys],"when calling iterator in BigString, line 216")
loop
exitwhen not t1s(Pys)
set Ays=r1s(Pys)
set Iys=Iys+DFr(QQ[Ays])
endloop
call c1s(Pys,"when calling close in BigString, line 216")
if jQ[Zys]!="" then
set Iys=Iys+DFr(jQ[Zys])
endif
set MM=MM-1
return Iys
endfunction
function kfc takes integer gfc,string hfc returns integer
local integer Ffc
set w3[MM]=hfc
set MM=MM+1
if sG[gfc]==0 then
if gfc==0 then
call Mau("Nullpointer exception when calling BigString.checksum","when calling error in BigString, line 210")
else
call Mau("Called BigString.checksum on invalid object.","when calling error in BigString, line 210")
endif
endif
set Ffc=Dys(gfc,"when calling checksum in BigString, line 210")
set MM=MM-1
return Ffc
endfunction
function vSt takes integer xSt returns nothing
endfunction
function QCc takes integer vCc,string mCc returns nothing
set w3[MM]=mCc
set MM=MM+1
if Qg[vCc]==0 then
if vCc==0 then
call Mau("Nullpointer exception when calling Persistable.onSaved","when calling error in PersistableData, line 67")
else
call Mau("Called Persistable.onSaved on invalid object.","when calling error in PersistableData, line 67")
endif
endif
call vSt(vCc)
set MM=MM-1
endfunction
function VZS takes integer XZS,string CZS returns nothing
set w3[MM]=CZS
set MM=MM+1
if Qg[XZS]==0 then
call Mau("Double free: object of type RegionData","when calling error in RegionData, line 27")
else
set xg[vg]=XZS
set vg=vg+1
set Qg[XZS]=0
endif
set MM=MM-1
endfunction
function ehS takes integer yhS,string phS returns nothing
set w3[MM]=phS
set MM=MM+1
if Qg[yhS]==0 then
call Mau("Double free: object of type PositionedDestructableData","when calling error in DestructableData, line 223")
else
set xg[vg]=yhS
set vg=vg+1
set Qg[yhS]=0
endif
set MM=MM-1
endfunction
function PhS takes integer UhS,string IhS returns nothing
set w3[MM]=IhS
set MM=MM+1
if Dg[UhS]==0 then
call Mau("Double free: object of type SingleDestructableData","when calling error in DestructableData, line 54")
else
set Ig[Pg]=UhS
set Pg=Pg+1
set Dg[UhS]=0
endif
set MM=MM-1
endfunction
function ujs takes integer wjs returns nothing
endfunction
function tjs takes integer rjs,string sjs returns nothing
set w3[MM]=sjs
set MM=MM+1
call ujs(rjs)
call PhS(rjs,"when calling dealloc_SingleDestructableData in DestructableData, line 54")
set MM=MM-1
endfunction
function Gkc takes integer Tkc,string Ykc returns nothing
set w3[MM]=Ykc
set MM=MM+1
if Dg[Tkc]==0 then
if Tkc==0 then
call Mau("Nullpointer exception when calling SingleDestructableData.SingleDestructableData","when calling error in DestructableData, line 54")
else
call Mau("Called SingleDestructableData.SingleDestructableData on invalid object.","when calling error in DestructableData, line 54")
endif
endif
call tjs(Tkc,"when calling destroySingleDestructableData in DestructableData, line 54")
set MM=MM-1
endfunction
function xZS takes integer kZS,string jZS returns nothing
set w3[MM]=jZS
set MM=MM+1
if Qg[kZS]==0 then
call Mau("Double free: object of type RawcodeTable","when calling error in RawcodeTable, line 41")
else
set xg[vg]=kZS
set vg=vg+1
set Qg[kZS]=0
endif
set MM=MM-1
endfunction
function LkS takes integer JkS,string KkS returns nothing
set w3[MM]=KkS
set MM=MM+1
if Yh[JkS]==0 then
call Mau("Double free: object of type HashMap","when calling error in HashMap, line 8")
else
set fh[Rh]=JkS
set Rh=Rh+1
set Yh[JkS]=0
endif
set MM=MM-1
endfunction
function nDs takes integer qDs,string aDs returns nothing
set w3[MM]=aDs
set MM=MM+1
call CDs(qDs,"when calling HashMap_onDestroy in HashMap, line 7")
call LkS(qDs,"when calling dealloc_HashMap in HashMap, line 7")
set MM=MM-1
endfunction
function WZc takes integer mZc,string QZc returns nothing
set w3[MM]=QZc
set MM=MM+1
if Yh[mZc]==0 then
if mZc==0 then
call Mau("Nullpointer exception when calling HashMap.HashMap","when calling error in HashMap, line 8")
else
call Mau("Called HashMap.HashMap on invalid object.","when calling error in HashMap, line 8")
endif
endif
if Yh[mZc]<=1656 then
call nDs(mZc,"when calling destroyHashMap in HashMap, line 8")
else
call uHs(mZc,"when calling destroyIterableMap in HashMap, line 8")
endif
set MM=MM-1
endfunction
function xbt takes integer kbt,string jbt returns nothing
set w3[MM]=jbt
set MM=MM+1
call WZc(ZH[kbt],"when calling dispatch_HashMap_destroyHashMap in RawcodeTable, line 86")
call vEc(UH[kbt],"when calling dispatch_HashList_destroyHashList in RawcodeTable, line 87")
set MM=MM-1
endfunction
function sbt takes integer ubt,string rbt returns nothing
set w3[MM]=rbt
set MM=MM+1
call xbt(ubt,"when calling RawcodeTable_onDestroy in RawcodeTable, line 85")
call xZS(ubt,"when calling dealloc_RawcodeTable in RawcodeTable, line 85")
set MM=MM-1
endfunction
function mBc takes integer xBc,string vBc returns nothing
set w3[MM]=vBc
set MM=MM+1
if Qg[xBc]==0 then
if xBc==0 then
call Mau("Nullpointer exception when calling RawcodeTable.RawcodeTable","when calling error in RawcodeTable, line 41")
else
call Mau("Called RawcodeTable.RawcodeTable on invalid object.","when calling error in RawcodeTable, line 41")
endif
endif
call sbt(xBc,"when calling destroyRawcodeTable in RawcodeTable, line 41")
set MM=MM-1
endfunction
function oFs takes integer tFs,string iFs returns nothing
local integer SFs
local integer cFs
set w3[MM]=iFs
set MM=MM+1
set SFs=kAs(eE[tFs],"when calling iterator in DestructableData, line 290")
loop
exitwhen not PPs(SFs,"when calling hasNext in DestructableData, line 290")
set cFs=EPs(SFs,"when calling next in DestructableData, line 290")
call Gkc(cFs,"when calling dispatch_SingleDestructableData_destroySingleDestructableData in DestructableData, line 291")
endloop
call HPs(SFs,"when calling close in DestructableData, line 290")
call vEc(eE[tFs],"when calling dispatch_HashList_destroyHashList in DestructableData, line 292")
call mBc(pE[tFs],"when calling dispatch_RawcodeTable_destroyRawcodeTable in DestructableData, line 293")
set MM=MM-1
endfunction
function Ths takes integer fhs,string Rhs returns nothing
set w3[MM]=Rhs
set MM=MM+1
call oFs(fhs,"when calling PositionedDestructableData_onDestroy in DestructableData, line 289")
call ehS(fhs,"when calling dealloc_PositionedDestructableData in DestructableData, line 289")
set MM=MM-1
endfunction
function KFc takes integer HFc,string JFc returns nothing
set w3[MM]=JFc
set MM=MM+1
if Qg[HFc]==0 then
if HFc==0 then
call Mau("Nullpointer exception when calling PositionedDestructableData.PositionedDestructableData","when calling error in DestructableData, line 223")
else
call Mau("Called PositionedDestructableData.PositionedDestructableData on invalid object.","when calling error in DestructableData, line 223")
endif
endif
call Ths(HFc,"when calling destroyPositionedDestructableData in DestructableData, line 223")
set MM=MM-1
endfunction
function G8S takes integer T8S,string Y8S returns nothing
set w3[MM]=Y8S
set MM=MM+1
call vEc(HC[T8S],"when calling dispatch_HashList_destroyHashList in TerrainData, line 41")
call vEc(DC[T8S],"when calling dispatch_HashList_destroyHashList in TerrainData, line 42")
set MM=MM-1
endfunction
function Vlc takes integer Xlc,string Clc returns nothing
set w3[MM]=Clc
set MM=MM+1
if Iv[Xlc]==0 then
call Mau("Double free: object of type SubRectTileData","when calling error in TerrainData, line 28")
else
set Ev[Zv]=Xlc
set Zv=Zv+1
set Iv[Xlc]=0
endif
set MM=MM-1
endfunction
function F8S takes integer g8S,string h8S returns nothing
set w3[MM]=h8S
set MM=MM+1
call G8S(g8S,"when calling SubRectTileData_onDestroy in TerrainData, line 40")
call Vlc(g8S,"when calling dealloc_SubRectTileData in TerrainData, line 40")
set MM=MM-1
endfunction
function jco takes integer Fco,string kco returns nothing
set w3[MM]=kco
set MM=MM+1
if Iv[Fco]==0 then
if Fco==0 then
call Mau("Nullpointer exception when calling SubRectTileData.SubRectTileData","when calling error in TerrainData, line 28")
else
call Mau("Called SubRectTileData.SubRectTileData on invalid object.","when calling error in TerrainData, line 28")
endif
endif
call F8S(Fco,"when calling destroySubRectTileData in TerrainData, line 28")
set MM=MM-1
endfunction
function E0S takes integer v0S,string m0S returns nothing
local integer Q0S
local integer W0S
set w3[MM]=m0S
set MM=MM+1
set Q0S=x1s(SV[v0S],"when calling iterator in TerrainData, line 192")
loop
exitwhen not t1s(Q0S)
set W0S=r1s(Q0S)
call jco(W0S,"when calling dispatch_SubRectTileData_destroySubRectTileData in TerrainData, line 193")
endloop
call c1s(Q0S,"when calling close in TerrainData, line 192")
call CAc(SV[v0S],"when calling dispatch_LinkedList_destroyLinkedList in TerrainData, line 194")
call mBc(iV[v0S],"when calling dispatch_RawcodeTable_destroyRawcodeTable in TerrainData, line 195")
set MM=MM-1
endfunction
function Rbc takes integer dbc,string fbc returns nothing
set w3[MM]=fbc
set MM=MM+1
if Qg[dbc]==0 then
call Mau("Double free: object of type TileData","when calling error in TerrainData, line 138")
else
set xg[vg]=dbc
set vg=vg+1
set Qg[dbc]=0
endif
set MM=MM-1
endfunction
function b0S takes integer O0S,string l0S returns nothing
set w3[MM]=l0S
set MM=MM+1
call E0S(O0S,"when calling TileData_onDestroy in TerrainData, line 191")
call Rbc(O0S,"when calling dealloc_TileData in TerrainData, line 191")
set MM=MM-1
endfunction
function poo takes integer boo,string yoo returns nothing
set w3[MM]=yoo
set MM=MM+1
if Qg[boo]==0 then
if boo==0 then
call Mau("Nullpointer exception when calling TileData.TileData","when calling error in TerrainData, line 138")
else
call Mau("Called TileData.TileData on invalid object.","when calling error in TerrainData, line 138")
endif
endif
call b0S(boo,"when calling destroyTileData in TerrainData, line 138")
set MM=MM-1
endfunction
function D9S takes integer P9S,string A9S returns nothing
set w3[MM]=A9S
set MM=MM+1
call poo(rV[P9S],"when calling dispatch_TileData_destroyTileData in TerrainData, line 237")
set MM=MM-1
endfunction
function obc takes integer Sbc,string cbc returns nothing
set w3[MM]=cbc
set MM=MM+1
if Qg[Sbc]==0 then
call Mau("Double free: object of type TerrainData","when calling error in TerrainData, line 206")
else
set xg[vg]=Sbc
set vg=vg+1
set Qg[Sbc]=0
endif
set MM=MM-1
endfunction
function q9S takes integer p9S,string e9S returns nothing
set w3[MM]=e9S
set MM=MM+1
call D9S(p9S,"when calling TerrainData_onDestroy in TerrainData, line 236")
call obc(p9S,"when calling dealloc_TerrainData in TerrainData, line 236")
set MM=MM-1
endfunction
function Lco takes integer Jco,string Kco returns nothing
set w3[MM]=Kco
set MM=MM+1
if Qg[Jco]==0 then
if Jco==0 then
call Mau("Nullpointer exception when calling TerrainData.TerrainData","when calling error in TerrainData, line 206")
else
call Mau("Called TerrainData.TerrainData on invalid object.","when calling error in TerrainData, line 206")
endif
endif
call q9S(Jco,"when calling destroyTerrainData in TerrainData, line 206")
set MM=MM-1
endfunction
function xES takes integer kES,string jES returns nothing
set w3[MM]=jES
set MM=MM+1
if Ek[kES]==0 then
call Mau("Double free: object of type PersistableMiddleware","when calling error in PersistableData, line 17")
else
set Wk=Wk+1
set Ek[kES]=0
endif
set MM=MM-1
endfunction
function Jct takes integer Dct,string Hct returns nothing
set w3[MM]=Hct
set MM=MM+1
call xES(Dct,"when calling dealloc_PersistableMiddleware in PersistableData, line 17")
set MM=MM-1
endfunction
function gVc takes integer YVc,string GVc returns nothing
set w3[MM]=GVc
set MM=MM+1
if Ek[YVc]==0 then
if YVc==0 then
call Mau("Nullpointer exception when calling PersistableMiddleware.PersistableMiddleware","when calling error in PersistableData, line 17")
else
call Mau("Called PersistableMiddleware.PersistableMiddleware on invalid object.","when calling error in PersistableData, line 17")
endif
endif
call Jct(YVc,"when calling destroyPersistableMiddleware in PersistableData, line 17")
set MM=MM-1
endfunction
function Uct takes integer Ect,string Zct returns nothing
set w3[MM]=Zct
set MM=MM+1
if BD[Ect]!=0 then
call gVc(BD[Ect],"when calling dispatch_PersistableMiddleware_destroyPersistableMiddleware in PersistableData, line 63")
endif
set MM=MM-1
endfunction
function HrS takes integer ArS,string DrS returns nothing
set w3[MM]=DrS
set MM=MM+1
call ZcS(ArS,"when calling SingleUnitData_onDestroy in UnitData, line 1334")
set MM=MM-1
endfunction
function Ryc takes integer dyc,string fyc returns nothing
set w3[MM]=fyc
set MM=MM+1
if Xv[dyc]==0 then
call Mau("Double free: object of type SinglePositionedUnitData","when calling error in UnitData, line 1334")
else
set Jv[Kv]=dyc
set Kv=Kv+1
set Xv[dyc]=0
endif
set MM=MM-1
endfunction
function brS takes integer OrS,string lrS returns nothing
set w3[MM]=lrS
set MM=MM+1
call HrS(OrS,"when calling SinglePositionedUnitData_onDestroy in UnitData, line 1334")
call Ryc(OrS,"when calling dealloc_SinglePositionedUnitData in UnitData, line 1334")
set MM=MM-1
endfunction
function WOo takes integer mOo,string QOo returns nothing
set w3[MM]=QOo
set MM=MM+1
if Xv[mOo]==0 then
if mOo==0 then
call Mau("Nullpointer exception when calling SinglePositionedUnitData.SinglePositionedUnitData","when calling error in UnitData, line 1334")
else
call Mau("Called SinglePositionedUnitData.SinglePositionedUnitData on invalid object.","when calling error in UnitData, line 1334")
endif
endif
call brS(mOo,"when calling destroySinglePositionedUnitData in UnitData, line 1334")
set MM=MM-1
endfunction
function EwS takes integer vwS,string mwS returns nothing
local integer QwS
local integer WwS
set w3[MM]=mwS
set MM=MM+1
set QwS=kAs(eV[vwS],"when calling iterator in UnitData, line 1447")
loop
exitwhen not PPs(QwS,"when calling hasNext in UnitData, line 1447")
set WwS=EPs(QwS,"when calling next in UnitData, line 1447")
call WOo(WwS,"when calling dispatch_SinglePositionedUnitData_destroySinglePositionedUnitData in UnitData, line 1448")
endloop
call HPs(QwS,"when calling close in UnitData, line 1447")
call vEc(eV[vwS],"when calling dispatch_HashList_destroyHashList in UnitData, line 1449")
set MM=MM-1
endfunction
function Pbc takes integer Ubc,string Ibc returns nothing
set w3[MM]=Ibc
set MM=MM+1
if Qg[Ubc]==0 then
call Mau("Double free: object of type PositionedUnitData","when calling error in UnitData, line 1376")
else
set xg[vg]=Ubc
set vg=vg+1
set Qg[Ubc]=0
endif
set MM=MM-1
endfunction
function X_S takes integer K_S,string L_S returns nothing
set w3[MM]=L_S
set MM=MM+1
call EwS(K_S,"when calling PositionedUnitData_onDestroy in UnitData, line 1446")
call Pbc(K_S,"when calling dealloc_PositionedUnitData in UnitData, line 1446")
set MM=MM-1
endfunction
function Woo takes integer moo,string Qoo returns nothing
set w3[MM]=Qoo
set MM=MM+1
if Qg[moo]==0 then
if moo==0 then
call Mau("Nullpointer exception when calling PositionedUnitData.PositionedUnitData","when calling error in UnitData, line 1376")
else
call Mau("Called PositionedUnitData.PositionedUnitData on invalid object.","when calling error in UnitData, line 1376")
endif
endif
call X_S(moo,"when calling destroyPositionedUnitData in UnitData, line 1376")
set MM=MM-1
endfunction
function uqt takes integer Met,string wqt returns nothing
set w3[MM]=wqt
set MM=MM+1
call Woo(pJ[Met],"when calling dispatch_PositionedUnitData_destroyPositionedUnitData in RegionData, line 126")
call KFc(yJ[Met],"when calling dispatch_PositionedDestructableData_destroyPositionedDestructableData in RegionData, line 127")
call Lco(bJ[Met],"when calling dispatch_TerrainData_destroyTerrainData in RegionData, line 128")
call Cro(lJ[Met],"when calling dispatch_StringTable_destroyStringTable in RegionData, line 129")
call Uct(Met,"when calling Persistable_onDestroy in RegionData, line 27")
set MM=MM-1
endfunction
function Oet takes integer cet,string oet returns nothing
set w3[MM]=oet
set MM=MM+1
call uqt(cet,"when calling RegionData_onDestroy in RegionData, line 125")
call VZS(cet,"when calling dealloc_RegionData in RegionData, line 125")
set MM=MM-1
endfunction
function PMc takes integer UMc,string IMc returns nothing
set w3[MM]=IMc
set MM=MM+1
if Qg[UMc]==0 then
if UMc==0 then
call Mau("Nullpointer exception when calling RegionData.RegionData","when calling error in RegionData, line 27")
else
call Mau("Called RegionData.RegionData on invalid object.","when calling error in RegionData, line 27")
endif
endif
call Oet(UMc,"when calling destroyRegionData in RegionData, line 27")
set MM=MM-1
endfunction
function TKi takes integer fKi,string RKi returns nothing
set w3[MM]=RKi
set MM=MM+1
call FZu("Сохранение завершено!",30.,pa[OX[fKi]])
call PMc(lX[fKi],"when calling dispatch_RegionData_destroyRegionData in SotfrpGuiRegions, line 131")
set MM=MM-1
endfunction
function UVc takes integer EVc,string ZVc returns nothing
set w3[MM]=ZVc
set MM=MM+1
if Pk[EVc]==0 then
if EVc==0 then
call Mau("Nullpointer exception when calling PersistableSaveCallback.onSaved","when calling error in PersistableData, line 48")
else
call Mau("Called PersistableSaveCallback.onSaved on invalid object.","when calling error in PersistableData, line 48")
endif
endif
call TKi(EVc,"when calling onSaved_save_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in PersistableData, line 48")
set MM=MM-1
endfunction
function QES takes integer vES,string mES returns nothing
set w3[MM]=mES
set MM=MM+1
if Pk[vES]==0 then
call Mau("Double free: object of type PersistableSaveCallback","when calling error in PersistableData, line 47")
else
set Zk[Uk]=vES
set Uk=Uk+1
set Pk[vES]=0
endif
set MM=MM-1
endfunction
function Xct takes integer Kct,string Lct returns nothing
set w3[MM]=Lct
set MM=MM+1
call QES(Kct,"when calling dealloc_PersistableSaveCallback in PersistableData, line 47")
set MM=MM-1
endfunction
function WVc takes integer mVc,string QVc returns nothing
set w3[MM]=QVc
set MM=MM+1
if Pk[mVc]==0 then
if mVc==0 then
call Mau("Nullpointer exception when calling PersistableSaveCallback.PersistableSaveCallback","when calling error in PersistableData, line 47")
else
call Mau("Called PersistableSaveCallback.PersistableSaveCallback on invalid object.","when calling error in PersistableData, line 47")
endif
endif
call Xct(mVc,"when calling destroyPersistableSaveCallback in PersistableData, line 47")
set MM=MM-1
endfunction
function yct takes integer Oct,integer lct,string bct returns nothing
set w3[MM]=bct
set MM=MM+1
call QCc(Oct,"when calling onSaved in PersistableData, line 128")
if lct!=0 then
call UVc(lct,"when calling onSaved in PersistableData, line 130")
call WVc(lct,"when calling dispatch_PersistableSaveCallback_destroyPersistableSaveCallback in PersistableData, line 131")
endif
set MM=MM-1
endfunction
function sVc takes integer wVc,integer uVc,string rVc returns nothing
set w3[MM]=rVc
set MM=MM+1
if Qg[wVc]==0 then
if wVc==0 then
call Mau("Nullpointer exception when calling Persistable.finishSave","when calling error in PersistableData, line 127")
else
call Mau("Called Persistable.finishSave on invalid object.","when calling error in PersistableData, line 127")
endif
endif
call yct(wVc,uVc,"when calling finishSave in PersistableData, line 127")
set MM=MM-1
endfunction
function hbs takes integer Ybs,string Gbs returns integer
local integer gbs
set w3[MM]=Gbs
set MM=MM+1
set gbs=GQ[Ybs]
set GQ[Ybs]=0
call Odc(Ybs,"when calling dispatch_Base64Encoder_destroyBase64Encoder in Base64, line 183")
set MM=MM-1
return gbs
endfunction
function Cdc takes integer Kdc,string Ldc returns integer
local integer Xdc
set w3[MM]=Ldc
set MM=MM+1
if CY[Kdc]==0 then
if Kdc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.intoData","when calling error in Base64, line 180")
else
call Mau("Called Base64Encoder.intoData on invalid object.","when calling error in Base64, line 180")
endif
endif
set Xdc=hbs(Kdc,"when calling intoData in Base64, line 180")
set MM=MM-1
return Xdc
endfunction
function GYS takes integer TYS,string YYS returns nothing
set w3[MM]=YYS
set MM=MM+1
if YY[TYS]==0 then
call Mau("Double free: object of type Base64DataEncoder","when calling error in Base64Data, line 60")
else
set fY[RY]=TYS
set RY=RY+1
set YY[TYS]=0
endif
set MM=MM-1
endfunction
function Vcs takes integer Xcs,string Ccs returns nothing
set w3[MM]=Ccs
set MM=MM+1
if aQ[Xcs]!=0 then
call Odc(aQ[Xcs],"when calling dispatch_Base64Encoder_destroyBase64Encoder in Base64Data, line 68")
endif
set MM=MM-1
endfunction
function Zcs takes integer Wcs,string Ecs returns nothing
set w3[MM]=Ecs
set MM=MM+1
call Vcs(Wcs,"when calling Base64DataEncoder_onDestroy in Base64Data, line 66")
call GYS(Wcs,"when calling dealloc_Base64DataEncoder in Base64Data, line 66")
set MM=MM-1
endfunction
function Inc takes integer Znc,string Unc returns nothing
set w3[MM]=Unc
set MM=MM+1
if YY[Znc]==0 then
if Znc==0 then
call Mau("Nullpointer exception when calling Base64DataEncoder.Base64DataEncoder","when calling error in Base64Data, line 60")
else
call Mau("Called Base64DataEncoder.Base64DataEncoder on invalid object.","when calling error in Base64Data, line 60")
endif
endif
call Zcs(Znc,"when calling destroyBase64DataEncoder in Base64Data, line 60")
set MM=MM-1
endfunction
function iGS takes string sGS returns integer
local integer tGS
set w3[MM]=sGS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set tGS=NY
set MY[tGS]=764
else
call Mau("Out of memory: Could not create ForForceCallback_execute_Base64Encoder_Base64.","when calling error in Base64, line 138")
set tGS=0
endif
else
set BY=BY-1
set tGS=VY[BY]
set MY[tGS]=764
endif
set MM=MM-1
return tGS
endfunction
function Obs takes integer Sbs,string cbs returns nothing
local integer obs
set w3[MM]=cbs
set MM=MM+1
set obs=iGS("when calling alloc_ForForceCallback_execute_Base64Encoder_Base64 in Base64, line 138")
set hQ[obs]=Sbs
call Inu(obs,"when calling execute in Base64, line 138")
set MM=MM-1
endfunction
function vdc takes integer jdc,string xdc returns nothing
set w3[MM]=xdc
set MM=MM+1
if CY[jdc]==0 then
if jdc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.encode","when calling error in Base64, line 137")
else
call Mau("Called Base64Encoder.encode on invalid object.","when calling error in Base64, line 137")
endif
endif
call Obs(jdc,"when calling encode in Base64, line 137")
set MM=MM-1
endfunction
function Qcs takes integer jcs,string xcs returns integer
local integer vcs
local integer mcs
set w3[MM]=xcs
set MM=MM+1
set vcs=aQ[jcs]
set aQ[jcs]=0
call Inc(jcs,"when calling dispatch_Base64DataEncoder_destroyBase64DataEncoder in Base64Data, line 73")
call vdc(vcs,"when calling encode in Base64Data, line 74")
set mcs=Cdc(vcs,"when calling intoData in Base64Data, line 75")
set MM=MM-1
return mcs
endfunction
function uFc takes integer Nhc,string Mhc returns integer
local integer wFc
set w3[MM]=Mhc
set MM=MM+1
if YY[Nhc]==0 then
if Nhc==0 then
call Mau("Nullpointer exception when calling DataEncoder.encode","when calling error in DataInterfaces, line 111")
else
call Mau("Called DataEncoder.encode on invalid object.","when calling error in DataInterfaces, line 111")
endif
endif
set wFc=Qcs(Nhc,"when calling encode in DataInterfaces, line 111")
set MM=MM-1
return wFc
endfunction
function hct takes integer Rct,integer Tct,string Yct returns nothing
local integer Gct
local integer gct
set w3[MM]=Yct
set MM=MM+1
if ea==VD[Rct]then
set Gct=UCc(Rct,"when calling getWriter in PersistableData, line 157")
call UFc(Gct,Rct,"when calling writeSerializable in PersistableData, line 158")
set gct=uFc(DFc(Gct,"when calling intoEncoder in PersistableData, line 159"),"when calling encode in PersistableData, line 159")
if BD[Rct]!=0 then
set gct=kVc(BD[Rct],gct)
endif
call fQu()
call GQu(tgu(kfc(gct,"when calling checksum in PersistableData, line 163")),"when calling write in PersistableData, line 163")
call FQu(gct,"when calling write in PersistableData, line 164")
call jQu(hCc(Rct,"when calling getPath in PersistableData, line 165"))
endif
call sVc(Rct,Tct,"when calling finishSave in PersistableData, line 166")
set MM=MM-1
endfunction
function bVc takes integer oVc,integer OVc,string lVc returns nothing
set w3[MM]=lVc
set MM=MM+1
if Qg[oVc]==0 then
if oVc==0 then
call Mau("Nullpointer exception when calling Persistable.save","when calling error in PersistableData, line 155")
else
call Mau("Called Persistable.save on invalid object.","when calling error in PersistableData, line 155")
endif
endif
call hct(oVc,OVc,"when calling save in PersistableData, line 155")
set MM=MM-1
endfunction
function jct takes integer Fct,string kct returns nothing
set w3[MM]=kct
set MM=MM+1
call bVc(Fct,0,"when calling save in PersistableData, line 169")
set MM=MM-1
endfunction
function eVc takes integer yVc,string pVc returns nothing
set w3[MM]=pVc
set MM=MM+1
if Qg[yVc]==0 then
if yVc==0 then
call Mau("Nullpointer exception when calling Persistable.save","when calling error in PersistableData, line 168")
else
call Mau("Called Persistable.save on invalid object.","when calling error in PersistableData, line 168")
endif
endif
call jct(yVc,"when calling save in PersistableData, line 168")
set MM=MM-1
endfunction
function llt takes integer clt,integer olt,string Olt returns nothing
set w3[MM]=Olt
set MM=MM+1
call ahc(OBc(clt,olt,"when calling getSlot in PlayerDefinedUnitTypes, line 65"),"when calling reset in PlayerDefinedUnitTypes, line 65")
call eVc(clt,"when calling save in PlayerDefinedUnitTypes, line 66")
set MM=MM-1
endfunction
function GBc takes integer RBc,integer TBc,string YBc returns nothing
set w3[MM]=YBc
set MM=MM+1
if Qg[RBc]==0 then
if RBc==0 then
call Mau("Nullpointer exception when calling PlayerDefinedUnitTypes.flushSlot","when calling error in PlayerDefinedUnitTypes, line 64")
else
call Mau("Called PlayerDefinedUnitTypes.flushSlot on invalid object.","when calling error in PlayerDefinedUnitTypes, line 64")
endif
endif
call llt(RBc,TBc,"when calling flushSlot in PlayerDefinedUnitTypes, line 64")
set MM=MM-1
endfunction
function hKr takes integer YKr,integer GKr,string gKr returns nothing
set w3[MM]=gKr
set MM=MM+1
call GBc(Sa[YKr],GKr,"when calling flushSlot in UnitShops, line 147")
call aKr(YKr,GKr,false,"when calling makeSlotAvailable in UnitShops, line 148")
set MM=MM-1
endfunction
function blS takes integer SlS,integer clS,integer olS,string OlS returns integer
local integer llS
set w3[MM]=OlS
set MM=MM+1
call hKr(h2o(clS,"when calling getPlayerId in UnitShopsBuiltins, line 13"),t8o(N1o(olS,0,"when calling get in UnitShopsBuiltins, line 13"),"when calling intValue in UnitShopsBuiltins, line 13"),"when calling flushCustomUnitTypeSlot in UnitShopsBuiltins, line 13")
set llS=x4u("when calling nullptr in UnitShopsBuiltins, line 14")
set MM=MM-1
return llS
endfunction
function bwi takes integer Swi,integer cwi,integer owi,string Owi returns integer
local integer lwi
set w3[MM]=Owi
set MM=MM+1
call FogEnable(c4o(N1o(owi,0,"when calling get in ScmdFogOfWarBuiltins, line 17"),"when calling booleanValue in ScmdFogOfWarBuiltins, line 17"))
set lwi=x4u("when calling nullptr in ScmdFogOfWarBuiltins, line 18")
set MM=MM-1
return lwi
endfunction
function Q8s takes unit v8s,string m8s returns nothing
call QueueUnitAnimation(v8s,m8s)
endfunction
function bxi takes integer Sxi,integer cxi,integer oxi,string Oxi returns integer
local integer lxi
set w3[MM]=Oxi
set MM=MM+1
call Q8s(W2o(cxi,"when calling getEnumUnit in ScmdUnitBuiltins, line 786"),S9o(N1o(oxi,0,"when calling get in ScmdUnitBuiltins, line 786"),"when calling getInner in ScmdUnitBuiltins, line 786"))
set lxi=x4u("when calling nullptr in ScmdUnitBuiltins, line 787")
set MM=MM-1
return lxi
endfunction
function cGi takes integer rGi,integer sGi,integer tGi,string iGi returns integer
local integer SGi
set w3[MM]=iGi
set MM=MM+1
set SGi=l5i(pMt(x6r(W2o(sGi,"when calling getEnumUnit in ScmdUnitBuiltins, line 604"),c4o(N1o(tGi,0,"when calling get in ScmdUnitBuiltins, line 604"),"when calling booleanValue in ScmdUnitBuiltins, line 604")),"when calling new_Integer in ScmdUnitBuiltins, line 604"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 604")
set MM=MM-1
return SGi
endfunction
function chi takes integer rhi,integer shi,integer thi,string ihi returns integer
local integer Shi
set w3[MM]=ihi
set MM=MM+1
set Shi=l5i(j1t(Hrs(c0o(N1o(thi,0,"when calling get in ScmdUnitBuiltins, line 672"),"when calling getInner in ScmdUnitBuiltins, line 672")),"when calling new_Real in ScmdUnitBuiltins, line 672"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 672")
set MM=MM-1
return Shi
endfunction
function cjt takes integer Jkt,integer Kkt,integer Lkt,string Xkt returns integer
local boolean Ckt
local integer Vkt
local integer Bkt
local integer Nkt
local real Mkt
local integer wjt
local integer ujt
local integer rjt
local integer sjt
local integer tjt
local integer ijt
local integer Sjt
set w3[MM]=Xkt
set MM=MM+1
set Ckt=false
set Vkt=0
set Bkt=L1o(Lkt,"when calling size in ScmdCoreBuiltins, line 27")-1
loop
exitwhen Vkt>Bkt
set ijt=px[N1o(Lkt,Vkt,"when calling get in ScmdCoreBuiltins, line 28")]
if not(ijt==1434 or ijt==1440)then
set Ckt=true
endif
set Vkt=Vkt+1
endloop
set Nkt=1
set Mkt=1.0
if Ckt then
set wjt=0
set ujt=L1o(Lkt,"when calling size in ScmdCoreBuiltins, line 33")-1
loop
exitwhen wjt>ujt
set Mkt=Mkt*h8o(N1o(Lkt,wjt,"when calling get in ScmdCoreBuiltins, line 34"),"when calling realValue in ScmdCoreBuiltins, line 34")
set wjt=wjt+1
endloop
else
set rjt=0
set sjt=L1o(Lkt,"when calling size in ScmdCoreBuiltins, line 36")-1
loop
exitwhen rjt>sjt
set Nkt=Nkt*T8o(N1o(Lkt,rjt,"when calling get in ScmdCoreBuiltins, line 37"),"when calling intValue in ScmdCoreBuiltins, line 37")
set rjt=rjt+1
endloop
endif
if Ckt then
set tjt=j1t(Mkt,"when calling new_Real in ScmdCoreBuiltins, line 38")
else
set tjt=pMt(Nkt,"when calling new_Integer in ScmdCoreBuiltins, line 38")
endif
set Sjt=l5i(tjt,"when calling new_SharedPointer in ScmdCoreBuiltins, line 38")
set MM=MM-1
return Sjt
endfunction
function d7s takes unit n7s returns real
return GetUnitMoveSpeed(n7s)
endfunction
function cli takes integer rli,integer sli,integer tli,string ili returns integer
local integer Sli
set w3[MM]=ili
set MM=MM+1
set Sli=l5i(j1t(d7s(W2o(sli,"when calling getEnumUnit in ScmdUnitBuiltins, line 125")),"when calling new_Real in ScmdUnitBuiltins, line 125"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 125")
set MM=MM-1
return Sli
endfunction
function cui takes integer rui,integer sui,integer tui,string iui returns integer
local integer Sui
set w3[MM]=iui
set MM=MM+1
call mHu(p8o(N1o(tui,0,"when calling get in ScmdItemBuiltins, line 14"),"when calling getInner in ScmdItemBuiltins, line 14"),c4o(N1o(tui,1,"when calling get in ScmdItemBuiltins, line 14"),"when calling booleanValue in ScmdItemBuiltins, line 14"))
set Sui=x4u("when calling nullptr in ScmdItemBuiltins, line 15")
set MM=MM-1
return Sui
endfunction
function A7i takes integer W7i,integer E7i,string Z7i returns integer
local integer U7i
local integer I7i
local integer P7i
set w3[MM]=Z7i
set MM=MM+1
set U7i=eqo(yd[E7i],KK[W7i],"when calling get in ScmdDataTypes, line 281")
if U7i==0 then
set P7i=l5i(H9i("when calling new_Undefined in ScmdDataTypes, line 283"),"when calling new_SharedPointer in ScmdDataTypes, line 283")
set MM=MM-1
return P7i
endif
set I7i=b7o(LK[U7i],"when calling clone in ScmdDataTypes, line 284")
set MM=MM-1
return I7i
endfunction
function d9o takes integer e9o,integer q9o,string a9o returns integer
local integer n9o
set w3[MM]=a9o
set MM=MM+1
if px[e9o]==0 then
if e9o==0 then
call Mau("Nullpointer exception when calling Symbol.resolve","when calling error in ScmdDataTypes, line 280")
else
call Mau("Called Symbol.resolve on invalid object.","when calling error in ScmdDataTypes, line 280")
endif
endif
set n9o=A7i(e9o,q9o,"when calling resolve in ScmdDataTypes, line 280")
set MM=MM-1
return n9o
endfunction
function dEt takes integer pEt,integer eEt,integer qEt,string aEt returns integer
local integer nEt
set w3[MM]=aEt
set MM=MM+1
set nEt=l5i(rAt(h8o(N1o(qEt,0,"when calling get in ScmdCoreBuiltins, line 276"),"when calling realValue in ScmdCoreBuiltins, line 276")>0.,"when calling new_Boolean in ScmdCoreBuiltins, line 276"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 276")
set MM=MM-1
return nEt
endfunction
function LZS takes string JZS returns integer
local integer KZS
set w3[MM]=JZS
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set KZS=mg
set Qg[KZS]=719
else
call Mau("Out of memory: Could not create RegionData.","when calling error in RegionData, line 27")
set KZS=0
endif
else
set vg=vg-1
set KZS=xg[vg]
set Qg[KZS]=719
endif
set MM=MM-1
return KZS
endfunction
function nbc takes string qbc returns integer
local integer abc
set w3[MM]=qbc
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set abc=mg
set Qg[abc]=726
else
call Mau("Out of memory: Could not create TileData.","when calling error in TerrainData, line 138")
set abc=0
endif
else
set vg=vg-1
set abc=xg[vg]
set Qg[abc]=726
endif
set MM=MM-1
return abc
endfunction
function FZS takes string gZS returns integer
local integer hZS
set w3[MM]=gZS
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set hZS=mg
set Qg[hZS]=722
else
call Mau("Out of memory: Could not create RawcodeTable.","when calling error in RawcodeTable, line 41")
set hZS=0
endif
else
set vg=vg-1
set hZS=xg[vg]
set Qg[hZS]=722
endif
set MM=MM-1
return hZS
endfunction
function Rbt takes integer nbt,string dbt returns nothing
local integer fbt
set w3[MM]=dbt
set MM=MM+1
set fbt=0
set QH[nbt]=fbt
set WH[nbt]=false
set EH[nbt]=false
set ZH[nbt]=HDs("when calling new_HashMap in RawcodeTable, line 48")
set UH[nbt]=rDs("when calling new_HashList in RawcodeTable, line 49")
set MM=MM-1
endfunction
function Fbt takes integer gbt,string hbt returns nothing
set w3[MM]=hbt
set MM=MM+1
call Rbt(gbt,"when calling RawcodeTable_init in RawcodeTable, line 41")
set MM=MM-1
endfunction
function Gbt takes string Tbt returns integer
local integer Ybt
set w3[MM]=Tbt
set MM=MM+1
set Ybt=FZS("when calling alloc_RawcodeTable in RawcodeTable, line 41")
call Fbt(Ybt,"when calling construct_RawcodeTable in RawcodeTable, line 41")
set MM=MM-1
return Ybt
endfunction
function G0S takes integer R0S,string T0S returns nothing
local integer Y0S
set w3[MM]=T0S
set MM=MM+1
set Y0S=0
set tV[R0S]=Y0S
set iV[R0S]=Gbt("when calling new_RawcodeTable in TerrainData, line 142")
set SV[R0S]=a4s("when calling new_LinkedList in TerrainData, line 143")
set MM=MM-1
endfunction
function x0S takes integer k0S,string j0S returns nothing
set w3[MM]=j0S
set MM=MM+1
call G0S(k0S,"when calling TileData_init in TerrainData, line 138")
set MM=MM-1
endfunction
function F0S takes string g0S returns integer
local integer h0S
set w3[MM]=g0S
set MM=MM+1
set h0S=nbc("when calling alloc_TileData in TerrainData, line 138")
call x0S(h0S,"when calling construct_TileData in TerrainData, line 138")
set MM=MM-1
return h0S
endfunction
function Wkr takes integer mkr,integer Qkr returns integer
set h4=Ewu(mkr,Qkr)
return h4
endfunction
function m9S takes integer j9S,string x9S returns nothing
local integer v9S
set w3[MM]=x9S
set MM=MM+1
set v9S=Wkr(0,0)
set uV[j9S]=v9S
set rV[j9S]=F0S("when calling new_TileData in TerrainData, line 210")
set MM=MM-1
endfunction
function I9S takes integer Z9S,string U9S returns nothing
set w3[MM]=U9S
set MM=MM+1
call m9S(Z9S,"when calling TerrainData_init in TerrainData, line 206")
set MM=MM-1
endfunction
function ibc takes string sbc returns integer
local integer tbc
set w3[MM]=sbc
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set tbc=mg
set Qg[tbc]=725
else
call Mau("Out of memory: Could not create TerrainData.","when calling error in TerrainData, line 206")
set tbc=0
endif
else
set vg=vg-1
set tbc=xg[vg]
set Qg[tbc]=725
endif
set MM=MM-1
return tbc
endfunction
function E9S takes string Q9S returns integer
local integer W9S
set w3[MM]=Q9S
set MM=MM+1
set W9S=ibc("when calling alloc_TerrainData in TerrainData, line 206")
call I9S(W9S,"when calling construct_TerrainData in TerrainData, line 206")
set MM=MM-1
return W9S
endfunction
function Zbc takes string Wbc returns integer
local integer Ebc
set w3[MM]=Wbc
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set Ebc=mg
set Qg[Ebc]=721
else
call Mau("Out of memory: Could not create PositionedUnitData.","when calling error in UnitData, line 1376")
set Ebc=0
endif
else
set vg=vg-1
set Ebc=xg[vg]
set Qg[Ebc]=721
endif
set MM=MM-1
return Ebc
endfunction
function TwS takes integer dwS,string fwS returns nothing
local integer RwS
set w3[MM]=fwS
set MM=MM+1
set RwS=0
set pV[dwS]=RwS
set eV[dwS]=rDs("when calling new_HashList in UnitData, line 1382")
set MM=MM-1
endfunction
function xwS takes integer FwS,integer kwS,string jwS returns nothing
set w3[MM]=jwS
set MM=MM+1
call TwS(FwS,"when calling PositionedUnitData_init in UnitData, line 1384")
set yV[FwS]=kwS
set MM=MM-1
endfunction
function hwS takes integer YwS,string GwS returns integer
local integer gwS
set w3[MM]=GwS
set MM=MM+1
set gwS=Zbc("when calling alloc_PositionedUnitData in UnitData, line 1384")
call xwS(gwS,YwS,"when calling construct_PositionedUnitData in UnitData, line 1384")
set MM=MM-1
return gwS
endfunction
function kIu takes integer hIu,integer FIu returns integer
set B1=Ewu(hIu,FIu)
return B1
endfunction
function bhS takes string OhS returns integer
local integer lhS
set w3[MM]=OhS
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set lhS=mg
set Qg[lhS]=720
else
call Mau("Out of memory: Could not create PositionedDestructableData.","when calling error in DestructableData, line 223")
set lhS=0
endif
else
set vg=vg-1
set lhS=xg[vg]
set Qg[lhS]=720
endif
set MM=MM-1
return lhS
endfunction
function Bhs takes integer Xhs,string Chs returns nothing
local integer Vhs
set w3[MM]=Chs
set MM=MM+1
set Vhs=0
set yE[Xhs]=Vhs
set pE[Xhs]=Gbt("when calling new_RawcodeTable in DestructableData, line 227")
set eE[Xhs]=rDs("when calling new_HashList in DestructableData, line 228")
set MM=MM-1
endfunction
function sFs takes integer uFs,string rFs returns nothing
set w3[MM]=rFs
set MM=MM+1
call Bhs(uFs,"when calling PositionedDestructableData_init in DestructableData, line 223")
set MM=MM-1
endfunction
function wFs takes string Nhs returns integer
local integer Mhs
set w3[MM]=Nhs
set MM=MM+1
set Mhs=bhS("when calling alloc_PositionedDestructableData in DestructableData, line 223")
call sFs(Mhs,"when calling construct_PositionedDestructableData in DestructableData, line 223")
set MM=MM-1
return Mhs
endfunction
function Aet takes integer Qet,string Wet returns nothing
local integer Eet
local real Zet
local real Uet
local real Iet
local real Pet
set w3[MM]=Wet
set MM=MM+1
set Eet=kIu(kIu(0,1),2)
set uJ[Qet]=Eet
set rJ[Qet]=Ua
set sJ[Qet]=Ia
set tJ[Qet]=Ua
set iJ[Qet]=Ia
set Zet=0.
set Uet=0.
set SJ[Qet]=Zet
set cJ[Qet]=Uet
set Iet=0.
set Pet=0.
set oJ[Qet]=Iet
set OJ[Qet]=Pet
set lJ[Qet]=d1i("when calling new_StringTable in RegionData, line 41")
set bJ[Qet]=E9S("when calling new_TerrainData in RegionData, line 42")
set yJ[Qet]=wFs("when calling new_PositionedDestructableData in RegionData, line 43")
set pJ[Qet]=hwS(lJ[Qet],"when calling new_PositionedUnitData in RegionData, line 44")
set MM=MM-1
endfunction
function Net takes integer Xet,player Cet,string Vet,string Bet returns nothing
set w3[MM]=Bet
set MM=MM+1
call Wct(Xet,Cet)
call Aet(Xet,"when calling RegionData_init in RegionData, line 46")
set wJ[Xet]=Vet
set MM=MM-1
endfunction
function Let takes player Det,string Het,string Jet returns integer
local integer Ket
set w3[MM]=Jet
set MM=MM+1
set Ket=LZS("when calling alloc_RegionData in RegionData, line 46")
call Net(Ket,Det,Het,"when calling construct_RegionData in RegionData, line 46")
set MM=MM-1
return Ket
endfunction
function iyc takes string syc returns integer
local integer tyc
set w3[MM]=syc
set MM=MM+1
if lg==0 then
if bg<32768 then
set bg=bg+1
set tyc=bg
set yg[tyc]=801
else
call Mau("Out of memory: Could not create ForGroupCallback_forUnitsOfPlayer_PositionedUnitData_UnitData.","when calling error in UnitData, line 1427")
set tyc=0
endif
else
set lg=lg-1
set tyc=Og[lg]
set yg[tyc]=801
endif
set MM=MM-1
return tyc
endfunction
function kcu takes player gcu,integer hcu,string Fcu returns nothing
set w3[MM]=Fcu
set MM=MM+1
call qcu(hcu)
call GroupEnumUnitsOfPlayer(sp,gcu,op)
call ncu("when calling popCallback in ClosureForGroups, line 69")
set MM=MM-1
endfunction
function iwS takes integer C_S,player V_S,rect B_S,real N_S,real M_S,string wwS returns nothing
local integer uwS
local player rwS
local real swS
local real twS
set w3[MM]=wwS
set MM=MM+1
set rwS=V_S
set uwS=iyc("when calling alloc_ForGroupCallback_forUnitsOfPlayer_PositionedUnitData_UnitData in UnitData, line 1427")
set GV[uwS]=B_S
set gV[uwS]=C_S
set swS=N_S
set twS=M_S
set hV[uwS]=swS
set FV[uwS]=twS
call kcu(rwS,uwS,"when calling forUnitsOfPlayer in UnitData, line 1427")
set MM=MM-1
set rwS=null
endfunction
function Boo takes integer Joo,player Koo,rect Loo,real Xoo,real Coo,string Voo returns nothing
set w3[MM]=Voo
set MM=MM+1
if Qg[Joo]==0 then
if Joo==0 then
call Mau("Nullpointer exception when calling PositionedUnitData.scanRect","when calling error in UnitData, line 1426")
else
call Mau("Called PositionedUnitData.scanRect on invalid object.","when calling error in UnitData, line 1426")
endif
endif
call iwS(Joo,Koo,Loo,Xoo,Coo,"when calling scanRect in UnitData, line 1426")
set MM=MM-1
endfunction
function VgS takes integer XgS,string CgS returns nothing
set w3[MM]=CgS
set MM=MM+1
if ag[XgS]==0 then
call Mau("Double free: object of type ForGroupCallbackD","when calling error in ClosureForGroups, line 148")
else
set pg[eg]=XgS
set eg=eg+1
set ag[XgS]=0
endif
set MM=MM-1
endfunction
function UYs takes integer EYs,string ZYs returns nothing
set w3[MM]=ZYs
set MM=MM+1
call VgS(EYs,"when calling dealloc_ForGroupCallbackD in ClosureForGroups, line 148")
set MM=MM-1
endfunction
function ngc takes integer qgc,string agc returns nothing
set w3[MM]=agc
set MM=MM+1
if ag[qgc]==0 then
if qgc==0 then
call Mau("Nullpointer exception when calling ForGroupCallbackD.ForGroupCallbackD","when calling error in ClosureForGroups, line 148")
else
call Mau("Called ForGroupCallbackD.ForGroupCallbackD on invalid object.","when calling error in ClosureForGroups, line 148")
endif
endif
call UYs(qgc,"when calling destroyForGroupCallbackD in ClosureForGroups, line 148")
set MM=MM-1
endfunction
function Pcu takes string Icu returns nothing
set w3[MM]=Icu
set MM=MM+1
set lp=lp-1
call ngc(Op[lp],"when calling dispatch_ForGroupCallbackD_destroyForGroupCallbackD in ClosureForGroups, line 164")
set MM=MM-1
endfunction
function Ucu takes integer Zcu returns nothing
set Op[lp]=Zcu
set lp=lp+1
endfunction
function Bcu takes rect Xcu,integer Ccu,string Vcu returns nothing
set w3[MM]=Vcu
set MM=MM+1
call Ucu(Ccu)
call EnumDestructablesInRect(Xcu,null,uaw)
call Pcu("when calling popCallbackD in ClosureForGroups, line 182")
set MM=MM-1
endfunction
function xhS takes string khS returns integer
local integer jhS
set w3[MM]=khS
set MM=MM+1
if eg==0 then
if qg<32768 then
set qg=qg+1
set jhS=qg
set ag[jhS]=809
else
call Mau("Out of memory: Could not create ForGroupCallbackD_forDestructablesInRect_PositionedDestructableData_DestructableData.","when calling error in DestructableData, line 270")
set jhS=0
endif
else
set eg=eg-1
set jhS=pg[eg]
set ag[jhS]=809
endif
set MM=MM-1
return jhS
endfunction
function Qhs takes integer Yhs,player Ghs,rect ghs,real hhs,real Fhs,string khs returns nothing
local integer jhs
local rect xhs
local real vhs
local real mhs
set w3[MM]=khs
set MM=MM+1
set xhs=ghs
set jhs=xhS("when calling alloc_ForGroupCallbackD_forDestructablesInRect_PositionedDestructableData_DestructableData in DestructableData, line 270")
set TE[jhs]=Ghs
set YE[jhs]=Yhs
set vhs=hhs
set mhs=Fhs
set GE[jhs]=vhs
set gE[jhs]=mhs
call Bcu(xhs,jhs,"when calling forDestructablesInRect in DestructableData, line 270")
set MM=MM-1
set xhs=null
endfunction
function ckc takes integer ukc,player rkc,rect skc,real tkc,real ikc,string Skc returns nothing
set w3[MM]=Skc
set MM=MM+1
if Qg[ukc]==0 then
if ukc==0 then
call Mau("Nullpointer exception when calling PositionedDestructableData.scanRect","when calling error in DestructableData, line 269")
else
call Mau("Called PositionedDestructableData.scanRect on invalid object.","when calling error in DestructableData, line 269")
endif
endif
call Qhs(ukc,rkc,skc,tkc,ikc,"when calling scanRect in DestructableData, line 269")
set MM=MM-1
endfunction
function Tet takes integer det,rect fet,string Ret returns nothing
set w3[MM]=Ret
set MM=MM+1
if KUu(fet)<rJ[det]then
set rJ[det]=KUu(fet)
endif
if XUu(fet)>sJ[det]then
set sJ[det]=XUu(fet)
endif
if VUu(fet)<tJ[det]then
set tJ[det]=VUu(fet)
endif
if NUu(fet)>iJ[det]then
set iJ[det]=NUu(fet)
endif
set oJ[det]=sJ[det]-rJ[det]
set OJ[det]=iJ[det]-tJ[det]
call ckc(yJ[det],VD[det],fet,SJ[det],cJ[det],"when calling scanRect in RegionData, line 111")
call Boo(pJ[det],VD[det],fet,SJ[det],cJ[det],"when calling scanRect in RegionData, line 112")
set MM=MM-1
endfunction
function VMc takes integer LMc,rect XMc,string CMc returns nothing
set w3[MM]=CMc
set MM=MM+1
if Qg[LMc]==0 then
if LMc==0 then
call Mau("Nullpointer exception when calling RegionData.scanRect","when calling error in RegionData, line 98")
else
call Mau("Called RegionData.scanRect on invalid object.","when calling error in RegionData, line 98")
endif
endif
call Tet(LMc,XMc,"when calling scanRect in RegionData, line 98")
set MM=MM-1
endfunction
function xcc takes string kcc returns integer
local integer jcc
set w3[MM]=kcc
set MM=MM+1
if Uk==0 then
if Ik<32768 then
set Ik=Ik+1
set jcc=Ik
set Pk[jcc]=1487
else
call Mau("Out of memory: Could not create PersistableSaveCallback_save_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 129")
set jcc=0
endif
else
set Uk=Uk-1
set jcc=Zk[Uk]
set Pk[jcc]=1487
endif
set MM=MM-1
return jcc
endfunction
function dKi takes integer iKi,integer SKi,integer cKi,string oKi returns integer
local integer OKi
local integer lKi
local integer bKi
local integer yKi
local rect pKi
local integer eKi
local integer qKi
local integer aKi
local integer nKi
set w3[MM]=oKi
set MM=MM+1
set lKi=Let(pa[h2o(SKi,"when calling getPlayerId in SotfrpGuiRegions, line 123")],S9o(N1o(cKi,0,"when calling get in SotfrpGuiRegions, line 123"),"when calling getInner in SotfrpGuiRegions, line 123"),"when calling new_RegionData in SotfrpGuiRegions, line 123")
call KMc(lKi,JGr(h2o(SKi,"when calling getPlayerId in SotfrpGuiRegions, line 123"),"when calling getSelectedOrigin in SotfrpGuiRegions, line 123"),e4,"when calling setOrigin in SotfrpGuiRegions, line 123")
set OKi=lKi
set bKi=vGr(h2o(SKi,"when calling getPlayerId in SotfrpGuiRegions, line 124"),"when calling getSelectedRects in SotfrpGuiRegions, line 124")
set yKi=x1s(bKi,"when calling iterator in SotfrpGuiRegions, line 125")
loop
exitwhen not t1s(yKi)
set pKi=Mvr(r1s(yKi),"when calling rectFromIndex in SotfrpGuiRegions, line 125")
call VMc(OKi,pKi,"when calling scanRect in SotfrpGuiRegions, line 126")
endloop
call c1s(yKi,"when calling close in SotfrpGuiRegions, line 125")
call CAc(bKi,"when calling dispatch_LinkedList_destroyLinkedList in SotfrpGuiRegions, line 127")
set eKi=h2o(SKi,"when calling getPlayerId in SotfrpGuiRegions, line 128")
set nKi=OKi
set qKi=xcc("when calling alloc_PersistableSaveCallback_save_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 129")
set OX[qKi]=eKi
set lX[qKi]=OKi
call bVc(nKi,qKi,"when calling save in SotfrpGuiRegions, line 129")
set aKi=x4u("when calling nullptr in SotfrpGuiRegions, line 132")
set MM=MM-1
set pKi=null
return aKi
endfunction
function GJS takes string TJS returns integer
local integer YJS
set w3[MM]=TJS
set MM=MM+1
if sx==0 then
if tx<32768 then
set tx=tx+1
set YJS=tx
set ix[YJS]=1499
else
call Mau("Out of memory: Could not create RealBinOp_reduceNumbers_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 214")
set YJS=0
endif
else
set sx=sx-1
set YJS=rx[sx]
set ix[YJS]=1499
endif
set MM=MM-1
return YJS
endfunction
function RJS takes string dJS returns integer
local integer fJS
set w3[MM]=dJS
set MM=MM+1
if Mj==0 then
if wx<32768 then
set wx=wx+1
set fJS=wx
set ux[fJS]=1250
else
call Mau("Out of memory: Could not create IntBinOp_reduceNumbers_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 214")
set fJS=0
endif
else
set Mj=Mj-1
set fJS=Nj[Mj]
set ux[fJS]=1250
endif
set MM=MM-1
return fJS
endfunction
function dQt takes integer OQt,integer lQt,integer bQt,string yQt returns integer
local integer pQt
local integer eQt
local integer qQt
local integer aQt
local integer nQt
set w3[MM]=yQt
set MM=MM+1
set aQt=bQt
set pQt=RJS("when calling alloc_IntBinOp_reduceNumbers_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 214")
set nQt=pQt
set eQt=GJS("when calling alloc_RealBinOp_reduceNumbers_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 214")
set qQt=e1u(aQt,1,nQt,1.,eQt,"when calling reduceNumbers in ScmdCoreBuiltins, line 214")
set MM=MM-1
return qQt
endfunction
function qws takes unit bws,unitweaponintegerfield yws,integer pws,integer ews returns boolean
return BlzSetUnitWeaponIntegerField(bws,yws,pws,ews)
endfunction
function olr takes unit ulr,integer rlr,string slr returns boolean
local attacktype tlr=ATTACK_TYPE_NORMAL
local boolean ilr=true
local string Slr=slr
local boolean clr
if Slr=="chaos" then
set tlr=ATTACK_TYPE_CHAOS
elseif Slr=="hero" then
set tlr=ATTACK_TYPE_HERO
elseif Slr=="magic" then
set tlr=ATTACK_TYPE_MAGIC
elseif Slr=="melee" then
set tlr=ATTACK_TYPE_MELEE
elseif Slr=="normal" then
set tlr=ATTACK_TYPE_NORMAL
elseif Slr=="pierce" then
set tlr=ATTACK_TYPE_PIERCE
elseif Slr=="siege" then
set tlr=ATTACK_TYPE_SIEGE
else
set ilr=false
endif
if ilr then
set clr=qws(ulr,UNIT_WEAPON_IF_ATTACK_ATTACK_TYPE,rlr,l7s(tlr))
else
set clr=false
endif
set tlr=null
return clr
endfunction
function dRi takes integer pRi,integer eRi,integer qRi,string aRi returns integer
local integer nRi
set w3[MM]=aRi
set MM=MM+1
set nRi=l5i(rAt(olr(H9o(N1o(qRi,0,"when calling get in ScmdUnitBuiltins, line 456"),"when calling getInner in ScmdUnitBuiltins, line 456"),t8o(N1o(qRi,1,"when calling get in ScmdUnitBuiltins, line 456"),"when calling intValue in ScmdUnitBuiltins, line 456"),S9o(N1o(qRi,2,"when calling get in ScmdUnitBuiltins, line 456"),"when calling getInner in ScmdUnitBuiltins, line 456")),"when calling new_Boolean in ScmdUnitBuiltins, line 456"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 456")
set MM=MM-1
return nRi
endfunction
function T0s takes unit R0s returns nothing
call UnitResetCooldown(R0s)
endfunction
function wlr takes unit VOr returns nothing
local unit BOr=VOr
local unit NOr
local unit MOr
call O9s(BOr,e7s(VOr))
set NOr=BOr
call f9s(NOr,a7s(VOr))
set MOr=NOr
call T0s(MOr)
set BOr=null
set NOr=null
set MOr=null
endfunction
function dai takes integer pai,integer eai,integer qai,string aai returns integer
local integer nai
set w3[MM]=aai
set MM=MM+1
call wlr(H9o(N1o(qai,0,"when calling get in ScmdUnitBuiltins, line 327"),"when calling getInner in ScmdUnitBuiltins, line 327"))
set nai=x4u("when calling nullptr in ScmdUnitBuiltins, line 328")
set MM=MM-1
return nai
endfunction
function ddi takes integer pdi,integer edi,integer qdi,string adi returns integer
local integer ndi
set w3[MM]=adi
set MM=MM+1
call uws(W2o(edi,"when calling getEnumUnit in ScmdUnitBuiltins, line 382"),UNIT_RF_MANA_REGENERATION,I8o(N1o(qdi,0,"when calling get in ScmdUnitBuiltins, line 382"),"when calling realValue in ScmdUnitBuiltins, line 382"))
set ndi=x4u("when calling nullptr in ScmdUnitBuiltins, line 383")
set MM=MM-1
return ndi
endfunction
function dei takes integer pei,integer eei,integer qei,string aei returns integer
local integer nei
set w3[MM]=aei
set MM=MM+1
call v0s(W2o(eei,"when calling getEnumUnit in ScmdUnitBuiltins, line 271"),t8o(N1o(qei,0,"when calling get in ScmdUnitBuiltins, line 271"),"when calling intValue in ScmdUnitBuiltins, line 271"))
set nei=x4u("when calling nullptr in ScmdUnitBuiltins, line 272")
set MM=MM-1
return nei
endfunction
function dii takes integer pii,integer eii,integer qii,string aii returns integer
local integer nii
set w3[MM]=aii
set MM=MM+1
set nii=l5i(j1t(SIu(H8o(N1o(qii,0,"when calling get in ScmdRectBuiltins, line 26"),"when calling getInner in ScmdRectBuiltins, line 26")),"when calling new_Real in ScmdRectBuiltins, line 26"),"when calling new_SharedPointer in ScmdRectBuiltins, line 26")
set MM=MM-1
return nii
endfunction
function dkt takes integer pkt,integer ekt,integer qkt,string akt returns integer
local integer nkt
set w3[MM]=akt
set MM=MM+1
if ea==pa[h2o(ekt,"when calling getPlayerId in ScmdCameraSetupBuiltins, line 28")]then
call CameraSetupApplyForceDuration(p2o(N1o(qkt,0,"when calling get in ScmdCameraSetupBuiltins, line 29"),"when calling getInner in ScmdCameraSetupBuiltins, line 29"),c4o(N1o(qkt,1,"when calling get in ScmdCameraSetupBuiltins, line 29"),"when calling booleanValue in ScmdCameraSetupBuiltins, line 29"),I8o(N1o(qkt,2,"when calling get in ScmdCameraSetupBuiltins, line 29"),"when calling realValue in ScmdCameraSetupBuiltins, line 29"))
endif
set nkt=x4u("when calling nullptr in ScmdCameraSetupBuiltins, line 30")
set MM=MM-1
return nkt
endfunction
function dpi takes integer ppi,integer epi,integer qpi,string api returns integer
local integer npi
set w3[MM]=api
set MM=MM+1
if ea==pa[h2o(epi,"when calling getPlayerId in ScmdUnitBuiltins, line 238")]then
call ClearSelection()
endif
set npi=x4u("when calling nullptr in ScmdUnitBuiltins, line 240")
set MM=MM-1
return npi
endfunction
function dti takes integer cti,integer oti,integer Oti,string lti returns integer
local string bti
local real yti
local camerafield pti
local boolean eti
local string qti
local integer ati
local integer nti
set w3[MM]=lti
set MM=MM+1
set bti=S9o(N1o(Oti,0,"when calling get in ScmdPlayerCameraSettingsBuiltins, line 51"),"when calling getInner in ScmdPlayerCameraSettingsBuiltins, line 51")
set yti=I8o(N1o(Oti,1,"when calling get in ScmdPlayerCameraSettingsBuiltins, line 52"),"when calling realValue in ScmdPlayerCameraSettingsBuiltins, line 52")
set pti=null
set eti=true
set qti=bti
if qti=="dist" or qti=="distance" or qti=="targetdistance" then
set pti=CAMERA_FIELD_TARGET_DISTANCE
elseif qti=="farz" then
set pti=CAMERA_FIELD_FARZ
elseif qti=="aoa" or qti=="angleofattack" then
set pti=CAMERA_FIELD_ANGLE_OF_ATTACK
elseif qti=="fov" or qti=="fieldofview" then
set pti=CAMERA_FIELD_FIELD_OF_VIEW
elseif qti=="roll" then
set pti=CAMERA_FIELD_ROLL
elseif qti=="rot" or qti=="rotation" then
set pti=CAMERA_FIELD_ROTATION
else
set eti=false
endif
if eti then
call M7u(h2o(oti,"when calling getPlayerId in ScmdPlayerCameraSettingsBuiltins, line 71"),pti,yti,"when calling setCameraField in ScmdPlayerCameraSettingsBuiltins, line 71")
endif
if eti then
set ati=x4u("when calling nullptr in ScmdPlayerCameraSettingsBuiltins, line 72")
else
set ati=i8r("when calling makeUnknownCameraSettingException in ScmdPlayerCameraSettingsBuiltins, line 72")
endif
set nti=ati
set MM=MM-1
set pti=null
return nti
endfunction
function rau takes effect wau,real uau returns nothing
call BlzSetSpecialEffectYaw(wau,uau)
endfunction
function eGt takes integer OGt,integer lGt,integer bGt,string yGt returns integer
local integer pGt
set w3[MM]=yGt
set MM=MM+1
call rau(r9o(N1o(bGt,0,"when calling get in SLangSpecialEffectFunctions, line 48"),"when calling getInner in SLangSpecialEffectFunctions, line 48"),I8o(N1o(bGt,1,"when calling get in SLangSpecialEffectFunctions, line 48"),"when calling realValue in SLangSpecialEffectFunctions, line 48"))
set pGt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 49")
set MM=MM-1
return pGt
endfunction
function eZt takes integer OZt,integer lZt,integer bZt,string yZt returns integer
local integer pZt
set w3[MM]=yZt
set MM=MM+1
set pZt=l5i(j1t(GetRandomReal(0.,1.),"when calling new_Real in ScmdCoreBuiltins, line 297"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 297")
set MM=MM-1
return pZt
endfunction
function cWu takes playercolor tWu returns player
local integer iWu=0
local integer SWu=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen iWu>SWu
if LWu(pa[iWu])==tWu then
return pa[iWu]
endif
set iWu=iWu+1
endloop
return null
endfunction
function eci takes integer ici,integer Sci,integer cci,string oci returns integer
local string Oci
local player lci
local string bci
local integer yci
local integer pci
set w3[MM]=oci
set MM=MM+1
set Oci=OFr(S9o(N1o(cci,1,"when calling get in ScmdUnitBuiltins, line 35"),"when calling getInner in ScmdUnitBuiltins, line 35"))
set bci=Oci
if bci=="hostile" then
set lci=pa[PLAYER_NEUTRAL_AGGRESSIVE]
elseif bci=="neutral" then
set lci=pa[PLAYER_NEUTRAL_PASSIVE]
elseif bci=="me" then
set lci=pa[h2o(Sci,"when calling getPlayerId in ScmdUnitBuiltins, line 43")]
else
set lci=cWu(qyu(Oci))
endif
if lci!=null then
call F9s(H9o(N1o(cci,0,"when calling get in ScmdUnitBuiltins, line 47"),"when calling getInner in ScmdUnitBuiltins, line 47"),lci,false)
endif
if lci!=null then
set yci=x4u("when calling nullptr in ScmdUnitBuiltins, line 48")
else
set yci=EOr("when calling newWCNException in ScmdUnitBuiltins, line 48")
endif
set pci=yci
set MM=MM-1
set lci=null
return pci
endfunction
function egt takes integer Sgt,integer cgt,integer ogt,string Ogt returns integer
local unitevent lgt
local string bgt
local integer ygt
local integer pgt
set w3[MM]=Ogt
set MM=MM+1
set lgt=null
set bgt=OFr(S9o(N1o(ogt,2,"when calling get in SLangTriggerFunctions, line 50"),"when calling getInner in SLangTriggerFunctions, line 50"))
if bgt=="spellcast" then
set lgt=EVENT_UNIT_SPELL_CAST
elseif bgt=="spellchannel" then
set lgt=EVENT_UNIT_SPELL_CHANNEL
elseif bgt=="spelleffect" then
set lgt=EVENT_UNIT_SPELL_EFFECT
elseif bgt=="spellendcast" then
set lgt=EVENT_UNIT_SPELL_ENDCAST
elseif bgt=="spellfinish" then
set lgt=EVENT_UNIT_SPELL_FINISH
elseif bgt=="damaged" then
set lgt=EVENT_UNIT_DAMAGED
elseif bgt=="death" then
set lgt=EVENT_UNIT_DEATH
elseif bgt=="decay" then
set lgt=EVENT_UNIT_DECAY
elseif bgt=="pickupitem" then
set lgt=EVENT_UNIT_PICKUP_ITEM
elseif bgt=="useitem" then
set lgt=EVENT_UNIT_USE_ITEM
endif
if lgt!=null then
call Nxr(h9o(N1o(ogt,0,"when calling get in SLangTriggerFunctions, line 72"),"when calling getInner in SLangTriggerFunctions, line 72"),H9o(N1o(ogt,1,"when calling get in SLangTriggerFunctions, line 72"),"when calling getInner in SLangTriggerFunctions, line 72"),lgt)
endif
if lgt!=null then
set ygt=l5i(K3t("when calling new_Null in SLangTriggerFunctions, line 73"),"when calling new_SharedPointer in SLangTriggerFunctions, line 73")
else
set ygt=l5i(qCt("Wrong event name","when calling new_Exception in SLangTriggerFunctions, line 73"),"when calling new_SharedPointer in SLangTriggerFunctions, line 73")
endif
set pgt=ygt
set MM=MM-1
set lgt=null
return pgt
endfunction
function nCS takes string qCS returns integer
local integer aCS
set w3[MM]=qCS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set aCS=yx
set px[aCS]=1429
else
call Mau("Out of memory: Could not create Destructable.","when calling error in ScmdDataTypes, line 832")
set aCS=0
endif
else
set bx=bx-1
set aCS=lx[bx]
set px[aCS]=1429
endif
set MM=MM-1
return aCS
endfunction
function XXt takes integer LXt returns nothing
endfunction
function uCt takes integer MXt,destructable wCt returns nothing
call P_i(MXt,wCt)
call XXt(MXt)
set nK[MXt]=wCt
endfunction
function NXt takes destructable CXt,string VXt returns integer
local integer BXt
set w3[MM]=VXt
set MM=MM+1
set BXt=nCS("when calling alloc_Destructable in ScmdDataTypes, line 838")
call uCt(BXt,CXt)
set MM=MM-1
return BXt
endfunction
function eht takes integer Oht,integer lht,integer bht,string yht returns integer
local integer pht
set w3[MM]=yht
set MM=MM+1
set pht=l5i(NXt(v5o(lht,"when calling getSpellTargetDestructable in SLangTriggerFunctions, line 109"),"when calling new_Destructable in SLangTriggerFunctions, line 109"),"when calling new_SharedPointer in SLangTriggerFunctions, line 109")
set MM=MM-1
return pht
endfunction
function eji takes integer Oji,integer lji,integer bji,string yji returns integer
local integer pji
set w3[MM]=yji
set MM=MM+1
call X6r(W2o(lji,"when calling getEnumUnit in ScmdUnitBuiltins, line 764"))
set pji=x4u("when calling nullptr in ScmdUnitBuiltins, line 765")
set MM=MM-1
return pji
endfunction
function evi takes integer Ovi,integer lvi,integer bvi,string yvi returns integer
local integer pvi
set w3[MM]=yvi
set MM=MM+1
call OLu(H9o(N1o(bvi,0,"when calling get in ScmdUnitBuiltins, line 817"),"when calling getInner in ScmdUnitBuiltins, line 817"),S9o(N1o(bvi,1,"when calling get in ScmdUnitBuiltins, line 817"),"when calling getInner in ScmdUnitBuiltins, line 817"),false)
set pvi=x4u("when calling nullptr in ScmdUnitBuiltins, line 818")
set MM=MM-1
return pvi
endfunction
function ext takes integer Oxt,integer lxt,integer bxt,string yxt returns integer
local integer pxt
set w3[MM]=yxt
set MM=MM+1
call Zgo(1,N1o(bxt,0,"when calling get in ScmdCoreBuiltins, line 110"),"when calling toString in ScmdCoreBuiltins, line 110")
set pxt=l5i(qCt(Snw,"when calling new_Exception in ScmdCoreBuiltins, line 110"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 110")
set MM=MM-1
return pxt
endfunction
function Ulr takes unit vlr,string mlr returns boolean
local heroattribute Qlr=HERO_ATTRIBUTE_STR
local boolean Wlr=true
local string Elr=mlr
local boolean Zlr
if Elr=="str" or Elr=="strength" then
set Qlr=HERO_ATTRIBUTE_STR
elseif Elr=="agi" or Elr=="agility" then
set Qlr=HERO_ATTRIBUTE_AGI
elseif Elr=="int" or Elr=="intelligence" then
set Qlr=HERO_ATTRIBUTE_INT
else
set Wlr=false
endif
if Wlr then
set Zlr=B_s(vlr,UNIT_IF_PRIMARY_ATTRIBUTE,l7s(Qlr))
else
set Zlr=false
endif
set Qlr=null
return Zlr
endfunction
function fGi takes integer eGi,integer qGi,integer aGi,string nGi returns integer
local integer dGi
set w3[MM]=nGi
set MM=MM+1
set dGi=l5i(rAt(Ulr(W2o(qGi,"when calling getEnumUnit in ScmdUnitBuiltins, line 625"),S9o(N1o(aGi,0,"when calling get in ScmdUnitBuiltins, line 625"),"when calling getInner in ScmdUnitBuiltins, line 625")),"when calling new_Boolean in ScmdUnitBuiltins, line 625"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 625")
set MM=MM-1
return dGi
endfunction
function fIt takes integer bIt,integer yIt,integer pIt,string eIt returns integer
local integer qIt
local integer aIt
local integer nIt
local string dIt
set w3[MM]=eIt
set MM=MM+1
set nIt=h2o(yIt,"when calling getPlayerId in ScmdCoreBuiltins, line 378")
set dIt=S9o(N1o(pIt,0,"when calling get in ScmdCoreBuiltins, line 378"),"when calling getInner in ScmdCoreBuiltins, line 378")
call Zgo(1,N8o(s4o(pIt,1,"when calling getPtr in ScmdCoreBuiltins, line 378"),"when calling get in ScmdCoreBuiltins, line 378"),"when calling toString in ScmdCoreBuiltins, line 378")
if H2u(nIt,dIt,Snw,X8o(s4o(pIt,2,"when calling getPtr in ScmdCoreBuiltins, line 378"),"when calling clone in ScmdCoreBuiltins, line 378"),"when calling assign in ScmdCoreBuiltins, line 378")then
set qIt=x4u("when calling nullptr in ScmdCoreBuiltins, line 378")
else
set qIt=l5i(qCt("Symbol is protected","when calling new_Exception in ScmdCoreBuiltins, line 378"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 378")
endif
set aIt=qIt
set MM=MM-1
return aIt
endfunction
function fbi takes integer ebi,integer qbi,integer abi,string nbi returns integer
local integer dbi
set w3[MM]=nbi
set MM=MM+1
call CJu(W2o(qbi,"when calling getEnumUnit in ScmdUnitBuiltins, line 155"),I8o(N1o(abi,0,"when calling get in ScmdUnitBuiltins, line 155"),"when calling realValue in ScmdUnitBuiltins, line 155"))
set dbi=x4u("when calling nullptr in ScmdUnitBuiltins, line 156")
set MM=MM-1
return dbi
endfunction
function fhi takes integer ehi,integer qhi,integer ahi,string nhi returns integer
local integer dhi
set w3[MM]=nhi
set MM=MM+1
call l0s(H9o(N1o(ahi,0,"when calling get in ScmdUnitBuiltins, line 679"),"when calling getInner in ScmdUnitBuiltins, line 679"),kUu(j7s(H9o(N1o(ahi,0,"when calling get in ScmdUnitBuiltins, line 679"),"when calling getInner in ScmdUnitBuiltins, line 679"))+I8o(N1o(ahi,1,"when calling get in ScmdUnitBuiltins, line 679"),"when calling realValue in ScmdUnitBuiltins, line 679"),VT,CT))
set dhi=x4u("when calling nullptr in ScmdUnitBuiltins, line 680")
set MM=MM-1
return dhi
endfunction
function fli takes integer eli,integer qli,integer ali,string nli returns integer
local integer dli
set w3[MM]=nli
set MM=MM+1
call N9s(W2o(qli,"when calling getEnumUnit in ScmdUnitBuiltins, line 130"),I8o(N1o(ali,0,"when calling get in ScmdUnitBuiltins, line 130"),"when calling realValue in ScmdUnitBuiltins, line 130"))
set dli=x4u("when calling nullptr in ScmdUnitBuiltins, line 131")
set MM=MM-1
return dli
endfunction
function fui takes integer eui,integer qui,integer aui,string nui returns integer
local integer dui
set w3[MM]=nui
set MM=MM+1
call Thu(p8o(N1o(aui,0,"when calling get in ScmdItemBuiltins, line 22"),"when calling getInner in ScmdItemBuiltins, line 22"),S9o(N1o(aui,1,"when calling get in ScmdItemBuiltins, line 22"),"when calling getInner in ScmdItemBuiltins, line 22"))
set dui=x4u("when calling nullptr in ScmdItemBuiltins, line 23")
set MM=MM-1
return dui
endfunction
function gEt takes integer fEt,integer REt,integer TEt,string YEt returns integer
local integer GEt
set w3[MM]=YEt
set MM=MM+1
set GEt=l5i(rAt(h8o(N1o(TEt,0,"when calling get in ScmdCoreBuiltins, line 279"),"when calling realValue in ScmdCoreBuiltins, line 279")<0.,"when calling new_Boolean in ScmdCoreBuiltins, line 279"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 279")
set MM=MM-1
return GEt
endfunction
function gFi takes integer dFi,integer fFi,integer RFi,string TFi returns integer
local string YFi
local integer GFi
set w3[MM]=TFi
set MM=MM+1
set YFi=S9o(N1o(RFi,1,"when calling get in ScmdUnitBuiltins, line 709"),"when calling getInner in ScmdUnitBuiltins, line 709")
if YFi!=null then
call P0s(H9o(N1o(RFi,0,"when calling get in ScmdUnitBuiltins, line 711"),"when calling getInner in ScmdUnitBuiltins, line 711"),YFi)
endif
set GFi=x4u("when calling nullptr in ScmdUnitBuiltins, line 712")
set MM=MM-1
return GFi
endfunction
function hws takes unit Tws,unitweaponstringfield Yws,integer Gws,string gws returns boolean
return BlzSetUnitWeaponStringField(Tws,Yws,Gws,gws)
endfunction
function gRi takes integer fRi,integer RRi,integer TRi,string YRi returns integer
local integer GRi
set w3[MM]=YRi
set MM=MM+1
set GRi=l5i(rAt(hws(W2o(RRi,"when calling getEnumUnit in ScmdUnitBuiltins, line 459"),UNIT_WEAPON_SF_ATTACK_PROJECTILE_ART,t8o(N1o(TRi,0,"when calling get in ScmdUnitBuiltins, line 459"),"when calling intValue in ScmdUnitBuiltins, line 459"),S9o(N1o(TRi,1,"when calling get in ScmdUnitBuiltins, line 459"),"when calling getInner in ScmdUnitBuiltins, line 459")),"when calling new_Boolean in ScmdUnitBuiltins, line 459"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 459")
set MM=MM-1
return GRi
endfunction
function gai takes integer fai,integer Rai,integer Tai,string Yai returns integer
local integer Gai
set w3[MM]=Yai
set MM=MM+1
call B0s(W2o(Rai,"when calling getEnumUnit in ScmdUnitBuiltins, line 332"),t8o(N1o(Tai,0,"when calling get in ScmdUnitBuiltins, line 332"),"when calling intValue in ScmdUnitBuiltins, line 332"),t8o(N1o(Tai,1,"when calling get in ScmdUnitBuiltins, line 332"),"when calling intValue in ScmdUnitBuiltins, line 332"))
set Gai=x4u("when calling nullptr in ScmdUnitBuiltins, line 333")
set MM=MM-1
return Gai
endfunction
function gdi takes integer fdi,integer Rdi,integer Tdi,string Ydi returns integer
local integer Gdi
set w3[MM]=Ydi
set MM=MM+1
call uws(H9o(N1o(Tdi,0,"when calling get in ScmdUnitBuiltins, line 385"),"when calling getInner in ScmdUnitBuiltins, line 385"),UNIT_RF_MANA_REGENERATION,I8o(N1o(Tdi,1,"when calling get in ScmdUnitBuiltins, line 385"),"when calling realValue in ScmdUnitBuiltins, line 385"))
set Gdi=x4u("when calling nullptr in ScmdUnitBuiltins, line 386")
set MM=MM-1
return Gdi
endfunction
function gei takes integer fei,integer Rei,integer Tei,string Yei returns integer
local integer Gei
set w3[MM]=Yei
set MM=MM+1
call v0s(H9o(N1o(Tei,0,"when calling get in ScmdUnitBuiltins, line 274"),"when calling getInner in ScmdUnitBuiltins, line 274"),t8o(N1o(Tei,1,"when calling get in ScmdUnitBuiltins, line 274"),"when calling intValue in ScmdUnitBuiltins, line 274"))
set Gei=x4u("when calling nullptr in ScmdUnitBuiltins, line 275")
set MM=MM-1
return Gei
endfunction
function gii takes integer fii,integer Rii,integer Tii,string Yii returns integer
local integer Gii
set w3[MM]=Yii
set MM=MM+1
set Gii=l5i(j1t(oIu(H8o(N1o(Tii,0,"when calling get in ScmdRectBuiltins, line 29"),"when calling getInner in ScmdRectBuiltins, line 29")),"when calling new_Real in ScmdRectBuiltins, line 29"),"when calling new_SharedPointer in ScmdRectBuiltins, line 29")
set MM=MM-1
return Gii
endfunction
function gjt takes integer ojt,integer Ojt,integer ljt,string bjt returns integer
local boolean yjt
local integer pjt
local integer ejt
local integer qjt
local real ajt
local integer njt
local integer djt
local integer fjt
local integer Rjt
local integer Tjt
local integer Yjt
local integer Gjt
set w3[MM]=bjt
set MM=MM+1
set yjt=false
set pjt=0
set ejt=L1o(ljt,"when calling size in ScmdCoreBuiltins, line 42")-1
loop
exitwhen pjt>ejt
set Yjt=px[N1o(ljt,pjt,"when calling get in ScmdCoreBuiltins, line 43")]
if not(Yjt==1434 or Yjt==1440)then
set yjt=true
endif
set pjt=pjt+1
endloop
set qjt=T8o(N1o(ljt,0,"when calling get in ScmdCoreBuiltins, line 45"),"when calling intValue in ScmdCoreBuiltins, line 45")
set ajt=h8o(N1o(ljt,0,"when calling get in ScmdCoreBuiltins, line 46"),"when calling realValue in ScmdCoreBuiltins, line 46")
if yjt then
if L1o(ljt,"when calling size in ScmdCoreBuiltins, line 48")==1 then
set ajt=-ajt
else
set njt=1
set djt=L1o(ljt,"when calling size in ScmdCoreBuiltins, line 51")-1
loop
exitwhen njt>djt
set ajt=ajt-h8o(N1o(ljt,njt,"when calling get in ScmdCoreBuiltins, line 52"),"when calling realValue in ScmdCoreBuiltins, line 52")
set njt=njt+1
endloop
endif
elseif L1o(ljt,"when calling size in ScmdCoreBuiltins, line 54")==1 then
set qjt=-qjt
else
set fjt=1
set Rjt=L1o(ljt,"when calling size in ScmdCoreBuiltins, line 57")-1
loop
exitwhen fjt>Rjt
set qjt=qjt-T8o(N1o(ljt,fjt,"when calling get in ScmdCoreBuiltins, line 58"),"when calling intValue in ScmdCoreBuiltins, line 58")
set fjt=fjt+1
endloop
endif
if yjt then
set Tjt=j1t(ajt,"when calling new_Real in ScmdCoreBuiltins, line 59")
else
set Tjt=pMt(qjt,"when calling new_Integer in ScmdCoreBuiltins, line 59")
endif
set Gjt=hBt(Tjt,"when calling new_GenericSharedPointer in ScmdCoreBuiltins, line 59")
set MM=MM-1
return Gjt
endfunction
function gkt takes integer fkt,integer Rkt,integer Tkt,string Ykt returns integer
local integer Gkt
set w3[MM]=Ykt
set MM=MM+1
if ea==pa[h2o(Rkt,"when calling getPlayerId in ScmdCameraSetupBuiltins, line 33")]then
call CameraSetupApplyForceDurationWithZ(p2o(N1o(Tkt,0,"when calling get in ScmdCameraSetupBuiltins, line 34"),"when calling getInner in ScmdCameraSetupBuiltins, line 34"),I8o(N1o(Tkt,1,"when calling get in ScmdCameraSetupBuiltins, line 34"),"when calling realValue in ScmdCameraSetupBuiltins, line 34"),I8o(N1o(Tkt,2,"when calling get in ScmdCameraSetupBuiltins, line 34"),"when calling realValue in ScmdCameraSetupBuiltins, line 34"))
endif
set Gkt=x4u("when calling nullptr in ScmdCameraSetupBuiltins, line 35")
set MM=MM-1
return Gkt
endfunction
function gpi takes integer fpi,integer Rpi,integer Tpi,string Ypi returns integer
local integer Gpi
set w3[MM]=Ypi
set MM=MM+1
call UnitResetCooldown(W2o(Rpi,"when calling getEnumUnit in ScmdUnitBuiltins, line 243"))
set Gpi=x4u("when calling nullptr in ScmdUnitBuiltins, line 244")
set MM=MM-1
return Gpi
endfunction
function hGi takes integer RGi,integer TGi,integer YGi,string GGi returns integer
local integer gGi
set w3[MM]=GGi
set MM=MM+1
set gGi=l5i(rAt(Ulr(H9o(N1o(YGi,0,"when calling get in ScmdUnitBuiltins, line 627"),"when calling getInner in ScmdUnitBuiltins, line 627"),S9o(N1o(YGi,1,"when calling get in ScmdUnitBuiltins, line 627"),"when calling getInner in ScmdUnitBuiltins, line 627")),"when calling new_Boolean in ScmdUnitBuiltins, line 627"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 627")
set MM=MM-1
return gGi
endfunction
function hRt takes integer dRt,integer fRt,integer RRt,string TRt returns integer
local player YRt
local integer GRt
local integer gRt
set w3[MM]=TRt
set MM=MM+1
set YRt=dAu(qyu(S9o(N1o(RRt,0,"when calling get in SLangPlayerFunctions, line 51"),"when calling getInner in SLangPlayerFunctions, line 51")))
if YRt!=null then
set GRt=l5i(rAt(GetPlayerAlliance(pa[h2o(fRt,"when calling getPlayerId in SLangPlayerFunctions, line 52")],YRt,ALLIANCE_SHARED_VISION),"when calling new_Boolean in SLangPlayerFunctions, line 52"),"when calling new_SharedPointer in SLangPlayerFunctions, line 52")
else
set GRt=TAu("when calling newWCNException in SLangPlayerFunctions, line 52")
endif
set gRt=GRt
set MM=MM-1
set YRt=null
return gRt
endfunction
function hbi takes integer Rbi,integer Tbi,integer Ybi,string Gbi returns integer
local integer gbi
set w3[MM]=Gbi
set MM=MM+1
call CJu(H9o(N1o(Ybi,0,"when calling get in ScmdUnitBuiltins, line 158"),"when calling getInner in ScmdUnitBuiltins, line 158"),I8o(N1o(Ybi,1,"when calling get in ScmdUnitBuiltins, line 158"),"when calling realValue in ScmdUnitBuiltins, line 158"))
set gbi=x4u("when calling nullptr in ScmdUnitBuiltins, line 159")
set MM=MM-1
return gbi
endfunction
function hhi takes integer Rhi,integer Thi,integer Yhi,string Ghi returns integer
local integer ghi
set w3[MM]=Ghi
set MM=MM+1
call f0s(W2o(Thi,"when calling getEnumUnit in ScmdUnitBuiltins, line 683"),kUu(v7s(W2o(Thi,"when calling getEnumUnit in ScmdUnitBuiltins, line 683"))+I8o(N1o(Yhi,0,"when calling get in ScmdUnitBuiltins, line 683"),"when calling realValue in ScmdUnitBuiltins, line 683"),NT,BT))
set ghi=x4u("when calling nullptr in ScmdUnitBuiltins, line 684")
set MM=MM-1
return ghi
endfunction
function hli takes integer Rli,integer Tli,integer Yli,string Gli returns integer
local integer gli
set w3[MM]=Gli
set MM=MM+1
call N9s(H9o(N1o(Yli,0,"when calling get in ScmdUnitBuiltins, line 133"),"when calling getInner in ScmdUnitBuiltins, line 133"),I8o(N1o(Yli,1,"when calling get in ScmdUnitBuiltins, line 133"),"when calling realValue in ScmdUnitBuiltins, line 133"))
set gli=x4u("when calling nullptr in ScmdUnitBuiltins, line 134")
set MM=MM-1
return gli
endfunction
function hui takes integer Rui,integer Tui,integer Yui,string Gui returns integer
local integer gui
set w3[MM]=Gui
set MM=MM+1
call Fhu(p8o(N1o(Yui,0,"when calling get in ScmdItemBuiltins, line 26"),"when calling getInner in ScmdItemBuiltins, line 26"),S9o(N1o(Yui,1,"when calling get in ScmdItemBuiltins, line 26"),"when calling getInner in ScmdItemBuiltins, line 26"))
set gui=x4u("when calling nullptr in ScmdItemBuiltins, line 27")
set MM=MM-1
return gui
endfunction
function i6c takes string s6c returns integer
local integer t6c
set w3[MM]=s6c
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set t6c=NY
set MY[t6c]=790
else
call Mau("Out of memory: Could not create ForForceCallback_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 191")
set t6c=0
endif
else
set BY=BY-1
set t6c=VY[BY]
set MY[t6c]=790
endif
set MM=MM-1
return t6c
endfunction
function ibi takes integer Mli,integer wbi,integer ubi,string rbi returns integer
local real sbi
local integer tbi
set w3[MM]=rbi
set MM=MM+1
if KJu(W2o(wbi,"when calling getEnumUnit in ScmdUnitBuiltins, line 149"))then
set sbi=HJu(W2o(wbi,"when calling getEnumUnit in ScmdUnitBuiltins, line 149"))
else
set sbi=1.
endif
set tbi=l5i(j1t(sbi,"when calling new_Real in ScmdUnitBuiltins, line 149"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 149")
set MM=MM-1
return tbi
endfunction
function kxr takes trigger hxr,widget Fxr returns event
return TriggerRegisterDeathEvent(hxr,Fxr)
endfunction
function igt takes integer wgt,integer ugt,integer rgt,string sgt returns integer
local integer tgt
set w3[MM]=sgt
set MM=MM+1
call kxr(h9o(N1o(rgt,0,"when calling get in SLangTriggerFunctions, line 45"),"when calling getInner in SLangTriggerFunctions, line 45"),c0o(N1o(rgt,1,"when calling get in SLangTriggerFunctions, line 45"),"when calling getInner in SLangTriggerFunctions, line 45"))
set tgt=x4u("when calling nullptr in SLangTriggerFunctions, line 46")
set MM=MM-1
return tgt
endfunction
function iki takes integer wki,integer uki,integer rki,string ski returns integer
local integer tki
set w3[MM]=ski
set MM=MM+1
set tki=l5i(J6i(GetHeroProperName(W2o(uki,"when calling getEnumUnit in ScmdUnitBuiltins, line 731")),"when calling new_String in ScmdUnitBuiltins, line 731"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 731")
set MM=MM-1
return tki
endfunction
function Hgs takes integer Ags,integer Dgs returns nothing
set CW[Ags]=Dgs
endfunction
function Rhc takes integer nhc,integer dhc,string fhc returns nothing
set w3[MM]=fhc
set MM=MM+1
if Qg[nhc]==0 then
if nhc==0 then
call Mau("Nullpointer exception when calling CustomUnitType.setBaseTypeId","when calling error in CustomUnitTypes, line 111")
else
call Mau("Called CustomUnitType.setBaseTypeId on invalid object.","when calling error in CustomUnitTypes, line 111")
endif
endif
call Hgs(nhc,dhc)
set MM=MM-1
endfunction
function ult takes integer BOt,integer NOt,integer MOt,string wlt returns nothing
set w3[MM]=wlt
set MM=MM+1
call Rhc(OBc(BOt,NOt,"when calling getSlot in PlayerDefinedUnitTypes, line 42"),MOt,"when calling setBaseTypeId in PlayerDefinedUnitTypes, line 42")
call eVc(BOt,"when calling save in PlayerDefinedUnitTypes, line 43")
set MM=MM-1
endfunction
function eBc takes integer lBc,integer bBc,integer yBc,string pBc returns nothing
set w3[MM]=pBc
set MM=MM+1
if Qg[lBc]==0 then
if lBc==0 then
call Mau("Nullpointer exception when calling PlayerDefinedUnitTypes.setBaseTypeId","when calling error in PlayerDefinedUnitTypes, line 41")
else
call Mau("Called PlayerDefinedUnitTypes.setBaseTypeId on invalid object.","when calling error in PlayerDefinedUnitTypes, line 41")
endif
endif
call ult(lBc,bBc,yBc,"when calling setBaseTypeId in PlayerDefinedUnitTypes, line 41")
set MM=MM-1
endfunction
function TKr takes integer nKr,integer dKr,integer fKr,string RKr returns nothing
set w3[MM]=RKr
set MM=MM+1
call eBc(Sa[nKr],dKr,fKr,"when calling setBaseTypeId in UnitShops, line 143")
call aKr(nKr,dKr,true,"when calling makeSlotAvailable in UnitShops, line 144")
set MM=MM-1
endfunction
function ilS takes integer wlS,integer ulS,integer rlS,string slS returns integer
local integer tlS
set w3[MM]=slS
set MM=MM+1
call TKr(h2o(ulS,"when calling getPlayerId in UnitShopsBuiltins, line 9"),t8o(N1o(rlS,0,"when calling get in UnitShopsBuiltins, line 9"),"when calling intValue in UnitShopsBuiltins, line 9"),t8o(N1o(rlS,1,"when calling get in UnitShopsBuiltins, line 9"),"when calling intValue in UnitShopsBuiltins, line 9"),"when calling setCustomUnitTypeBaseId in UnitShopsBuiltins, line 9")
set tlS=x4u("when calling nullptr in UnitShopsBuiltins, line 10")
set MM=MM-1
return tlS
endfunction
function int takes integer Vat,integer Bat,integer Nat,string Mat returns integer
local integer wnt
local unit unt
local string rnt
local string snt
local integer tnt
set w3[MM]=Mat
set MM=MM+1
set wnt=h2o(Bat,"when calling getPlayerId in SLangChatSystem, line 207")
set unt=W2o(Bat,"when calling getEnumUnit in SLangChatSystem, line 208")
if IsHeroUnitId(S7s(unt))then
set snt=Y7s(unt)
else
set snt=R7s(unt)
endif
set rnt=snt
call a3c(Ka,wnt,vbu(Fbu(LWu(pa[wnt])),x3,v3)+rnt+"|r: "+S9o(N1o(Nat,0,"when calling get in SLangChatSystem, line 210"),"when calling getInner in SLangChatSystem, line 210"),ea,"when calling send in SLangChatSystem, line 210")
set tnt=x4u("when calling nullptr in SLangChatSystem, line 211")
set MM=MM-1
set unt=null
return tnt
endfunction
function iwi takes integer wwi,integer uwi,integer rwi,string swi returns integer
local integer twi
set w3[MM]=swi
set MM=MM+1
set twi=l5i(rAt(IsFogMaskEnabled(),"when calling new_Boolean in ScmdFogOfWarBuiltins, line 14"),"when calling new_SharedPointer in ScmdFogOfWarBuiltins, line 14")
set MM=MM-1
return twi
endfunction
function ixi takes integer wxi,integer uxi,integer rxi,string sxi returns integer
local integer txi
set w3[MM]=sxi
set MM=MM+1
set txi=l5i(rAt(q8s(H9o(N1o(rxi,0,"when calling get in ScmdUnitBuiltins, line 783"),"when calling getInner in ScmdUnitBuiltins, line 783"),S9o(N1o(rxi,1,"when calling get in ScmdUnitBuiltins, line 783"),"when calling getInner in ScmdUnitBuiltins, line 783"),c0o(N1o(rxi,2,"when calling get in ScmdUnitBuiltins, line 783"),"when calling getInner in ScmdUnitBuiltins, line 783")),"when calling new_Boolean in ScmdUnitBuiltins, line 783"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 783")
set MM=MM-1
return txi
endfunction
function jOi takes integer TOi,integer YOi,integer GOi,string gOi returns integer
local unit hOi
local integer FOi
local integer kOi
set w3[MM]=gOi
set MM=MM+1
set hOi=H9o(N1o(GOi,0,"when calling get in ScmdUnitBuiltins, line 107"),"when calling getInner in ScmdUnitBuiltins, line 107")
if bJu(hOi)then
set FOi=j1t(OJu(hOi),"when calling new_Real in ScmdUnitBuiltins, line 108")
else
set FOi=H9i("when calling new_Undefined in ScmdUnitBuiltins, line 108")
endif
set kOi=hBt(FOi,"when calling new_GenericSharedPointer in ScmdUnitBuiltins, line 108")
set MM=MM-1
set hOi=null
return kOi
endfunction
function jWi takes integer TWi,integer YWi,integer GWi,string gWi returns integer
local unit hWi
local unit FWi
local integer kWi
set w3[MM]=gWi
set MM=MM+1
set hWi=W2o(YWi,"when calling getEnumUnit in SotFRP_AbilitySystem, line 49")
call lpr(hWi,S9o(N1o(GWi,0,"when calling get in SotFRP_AbilitySystem, line 49"),"when calling getInner in SotFRP_AbilitySystem, line 49"),"when calling addAbility in SotFRP_AbilitySystem, line 49")
set FWi=hWi
call hpr(FWi,S9o(N1o(GWi,0,"when calling get in SotFRP_AbilitySystem, line 49"),"when calling getInner in SotFRP_AbilitySystem, line 49"),t8o(N1o(GWi,1,"when calling get in SotFRP_AbilitySystem, line 49"),"when calling intValue in SotFRP_AbilitySystem, line 49"),"when calling setAbilityLevel in SotFRP_AbilitySystem, line 49")
set kWi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 50")
set MM=MM-1
set hWi=null
set FWi=null
return kWi
endfunction
function jYi takes integer GYi,integer gYi,integer hYi,string FYi returns integer
local integer kYi
set w3[MM]=FYi
set MM=MM+1
call Z6r(H9o(N1o(hYi,0,"when calling get in ScmdUnitBuiltins, line 588"),"when calling getInner in ScmdUnitBuiltins, line 588"),t8o(N1o(hYi,1,"when calling get in ScmdUnitBuiltins, line 588"),"when calling intValue in ScmdUnitBuiltins, line 588"))
set kYi=x4u("when calling nullptr in ScmdUnitBuiltins, line 589")
set MM=MM-1
return kYi
endfunction
function eau takes effect yau,real pau returns nothing
call BlzSetSpecialEffectY(yau,pau)
endfunction
function jYt takes integer GYt,integer gYt,integer hYt,string FYt returns integer
local integer kYt
set w3[MM]=FYt
set MM=MM+1
call eau(r9o(N1o(hYt,0,"when calling get in SLangSpecialEffectFunctions, line 23"),"when calling getInner in SLangSpecialEffectFunctions, line 23"),I8o(N1o(hYt,1,"when calling get in SLangSpecialEffectFunctions, line 23"),"when calling realValue in SLangSpecialEffectFunctions, line 23"))
set kYt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 24")
set MM=MM-1
return kYt
endfunction
function jgi takes integer Ggi,integer ggi,integer hgi,string Fgi returns integer
local integer kgi
set w3[MM]=Fgi
set MM=MM+1
set kgi=l5i(j1t(j7s(W2o(ggi,"when calling getEnumUnit in ScmdUnitBuiltins, line 658")),"when calling new_Real in ScmdUnitBuiltins, line 658"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 658")
set MM=MM-1
return kgi
endfunction
function b6c takes string O6c returns integer
local integer l6c
set w3[MM]=O6c
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set l6c=NY
set MY[l6c]=791
else
call Mau("Out of memory: Could not create ForForceCallback_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 210")
set l6c=0
endif
else
set BY=BY-1
set l6c=VY[BY]
set MY[l6c]=791
endif
set MM=MM-1
return l6c
endfunction
function jyi takes integer ayi,integer nyi,integer dyi,string fyi returns integer
local integer Ryi
local group Tyi
local unit Yyi
local group Gyi
local unit gyi
local integer hyi
local integer Fyi
local integer kyi
set w3[MM]=fyi
set MM=MM+1
set Ryi=x4u("when calling nullptr in ScmdUnitBuiltins, line 206")
set Tyi=BQu(pa[h2o(nyi,"when calling getPlayerId in ScmdUnitBuiltins, line 207")],Filter(Naw))
set Yyi=W2o(nyi,"when calling getEnumUnit in ScmdUnitBuiltins, line 208")
set Gyi=yTu(Tyi)
loop
exitwhen not lTu(Gyi)
set gyi=aTu(Gyi)
set hyi=b6c("when calling alloc_ForForceCallback_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 210")
set eL[hyi]=nyi
set qL[hyi]=gyi
set aL[hyi]=dyi
set nL[hyi]=Ryi
call Inu(hyi,"when calling execute in ScmdUnitBuiltins, line 210")
set Fyi=px[f7o(Ryi,"when calling get in ScmdUnitBuiltins, line 216")]
if Fyi>=1422 and Fyi<=1423 then
exitwhen true
endif
endloop
call dTu(Gyi)
call x2o(nyi,Yyi,"when calling setEnumUnit in ScmdUnitBuiltins, line 218")
call STu(Tyi)
set kyi=Ryi
set MM=MM-1
set Tyi=null
set Yyi=null
set Gyi=null
set gyi=null
return kyi
endfunction
function kEi takes integer YEi,integer GEi,integer gEi,string hEi returns integer
local integer FEi
set w3[MM]=hEi
set MM=MM+1
call Epr(H9o(N1o(gEi,0,"when calling get in SotFRP_AbilitySystem, line 76"),"when calling getInner in SotFRP_AbilitySystem, line 76"),S9o(N1o(gEi,1,"when calling get in SotFRP_AbilitySystem, line 76"),"when calling getInner in SotFRP_AbilitySystem, line 76"),t8o(N1o(gEi,2,"when calling get in SotFRP_AbilitySystem, line 76"),"when calling intValue in SotFRP_AbilitySystem, line 76"),t8o(N1o(gEi,3,"when calling get in SotFRP_AbilitySystem, line 76"),"when calling intValue in SotFRP_AbilitySystem, line 76"),"when calling setAbilityManaCost in SotFRP_AbilitySystem, line 76")
set FEi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 77")
set MM=MM-1
return FEi
endfunction
function kSi takes integer YSi,integer GSi,integer gSi,string hSi returns integer
local integer FSi
set w3[MM]=hSi
set MM=MM+1
set FSi=l5i(pMt(GetSoundFileDuration(S9o(N1o(gSi,0,"when calling get in ScmdSoundFunctions, line 31"),"when calling getInner in ScmdSoundFunctions, line 31")),"when calling new_Integer in ScmdSoundFunctions, line 31"),"when calling new_SharedPointer in ScmdSoundFunctions, line 31")
set MM=MM-1
return FSi
endfunction
function kfi takes integer Yfi,integer Gfi,integer gfi,string hfi returns integer
local integer Ffi
set w3[MM]=hfi
set MM=MM+1
set Ffi=l5i(j1t(e_s(W2o(Gfi,"when calling getEnumUnit in ScmdUnitBuiltins, line 413"),t8o(N1o(gfi,0,"when calling get in ScmdUnitBuiltins, line 413"),"when calling intValue in ScmdUnitBuiltins, line 413")),"when calling new_Real in ScmdUnitBuiltins, line 413"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 413")
set MM=MM-1
return Ffi
endfunction
function kni takes integer Yni,integer Gni,integer gni,string hni returns integer
local integer Fni
set w3[MM]=hni
set MM=MM+1
call t_s(H9o(N1o(gni,0,"when calling get in ScmdUnitBuiltins, line 359"),"when calling getInner in ScmdUnitBuiltins, line 359"),t8o(N1o(gni,1,"when calling get in ScmdUnitBuiltins, line 359"),"when calling intValue in ScmdUnitBuiltins, line 359"),t8o(N1o(gni,2,"when calling get in ScmdUnitBuiltins, line 359"),"when calling intValue in ScmdUnitBuiltins, line 359"))
set Fni=x4u("when calling nullptr in ScmdUnitBuiltins, line 360")
set MM=MM-1
return Fni
endfunction
function koi takes integer Yoi,integer Goi,integer goi,string hoi returns integer
local integer Foi
set w3[MM]=hoi
set MM=MM+1
call D9s(H9o(N1o(goi,0,"when calling get in ScmdUnitBuiltins, line 83"),"when calling getInner in ScmdUnitBuiltins, line 83"),wwu(I8o(N1o(goi,1,"when calling get in ScmdUnitBuiltins, line 83"),"when calling realValue in ScmdUnitBuiltins, line 83")))
set Foi=x4u("when calling nullptr in ScmdUnitBuiltins, line 84")
set MM=MM-1
return Foi
endfunction
function kqi takes integer Yqi,integer Gqi,integer gqi,string hqi returns integer
local integer Fqi
set w3[MM]=hqi
set MM=MM+1
set Fqi=l5i(j1t(GetWidgetLife(W2o(Gqi,"when calling getEnumUnit in ScmdUnitBuiltins, line 302")),"when calling new_Real in ScmdUnitBuiltins, line 302"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 302")
set MM=MM-1
return Fqi
endfunction
function lFi takes integer iFi,integer SFi,integer cFi,string oFi returns integer
local integer OFi
set w3[MM]=oFi
set MM=MM+1
set OFi=l5i(rAt(IsUnitType(H9o(N1o(cFi,0,"when calling get in ScmdUnitBuiltins, line 701"),"when calling getInner in ScmdUnitBuiltins, line 701"),UNIT_TYPE_STRUCTURE),"when calling new_Boolean in ScmdUnitBuiltins, line 701"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 701")
set MM=MM-1
return OFi
endfunction
function lIt takes integer tIt,integer iIt,integer SIt,string cIt returns integer
local integer oIt
local integer OIt
set w3[MM]=cIt
set MM=MM+1
if V2u(h2o(iIt,"when calling getPlayerId in ScmdCoreBuiltins, line 376"),S9o(N1o(SIt,0,"when calling get in ScmdCoreBuiltins, line 376"),"when calling getInner in ScmdCoreBuiltins, line 376"),X8o(s4o(SIt,1,"when calling getPtr in ScmdCoreBuiltins, line 376"),"when calling clone in ScmdCoreBuiltins, line 376"),"when calling assign in ScmdCoreBuiltins, line 376")then
set oIt=x4u("when calling nullptr in ScmdCoreBuiltins, line 376")
else
set oIt=l5i(qCt("Symbol is protected","when calling new_Exception in ScmdCoreBuiltins, line 376"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 376")
endif
set OIt=oIt
set MM=MM-1
return OIt
endfunction
function Hcc takes string Acc returns integer
local integer Dcc
set w3[MM]=Acc
set MM=MM+1
if vk==0 then
if mk<32768 then
set mk=mk+1
set Dcc=mk
set Qk[Dcc]=1482
else
call Mau("Out of memory: Could not create PersistableLoadCallback_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 163")
set Dcc=0
endif
else
set vk=vk-1
set Dcc=xk[vk]
set Qk[Dcc]=1482
endif
set MM=MM-1
return Dcc
endfunction
function lLi takes integer CKi,integer VKi,integer BKi,string NKi returns integer
local real MKi
local real wLi
local integer uLi
local integer rLi
local integer sLi
local integer tLi
local integer iLi
local real SLi
local real cLi
local real oLi
local real OLi
set w3[MM]=NKi
set MM=MM+1
set SLi=JGr(h2o(VKi,"when calling getPlayerId in SotfrpGuiRegions, line 159"),"when calling getSelectedOrigin in SotfrpGuiRegions, line 159")
set cLi=e4
set MKi=SLi
set wLi=cLi
set uLi=Let(pa[h2o(VKi,"when calling getPlayerId in SotfrpGuiRegions, line 160")],S9o(N1o(BKi,0,"when calling get in SotfrpGuiRegions, line 160"),"when calling getInner in SotfrpGuiRegions, line 160"),"when calling new_RegionData in SotfrpGuiRegions, line 160")
set rLi=h2o(VKi,"when calling getPlayerId in SotfrpGuiRegions, line 161")
call FZu("Чтение файла и синхронизация данных...",30.,pa[rLi])
set iLi=uLi
set sLi=Hcc("when calling alloc_PersistableLoadCallback_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in SotfrpGuiRegions, line 163")
set qX[sLi]=uLi
set oLi=MKi
set OLi=wLi
set aX[sLi]=oLi
set nX[sLi]=OLi
set dX[sLi]=rLi
call cVc(iLi,sLi,"when calling load in SotfrpGuiRegions, line 163")
set tLi=x4u("when calling nullptr in SotfrpGuiRegions, line 178")
set MM=MM-1
return tLi
endfunction
function lTt takes integer wTt,integer uTt,integer rTt,string sTt returns integer
local player tTt
local integer iTt
local integer STt
local integer cTt
local player oTt
local integer OTt
set w3[MM]=sTt
set MM=MM+1
set oTt=mAu(S9o(N1o(rTt,0,"when calling get in SLangPlayerFunctions, line 90"),"when calling getInner in SLangPlayerFunctions, line 90"),"when calling resolvePlayer in SLangPlayerFunctions, line 90")
set OTt=M1
set tTt=oTt
set iTt=OTt
if iTt==0 then
call SetPlayerAllianceStateAllyBJ(pa[h2o(uTt,"when calling getPlayerId in SLangPlayerFunctions, line 92")],tTt,true)
endif
if iTt!=0 then
set STt=iTt
else
set STt=x4u("when calling nullptr in SLangPlayerFunctions, line 93")
endif
set cTt=STt
set MM=MM-1
set tTt=null
set oTt=null
return cTt
endfunction
function lYi takes integer iYi,integer SYi,integer cYi,string oYi returns integer
local integer OYi
set w3[MM]=oYi
set MM=MM+1
set OYi=l5i(pMt(G6r(W2o(SYi,"when calling getEnumUnit in ScmdUnitBuiltins, line 580"),c4o(N1o(cYi,0,"when calling get in ScmdUnitBuiltins, line 580"),"when calling booleanValue in ScmdUnitBuiltins, line 580")),"when calling new_Integer in ScmdUnitBuiltins, line 580"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 580")
set MM=MM-1
return OYi
endfunction
function d6i takes integer e6i,string q6i,widget a6i,string n6i returns nothing
call V5i(e6i)
set AK[e6i]=AddSpecialEffectTarget(q6i,a6i,n6i)
set DK[e6i]=q6i
endfunction
function p6i takes string o6i,widget O6i,string l6i,string b6i returns integer
local integer y6i
set w3[MM]=b6i
set MM=MM+1
set y6i=eNS("when calling alloc_SpecialEffect in ScmdDataTypes, line 606")
call d6i(y6i,o6i,O6i,l6i)
set MM=MM-1
return y6i
endfunction
function lYt takes integer iYt,integer SYt,integer cYt,string oYt returns integer
local integer OYt
set w3[MM]=oYt
set MM=MM+1
set OYt=l5i(p6i(S9o(N1o(cYt,1,"when calling get in SLangSpecialEffectFunctions, line 12"),"when calling getInner in SLangSpecialEffectFunctions, line 12"),c0o(N1o(cYt,0,"when calling get in SLangSpecialEffectFunctions, line 12"),"when calling getInner in SLangSpecialEffectFunctions, line 12"),S9o(N1o(cYt,2,"when calling get in SLangSpecialEffectFunctions, line 12"),"when calling getInner in SLangSpecialEffectFunctions, line 12"),"when calling new_SpecialEffect in SLangSpecialEffectFunctions, line 12"),"when calling new_SharedPointer in SLangSpecialEffectFunctions, line 12")
set MM=MM-1
return OYt
endfunction
function lgi takes integer igi,integer Sgi,integer cgi,string ogi returns integer
local integer Ogi
set w3[MM]=ogi
set MM=MM+1
set Ogi=l5i(j1t(GetUnitFacing(H9o(N1o(cgi,0,"when calling get in ScmdUnitBuiltins, line 647"),"when calling getInner in ScmdUnitBuiltins, line 647")),"when calling new_Real in ScmdUnitBuiltins, line 647"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 647")
set MM=MM-1
return Ogi
endfunction
function lyi takes integer iyi,integer Syi,integer cyi,string oyi returns integer
local integer Oyi
set w3[MM]=oyi
set MM=MM+1
set Oyi=l5i(pMt(H7s(H9o(N1o(cyi,0,"when calling get in ScmdUnitBuiltins, line 178"),"when calling getInner in ScmdUnitBuiltins, line 178")),"when calling new_Integer in ScmdUnitBuiltins, line 178"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 178")
set MM=MM-1
return Oyi
endfunction
function mFi takes integer hFi,integer FFi,integer kFi,string jFi returns integer
local string xFi
local integer vFi
set w3[MM]=jFi
set MM=MM+1
set xFi=S9o(N1o(kFi,0,"when calling get in ScmdUnitBuiltins, line 715"),"when calling getInner in ScmdUnitBuiltins, line 715")
if xFi!=null then
call H0s(W2o(FFi,"when calling getEnumUnit in ScmdUnitBuiltins, line 717"),xFi)
endif
set vFi=x4u("when calling nullptr in ScmdUnitBuiltins, line 718")
set MM=MM-1
return vFi
endfunction
function mGi takes integer FGi,integer kGi,integer jGi,string xGi returns integer
local integer vGi
set w3[MM]=xGi
set MM=MM+1
call nKu(W2o(kGi,"when calling getEnumUnit in ScmdUnitBuiltins, line 631"),c4o(N1o(jGi,0,"when calling get in ScmdUnitBuiltins, line 631"),"when calling booleanValue in ScmdUnitBuiltins, line 631"),c4o(N1o(jGi,1,"when calling get in ScmdUnitBuiltins, line 631"),"when calling booleanValue in ScmdUnitBuiltins, line 631"))
set vGi=x4u("when calling nullptr in ScmdUnitBuiltins, line 632")
set MM=MM-1
return vGi
endfunction
function mIi takes integer TIi,integer YIi,integer GIi,string gIi returns integer
local unit hIi
local integer FIi
local integer kIi
local integer jIi
local integer xIi
local integer vIi
set w3[MM]=gIi
set MM=MM+1
set hIi=H9o(N1o(GIi,0,"when calling get in SotfrpGuiCoreUnit, line 93"),"when calling getInner in SotfrpGuiCoreUnit, line 93")
set FIi=h2o(YIi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 94")
set kIi=d1i("when calling new_StringTable in SotfrpGuiCoreUnit, line 95")
set jIi=FcS(kIi,"when calling new_SingleUnitData in SotfrpGuiCoreUnit, line 96")
call llo(jIi,hIi,"when calling build in SotfrpGuiCoreUnit, line 96")
set xIi=jIi
call dlo(xIi,pa[FIi],F7s(Ofr(FIi)),h3,GetUnitFacing(hIi),"when calling create in SotfrpGuiCoreUnit, line 96")
call Slo(xIi,"when calling dispatch_SingleUnitData_destroySingleUnitData in SotfrpGuiCoreUnit, line 96")
call Cro(kIi,"when calling dispatch_StringTable_destroyStringTable in SotfrpGuiCoreUnit, line 97")
set vIi=x4u("when calling nullptr in SotfrpGuiCoreUnit, line 99")
set MM=MM-1
set hIi=null
return vIi
endfunction
function O9o takes integer c9o,string o9o returns nothing
set w3[MM]=o9o
set MM=MM+1
if px[c9o]==0 then
if c9o==0 then
call Mau("Nullpointer exception when calling Symbol.Symbol","when calling error in ScmdDataTypes, line 242")
else
call Mau("Called Symbol.Symbol on invalid object.","when calling error in ScmdDataTypes, line 242")
endif
endif
call Q7i(c9o,"when calling destroySymbol in ScmdDataTypes, line 242")
set MM=MM-1
endfunction
function H7i takes integer D7i returns nothing
endfunction
function B7i takes integer C7i,string V7i returns nothing
call H7i(C7i)
set KK[C7i]=V7i
endfunction
function PNS takes string UNS returns integer
local integer INS
set w3[MM]=UNS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set INS=yx
set px[INS]=1447
else
call Mau("Out of memory: Could not create Symbol.","when calling error in ScmdDataTypes, line 242")
set INS=0
endif
else
set bx=bx-1
set INS=lx[bx]
set px[INS]=1447
endif
set MM=MM-1
return INS
endfunction
function X7i takes string J7i,string K7i returns integer
local integer L7i
set w3[MM]=K7i
set MM=MM+1
set L7i=PNS("when calling alloc_Symbol in ScmdDataTypes, line 253")
call B7i(L7i,J7i)
set MM=MM-1
return L7i
endfunction
function mIt takes integer RIt,integer TIt,integer YIt,string GIt returns integer
local integer gIt
local integer hIt
local integer FIt
local integer kIt
local integer jIt
local integer xIt
local integer vIt
set w3[MM]=GIt
set MM=MM+1
set gIt=X7i(S9o(N1o(YIt,1,"when calling get in ScmdCoreBuiltins, line 381"),"when calling getInner in ScmdCoreBuiltins, line 381"),"when calling new_Symbol in ScmdCoreBuiltins, line 381")
set hIt=d9o(gIt,h2o(TIt,"when calling getPlayerId in ScmdCoreBuiltins, line 382"),"when calling resolve in ScmdCoreBuiltins, line 382")
call O9o(gIt,"when calling dispatch_Symbol_destroySymbol in ScmdCoreBuiltins, line 383")
set xIt=px[f7o(hIt,"when calling get in ScmdCoreBuiltins, line 384")]
if(xIt>=1415 and xIt<=1417)or(xIt>=1417 and xIt<=1420)then
if V2u(h2o(TIt,"when calling getPlayerId in ScmdCoreBuiltins, line 384"),S9o(N1o(YIt,0,"when calling get in ScmdCoreBuiltins, line 384"),"when calling getInner in ScmdCoreBuiltins, line 384"),b7o(hIt,"when calling clone in ScmdCoreBuiltins, line 384"),"when calling assign in ScmdCoreBuiltins, line 384")then
set kIt=x4u("when calling nullptr in ScmdCoreBuiltins, line 384")
else
set kIt=Y4u("Symbol is protected","when calling wrap in ScmdCoreBuiltins, line 384")
endif
set jIt=kIt
else
set jIt=Y4u("Cannot assign an alias to non-callable","when calling wrap in ScmdCoreBuiltins, line 384")
endif
set FIt=jIt
call KGo(5,hIt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdCoreBuiltins, line 385")
set vIt=FIt
set MM=MM-1
return vIt
endfunction
function mRt takes integer FRt,integer kRt,integer jRt,string xRt returns integer
local integer vRt
set w3[MM]=xRt
set MM=MM+1
if ea==pa[h2o(kRt,"when calling getPlayerId in SLangPlayerFunctions, line 56")]then
call SetCameraField(CAMERA_FIELD_TARGET_DISTANCE,I8o(N1o(jRt,0,"when calling get in SLangPlayerFunctions, line 57"),"when calling realValue in SLangPlayerFunctions, line 57"),2.)
endif
set vRt=l5i(K3t("when calling new_Null in SLangPlayerFunctions, line 58"),"when calling new_SharedPointer in SLangPlayerFunctions, line 58")
set MM=MM-1
return vRt
endfunction
function mTi takes integer gTi,integer hTi,integer FTi,string kTi returns integer
local unit jTi
local integer xTi
local integer vTi
set w3[MM]=kTi
set MM=MM+1
set jTi=H9o(N1o(FTi,0,"when calling get in ScmdUnitBuiltins, line 559"),"when calling getInner in ScmdUnitBuiltins, line 559")
set xTi=t8o(N1o(FTi,1,"when calling get in ScmdUnitBuiltins, line 560"),"when calling intValue in ScmdUnitBuiltins, line 560")
if xTi>=p6r(jTi)then
call n6r(jTi,xTi,false)
else
call R6r(jTi,p6r(jTi)-xTi)
endif
set vTi=x4u("when calling nullptr in ScmdUnitBuiltins, line 565")
set MM=MM-1
set jTi=null
return vTi
endfunction
function W8o takes integer v8o,string m8o returns integer
local integer Q8o
set w3[MM]=m8o
set MM=MM+1
if px[v8o]==0 then
if v8o==0 then
call Mau("Nullpointer exception when calling Real.intValue","when calling error in ScmdDataTypes, line 470")
else
call Mau("Called Real.intValue on invalid object.","when calling error in ScmdDataTypes, line 470")
endif
endif
if px[v8o]<=1435 then
if px[v8o]<=1434 then
set Q8o=cMt(v8o)
else
set Q8o=R1t(v8o)
endif
elseif px[v8o]<=1439 then
set Q8o=R1t(v8o)
else
set Q8o=cMt(v8o)
endif
set MM=MM-1
return Q8o
endfunction
function mZt takes integer GZt,integer gZt,integer hZt,string FZt returns integer
local integer kZt
local integer jZt
local integer xZt
local integer vZt
set w3[MM]=FZt
set MM=MM+1
set kZt=W8o(N1o(hZt,0,"when calling get in ScmdCoreBuiltins, line 303"),"when calling intValue in ScmdCoreBuiltins, line 303")
if kZt==0 then
set xZt=0
else
if kZt>0 then
set jZt=GetRandomInt(0,kZt-1)
else
set jZt=GetRandomInt(kZt+1,0)
endif
set xZt=jZt
endif
set vZt=l5i(pMt(xZt,"when calling new_Integer in ScmdCoreBuiltins, line 304"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 304")
set MM=MM-1
return vZt
endfunction
function mat takes integer Gat,integer gat,integer hat,string Fat returns integer
local boolean kat
local string jat
local integer xat
local integer vat
set w3[MM]=Fat
set MM=MM+1
set kat=true
set jat=bFr(S9o(N1o(hat,0,"when calling get in SLangChatSystem, line 181"),"when calling getInner in SLangChatSystem, line 181"))
if jat=="IC" then
call a3c(Ka,h2o(gat,"when calling getPlayerId in SLangChatSystem, line 183"),S9o(N1o(hat,1,"when calling get in SLangChatSystem, line 183"),"when calling getInner in SLangChatSystem, line 183"),ea,"when calling send in SLangChatSystem, line 183")
elseif jat=="OOC" then
call a3c(La,h2o(gat,"when calling getPlayerId in SLangChatSystem, line 185"),S9o(N1o(hat,1,"when calling get in SLangChatSystem, line 185"),"when calling getInner in SLangChatSystem, line 185"),ea,"when calling send in SLangChatSystem, line 185")
else
set kat=false
endif
if kat then
set xat=x4u("when calling nullptr in SLangChatSystem, line 188")
else
set xat=l5i(qCt("Wrong channel","when calling new_Exception in SLangChatSystem, line 188"),"when calling new_SharedPointer in SLangChatSystem, line 188")
endif
set vat=xat
set MM=MM-1
return vat
endfunction
function mbi takes integer Fbi,integer kbi,integer jbi,string xbi returns integer
local integer vbi
set w3[MM]=xbi
set MM=MM+1
call RKu(W2o(kbi,"when calling getEnumUnit in ScmdUnitBuiltins, line 162"),I8o(N1o(jbi,0,"when calling get in ScmdUnitBuiltins, line 162"),"when calling realValue in ScmdUnitBuiltins, line 162"))
set vbi=x4u("when calling nullptr in ScmdUnitBuiltins, line 163")
set MM=MM-1
return vbi
endfunction
function mhi takes integer Fhi,integer khi,integer jhi,string xhi returns integer
local integer vhi
set w3[MM]=xhi
set MM=MM+1
call f0s(H9o(N1o(jhi,0,"when calling get in ScmdUnitBuiltins, line 686"),"when calling getInner in ScmdUnitBuiltins, line 686"),kUu(v7s(H9o(N1o(jhi,0,"when calling get in ScmdUnitBuiltins, line 686"),"when calling getInner in ScmdUnitBuiltins, line 686"))+I8o(N1o(jhi,1,"when calling get in ScmdUnitBuiltins, line 686"),"when calling realValue in ScmdUnitBuiltins, line 686"),NT,BT))
set vhi=x4u("when calling nullptr in ScmdUnitBuiltins, line 687")
set MM=MM-1
return vhi
endfunction
function mli takes integer Fli,integer kli,integer jli,string xli returns integer
local integer vli
set w3[MM]=xli
set MM=MM+1
set vli=l5i(j1t(E7s(W2o(kli,"when calling getEnumUnit in ScmdUnitBuiltins, line 137")),"when calling new_Real in ScmdUnitBuiltins, line 137"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 137")
set MM=MM-1
return vli
endfunction
function mui takes integer Fui,integer kui,integer jui,string xui returns integer
local integer vui
set w3[MM]=xui
set MM=MM+1
call mhu(p8o(N1o(jui,0,"when calling get in ScmdItemBuiltins, line 30"),"when calling getInner in ScmdItemBuiltins, line 30"),S9o(N1o(jui,1,"when calling get in ScmdItemBuiltins, line 30"),"when calling getInner in ScmdItemBuiltins, line 30"))
set vui=x4u("when calling nullptr in ScmdItemBuiltins, line 31")
set MM=MM-1
return vui
endfunction
function nFi takes integer bFi,integer yFi,integer pFi,string eFi returns integer
local string qFi
local integer aFi
set w3[MM]=eFi
set MM=MM+1
set qFi=S9o(N1o(pFi,0,"when calling get in ScmdUnitBuiltins, line 704"),"when calling getInner in ScmdUnitBuiltins, line 704")
if qFi!=null then
call P0s(W2o(yFi,"when calling getEnumUnit in ScmdUnitBuiltins, line 706"),qFi)
endif
set aFi=x4u("when calling nullptr in ScmdUnitBuiltins, line 707")
set MM=MM-1
return aFi
endfunction
function nRt takes integer lRt,integer bRt,integer yRt,string pRt returns integer
local player eRt
local integer qRt
local integer aRt
set w3[MM]=pRt
set MM=MM+1
set eRt=dAu(qyu(S9o(N1o(yRt,0,"when calling get in SLangPlayerFunctions, line 45"),"when calling getInner in SLangPlayerFunctions, line 45")))
if eRt!=null then
call SetPlayerAlliance(pa[h2o(bRt,"when calling getPlayerId in SLangPlayerFunctions, line 47")],eRt,ALLIANCE_SHARED_VISION,c4o(N1o(yRt,1,"when calling get in SLangPlayerFunctions, line 47"),"when calling booleanValue in SLangPlayerFunctions, line 47"))
endif
if eRt!=null then
set qRt=l5i(K3t("when calling new_Null in SLangPlayerFunctions, line 48"),"when calling new_SharedPointer in SLangPlayerFunctions, line 48")
else
set qRt=TAu("when calling newWCNException in SLangPlayerFunctions, line 48")
endif
set aRt=qRt
set MM=MM-1
set eRt=null
return aRt
endfunction
function nki takes integer yki,integer pki,integer eki,string qki returns integer
local integer aki
set w3[MM]=qki
set MM=MM+1
call k8s(W2o(pki,"when calling getEnumUnit in ScmdUnitBuiltins, line 736"))
set aki=x4u("when calling nullptr in ScmdUnitBuiltins, line 737")
set MM=MM-1
return aki
endfunction
function nmt takes integer Omt,integer lmt,integer bmt,string ymt returns integer
local integer pmt
local integer emt
local integer qmt
local boolean amt
set w3[MM]=ymt
set MM=MM+1
set pmt=px[N1o(bmt,0,"when calling get in ScmdCoreBuiltins, line 172")]
if(pmt>=1433 and pmt<=1436)or(pmt>=1439 and pmt<=1440)or(pmt>=1445 and pmt<=1446)then
set emt=px[N1o(bmt,0,"when calling get in ScmdCoreBuiltins, line 172")]
set amt=not((emt>=1434 and emt<=1435)or(emt>=1439 and emt<=1440))
else
set amt=false
endif
set qmt=l5i(rAt(amt,"when calling new_Boolean in ScmdCoreBuiltins, line 172"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 172")
set MM=MM-1
return qmt
endfunction
function nwi takes integer ywi,integer pwi,integer ewi,string qwi returns integer
local integer awi
set w3[MM]=qwi
set MM=MM+1
set awi=l5i(rAt(IsFogEnabled(),"when calling new_Boolean in ScmdFogOfWarBuiltins, line 21"),"when calling new_SharedPointer in ScmdFogOfWarBuiltins, line 21")
set MM=MM-1
return awi
endfunction
function nxi takes integer yxi,integer pxi,integer exi,string qxi returns integer
local integer axi
set w3[MM]=qxi
set MM=MM+1
call Q8s(H9o(N1o(exi,0,"when calling get in ScmdUnitBuiltins, line 789"),"when calling getInner in ScmdUnitBuiltins, line 789"),S9o(N1o(exi,1,"when calling get in ScmdUnitBuiltins, line 789"),"when calling getInner in ScmdUnitBuiltins, line 789"))
set axi=x4u("when calling nullptr in ScmdUnitBuiltins, line 790")
set MM=MM-1
return axi
endfunction
function aXt takes integer bXt,string yXt,integer pXt,string eXt returns nothing
local integer qXt
set w3[MM]=eXt
set MM=MM+1
set qXt=BZc(aK[bXt],Rvr(yXt,"when calling stringToIndex in ScmdDataTypes, line 1221"),"when calling get in ScmdDataTypes, line 1221")
if qXt!=0 then
call KGo(5,qXt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1223")
endif
call OUc(aK[bXt],Rvr(yXt,"when calling stringToIndex in ScmdDataTypes, line 1224"),pXt,"when calling put in ScmdDataTypes, line 1224")
set MM=MM-1
endfunction
function o6o takes integer t6o,string i6o,integer S6o,string c6o returns nothing
set w3[MM]=c6o
set MM=MM+1
if hx[t6o]==0 then
if t6o==0 then
call Mau("Nullpointer exception when calling Context.assign","when calling error in ScmdDataTypes, line 1220")
else
call Mau("Called Context.assign on invalid object.","when calling error in ScmdDataTypes, line 1220")
endif
endif
call aXt(t6o,i6o,S6o,"when calling assign in ScmdDataTypes, line 1220")
set MM=MM-1
endfunction
function Mqu takes effect Bqu,real Nqu returns nothing
call BlzSetSpecialEffectTime(Bqu,Nqu)
endfunction
function oGt takes integer sGt,integer tGt,integer iGt,string SGt returns integer
local integer cGt
set w3[MM]=SGt
set MM=MM+1
call Mqu(r9o(N1o(iGt,0,"when calling get in SLangSpecialEffectFunctions, line 44"),"when calling getInner in SLangSpecialEffectFunctions, line 44"),I8o(N1o(iGt,1,"when calling get in SLangSpecialEffectFunctions, line 44"),"when calling realValue in SLangSpecialEffectFunctions, line 44"))
set cGt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 45")
set MM=MM-1
return cGt
endfunction
function oZt takes integer rZt,integer sZt,integer tZt,string iZt returns integer
local integer SZt
local integer cZt
set w3[MM]=iZt
set MM=MM+1
set SZt=px[N1o(tZt,0,"when calling get in ScmdCoreBuiltins, line 294")]
set cZt=l5i(rAt((SZt>=1434 and SZt<=1435)or(SZt>=1438 and SZt<=1440),"when calling new_Boolean in ScmdCoreBuiltins, line 294"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 294")
set MM=MM-1
return cZt
endfunction
function oht takes integer sht,integer tht,integer iht,string Sht returns integer
local integer cht
set w3[MM]=Sht
set MM=MM+1
set cht=l5i(j1t(Y5o(tht,"when calling getSpellTargetY in SLangTriggerFunctions, line 106"),"when calling new_Real in SLangTriggerFunctions, line 106"),"when calling new_SharedPointer in SLangTriggerFunctions, line 106")
set MM=MM-1
return cht
endfunction
function oji takes integer sji,integer tji,integer iji,string Sji returns integer
local integer cji
set w3[MM]=Sji
set MM=MM+1
call M6r(H9o(N1o(iji,0,"when calling get in ScmdUnitBuiltins, line 760"),"when calling getInner in ScmdUnitBuiltins, line 760"))
set cji=x4u("when calling nullptr in ScmdUnitBuiltins, line 761")
set MM=MM-1
return cji
endfunction
function dFr takes string aFr returns string
local integer nFr=vhr(aFr)
loop
exitwhen not(nFr!=0 and Mhr(aFr,nFr-1)==" ")
set nFr=nFr-1
endloop
return Dhr(aFr,0,nFr)
endfunction
function omt takes integer smt,integer tmt,integer imt,string Smt returns integer
local integer cmt
set w3[MM]=Smt
set MM=MM+1
set cmt=l5i(J6i(dFr(S9o(N1o(imt,0,"when calling get in ScmdCoreBuiltins, line 169"),"when calling getInner in ScmdCoreBuiltins, line 169")),"when calling new_String in ScmdCoreBuiltins, line 169"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 169")
set MM=MM-1
return cmt
endfunction
function ovi takes integer svi,integer tvi,integer ivi,string Svi returns integer
local integer cvi
set w3[MM]=Svi
set MM=MM+1
call OLu(W2o(tvi,"when calling getEnumUnit in ScmdUnitBuiltins, line 814"),S9o(N1o(ivi,0,"when calling get in ScmdUnitBuiltins, line 814"),"when calling getInner in ScmdUnitBuiltins, line 814"),false)
set cvi=x4u("when calling nullptr in ScmdUnitBuiltins, line 815")
set MM=MM-1
return cvi
endfunction
function oxt takes integer sxt,integer txt,integer ixt,string Sxt returns integer
local integer cxt
set w3[MM]=Sxt
set MM=MM+1
set cxt=X8o(s4o(ixt,0,"when calling getPtr in ScmdCoreBuiltins, line 107"),"when calling clone in ScmdCoreBuiltins, line 107")
set MM=MM-1
return cxt
endfunction
function p9o takes integer l9o,string b9o returns string
local string y9o
set w3[MM]=b9o
set MM=MM+1
if px[l9o]==0 then
if l9o==0 then
call Mau("Nullpointer exception when calling Symbol.toString","when calling error in ScmdDataTypes, line 259")
else
call Mau("Called Symbol.toString on invalid object.","when calling error in ScmdDataTypes, line 259")
endif
endif
set y9o=x7i(l9o)
set MM=MM-1
return y9o
endfunction
function pGi takes integer oGi,integer OGi,integer lGi,string bGi returns integer
local integer yGi
set w3[MM]=bGi
set MM=MM+1
set yGi=l5i(pMt(x6r(H9o(N1o(lGi,0,"when calling get in ScmdUnitBuiltins, line 606"),"when calling getInner in ScmdUnitBuiltins, line 606"),c4o(N1o(lGi,1,"when calling get in ScmdUnitBuiltins, line 606"),"when calling booleanValue in ScmdUnitBuiltins, line 606")),"when calling new_Integer in ScmdUnitBuiltins, line 606"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 606")
set MM=MM-1
return yGi
endfunction
function Fnr takes rect hnr returns nothing
call Preload(Ff)
set xf=rgu(pUu((SIu(hnr)-64.)/128.))*128.+64.
set vf=rgu(pUu((oIu(hnr)-64.)/128.))*128.+64.
call EnumDestructablesInRect(hnr,mf,haw)
call Preload(kf)
endfunction
function pUi takes integer cUi,integer oUi,integer OUi,string lUi returns integer
local rect bUi
local integer yUi
set w3[MM]=lUi
set MM=MM+1
call PreloadGenClear()
set bUi=H8o(N1o(OUi,0,"when calling get in SotFRP_SaveLoad, line 154"),"when calling getInner in SotFRP_SaveLoad, line 154")
call Rnr(h2o(oUi,"when calling getPlayerId in SotFRP_SaveLoad, line 155"),bUi,"when calling writeUnits in SotFRP_SaveLoad, line 155")
call xnr(bUi)
call Fnr(bUi)
if ea==pa[h2o(oUi,"when calling getPlayerId in SotFRP_SaveLoad, line 158")]then
call PreloadGenEnd("SotFRP\\Save\\"+S9o(N1o(OUi,1,"when calling get in SotFRP_SaveLoad, line 159"),"when calling getInner in SotFRP_SaveLoad, line 159")+".pld")
endif
set yUi=l5i(K3t("when calling new_Null in SotFRP_SaveLoad, line 160"),"when calling new_SharedPointer in SotFRP_SaveLoad, line 160")
set MM=MM-1
set bUi=null
return yUi
endfunction
function pbi takes integer Sbi,integer cbi,integer obi,string Obi returns integer
local unit lbi
local real bbi
local integer ybi
set w3[MM]=Obi
set MM=MM+1
set lbi=H9o(N1o(obi,0,"when calling get in ScmdUnitBuiltins, line 151"),"when calling getInner in ScmdUnitBuiltins, line 151")
if KJu(lbi)then
set bbi=HJu(lbi)
else
set bbi=1.
endif
set ybi=l5i(j1t(bbi,"when calling new_Real in ScmdUnitBuiltins, line 152"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 152")
set MM=MM-1
set lbi=null
return ybi
endfunction
function phi takes integer ohi,integer Ohi,integer lhi,string bhi returns integer
local integer yhi
set w3[MM]=bhi
set MM=MM+1
call l0s(W2o(Ohi,"when calling getEnumUnit in ScmdUnitBuiltins, line 676"),j7s(W2o(Ohi,"when calling getEnumUnit in ScmdUnitBuiltins, line 676"))+kUu(I8o(N1o(lhi,0,"when calling get in ScmdUnitBuiltins, line 676"),"when calling realValue in ScmdUnitBuiltins, line 676"),VT,CT))
set yhi=x4u("when calling nullptr in ScmdUnitBuiltins, line 677")
set MM=MM-1
return yhi
endfunction
function pli takes integer oli,integer Oli,integer lli,string bli returns integer
local integer yli
set w3[MM]=bli
set MM=MM+1
set yli=l5i(j1t(d7s(H9o(N1o(lli,0,"when calling get in ScmdUnitBuiltins, line 127"),"when calling getInner in ScmdUnitBuiltins, line 127")),"when calling new_Real in ScmdUnitBuiltins, line 127"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 127")
set MM=MM-1
return yli
endfunction
function pri takes integer iri,integer Sri,integer cri,string ori returns integer
local integer Ori
local integer lri
local integer bri
local integer yri
set w3[MM]=ori
set MM=MM+1
set Ori=H0i("when calling new_Vector in ScmdParser, line 148")
set lri=nPt(cri,"when calling iterator in ScmdParser, line 149")
loop
exitwhen not PPs(lri,"when calling hasNext in ScmdParser, line 149")
set bri=EPs(lri,"when calling next in ScmdParser, line 149")
call Ffo(Ori,b7o(bri,"when calling clone in ScmdParser, line 150"),"when calling push in ScmdParser, line 150")
endloop
call HPs(lri,"when calling close in ScmdParser, line 149")
set yri=l5i(Ori,"when calling new_SharedPointer in ScmdParser, line 151")
set MM=MM-1
return yri
endfunction
function pui takes integer oui,integer Oui,integer lui,string bui returns integer
local integer yui
set w3[MM]=bui
set MM=MM+1
call hHu(p8o(N1o(lui,0,"when calling get in ScmdItemBuiltins, line 18"),"when calling getInner in ScmdItemBuiltins, line 18"),c4o(N1o(lui,1,"when calling get in ScmdItemBuiltins, line 18"),"when calling booleanValue in ScmdItemBuiltins, line 18"))
set yui=x4u("when calling nullptr in ScmdItemBuiltins, line 19")
set MM=MM-1
return yui
endfunction
function qEi takes integer lEi,integer bEi,integer yEi,string pEi returns integer
local integer eEi
set w3[MM]=pEi
set MM=MM+1
call hpr(H9o(N1o(yEi,0,"when calling get in SotFRP_AbilitySystem, line 69"),"when calling getInner in SotFRP_AbilitySystem, line 69"),S9o(N1o(yEi,1,"when calling get in SotFRP_AbilitySystem, line 69"),"when calling getInner in SotFRP_AbilitySystem, line 69"),t8o(N1o(yEi,2,"when calling get in SotFRP_AbilitySystem, line 69"),"when calling intValue in SotFRP_AbilitySystem, line 69"),"when calling setAbilityLevel in SotFRP_AbilitySystem, line 69")
set eEi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 70")
set MM=MM-1
return eEi
endfunction
function qSi takes integer lSi,integer bSi,integer ySi,string pSi returns integer
local integer eSi
set w3[MM]=pSi
set MM=MM+1
call StopMusic(c4o(N1o(ySi,0,"when calling get in ScmdSoundFunctions, line 23"),"when calling booleanValue in ScmdSoundFunctions, line 23"))
set eSi=x4u("when calling nullptr in ScmdSoundFunctions, line 24")
set MM=MM-1
return eSi
endfunction
function qTi takes integer lTi,integer bTi,integer yTi,string pTi returns integer
local integer eTi
set w3[MM]=pTi
set MM=MM+1
set eTi=l5i(rAt(xlr(H9o(N1o(yTi,0,"when calling get in ScmdUnitBuiltins, line 548"),"when calling getInner in ScmdUnitBuiltins, line 548"),S9o(N1o(yTi,1,"when calling get in ScmdUnitBuiltins, line 548"),"when calling getInner in ScmdUnitBuiltins, line 548")),"when calling new_Boolean in ScmdUnitBuiltins, line 548"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 548")
set MM=MM-1
return eTi
endfunction
function qfi takes integer lfi,integer bfi,integer yfi,string pfi returns integer
local integer efi
set w3[MM]=pfi
set MM=MM+1
set efi=l5i(rAt(lws(W2o(bfi,"when calling getEnumUnit in ScmdUnitBuiltins, line 408"),UNIT_WEAPON_BF_ATTACKS_ENABLED,t8o(N1o(yfi,0,"when calling get in ScmdUnitBuiltins, line 408"),"when calling intValue in ScmdUnitBuiltins, line 408"),c4o(N1o(yfi,1,"when calling get in ScmdUnitBuiltins, line 408"),"when calling booleanValue in ScmdUnitBuiltins, line 408")),"when calling new_Boolean in ScmdUnitBuiltins, line 408"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 408")
set MM=MM-1
return efi
endfunction
function qni takes integer lni,integer bni,integer yni,string pni returns integer
local integer eni
set w3[MM]=pni
set MM=MM+1
set eni=l5i(pMt(c_s(H9o(N1o(yni,0,"when calling get in ScmdUnitBuiltins, line 353"),"when calling getInner in ScmdUnitBuiltins, line 353"),t8o(N1o(yni,1,"when calling get in ScmdUnitBuiltins, line 353"),"when calling intValue in ScmdUnitBuiltins, line 353")),"when calling new_Integer in ScmdUnitBuiltins, line 353"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 353")
set MM=MM-1
return eni
endfunction
function ogu takes integer igu,integer Sgu,real cgu returns integer
return pUu(igu*(1.-cgu)+Sgu*cgu)
endfunction
function Cbu takes integer Abu,integer Dbu,integer Hbu,integer Jbu,integer Kbu,integer Lbu,real Xbu returns integer
set E3=ogu(Abu,Jbu,Xbu)
set Z3=ogu(Dbu,Kbu,Xbu)
set U3=ogu(Hbu,Lbu,Xbu)
return E3
endfunction
function qnt takes integer Snt,integer cnt,integer ont,string Ont returns integer
local integer lnt
local unit bnt
local string ynt
local string pnt
local integer ent
set w3[MM]=Ont
set MM=MM+1
set lnt=h2o(cnt,"when calling getPlayerId in SLangChatSystem, line 214")
set bnt=W2o(cnt,"when calling getEnumUnit in SLangChatSystem, line 215")
if IsHeroUnitId(S7s(bnt))then
set pnt=Y7s(bnt)
else
set pnt=R7s(bnt)
endif
set ynt=pnt
call a3c(Ka,lnt,vbu(Cbu(Fbu(LWu(pa[lnt])),x3,v3,Pbu(Gp,gp,hp,Fp),Q3,W3,0.25),Z3,U3)+ynt+"|r "+vbu(Cbu(Pbu(fp,Rp,Tp,Yp),Q3,W3,Pbu(Gp,gp,hp,Fp),Q3,W3,0.25),Z3,U3)+S9o(N1o(ont,0,"when calling get in SLangChatSystem, line 217"),"when calling getInner in SLangChatSystem, line 217")+"|r",ea,"when calling send in SLangChatSystem, line 217")
set ent=x4u("when calling nullptr in SLangChatSystem, line 218")
set MM=MM-1
set bnt=null
return ent
endfunction
function qoi takes integer loi,integer boi,integer yoi,string poi returns integer
local integer eoi
set w3[MM]=poi
set MM=MM+1
call UHu(H9o(N1o(yoi,0,"when calling get in ScmdUnitBuiltins, line 76"),"when calling getInner in ScmdUnitBuiltins, line 76"),c4o(N1o(yoi,1,"when calling get in ScmdUnitBuiltins, line 76"),"when calling booleanValue in ScmdUnitBuiltins, line 76"))
set eoi=x4u("when calling nullptr in ScmdUnitBuiltins, line 77")
set MM=MM-1
return eoi
endfunction
function qqi takes integer lqi,integer bqi,integer yqi,string pqi returns integer
local integer eqi
set w3[MM]=pqi
set MM=MM+1
call SetWidgetLife(W2o(bqi,"when calling getEnumUnit in ScmdUnitBuiltins, line 295"),I8o(N1o(yqi,0,"when calling get in ScmdUnitBuiltins, line 295"),"when calling realValue in ScmdUnitBuiltins, line 295"))
set eqi=x4u("when calling nullptr in ScmdUnitBuiltins, line 296")
set MM=MM-1
return eqi
endfunction
function Dws takes integer Aws returns string
return LT[Aws]
endfunction
function s4i takes integer r4i returns nothing
endfunction
function o4i takes integer t4i,string i4i,integer S4i,integer c4i returns nothing
call s4i(t4i)
set gC[t4i]=i4i
set hC[t4i]=S4i
set FC[t4i]=c4i
endfunction
function rlc takes string wlc returns integer
local integer ulc
set w3[MM]=wlc
set MM=MM+1
if av==0 then
if nv<32768 then
set nv=nv+1
set ulc=nv
set dv[ulc]=1587
else
call Mau("Out of memory: Could not create StringIterator.","when calling error in String, line 213")
set ulc=0
endif
else
set av=av-1
set ulc=qv[av]
set dv[ulc]=1587
endif
set MM=MM-1
return ulc
endfunction
function H1i takes string U1i,integer I1i,integer P1i,string A1i returns integer
local integer D1i
set w3[MM]=A1i
set MM=MM+1
set D1i=rlc("when calling alloc_StringIterator in String, line 218")
call o4i(D1i,U1i,I1i,P1i)
set MM=MM-1
return D1i
endfunction
function LFr takes string HFr,string JFr returns integer
local integer KFr
set w3[MM]=JFr
set MM=MM+1
set KFr=H1i(HFr,0,vhr(HFr),"when calling new_StringIterator in String, line 211")
set MM=MM-1
return KFr
endfunction
function ilc takes integer slc,string tlc returns nothing
set w3[MM]=tlc
set MM=MM+1
if dv[slc]==0 then
call Mau("Double free: object of type StringIterator","when calling error in String, line 213")
else
set qv[av]=slc
set av=av+1
set dv[slc]=0
endif
set MM=MM-1
endfunction
function l4i takes integer O4i returns nothing
endfunction
function u4i takes integer M1i,string w4i returns nothing
set w3[MM]=w4i
set MM=MM+1
call l4i(M1i)
call ilc(M1i,"when calling dealloc_StringIterator in String, line 213")
set MM=MM-1
endfunction
function kso takes integer hso,string Fso returns nothing
set w3[MM]=Fso
set MM=MM+1
if dv[hso]==0 then
if hso==0 then
call Mau("Nullpointer exception when calling StringIterator.StringIterator","when calling error in String, line 213")
else
call Mau("Called StringIterator.StringIterator on invalid object.","when calling error in String, line 213")
endif
endif
call u4i(hso,"when calling destroyStringIterator in String, line 213")
set MM=MM-1
endfunction
function N1i takes integer V1i,string B1i returns nothing
set w3[MM]=B1i
set MM=MM+1
call kso(V1i,"when calling dispatch_StringIterator_destroyStringIterator in String, line 232")
set MM=MM-1
endfunction
function Pso takes integer Uso,string Iso returns nothing
set w3[MM]=Iso
set MM=MM+1
if dv[Uso]==0 then
if Uso==0 then
call Mau("Nullpointer exception when calling StringIterator.close","when calling error in String, line 231")
else
call Mau("Called StringIterator.close on invalid object.","when calling error in String, line 231")
endif
endif
call N1i(Uso,"when calling close in String, line 231")
set MM=MM-1
endfunction
function Pws takes string Wws,integer Ews,string Zws returns integer
local string Uws
local integer Iws
set w3[MM]=Zws
set MM=MM+1
set Uws=Mhr(Wws,Ews)
set Iws=0
loop
exitwhen Iws>255
if Uws==LT[Iws]then
set MM=MM-1
set Z9=Iws
return Z9
endif
set Iws=Iws+1
endloop
call Mau("Invalid utf-8 code unit in string \""+Wws+"\" at index "+tgu(Ews),"when calling error in Utf8CodeUnit, line 38")
set MM=MM-1
set Z9=-1
return Z9
endfunction
function Vws takes integer Cws returns boolean
return Cws>=128 and Cws<192
endfunction
function C1i takes integer L1i returns string
local string X1i=Dhr(gC[L1i],hC[L1i],hC[L1i]+1)
set hC[L1i]=hC[L1i]+1
return X1i
endfunction
function Zso takes integer Qso,string Wso returns string
local string Eso
set w3[MM]=Wso
set MM=MM+1
if dv[Qso]==0 then
if Qso==0 then
call Mau("Nullpointer exception when calling StringIterator.next","when calling error in String, line 226")
else
call Mau("Called StringIterator.next on invalid object.","when calling error in String, line 226")
endif
endif
set Eso=C1i(Qso)
set MM=MM-1
return Eso
endfunction
function K1i takes integer J1i returns boolean
return hC[J1i]<FC[J1i]
endfunction
function mso takes integer jso,string xso returns boolean
local boolean vso
set w3[MM]=xso
set MM=MM+1
if dv[jso]==0 then
if jso==0 then
call Mau("Nullpointer exception when calling StringIterator.hasNext","when calling error in String, line 223")
else
call Mau("Called StringIterator.hasNext on invalid object.","when calling error in String, line 223")
endif
endif
set vso=K1i(jso)
set MM=MM-1
return vso
endfunction
function qvt takes integer tvt,integer ivt,integer Svt,string cvt returns integer
local string ovt
local integer Ovt
local string lvt
local string bvt
local integer yvt
local integer pvt
local integer evt
set w3[MM]=cvt
set MM=MM+1
set ovt=S9o(N1o(Svt,0,"when calling get in ScmdCoreBuiltins, line 135"),"when calling getInner in ScmdCoreBuiltins, line 135")
set Ovt=LFr(ovt,"when calling iterator in ScmdCoreBuiltins, line 136")
set lvt=""
set bvt=""
loop
exitwhen not mso(Ovt,"when calling hasNext in ScmdCoreBuiltins, line 139")
set evt=Pws(Zso(Ovt,"when calling next in ScmdCoreBuiltins, line 140"),0,"when calling utf8CodeUnitAt in ScmdCoreBuiltins, line 140")
set yvt=evt
if not Vws(yvt)then
set lvt=bvt+lvt
set bvt=""
endif
set bvt=bvt+Dws(yvt)
endloop
set lvt=bvt+lvt
call Pso(Ovt,"when calling close in ScmdCoreBuiltins, line 146")
set pvt=l5i(J6i(lvt,"when calling new_String in ScmdCoreBuiltins, line 147"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 147")
set MM=MM-1
return pvt
endfunction
function Vqu takes effect Xqu,real Cqu returns nothing
call BlzSetSpecialEffectTimeScale(Xqu,Cqu)
endfunction
function rGt takes integer BYt,integer NYt,integer MYt,string wGt returns integer
local integer uGt
set w3[MM]=wGt
set MM=MM+1
call Vqu(r9o(N1o(MYt,0,"when calling get in SLangSpecialEffectFunctions, line 40"),"when calling getInner in SLangSpecialEffectFunctions, line 40"),I8o(N1o(MYt,1,"when calling get in SLangSpecialEffectFunctions, line 40"),"when calling realValue in SLangSpecialEffectFunctions, line 40"))
set uGt=x4u("when calling nullptr in SLangSpecialEffectFunctions, line 41")
set MM=MM-1
return uGt
endfunction
function rht takes integer Bgt,integer Ngt,integer Mgt,string wht returns integer
local integer uht
set w3[MM]=wht
set MM=MM+1
set uht=l5i(j1t(e5o(Ngt,"when calling getSpellTargetX in SLangTriggerFunctions, line 103"),"when calling new_Real in SLangTriggerFunctions, line 103"),"when calling new_SharedPointer in SLangTriggerFunctions, line 103")
set MM=MM-1
return uht
endfunction
function rji takes integer Bki,integer Nki,integer Mki,string wji returns integer
local integer uji
set w3[MM]=wji
set MM=MM+1
call M6r(W2o(Nki,"when calling getEnumUnit in ScmdUnitBuiltins, line 757"))
set uji=x4u("when calling nullptr in ScmdUnitBuiltins, line 758")
set MM=MM-1
return uji
endfunction
function qFr takes string yFr returns string
local integer pFr=0
local integer eFr=vhr(yFr)
loop
exitwhen not(pFr<eFr and Mhr(yFr,pFr)==" ")
set pFr=pFr+1
endloop
return Dhr(yFr,pFr,vhr(yFr))
endfunction
function rmt takes integer Bvt,integer Nvt,integer Mvt,string wmt returns integer
local integer umt
set w3[MM]=wmt
set MM=MM+1
set umt=l5i(J6i(qFr(S9o(N1o(Mvt,0,"when calling get in ScmdCoreBuiltins, line 166"),"when calling getInner in ScmdCoreBuiltins, line 166")),"when calling new_String in ScmdCoreBuiltins, line 166"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 166")
set MM=MM-1
return umt
endfunction
function rvi takes integer Bxi,integer Nxi,integer Mxi,string wvi returns integer
local integer uvi
set w3[MM]=wvi
set MM=MM+1
call OLu(H9o(N1o(Mxi,0,"when calling get in ScmdUnitBuiltins, line 810"),"when calling getInner in ScmdUnitBuiltins, line 810"),S9o(N1o(Mxi,1,"when calling get in ScmdUnitBuiltins, line 810"),"when calling getInner in ScmdUnitBuiltins, line 810"),true)
set uvi=x4u("when calling nullptr in ScmdUnitBuiltins, line 811")
set MM=MM-1
return uvi
endfunction
function Sat takes integer rat,integer sat,string tat,string iat returns nothing
set w3[MM]=iat
set MM=MM+1
call a3c(Xa[sat],sat,tat,pa[sat],"when calling send in SLangChatSystem, line 176")
set MM=MM-1
endfunction
function I_o takes integer W_o,integer E_o,string Z_o,string U_o returns nothing
set w3[MM]=U_o
set MM=MM+1
if Rj[W_o]==0 then
if W_o==0 then
call Mau("Nullpointer exception when calling ISystemMessagesReceiver.call","when calling error in ScmdSystemMessaging, line 6")
else
call Mau("Called ISystemMessagesReceiver.call on invalid object.","when calling error in ScmdSystemMessaging, line 6")
endif
endif
call Sat(W_o,E_o,Z_o,"when calling call_registerSystemMessagesReceiver_SLangChatSystem in ScmdSystemMessaging, line 6")
set MM=MM-1
endfunction
function q9r takes integer l9r,string b9r,string y9r returns nothing
local integer p9r
local integer e9r
set w3[MM]=y9r
set MM=MM+1
set p9r=0
set e9r=Zd-1
loop
exitwhen p9r>e9r
call I_o(Ed[p9r],l9r,b9r,"when calling call in ScmdSystemMessaging, line 17")
set p9r=p9r+1
endloop
set MM=MM-1
endfunction
function rxt takes integer Ljt,integer Xjt,integer Cjt,string Vjt returns integer
local string Bjt
local integer Njt
local integer Mjt
local string wxt
local string uxt
set w3[MM]=Vjt
set MM=MM+1
set Bjt=""
if L1o(Cjt,"when calling size in ScmdCoreBuiltins, line 89")>0 then
set wxt=Bjt
call Zgo(1,N1o(Cjt,0,"when calling get in ScmdCoreBuiltins, line 90"),"when calling toString in ScmdCoreBuiltins, line 90")
set Bjt=wxt+Snw
set Njt=1
loop
exitwhen not(Njt<L1o(Cjt,"when calling size in ScmdCoreBuiltins, line 92"))
set uxt=Bjt
call Zgo(1,N1o(Cjt,Njt,"when calling get in ScmdCoreBuiltins, line 93"),"when calling toString in ScmdCoreBuiltins, line 93")
set Bjt=uxt+" "+Snw
set Njt=Njt+1
endloop
endif
call q9r(h2o(Xjt,"when calling getPlayerId in ScmdCoreBuiltins, line 95"),Bjt,"when calling sendSystemMessage in ScmdCoreBuiltins, line 95")
set Mjt=x4u("when calling nullptr in ScmdCoreBuiltins, line 96")
set MM=MM-1
return Mjt
endfunction
function sEi takes integer NWi,integer MWi,integer wEi,string uEi returns integer
local integer rEi
set w3[MM]=uEi
set MM=MM+1
call npr(H9o(N1o(wEi,0,"when calling get in SotFRP_AbilitySystem, line 62"),"when calling getInner in SotFRP_AbilitySystem, line 62"),S9o(N1o(wEi,1,"when calling get in SotFRP_AbilitySystem, line 62"),"when calling getInner in SotFRP_AbilitySystem, line 62"),"when calling removeAbility in SotFRP_AbilitySystem, line 62")
set rEi=x4u("when calling nullptr in SotFRP_AbilitySystem, line 63")
set MM=MM-1
return rEi
endfunction
function sIi takes integer NUi,integer MUi,integer wIi,string uIi returns integer
local integer rIi
set w3[MM]=uIi
set MM=MM+1
set rIi=l5i(j1t(j7s(Ofr(h2o(MUi,"when calling getPlayerId in SotfrpGuiCoreUnit, line 78"))),"when calling new_Real in SotfrpGuiCoreUnit, line 78"),"when calling new_SharedPointer in SotfrpGuiCoreUnit, line 78")
set MM=MM-1
return rIi
endfunction
function DPt takes integer IPt,integer PPt returns boolean
local integer APt=px[PPt]
return APt==1433 or APt==1446 and KJ[IPt]==KJ[PPt]
endfunction
function EXt takes integer QXt,integer WXt returns boolean
return px[WXt]==1429 and nK[QXt]==nK[WXt]
endfunction
function F8i takes integer g8i,integer h8i returns boolean
return px[h8i]==1448 and CK[g8i]==CK[h8i]
endfunction
function F_i takes integer G_i,integer g_i returns boolean
local integer h_i=px[g_i]
return h_i>=1428 and h_i<=1431 and iL[G_i]==iL[g_i]
endfunction
function p1t takes integer l1t,integer b1t returns boolean
local integer y1t=px[b1t]
return(y1t>=1434 and y1t<=1435)or(y1t>=1439 and y1t<=1440)and vK[l1t]==vK[b1t]
endfunction
function L1t takes integer J1t,integer K1t returns boolean
return p1t(J1t,K1t)
endfunction
function M0i takes integer B0i,integer N0i returns boolean
return px[N0i]==1451 and tL[B0i]==tL[N0i]
endfunction
function MBt takes integer BBt,integer NBt returns boolean
return px[NBt]==1425 and hK[BBt]==hK[NBt]
endfunction
function R4t takes integer d4t,integer f4t returns boolean
return px[f4t]==1441 and QK[d4t]==QK[f4t]
endfunction
function T5i takes integer f5i,integer R5i returns boolean
return px[R5i]==1443 and IK[f5i]==IK[R5i]
endfunction
function U5i takes integer E5i,integer Z5i returns boolean
return px[Z5i]==1444 and AK[E5i]==AK[Z5i]
endfunction
function dAt takes integer aAt,integer nAt returns boolean
return DPt(aAt,nAt)
endfunction
function dKt takes integer aKt,integer nKt returns boolean
return px[nKt]==1421 and tK[aKt]==tK[nKt]
endfunction
function i3t takes integer s3t,integer t3t returns boolean
return px[t3t]==1430 and xK[s3t]==xK[t3t]
endfunction
function k6i takes integer g6i,integer h6i returns boolean
local integer F6i=px[h6i]
return(F6i>=1433 and F6i<=1436)or(F6i>=1439 and F6i<=1440)or(F6i>=1445 and F6i<=1446)and HK[g6i]==HK[h6i]
endfunction
function m3t takes integer x3t,integer v3t returns boolean
return false
endfunction
function mNt takes integer jNt,integer xNt returns boolean
local integer vNt=px[xNt]
return vNt>=1426 and vNt<=1431 and FK[jNt]==FK[xNt]
endfunction
function o2t takes integer S2t,integer c2t returns boolean
return px[c2t]==1442 and WK[S2t]==WK[c2t]
endfunction
function r1t takes integer w1t,integer u1t returns boolean
return w1t==u1t
endfunction
function s7i takes integer u7i,integer r7i returns boolean
return k6i(u7i,r7i)
endfunction
function w0i takes integer N9i,integer M9i returns boolean
return px[M9i]==1431 and rL[N9i]==rL[M9i]
endfunction
function wMt takes integer BNt,integer NNt returns boolean
local integer MNt=px[NNt]
return MNt==1434 or MNt==1440 and kK[BNt]==kK[NNt]
endfunction
function x9i takes integer k9i,integer j9i returns boolean
return false
endfunction
function xMt takes integer kMt,integer jMt returns boolean
return wMt(kMt,jMt)
endfunction
function Kgo takes integer Ugo,integer Igo,integer Pgo,string Ago returns nothing
local integer Dgo
local integer Hgo
local boolean Jgo
if Ugo==0 then
set w3[MM]=Ago
set MM=MM+1
if not(px[Pgo]==1450)then
set MM=MM-1
set tnw=false
return
endif
set Dgo=Pgo
if s0o(Igo,"when calling size in ScmdDataTypes, line 1071")!=s0o(Dgo,"when calling size in ScmdDataTypes, line 1071")then
set MM=MM-1
set tnw=false
return
endif
set Hgo=0
loop
exitwhen not(Hgo<s0o(Igo,"when calling size in ScmdDataTypes, line 1074"))
call Kgo(1,f7o(M9o(Igo,Hgo,"when calling get in ScmdDataTypes, line 1075"),"when calling get in ScmdDataTypes, line 1075"),f7o(M9o(Dgo,Hgo,"when calling get in ScmdDataTypes, line 1075"),"when calling get in ScmdDataTypes, line 1075"),"when calling equals in ScmdDataTypes, line 1075")
if not tnw then
set MM=MM-1
set tnw=false
return
endif
set Hgo=Hgo+1
endloop
set MM=MM-1
set tnw=true
return
elseif Ugo==1 then
set w3[MM]=Ago
set MM=MM+1
if px[Igo]==0 then
if Igo==0 then
call Mau("Nullpointer exception when calling Object.equals","when calling error in ScmdDataTypes, line 59")
else
call Mau("Called Object.equals on invalid object.","when calling error in ScmdDataTypes, line 59")
endif
endif
if px[Igo]<=1437 then
if px[Igo]<=1430 then
if px[Igo]<=1425 then
if px[Igo]<=1421 then
if px[Igo]<=1420 then
set Jgo=r1t(Igo,Pgo)
else
set Jgo=dKt(Igo,Pgo)
endif
elseif px[Igo]<=1424 then
set Jgo=r1t(Igo,Pgo)
else
set Jgo=MBt(Igo,Pgo)
endif
elseif px[Igo]<=1428 then
if px[Igo]<=1427 then
set Jgo=mNt(Igo,Pgo)
else
set Jgo=F_i(Igo,Pgo)
endif
elseif px[Igo]<=1429 then
set Jgo=EXt(Igo,Pgo)
else
set Jgo=i3t(Igo,Pgo)
endif
elseif px[Igo]<=1434 then
if px[Igo]<=1432 then
if px[Igo]<=1431 then
set Jgo=w0i(Igo,Pgo)
else
set Jgo=r1t(Igo,Pgo)
endif
elseif px[Igo]<=1433 then
set Jgo=dAt(Igo,Pgo)
else
set Jgo=xMt(Igo,Pgo)
endif
elseif px[Igo]<=1436 then
if px[Igo]<=1435 then
set Jgo=L1t(Igo,Pgo)
else
set Jgo=s7i(Igo,Pgo)
endif
else
set Jgo=m3t(Igo,Pgo)
endif
elseif px[Igo]<=1444 then
if px[Igo]<=1441 then
if px[Igo]<=1439 then
if px[Igo]<=1438 then
set Jgo=r1t(Igo,Pgo)
else
set Jgo=p1t(Igo,Pgo)
endif
elseif px[Igo]<=1440 then
set Jgo=wMt(Igo,Pgo)
else
set Jgo=R4t(Igo,Pgo)
endif
elseif px[Igo]<=1443 then
if px[Igo]<=1442 then
set Jgo=o2t(Igo,Pgo)
else
set Jgo=T5i(Igo,Pgo)
endif
else
set Jgo=U5i(Igo,Pgo)
endif
elseif px[Igo]<=1448 then
if px[Igo]<=1446 then
if px[Igo]<=1445 then
set Jgo=k6i(Igo,Pgo)
else
set Jgo=DPt(Igo,Pgo)
endif
elseif px[Igo]<=1447 then
set Jgo=r1t(Igo,Pgo)
else
set Jgo=F8i(Igo,Pgo)
endif
elseif px[Igo]<=1450 then
if px[Igo]<=1449 then
set Jgo=x9i(Igo,Pgo)
else
call Kgo(0,Igo,Pgo,"when calling equals in ScmdDataTypes, line 59")
set Jgo=tnw
endif
else
set Jgo=M0i(Igo,Pgo)
endif
set MM=MM-1
set tnw=Jgo
return
endif
endfunction
function sIt takes integer CUt,integer VUt,integer BUt,string NUt returns integer
local boolean MUt
local integer wIt
local integer uIt
local integer rIt
set w3[MM]=NUt
set MM=MM+1
set MUt=true
set wIt=1
set uIt=L1o(BUt,"when calling size in ScmdCoreBuiltins, line 369")-1
loop
exitwhen wIt>uIt
call Kgo(1,N1o(BUt,wIt,"when calling get in ScmdCoreBuiltins, line 370"),N1o(BUt,wIt-1,"when calling get in ScmdCoreBuiltins, line 370"),"when calling equals in ScmdCoreBuiltins, line 370")
set MUt=tnw
if not MUt then
exitwhen true
endif
set wIt=wIt+1
endloop
set rIt=l5i(rAt(MUt,"when calling new_Boolean in ScmdCoreBuiltins, line 373"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 373")
set MM=MM-1
return rIt
endfunction
function sSi takes integer Nii,integer Mii,integer wSi,string uSi returns integer
local integer rSi
set w3[MM]=uSi
set MM=MM+1
call SetMusicPlayPosition(t8o(N1o(wSi,0,"when calling get in ScmdSoundFunctions, line 15"),"when calling intValue in ScmdSoundFunctions, line 15"))
set rSi=x4u("when calling nullptr in ScmdSoundFunctions, line 16")
set MM=MM-1
return rSi
endfunction
function sTi takes integer NRi,integer MRi,integer wTi,string uTi returns integer
local integer rTi
set w3[MM]=uTi
set MM=MM+1
set rTi=l5i(rAt(Ylr(H9o(N1o(wTi,0,"when calling get in ScmdUnitBuiltins, line 517"),"when calling getInner in ScmdUnitBuiltins, line 517"),S9o(N1o(wTi,1,"when calling get in ScmdUnitBuiltins, line 517"),"when calling getInner in ScmdUnitBuiltins, line 517")),"when calling new_Boolean in ScmdUnitBuiltins, line 517"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 517")
set MM=MM-1
return rTi
endfunction
function sfi takes integer Ndi,integer Mdi,integer wfi,string ufi returns integer
local integer rfi
set w3[MM]=ufi
set MM=MM+1
call d_s(W2o(Mdi,"when calling getEnumUnit in ScmdUnitBuiltins, line 401"),I8o(N1o(wfi,0,"when calling get in ScmdUnitBuiltins, line 401"),"when calling realValue in ScmdUnitBuiltins, line 401"),t8o(N1o(wfi,1,"when calling get in ScmdUnitBuiltins, line 401"),"when calling intValue in ScmdUnitBuiltins, line 401"))
set rfi=x4u("when calling nullptr in ScmdUnitBuiltins, line 402")
set MM=MM-1
return rfi
endfunction
function sni takes integer Nai,integer Mai,integer wni,string uni returns integer
local integer rni
set w3[MM]=uni
set MM=MM+1
call b_s(H9o(N1o(wni,0,"when calling get in ScmdUnitBuiltins, line 347"),"when calling getInner in ScmdUnitBuiltins, line 347"),t8o(N1o(wni,1,"when calling get in ScmdUnitBuiltins, line 347"),"when calling intValue in ScmdUnitBuiltins, line 347"),t8o(N1o(wni,2,"when calling get in ScmdUnitBuiltins, line 347"),"when calling intValue in ScmdUnitBuiltins, line 347"))
set rni=x4u("when calling nullptr in ScmdUnitBuiltins, line 348")
set MM=MM-1
return rni
endfunction
function soi takes integer Lci,integer Xci,integer Cci,string Vci returns integer
local string Bci
local playercolor Nci
local playercolor Mci
local boolean woi
local integer uoi
local integer roi
set w3[MM]=Vci
set MM=MM+1
set Bci=OFr(S9o(N1o(Cci,1,"when calling get in ScmdUnitBuiltins, line 65"),"when calling getInner in ScmdUnitBuiltins, line 65"))
if Bci=="black" then
set Mci=qa
else
set Mci=qyu(Bci)
endif
set Nci=Mci
set woi=Nci!=null or OFr(Bci)=="red"
if woi then
call KHu(H9o(N1o(Cci,0,"when calling get in ScmdUnitBuiltins, line 69"),"when calling getInner in ScmdUnitBuiltins, line 69"),Nci)
endif
if woi then
set uoi=x4u("when calling nullptr in ScmdUnitBuiltins, line 70")
else
set uoi=EOr("when calling newWCNException in ScmdUnitBuiltins, line 70")
endif
set roi=uoi
set MM=MM-1
set Nci=null
set Mci=null
return roi
endfunction
function sqi takes integer Nei,integer Mei,integer wqi,string uqi returns integer
local integer rqi
set w3[MM]=uqi
set MM=MM+1
set rqi=l5i(pMt(Q0s(W2o(Mei,"when calling getEnumUnit in ScmdUnitBuiltins, line 290")),"when calling new_Integer in ScmdUnitBuiltins, line 290"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 290")
set MM=MM-1
return rqi
endfunction
function svt takes integer Nxt,integer Mxt,integer wvt,string uvt returns integer
local integer rvt
set w3[MM]=uvt
set MM=MM+1
set rvt=l5i(J6i(Dhr(S9o(N1o(wvt,0,"when calling get in ScmdCoreBuiltins, line 132"),"when calling getInner in ScmdCoreBuiltins, line 132"),t8o(N1o(wvt,1,"when calling get in ScmdCoreBuiltins, line 132"),"when calling intValue in ScmdCoreBuiltins, line 132"),t8o(N1o(wvt,2,"when calling get in ScmdCoreBuiltins, line 132"),"when calling intValue in ScmdCoreBuiltins, line 132")),"when calling new_String in ScmdCoreBuiltins, line 132"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 132")
set MM=MM-1
return rvt
endfunction
function tFi takes integer Mhi,integer wFi,integer uFi,string rFi returns integer
local integer sFi
set w3[MM]=rFi
set MM=MM+1
set sFi=l5i(rAt(IsUnitType(W2o(wFi,"when calling getEnumUnit in ScmdUnitBuiltins, line 699"),UNIT_TYPE_STRUCTURE),"when calling new_Boolean in ScmdUnitBuiltins, line 699"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 699")
set MM=MM-1
return sFi
endfunction
function HMS takes string AMS returns integer
local integer DMS
set w3[MM]=AMS
set MM=MM+1
if bx==0 then
if yx<32768 then
set yx=yx+1
set DMS=yx
set px[DMS]=1451
else
call Mau("Out of memory: Could not create WeatherEffect.","when calling error in ScmdDataTypes, line 625")
set DMS=0
endif
else
set bx=bx-1
set DMS=lx[bx]
set px[DMS]=1451
endif
set MM=MM-1
return DMS
endfunction
function jrs takes rect Frs,integer krs returns weathereffect
return AddWeatherEffect(Frs,krs)
endfunction
function o_i takes integer c_i returns nothing
endfunction
function n_i takes integer e_i,rect q_i,integer a_i returns nothing
call o_i(e_i)
set tL[e_i]=jrs(q_i,a_i)
endfunction
function p_i takes rect O_i,integer l_i,string b_i returns integer
local integer y_i
set w3[MM]=b_i
set MM=MM+1
set y_i=HMS("when calling alloc_WeatherEffect in ScmdDataTypes, line 631")
call n_i(y_i,O_i,l_i)
set MM=MM-1
return y_i
endfunction
function tWi takes integer MQi,integer wWi,integer uWi,string rWi returns integer
local integer sWi
set w3[MM]=rWi
set MM=MM+1
set sWi=l5i(p_i(H8o(N1o(uWi,0,"when calling get in ScmdWeatherEffectFunctions, line 7"),"when calling getInner in ScmdWeatherEffectFunctions, line 7"),t8o(N1o(uWi,1,"when calling get in ScmdWeatherEffectFunctions, line 7"),"when calling intValue in ScmdWeatherEffectFunctions, line 7"),"when calling new_WeatherEffect in ScmdWeatherEffectFunctions, line 7"),"when calling new_SharedPointer in ScmdWeatherEffectFunctions, line 7")
set MM=MM-1
return sWi
endfunction
function tYi takes integer MTi,integer wYi,integer uYi,string rYi returns integer
local integer sYi
set w3[MM]=rYi
set MM=MM+1
call Q6r(H9o(N1o(uYi,0,"when calling get in ScmdUnitBuiltins, line 576"),"when calling getInner in ScmdUnitBuiltins, line 576"),t8o(N1o(uYi,1,"when calling get in ScmdUnitBuiltins, line 576"),"when calling intValue in ScmdUnitBuiltins, line 576"))
set sYi=x4u("when calling nullptr in ScmdUnitBuiltins, line 577")
set MM=MM-1
return sYi
endfunction
function tYt takes integer MTt,integer wYt,integer uYt,string rYt returns integer
local integer sYt
set w3[MM]=rYt
set MM=MM+1
set sYt=l5i(p6i(S9o(N1o(uYt,0,"when calling get in SLangSpecialEffectFunctions, line 10"),"when calling getInner in SLangSpecialEffectFunctions, line 10"),W2o(wYt,"when calling getEnumUnit in SLangSpecialEffectFunctions, line 10"),S9o(N1o(uYt,1,"when calling get in SLangSpecialEffectFunctions, line 10"),"when calling getInner in SLangSpecialEffectFunctions, line 10"),"when calling new_SpecialEffect in SLangSpecialEffectFunctions, line 10"),"when calling new_SharedPointer in SLangSpecialEffectFunctions, line 10")
set MM=MM-1
return sYt
endfunction
function tci takes integer CSi,integer VSi,integer BSi,string NSi returns integer
local string MSi
local player wci
local string uci
local integer rci
local integer sci
set w3[MM]=NSi
set MM=MM+1
set MSi=OFr(S9o(N1o(BSi,0,"when calling get in ScmdUnitBuiltins, line 20"),"when calling getInner in ScmdUnitBuiltins, line 20"))
set uci=MSi
if uci=="hostile" then
set wci=pa[PLAYER_NEUTRAL_AGGRESSIVE]
elseif uci=="neutral" then
set wci=pa[PLAYER_NEUTRAL_PASSIVE]
elseif uci=="me" then
set wci=pa[h2o(VSi,"when calling getPlayerId in ScmdUnitBuiltins, line 28")]
else
set wci=cWu(qyu(MSi))
endif
if wci!=null then
call F9s(W2o(VSi,"when calling getEnumUnit in ScmdUnitBuiltins, line 32"),wci,false)
endif
if wci!=null then
set rci=x4u("when calling nullptr in ScmdUnitBuiltins, line 33")
else
set rci=EOr("when calling newWCNException in ScmdUnitBuiltins, line 33")
endif
set sci=rci
set MM=MM-1
set wci=null
return sci
endfunction
function tgi takes integer MGi,integer wgi,integer ugi,string rgi returns integer
local integer sgi
set w3[MM]=rgi
set MM=MM+1
set sgi=l5i(j1t(GetUnitFacing(W2o(wgi,"when calling getEnumUnit in ScmdUnitBuiltins, line 645")),"when calling new_Real in ScmdUnitBuiltins, line 645"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 645")
set MM=MM-1
return sgi
endfunction
function tri takes integer Mui,integer wri,integer uri,string rri returns integer
local integer sri
set w3[MM]=rri
set MM=MM+1
call Zrs(p8o(N1o(uri,0,"when calling get in ScmdItemBuiltins, line 46"),"when calling getInner in ScmdItemBuiltins, line 46"),I8o(N1o(uri,1,"when calling get in ScmdItemBuiltins, line 46"),"when calling realValue in ScmdItemBuiltins, line 46"))
set sri=x4u("when calling nullptr in ScmdItemBuiltins, line 47")
set MM=MM-1
return sri
endfunction
function tyi takes integer Mbi,integer wyi,integer uyi,string ryi returns integer
local integer syi
set w3[MM]=ryi
set MM=MM+1
set syi=l5i(pMt(H7s(W2o(wyi,"when calling getEnumUnit in ScmdUnitBuiltins, line 176")),"when calling new_Integer in ScmdUnitBuiltins, line 176"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 176")
set MM=MM-1
return syi
endfunction
function uGi takes integer VYi,integer BYi,integer NYi,string MYi returns integer
local integer wGi
set w3[MM]=MYi
set MM=MM+1
call P6r(H9o(N1o(NYi,0,"when calling get in ScmdUnitBuiltins, line 600"),"when calling getInner in ScmdUnitBuiltins, line 600"),t8o(N1o(NYi,1,"when calling get in ScmdUnitBuiltins, line 600"),"when calling intValue in ScmdUnitBuiltins, line 600"))
set wGi=x4u("when calling nullptr in ScmdUnitBuiltins, line 601")
set MM=MM-1
return wGi
endfunction
function uRt takes integer Xft,integer Cft,integer Vft,string Bft returns integer
local player Nft
local integer Mft
local integer wRt
set w3[MM]=Bft
set MM=MM+1
set Nft=dAu(qyu(S9o(N1o(Vft,0,"when calling get in SLangPlayerFunctions, line 35"),"when calling getInner in SLangPlayerFunctions, line 35")))
if Nft!=null then
call SetPlayerAllianceStateAllyBJ(pa[h2o(Cft,"when calling getPlayerId in SLangPlayerFunctions, line 37")],Nft,c4o(N1o(Vft,1,"when calling get in SLangPlayerFunctions, line 37"),"when calling booleanValue in SLangPlayerFunctions, line 37"))
endif
if Nft!=null then
set Mft=l5i(K3t("when calling new_Null in SLangPlayerFunctions, line 38"),"when calling new_SharedPointer in SLangPlayerFunctions, line 38")
else
set Mft=TAu("when calling newWCNException in SLangPlayerFunctions, line 38")
endif
set wRt=Mft
set MM=MM-1
set Nft=null
return wRt
endfunction
function uZt takes integer LEt,integer XEt,integer CEt,string VEt returns integer
local integer BEt
local integer NEt
local integer MEt
local boolean wZt
set w3[MM]=VEt
set MM=MM+1
set BEt=px[N1o(CEt,0,"when calling get in ScmdCoreBuiltins, line 291")]
if(BEt>=1434 and BEt<=1435)or(BEt>=1439 and BEt<=1440)then
set NEt=px[N1o(CEt,0,"when calling get in ScmdCoreBuiltins, line 291")]
set wZt=not(NEt==1434 or NEt==1440)
else
set wZt=false
endif
set MEt=l5i(rAt(wZt,"when calling new_Boolean in ScmdCoreBuiltins, line 291"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 291")
set MM=MM-1
return MEt
endfunction
function uhi takes integer Vgi,integer Bgi,integer Ngi,string Mgi returns integer
local integer whi
set w3[MM]=Mgi
set MM=MM+1
set whi=l5i(j1t(v7s(W2o(Bgi,"when calling getEnumUnit in ScmdUnitBuiltins, line 670")),"when calling new_Real in ScmdUnitBuiltins, line 670"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 670")
set MM=MM-1
return whi
endfunction
function uli takes integer VOi,integer BOi,integer NOi,string MOi returns integer
local integer wli
set w3[MM]=MOi
set MM=MM+1
call QJu(H9o(N1o(NOi,0,"when calling get in ScmdUnitBuiltins, line 121"),"when calling getInner in ScmdUnitBuiltins, line 121"),I8o(N1o(NOi,1,"when calling get in ScmdUnitBuiltins, line 121"),"when calling realValue in ScmdUnitBuiltins, line 121"))
set wli=x4u("when calling nullptr in ScmdUnitBuiltins, line 122")
set MM=MM-1
return wli
endfunction
function uui takes integer Vwi,integer Bwi,integer Nwi,string Mwi returns integer
local integer wui
set w3[MM]=Mwi
set MM=MM+1
set wui=l5i(R3t(L7s(H9o(N1o(Nwi,0,"when calling get in ScmdItemBuiltins, line 11"),"when calling getInner in ScmdItemBuiltins, line 11"),t8o(N1o(Nwi,1,"when calling get in ScmdItemBuiltins, line 11"),"when calling intValue in ScmdItemBuiltins, line 11")),"when calling new_Item in ScmdItemBuiltins, line 11"),"when calling new_SharedPointer in ScmdItemBuiltins, line 11")
set MM=MM-1
return wui
endfunction
function vEt takes integer hEt,integer FEt,integer kEt,string jEt returns integer
local integer xEt
set w3[MM]=jEt
set MM=MM+1
set xEt=l5i(rAt(ModuloInteger(t8o(N1o(kEt,0,"when calling get in ScmdCoreBuiltins, line 282"),"when calling intValue in ScmdCoreBuiltins, line 282"),2)==0,"when calling new_Boolean in ScmdCoreBuiltins, line 282"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 282")
set MM=MM-1
return xEt
endfunction
function vRi takes integer hRi,integer FRi,integer kRi,string jRi returns integer
local integer xRi
set w3[MM]=jRi
set MM=MM+1
set xRi=l5i(rAt(hws(H9o(N1o(kRi,0,"when calling get in ScmdUnitBuiltins, line 461"),"when calling getInner in ScmdUnitBuiltins, line 461"),UNIT_WEAPON_SF_ATTACK_PROJECTILE_ART,t8o(N1o(kRi,1,"when calling get in ScmdUnitBuiltins, line 461"),"when calling intValue in ScmdUnitBuiltins, line 461"),S9o(N1o(kRi,2,"when calling get in ScmdUnitBuiltins, line 461"),"when calling getInner in ScmdUnitBuiltins, line 461")),"when calling new_Boolean in ScmdUnitBuiltins, line 461"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 461")
set MM=MM-1
return xRi
endfunction
function vai takes integer hai,integer Fai,integer kai,string jai returns integer
local integer xai
set w3[MM]=jai
set MM=MM+1
call B0s(H9o(N1o(kai,0,"when calling get in ScmdUnitBuiltins, line 335"),"when calling getInner in ScmdUnitBuiltins, line 335"),t8o(N1o(kai,1,"when calling get in ScmdUnitBuiltins, line 335"),"when calling intValue in ScmdUnitBuiltins, line 335"),t8o(N1o(kai,2,"when calling get in ScmdUnitBuiltins, line 335"),"when calling intValue in ScmdUnitBuiltins, line 335"))
set xai=x4u("when calling nullptr in ScmdUnitBuiltins, line 336")
set MM=MM-1
return xai
endfunction
function vdi takes integer hdi,integer Fdi,integer kdi,string jdi returns integer
local integer xdi
set w3[MM]=jdi
set MM=MM+1
call uws(W2o(Fdi,"when calling getEnumUnit in ScmdUnitBuiltins, line 389"),UNIT_RF_SIGHT_RADIUS,I8o(N1o(kdi,0,"when calling get in ScmdUnitBuiltins, line 389"),"when calling realValue in ScmdUnitBuiltins, line 389"))
set xdi=x4u("when calling nullptr in ScmdUnitBuiltins, line 390")
set MM=MM-1
return xdi
endfunction
function vei takes integer hei,integer Fei,integer kei,string jei returns integer
local integer xei
set w3[MM]=jei
set MM=MM+1
set xei=l5i(pMt(k0s(W2o(Fei,"when calling getEnumUnit in ScmdUnitBuiltins, line 278")),"when calling new_Integer in ScmdUnitBuiltins, line 278"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 278")
set MM=MM-1
return xei
endfunction
function aIu takes rect pIu,real eIu,real qIu returns nothing
call MoveRectTo(pIu,eIu,qIu)
endfunction
function vii takes integer hii,integer Fii,integer kii,string jii returns integer
local integer xii
set w3[MM]=jii
set MM=MM+1
call aIu(H8o(N1o(kii,0,"when calling get in ScmdRectBuiltins, line 32"),"when calling getInner in ScmdRectBuiltins, line 32"),I8o(N1o(kii,1,"when calling get in ScmdRectBuiltins, line 32"),"when calling realValue in ScmdRectBuiltins, line 32"),I8o(N1o(kii,2,"when calling get in ScmdRectBuiltins, line 32"),"when calling realValue in ScmdRectBuiltins, line 32"))
set xii=x4u("when calling nullptr in ScmdRectBuiltins, line 33")
set MM=MM-1
return xii
endfunction
function vpi takes integer hpi,integer Fpi,integer kpi,string jpi returns integer
local integer xpi
set w3[MM]=jpi
set MM=MM+1
call UnitResetCooldown(H9o(N1o(kpi,0,"when calling get in ScmdUnitBuiltins, line 246"),"when calling getInner in ScmdUnitBuiltins, line 246"))
set xpi=x4u("when calling nullptr in ScmdUnitBuiltins, line 247")
set MM=MM-1
return xpi
endfunction
function vxt takes integer Txt,integer Yxt,integer Gxt,string gxt returns integer
local string hxt
local integer Fxt
local integer kxt
local integer jxt
local string xxt
set w3[MM]=gxt
set MM=MM+1
set hxt=""
set Fxt=nPt(Gxt,"when calling iterator in ScmdCoreBuiltins, line 119")
loop
exitwhen not PPs(Fxt,"when calling hasNext in ScmdCoreBuiltins, line 119")
set kxt=EPs(Fxt,"when calling next in ScmdCoreBuiltins, line 119")
set xxt=hxt
call Zgo(1,f7o(kxt,"when calling get in ScmdCoreBuiltins, line 120"),"when calling toString in ScmdCoreBuiltins, line 120")
set hxt=xxt+Snw
endloop
call HPs(Fxt,"when calling close in ScmdCoreBuiltins, line 119")
set jxt=l5i(J6i(hxt,"when calling new_String in ScmdCoreBuiltins, line 121"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 121")
set MM=MM-1
return jxt
endfunction
function GHt takes integer oHt,integer OHt,string lHt returns integer
local integer bHt
local integer yHt
local string pHt
local string eHt
local integer qHt
local integer aHt
local integer nHt
local integer dHt
local integer fHt
local integer RHt
local integer THt
local integer YHt
set w3[MM]=lHt
set MM=MM+1
set bHt=0
set yHt=L1o(OHt,"when calling size in ScmdDataTypes, line 1447")-1
loop
exitwhen yHt<0
set THt=px[N1o(OHt,yHt,"when calling get in ScmdDataTypes, line 1448")]
if THt>=1432 and THt<=1436 then
set bHt=bHt+1
else
exitwhen true
endif
set yHt=yHt-1
endloop
set pHt=""
set eHt=""
set qHt=yZc(wK[oHt],"when calling size in ScmdDataTypes, line 1454")-1
loop
exitwhen qHt<0
set aHt=TZc(wK[oHt],qHt,"when calling get in ScmdDataTypes, line 1455")
if L1o(OHt,"when calling size in ScmdDataTypes, line 1456")>VJ[aHt]then
if L1o(OHt,"when calling size in ScmdDataTypes, line 1457")-VJ[aHt]>bHt-1 then
exitwhen true
endif
set nHt=0
set dHt=L1o(OHt,"when calling size in ScmdDataTypes, line 1460")-VJ[aHt]+1
loop
exitwhen not(nHt!=dHt)
set fHt=s4o(OHt,L1o(OHt,"when calling size in ScmdDataTypes, line 1462")-1,"when calling getPtr in ScmdDataTypes, line 1462")
set YHt=px[N8o(fHt,"when calling get in ScmdDataTypes, line 1463")]
if not(YHt>=1432 and YHt<=1436)then
exitwhen true
endif
call D1o(OHt,L1o(OHt,"when calling size in ScmdDataTypes, line 1465")-1,"when calling removeAt in ScmdDataTypes, line 1465")
call Zgo(1,N8o(fHt,"when calling get in ScmdDataTypes, line 1466"),"when calling toString in ScmdDataTypes, line 1466")
set eHt=Snw+pHt+eHt
set pHt=n8o(N8o(fHt,"when calling get in ScmdDataTypes, line 1467"),"when calling getPreviousWhitespaces in ScmdDataTypes, line 1467")
call KGo(10,fHt,"when calling dispatch_SharedPointer_destroySharedPointer in ScmdDataTypes, line 1468")
set bHt=bHt-1
set nHt=nHt+1
endloop
if nHt!=0 then
call U1o(OHt,l5i(M4u(eHt,pHt,"when calling forStrings in ScmdDataTypes, line 1472"),"when calling new_SharedPointer in ScmdDataTypes, line 1472"),"when calling add in ScmdDataTypes, line 1472")
endif
endif
if L1o(OHt,"when calling size in ScmdDataTypes, line 1473")==VJ[aHt]then
set RHt=1
loop
exitwhen not(RHt<=bHt and H7o(wDc(CJ[aHt],VJ[aHt]-RHt,"when calling get in ScmdDataTypes, line 1475"),N1o(OHt,VJ[aHt]-RHt,"when calling get in ScmdDataTypes, line 1475"),"when calling isInstance in ScmdDataTypes, line 1475"))
set RHt=RHt+1
endloop
if RHt>bHt then
set MM=MM-1
return aHt
endif
endif
set qHt=qHt-1
endloop
set MM=MM-1
return uK[oHt]
endfunction
function w2o takes integer V4o,integer B4o,string N4o returns integer
local integer M4o
set w3[MM]=N4o
set MM=MM+1
if px[V4o]==0 then
if V4o==0 then
call Mau("Nullpointer exception when calling BuiltinFunction.resolveOverload","when calling error in ScmdDataTypes, line 1445")
else
call Mau("Called BuiltinFunction.resolveOverload on invalid object.","when calling error in ScmdDataTypes, line 1445")
endif
endif
set M4o=GHt(V4o,B4o,"when calling resolveOverload in ScmdDataTypes, line 1445")
set MM=MM-1
return M4o
endfunction
function CRr takes integer KRr,real LRr,string XRr returns nothing
set w3[MM]=XRr
set MM=MM+1
set Kf[KRr]=false
set Lf[KRr]=LRr
call ERr(KRr,"when calling updateInfo in SotfrpGuiDestructables, line 170")
set MM=MM-1
endfunction
function JRr takes integer ARr,real DRr,string HRr returns nothing
set w3[MM]=HRr
set MM=MM+1
set Jf[ARr]=DRr
call ERr(ARr,"when calling updateInfo in SotfrpGuiDestructables, line 165")
set MM=MM-1
endfunction
function NRr takes integer VRr,string BRr returns nothing
set w3[MM]=BRr
set MM=MM+1
set Kf[VRr]=true
call ERr(VRr,"when calling updateInfo in SotfrpGuiDestructables, line 174")
set MM=MM-1
endfunction
function OTr takes integer cTr,string oTr returns nothing
set w3[MM]=oTr
set MM=MM+1
set Cf[cTr]=true
call ERr(cTr,"when calling updateInfo in SotfrpGuiDestructables, line 187")
set MM=MM-1
endfunction
function STr takes integer sTr,integer tTr,string iTr returns nothing
set w3[MM]=iTr
set MM=MM+1
set Cf[sTr]=false
set Vf[sTr]=tTr
call ERr(sTr,"when calling updateInfo in SotfrpGuiDestructables, line 183")
set MM=MM-1
endfunction
function ddo takes string edo,string qdo returns string
local string ado=edo
local integer ndo=0
set ado=PFr(ado,"{"+tgu(ndo)+"}",qdo)
set ndo=ndo+1
return ado
endfunction
function rTr takes integer MRr,real wTr,string uTr returns nothing
set w3[MM]=uTr
set MM=MM+1
set Xf[MRr]=wTr
call ERr(MRr,"when calling updateInfo in SotfrpGuiDestructables, line 178")
set MM=MM-1
endfunction
function PTr takes integer dTr,integer fTr,integer RTr,string TTr returns integer
local string YTr
local boolean GTr
local integer gTr
local integer hTr
local integer FTr
local string kTr
local integer jTr
local integer xTr
local integer vTr
local integer mTr
local integer QTr
local integer WTr
local integer ETr
local integer ZTr
local integer UTr
local boolean ITr
set w3[MM]=TTr
set MM=MM+1
call Zgo(1,RTr,"when calling toString in SotfrpGuiDestructables, line 195")
set YTr=OFr(Snw)
set GTr=YTr=="rand" or YTr=="random"
set jTr=px[RTr]
if not((jTr>=1434 and jTr<=1435)or(jTr>=1438 and jTr<=1440)or GTr)then
set UTr=Y4u("Value should be a number or \"random\"","when calling wrap in SotfrpGuiDestructables, line 198")
set MM=MM-1
return UTr
endif
if GTr then
set hTr=0
else
set hTr=RTr
endif
set gTr=hTr
set FTr=h2o(dTr,"when calling getPlayerId in SotfrpGuiDestructables, line 200")
call Zgo(1,fTr,"when calling toString in SotfrpGuiDestructables, line 201")
set kTr=Snw
if kTr=="fly" or kTr=="fh" or kTr=="flyheight" then
if gTr==0 then
set WTr=Y4u("Random fly height is not supported","when calling wrap in SotfrpGuiDestructables, line 204")
set MM=MM-1
return WTr
endif
call JRr(FTr,h8o(gTr,"when calling realValue in SotfrpGuiDestructables, line 205"),"when calling setFlyHeight in SotfrpGuiDestructables, line 205")
elseif kTr=="fa" or kTr=="facing" then
if gTr==0 then
call NRr(FTr,"when calling setFacingRandom in SotfrpGuiDestructables, line 208")
else
call CRr(FTr,h8o(gTr,"when calling realValue in SotfrpGuiDestructables, line 210"),"when calling setFacing in SotfrpGuiDestructables, line 210")
endif
elseif kTr=="size" then
if gTr==0 then
set ZTr=Y4u("Random size is not supported","when calling wrap in SotfrpGuiDestructables, line 213")
set MM=MM-1
return ZTr
endif
call rTr(FTr,h8o(gTr,"when calling realValue in SotfrpGuiDestructables, line 214")/100.,"when calling setScale in SotfrpGuiDestructables, line 214")
elseif kTr=="scale" then
if gTr==0 then
set QTr=Y4u("Random scale is not supported","when calling wrap in SotfrpGuiDestructables, line 217")
set MM=MM-1
return QTr
endif
call rTr(FTr,h8o(gTr,"when calling realValue in SotfrpGuiDestructables, line 218"),"when calling setScale in SotfrpGuiDestructables, line 218")
elseif kTr=="var" or kTr=="variation" then
if gTr!=0 then
set xTr=px[gTr]
set ITr=not(xTr==1434 or xTr==1440)
else
set ITr=false
endif
if ITr then
set mTr=Y4u("Variation should be an integer or \"random\"","when calling wrap in SotfrpGuiDestructables, line 221")
set MM=MM-1
return mTr
endif
if gTr==0 then
call OTr(FTr,"when calling setVariationRandom in SotfrpGuiDestructables, line 223")
else
call STr(FTr,T8o(gTr,"when calling intValue in SotfrpGuiDestructables, line 225"),"when calling setVariation in SotfrpGuiDestructables, line 225")
endif
elseif kTr=="occ" or kTr=="occluder" or kTr=="oh" or kTr=="occluderheight" then
elseif kTr=="aspeed" then
else
call Zgo(1,fTr,"when calling toString in SotfrpGuiDestructables, line 231")
set ETr=Y4u(ddo("Unknown parameter {0}",Snw),"when calling wrap in SotfrpGuiDestructables, line 231")
set MM=MM-1
return ETr
endif
set vTr=x4u("when calling nullptr in SotfrpGuiDestructables, line 232")
set MM=MM-1
return vTr
endfunction
function wAi takes integer CPi,integer VPi,integer BPi,string NPi returns integer
local integer MPi
set w3[MM]=NPi
set MM=MM+1
set MPi=PTr(VPi,N1o(BPi,0,"when calling get in SotfrpGuiDestructables, line 241"),N1o(BPi,1,"when calling get in SotfrpGuiDestructables, line 241"),"when calling doodCmd in SotfrpGuiDestructables, line 241")
set MM=MM-1
return MPi
endfunction
function wOi takes integer Coi,integer Voi,integer Boi,string Noi returns integer
local integer Moi
set w3[MM]=Noi
set MM=MM+1
set Moi=l5i(j1t(V_u(G0s(H9o(N1o(Boi,0,"when calling get in ScmdUnitBuiltins, line 94"),"when calling getInner in ScmdUnitBuiltins, line 94"))),"when calling new_Real in ScmdUnitBuiltins, line 94"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 94")
set MM=MM-1
return Moi
endfunction
function Fsc takes string gsc returns integer
local integer hsc
set w3[MM]=gsc
set MM=MM+1
if lg==0 then
if bg<32768 then
set bg=bg+1
set hsc=bg
set yg[hsc]=806
else
call Mau("Out of memory: Could not create ForGroupCallback_forUnitsSelected_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 191")
set hsc=0
endif
else
set lg=lg-1
set hsc=Og[lg]
set yg[hsc]=806
endif
set MM=MM-1
return hsc
endfunction
function wQi takes integer Pmi,integer Ami,integer Dmi,string Hmi returns integer
local boolean Jmi
local integer Kmi
local integer Lmi
local integer Xmi
local integer Cmi
local player Vmi
local boolean Bmi
local integer Nmi
local integer Mmi
set w3[MM]=Hmi
set MM=MM+1
set Bmi=jbr(S9o(N1o(Dmi,0,"when calling get in ScmdUnitParamLinkingBuiltins, line 189"),"when calling getInner in ScmdUnitParamLinkingBuiltins, line 189"))
set Nmi=y4
set Jmi=Bmi
set Kmi=Nmi
if Jmi then
set Vmi=pa[h2o(Ami,"when calling getPlayerId in ScmdUnitParamLinkingBuiltins, line 191")]
set Lmi=Fsc("when calling alloc_ForGroupCallback_forUnitsSelected_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 191")
set QL[Lmi]=Ami
set Mmi=Kmi
set WL[Lmi]=Mmi
call mcu(Vmi,Lmi,"when calling forUnitsSelected in ScmdUnitParamLinkingBuiltins, line 191")
endif
if Jmi then
set Xmi=x4u("when calling nullptr in ScmdUnitParamLinkingBuiltins, line 194")
else
set Xmi=Y4u("unknown parameter","when calling wrap in ScmdUnitParamLinkingBuiltins, line 194")
endif
set Cmi=Xmi
set MM=MM-1
set Vmi=null
return Cmi
endfunction
function bJS takes string OJS returns integer
local integer lJS
set w3[MM]=OJS
set MM=MM+1
if Mj==0 then
if wx<32768 then
set wx=wx+1
set lJS=wx
set ux[lJS]=1249
else
call Mau("Out of memory: Could not create IntBinOp_reduceNumbers_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 211")
set lJS=0
endif
else
set Mj=Mj-1
set lJS=Nj[Mj]
set ux[lJS]=1249
endif
set MM=MM-1
return lJS
endfunction
function eJS takes string yJS returns integer
local integer pJS
set w3[MM]=yJS
set MM=MM+1
if sx==0 then
if tx<32768 then
set tx=tx+1
set pJS=tx
set ix[pJS]=1498
else
call Mau("Out of memory: Could not create RealBinOp_reduceNumbers_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 211")
set pJS=0
endif
else
set sx=sx-1
set pJS=rx[sx]
set ix[pJS]=1498
endif
set MM=MM-1
return pJS
endfunction
function wQt takes integer Jmt,integer Kmt,integer Lmt,string Xmt returns integer
local integer Cmt
local integer Vmt
local integer Bmt
local integer Nmt
local integer Mmt
set w3[MM]=Xmt
set MM=MM+1
set Nmt=Lmt
set Cmt=bJS("when calling alloc_IntBinOp_reduceNumbers_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 211")
set Mmt=Cmt
set Vmt=eJS("when calling alloc_RealBinOp_reduceNumbers_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 211")
set Bmt=e1u(Nmt,0,Mmt,0.,Vmt,"when calling reduceNumbers in ScmdCoreBuiltins, line 211")
set MM=MM-1
return Bmt
endfunction
function wRi takes integer Cfi,integer Vfi,integer Bfi,string Nfi returns integer
local integer Mfi
set w3[MM]=Nfi
set MM=MM+1
set Mfi=l5i(j1t(iws(W2o(Vfi,"when calling getEnumUnit in ScmdUnitBuiltins, line 425"),UNIT_WEAPON_RF_ATTACK_RANGE,t8o(N1o(Bfi,0,"when calling get in ScmdUnitBuiltins, line 425"),"when calling intValue in ScmdUnitBuiltins, line 425")),"when calling new_Real in ScmdUnitBuiltins, line 425"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 425")
set MM=MM-1
return Mfi
endfunction
function wUi takes integer CZi,integer VZi,integer BZi,string NZi returns integer
local integer MZi
set w3[MM]=NZi
set MM=MM+1
call PreloadGenClear()
call Fnr(H8o(N1o(BZi,0,"when calling get in SotFRP_SaveLoad, line 140"),"when calling getInner in SotFRP_SaveLoad, line 140"))
if ea==pa[h2o(VZi,"when calling getPlayerId in SotFRP_SaveLoad, line 141")]then
call PreloadGenEnd("SotFRP\\Save\\"+S9o(N1o(BZi,1,"when calling get in SotFRP_SaveLoad, line 142"),"when calling getInner in SotFRP_SaveLoad, line 142")+".pld")
endif
set MZi=l5i(K3t("when calling new_Null in SotFRP_SaveLoad, line 143"),"when calling new_SharedPointer in SotFRP_SaveLoad, line 143")
set MM=MM-1
return MZi
endfunction
function wUt takes integer HZt,integer JZt,integer KZt,string LZt returns integer
local integer XZt
local integer CZt
local integer VZt
local integer BZt
local integer NZt
local integer MZt
set w3[MM]=LZt
set MM=MM+1
set XZt=H0i("when calling new_Vector in ScmdCoreBuiltins, line 314")
set CZt=0
set VZt=s0o(N1o(KZt,0,"when calling get in ScmdCoreBuiltins, line 315"),"when calling size in ScmdCoreBuiltins, line 315")-1
loop
exitwhen CZt>VZt
call Ffo(XZt,b7o(M9o(N1o(KZt,0,"when calling get in ScmdCoreBuiltins, line 316"),CZt,"when calling get in ScmdCoreBuiltins, line 316"),"when calling clone in ScmdCoreBuiltins, line 316"),"when calling push in ScmdCoreBuiltins, line 316")
set CZt=CZt+1
endloop
set BZt=1
set NZt=L1o(KZt,"when calling size in ScmdCoreBuiltins, line 317")-1
loop
exitwhen BZt>NZt
call Ffo(XZt,X8o(s4o(KZt,BZt,"when calling getPtr in ScmdCoreBuiltins, line 318"),"when calling clone in ScmdCoreBuiltins, line 318"),"when calling push in ScmdCoreBuiltins, line 318")
set BZt=BZt+1
endloop
set MZt=l5i(XZt,"when calling new_SharedPointer in ScmdCoreBuiltins, line 319")
set MM=MM-1
return MZt
endfunction
function wai takes integer Cqi,integer Vqi,integer Bqi,string Nqi returns integer
local integer Mqi
set w3[MM]=Nqi
set MM=MM+1
set Mqi=l5i(j1t(y7s(W2o(Vqi,"when calling getEnumUnit in ScmdUnitBuiltins, line 314")),"when calling new_Real in ScmdUnitBuiltins, line 314"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 314")
set MM=MM-1
return Mqi
endfunction
function wdi takes integer Cni,integer Vni,integer Bni,string Nni returns integer
local integer Mni
set w3[MM]=Nni
set MM=MM+1
call tJu(H9o(N1o(Bni,0,"when calling get in ScmdUnitBuiltins, line 371"),"when calling getInner in ScmdUnitBuiltins, line 371"),t8o(N1o(Bni,1,"when calling get in ScmdUnitBuiltins, line 371"),"when calling intValue in ScmdUnitBuiltins, line 371"))
set Mni=x4u("when calling nullptr in ScmdUnitBuiltins, line 372")
set MM=MM-1
return Mni
endfunction
function wei takes integer Ipi,integer Ppi,integer Api,string Dpi returns integer
local group Hpi
local integer Jpi
local player Kpi
local integer Lpi
local real Xpi
local real Cpi
local real Vpi
local integer Bpi
local integer Npi
local integer Mpi
set w3[MM]=Dpi
set MM=MM+1
set Hpi=CreateGroup()
set Jpi=t8o(N1o(Api,0,"when calling get in ScmdUnitBuiltins, line 253"),"when calling intValue in ScmdUnitBuiltins, line 253")
set Kpi=pa[h2o(Ppi,"when calling getPlayerId in ScmdUnitBuiltins, line 254")]
set Lpi=UnitId(S9o(N1o(Api,1,"when calling get in ScmdUnitBuiltins, line 255"),"when calling getInner in ScmdUnitBuiltins, line 255"))
set Xpi=kUu(I8o(N1o(Api,2,"when calling get in ScmdUnitBuiltins, line 256"),"when calling realValue in ScmdUnitBuiltins, line 256"),VT,CT)
set Cpi=kUu(I8o(N1o(Api,3,"when calling get in ScmdUnitBuiltins, line 257"),"when calling realValue in ScmdUnitBuiltins, line 257"),NT,BT)
set Vpi=I8o(N1o(Api,4,"when calling get in ScmdUnitBuiltins, line 258"),"when calling realValue in ScmdUnitBuiltins, line 258")
set Bpi=0
set Npi=Jpi-1
loop
exitwhen Bpi>Npi
call Iqo(Hpi,CreateUnit(Kpi,Lpi,Xpi,Cpi,Vpi))
set Bpi=Bpi+1
endloop
set Mpi=l5i(fNt(Hpi,"when calling new_Group in ScmdUnitBuiltins, line 261"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 261")
set MM=MM-1
set Hpi=null
set Kpi=null
return Mpi
endfunction
function wii takes integer Cti,integer Vti,integer Bti,string Nti returns integer
local integer Mti
set w3[MM]=Nti
set MM=MM+1
set Mti=l5i(j1t(NUu(H8o(N1o(Bti,0,"when calling get in ScmdRectBuiltins, line 17"),"when calling getInner in ScmdRectBuiltins, line 17")),"when calling new_Real in ScmdRectBuiltins, line 17"),"when calling new_SharedPointer in ScmdRectBuiltins, line 17")
set MM=MM-1
return Mti
endfunction
function wkt takes integer CFt,integer VFt,integer BFt,string NFt returns integer
local integer MFt
set w3[MM]=NFt
set MM=MM+1
call CameraSetupSetDestPosition(p2o(N1o(BFt,0,"when calling get in ScmdCameraSetupBuiltins, line 14"),"when calling getInner in ScmdCameraSetupBuiltins, line 14"),I8o(N1o(BFt,1,"when calling get in ScmdCameraSetupBuiltins, line 14"),"when calling realValue in ScmdCameraSetupBuiltins, line 14"),I8o(N1o(BFt,2,"when calling get in ScmdCameraSetupBuiltins, line 14"),"when calling realValue in ScmdCameraSetupBuiltins, line 14"),I8o(N1o(BFt,3,"when calling get in ScmdCameraSetupBuiltins, line 14"),"when calling realValue in ScmdCameraSetupBuiltins, line 14"))
set MFt=x4u("when calling nullptr in ScmdCameraSetupBuiltins, line 15")
set MM=MM-1
return MFt
endfunction
function wpi takes integer Cyi,integer Vyi,integer Byi,string Nyi returns integer
local integer Myi
set w3[MM]=Nyi
set MM=MM+1
set Myi=l5i(fNt(BQu(pa[h2o(Vyi,"when calling getPlayerId in ScmdUnitBuiltins, line 229")],Filter(Maw)),"when calling new_Group in ScmdUnitBuiltins, line 229"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 229")
set MM=MM-1
return Myi
endfunction
function L1s takes integer H1s,integer J1s,string K1s returns nothing
set w3[MM]=K1s
set MM=MM+1
call Cqo(H1s,J1s,"when calling add in LinkedList, line 85")
set MM=MM-1
endfunction
function tDc takes integer uDc,integer rDc,string sDc returns nothing
set w3[MM]=sDc
set MM=MM+1
if WF[uDc]==0 then
if uDc==0 then
call Mau("Nullpointer exception when calling LinkedList.push","when calling error in LinkedList, line 84")
else
call Mau("Called LinkedList.push on invalid object.","when calling error in LinkedList, line 84")
endif
endif
call L1s(uDc,rDc,"when calling push in LinkedList, line 84")
set MM=MM-1
endfunction
function gCt takes integer RCt,string TCt,string YCt returns nothing
local integer GCt
set w3[MM]=YCt
set MM=MM+1
if fK[RCt]!=0 then
call tDc(fK[RCt],Rvr(TCt,"when calling stringToIndex in ScmdDataTypes, line 212"),"when calling push in ScmdDataTypes, line 212")
else
set GCt=a4s("when calling new_LinkedList in ScmdDataTypes, line 214")
call tDc(GCt,Rvr(TCt,"when calling stringToIndex in ScmdDataTypes, line 214"),"when calling push in ScmdDataTypes, line 214")
set fK[RCt]=GCt
endif
set MM=MM-1
endfunction
function x6o takes integer F6o,string k6o,string j6o returns nothing
set w3[MM]=j6o
set MM=MM+1
if px[F6o]==0 then
if F6o==0 then
call Mau("Nullpointer exception when calling Exception.pushToTrace","when calling error in ScmdDataTypes, line 210")
else
call Mau("Called Exception.pushToTrace on invalid object.","when calling error in ScmdDataTypes, line 210")
endif
endif
call gCt(F6o,k6o,"when calling pushToTrace in ScmdDataTypes, line 210")
set MM=MM-1
endfunction
function I8i takes integer W8i,integer E8i,string Z8i returns nothing
local integer U8i
set w3[MM]=Z8i
set MM=MM+1
set U8i=iYu(ed,VK[W8i],-1)
call uGu(ed,VK[W8i],-1,U8i+1)
call uGu(ed,VK[W8i],U8i,b7o(E8i,"when calling clone in ScmdDataTypes, line 965"))
set MM=MM-1
endfunction
function x9o takes integer F9o,integer k9o,string j9o returns nothing
set w3[MM]=j9o
set MM=MM+1
if px[F9o]==0 then
if F9o==0 then
call Mau("Nullpointer exception when calling Trigger.addCondition","when calling error in ScmdDataTypes, line 962")
else
call Mau("Called Trigger.addCondition on invalid object.","when calling error in ScmdDataTypes, line 962")
endif
endif
call I8i(F9o,k9o,"when calling addCondition in ScmdDataTypes, line 962")
set MM=MM-1
endfunction
function MKS takes string BKS returns integer
local integer NKS
set w3[MM]=BKS
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set NKS=ZG
set UG[NKS]=686
else
call Mau("Out of memory: Could not create CallbackSingle_doAfter_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 335")
set NKS=0
endif
else
set EG=EG-1
set NKS=WG[EG]
set UG[NKS]=686
endif
set MM=MM-1
return NKS
endfunction
function xUt takes integer nUt,integer dUt,integer fUt,string RUt returns integer
local real TUt
local integer YUt
local integer GUt
local integer gUt
local integer hUt
local integer FUt
local integer kUt
local real jUt
set w3[MM]=RUt
set MM=MM+1
set TUt=I8o(N1o(fUt,0,"when calling get in ScmdCoreBuiltins, line 330"),"when calling realValue in ScmdCoreBuiltins, line 330")
set YUt=n2o(dUt,"when calling clone in ScmdCoreBuiltins, line 331")
set GUt=rDs("when calling new_HashList in ScmdCoreBuiltins, line 332")
set gUt=1
set hUt=L1o(fUt,"when calling size in ScmdCoreBuiltins, line 333")-1
loop
exitwhen gUt>hUt
call Nno(GUt,X8o(s4o(fUt,gUt,"when calling getPtr in ScmdCoreBuiltins, line 334"),"when calling clone in ScmdCoreBuiltins, line 334"),"when calling add in ScmdCoreBuiltins, line 334")
set gUt=gUt+1
endloop
set jUt=TUt
set FUt=MKS("when calling alloc_CallbackSingle_doAfter_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdCoreBuiltins, line 335")
call KGs(FUt)
set DJ[FUt]=GUt
set HJ[FUt]=YUt
call Jou(jUt,FUt,"when calling doAfter in ScmdCoreBuiltins, line 335")
set kUt=x4u("when calling nullptr in ScmdCoreBuiltins, line 347")
set MM=MM-1
return kUt
endfunction
function xgt takes integer ggt,integer hgt,integer Fgt,string kgt returns integer
local integer jgt
set w3[MM]=kgt
set MM=MM+1
set jgt=l5i(q0i(H2o(hgt,"when calling getTriggerUnit in SLangTriggerFunctions, line 91"),"when calling new_Unit in SLangTriggerFunctions, line 91"),"when calling new_SharedPointer in SLangTriggerFunctions, line 91")
set MM=MM-1
return jgt
endfunction
function xki takes integer gki,integer hki,integer Fki,string kki returns integer
local integer jki
set w3[MM]=kki
set MM=MM+1
call x8s(W2o(hki,"when calling getEnumUnit in ScmdUnitBuiltins, line 743"))
set jki=x4u("when calling nullptr in ScmdUnitBuiltins, line 744")
set MM=MM-1
return jki
endfunction
function xmt takes integer gmt,integer hmt,integer Fmt,string kmt returns integer
local integer jmt
set w3[MM]=kmt
set MM=MM+1
set jmt=l5i(rAt(cFr(S9o(N1o(Fmt,0,"when calling get in ScmdCoreBuiltins, line 178"),"when calling getInner in ScmdCoreBuiltins, line 178"),S9o(N1o(Fmt,1,"when calling get in ScmdCoreBuiltins, line 178"),"when calling getInner in ScmdCoreBuiltins, line 178")),"when calling new_Boolean in ScmdCoreBuiltins, line 178"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 178")
set MM=MM-1
return jmt
endfunction
function xvt takes integer Yvt,integer Gvt,integer gvt,string hvt returns integer
local string Fvt
local string kvt
local integer jvt
set w3[MM]=hvt
set MM=MM+1
set Fvt=S9o(N1o(gvt,0,"when calling get in ScmdCoreBuiltins, line 153"),"when calling getInner in ScmdCoreBuiltins, line 153")
if Fvt=="" then
set kvt=""
else
set kvt=bFr(Mhr(Fvt,0))+OFr(Vhr(Fvt,1))
endif
set jvt=l5i(J6i(kvt,"when calling new_String in ScmdCoreBuiltins, line 154"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 154")
set MM=MM-1
return jvt
endfunction
function xxi takes integer gxi,integer hxi,integer Fxi,string kxi returns integer
local integer jxi
set w3[MM]=kxi
set MM=MM+1
call B8s(H9o(N1o(Fxi,0,"when calling get in ScmdUnitBuiltins, line 796"),"when calling getInner in ScmdUnitBuiltins, line 796"),S9o(N1o(Fxi,1,"when calling get in ScmdUnitBuiltins, line 796"),"when calling getInner in ScmdUnitBuiltins, line 796"))
set jxi=x4u("when calling nullptr in ScmdUnitBuiltins, line 797")
set MM=MM-1
return jxi
endfunction
function yEt takes integer cEt,integer oEt,integer OEt,string lEt returns integer
local integer bEt
set w3[MM]=lEt
set MM=MM+1
set bEt=l5i(rAt(h8o(N1o(OEt,0,"when calling get in ScmdCoreBuiltins, line 273"),"when calling realValue in ScmdCoreBuiltins, line 273")==0.,"when calling new_Boolean in ScmdCoreBuiltins, line 273"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 273")
set MM=MM-1
return bEt
endfunction
function yOi takes integer cOi,integer oOi,integer OOi,string lOi returns integer
local integer bOi
set w3[MM]=lOi
set MM=MM+1
call cJu(H9o(N1o(OOi,0,"when calling get in ScmdUnitBuiltins, line 100"),"when calling getInner in ScmdUnitBuiltins, line 100"),I8o(N1o(OOi,1,"when calling get in ScmdUnitBuiltins, line 100"),"when calling realValue in ScmdUnitBuiltins, line 100"))
set bOi=x4u("when calling nullptr in ScmdUnitBuiltins, line 101")
set MM=MM-1
return bOi
endfunction
function yRi takes integer cRi,integer oRi,integer ORi,string lRi returns integer
local integer bRi
set w3[MM]=lRi
set MM=MM+1
set bRi=l5i(rAt(olr(W2o(oRi,"when calling getEnumUnit in ScmdUnitBuiltins, line 454"),t8o(N1o(ORi,0,"when calling get in ScmdUnitBuiltins, line 454"),"when calling intValue in ScmdUnitBuiltins, line 454"),S9o(N1o(ORi,1,"when calling get in ScmdUnitBuiltins, line 454"),"when calling getInner in ScmdUnitBuiltins, line 454")),"when calling new_Boolean in ScmdUnitBuiltins, line 454"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 454")
set MM=MM-1
return bRi
endfunction
function yai takes integer cai,integer oai,integer Oai,string lai returns integer
local integer bai
set w3[MM]=lai
set MM=MM+1
call wlr(W2o(oai,"when calling getEnumUnit in ScmdUnitBuiltins, line 324"))
set bai=x4u("when calling nullptr in ScmdUnitBuiltins, line 325")
set MM=MM-1
return bai
endfunction
function ydi takes integer cdi,integer odi,integer Odi,string ldi returns integer
local integer bdi
set w3[MM]=ldi
set MM=MM+1
call uws(H9o(N1o(Odi,0,"when calling get in ScmdUnitBuiltins, line 378"),"when calling getInner in ScmdUnitBuiltins, line 378"),UNIT_RF_HIT_POINTS_REGENERATION_RATE,I8o(N1o(Odi,1,"when calling get in ScmdUnitBuiltins, line 378"),"when calling realValue in ScmdUnitBuiltins, line 378"))
set bdi=x4u("when calling nullptr in ScmdUnitBuiltins, line 379")
set MM=MM-1
return bdi
endfunction
function yei takes integer cei,integer oei,integer Oei,string lei returns integer
local integer bei
set w3[MM]=lei
set MM=MM+1
call Iqo(X7o(N1o(Oei,0,"when calling get in ScmdUnitBuiltins, line 267"),"when calling getInner in ScmdUnitBuiltins, line 267"),H9o(N1o(Oei,1,"when calling get in ScmdUnitBuiltins, line 267"),"when calling getInner in ScmdUnitBuiltins, line 267"))
set bei=x4u("when calling nullptr in ScmdUnitBuiltins, line 268")
set MM=MM-1
return bei
endfunction
function yii takes integer cii,integer oii,integer Oii,string lii returns integer
local integer bii
set w3[MM]=lii
set MM=MM+1
set bii=l5i(j1t(VUu(H8o(N1o(Oii,0,"when calling get in ScmdRectBuiltins, line 23"),"when calling getInner in ScmdRectBuiltins, line 23")),"when calling new_Real in ScmdRectBuiltins, line 23"),"when calling new_SharedPointer in ScmdRectBuiltins, line 23")
set MM=MM-1
return bii
endfunction
function ykt takes integer ckt,integer okt,integer Okt,string lkt returns integer
local integer bkt
set w3[MM]=lkt
set MM=MM+1
if ea==pa[h2o(okt,"when calling getPlayerId in ScmdCameraSetupBuiltins, line 23")]then
call CameraSetupApplyWithZ(p2o(N1o(Okt,0,"when calling get in ScmdCameraSetupBuiltins, line 24"),"when calling getInner in ScmdCameraSetupBuiltins, line 24"),I8o(N1o(Okt,1,"when calling get in ScmdCameraSetupBuiltins, line 24"),"when calling realValue in ScmdCameraSetupBuiltins, line 24"))
endif
set bkt=x4u("when calling nullptr in ScmdCameraSetupBuiltins, line 25")
set MM=MM-1
return bkt
endfunction
function ypi takes integer cpi,integer opi,integer Opi,string lpi returns integer
local integer bpi
set w3[MM]=lpi
set MM=MM+1
set bpi=l5i(fNt(sWu(pa[h2o(opi,"when calling getPlayerId in ScmdUnitBuiltins, line 235")],H8o(N1o(Opi,0,"when calling get in ScmdUnitBuiltins, line 235"),"when calling getInner in ScmdUnitBuiltins, line 235"),Filter(unw)),"when calling new_Group in ScmdUnitBuiltins, line 235"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 235")
set MM=MM-1
return bpi
endfunction
function NFo takes integer Lgo,integer Xgo,integer Cgo,string Vgo,integer Bgo,string Ngo,integer Mgo,string who returns nothing
local integer uho
local integer rho
local integer sho
local integer tho
local integer iho
local integer Sho
local integer cho
local integer oho
local integer Oho
local integer lho
local integer bho
local integer yho
local integer pho
local integer eho
local integer qho
local integer aho
local integer nho
local integer dho
local boolean fho
local integer Rho
local integer Tho
local integer Yho
local integer Gho
local integer gho
local integer hho
local integer Fho
local integer kho
local string jho
local string xho
local integer vho
local integer mho
local integer Qho
local integer Who
local integer Eho
local integer Zho
local integer Uho
local string Iho
local integer Pho
local integer Aho
local integer Dho
local integer Hho
local integer Jho
local integer Kho
local integer Lho
local integer Xho
local integer Cho
local integer Vho
local integer Bho
local integer Nho
local integer Mho
local integer wFo
local integer uFo
local integer rFo
local integer sFo
local integer tFo
local integer iFo
local boolean SFo
local integer cFo
local integer oFo
local integer OFo
local integer lFo
local integer bFo
local integer yFo
local integer pFo
local integer eFo
local integer qFo
local integer aFo
local integer nFo
local integer dFo
local unit fFo
local group RFo
local unit TFo
local integer YFo
local integer GFo
local integer gFo
local integer hFo
local integer FFo
local integer kFo
local integer jFo
local integer xFo
local integer vFo
local integer mFo
local integer QFo
local integer WFo
local integer EFo
local integer ZFo
local integer UFo
local integer IFo
local integer PFo
local integer AFo
local integer DFo
local integer HFo
local integer JFo
local integer KFo
local integer LFo
local integer XFo
local integer CFo
local integer VFo
local integer BFo
if Lgo==0 then
set w3[MM]=Vgo
set MM=MM+1
if px[f7o(Cgo,"when calling get in ScmdDataTypes, line 1234")]==1424 then
call NFo(3,f7o(Cgo,"when calling get in ScmdDataTypes, line 1235"),Xgo,"when calling evaluate in ScmdDataTypes, line 1235",0,null,0,null)
set rho=inw
set MM=MM-1
set inw=rho
set fFo=null
set RFo=null
set TFo=null
return
endif
if px[f7o(Cgo,"when calling get in ScmdDataTypes, line 1236")]==1447 then
set uho=p6o(Xgo,p9o(f7o(Cgo,"when calling get in ScmdDataTypes, line 1237"),"when calling toString in ScmdDataTypes, line 1237"),"when calling resolve in ScmdDataTypes, line 1237")
if uho==0 then
set uho=d9o(f7o(Cgo,"when calling get in ScmdDataTypes, line 1239"),h2o(Xgo,"when calling getPlayerId in ScmdDataTypes, line 1239"),"when calling resolve in ScmdDataTypes, line 1239")
endif
set MM=MM-1
set inw=uho
set fFo=null
set RFo=null
set TFo=null
return
endif
set sho=b7o(Cgo,"when calling clone in ScmdDataTypes, line 1241")
set MM=MM-1
set inw=sho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==1 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(0,Cgo,s4o(Bgo,0,"when calling getPtr in SLangTriggerFunctions, line 34"),"when calling resolve in SLangTriggerFunctions, line 34",0,null,0,null)
set tho=inw
if not(px[f7o(tho,"when calling get in SLangTriggerFunctions, line 35")]==1448)then
call KGo(5,tho,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in SLangTriggerFunctions, line 36")
set tho=l5i(qCt("...cannot be cast to Trigger","when calling new_Exception in SLangTriggerFunctions, line 37"),"when calling new_SharedPointer in SLangTriggerFunctions, line 37")
else
call W9o(f7o(tho,"when calling get in SLangTriggerFunctions, line 39"),s4o(Bgo,1,"when calling getPtr in SLangTriggerFunctions, line 39"),"when calling addAction in SLangTriggerFunctions, line 39")
call KGo(5,tho,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in SLangTriggerFunctions, line 40")
set tho=x4u("when calling nullptr in SLangTriggerFunctions, line 41")
endif
set iho=tho
set MM=MM-1
set inw=iho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==2 then
set w3[MM]=Vgo
set MM=MM+1
call NFo(0,Cgo,RK[Xgo],"when calling resolve in ScmdDataTypes, line 1645",0,null,0,null)
set Sho=inw
set Oho=px[f7o(Sho,"when calling get in ScmdDataTypes, line 1646")]
if Oho>=1422 and Oho<=1423 then
set MM=MM-1
set inw=Sho
set fFo=null
set RFo=null
set TFo=null
return
endif
set lho=px[f7o(Sho,"when calling get in ScmdDataTypes, line 1648")]
if not((lho>=1415 and lho<=1417)or(lho>=1417 and lho<=1420))then
set cho=Y4u(U7o(x8o(f7o(Sho,"when calling get in ScmdDataTypes, line 1649"),"when calling getTypeToken in ScmdDataTypes, line 1649"),"when calling getName in ScmdDataTypes, line 1649")+" cannot be cast to Callable","when calling wrap in ScmdDataTypes, line 1649")
call KGo(5,Sho,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1650")
set MM=MM-1
set inw=cho
set fFo=null
set RFo=null
set TFo=null
return
endif
call NFo(17,f7o(Sho,"when calling get in ScmdDataTypes, line 1652"),Cgo,null,TK[Xgo],"when calling call in ScmdDataTypes, line 1652",0,null)
set oho=inw
call KGo(5,Sho,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1653")
set bho=px[f7o(oho,"when calling get in ScmdDataTypes, line 1654")]
if bho>=1422 and bho<=1423 then
set BFo=f7o(oho,"when calling get in ScmdDataTypes, line 1655")
call Zgo(1,f7o(RK[Xgo],"when calling get in ScmdDataTypes, line 1655"),"when calling toString in ScmdDataTypes, line 1655")
call x6o(BFo,Snw,"when calling pushToTrace in ScmdDataTypes, line 1655")
endif
set MM=MM-1
set inw=oho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==3 then
set w3[MM]=Vgo
set MM=MM+1
if px[Xgo]==0 then
if Xgo==0 then
call Mau("Nullpointer exception when calling Expression.evaluate","when calling error in ScmdDataTypes, line 1644")
else
call Mau("Called Expression.evaluate on invalid object.","when calling error in ScmdDataTypes, line 1644")
endif
endif
call NFo(2,Xgo,Cgo,"when calling evaluate in ScmdDataTypes, line 1644",0,null,0,null)
set yho=inw
set MM=MM-1
set inw=yho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==4 then
set w3[MM]=Ngo
set MM=MM+1
set pho=w2o(Xgo,Bgo,"when calling resolveOverload in ScmdDataTypes, line 1482")
if pho!=0 then
set eho=0
loop
exitwhen not(eho!=L1o(Bgo,"when calling size in ScmdDataTypes, line 1485")and H7o(wDc(CJ[pho],vdo(RDc(CJ[pho],"when calling size in ScmdDataTypes, line 1485")-1,eho),"when calling get in ScmdDataTypes, line 1485"),N1o(Bgo,eho,"when calling get in ScmdDataTypes, line 1485"),"when calling isInstance in ScmdDataTypes, line 1485"))
set eho=eho+1
endloop
if eho!=L1o(Bgo,"when calling size in ScmdDataTypes, line 1487")then
set qho=Y4u(U7o(x8o(N1o(Bgo,eho,"when calling get in ScmdDataTypes, line 1488"),"when calling getTypeToken in ScmdDataTypes, line 1488"),"when calling getName in ScmdDataTypes, line 1488")+" cannot be cast to "+U7o(wDc(CJ[pho],vdo(RDc(CJ[pho],"when calling size in ScmdDataTypes, line 1488")-1,eho),"when calling get in ScmdDataTypes, line 1488"),"when calling getName in ScmdDataTypes, line 1488"),"when calling wrap in ScmdDataTypes, line 1488")
set MM=MM-1
set inw=qho
set fFo=null
set RFo=null
set TFo=null
return
endif
if eho==L1o(Bgo,"when calling size in ScmdDataTypes, line 1489")then
call NFo(16,XJ[pho],Cgo,null,Bgo,"when calling call in ScmdDataTypes, line 1490",0,null)
set nho=inw
set MM=MM-1
set inw=nho
set fFo=null
set RFo=null
set TFo=null
return
endif
endif
set aho=l5i(qCt("No overload found","when calling new_Exception in ScmdDataTypes, line 1491"),"when calling new_SharedPointer in ScmdDataTypes, line 1491")
set MM=MM-1
set inw=aho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==5 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(0,Cgo,s4o(Bgo,0,"when calling getPtr in ScmdCoreBuiltins, line 357"),"when calling resolve in ScmdCoreBuiltins, line 357",0,null,0,null)
set dho=inw
set Tho=px[f7o(dho,"when calling get in ScmdCoreBuiltins, line 358")]
if not(Tho>=1422 and Tho<=1423)then
set Yho=px[f7o(dho,"when calling get in ScmdCoreBuiltins, line 359")]
set fho=not((Yho==1433 or Yho==1446 and c4o(f7o(dho,"when calling get in ScmdCoreBuiltins, line 359"),"when calling booleanValue in ScmdCoreBuiltins, line 359")==false)or px[f7o(dho,"when calling get in ScmdCoreBuiltins, line 359")]==1437 or px[f7o(dho,"when calling get in ScmdCoreBuiltins, line 359")]==1449)
call KGo(5,dho,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdCoreBuiltins, line 360")
if fho then
call NFo(0,Cgo,s4o(Bgo,1,"when calling getPtr in ScmdCoreBuiltins, line 361"),"when calling resolve in ScmdCoreBuiltins, line 361",0,null,0,null)
set Rho=inw
else
call NFo(0,Cgo,s4o(Bgo,2,"when calling getPtr in ScmdCoreBuiltins, line 361"),"when calling resolve in ScmdCoreBuiltins, line 361",0,null,0,null)
set Rho=inw
endif
set dho=Rho
endif
set Gho=dho
set MM=MM-1
set inw=Gho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==6 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(15,Cgo,N1o(Bgo,0,"when calling get in ScmdCoreBuiltins, line 460"),S9o(N1o(Bgo,1,"when calling get in ScmdCoreBuiltins, line 460"),"when calling getInner in ScmdCoreBuiltins, line 460"),s4o(Bgo,2,"when calling getPtr in ScmdCoreBuiltins, line 460"),null,s4o(Bgo,3,"when calling getPtr in ScmdCoreBuiltins, line 460"),"when calling defnCmd in ScmdCoreBuiltins, line 460")
set gho=inw
set MM=MM-1
set inw=gho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==7 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(0,Cgo,s4o(Bgo,0,"when calling getPtr in SLangTriggerFunctions, line 23"),"when calling resolve in SLangTriggerFunctions, line 23",0,null,0,null)
set hho=inw
if not(px[f7o(hho,"when calling get in SLangTriggerFunctions, line 24")]==1448)then
call KGo(5,hho,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in SLangTriggerFunctions, line 25")
set hho=l5i(qCt("...cannot be cast to Trigger","when calling new_Exception in SLangTriggerFunctions, line 26"),"when calling new_SharedPointer in SLangTriggerFunctions, line 26")
else
call x9o(f7o(hho,"when calling get in SLangTriggerFunctions, line 28"),s4o(Bgo,1,"when calling getPtr in SLangTriggerFunctions, line 28"),"when calling addCondition in SLangTriggerFunctions, line 28")
call KGo(5,hho,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in SLangTriggerFunctions, line 29")
set hho=x4u("when calling nullptr in SLangTriggerFunctions, line 30")
endif
set Fho=hho
set MM=MM-1
set inw=Fho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==8 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(20,Xgo,Cgo,null,Bgo,"when calling call in ScmdDataTypes, line 1527",0,null)
set kho=inw
set MM=MM-1
set inw=kho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==9 then
set w3[MM]=Ngo
set MM=MM+1
set jho=""
set xho=""
if L1o(Bgo,"when calling size in ScmdDataTypes, line 1341")>yZc(EK[Xgo],"when calling size in ScmdDataTypes, line 1341")and(not aZc(EK[Xgo],"when calling isEmpty in ScmdDataTypes, line 1341"))then
set vho=0
set mho=L1o(Bgo,"when calling size in ScmdDataTypes, line 1343")-yZc(EK[Xgo],"when calling size in ScmdDataTypes, line 1343")+1
loop
exitwhen not(vho!=mho)
set Qho=s4o(Bgo,L1o(Bgo,"when calling size in ScmdDataTypes, line 1345")-1,"when calling getPtr in ScmdDataTypes, line 1345")
set Aho=px[N8o(Qho,"when calling get in ScmdDataTypes, line 1346")]
if not(Aho>=1432 and Aho<=1436)then
exitwhen true
endif
call D1o(Bgo,L1o(Bgo,"when calling size in ScmdDataTypes, line 1348")-1,"when calling removeAt in ScmdDataTypes, line 1348")
call Zgo(1,N8o(Qho,"when calling get in ScmdDataTypes, line 1349"),"when calling toString in ScmdDataTypes, line 1349")
set xho=Snw+jho+xho
set jho=n8o(N8o(Qho,"when calling get in ScmdDataTypes, line 1350"),"when calling getPreviousWhitespaces in ScmdDataTypes, line 1350")
call KGo(10,Qho,"when calling dispatch_SharedPointer_destroySharedPointer in ScmdDataTypes, line 1351")
set vho=vho+1
endloop
if vho!=0 then
call U1o(Bgo,l5i(M4u(xho,jho,"when calling forStrings in ScmdDataTypes, line 1354"),"when calling new_SharedPointer in ScmdDataTypes, line 1354"),"when calling add in ScmdDataTypes, line 1354")
endif
endif
if L1o(Bgo,"when calling size in ScmdDataTypes, line 1355")!=yZc(EK[Xgo],"when calling size in ScmdDataTypes, line 1355")then
set Dho=l5i(qCt("Неверное количество аргументов, ожидалось "+tgu(yZc(EK[Xgo],"when calling size in ScmdDataTypes, line 1356")),"when calling new_Exception in ScmdDataTypes, line 1356"),"when calling new_SharedPointer in ScmdDataTypes, line 1356")
set MM=MM-1
set inw=Dho
set fFo=null
set RFo=null
set TFo=null
return
endif
set Who=n2o(Cgo,"when calling clone in ScmdDataTypes, line 1357")
set Eho=0
set Zho=L1o(Bgo,"when calling size in ScmdDataTypes, line 1358")-1
loop
exitwhen Eho>Zho
call o6o(Who,gvr(TZc(EK[Xgo],Eho,"when calling get in ScmdDataTypes, line 1359"),"when calling stringFromIndex in ScmdDataTypes, line 1359"),X8o(s4o(Bgo,Eho,"when calling getPtr in ScmdDataTypes, line 1359"),"when calling clone in ScmdDataTypes, line 1359"),"when calling assign in ScmdDataTypes, line 1359")
set Eho=Eho+1
endloop
set Uho=fHs(UK[Xgo],"when calling iterator in ScmdDataTypes, line 1360")
loop
exitwhen not PPs(Uho,"when calling hasNext in ScmdDataTypes, line 1360")
set Iho=gvr(EPs(Uho,"when calling next in ScmdDataTypes, line 1360"),"when calling stringFromIndex in ScmdDataTypes, line 1360")
call o6o(Who,Iho,b7o(BZc(UK[Xgo],Rvr(Iho,"when calling stringToIndex in ScmdDataTypes, line 1361"),"when calling get in ScmdDataTypes, line 1361"),"when calling clone in ScmdDataTypes, line 1361"),"when calling assign in ScmdDataTypes, line 1361")
endloop
call HPs(Uho,"when calling close in ScmdDataTypes, line 1360")
call NFo(0,Who,ZK[Xgo],"when calling resolve in ScmdDataTypes, line 1362",0,null,0,null)
set Pho=inw
call KGo(0,Who,"when calling dispatch_Context_destroyContext in ScmdDataTypes, line 1363")
set MM=MM-1
set inw=Pho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==10 then
set w3[MM]=Ngo
set MM=MM+1
set Hho=EVt(X8o(s4o(Bgo,0,"when calling getPtr in ScmdCoreBuiltins, line 414"),"when calling clone in ScmdCoreBuiltins, line 414"),"when calling new_Expression in ScmdCoreBuiltins, line 414")
set Jho=1
loop
exitwhen not(Jho<L1o(Bgo,"when calling size in ScmdCoreBuiltins, line 416"))
set Kho=s4o(Bgo,Jho,"when calling getPtr in ScmdCoreBuiltins, line 417")
if px[N8o(Kho,"when calling get in ScmdCoreBuiltins, line 418")]==1450 then
set Lho=0
loop
exitwhen not(Lho<s0o(N8o(Kho,"when calling get in ScmdCoreBuiltins, line 420"),"when calling size in ScmdCoreBuiltins, line 420"))
call U1o(L6o(Hho,"when calling getArgs in ScmdCoreBuiltins, line 421"),b7o(M9o(N8o(Kho,"when calling get in ScmdCoreBuiltins, line 421"),Lho,"when calling get in ScmdCoreBuiltins, line 421"),"when calling clone in ScmdCoreBuiltins, line 421"),"when calling add in ScmdCoreBuiltins, line 421")
set Lho=Lho+1
endloop
else
call U1o(L6o(Hho,"when calling getArgs in ScmdCoreBuiltins, line 424"),X8o(Kho,"when calling clone in ScmdCoreBuiltins, line 424"),"when calling add in ScmdCoreBuiltins, line 424")
endif
set Jho=Jho+1
endloop
call NFo(3,Hho,Cgo,"when calling evaluate in ScmdCoreBuiltins, line 426",0,null,0,null)
set Xho=inw
call Q6o(Hho,"when calling dispatch_Expression_destroyExpression in ScmdCoreBuiltins, line 427")
set Cho=Xho
set MM=MM-1
set inw=Cho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==11 then
set w3[MM]=Ngo
set MM=MM+1
if px[Xgo]==0 then
if Xgo==0 then
call Mau("Nullpointer exception when calling Function.callImpl","when calling error in ScmdDataTypes, line 1304")
else
call Mau("Called Function.callImpl on invalid object.","when calling error in ScmdDataTypes, line 1304")
endif
endif
if px[Xgo]<=1417 then
call NFo(21,Xgo,Cgo,null,Bgo,"when calling callImpl in ScmdDataTypes, line 1304",0,null)
set Vho=inw
else
call NFo(9,Xgo,Cgo,null,Bgo,"when calling callImpl in ScmdDataTypes, line 1304",0,null)
set Vho=inw
endif
set MM=MM-1
set inw=Vho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==12 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(15,Cgo,N1o(Bgo,0,"when calling get in ScmdCoreBuiltins, line 458"),null,s4o(Bgo,1,"when calling getPtr in ScmdCoreBuiltins, line 458"),null,s4o(Bgo,2,"when calling getPtr in ScmdCoreBuiltins, line 458"),"when calling defnCmd in ScmdCoreBuiltins, line 458")
set Bho=inw
set MM=MM-1
set inw=Bho
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==13 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(0,Xgo,Cgo,"when calling resolve in ScmdCoreBuiltins, line 432",0,null,0,null)
set Nho=inw
if not(px[f7o(Nho,"when calling get in ScmdCoreBuiltins, line 433")]==1450)then
set sFo=l5i(qCt("Parameter declaration vector should be a vector","when calling new_Exception in ScmdCoreBuiltins, line 434"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 434")
set MM=MM-1
set inw=sFo
set fFo=null
set RFo=null
set TFo=null
return
else
set Mho=kAs(X9o(f7o(Nho,"when calling get in ScmdCoreBuiltins, line 436"),"when calling toHashList in ScmdCoreBuiltins, line 436"),"when calling iterator in ScmdCoreBuiltins, line 436")
loop
exitwhen not PPs(Mho,"when calling hasNext in ScmdCoreBuiltins, line 436")
set wFo=EPs(Mho,"when calling next in ScmdCoreBuiltins, line 436")
set rFo=px[f7o(wFo,"when calling get in ScmdCoreBuiltins, line 437")]
if not((rFo>=1433 and rFo<=1436)or(rFo>=1439 and rFo<=1440)or(rFo>=1445 and rFo<=1446))then
call HPs(Mho,"when calling close in ScmdCoreBuiltins, line 436")
set tFo=l5i(qCt("Unsupported binding form","when calling new_Exception in ScmdCoreBuiltins, line 438"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 438")
set MM=MM-1
set inw=tFo
set fFo=null
set RFo=null
set TFo=null
return
endif
endloop
call HPs(Mho,"when calling close in ScmdCoreBuiltins, line 436")
endif
set uFo=l5i(A2t(Xgo,X9o(f7o(Nho,"when calling get in ScmdCoreBuiltins, line 439"),"when calling toHashList in ScmdCoreBuiltins, line 439"),X8o(Bgo,"when calling clone in ScmdCoreBuiltins, line 439"),"when calling new_RuntimeFunction in ScmdCoreBuiltins, line 439"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 439")
call KGo(5,Nho,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdCoreBuiltins, line 440")
set MM=MM-1
set inw=uFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==14 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(0,Cgo,s4o(Bgo,0,"when calling getPtr in ScmdCoreBuiltins, line 350"),"when calling resolve in ScmdCoreBuiltins, line 350",0,null,0,null)
set iFo=inw
set oFo=px[f7o(iFo,"when calling get in ScmdCoreBuiltins, line 351")]
if not(oFo>=1422 and oFo<=1423)then
set OFo=px[f7o(iFo,"when calling get in ScmdCoreBuiltins, line 352")]
set SFo=not((OFo==1433 or OFo==1446 and c4o(f7o(iFo,"when calling get in ScmdCoreBuiltins, line 352"),"when calling booleanValue in ScmdCoreBuiltins, line 352")==false)or px[f7o(iFo,"when calling get in ScmdCoreBuiltins, line 352")]==1437 or px[f7o(iFo,"when calling get in ScmdCoreBuiltins, line 352")]==1449)
call KGo(5,iFo,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdCoreBuiltins, line 353")
if SFo then
call NFo(0,Cgo,s4o(Bgo,1,"when calling getPtr in ScmdCoreBuiltins, line 354"),"when calling resolve in ScmdCoreBuiltins, line 354",0,null,0,null)
set cFo=inw
else
set cFo=x4u("when calling nullptr in ScmdCoreBuiltins, line 354")
endif
set iFo=cFo
endif
set lFo=iFo
set MM=MM-1
set inw=lFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==15 then
set w3[MM]=who
set MM=MM+1
call NFo(13,Xgo,Bgo,null,Mgo,"when calling makeFn in ScmdCoreBuiltins, line 449",0,null)
set bFo=inw
set yFo=px[f7o(bFo,"when calling get in ScmdCoreBuiltins, line 450")]
if yFo>=1422 and yFo<=1423 then
set MM=MM-1
set inw=bFo
set fFo=null
set RFo=null
set TFo=null
return
endif
if not H2u(h2o(Xgo,"when calling getPlayerId in ScmdCoreBuiltins, line 452"),S9o(Cgo,"when calling getInner in ScmdCoreBuiltins, line 452"),Vgo,bFo,"when calling assign in ScmdCoreBuiltins, line 452")then
set pFo=l5i(qCt("Symbol is protected","when calling new_Exception in ScmdCoreBuiltins, line 453"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 453")
set MM=MM-1
set inw=pFo
set fFo=null
set RFo=null
set TFo=null
return
endif
set eFo=x4u("when calling nullptr in ScmdCoreBuiltins, line 454")
set MM=MM-1
set inw=eFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==16 then
set w3[MM]=Ngo
set MM=MM+1
if jj[Xgo]==0 then
if Xgo==0 then
call Mau("Nullpointer exception when calling IBuiltin.call","when calling error in ScmdDataTypes, line 1374")
else
call Mau("Called IBuiltin.call on invalid object.","when calling error in ScmdDataTypes, line 1374")
endif
endif
if jj[Xgo]<=1022 then
if jj[Xgo]<=925 then
if jj[Xgo]<=877 then
if jj[Xgo]<=853 then
if jj[Xgo]<=841 then
if jj[Xgo]<=835 then
if jj[Xgo]<=832 then
if jj[Xgo]<=830 then
if jj[Xgo]<=829 then
set qFo=eZt(Xgo,Cgo,Bgo,"when calling call_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Gwi(Xgo,Cgo,Bgo,"when calling call_addOverload_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=831 then
set qFo=MRt(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
else
set qFo=QGt(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=834 then
if jj[Xgo]<=833 then
set qFo=xgt(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
else
set qFo=Zgt(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=Hgt(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=838 then
if jj[Xgo]<=837 then
if jj[Xgo]<=836 then
set qFo=Vgt(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
else
set qFo=rht(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=oht(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=840 then
if jj[Xgo]<=839 then
set qFo=eht(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
else
set qFo=Rht(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=Fht(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=847 then
if jj[Xgo]<=844 then
if jj[Xgo]<=843 then
if jj[Xgo]<=842 then
set qFo=AFt(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdDataTypes, line 1374")
else
set qFo=iwi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=nwi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=846 then
if jj[Xgo]<=845 then
set qFo=Uii(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
else
set qFo=TSi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdSoundFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=Ayi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=850 then
if jj[Xgo]<=849 then
if jj[Xgo]<=848 then
set qFo=wpi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Spi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=dpi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=852 then
if jj[Xgo]<=851 then
set qFo=sIi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SotfrpGuiCoreUnit in ScmdDataTypes, line 1374")
else
set qFo=OIi(Xgo,Cgo,Bgo,"when calling call_registerProtectedBuiltin_SotfrpGuiCoreUnit in ScmdDataTypes, line 1374")
endif
else
set qFo=EWi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=865 then
if jj[Xgo]<=859 then
if jj[Xgo]<=856 then
if jj[Xgo]<=855 then
if jj[Xgo]<=854 then
set qFo=lYt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
else
set qFo=Bxt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=svt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=858 then
if jj[Xgo]<=857 then
set qFo=YZt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
call NFo(14,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374",0,null)
set qFo=inw
endif
else
call NFo(5,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374",0,null)
set qFo=inw
endif
elseif jj[Xgo]<=862 then
if jj[Xgo]<=861 then
if jj[Xgo]<=860 then
set qFo=lIt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=fIt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Qwi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=864 then
if jj[Xgo]<=863 then
set qFo=uui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
else
set qFo=dti(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Fti(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=871 then
if jj[Xgo]<=868 then
if jj[Xgo]<=867 then
if jj[Xgo]<=866 then
set qFo=eci(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Qci(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=soi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=870 then
if jj[Xgo]<=869 then
set qFo=qoi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=koi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Aoi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=874 then
if jj[Xgo]<=873 then
if jj[Xgo]<=872 then
set qFo=wOi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=yOi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=jOi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=876 then
if jj[Xgo]<=875 then
set qFo=DOi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=uli(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=pli(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=901 then
if jj[Xgo]<=889 then
if jj[Xgo]<=883 then
if jj[Xgo]<=880 then
if jj[Xgo]<=879 then
if jj[Xgo]<=878 then
set qFo=hli(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Ili(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Nli(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=882 then
if jj[Xgo]<=881 then
set qFo=pbi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=hbi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Ibi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=886 then
if jj[Xgo]<=885 then
if jj[Xgo]<=884 then
set qFo=Nbi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=lyi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=vpi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=888 then
if jj[Xgo]<=887 then
set qFo=Upi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=wei(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=yei(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=895 then
if jj[Xgo]<=892 then
if jj[Xgo]<=891 then
if jj[Xgo]<=890 then
set qFo=gei(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Uei(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Bei(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=894 then
if jj[Xgo]<=893 then
set qFo=Oqi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Tqi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Wqi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=898 then
if jj[Xgo]<=897 then
if jj[Xgo]<=896 then
set qFo=Xqi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Sai(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=dai(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=900 then
if jj[Xgo]<=899 then
set qFo=vai(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Jai(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=sni(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=913 then
if jj[Xgo]<=907 then
if jj[Xgo]<=904 then
if jj[Xgo]<=903 then
if jj[Xgo]<=902 then
set qFo=qni(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=kni(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Ani(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=906 then
if jj[Xgo]<=905 then
set qFo=wdi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=ydi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=gdi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=910 then
if jj[Xgo]<=909 then
if jj[Xgo]<=908 then
set qFo=Udi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Bdi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Ofi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=912 then
if jj[Xgo]<=911 then
set qFo=Tfi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Wfi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Xfi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=919 then
if jj[Xgo]<=916 then
if jj[Xgo]<=915 then
if jj[Xgo]<=914 then
set qFo=SRi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=dRi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=vRi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=918 then
if jj[Xgo]<=917 then
set qFo=JRi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=sTi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=qTi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=922 then
if jj[Xgo]<=921 then
if jj[Xgo]<=920 then
set qFo=mTi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=KTi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=tYi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=924 then
if jj[Xgo]<=923 then
set qFo=aYi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=jYi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=DYi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=974 then
if jj[Xgo]<=950 then
if jj[Xgo]<=938 then
if jj[Xgo]<=932 then
if jj[Xgo]<=929 then
if jj[Xgo]<=927 then
if jj[Xgo]<=926 then
set qFo=uGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=pGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=928 then
set qFo=hGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=IGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=931 then
if jj[Xgo]<=930 then
set qFo=NGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=lgi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Ygi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=935 then
if jj[Xgo]<=934 then
if jj[Xgo]<=933 then
set qFo=Egi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Cgi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=chi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=937 then
if jj[Xgo]<=936 then
set qFo=fhi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=mhi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Khi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=944 then
if jj[Xgo]<=941 then
if jj[Xgo]<=940 then
if jj[Xgo]<=939 then
set qFo=lFi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=gFi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=PFi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=943 then
if jj[Xgo]<=942 then
set qFo=MFi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=bki(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Gki(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=947 then
if jj[Xgo]<=946 then
if jj[Xgo]<=945 then
set qFo=Zki(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Vki(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=oji(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=949 then
if jj[Xgo]<=948 then
set qFo=Rji(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Qji(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Lji(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=962 then
if jj[Xgo]<=956 then
if jj[Xgo]<=953 then
if jj[Xgo]<=952 then
if jj[Xgo]<=951 then
set qFo=ixi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=nxi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=xxi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=955 then
if jj[Xgo]<=954 then
set qFo=Hxi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=rvi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=evi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=959 then
if jj[Xgo]<=958 then
if jj[Xgo]<=957 then
set qFo=JWi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
else
set qFo=sEi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
endif
else
set qFo=qEi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=961 then
if jj[Xgo]<=960 then
set qFo=kEi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
else
set qFo=AEi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
endif
else
set qFo=BUi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=968 then
if jj[Xgo]<=965 then
if jj[Xgo]<=964 then
if jj[Xgo]<=963 then
set qFo=mIi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit in ScmdDataTypes, line 1374")
else
set qFo=XPi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiDestructables in ScmdDataTypes, line 1374")
endif
else
set qFo=wAi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiDestructables in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=967 then
if jj[Xgo]<=966 then
set qFo=Qnt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_assign_setArgumentsTypes_registerBuiltin_SLangChatSystem in ScmdDataTypes, line 1374")
else
set qFo=Cat(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerBuiltin_SLangChatSystem in ScmdDataTypes, line 1374")
endif
else
set qFo=Fnt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerBuiltin_SLangChatSystem in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=971 then
if jj[Xgo]<=970 then
if jj[Xgo]<=969 then
set qFo=Pnt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerBuiltin_SLangChatSystem in ScmdDataTypes, line 1374")
else
set qFo=Wmi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=wQi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=973 then
if jj[Xgo]<=972 then
set qFo=mat(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangChatSystem in ScmdDataTypes, line 1374")
else
set qFo=Dat(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangChatSystem in ScmdDataTypes, line 1374")
endif
else
set qFo=Zft(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=998 then
if jj[Xgo]<=986 then
if jj[Xgo]<=980 then
if jj[Xgo]<=977 then
if jj[Xgo]<=976 then
if jj[Xgo]<=975 then
set qFo=Lft(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
else
set qFo=uRt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=ORt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=979 then
if jj[Xgo]<=978 then
set qFo=nRt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
else
set qFo=hRt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=mRt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=983 then
if jj[Xgo]<=982 then
if jj[Xgo]<=981 then
set qFo=LRt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
else
set qFo=lTt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=TTt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=985 then
if jj[Xgo]<=984 then
set qFo=QTt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
else
set qFo=KTt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=NTt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=992 then
if jj[Xgo]<=989 then
if jj[Xgo]<=988 then
if jj[Xgo]<=987 then
set qFo=aYt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
else
set qFo=YYt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=jYt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=991 then
if jj[Xgo]<=990 then
set qFo=ZYt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
else
set qFo=HYt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=VYt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=995 then
if jj[Xgo]<=994 then
if jj[Xgo]<=993 then
set qFo=rGt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
else
set qFo=oGt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=eGt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=997 then
if jj[Xgo]<=996 then
set qFo=RGt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
else
set qFo=FGt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=PGt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1010 then
if jj[Xgo]<=1004 then
if jj[Xgo]<=1001 then
if jj[Xgo]<=1000 then
if jj[Xgo]<=999 then
set qFo=LGt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
else
set qFo=MGt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
else
call NFo(7,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374",0,null)
set qFo=inw
endif
elseif jj[Xgo]<=1003 then
if jj[Xgo]<=1002 then
call NFo(1,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374",0,null)
set qFo=inw
else
set qFo=igt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=egt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1007 then
if jj[Xgo]<=1006 then
if jj[Xgo]<=1005 then
set qFo=Ggt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in ScmdDataTypes, line 1374")
else
set qFo=XFt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=wkt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1009 then
if jj[Xgo]<=1008 then
set qFo=Skt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdDataTypes, line 1374")
else
set qFo=ykt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=dkt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1016 then
if jj[Xgo]<=1013 then
if jj[Xgo]<=1012 then
if jj[Xgo]<=1011 then
set qFo=gkt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdDataTypes, line 1374")
else
set qFo=oxt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=ext(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1015 then
if jj[Xgo]<=1014 then
set qFo=Rxt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Uxt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Jxt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1019 then
if jj[Xgo]<=1018 then
if jj[Xgo]<=1017 then
set qFo=qvt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Tvt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=xvt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1021 then
if jj[Xgo]<=1020 then
set qFo=Zvt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Hvt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Vvt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1119 then
if jj[Xgo]<=1071 then
if jj[Xgo]<=1047 then
if jj[Xgo]<=1035 then
if jj[Xgo]<=1029 then
if jj[Xgo]<=1026 then
if jj[Xgo]<=1024 then
if jj[Xgo]<=1023 then
set qFo=rmt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=omt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1025 then
set qFo=nmt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Gmt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1028 then
if jj[Xgo]<=1027 then
set qFo=xmt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Zmt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Hmt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1032 then
if jj[Xgo]<=1031 then
if jj[Xgo]<=1030 then
set qFo=SEt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=yEt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=dEt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1034 then
if jj[Xgo]<=1033 then
set qFo=gEt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=vEt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=UEt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1041 then
if jj[Xgo]<=1038 then
if jj[Xgo]<=1037 then
if jj[Xgo]<=1036 then
set qFo=KEt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=uZt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=oZt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1040 then
if jj[Xgo]<=1039 then
set qFo=mZt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=OUt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=XUt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1044 then
if jj[Xgo]<=1043 then
if jj[Xgo]<=1042 then
set qFo=mIt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=M_i(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=bwi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1046 then
if jj[Xgo]<=1045 then
set qFo=Dwi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdDataTypes, line 1374")
else
set qFo=cui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=pui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1059 then
if jj[Xgo]<=1053 then
if jj[Xgo]<=1050 then
if jj[Xgo]<=1049 then
if jj[Xgo]<=1048 then
set qFo=hui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
else
set qFo=mui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Iui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1052 then
if jj[Xgo]<=1051 then
set qFo=Kui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Nui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=tri(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1056 then
if jj[Xgo]<=1055 then
if jj[Xgo]<=1054 then
set qFo=Wti(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdPlayerCameraSettingsBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Ati(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Xti(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1058 then
if jj[Xgo]<=1057 then
set qFo=wii(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Sii(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=yii(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1065 then
if jj[Xgo]<=1062 then
if jj[Xgo]<=1061 then
if jj[Xgo]<=1060 then
set qFo=dii(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
else
set qFo=gii(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=vii(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1064 then
if jj[Xgo]<=1063 then
set qFo=Jii(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdDataTypes, line 1374")
else
set qFo=Bii(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=sSi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1068 then
if jj[Xgo]<=1067 then
if jj[Xgo]<=1066 then
set qFo=OSi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdDataTypes, line 1374")
else
set qFo=qSi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=kSi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1070 then
if jj[Xgo]<=1069 then
set qFo=WSi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins in ScmdDataTypes, line 1374")
else
set qFo=ASi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=XSi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1095 then
if jj[Xgo]<=1083 then
if jj[Xgo]<=1077 then
if jj[Xgo]<=1074 then
if jj[Xgo]<=1073 then
if jj[Xgo]<=1072 then
set qFo=ypi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Nhi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=tWi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_ScmdWeatherEffectFunctions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1076 then
if jj[Xgo]<=1075 then
set qFo=OZi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotFRP_LegacyLoad in ScmdDataTypes, line 1374")
else
set qFo=AZi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in ScmdDataTypes, line 1374")
endif
else
set qFo=XZi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1080 then
if jj[Xgo]<=1079 then
if jj[Xgo]<=1078 then
set qFo=wUi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in ScmdDataTypes, line 1374")
else
set qFo=SUi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in ScmdDataTypes, line 1374")
endif
else
set qFo=pUi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotFRP_SaveLoad in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1082 then
if jj[Xgo]<=1081 then
set qFo=IIi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiCoreUnit in ScmdDataTypes, line 1374")
else
set qFo=KIi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiCoreUnit in ScmdDataTypes, line 1374")
endif
else
set qFo=dKi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1089 then
if jj[Xgo]<=1086 then
if jj[Xgo]<=1085 then
if jj[Xgo]<=1084 then
set qFo=lLi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in ScmdDataTypes, line 1374")
else
set qFo=KLi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in ScmdDataTypes, line 1374")
endif
else
set qFo=ilS(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_UnitShopsBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1088 then
if jj[Xgo]<=1087 then
set qFo=blS(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_registerProtectedBuiltin_UnitShopsBuiltins in ScmdDataTypes, line 1374")
else
set qFo=fui(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
endif
else
call NFo(12,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_setProvidingEnumUnit_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374",0,null)
set qFo=inw
endif
elseif jj[Xgo]<=1092 then
if jj[Xgo]<=1091 then
if jj[Xgo]<=1090 then
call NFo(6,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_setProvidingEnumUnit_addOverload_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374",0,null)
set qFo=inw
else
call NFo(23,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374",0,null)
set qFo=inw
endif
else
call NFo(18,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374",0,null)
set qFo=inw
endif
elseif jj[Xgo]<=1094 then
if jj[Xgo]<=1093 then
set qFo=jyi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=DKi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_SotfrpGuiRegions in ScmdDataTypes, line 1374")
endif
else
set qFo=RWi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1107 then
if jj[Xgo]<=1101 then
if jj[Xgo]<=1098 then
if jj[Xgo]<=1097 then
if jj[Xgo]<=1096 then
set qFo=jWi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
else
set qFo=tYt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SLangSpecialEffectFunctions in ScmdDataTypes, line 1374")
endif
else
set qFo=Cwi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdItemBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1100 then
if jj[Xgo]<=1099 then
set qFo=tci(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Kci(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Ooi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1104 then
if jj[Xgo]<=1103 then
if jj[Xgo]<=1102 then
set qFo=Toi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=SOi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=EOi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1106 then
if jj[Xgo]<=1105 then
set qFo=COi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=fli(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Kli(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1113 then
if jj[Xgo]<=1110 then
if jj[Xgo]<=1109 then
if jj[Xgo]<=1108 then
set qFo=fbi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=mbi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Kbi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1112 then
if jj[Xgo]<=1111 then
set qFo=Sei(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=dei(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Jei(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1116 then
if jj[Xgo]<=1115 then
if jj[Xgo]<=1114 then
set qFo=qqi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Aqi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=gai(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1118 then
if jj[Xgo]<=1117 then
set qFo=Uai(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Bai(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Oni(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1168 then
if jj[Xgo]<=1144 then
if jj[Xgo]<=1132 then
if jj[Xgo]<=1126 then
if jj[Xgo]<=1123 then
if jj[Xgo]<=1121 then
if jj[Xgo]<=1120 then
set qFo=Tni(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Wni(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1122 then
set qFo=Xni(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Sdi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1125 then
if jj[Xgo]<=1124 then
set qFo=ddi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=vdi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=sfi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1129 then
if jj[Xgo]<=1128 then
if jj[Xgo]<=1127 then
set qFo=qfi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=kfi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Afi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1131 then
if jj[Xgo]<=1130 then
set qFo=wRi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=yRi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=gRi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1138 then
if jj[Xgo]<=1135 then
if jj[Xgo]<=1134 then
if jj[Xgo]<=1133 then
set qFo=URi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=BRi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=OTi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1137 then
if jj[Xgo]<=1136 then
set qFo=GTi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=NTi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=lYi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1141 then
if jj[Xgo]<=1140 then
if jj[Xgo]<=1139 then
set qFo=YYi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=EYi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=CYi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1143 then
if jj[Xgo]<=1142 then
set qFo=cGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=fGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=mGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1156 then
if jj[Xgo]<=1150 then
if jj[Xgo]<=1147 then
if jj[Xgo]<=1146 then
if jj[Xgo]<=1145 then
set qFo=KGi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=agi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Dgi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1149 then
if jj[Xgo]<=1148 then
set qFo=phi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=hhi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=nFi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1153 then
if jj[Xgo]<=1152 then
if jj[Xgo]<=1151 then
set qFo=mFi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Fji(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Pji(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1155 then
if jj[Xgo]<=1154 then
set qFo=Mji(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=bxi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Gxi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1162 then
if jj[Xgo]<=1159 then
if jj[Xgo]<=1158 then
if jj[Xgo]<=1157 then
set qFo=Zxi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Vxi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=ovi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1161 then
if jj[Xgo]<=1160 then
set qFo=BWi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
else
set qFo=OEi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
endif
else
set qFo=TEi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1165 then
if jj[Xgo]<=1164 then
if jj[Xgo]<=1163 then
set qFo=WEi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in ScmdDataTypes, line 1374")
else
set qFo=JUi(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit in ScmdDataTypes, line 1374")
endif
else
set qFo=int(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_registerBuiltin_SLangChatSystem in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1167 then
if jj[Xgo]<=1166 then
set qFo=qnt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setRequiringEnumUnit_registerBuiltin_SLangChatSystem in ScmdDataTypes, line 1374")
else
set qFo=gjt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Kjt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1192 then
if jj[Xgo]<=1180 then
if jj[Xgo]<=1174 then
if jj[Xgo]<=1171 then
if jj[Xgo]<=1170 then
if jj[Xgo]<=1169 then
set qFo=KQt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=bWt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=GWt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1173 then
if jj[Xgo]<=1172 then
set qFo=KWt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=wUt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=xUt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1177 then
if jj[Xgo]<=1176 then
if jj[Xgo]<=1175 then
set qFo=sIt(Xgo,Cgo,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
call NFo(19,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374",0,null)
set qFo=inw
endif
else
call NFo(10,Xgo,Cgo,null,Bgo,"when calling call_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374",0,null)
set qFo=inw
endif
elseif jj[Xgo]<=1179 then
if jj[Xgo]<=1178 then
set qFo=Gci(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Woi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Xoi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1186 then
if jj[Xgo]<=1183 then
if jj[Xgo]<=1182 then
if jj[Xgo]<=1181 then
set qFo=ROi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=cli(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=mli(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1185 then
if jj[Xgo]<=1184 then
set qFo=ibi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=tyi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=gpi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1189 then
if jj[Xgo]<=1188 then
if jj[Xgo]<=1187 then
set qFo=vei(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=sqi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=kqi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1191 then
if jj[Xgo]<=1190 then
set qFo=wai(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=yai(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=Jdi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1204 then
if jj[Xgo]<=1198 then
if jj[Xgo]<=1195 then
if jj[Xgo]<=1194 then
if jj[Xgo]<=1193 then
set qFo=ITi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=tgi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=jgi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1197 then
if jj[Xgo]<=1196 then
set qFo=uhi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Ihi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=tFi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1201 then
if jj[Xgo]<=1200 then
if jj[Xgo]<=1199 then
set qFo=LFi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=iki(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=nki(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1203 then
if jj[Xgo]<=1202 then
set qFo=xki(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=Hki(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=rji(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1210 then
if jj[Xgo]<=1207 then
if jj[Xgo]<=1206 then
if jj[Xgo]<=1205 then
set qFo=eji(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
else
set qFo=RIi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit in ScmdDataTypes, line 1374")
endif
else
set qFo=Xyi(Xgo,Cgo,Bgo,"when calling call_setRequiringEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1209 then
if jj[Xgo]<=1208 then
set qFo=pri(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_ScmdParser in ScmdDataTypes, line 1374")
else
set qFo=Hkt(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=cjt(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1213 then
if jj[Xgo]<=1212 then
if jj[Xgo]<=1211 then
set qFo=rxt(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=vxt(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=wQt(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
elseif jj[Xgo]<=1215 then
if jj[Xgo]<=1214 then
set qFo=dQt(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
else
set qFo=DZt(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
else
set qFo=aUt(Xgo,Cgo,Bgo,"when calling call_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ScmdDataTypes, line 1374")
endif
set MM=MM-1
set inw=qFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==17 then
set w3[MM]=Ngo
set MM=MM+1
if px[Xgo]==0 then
if Xgo==0 then
call Mau("Nullpointer exception when calling Callable.call","when calling error in ScmdDataTypes, line 1295")
else
call Mau("Called Callable.call on invalid object.","when calling error in ScmdDataTypes, line 1295")
endif
endif
if px[Xgo]<=1418 then
if px[Xgo]<=1417 then
call NFo(8,Xgo,Cgo,null,Bgo,"when calling call in ScmdDataTypes, line 1295",0,null)
set aFo=inw
else
call NFo(24,Xgo,Cgo,null,Bgo,"when calling call in ScmdDataTypes, line 1295",0,null)
set aFo=inw
endif
else
call NFo(20,Xgo,Cgo,null,Bgo,"when calling call in ScmdDataTypes, line 1295",0,null)
set aFo=inw
endif
set MM=MM-1
set inw=aFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==18 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(0,Cgo,s4o(Bgo,0,"when calling getPtr in ScmdUnitBuiltins, line 181"),"when calling resolve in ScmdUnitBuiltins, line 181",0,null,0,null)
set nFo=inw
if not(px[f7o(nFo,"when calling get in ScmdUnitBuiltins, line 183")]==1425)then
set dFo=l5i(qCt("...cannot be cast to Group","when calling new_Exception in ScmdUnitBuiltins, line 184"),"when calling new_SharedPointer in ScmdUnitBuiltins, line 184")
else
set GFo=px[f7o(nFo,"when calling get in ScmdUnitBuiltins, line 185")]
if GFo>=1422 and GFo<=1423 then
set dFo=b7o(nFo,"when calling clone in ScmdUnitBuiltins, line 186")
else
set dFo=x4u("when calling nullptr in ScmdUnitBuiltins, line 188")
set fFo=W2o(Cgo,"when calling getEnumUnit in ScmdUnitBuiltins, line 189")
set RFo=yTu(X7o(f7o(nFo,"when calling get in ScmdUnitBuiltins, line 190"),"when calling getInner in ScmdUnitBuiltins, line 190"))
loop
exitwhen not lTu(RFo)
set TFo=aTu(RFo)
set YFo=i6c("when calling alloc_ForForceCallback_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 191")
set lL[YFo]=Cgo
set bL[YFo]=TFo
set yL[YFo]=Bgo
set pL[YFo]=dFo
call Inu(YFo,"when calling execute in ScmdUnitBuiltins, line 191")
set gFo=px[f7o(dFo,"when calling get in ScmdUnitBuiltins, line 199")]
if gFo>=1422 and gFo<=1423 then
exitwhen true
endif
endloop
call dTu(RFo)
call x2o(Cgo,fFo,"when calling setEnumUnit in ScmdUnitBuiltins, line 201")
endif
endif
call KGo(5,nFo,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdUnitBuiltins, line 202")
set hFo=dFo
set MM=MM-1
set inw=hFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==19 then
set w3[MM]=Ngo
set MM=MM+1
set FFo=s0o(N8o(s4o(Bgo,1,"when calling getPtr in ScmdCoreBuiltins, line 389"),"when calling get in ScmdCoreBuiltins, line 389"),"when calling size in ScmdCoreBuiltins, line 389")
set kFo=2
loop
exitwhen not(kFo<L1o(Bgo,"when calling size in ScmdCoreBuiltins, line 391"))
if s0o(N1o(Bgo,kFo,"when calling get in ScmdCoreBuiltins, line 392"),"when calling size in ScmdCoreBuiltins, line 392")<FFo then
set FFo=s0o(N1o(Bgo,kFo,"when calling get in ScmdCoreBuiltins, line 393"),"when calling size in ScmdCoreBuiltins, line 393")
endif
set kFo=kFo+1
endloop
set jFo=l5i(H0i("when calling new_Vector in ScmdCoreBuiltins, line 395"),"when calling new_SharedPointer in ScmdCoreBuiltins, line 395")
set kFo=0
loop
exitwhen not(kFo<FFo)
set xFo=EVt(X8o(s4o(Bgo,0,"when calling getPtr in ScmdCoreBuiltins, line 398"),"when calling clone in ScmdCoreBuiltins, line 398"),"when calling new_Expression in ScmdCoreBuiltins, line 398")
set vFo=1
loop
exitwhen not(vFo<L1o(Bgo,"when calling size in ScmdCoreBuiltins, line 400"))
call U1o(L6o(xFo,"when calling getArgs in ScmdCoreBuiltins, line 401"),b7o(M9o(N1o(Bgo,vFo,"when calling get in ScmdCoreBuiltins, line 401"),kFo,"when calling get in ScmdCoreBuiltins, line 401"),"when calling clone in ScmdCoreBuiltins, line 401"),"when calling add in ScmdCoreBuiltins, line 401")
set vFo=vFo+1
endloop
call NFo(3,xFo,Cgo,"when calling evaluate in ScmdCoreBuiltins, line 403",0,null,0,null)
set mFo=inw
set QFo=px[f7o(mFo,"when calling get in ScmdCoreBuiltins, line 404")]
if QFo>=1422 and QFo<=1423 then
call KGo(5,jFo,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdCoreBuiltins, line 405")
set jFo=mFo
exitwhen true
endif
call Ffo(f7o(jFo,"when calling get in ScmdCoreBuiltins, line 408"),mFo,"when calling push in ScmdCoreBuiltins, line 408")
call Q6o(xFo,"when calling dispatch_Expression_destroyExpression in ScmdCoreBuiltins, line 409")
set kFo=kFo+1
endloop
set WFo=jFo
set MM=MM-1
set inw=WFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==20 then
set w3[MM]=Ngo
set MM=MM+1
set EFo=WPt("when calling new_Arguments in ScmdDataTypes, line 1307")
set ZFo=nPt(Bgo,"when calling iterator in ScmdDataTypes, line 1308")
loop
exitwhen not PPs(ZFo,"when calling hasNext in ScmdDataTypes, line 1308")
set UFo=EPs(ZFo,"when calling next in ScmdDataTypes, line 1308")
call NFo(0,Cgo,UFo,"when calling resolve in ScmdDataTypes, line 1309",0,null,0,null)
set IFo=inw
set AFo=px[f7o(IFo,"when calling get in ScmdDataTypes, line 1310")]
if AFo>=1422 and AFo<=1423 then
call KGo(19,EFo,"when calling dispatch_Arguments_destroyArguments in ScmdDataTypes, line 1311")
call HPs(ZFo,"when calling close in ScmdDataTypes, line 1308")
set MM=MM-1
set inw=IFo
set fFo=null
set RFo=null
set TFo=null
return
endif
call U1o(EFo,IFo,"when calling add in ScmdDataTypes, line 1313")
endloop
call HPs(ZFo,"when calling close in ScmdDataTypes, line 1308")
call NFo(11,Xgo,Cgo,null,EFo,"when calling callImpl in ScmdDataTypes, line 1314",0,null)
set PFo=inw
call KGo(19,EFo,"when calling dispatch_Arguments_destroyArguments in ScmdDataTypes, line 1315")
set MM=MM-1
set inw=PFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==21 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(4,Xgo,Cgo,null,Bgo,"when calling call in ScmdDataTypes, line 1530",0,null)
set DFo=inw
set MM=MM-1
set inw=DFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==22 then
set w3[MM]=Ngo
set MM=MM+1
set HFo=O2o(Xgo,Bgo,"when calling resolveOverload in ScmdDataTypes, line 1482")
if HFo!=0 then
set JFo=0
loop
exitwhen not(JFo!=L1o(Bgo,"when calling size in ScmdDataTypes, line 1485")and H7o(wDc(CJ[HFo],vdo(RDc(CJ[HFo],"when calling size in ScmdDataTypes, line 1485")-1,JFo),"when calling get in ScmdDataTypes, line 1485"),N1o(Bgo,JFo,"when calling get in ScmdDataTypes, line 1485"),"when calling isInstance in ScmdDataTypes, line 1485"))
set JFo=JFo+1
endloop
if JFo!=L1o(Bgo,"when calling size in ScmdDataTypes, line 1487")then
set LFo=Y4u(U7o(x8o(N1o(Bgo,JFo,"when calling get in ScmdDataTypes, line 1488"),"when calling getTypeToken in ScmdDataTypes, line 1488"),"when calling getName in ScmdDataTypes, line 1488")+" cannot be cast to "+U7o(wDc(CJ[HFo],vdo(RDc(CJ[HFo],"when calling size in ScmdDataTypes, line 1488")-1,JFo),"when calling get in ScmdDataTypes, line 1488"),"when calling getName in ScmdDataTypes, line 1488"),"when calling wrap in ScmdDataTypes, line 1488")
set MM=MM-1
set inw=LFo
set fFo=null
set RFo=null
set TFo=null
return
endif
if JFo==L1o(Bgo,"when calling size in ScmdDataTypes, line 1489")then
call NFo(16,XJ[HFo],Cgo,null,Bgo,"when calling call in ScmdDataTypes, line 1490",0,null)
set XFo=inw
set MM=MM-1
set inw=XFo
set fFo=null
set RFo=null
set TFo=null
return
endif
endif
set KFo=l5i(qCt("No overload found","when calling new_Exception in ScmdDataTypes, line 1491"),"when calling new_SharedPointer in ScmdDataTypes, line 1491")
set MM=MM-1
set inw=KFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==23 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(13,Cgo,s4o(Bgo,0,"when calling getPtr in ScmdCoreBuiltins, line 445"),null,s4o(Bgo,1,"when calling getPtr in ScmdCoreBuiltins, line 445"),"when calling makeFn in ScmdCoreBuiltins, line 445",0,null)
set CFo=inw
set MM=MM-1
set inw=CFo
set fFo=null
set RFo=null
set TFo=null
return
elseif Lgo==24 then
set w3[MM]=Ngo
set MM=MM+1
call NFo(22,Xgo,Cgo,null,Bgo,"when calling call in ScmdDataTypes, line 1551",0,null)
set VFo=inw
set MM=MM-1
set inw=VFo
set fFo=null
set RFo=null
set TFo=null
return
endif
set fFo=null
set RFo=null
set TFo=null
endfunction
function y5u takes string r5u returns boolean
local integer s5u
local boolean t5u
local integer i5u
local integer S5u
local integer c5u
local integer o5u
local boolean O5u
local integer l5u
local boolean b5u
set w3[MM]=r5u
set MM=MM+1
set s5u=l7s(GetTriggeringTrigger())
set t5u=true
set i5u=Nio(nd,s5u,"when calling loadInt in ScmdDataTypes, line 914")
call I2o(i5u,GetTriggerUnit(),"when calling setTriggerUnit in ScmdDataTypes, line 915")
call X2o(i5u,GetSpellAbilityUnit(),"when calling setSpellAbilityUnit in ScmdDataTypes, line 916")
call r5o(i5u,GetSpellTargetUnit(),"when calling setSpellTargetUnit in ScmdDataTypes, line 917")
call l5o(i5u,GetSpellTargetX(),"when calling setSpellTargetX in ScmdDataTypes, line 918")
call d5o(i5u,GetSpellTargetY(),"when calling setSpellTargetY in ScmdDataTypes, line 919")
call F5o(i5u,GetSpellTargetDestructable(),"when calling setSpellTargetDestructable in ScmdDataTypes, line 920")
call E5o(i5u,GetSpellTargetItem(),"when calling setSpellTargetItem in ScmdDataTypes, line 921")
call M5o(i5u,GetManipulatedItem(),"when calling setManipulatedItem in ScmdDataTypes, line 922")
call J5o(i5u,GetSpellAbilityId(),"when calling setSpellAbilityId in ScmdDataTypes, line 923")
set S5u=0
set c5u=iYu(ed,s5u,-1)-1
loop
exitwhen S5u>c5u
call NFo(0,Nio(nd,s5u,"when calling loadInt in ScmdDataTypes, line 925"),iYu(ed,s5u,S5u),"when calling resolve in ScmdDataTypes, line 925",0,null,0,null)
set o5u=inw
set l5u=px[f7o(o5u,"when calling get in ScmdDataTypes, line 926")]
if l5u==1433 or l5u==1446 then
set O5u=c4o(f7o(o5u,"when calling get in ScmdDataTypes, line 926"),"when calling booleanValue in ScmdDataTypes, line 926")
else
set O5u=not(px[f7o(o5u,"when calling get in ScmdDataTypes, line 926")]==1437)
endif
set t5u=O5u
call KGo(5,o5u,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 927")
if not t5u then
exitwhen true
endif
set S5u=S5u+1
endloop
set b5u=t5u
set MM=MM-1
return b5u
endfunction
function STo takes nothing returns boolean
set MM=0
return y5u("ScmdDataTypes, line 911")
endfunction
function SUw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAll(GetTriggerPlayer())
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],ssw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function SVw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function iXw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
return true
endfunction
function SXw takes nothing returns nothing
if iXw()then
call UnitAddTypeBJ(ConvertUnitType(20),GetEnumUnit())
endif
endfunction
function t7s takes unit s7s returns real
return GetUnitFlyHeight(s7s)
endfunction
function Sdu takes nothing returns nothing
local unit tdu=kmu()
local real idu=t7s(tdu)
call H5r(tdu,1.,0.)
call H5r(tdu,0.,0.)
call H5r(tdu,idu,0.)
set tdu=null
endfunction
function Sju takes nothing returns boolean
set Rq=InitGameCache("1")
set Tq=InitGameCache("2")
return true
endfunction
function ijw takes nothing returns boolean
if not(IsTriggerEnabled(Bt)==false)then
return false
endif
return true
endfunction
function tjw takes nothing returns boolean
if not(ju<=0)then
return false
endif
return true
endfunction
function Sjw takes nothing returns nothing
call GroupAddUnitSimple(GetTriggerUnit(),Lu)
call GroupRemoveUnitSimple(GetTriggerUnit(),Hu)
call SaveLocationHandleBJ(GetSpellTargetLoc(),1,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveIntegerBJ(GetUnitAbilityLevelSwapped(1093678920,GetTriggerUnit()),5,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveIntegerBJ(0,6,GetHandleIdBJ(GetTriggerUnit()),Au)
if tjw()then
call SaveIntegerBJ(3,7,GetHandleIdBJ(GetTriggerUnit()),Au)
else
call SaveIntegerBJ(1,7,GetHandleIdBJ(GetTriggerUnit()),Au)
endif
call SaveIntegerBJ(Vu,8,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveRealBJ(DistanceBetweenPoints(LoadLocationHandleBJ(0,GetHandleIdBJ(GetTriggerUnit()),Au),LoadLocationHandleBJ(1,GetHandleIdBJ(GetTriggerUnit()),Au)),9,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveIntegerBJ(0,10,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveRealBJ(0.00,11,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveBooleanBJ(true,12,GetHandleIdBJ(GetTriggerUnit()),Au)
set Vu=Vu+1
call UnitRemoveAbilityBJ(1093678680,GetTriggerUnit())
call SetPlayerAbilityAvailableBJ(true,1093682504,GetOwningPlayer(GetTriggerUnit()))
call RemoveUnit(LoadUnitHandleBJ(2,GetHandleIdBJ(GetTriggerUnit()),Au))
call RemoveUnit(LoadUnitHandleBJ(3,GetHandleIdBJ(GetTriggerUnit()),Au))
call IssueImmediateOrderBJ(GetTriggerUnit(),"stop")
call SetUnitAnimation(GetTriggerUnit(),"spell slam")
if ijw()then
call EnableTrigger(Bt)
endif
endfunction
function Smw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function T3w takes nothing returns nothing
local unit d3w=GetSpellAbilityUnit()
local integer f3w=GetUnitAbilityLevel(d3w,1093683799)
local integer R3w=0
if IsUnitInGroup(d3w,lt)==true then
call GroupRemoveUnit(lt,d3w)
call iTw(1.)
endif
call GroupAddUnit(lt,d3w)
call UnitAddAbility(d3w,1093683798)
call UnitMakeAbilityPermanent(d3w,true,1093683798)
call SetUnitAbilityLevel(d3w,1093683798,f3w)
call SetUnitInvulnerable(d3w,true)
loop
exitwhen IsUnitInGroup(d3w,lt)==false
call iTw(1.)
call SetUnitState(d3w,UNIT_STATE_LIFE,GetUnitState(d3w,UNIT_STATE_LIFE)+50.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\Heal\\HealTarget.mdl",d3w,"origin"))
set R3w=R3w+1
if R3w==f3w*4 or GetUnitState(d3w,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(lt,d3w)
endif
endloop
call SetUnitInvulnerable(d3w,false)
call SetUnitAnimation(d3w,"stand")
call UnitRemoveAbility(d3w,1093683798)
call UnitRemoveAbility(d3w,1110455369)
call IssueImmediateOrder(d3w,"stop")
set d3w=null
set f3w=0
set R3w=0
set d3w=null
endfunction
function T4w takes nothing returns nothing
local integer q4w=0
local integer a4w=0
local integer n4w=GetUnitAbilityLevel(GetSpellAbilityUnit(),1093679432)
local unit d4w=GetSpellTargetUnit()
local unit f4w=GetSpellAbilityUnit()
local unit R4w=null
loop
exitwhen a4w>V
if GetUnitAbilityLevel(d4w,C[a4w])!=0 then
set q4w=q4w+1
endif
set a4w=a4w+1
endloop
set a4w=0
loop
exitwhen a4w>fw
if GetUnitAbilityLevel(d4w,Rw[a4w])!=0 then
set q4w=q4w+1
endif
set a4w=a4w+1
endloop
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Demon\\DarkPortal\\DarkPortalTarget.mdl",d4w,"origin"))
call SetUnitExploded(d4w,true)
call KillUnit(d4w)
if IsUnitType(d4w,UNIT_TYPE_FLYING)==true then
if n4w==3 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652102,GetUnitLoc(d4w),GetUnitFacing(d4w))
elseif n4w==2 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652103,GetUnitLoc(d4w),GetUnitFacing(d4w))
elseif n4w==1 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652104,GetUnitLoc(d4w),GetUnitFacing(d4w))
endif
elseif GetRandomInt(1,3)<=2 then
if n4w==3 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652110,GetUnitLoc(d4w),GetUnitFacing(d4w))
else
if n4w==2 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652109,GetUnitLoc(d4w),GetUnitFacing(d4w))
elseif n4w==1 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652108,GetUnitLoc(d4w),GetUnitFacing(d4w))
endif
if GetUnitState(d4w,UNIT_STATE_MAX_LIFE)>=2000.00 then
call UnitAddAbility(R4w,1093681736)
call UnitAddAbility(R4w,1093681735)
call UnitAddAbility(R4w,1093681733)
call UnitAddAbility(R4w,1093681737)
call UnitAddAbility(R4w,1093681732)
elseif GetUnitState(d4w,UNIT_STATE_MAX_LIFE)>=1800.00 then
call UnitAddAbility(R4w,1093681731)
call UnitAddAbility(R4w,1093681718)
call UnitAddAbility(R4w,1093681733)
call UnitAddAbility(R4w,1093681734)
call UnitAddAbility(R4w,1093678667)
elseif GetUnitState(d4w,UNIT_STATE_MAX_LIFE)>=1600.00 then
call UnitAddAbility(R4w,1093681731)
call UnitAddAbility(R4w,1093681718)
call UnitAddAbility(R4w,1093681720)
call UnitAddAbility(R4w,1093681730)
call UnitAddAbility(R4w,1093678667)
elseif GetUnitState(d4w,UNIT_STATE_MAX_LIFE)>=1400.00 then
call UnitAddAbility(R4w,1093681721)
call UnitAddAbility(R4w,1093681718)
call UnitAddAbility(R4w,1093681720)
call UnitAddAbility(R4w,1093678667)
elseif GetUnitState(d4w,UNIT_STATE_MAX_LIFE)>=1200.00 then
call UnitAddAbility(R4w,1093681719)
call UnitAddAbility(R4w,1093681718)
call UnitAddAbility(R4w,1093681720)
elseif GetUnitState(d4w,UNIT_STATE_MAX_LIFE)>=1000.00 then
call UnitAddAbility(R4w,1093681717)
call UnitAddAbility(R4w,1093681718)
call UnitAddAbility(R4w,1093681714)
elseif GetUnitState(d4w,UNIT_STATE_MAX_LIFE)>=800.00 then
call UnitAddAbility(R4w,1093681716)
call UnitAddAbility(R4w,1093681715)
call UnitAddAbility(R4w,1093681714)
elseif GetUnitState(d4w,UNIT_STATE_MAX_LIFE)>=600.00 then
call UnitAddAbility(R4w,1093681712)
call UnitAddAbility(R4w,1093681498)
call UnitAddAbility(R4w,1093681713)
endif
if q4w>=1 then
call UnitAddAbility(R4w,1093681739)
if q4w>=2 then
call UnitAddAbility(R4w,1093681738)
if q4w>=3 then
call UnitAddAbility(R4w,1093681740)
endif
endif
endif
endif
elseif n4w==3 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652107,GetUnitLoc(d4w),GetUnitFacing(d4w))
elseif n4w==2 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652106,GetUnitLoc(d4w),GetUnitFacing(d4w))
elseif n4w==1 then
set R4w=CreateUnitAtLoc(GetOwningPlayer(f4w),1848652105,GetUnitLoc(d4w),GetUnitFacing(d4w))
endif
call UnitApplyTimedLife(R4w,1111910759,180.)
set q4w=0
set a4w=0
set n4w=0
set d4w=null
set f4w=null
set R4w=null
set d4w=null
set f4w=null
set R4w=null
endfunction
function T5w takes nothing returns boolean
if IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()),GetOwningPlayer(GetSpellAbilityUnit()))==true then
return true
endif
return false
endfunction
function RHw takes nothing returns boolean
if not(GetEventPlayerChatString()=="time unlock")then
return false
endif
return true
endfunction
function fHw takes nothing returns boolean
if not(GetEventPlayerChatString()=="time lock")then
return false
endif
return true
endfunction
function THw takes nothing returns nothing
if fHw()then
if GetEventPlayerChatString()=="time lock" then
call SetTimeOfDayScalePercentBJ(0.00)
else
call DoNothing()
endif
return
endif
if RHw()then
if GetEventPlayerChatString()=="time unlock" then
call SetTimeOfDayScalePercentBJ(100.00)
else
call DoNothing()
endif
return
endif
call SetTimeOfDay(S2R(SubStringBJ(GetEventPlayerChatString(),6,11)))
if GetEventPlayerChatString()=="time morning" then
call SetTimeOfDay(6.00)
else
call DoNothing()
endif
if GetEventPlayerChatString()=="time midnight" then
call SetTimeOfDay(24.00)
else
call DoNothing()
endif
if GetEventPlayerChatString()=="time evening" then
call SetTimeOfDay(18.00)
else
call DoNothing()
endif
if GetEventPlayerChatString()=="time noon" then
call SetTimeOfDay(12.00)
else
call DoNothing()
endif
endfunction
function TIw takes nothing returns nothing
call UnitRemoveAbility(GetEnumUnit(),1098086193)
call UnitRemoveAbility(GetEnumUnit(),1098086194)
endfunction
function RKw takes nothing returns boolean
if not(IsDestructableInvulnerableBJ(GetEnumDestructable())==true)then
return false
endif
return true
endfunction
function TKw takes nothing returns nothing
if RKw()then
call SetDestructableInvulnerableBJ(GetEnumDestructable(),false)
else
call SetDestructableInvulnerableBJ(GetEnumDestructable(),true)
endif
endfunction
function TLw takes nothing returns nothing
call KillDestructable(GetEnumDestructable())
endfunction
function TMw takes nothing returns nothing
call ForGroup(Bs,Dow)
endfunction
function B2u takes nothing returns integer
return pd
endfunction
function FAS takes string gAS returns integer
local integer hAS
set w3[MM]=gAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hAS=kj
set jj[hAS]=834
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 93")
set hAS=0
endif
else
set Fj=Fj-1
set hAS=hj[Fj]
set jj[hAS]=834
endif
set MM=MM-1
return hAS
endfunction
function G5u takes nothing returns integer
return Td
endfunction
function GAS takes string TAS returns integer
local integer YAS
set w3[MM]=TAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set YAS=kj
set jj[YAS]=833
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 90")
set YAS=0
endif
else
set Fj=Fj-1
set YAS=hj[Fj]
set jj[YAS]=833
endif
set MM=MM-1
return YAS
endfunction
function HAS takes string AAS returns integer
local integer DAS
set w3[MM]=AAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set DAS=kj
set jj[DAS]=839
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 108")
set DAS=0
endif
else
set Fj=Fj-1
set DAS=hj[Fj]
set jj[DAS]=839
endif
set MM=MM-1
return DAS
endfunction
function LAS takes string JAS returns integer
local integer KAS
set w3[MM]=JAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set KAS=kj
set jj[KAS]=840
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 111")
set KAS=0
endif
else
set Fj=Fj-1
set KAS=hj[Fj]
set jj[KAS]=840
endif
set MM=MM-1
return KAS
endfunction
function MPS takes string BPS returns integer
local integer NPS
set w3[MM]=BPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set NPS=kj
set jj[NPS]=998
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 11")
set NPS=0
endif
else
set Fj=Fj-1
set NPS=hj[Fj]
set jj[NPS]=998
endif
set MM=MM-1
return NPS
endfunction
function PAS takes string UAS returns integer
local integer IAS
set w3[MM]=UAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set IAS=kj
set jj[IAS]=838
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 105")
set IAS=0
endif
else
set Fj=Fj-1
set IAS=hj[Fj]
set jj[IAS]=838
endif
set MM=MM-1
return IAS
endfunction
function QAS takes string vAS returns integer
local integer mAS
set w3[MM]=vAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mAS=kj
set jj[mAS]=836
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 99")
set mAS=0
endif
else
set Fj=Fj-1
set mAS=hj[Fj]
set jj[mAS]=836
endif
set MM=MM-1
return mAS
endfunction
function RAS takes string dAS returns integer
local integer fAS
set w3[MM]=dAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fAS=kj
set jj[fAS]=1005
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 75")
set fAS=0
endif
else
set Fj=Fj-1
set fAS=hj[Fj]
set jj[fAS]=1005
endif
set MM=MM-1
return fAS
endfunction
function VAS takes string XAS returns integer
local integer CAS
set w3[MM]=XAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set CAS=kj
set jj[CAS]=841
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 114")
set CAS=0
endif
else
set Fj=Fj-1
set CAS=hj[Fj]
set jj[CAS]=841
endif
set MM=MM-1
return CAS
endfunction
function VPS takes string XPS returns integer
local integer CPS
set w3[MM]=XPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set CPS=kj
set jj[CPS]=832
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 8")
set CPS=0
endif
else
set Fj=Fj-1
set CPS=hj[Fj]
set jj[CPS]=832
endif
set MM=MM-1
return CPS
endfunction
function ZAS takes string WAS returns integer
local integer EAS
set w3[MM]=WAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set EAS=kj
set jj[EAS]=837
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 102")
set EAS=0
endif
else
set Fj=Fj-1
set EAS=hj[Fj]
set jj[EAS]=837
endif
set MM=MM-1
return EAS
endfunction
function bAS takes string OAS returns integer
local integer lAS
set w3[MM]=OAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lAS=kj
set jj[lAS]=1002
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 33")
set lAS=0
endif
else
set Fj=Fj-1
set lAS=hj[Fj]
set jj[lAS]=1002
endif
set MM=MM-1
return lAS
endfunction
function eAS takes string yAS returns integer
local integer pAS
set w3[MM]=yAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set pAS=kj
set jj[pAS]=1003
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 44")
set pAS=0
endif
else
set Fj=Fj-1
set pAS=hj[Fj]
set jj[pAS]=1003
endif
set MM=MM-1
return pAS
endfunction
function iAS takes string sAS returns integer
local integer tAS
set w3[MM]=sAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tAS=kj
set jj[tAS]=1000
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 19")
set tAS=0
endif
else
set Fj=Fj-1
set tAS=hj[Fj]
set jj[tAS]=1000
endif
set MM=MM-1
return tAS
endfunction
function nAS takes string qAS returns integer
local integer aAS
set w3[MM]=qAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set aAS=kj
set jj[aAS]=1004
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 48")
set aAS=0
endif
else
set Fj=Fj-1
set aAS=hj[Fj]
set jj[aAS]=1004
endif
set MM=MM-1
return aAS
endfunction
function oAS takes string SAS returns integer
local integer cAS
set w3[MM]=SAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cAS=kj
set jj[cAS]=1001
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 22")
set cAS=0
endif
else
set Fj=Fj-1
set cAS=hj[Fj]
set jj[cAS]=1001
endif
set MM=MM-1
return cAS
endfunction
function rAS takes string wAS returns integer
local integer uAS
set w3[MM]=wAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uAS=kj
set jj[uAS]=999
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 15")
set uAS=0
endif
else
set Fj=Fj-1
set uAS=hj[Fj]
set jj[uAS]=999
endif
set MM=MM-1
return uAS
endfunction
function xAS takes string kAS returns integer
local integer jAS
set w3[MM]=kAS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jAS=kj
set jj[jAS]=835
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 96")
set jAS=0
endif
else
set Fj=Fj-1
set jAS=hj[Fj]
set jj[jAS]=835
endif
set MM=MM-1
return jAS
endfunction
function HDu takes string eDu returns boolean
local integer qDu
local integer aDu
local integer nDu
local integer dDu
local integer fDu
local integer RDu
local integer TDu
local integer YDu
local integer GDu
local integer gDu
local integer hDu
local integer FDu
local integer kDu
local integer jDu
local integer xDu
local integer vDu
local integer mDu
local integer QDu
local integer WDu
local integer EDu
local integer ZDu
local integer UDu
local integer IDu
local integer PDu
local integer ADu
local integer DDu
set w3[MM]=eDu
set MM=MM+1
set qDu=VPS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 8")
call jBu(WHt(eDt(qDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 8"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 8"),"trigger","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 8")
set aDu=MPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 11")
set nDu=eDt(aDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 11")
call Fao(nDu,B2u(),"when calling setArgumentsTypes in SLangTriggerFunctions, line 14")
call jBu(WHt(nDu,"when calling new_BuiltinFunction in SLangTriggerFunctions, line 11"),"enabletrigger","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 11")
set dDu=rAS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 15")
set fDu=eDt(dDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 15")
call Fao(fDu,B2u(),"when calling setArgumentsTypes in SLangTriggerFunctions, line 18")
call jBu(WHt(fDu,"when calling new_BuiltinFunction in SLangTriggerFunctions, line 15"),"disabletrigger","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 15")
set RDu=iAS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 19")
set TDu=eDt(RDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 19")
call Fao(TDu,B2u(),"when calling setArgumentsTypes in SLangTriggerFunctions, line 21")
call jBu(WHt(TDu,"when calling new_BuiltinFunction in SLangTriggerFunctions, line 19"),"istriggerenabled","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 19")
set YDu=oAS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 22")
set GDu=eDt(YDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 22")
call dao(GDu,N1u(),N1u(),"when calling setArgumentsTypes in SLangTriggerFunctions, line 32")
call jBu(sKt(GDu,"when calling new_BuiltinSpecialForm in SLangTriggerFunctions, line 22"),"triggeraddcondition","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 22")
set gDu=bAS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 33")
set hDu=eDt(gDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 33")
call dao(hDu,N1u(),N1u(),"when calling setArgumentsTypes in SLangTriggerFunctions, line 43")
call jBu(sKt(hDu,"when calling new_BuiltinSpecialForm in SLangTriggerFunctions, line 33"),"triggeraddaction","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 33")
set FDu=eAS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 44")
set kDu=eDt(FDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 44")
call dao(kDu,B2u(),h5u(),"when calling setArgumentsTypes in SLangTriggerFunctions, line 47")
call jBu(WHt(kDu,"when calling new_BuiltinFunction in SLangTriggerFunctions, line 44"),"triggerregisterdeathevent","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 44")
set jDu=nAS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 48")
set xDu=eDt(jDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 48")
call Pao(xDu,B2u(),G5u(),o2u(),"when calling setArgumentsTypes in SLangTriggerFunctions, line 74")
call jBu(WHt(xDu,"when calling new_BuiltinFunction in SLangTriggerFunctions, line 48"),"triggerregisterunitevent","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 48")
set vDu=RAS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 75")
set mDu=eDt(vDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 75")
call dao(mDu,B2u(),S2u(),"when calling setArgumentsTypes in SLangTriggerFunctions, line 89")
call jBu(WHt(mDu,"when calling new_BuiltinFunction in SLangTriggerFunctions, line 75"),"triggerregisterenterregion","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 75")
set QDu=GAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 90")
call jBu(WHt(eDt(QDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 90"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 90"),"gettriggerunit","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 90")
set WDu=FAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 93")
call jBu(WHt(eDt(WDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 93"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 93"),"getspellabilityid","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 93")
set EDu=xAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 96")
call jBu(WHt(eDt(EDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 96"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 96"),"getspellabilityunit","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 96")
set ZDu=QAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 99")
call jBu(WHt(eDt(ZDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 99"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 99"),"getspelltargetunit","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 99")
set UDu=ZAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 102")
call jBu(WHt(eDt(UDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 102"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 102"),"getspelltargetx","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 102")
set IDu=PAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 105")
call jBu(WHt(eDt(IDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 105"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 105"),"getspelltargety","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 105")
set PDu=HAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 108")
call jBu(WHt(eDt(PDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 108"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 108"),"getspelltargetdestructable","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 108")
set ADu=LAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 111")
call jBu(WHt(eDt(ADu,"when calling new_BuiltinData in SLangTriggerFunctions, line 111"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 111"),"getspelltargetitem","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 111")
set DDu=VAS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangTriggerFunctions in SLangTriggerFunctions, line 114")
call jBu(WHt(eDt(DDu,"when calling new_BuiltinData in SLangTriggerFunctions, line 114"),"when calling new_BuiltinFunction in SLangTriggerFunctions, line 114"),"getmanipulateditem","when calling registerProtectedBuiltin in SLangTriggerFunctions, line 114")
set MM=MM-1
return true
endfunction
function TRo takes nothing returns boolean
set MM=0
return HDu("SLangTriggerFunctions, line 1")
endfunction
function S5S takes integer t5S,integer i5S returns integer
return LoadInteger(CR,t5S,i5S)
endfunction
function Wto takes integer xto,integer vto,string mto returns integer
local integer Qto
set w3[MM]=mto
set MM=MM+1
if Wv[xto]==0 then
if xto==0 then
call Mau("Nullpointer exception when calling Table.loadInteger","when calling error in TableJurst, line 51")
else
call Mau("Called Table.loadInteger on invalid object.","when calling error in TableJurst, line 51")
endif
endif
set Qto=S5S(xto,vto)
set MM=MM-1
return Qto
endfunction
function ttu takes string wtu returns nothing
local timer utu
local integer rtu
local integer stu
set w3[MM]=wtu
set MM=MM+1
set utu=GetExpiredTimer()
set rtu=Vkr(utu,"when calling getData in BuffsJurst, line 86")
set stu=Wto(BQ[CQ[rtu]],GetHandleId(utu),"when calling loadInteger in BuffsJurst, line 87")
if stu==0 then
call sjr(utu,"when calling release in BuffsJurst, line 89")
call jto(BQ[CQ[rtu]],GetHandleId(VQ[rtu]),"when calling removeHandle in BuffsJurst, line 90")
if uW[CQ[rtu]]!=0 then
call rYc(uW[CQ[rtu]],VQ[rtu],"when calling evaluate in BuffsJurst, line 92")
endif
if rW[CQ[rtu]]!=0 then
call rYc(rW[CQ[rtu]],VQ[rtu],"when calling evaluate in BuffsJurst, line 95")
endif
call nTc(rtu,"when calling destroy in BuffsJurst, line 97")
set MM=MM-1
set utu=null
return
endif
if sW[CQ[rtu]]!=0 then
call rYc(sW[CQ[rtu]],VQ[rtu],"when calling evaluate in BuffsJurst, line 101")
endif
call Pto(BQ[CQ[rtu]],GetHandleId(utu),stu-1,"when calling saveInteger in BuffsJurst, line 103")
set MM=MM-1
set utu=null
endfunction
function TTo takes nothing returns nothing
set MM=0
call ttu("BuffsJurst, line 142")
endfunction
function RUw takes nothing returns boolean
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
return true
endfunction
function TUw takes nothing returns nothing
set bj_forLoopAIndex=0
set bj_forLoopAIndexEnd=dw
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if RUw()then
call UnitRemoveAbilityBJ(aw[GetForLoopIndexA()],GetEnumUnit())
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
endfunction
function TVw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function TZw takes nothing returns boolean
return not Zt[GetPlayerId(GetTriggerPlayer())]
endfunction
function Tgr takes nothing returns boolean
set jR=1024
set xR=2048
return true
endfunction
function Tvw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function U6w takes nothing returns boolean
return IsPlayerEnemy(GetOwningPlayer(GetSpellAbilityUnit()),GetOwningPlayer(GetFilterUnit()))and IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)==false and BlzIsUnitInvulnerable(GetFilterUnit())==false
endfunction
function U7w takes nothing returns nothing
local unit Z7w=GetSpellAbilityUnit()
if GetSpellAbilityId()==1093683273 then
call UnitRemoveAbility(Z7w,1093683273)
call UnitAddAbility(Z7w,1093683275)
call UnitMakeAbilityPermanent(Z7w,true,1093683275)
call UnitAddAbility(Z7w,1093683274)
call UnitMakeAbilityPermanent(Z7w,true,1093683274)
else
call UnitRemoveAbility(Z7w,1093683275)
call UnitRemoveAbility(Z7w,1093683274)
call UnitAddAbility(Z7w,1093683273)
call UnitMakeAbilityPermanent(Z7w,true,1093683273)
endif
set Z7w=null
set Z7w=null
endfunction
function ZDw takes nothing returns boolean
if not(GetOwningPlayer(GetEnumUnit())==GetTriggerPlayer())then
return false
endif
return true
endfunction
function UDw takes nothing returns nothing
if ZDw()then
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.,G,Qtw)
call RemoveLocation(G)
endif
endfunction
function hTw takes player TTw,string YTw,boolean GTw,boolean gTw returns nothing
if Tr==null then
set Tr=CreateSoundFromLabel("InterfaceError",false,false,false,10,10)
endif
if GetLocalPlayer()==TTw then
if gTw==true then
call ClearTextMessages()
call DisplayTimedTextToPlayer(TTw,0.50,2.00,2.00,"|cffffcc00"+YTw+"|r")
endif
if GTw==true then
call StartSound(Tr)
endif
endif
endfunction
function UHw takes nothing returns nothing
local destructable ZHw=GetSpellTargetDestructable()
local integer WHw
local integer EHw
if GetDestructableTypeId(GetSpellTargetDestructable())==1146383478 or GetDestructableTypeId(GetSpellTargetDestructable())==1280599857 or GetDestructableTypeId(GetSpellTargetDestructable())==1515480881 or GetDestructableTypeId(GetSpellTargetDestructable())==1230271591 or GetDestructableTypeId(GetSpellTargetDestructable())==1096050481 or GetDestructableTypeId(GetSpellTargetDestructable())==1498702693 or GetDestructableTypeId(GetSpellTargetDestructable())==1146381105 or GetDestructableTypeId(GetSpellTargetDestructable())==1146381106 or GetDestructableTypeId(GetSpellTargetDestructable())==1146382133 or GetDestructableTypeId(GetSpellTargetDestructable())==1515480113 or GetDestructableTypeId(GetSpellTargetDestructable())==1515480117 or GetDestructableTypeId(GetSpellTargetDestructable())==1230268209 or GetDestructableTypeId(GetSpellTargetDestructable())==1146382129 or GetDestructableTypeId(GetSpellTargetDestructable())==1515484024 or GetDestructableTypeId(GetSpellTargetDestructable())==1146382129 or GetDestructableTypeId(GetSpellTargetDestructable())==1230272561 or GetDestructableTypeId(GetSpellTargetDestructable())==1280599345 then
set WHw=0
set EHw=ts
if GetDestructableTypeId(GetSpellTargetDestructable())==1146383478 then
loop
exitwhen WHw>EHw
if ZHw==Fw[WHw]then
set Fw[WHw]=null
set hw[WHw]=null
endif
set WHw=WHw+1
endloop
else
loop
exitwhen WHw>EHw
if ZHw==hw[WHw]then
set Fw[WHw]=null
set hw[WHw]=null
endif
set WHw=WHw+1
endloop
endif
else
call hTw(GetOwningPlayer(GetSpellAbilityUnit()),"",true,false)
endif
set WHw=0
set EHw=0
set ZHw=null
set ZHw=null
endfunction
function aTw takes location bTw,real yTw,real pTw returns location
local real eTw=GetLocationX(bTw)+yTw*Cos(pTw*bj_DEGTORAD)
local real qTw=GetLocationY(bTw)+yTw*Sin(pTw*bj_DEGTORAD)
set bTw=null
return Location(eTw,qTw)
endfunction
function lTw takes location STw,location cTw returns real
local real oTw=GetLocationX(cTw)-GetLocationX(STw)
local real OTw=GetLocationY(cTw)-GetLocationY(STw)
set STw=null
set cTw=null
return SquareRoot(oTw*oTw+OTw*OTw)
endfunction
function UJw takes nothing returns nothing
local location WJw=GetOrderPointLoc()
local unit EJw=GetOrderedUnit()
local integer ZJw=GetIssuedOrderId()
if OrderId2String(ZJw)!=null and lTw(GetUnitLoc(EJw),WJw)>800.00 then
call SetUnitPositionLoc(EJw,aTw(GetUnitLoc(EJw),lTw(GetUnitLoc(EJw),WJw)-800.00,RTw(GetUnitLoc(EJw),WJw)))
call TriggerSleepAction(0.01)
call IssuePointOrderByIdLoc(EJw,ZJw,WJw)
endif
call RemoveLocation(WJw)
set WJw=null
set ZJw=0
set EJw=null
set WJw=null
set EJw=null
endfunction
function UKw takes nothing returns boolean
return GetSpellAbilityId()==1097028401 or GetSpellAbilityId()==1097028402
endfunction
function UMw takes nothing returns nothing
local effect ZMw=AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIhe\\AIheTarget.mdl",GetSpellAbilityUnit(),"origin")
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl",GetSpellTargetUnit(),"chest"))
call UnitDamageTarget(GetSpellAbilityUnit(),GetSpellTargetUnit(),75*GetUnitAbilityLevel(GetSpellAbilityUnit(),1093683287)-25,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call SetUnitState(GetSpellAbilityUnit(),UNIT_STATE_LIFE,GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_LIFE)+50*GetUnitAbilityLevel(GetSpellAbilityUnit(),1093683287))
call iTw(1.833)
call DestroyEffect(ZMw)
set ZMw=null
set ZMw=null
endfunction
function UPw takes nothing returns nothing
call SetPlayerHandicapXPBJ(GetEnumPlayer(),100.00)
endfunction
function Ser takes string ser returns boolean
local integer ter
local integer ier
set w3[MM]=ser
set MM=MM+1
call HDs("when calling new_HashMap in SotFRP_Init, line 8")
call HDs("when calling new_HashMap in SotFRP_Init, line 9")
set ter=0
set ier=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen ter>ier
call Qku(pa[ter],df,"when calling setLocale in SotFRP_Init, line 17")
set ter=ter+1
endloop
set MM=MM-1
return true
endfunction
function URo takes nothing returns boolean
set MM=0
return Ser("SotFRP_Init, line 1")
endfunction
function UVw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call UnitRemoveAbility(GetEnumUnit(),1093683538)
endif
endfunction
function jhw takes unit khw returns nothing
call SaveReal(i,HO,GetHandleId(khw),GetUnitAbilityLevel(khw,1093683276)*100*(2.-GetWidgetLife(khw)/BlzGetUnitMaxHP(khw))*1.0)
endfunction
function U_u takes nothing returns boolean
call jhw(ry)
return true
endfunction
function Ubr takes nothing returns nothing
if GetUnitAbilityLevel(GetTriggerUnit(),Pd)>0 then
call BlzSetEventDamage(0.2*GetEventDamage())
endif
endfunction
function Ueu takes nothing returns boolean
return true
endfunction
function Ujw takes nothing returns nothing
call CameraSetEQNoiseForPlayer(GetEnumPlayer(),4.00)
endfunction
function Zkw takes nothing returns boolean
if not(Du==LoadIntegerBJ(0,GetHandleIdBJ(GetEnumUnit()),Au))then
return false
endif
return true
endfunction
function Ukw takes nothing returns nothing
if Zkw()then
call FlushChildHashtableBJ(GetHandleIdBJ(GetEnumUnit()),Au)
call GroupRemoveUnitSimple(GetEnumUnit(),Ku)
call RemoveUnit(GetEnumUnit())
endif
endfunction
function Umu takes nothing returns nothing
call Zmu(GetFilterUnit())
endfunction
function Zmw takes nothing returns boolean
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function Umw takes nothing returns nothing
if Zmw()then
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.00,GetUnitLoc(GetEnumUnit()),Cuw)
call RemoveLocation(G)
endif
endfunction
function V3w takes nothing returns nothing
local integer C3w=1
loop
exitwhen C3w>1000000000
if GetSpellAbilityUnit()==Gr[C3w]then
call GroupRemoveUnit(ps,Gr[C3w])
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl",GetUnitLoc(Gr[C3w])))
call SetUnitPositionLoc(Gr[C3w],gr[C3w])
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportTarget.mdl",GetUnitLoc(Gr[C3w])))
set Gr[C3w]=null
set gr[C3w]=null
return
endif
set C3w=C3w+1
endloop
set C3w=0
endfunction
function V4w takes nothing returns nothing
local unit L4w=GetSpellAbilityUnit()
local integer X4w=0
local integer C4w=GetUnitAbilityLevel(L4w,1093682517)
if IsUnitInGroup(L4w,st)==true then
call GroupRemoveUnit(st,L4w)
call iTw(1.)
endif
call GroupAddUnit(st,L4w)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Human\\InnerFire\\InnerFireTarget.mdl",L4w,"overhead"))
call UnitAddAbility(L4w,1093682518)
call UnitMakeAbilityPermanent(L4w,true,1093682518)
call SetUnitAbilityLevel(L4w,1093682518,C4w)
call UnitAddAbility(L4w,1093683790)
call UnitMakeAbilityPermanent(L4w,true,1093683790)
call SetUnitAbilityLevel(L4w,1093683790,C4w)
set C4w=0
loop
exitwhen IsUnitInGroup(L4w,st)==false
call iTw(1.)
set X4w=X4w+1
if X4w==5 or GetUnitState(L4w,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(st,L4w)
endif
endloop
call UnitRemoveAbility(L4w,1093682518)
call UnitRemoveAbility(L4w,1093683790)
call UnitRemoveAbility(L4w,1110455089)
set L4w=null
set X4w=0
set L4w=null
endfunction
function cfw takes string sfw,real tfw,real ifw returns nothing
local sound Sfw=CreateSound(sfw,false,true,true,10,10,"CombatSoundsEAX")
call SetSoundChannel(Sfw,40)
call SetSoundVolume(Sfw,127)
call SetSoundPitch(Sfw,1.)
call SetSoundDistances(Sfw,600.,10000.)
call SetSoundDistanceCutoff(Sfw,2100.)
call SetSoundConeAngles(Sfw,0.0,0.0,127)
call SetSoundConeOrientation(Sfw,0.0,0.0,0.0)
call SetSoundPosition(Sfw,tfw,ifw,50.)
call StartSound(Sfw)
call KillSoundWhenDone(Sfw)
set Sfw=null
set Sfw=null
set Sfw=null
endfunction
function V5w takes nothing returns nothing
local unit X5w=GetSpellAbilityUnit()
local effect C5w=AddSpecialEffectTarget("Abilities\\Spells\\Orc\\EtherealForm\\SpiritWalkerChange.mdl",X5w,"chest")
call cfw("Abilities\\Spells\\Orc\\EtherealForm\\SpiritWalkerMorph.wav",GetUnitX(X5w),GetUnitY(X5w))
if GetSpellAbilityId()==1093682755 then
call UnitRemoveAbility(X5w,1093682755)
call UnitAddAbility(X5w,1093682756)
call UnitMakeAbilityPermanent(X5w,true,1093682756)
call UnitAddAbility(X5w,1093682758)
call UnitMakeAbilityPermanent(X5w,true,1093682758)
else
call UnitRemoveAbility(X5w,1093682756)
call UnitRemoveAbility(X5w,1093682758)
call UnitAddAbility(X5w,1093682755)
call UnitMakeAbilityPermanent(X5w,true,1093682755)
endif
call iTw(0.934)
call DestroyEffect(C5w)
set X5w=null
set C5w=null
set X5w=null
set C5w=null
endfunction
function V6w takes nothing returns nothing
local unit X6w=GetEnumUnit()
local unit C6w=CreateUnitAtLoc(Player(15),1747995215,GetUnitLoc(X6w),270.)
call UnitAddAbility(C6w,1093679409)
call SetUnitAbilityLevel(C6w,1093679409,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093679408))
call IssueTargetOrder(C6w,"hex",X6w)
call eRw(C6w,3.)
set X6w=null
set C6w=null
set X6w=null
set C6w=null
endfunction
function VAw takes nothing returns nothing
call SetWaterBaseColorBJ(S2R(SubStringBJ(GetEventPlayerChatString(),11,13)),S2R(SubStringBJ(GetEventPlayerChatString(),14,16)),S2R(SubStringBJ(GetEventPlayerChatString(),17,19)),S2R(SubStringBJ(GetEventPlayerChatString(),20,22)))
endfunction
function VDw takes nothing returns nothing
local string LDw=GetEventPlayerChatString()
local player XDw=GetTriggerPlayer()
local group CDw
set g[GetConvertedPlayerId(XDw)]=GetUnitsOfPlayerAndTypeId(XDw,1747988528)
if LDw=="remove gate" then
call ForGroup(g[GetConvertedPlayerId(XDw)],Ztw)
else
set CDw=CreateGroup()
call GroupEnumUnitsOfPlayer(CDw,XDw,Condition(asw))
if LDw=="destroy gate" then
call ForGroup(CDw,Utw)
elseif LDw=="open gate" then
call ForGroup(CDw,Itw)
elseif LDw=="close gate" then
call ForGroup(CDw,Ptw)
endif
call DestroyGroup(CDw)
set CDw=null
endif
call DestroyGroup(g[GetPlayerId(XDw)+1])
set XDw=null
set XDw=null
set CDw=null
endfunction
function VHw takes nothing returns nothing
local destructable CHw=GetSpellTargetDestructable()
call SetDestructableInvulnerable(CHw,true)
call KillDestructable(CHw)
call RemoveDestructable(CHw)
set CHw=null
set CHw=null
endfunction
function VJw takes nothing returns boolean
return GetUnitTypeId(GetSpellAbilityUnit())==1747988528
endfunction
function KNw takes unit HNw,location JNw returns boolean
if RectContainsUnit(RectFromCenterSizeBJ(JNw,50.00,50.00),HNw)==true then
return true
else
return false
endif
endfunction
function VNw takes nothing returns nothing
local location XNw=GetSpellTargetLoc()
local unit LNw=CreateUnitAtLoc(GetOwningPlayer(GetSpellAbilityUnit()),1747996749,GetUnitLoc(GetSpellAbilityUnit()),GetUnitFacing(GetSpellAbilityUnit()))
local real CNw
call UnitAddAbility(LNw,1093683011)
call SetUnitAbilityLevel(LNw,1093683011,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093683015))
call UnitAddAbility(LNw,1093683032)
call SetUnitAbilityLevel(LNw,1093683032,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093683015))
set CNw=20+10*GetUnitAbilityLevel(GetSpellAbilityUnit(),1093683015)
call SetUnitPathing(LNw,false)
call IssuePointOrderLoc(LNw,"move",XNw)
loop
call PolledWait(0.1)
exitwhen KNw(LNw,XNw)
endloop
call UnitDamagePointLoc(LNw,0.,200.,XNw,CNw,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_FIRE)
call KillUnit(LNw)
set LNw=null
set XNw=null
set CNw=0.
set LNw=null
set XNw=null
endfunction
function HgS takes integer AgS,string DgS returns nothing
set w3[MM]=DgS
set MM=MM+1
if og[AgS]==0 then
call Mau("Double free: object of type OnCastListener","when calling error in ClosureEvents, line 50")
else
set ig[Sg]=AgS
set Sg=Sg+1
set og[AgS]=0
endif
set MM=MM-1
endfunction
function aYs takes integer yYs,string pYs returns nothing
local integer eYs
local integer qYs
set w3[MM]=pYs
set MM=MM+1
if DW[yYs]!=null then
set eYs=BZc(My,vvr(DW[yYs]),"when calling get in ClosureEvents, line 60")
if eYs==yYs then
call KZc(My,vvr(DW[yYs]),IW[yYs],"when calling put in ClosureEvents, line 62")
elseif PW[yYs]!=0 then
set IW[PW[yYs]]=IW[yYs]
endif
else
set qYs=BZc(Ny,AW[yYs],"when calling get in ClosureEvents, line 66")
if qYs==yYs then
call KZc(Ny,AW[yYs],IW[yYs],"when calling put in ClosureEvents, line 68")
elseif PW[yYs]!=0 then
set IW[PW[yYs]]=IW[yYs]
endif
endif
set PW[IW[yYs]]=PW[yYs]
set IW[yYs]=0
set PW[yYs]=0
set MM=MM-1
endfunction
function fYs takes integer nYs,string dYs returns nothing
set w3[MM]=dYs
set MM=MM+1
call aYs(nYs,"when calling OnCastListener_onDestroy in ClosureEvents, line 58")
call HgS(nYs,"when calling dealloc_OnCastListener in ClosureEvents, line 58")
set MM=MM-1
endfunction
function LGc takes integer JGc,string KGc returns nothing
set w3[MM]=KGc
set MM=MM+1
if og[JGc]==0 then
if JGc==0 then
call Mau("Nullpointer exception when calling OnCastListener.OnCastListener","when calling error in ClosureEvents, line 50")
else
call Mau("Called OnCastListener.OnCastListener on invalid object.","when calling error in ClosureEvents, line 50")
endif
endif
call fYs(JGc,"when calling destroyOnCastListener in ClosureEvents, line 50")
set MM=MM-1
endfunction
function PgS takes integer UgS,string IgS returns nothing
set w3[MM]=IgS
set MM=MM+1
if tg[UgS]==0 then
call Mau("Double free: object of type EventListener","when calling error in ClosureEvents, line 98")
else
set ug[rg]=UgS
set rg=rg+1
set tg[UgS]=0
endif
set MM=MM-1
endfunction
function uYs takes integer MTs returns nothing
local integer wYs=wp[EW[MTs]]
if wYs==MTs then
set wp[EW[MTs]]=ZW[MTs]
elseif UW[MTs]!=0 then
set ZW[UW[MTs]]=ZW[MTs]
endif
if ZW[MTs]!=0 then
set UW[ZW[MTs]]=UW[MTs]
endif
set wYs=up[EW[MTs]]
if wYs==MTs then
set up[EW[MTs]]=ZW[MTs]
elseif UW[MTs]!=0 then
set ZW[UW[MTs]]=ZW[MTs]
endif
set ZW[MTs]=0
set UW[MTs]=0
endfunction
function tYs takes integer rYs,string sYs returns nothing
set w3[MM]=sYs
set MM=MM+1
call uYs(rYs)
call PgS(rYs,"when calling dealloc_EventListener in ClosureEvents, line 206")
set MM=MM-1
endfunction
function ZGc takes integer WGc,string EGc returns nothing
set w3[MM]=EGc
set MM=MM+1
if tg[WGc]==0 then
if WGc==0 then
call Mau("Nullpointer exception when calling EventListener.EventListener","when calling error in ClosureEvents, line 98")
else
call Mau("Called EventListener.EventListener on invalid object.","when calling error in ClosureEvents, line 98")
endif
endif
call tYs(WGc,"when calling destroyEventListener in ClosureEvents, line 98")
set MM=MM-1
endfunction
function Viu takes integer Kiu,string Liu returns nothing
local integer Xiu
local integer Ciu
set w3[MM]=Liu
set MM=MM+1
if Kiu>0 then
if up[Kiu]!=0 then
call jZu("unregister unit has listeners. startid: "+tgu(Kiu))
set Xiu=up[Kiu]
set up[Kiu]=0
loop
exitwhen not(Xiu!=0)
set Ciu=Xiu
set Xiu=ZW[Xiu]
call ZGc(Ciu,"when calling dispatch_EventListener_destroyEventListener in ClosureEvents, line 284")
endloop
endif
endif
set MM=MM-1
endfunction
function uUc takes integer NZc,integer MZc,string wUc returns nothing
set w3[MM]=wUc
set MM=MM+1
if Yh[NZc]==0 then
if NZc==0 then
call Mau("Nullpointer exception when calling HashMap.remove","when calling error in HashMap, line 27")
else
call Mau("Called HashMap.remove on invalid object.","when calling error in HashMap, line 27")
endif
endif
if Yh[NZc]<=1656 then
call UDs(NZc,MZc,"when calling remove in HashMap, line 27")
else
call lHs(NZc,MZc,"when calling remove in HashMap, line 27")
endif
set MM=MM-1
endfunction
function Jiu takes unit Uiu,string Iiu returns nothing
local integer Piu
local integer Aiu
local integer Diu
local integer Hiu
set w3[MM]=Iiu
set MM=MM+1
if Riu(Uiu)then
call Viu(QHr(Uiu),"when calling unregisterEvents in ClosureEvents, line 260")
if PZc(My,vvr(Uiu),"when calling has in ClosureEvents, line 261")then
set Piu=BZc(My,vvr(Uiu),"when calling get in ClosureEvents, line 262")
call uUc(My,vvr(Uiu),"when calling remove in ClosureEvents, line 263")
loop
exitwhen not(Piu!=0)
set Aiu=Piu
set Piu=IW[Piu]
call LGc(Aiu,"when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 267")
endloop
endif
if PZc(My,vvr(Uiu),"when calling has in ClosureEvents, line 268")then
set Diu=BZc(My,vvr(Uiu),"when calling get in ClosureEvents, line 269")
loop
exitwhen not(Diu!=0)
set Hiu=Diu
set Diu=IW[Diu]
call LGc(Hiu,"when calling dispatch_OnCastListener_destroyOnCastListener in ClosureEvents, line 273")
endloop
endif
endif
set MM=MM-1
endfunction
function Miu takes string Niu returns nothing
set w3[MM]=Niu
set MM=MM+1
call Jiu(IHr(),"when calling unregisterEventsForUnit in ClosureEvents, line 290")
set MM=MM-1
endfunction
function VRo takes nothing returns nothing
set MM=0
call Miu("ClosureEvents, line 290")
endfunction
function VUw takes nothing returns nothing
local group CUw=CreateGroup()
call GroupEnumUnitsOfPlayer(CUw,GetTriggerPlayer(),Condition(asw))
if GetEventPlayerChatString()=="ai 1 on" then
call ForGroup(CUw,nsw)
elseif GetEventPlayerChatString()=="ai 1 off" then
call ForGroup(CUw,dsw)
elseif GetEventPlayerChatString()=="ai 2 on" then
call ForGroup(CUw,fsw)
else
call ForGroup(CUw,Rsw)
endif
call DestroyGroup(CUw)
set CUw=null
set CUw=null
endfunction
function VVw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call GroupAddUnit(Xs,GetEnumUnit())
endif
endfunction
function VXw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,4)=="item")then
return false
endif
return true
endfunction
function VZw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,3)=="sfx")then
return false
endif
return true
endfunction
function snu takes string rnu returns boolean
set w3[MM]=rnu
set MM=MM+1
call HDs("when calling new_HashMap in EventHelper, line 7")
call HDs("when calling new_HashMap in EventHelper, line 8")
call O7S("when calling new_Table in EventHelper, line 9")
set MM=MM-1
return true
endfunction
function Vfo takes nothing returns boolean
set MM=0
return snu("EventHelper, line 1")
endfunction
function Cmw takes nothing returns boolean
if not(GetEventPlayerChatString()=="remove elevator")then
return false
endif
return true
endfunction
function Dmw takes nothing returns boolean
if not(GetEventPlayerChatString()=="elevator 1")then
return false
endif
return true
endfunction
function Jmw takes nothing returns boolean
if not(GetEventPlayerChatString()=="elevator 2")then
return false
endif
return true
endfunction
function Vmw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
if Dmw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],wrw)
endif
if Jmw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],urw)
endif
if Cmw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],rrw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function Cdu takes framehandle Xdu returns nothing
call BlzFrameSetVisible(Xdu,false)
endfunction
function mdu takes string vdu returns framehandle
return BlzGetFrameByName(vdu,0)
endfunction
function Vrs takes nothing returns boolean
call Cdu(mdu("ResourceBarFrame"))
return true
endfunction
function Vxw takes nothing returns boolean
if not(GetSpellAbilityId()==1093678936)then
return false
endif
return true
endfunction
function W0u takes nothing returns nothing
local unit x0u=GetSpellAbilityUnit()
local timer v0u=LoadTimerHandle(nr,GetHandleId(x0u),StringHash("bmT"))
local effect m0u=LoadEffectHandle(nr,GetHandleId(v0u),StringHash("e"))
local location Q0u=LoadLocationHandle(nr,GetHandleId(v0u),StringHash("l"))
call RemoveLocation(Q0u)
set Q0u=null
call FlushChildHashtable(nr,GetHandleId(v0u))
call DestroyTimer(v0u)
set v0u=null
call DestroyEffect(m0u)
set m0u=null
set x0u=null
set v0u=null
set m0u=null
set Q0u=null
endfunction
function W2w takes nothing returns nothing
local location j2w=GetSpellTargetLoc()
local unit x2w=GetSpellAbilityUnit()
local effect v2w
local effect m2w
local effect Q2w
call iTw(0.25)
set v2w=AddSpecialEffectLoc("war3mapImported\\EnergyStrike.mdx",j2w)
call iTw(0.75)
set m2w=AddSpecialEffectLoc("war3mapImported\\EnergyStrike.mdx",j2w)
call iTw(0.75)
set Q2w=AddSpecialEffectLoc("war3mapImported\\EnergyStrike.mdx",j2w)
call iTw(1.25)
call cfw("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldTarget.wav",GetLocationX(j2w),GetLocationY(j2w))
call UnitDamagePoint(x2w,0.,200.,GetLocationX(j2w),GetLocationY(j2w),350.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call iTw(0.75)
call DestroyEffect(v2w)
set v2w=null
call cfw("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldTarget.wav",GetLocationX(j2w),GetLocationY(j2w))
call UnitDamagePoint(x2w,0.,200.,GetLocationX(j2w),GetLocationY(j2w),350.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call iTw(0.75)
call DestroyEffect(m2w)
set m2w=null
call cfw("Abilities\\Spells\\Orc\\LightningShield\\LightningShieldTarget.wav",GetLocationX(j2w),GetLocationY(j2w))
call UnitDamagePoint(x2w,0.,200.,GetLocationX(j2w),GetLocationY(j2w),350.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
set x2w=null
call RemoveLocation(j2w)
set j2w=null
call iTw(0.75)
call DestroyEffect(Q2w)
set Q2w=null
set j2w=null
set x2w=null
set v2w=null
set m2w=null
set Q2w=null
endfunction
function W3w takes nothing returns boolean
return GetSpellAbilityId()==1093683783 and GetOwningPlayer(GetSpellTargetUnit())!=Player(bj_PLAYER_NEUTRAL_VICTIM)and GetUnitTypeId(GetSpellTargetUnit())!=1747988528
endfunction
function W6w takes nothing returns nothing
local group Q6w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(Q6w,GetSpellTargetLoc(),300.,Condition(Sbw))
call ForGroup(Q6w,cbw)
call DestroyGroup(Q6w)
set Q6w=null
set Q6w=null
endfunction
function QCw takes nothing returns boolean
if not(GetEventPlayerChatString()=="'herofocus")then
return false
endif
return true
endfunction
function jCw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@herofocus")then
return false
endif
return true
endfunction
function WCw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(ycw))
if QCw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],pcw)
elseif jCw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],ecw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function WFw takes nothing returns nothing
local unit QFw=LoadUnitHandle(i,y,GetHandleId(GetExpiredTimer()))
call ATw(GetExpiredTimer())
call BlzSetUnitAbilityManaCost(QFw,1093684552,1,75)
call BlzSetUnitAbilityManaCost(QFw,1093684552,2,75)
call BlzSetUnitAbilityManaCost(QFw,1093684552,3,75)
set QFw=null
set QFw=null
endfunction
function mIw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function QIw takes nothing returns boolean
if not mIw()then
return false
endif
return true
endfunction
function WIw takes nothing returns nothing
if QIw()then
call UnitRemoveAbilityBJ(Ns[GetForLoopIndexA()],GetEnumUnit())
endif
endfunction
function WPw takes nothing returns nothing
call CinematicModeBJ(true,GetForceOfPlayer(GetTriggerPlayer()))
call CinematicModeBJ(false,GetForceOfPlayer(GetTriggerPlayer()))
endfunction
function Dqs takes integer Pqs,integer Aqs returns nothing
set MQ[Pqs]=Aqs
endfunction
function hTc takes integer YTc,integer GTc,string gTc returns nothing
set w3[MM]=gTc
set MM=MM+1
if gG[YTc]==0 then
if YTc==0 then
call Mau("Nullpointer exception when calling BuffType.setOnCreationHandler","when calling error in BuffsJurst, line 46")
else
call Mau("Called BuffType.setOnCreationHandler on invalid object.","when calling error in BuffsJurst, line 46")
endif
endif
call Dqs(YTc,GTc)
set MM=MM-1
endfunction
function Zsc takes string Wsc returns integer
local integer Esc
set w3[MM]=Wsc
set MM=MM+1
if FG==0 then
if kG<32768 then
set kG=kG+1
set Esc=kG
set jG[Esc]=1677
else
call Mau("Out of memory: Could not create OnBuffCreationStruct.","when calling error in ShieldWall, line 34")
set Esc=0
endif
else
set FG=FG-1
set Esc=hG[FG]
set jG[Esc]=1677
endif
set MM=MM-1
return Esc
endfunction
function OWi takes integer oWi returns nothing
endfunction
function eWi takes integer pWi returns nothing
call OWi(pWi)
endfunction
function yWi takes string lWi returns integer
local integer bWi
set w3[MM]=lWi
set MM=MM+1
set bWi=Zsc("when calling alloc_OnBuffCreationStruct in ShieldWall, line 34")
call eWi(bWi)
set MM=MM-1
return bWi
endfunction
function Lbr takes string Jbr returns nothing
local trigger Kbr
set w3[MM]=Jbr
set MM=MM+1
set Kbr=CreateTrigger()
call hTc(Dd,yWi("when calling new_OnBuffCreationStruct in ShieldWall, line 42"),"when calling setOnCreationHandler in ShieldWall, line 42")
call rfw(Kbr,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Kbr,Filter(Taw))
call TriggerAddCondition(Hd,Filter(Yaw))
set MM=MM-1
set Kbr=null
endfunction
function Zbr takes string Ebr returns boolean
set w3[MM]=Ebr
set MM=MM+1
set Id=1093683509
set Pd=1110455607
set Ad=1093681493
set Dd=Csu("when calling create in ShieldWall, line 7")
set Hd=CreateTrigger()
set Jd=CreateGroup()
call Lbr("when calling Init in ShieldWall, line 1")
set MM=MM-1
return true
endfunction
function WRo takes nothing returns boolean
set MM=0
return Zbr("ShieldWall, line 1")
endfunction
function WRu takes nothing returns boolean
set Te=CreateGroup()
return true
endfunction
function KOr takes string HOr returns boolean
local boolean JOr
set w3[MM]=HOr
set MM=MM+1
set JOr=(not d7u(S7s(GetFilterUnit()),"when calling isUnitTypeProtected in ScmdUnitBuiltins, line 232"))and IsUnitSelected(GetFilterUnit(),GetOwningPlayer(GetFilterUnit()))
set MM=MM-1
return JOr
endfunction
function WTo takes nothing returns boolean
set MM=0
return KOr("ScmdUnitBuiltins, line 232")
endfunction
function QXw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
return true
endfunction
function WXw takes nothing returns nothing
if QXw()then
call UnitAddTypeBJ(UNIT_TYPE_PEON,GetEnumUnit())
endif
endfunction
function WZu takes nothing returns boolean
return true
endfunction
function WZw takes nothing returns nothing
set xt=InitGameCache("Cache.w3v")
set nr=InitHashtable()
call InitHashtable()
call SetDoodadAnimationRect(bj_mapInitialPlayableArea,1447195745,"Stand First",false)
call SetTerrainFogEx(0,1000000000.00,1000000000.00,0.,1.,1.,1.)
call SetPlayerTechResearched(Player(PLAYER_NEUTRAL_AGGRESSIVE),1383035760,1)
call SetPlayerTechResearched(Player(PLAYER_NEUTRAL_PASSIVE),1383035760,1)
call SetPlayerTechResearched(Player(PLAYER_NEUTRAL_AGGRESSIVE),1383035490,1)
call SetPlayerTechResearched(Player(PLAYER_NEUTRAL_PASSIVE),1383035490,1)
set Fr[1]=CreateUnitAtLoc(Player(bj_PLAYER_NEUTRAL_VICTIM),1747996209,GetUnitLoc(fO),bj_UNIT_FACING)
set Fr[2]=CreateUnitAtLoc(Player(bj_PLAYER_NEUTRAL_VICTIM),1747996212,GetUnitLoc(TO),bj_UNIT_FACING)
set Fr[3]=CreateUnitAtLoc(Player(bj_PLAYER_NEUTRAL_VICTIM),1747996225,GetUnitLoc(YO),bj_UNIT_FACING)
set Fr[4]=CreateUnitAtLoc(Player(bj_PLAYER_NEUTRAL_VICTIM),1747996230,GetUnitLoc(RO),bj_UNIT_FACING)
call SetPlayerState(Player(PLAYER_NEUTRAL_AGGRESSIVE),PLAYER_STATE_NO_CREEP_SLEEP,1)
call ForForce(GetPlayersAll(),Krw)
call ForGroup(GetUnitsOfTypeIdAll(1747988528),Lrw)
set k[0]="|CFFFF0303"
set k[1]="|CFF0042FF"
set k[2]="|CFF1CE6B9"
set k[3]="|CFF540081"
set k[4]="|CFFFFFC01"
set k[5]="|CFFFE8A0E"
set k[6]="|CFF20C000"
set k[7]="|CFF282828"
set k[8]="|CFF959697"
set k[9]="|CFF7EBFF1"
set k[10]="|CFF106246"
set k[11]="|CFF4E2A04"
set k[16]="|CFFE55BB0"
set F[1]=true
set ls[1]=true
call SetGameSpeed(MAP_SPEED_FASTEST)
call SetMapFlag(MAP_LOCK_SPEED,true)
call DoNotSaveReplay()
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function Wbr takes nothing returns boolean
return true
endfunction
function Wku takes nothing returns boolean
set Ie=false
return true
endfunction
function Wpu takes nothing returns boolean
return true
endfunction
function Qxw takes nothing returns boolean
if not(Du==LoadIntegerBJ(4,GetHandleIdBJ(GetEnumUnit()),Au))then
return false
endif
return true
endfunction
function Wxw takes nothing returns nothing
if Qxw()then
call GroupRemoveUnitSimple(GetEnumUnit(),Hu)
call RemoveUnit(LoadUnitHandleBJ(2,GetHandleIdBJ(GetEnumUnit()),Au))
call RemoveUnit(LoadUnitHandleBJ(3,GetHandleIdBJ(GetEnumUnit()),Au))
call SetPlayerAbilityAvailableBJ(true,1093678935,GetOwningPlayer(GetEnumUnit()))
call UnitRemoveAbilityBJ(1093678936,GetEnumUnit())
set Ju[20]=LoadLocationHandleBJ(0,GetHandleIdBJ(GetEnumUnit()),Au)
call RemoveLocation(Ju[20])
call FlushChildHashtableBJ(GetHandleIdBJ(GetEnumUnit()),Au)
endif
endfunction
function X1w takes nothing returns boolean
if GetSpellAbilityId()==1093682515 then
return true
endif
return false
endfunction
function X3w takes nothing returns boolean
if GetSpellAbilityId()==1093679433 then
return true
endif
return false
endfunction
function X7w takes nothing returns boolean
if not(GetSpellAbilityId()==1093682008)then
return false
endif
return true
endfunction
function XCw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function XDu takes nothing returns boolean
return true
endfunction
function XEw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,7)=="terrain")then
return false
endif
return true
endfunction
function XHw takes nothing returns boolean
if GetSpellAbilityId()==1093683257 then
return true
else
return false
endif
endfunction
function XJw takes nothing returns nothing
local unit AJw=GetOrderedUnit()
local integer DJw=GetIssuedOrderId()
local unit HJw=GetOrderTargetUnit()
local destructable JJw=GetOrderTargetDestructable()
local item KJw=GetOrderTargetItem()
local location LJw=Location(GetDestructableX(JJw),GetDestructableY(JJw))
if GetOrderTargetItem()==null then
if GetIssuedOrderId()==OrderId("smart")and HJw!=null and IsUnitLoaded(HJw)then
call IssueImmediateOrder(AJw,"stop")
endif
if GetIssuedOrderId()!=OrderId("smart")and HJw!=null and lTw(GetUnitLoc(AJw),GetUnitLoc(HJw))>800.00 then
call SetUnitPositionLoc(AJw,aTw(GetUnitLoc(AJw),lTw(GetUnitLoc(AJw),GetUnitLoc(HJw))-800.00,RTw(GetUnitLoc(AJw),GetUnitLoc(HJw))))
call TriggerSleepAction(0.01)
call IssueTargetOrderById(AJw,DJw,HJw)
elseif JJw!=null and lTw(GetUnitLoc(AJw),LJw)>800.00 then
call SetUnitPositionLoc(AJw,aTw(GetUnitLoc(AJw),lTw(GetUnitLoc(AJw),LJw)-800.00,RTw(GetUnitLoc(AJw),LJw)))
call TriggerSleepAction(0.01)
call IssueTargetOrderById(AJw,DJw,JJw)
endif
else
call SetUnitPositionLoc(AJw,Location(GetItemX(KJw),GetItemY(KJw)))
call UnitAddItem(AJw,KJw)
call TriggerSleepAction(0.01)
call IssueImmediateOrder(AJw,"stop")
endif
call RemoveLocation(LJw)
set LJw=null
set KJw=null
set JJw=null
set HJw=null
set DJw=0
set AJw=null
set AJw=null
set HJw=null
set JJw=null
set KJw=null
set LJw=null
endfunction
function AQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(8))then
return false
endif
return true
endfunction
function DQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(9))then
return false
endif
return true
endfunction
function EQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(3))then
return false
endif
return true
endfunction
function FQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="ldungeonbluefog")then
return false
endif
return true
endfunction
function GQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="ldungeonredfog")then
return false
endif
return true
endfunction
function HQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(10))then
return false
endif
return true
endfunction
function IQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(6))then
return false
endif
return true
endfunction
function JQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(11))then
return false
endif
return true
endfunction
function KQw takes nothing returns boolean
if not(qw[GetConvertedPlayerId(GetTriggerPlayer())]<1)then
return false
endif
return true
endfunction
function LQw takes nothing returns boolean
if not(qw[GetConvertedPlayerId(GetTriggerPlayer())]>=9)then
return false
endif
return true
endfunction
function OQw takes nothing returns boolean
if not(qw[GetConvertedPlayerId(GetTriggerPlayer())]>=8)then
return false
endif
if not(GetEventPlayerChatString()!="weather on")then
return false
endif
if not(GetEventPlayerChatString()!="weather off")then
return false
endif
return true
endfunction
function PQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(7))then
return false
endif
return true
endfunction
function QQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(1))then
return false
endif
return true
endfunction
function RQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="hlordaeronrain")then
return false
endif
return true
endfunction
function TQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="ldungeonwhitefog")then
return false
endif
return true
endfunction
function UQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(5))then
return false
endif
return true
endfunction
function WQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(2))then
return false
endif
return true
endfunction
function YQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="hdungeonwhitefog")then
return false
endif
return true
endfunction
function ZQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(4))then
return false
endif
return true
endfunction
function aQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="lnorthrendsnow")then
return false
endif
return true
endfunction
function bQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="hwind")then
return false
endif
return true
endfunction
function dQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="northrendblizzard")then
return false
endif
return true
endfunction
function eQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="loutlandwind")then
return false
endif
return true
endfunction
function fQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="llordaeronrain")then
return false
endif
return true
endfunction
function gQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="ldungeongreenfog")then
return false
endif
return true
endfunction
function hQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="hdungeongreenfog")then
return false
endif
return true
endfunction
function jQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="dalaranshield")then
return false
endif
return true
endfunction
function kQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="hdungeonbluefog")then
return false
endif
return true
endfunction
function lQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="hdungeonredfog")then
return false
endif
return true
endfunction
function mQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(0))then
return false
endif
return true
endfunction
function nQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="hnorthrendsnow")then
return false
endif
return true
endfunction
function pQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="raysoflight")then
return false
endif
return true
endfunction
function qQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="houtlandwind")then
return false
endif
return true
endfunction
function vQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="hashenvillerain")then
return false
endif
return true
endfunction
function xQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="lashenvillerain")then
return false
endif
return true
endfunction
function yQw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),9,121)=="raysofmoonlight")then
return false
endif
return true
endfunction
function XQw takes nothing returns nothing
if OQw()then
call DisplayTextToForce(GetPlayersMatching(Condition(lrw)),"TRIGSTR_047")
return
endif
set rw=RectFromLoc(Wt[GetConvertedPlayerId(GetTriggerPlayer())-1],Et[GetConvertedPlayerId(GetTriggerPlayer())-1])
if vQw()then
call AddWeatherEffectSaveLast(rw,1380018290)
elseif xQw()then
call AddWeatherEffectSaveLast(rw,1380019314)
elseif jQw()then
call AddWeatherEffectSaveLast(rw,1296393331)
elseif kQw()then
call AddWeatherEffectSaveLast(rw,1178886760)
elseif FQw()then
call AddWeatherEffectSaveLast(rw,1178886764)
elseif hQw()then
call AddWeatherEffectSaveLast(rw,1178888040)
elseif gQw()then
call AddWeatherEffectSaveLast(rw,1178888044)
else
if lQw()then
call AddWeatherEffectSaveLast(rw,1178890856)
endif
if GQw()then
call AddWeatherEffectSaveLast(rw,1178890860)
elseif YQw()then
call AddWeatherEffectSaveLast(rw,1178892136)
elseif TQw()then
call AddWeatherEffectSaveLast(rw,1178892140)
elseif RQw()then
call AddWeatherEffectSaveLast(rw,1380739186)
elseif fQw()then
call AddWeatherEffectSaveLast(rw,1380740210)
elseif dQw()then
call AddWeatherEffectSaveLast(rw,1397645939)
elseif nQw()then
call AddWeatherEffectSaveLast(rw,1397647475)
elseif aQw()then
call AddWeatherEffectSaveLast(rw,1397648499)
elseif qQw()then
call AddWeatherEffectSaveLast(rw,1464820599)
elseif eQw()then
call AddWeatherEffectSaveLast(rw,1464822903)
elseif pQw()then
call AddWeatherEffectSaveLast(rw,1280467297)
elseif yQw()then
call AddWeatherEffectSaveLast(rw,1280470369)
elseif bQw()then
call AddWeatherEffectSaveLast(rw,1464755063)
else
return
endif
endif
call EnableWeatherEffect(GetLastCreatedWeatherEffect(),true)
if mQw()then
set sw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if QQw()then
set tw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if WQw()then
set yw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if EQw()then
set bw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if ZQw()then
set lw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if UQw()then
set Ow[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if IQw()then
set ow[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if PQw()then
set cw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if AQw()then
set Sw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if DQw()then
set iw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if HQw()then
set ew[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
if JQw()then
set pw[qw[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedWeatherEffect()
endif
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]+1
if KQw()then
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=1
endif
if LQw()then
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=8
endif
endfunction
function Pyc takes string Uyc returns integer
local integer Iyc
set w3[MM]=Uyc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Iyc=kj
set jj[Iyc]=1087
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_UnitShopsBuiltins.","when calling error in UnitShopsBuiltins, line 12")
set Iyc=0
endif
else
set Fj=Fj-1
set Iyc=hj[Fj]
set jj[Iyc]=1087
endif
set MM=MM-1
return Iyc
endfunction
function Zyc takes string Wyc returns integer
local integer Eyc
set w3[MM]=Wyc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Eyc=kj
set jj[Eyc]=1086
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_UnitShopsBuiltins.","when calling error in UnitShopsBuiltins, line 8")
set Eyc=0
endif
else
set Fj=Fj-1
set Eyc=hj[Fj]
set jj[Eyc]=1086
endif
set MM=MM-1
return Eyc
endfunction
function eJr takes string OJr returns boolean
local integer lJr
local integer bJr
local integer yJr
local integer pJr
set w3[MM]=OJr
set MM=MM+1
set lJr=Zyc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_UnitShopsBuiltins in UnitShopsBuiltins, line 8")
set bJr=eDt(lJr,"when calling new_BuiltinData in UnitShopsBuiltins, line 8")
call dao(bJr,m4u(),m4u(),"when calling setArgumentsTypes in UnitShopsBuiltins, line 11")
call jBu(WHt(bJr,"when calling new_BuiltinFunction in UnitShopsBuiltins, line 8"),"utypesetbaseid","when calling registerProtectedBuiltin in UnitShopsBuiltins, line 8")
set yJr=Pyc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_UnitShopsBuiltins in UnitShopsBuiltins, line 12")
set pJr=eDt(yJr,"when calling new_BuiltinData in UnitShopsBuiltins, line 12")
call Fao(pJr,m4u(),"when calling setArgumentsTypes in UnitShopsBuiltins, line 15")
call jBu(WHt(pJr,"when calling new_BuiltinFunction in UnitShopsBuiltins, line 12"),"utypeflush","when calling registerProtectedBuiltin in UnitShopsBuiltins, line 12")
set MM=MM-1
return true
endfunction
function XRo takes nothing returns boolean
set MM=0
return eJr("UnitShopsBuiltins, line 1")
endfunction
function XUw takes nothing returns nothing
call VRw(GetEnumUnit())
endfunction
function LXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="item swordofosiris")then
return false
endif
return true
endfunction
function XXw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
if LXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],CSw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function XZw takes nothing returns nothing
set h=GetUnitsInRectAll(It)
call ForGroupBJ(h,Nrw)
call DestroyGroup(h)
call TriggerSleepAction(1.00)
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function X_u takes nothing returns boolean
set ly=0.017453293
set by=57.295779513
return true
endfunction
function Bbr takes integer Cbr,string Vbr returns nothing
set Ld[Kd]=Cbr
set Xd[Kd]=Vbr
set Kd=Kd+1
endfunction
function Xbr takes nothing returns boolean
set Kd=0
call Bbr(1097169000,"exhumecorpses")
call Bbr(1097690227,"aerialshackles")
call Bbr(1098018659,"barrage")
call Bbr(1097034854,"cloud")
call Bbr(1097035111,"controlmagic")
call Bbr(1097098598,"defend")
call Bbr(1097099635,"dispelmagic")
call Bbr(1097228916,"feedback")
call Bbr(1097228916,"feedback2")
call Bbr(1097228907,"feedback3")
call Bbr(1097231467,"flakcannons")
call Bbr(1097231457,"flare")
call Bbr(1097300322,"flyingmachinebombs")
call Bbr(1097233256,"fragmentationshards")
call Bbr(1097360737,"heal")
call Bbr(1097428582,"innerfire")
call Bbr(1097430643,"invisibility")
call Bbr(1097688166,"magicdefense")
call Bbr(1097102451,"magicsentry")
call Bbr(1097889894,"phoenixfire")
call Bbr(1097886841,"polymorph")
call Bbr(1097364080,"repair")
call Bbr(1095267425,"reveal")
call Bbr(1098083439,"slow")
call Bbr(1098084467,"spellsteal")
call Bbr(1098085480,"stormhammers")
call Bbr(1097364322,"sunderingblades")
call Bbr(1097300342,"truesight2")
call Bbr(1097690746,"aoedamageupondeath")
call Bbr(1096905588,"ancestralspirit")
call Bbr(1096971115,"berserk")
call Bbr(1096969327,"bloodlust")
call Bbr(1096970086,"burningoil")
call Bbr(1097098614,"devour")
call Bbr(1097102947,"devour")
call Bbr(1097098094,"disenchant")
call Bbr(1097098088,"disenchant2")
call Bbr(1097166451,"ensnare")
call Bbr(1098278254,"envenomedspears")
call Bbr(1097365348,"healingward")
call Bbr(1097365348,"healingward2")
call Bbr(1097818482,"healingwardaura")
call Bbr(1097818482,"healingwardaura2")
call Bbr(1097626472,"lightningshield")
call Bbr(1097623921,"liquidfire")
call Bbr(1098080620,"pillage")
call Bbr(1098342770,"pulverize")
call Bbr(1097885490,"purge(stun)")
call Bbr(1097888359,"purge")
call Bbr(1098015346,"reinforcedburrowsupgrade")
call Bbr(1098016112,"repair2")
call Bbr(1097169253,"sentryward")
call Bbr(1098084457,"spikedbarricades")
call Bbr(1098084460,"spiritlink")
call Bbr(1098212207,"unstableconcoction")
call Bbr(1096903522,"wardrums")
call Bbr(1096901235,"absorbmana")
call Bbr(1096904051,"antimagicshell")
call Bbr(1096903986,"antimagicshell2")
call Bbr(1094940272,"vampiricaura")
call Bbr(1097035314,"cannibalize")
call Bbr(1097032046,"cannibalize2")
call Bbr(1097036393,"cripple")
call Bbr(1399026281,"cripple2")
call Bbr(1097036403,"curse")
call Bbr(1097102957,"devourmagic")
call Bbr(1096904753,"diseasecloud3")
call Bbr(1097888883,"diseasecloud2")
call Bbr(1096904754,"diseasecloud")
call Bbr(1098018924,"essenceofblight")
call Bbr(1097233018,"freezingbreath")
call Bbr(1097232946,"frostattack2")
call Bbr(1097232993,"frostattack")
call Bbr(1097228651,"orbofannihilation")
call Bbr(1097887603,"possession")
call Bbr(1097888562,"possession2")
call Bbr(1098015081,"raisedead")
call Bbr(1098018914,"replenish")
call Bbr(1097687602,"replenishmana")
call Bbr(1098084449,"spiderattack")
call Bbr(1098018925,"spirittouch")
call Bbr(1098150517,"truesight")
call Bbr(1098213478,"unholyfrenzy")
call Bbr(1098343778,"web")
call Bbr(1096901741,"abolishmagic")
call Bbr(1097035634,"corrosivebreath")
call Bbr(1097038179,"cyclone")
call Bbr(1097102446,"detonate")
call Bbr(1097163124,"eattree")
call Bbr(1097164658,"elune'sgrace")
call Bbr(1097167980,"ethereal")
call Bbr(1097228645,"faeriefire")
call Bbr(1634099506,"faeriefire2")
call Bbr(1098085227,"hardenedskin")
call Bbr(1097623924,"lightningattack")
call Bbr(1097688684,"manaflare")
call Bbr(1097688940,"moonglaive")
call Bbr(1097688946,"moonglaive2")
call Bbr(1097888616,"phaseshift")
call Bbr(1098016106,"rejuvenation")
call Bbr(1098016110,"renew")
call Bbr(1097687668,"replenishmanaandlife")
call Bbr(1098019691,"resistantskin3")
call Bbr(1098018657,"roar")
call Bbr(1098015026,"roar2")
call Bbr(1097167726,"sentinel")
call Bbr(1097167730,"sentinel2")
call Bbr(1098082413,"shadowmeld")
call Bbr(1400072301,"shadowmeld(instant)")
call Bbr(1098084463,"slowpoison")
call Bbr(1097689453,"spellimmunity4")
call Bbr(1098280551,"spiritofvengeance")
call Bbr(1098146165,"taunt")
call Bbr(1097428336,"vorpalblades")
call Bbr(1097298529,"warclub")
call Bbr(1094935150,"banish")
call Bbr(1094937967,"monsoon")
call Bbr(1094940517,"summonseaelemental")
call Bbr(1094935661,"abolishmagic2")
call Bbr(1094934884,"animatedead")
call Bbr(1094934893,"antimagicshell3")
call Bbr(1094935144,"bash")
call Bbr(1095656040,"bash2")
call Bbr(1094935147,"blackarrow")
call Bbr(1094935162,"blizzard")
call Bbr(1094935148,"bloodlust2")
call Bbr(1094935138,"bloodlust3")
call Bbr(1094935139,"breathoffire")
call Bbr(1094935142,"breathoffrost")
call Bbr(1094935137,"brillianceaura")
call Bbr(1094935406,"cannibalize3")
call Bbr(1094935393,"carrionswarm")
call Bbr(1094935404,"chainlightning")
call Bbr(1094935400,"charm")
call Bbr(1094935397,"cleavingattack")
call Bbr(1094935415,"coldarrows")
call Bbr(1094934883,"commandaura")
call Bbr(1094935410,"cripple3")
call Bbr(1094935412,"criticalstrike")
call Bbr(1094935414,"crushingwave")
call Bbr(1094935347,"crushingwave2")
call Bbr(1094935346,"crushingwave3")
call Bbr(1094935411,"curse2")
call Bbr(1396925233,"cyclone2")
call Bbr(1094935417,"cyclone3")
call Bbr(1094935651,"deathcoil")
call Bbr(1094934902,"devotionaura")
call Bbr(1094935670,"devour2")
call Bbr(1094935653,"devourmagic2")
call Bbr(1096904756,"diseasecloud4")
call Bbr(1096904755,"diseasecloud5")
call Bbr(1097102189,"dispelmagic2")
call Bbr(1094935667,"divineshield")
call Bbr(1396924773,"enduranceaura")
call Bbr(1094935918,"ensnare2")
call Bbr(1097166450,"entanglingroots")
call Bbr(1097166455,"entanglingroots2")
call Bbr(1094940275,"envenomedweapons")
call Bbr(1094935926,"evasion")
call Bbr(1095657081,"factory")
call Bbr(1094936166,"faeriefire3")
call Bbr(1097228898,"feedback4")
call Bbr(1094939494,"feralspirit")
call Bbr(1094939449,"feralspirit2")
call Bbr(1097232228,"fingerofdeath")
call Bbr(1094936115,"fingerofpain")
call Bbr(1094936164,"fingerofpain2")
call Bbr(1094936162,"firebolt")
call Bbr(1098344034,"firebolt2")
call Bbr(1095657075,"flamestrike")
call Bbr(1094936179,"flamestrike2")
call Bbr(1094936178,"forceofnature")
call Bbr(1094936172,"forkedlightning")
call Bbr(1097235065,"frenzy")
call Bbr(1094936114,"frostarmor")
call Bbr(1094936161,"frostarmor2")
call Bbr(1094935394,"frostbolt")
call Bbr(1094936174,"frostnova")
call Bbr(1097754725,"heal1")
call Bbr(1097754673,"heal2")
call Bbr(1097754674,"heal3")
call Bbr(1094936695,"healingward3")
call Bbr(1094936694,"healingwave")
call Bbr(1094936696,"hex")
call Bbr(1097033844,"howlofterror")
call Bbr(1094939746,"hurlboulder")
call Bbr(1094936941,"immolation")
call Bbr(1094937968,"impale")
call Bbr(1094936934,"innerfire2")
call Bbr(1098081383,"kaboom!1")
call Bbr(1098081330,"kaboom!2")
call Bbr(1098081331,"kaboom!3")
call Bbr(1098081395,"kaboom!")
call Bbr(1094935666,"lifedrain")
call Bbr(1094938226,"liferegenerationaura")
call Bbr(1396930145,"lifesteal")
call Bbr(1094937715,"lightningshield2")
call Bbr(1097687652,"manaburn")
call Bbr(1097690722,"manaburn2")
call Bbr(1097687650,"manaburn3")
call Bbr(1095660133,"manaregenerationaura")
call Bbr(1094937958,"manashield")
call Bbr(1095655986,"maul")
call Bbr(1095658866,"mindrot")
call Bbr(1094938721,"parasite")
call Bbr(1094938745,"polymorph2")
call Bbr(1094938739,"possession3")
call Bbr(1094938742,"pulverize2")
call Bbr(1094938741,"purge3")
call Bbr(1095655787,"quillspray")
call Bbr(1094939239,"rainoffire")
call Bbr(1094939238,"rainoffire2")
call Bbr(1094939236,"raisedead2")
call Bbr(1097033829,"rayofdisruption")
call Bbr(1094939246,"reincarnation")
call Bbr(1094939186,"rejuvenation2")
call Bbr(1094939242,"rejuvenation3")
call Bbr(1094939243,"resistantskin")
call Bbr(1094939499,"resistantskin2")
call Bbr(1097753716,"reveal2")
call Bbr(1094939247,"roar3")
call Bbr(1094939185,"roar4")
call Bbr(1094939489,"searingarrows")
call Bbr(1097361764,"shadowmeld(akama)")
call Bbr(1094939507,"shadowstrike")
call Bbr(1094939444,"shockwave")
call Bbr(1094939443,"shockwave2")
call Bbr(1094939497,"silence")
call Bbr(1094939501,"siphonmana")
call Bbr(1094939747,"slam")
call Bbr(1094939698,"slam2")
call Bbr(1094939504,"sleep")
call Bbr(1094939500,"sleep2")
call Bbr(1094939511,"slow2")
call Bbr(1098084473,"spawnhydra")
call Bbr(1098084468,"spawnhydrahatchling")
call Bbr(1098084196,"spawnskeleton")
call Bbr(1098085232,"spawnspiderlings")
call Bbr(1098084452,"spawnspiders")
call Bbr(1094939758,"spawntentacle")
call Bbr(1094937906,"spellimmunity")
call Bbr(1094937907,"spellimmunity2")
call Bbr(1094937961,"spellimmunity3")
call Bbr(1095660648,"spikedshell")
call Bbr(1095660594,"spikedshell2")
call Bbr(1097757552,"spy")
call Bbr(1095660641,"taunt2")
call Bbr(1094934888,"thornsaura")
call Bbr(1094934900,"trueshotaura")
call Bbr(1094940001,"unholyaura")
call Bbr(1094940006,"unholyfrenzy2")
call Bbr(1400203366,"unholyfrenzy3")
call Bbr(1098347123,"warstomp")
call Bbr(1098347112,"warstomp2")
call Bbr(1098347111,"warstomp3")
call Bbr(1094940514,"web2")
call Bbr(1097753709,"abolishmagic3")
call Bbr(1094935602,"abolishmagic4")
call Bbr(1097035385,"cyclone4")
call Bbr(1095656814,"ensnare3")
call Bbr(1094936181,"frostarmor3")
call Bbr(1097757547,"hardenedskin2")
call Bbr(1095659617,"parasite2")
call Bbr(1096905580,"slowaura")
call Bbr(1097363052,"summoningritual")
call Bbr(1097690746,"aoedamageupondeath2")
call Bbr(1097690744,"aoedamageupondeath3")
call Bbr(1097098337,"aoedamageupondeath4")
call Bbr(1095659625,"permanentimmolation")
call Bbr(1097886055,"permanentimmolation2")
call Bbr(1097886070,"permanentinvisibility")
call Bbr(1097887078,"phoenixfire2")
call Bbr(1097887593,"poisonsting")
call Bbr(1097102439,"truesight3")
call Bbr(1095660658,"truesight4")
call Bbr(1098342766,"wander")
call Bbr(1093677894,"blink")
call Bbr(1095656044,"blink2")
call Bbr(1098282348,"invulnerable")
call Bbr(1098016100,"redemption")
call Bbr(1093679175,"manaregeneration")
call Bbr(1093677127,"superblink")
call Bbr(1093677900,"magicshackles")
call Bbr(1093677901,"raisezombie")
call Bbr(1093677906,"pacifism")
call Bbr(1093677907,"eggs")
call Bbr(1093677899,"deadlythrow")
call Bbr(1097359730,"harvester")
call Bbr(1093678170,"darkend")
call Bbr(1093678169,"divinehand")
call Bbr(1093678385,"mindblast")
call Bbr(1093678384,"soulstorm")
call Bbr(1093678387,"iceball")
call Bbr(1093678390,"magicmissile")
call Bbr(1093678391,"naturenova")
call Bbr(1093678392,"powerorb")
call Bbr(1093678393,"darkstar")
call Bbr(1093678401,"shockwavebarrage")
call Bbr(1093678402,"immortality")
call Bbr(1093678403,"regeneration")
call Bbr(1093681492,"infinitemana")
call Bbr(1093678404,"shadowbarrage")
call Bbr(1093678405,"starshards")
call Bbr(1093678407,"holyrequiem")
call Bbr(1093678412,"arcaneray")
call Bbr(1093678408,"darklightning")
call Bbr(1093678410,"slamwave")
call Bbr(1098016620,"returnrecourses")
call Bbr(1093678418,"holywave")
call Bbr(1093678417,"deathwave")
call Bbr(1093678409,"arcanewave")
call Bbr(1093678420,"arcanedestruction")
call Bbr(1093678421,"arcanewrath")
call Bbr(1093678422,"energyblast")
call Bbr(1093678425,"greatearthquake")
call Bbr(1093678409,"flamingdoom")
call Bbr(1093678422,"energyblast")
call Bbr(1093678413,"thunderspear")
call Bbr(1093678424,"burn")
call Bbr(1093678426,"rampage")
call Bbr(1093678643,"spikedaura")
call Bbr(1093678658,"grogblade")
call Bbr(1093679152,"darkteleport")
call Bbr(1093679431,"fortitude")
call Bbr(1093679433,"teleport")
call Bbr(1096901234,"auraofblight")
call Bbr(1098085473,"stasistrap")
call Bbr(1093678163,"raisedead3")
call Bbr(1093682226,"barkskin")
call Bbr(1093682255,"wrappingflame")
call Bbr(1093682004,"explode")
call Bbr(1093682507,"dimensionalshift")
call Bbr(1093682514,"undergroundtunnels")
call Bbr(1093684529,"darkblaze")
call Bbr(1093684046,"spell")
call Bbr(1093684047,"channel")
call Bbr(1093683009,"insuperableobstacle")
call Bbr(1093682775,"insuperableobstacle2")
call Bbr(1093683010,"insuperableobstacle3")
call Bbr(1093683271,"sinsuperableobstacle")
call Bbr(1093683270,"sinsuperableobstacle2")
call Bbr(1093683269,"sinsuperableobstacle3")
call Bbr(1093683266,"assassinate")
call Bbr(1093683267,"assassinate2")
call Bbr(1093683272,"assassinate3")
call Bbr(1093683273,"stealth")
call Bbr(1093683525,"magicdefense2")
call Bbr(1093683533,"cancelautomatictargetfinding")
call Bbr(1093678677,"corruption")
call Bbr(1093681463,"concentration")
call Bbr(1097625443,"locust")
call Bbr(1096905835,"attack")
call Bbr(1097690998,"move")
call Bbr(1096903794,"alarm")
call Bbr(1097230706,"onfire")
call Bbr(1097230696,"humanonfire")
call Bbr(1097230702,"nightelfonfire")
call Bbr(1097230703,"orconfire")
call Bbr(1097230709,"undeadonfire")
call Bbr(1097360754,"hero")
call Bbr(1098083425,"creepsleep")
call Bbr(1095917932,"rallypoint")
call Bbr(1097886068,"buyitems")
call Bbr(1098016118,"revive")
call Bbr(1096906593,"awaken")
call Bbr(1095197301,"build")
call Bbr(1095262837,"humanbuild")
call Bbr(1095721589,"orcbuild")
call Bbr(1095066229,"nightelfbuild")
call Bbr(1096114805,"undeadbuild")
call Bbr(1095656053,"neutralbuild")
call Bbr(1098347120,"waygate")
call Bbr(1093677113,"waygate")
call Bbr(1093683783,"translocation")
call Bbr(1093683248,"felburningoil")
call Bbr(1093683249,"felliquidfire")
return true
endfunction
function ins takes integer tns returns nothing
endfunction
function ons takes integer Sns,boolean cns returns nothing
call ins(Sns)
endfunction
function rgS takes string wgS returns integer
local integer ugS
set w3[MM]=wgS
set MM=MM+1
if PG==0 then
if AG<32768 then
set AG=AG+1
set ugS=AG
else
call Mau("Out of memory: Could not create BackIterator.","when calling error in LinkedListModule, line 93")
set ugS=0
endif
else
set PG=PG-1
set ugS=IG[PG]
endif
set MM=MM-1
return ugS
endfunction
function sns takes boolean wns,string uns returns integer
local integer rns
set w3[MM]=uns
set MM=MM+1
set rns=rgS("when calling alloc_BackIterator in LinkedListModule, line 97")
call ons(rns,wns)
set MM=MM-1
return rns
endfunction
function igS takes string sgS returns integer
local integer tgS
set w3[MM]=sgS
set MM=MM+1
if HG==0 then
if JG<32768 then
set JG=JG+1
set tgS=JG
else
call Mau("Out of memory: Could not create Iterator.","when calling error in LinkedListModule, line 71")
set tgS=0
endif
else
set HG=HG-1
set tgS=DG[HG]
endif
set MM=MM-1
return tgS
endfunction
function ens takes integer pns returns nothing
endfunction
function nns takes integer qns,boolean ans returns nothing
call ens(qns)
endfunction
function yns takes boolean Ons,string lns returns integer
local integer bns
set w3[MM]=lns
set MM=MM+1
set bns=igS("when calling alloc_Iterator in LinkedListModule, line 75")
call nns(bns,Ons)
set MM=MM-1
return bns
endfunction
function Ksu takes string Jsu returns boolean
set w3[MM]=Jsu
set MM=MM+1
call yns(false,"when calling new_Iterator in LinkedListModule, line 55")
call sns(false,"when calling new_BackIterator in LinkedListModule, line 65")
set MM=MM-1
return true
endfunction
function Xfo takes nothing returns boolean
set MM=0
return Ksu("Buffs, line 1")
endfunction
function Xfw takes nothing returns boolean
local integer Kfw=GetPlayerId(GetTriggerPlayer())
local integer Lfw=Dl[Ql[Kfw]]
call ForceRemovePlayer(u,ml[Kfw])
set Il=Il-1
set Dl[Lfw]=Dl[Il]
set Al[Lfw]=Al[Il]
if Il==1 then
set Wl[El[Kfw]]=vl
set El[Wl[Kfw]]=vl
else
set Wl[El[Kfw]]=Wl[Kfw]
set El[Wl[Kfw]]=El[Kfw]
endif
return false
endfunction
function Xmw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.00,G,Muw)
call RemoveLocation(G)
endfunction
function Xvw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function Lxw takes nothing returns boolean
if not(IsTriggerEnabled(Nt)==false)then
return false
endif
return true
endfunction
function Xxw takes nothing returns nothing
call GroupAddUnitSimple(GetTriggerUnit(),Hu)
set Ju[0]=GetSpellTargetLoc()
set Cu=GetConvertedPlayerId(GetOwningPlayer(GetTriggerUnit()))-1
call SaveLocationHandleBJ(Ju[0],0,GetHandleIdBJ(GetTriggerUnit()),Au)
call CreateNUnitsAtLoc(1,1747995718,GetOwningPlayer(GetTriggerUnit()),Ju[0],90.00)
call SetUnitScalePercent(GetLastCreatedUnit(),Gu,Gu,Gu)
call SetUnitVertexColorBJ(GetLastCreatedUnit(),100.,100.,100.,100.00)
if GetLocalPlayer()==Player(Cu)then
call SetUnitVertexColorBJ(GetLastCreatedUnit(),100.,100.,100.,0.00)
endif
call SaveUnitHandleBJ(GetLastCreatedUnit(),2,GetHandleIdBJ(GetTriggerUnit()),Au)
call CreateNUnitsAtLoc(1,1747995718,GetOwningPlayer(GetTriggerUnit()),Ju[0],90.00)
call SetUnitScalePercent(GetLastCreatedUnit(),gu,gu,gu)
call SetUnitVertexColorBJ(GetLastCreatedUnit(),100.,100.,100.,100.00)
if GetLocalPlayer()==Player(Cu)then
call SetUnitVertexColorBJ(GetLastCreatedUnit(),100.,100.,100.,0.00)
endif
call SaveUnitHandleBJ(GetLastCreatedUnit(),3,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveIntegerBJ(Du+5,4,GetHandleIdBJ(GetTriggerUnit()),Au)
call UnitAddAbilityBJ(1093678936,GetTriggerUnit())
call SetPlayerAbilityAvailableBJ(false,1093678935,GetOwningPlayer(GetTriggerUnit()))
if Lxw()then
call EnableTrigger(Nt)
endif
endfunction
function Y7w takes nothing returns boolean
return GetSpellAbilityId()==1093684022 or GetSpellAbilityId()==1093684023
endfunction
function Y8w takes nothing returns boolean
return GetSpellAbilityId()==1095723105
endfunction
function YEu takes nothing returns boolean
set Ra=bj_MAX_PLAYER_SLOTS
set Ta=223
set Fa="\")
\tcall SetPlayerName(Player("
set ka="), \""
set ja="\")
//"
set xa="\" )
endfunction
function AAA takes nothing returns nothing 
//"
set va=0
set ga=0
set ha=0
return true
endfunction
function YKw takes nothing returns nothing
set G=GetSpellTargetLoc()
call EnumDestructablesInCircleBJ(256.,G,Jiw)
endfunction
function YNw takes nothing returns nothing
local unit nNw=GetSpellTargetUnit()
local real dNw
local effect fNw
local effect RNw
local effect TNw
if not(IsUnitInGroup(GetSpellTargetUnit(),hr)==false)then
call AddSpecialEffectTargetUnitBJ("origin",nNw,"Abilities\\Spells\\Items\\SpellShieldAmulet\\SpellShieldCaster.mdl")
set nNw=null
set fNw=null
set RNw=null
set TNw=null
return
endif
call GroupAddUnitSimple(nNw,hr)
call AddSpecialEffectTargetUnitBJ("overhead",nNw,"Abilities\\Spells\\Other\\SoulBurn\\SoulBurnbuff.mdl")
set fNw=GetLastCreatedEffectBJ()
call AddSpecialEffectTargetUnitBJ("left hand",nNw,"Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl")
set RNw=GetLastCreatedEffectBJ()
call AddSpecialEffectTargetUnitBJ("right hand",nNw,"Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl")
set TNw=GetLastCreatedEffectBJ()
set dNw=GetUnitStateSwap(UNIT_STATE_LIFE,nNw)
if GetUnitAbilityLevelSwapped(1093681986,GetSpellAbilityUnit())==3 then
call UnitAddAbilityBJ(1093681991,nNw)
call SetUnitLifeBJ(nNw,dNw+750.)
call UnitAddAbilityBJ(1093681989,nNw)
call UnitAddAbilityBJ(1093681995,nNw)
call PolledWait(2.00)
call DestroyEffectBJ(fNw)
call PolledWait(13.00)
elseif GetUnitAbilityLevelSwapped(1093681986,GetSpellAbilityUnit())==2 then
call UnitAddAbilityBJ(1093681992,nNw)
call SetUnitLifeBJ(nNw,dNw+500.)
call UnitAddAbilityBJ(1093681988,nNw)
call UnitAddAbilityBJ(1093681994,nNw)
call PolledWait(2.00)
call DestroyEffectBJ(fNw)
call PolledWait(8.00)
elseif GetUnitAbilityLevelSwapped(1093681986,GetSpellAbilityUnit())==1 then
call UnitAddAbilityBJ(1093681990,nNw)
call SetUnitLifeBJ(nNw,dNw+250.)
call UnitAddAbilityBJ(1093681987,nNw)
call UnitAddAbilityBJ(1093681993,nNw)
call PolledWait(2.00)
call DestroyEffectBJ(fNw)
call PolledWait(3.00)
endif
call DestroyEffectBJ(RNw)
call DestroyEffectBJ(TNw)
call GroupRemoveUnitSimple(nNw,hr)
call AddSpecialEffectTargetUnitBJ("origin",nNw,"Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl")
call AddSpecialEffectTargetUnitBJ("origin",nNw,"Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl")
call ExplodeUnitBJ(nNw)
set nNw=null
set dNw=0.
set fNw=null
set RNw=null
set TNw=null
set nNw=null
set fNw=null
set RNw=null
set TNw=null
endfunction
function YPw takes nothing returns nothing
local string TPw=GetEventPlayerChatString()
if SubString(TPw,7,StringLength(TPw))=="on" then
call SetItemDropOnDeath(UnitItemInSlot(GetEnumUnit(),S2I(SubString(TPw,5,6))-1),true)
call SetItemUserData(UnitItemInSlot(GetEnumUnit(),S2I(SubString(TPw,5,6))-1),1)
else
call SetItemDropOnDeath(UnitItemInSlot(GetEnumUnit(),S2I(SubString(TPw,5,6))-1),false)
call SetItemUserData(UnitItemInSlot(GetEnumUnit(),S2I(SubString(TPw,5,6))-1),0)
endif
set TPw=null
endfunction
function FDS takes string gDS returns integer
local integer hDS
set w3[MM]=gDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hDS=kj
set jj[hDS]=1010
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins.","when calling error in ScmdCameraSetupBuiltins, line 27")
set hDS=0
endif
else
set Fj=Fj-1
set hDS=hj[Fj]
set jj[hDS]=1010
endif
set MM=MM-1
return hDS
endfunction
function GDS takes string TDS returns integer
local integer YDS
set w3[MM]=TDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set YDS=kj
set jj[YDS]=1009
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins.","when calling error in ScmdCameraSetupBuiltins, line 22")
set YDS=0
endif
else
set Fj=Fj-1
set YDS=hj[Fj]
set jj[YDS]=1009
endif
set MM=MM-1
return YDS
endfunction
function RDS takes string dDS returns integer
local integer fDS
set w3[MM]=dDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fDS=kj
set jj[fDS]=1008
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins.","when calling error in ScmdCameraSetupBuiltins, line 17")
set fDS=0
endif
else
set Fj=Fj-1
set fDS=hj[Fj]
set jj[fDS]=1008
endif
set MM=MM-1
return fDS
endfunction
function bDS takes string ODS returns integer
local integer lDS
set w3[MM]=ODS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lDS=kj
set jj[lDS]=842
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdCameraSetupBuiltins.","when calling error in ScmdCameraSetupBuiltins, line 6")
set lDS=0
endif
else
set Fj=Fj-1
set lDS=hj[Fj]
set jj[lDS]=842
endif
set MM=MM-1
return lDS
endfunction
function d4u takes nothing returns integer
return Dn
endfunction
function eDS takes string yDS returns integer
local integer pDS
set w3[MM]=yDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set pDS=kj
set jj[pDS]=1006
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins.","when calling error in ScmdCameraSetupBuiltins, line 9")
set pDS=0
endif
else
set Fj=Fj-1
set pDS=hj[Fj]
set jj[pDS]=1006
endif
set MM=MM-1
return pDS
endfunction
function nDS takes string qDS returns integer
local integer aDS
set w3[MM]=qDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set aDS=kj
set jj[aDS]=1007
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins.","when calling error in ScmdCameraSetupBuiltins, line 13")
set aDS=0
endif
else
set Fj=Fj-1
set aDS=hj[Fj]
set jj[aDS]=1007
endif
set MM=MM-1
return aDS
endfunction
function xDS takes string kDS returns integer
local integer jDS
set w3[MM]=kDS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jDS=kj
set jj[jDS]=1011
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins.","when calling error in ScmdCameraSetupBuiltins, line 32")
set jDS=0
endif
else
set Fj=Fj-1
set jDS=hj[Fj]
set jj[jDS]=1011
endif
set MM=MM-1
return jDS
endfunction
function uNu takes string PBu returns boolean
local integer ABu
local integer DBu
local integer HBu
local integer JBu
local integer KBu
local integer LBu
local integer XBu
local integer CBu
local integer VBu
local integer BBu
local integer NBu
local integer MBu
local integer wNu
set w3[MM]=PBu
set MM=MM+1
set ABu=bDS("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdCameraSetupBuiltins, line 6")
call jBu(WHt(eDt(ABu,"when calling new_BuiltinData in ScmdCameraSetupBuiltins, line 6"),"when calling new_BuiltinFunction in ScmdCameraSetupBuiltins, line 6"),"camerasetup","when calling registerProtectedBuiltin in ScmdCameraSetupBuiltins, line 6")
set DBu=eDS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdCameraSetupBuiltins, line 9")
set HBu=eDt(DBu,"when calling new_BuiltinData in ScmdCameraSetupBuiltins, line 9")
call nno(HBu,d4u(),m4u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdCameraSetupBuiltins, line 12")
call jBu(WHt(HBu,"when calling new_BuiltinFunction in ScmdCameraSetupBuiltins, line 9"),"camerasetupsetfield","when calling registerProtectedBuiltin in ScmdCameraSetupBuiltins, line 9")
set JBu=nDS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdCameraSetupBuiltins, line 13")
set KBu=eDt(JBu,"when calling new_BuiltinData in ScmdCameraSetupBuiltins, line 13")
call nno(KBu,d4u(),w2u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdCameraSetupBuiltins, line 16")
call jBu(WHt(KBu,"when calling new_BuiltinFunction in ScmdCameraSetupBuiltins, line 13"),"camerasetupsetdestposition","when calling registerProtectedBuiltin in ScmdCameraSetupBuiltins, line 13")
set LBu=RDS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdCameraSetupBuiltins, line 17")
set XBu=eDt(LBu,"when calling new_BuiltinData in ScmdCameraSetupBuiltins, line 17")
call Pao(XBu,d4u(),y4u(),y4u(),"when calling setArgumentsTypes in ScmdCameraSetupBuiltins, line 21")
call jBu(WHt(XBu,"when calling new_BuiltinFunction in ScmdCameraSetupBuiltins, line 17"),"camerasetupapply","when calling registerProtectedBuiltin in ScmdCameraSetupBuiltins, line 17")
set CBu=GDS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdCameraSetupBuiltins, line 22")
set VBu=eDt(CBu,"when calling new_BuiltinData in ScmdCameraSetupBuiltins, line 22")
call dao(VBu,d4u(),w2u(),"when calling setArgumentsTypes in ScmdCameraSetupBuiltins, line 26")
call jBu(WHt(VBu,"when calling new_BuiltinFunction in ScmdCameraSetupBuiltins, line 22"),"camerasetupapplywithz","when calling registerProtectedBuiltin in ScmdCameraSetupBuiltins, line 22")
set BBu=FDS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdCameraSetupBuiltins, line 27")
set NBu=eDt(BBu,"when calling new_BuiltinData in ScmdCameraSetupBuiltins, line 27")
call Pao(NBu,d4u(),y4u(),w2u(),"when calling setArgumentsTypes in ScmdCameraSetupBuiltins, line 31")
call jBu(WHt(NBu,"when calling new_BuiltinFunction in ScmdCameraSetupBuiltins, line 27"),"camerasetupapplyforceduration","when calling registerProtectedBuiltin in ScmdCameraSetupBuiltins, line 27")
set MBu=xDS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdCameraSetupBuiltins in ScmdCameraSetupBuiltins, line 32")
set wNu=eDt(MBu,"when calling new_BuiltinData in ScmdCameraSetupBuiltins, line 32")
call Pao(wNu,d4u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdCameraSetupBuiltins, line 36")
call jBu(WHt(wNu,"when calling new_BuiltinFunction in ScmdCameraSetupBuiltins, line 32"),"camerasetupapplyforcedurationwithz","when calling registerProtectedBuiltin in ScmdCameraSetupBuiltins, line 32")
set MM=MM-1
return true
endfunction
function YRo takes nothing returns boolean
set MM=0
return uNu("ScmdCameraSetupBuiltins, line 1")
endfunction
function YRw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())and(not(GetUnitTypeId(GetFilterUnit())==1747988528))
endfunction
function uSu takes string wSu returns nothing
set w3[MM]=wSu
set MM=MM+1
call VSu("when calling generalEventCallback in ClosureEvents, line 293")
set MM=MM-1
endfunction
function YTo takes nothing returns nothing
set MM=0
call uSu("ClosureEvents, line 293")
endfunction
function YUw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAll(GetTriggerPlayer())
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],lsw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function YXw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function Rfw takes integer ffw returns nothing
if ffw==0 then
return
elseif bb[ffw]!=-1 then
return
endif
set sy=ffw
call TriggerEvaluate(Lb[Kb[ffw]])
set bb[ffw]=Ob
set Ob=ffw
endfunction
function qfw takes integer efw returns nothing
set sy=efw
call TriggerEvaluate(Jb[Kb[efw]])
endfunction
function Y_u takes nothing returns boolean
local timer R_u=GetExpiredTimer()
local integer T_u=LoadInteger(i,y,GetHandleId(R_u))
call ATw(R_u)
call qfw(T_u)
call Rfw(T_u)
set R_u=null
return true
endfunction
function Yjw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function Z0u takes nothing returns boolean
return GetSpellAbilityId()==1095721843
endfunction
function Z2w takes nothing returns boolean
if GetSpellAbilityId()==1093684049 then
return true
endif
return false
endfunction
function Z6w takes nothing returns boolean
return GetSpellAbilityId()==1093679410
endfunction
function Z8w takes nothing returns nothing
local timer W8w=GetExpiredTimer()
local unit E8w=LoadUnitHandle(nr,GetHandleId(W8w),StringHash("u"))
call FlushChildHashtable(nr,GetHandleId(W8w))
call DestroyTimer(W8w)
set W8w=null
call SaveTimerHandle(nr,GetHandleId(E8w),StringHash("dsT"),null)
call GroupRemoveUnit(Tt[2],E8w)
call GroupRemoveUnit(Tt[1],E8w)
call GroupRemoveUnit(Tt[0],E8w)
set E8w=null
set W8w=null
set E8w=null
endfunction
function ZCw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function EEw takes nothing returns boolean
if GetSpellAbilityId()==1414360369 then
return true
endif
if GetSpellAbilityId()==1414360370 then
return true
endif
if GetSpellAbilityId()==1414360371 then
return true
endif
if GetSpellAbilityId()==1414360372 then
return true
endif
if GetSpellAbilityId()==1414360373 then
return true
endif
if GetSpellAbilityId()==1414360374 then
return true
endif
if GetSpellAbilityId()==1414360375 then
return true
endif
return false
endfunction
function ZEw takes nothing returns boolean
if not EEw()then
return false
endif
return true
endfunction
function EIw takes nothing returns boolean
if not(GetEventPlayerChatString()=="unequip "+Ms[GetForLoopIndexA()])then
return false
endif
return true
endfunction
function vIw takes nothing returns boolean
if not(GetEventPlayerChatString()=="equip "+Ms[GetForLoopIndexA()])then
return false
endif
return true
endfunction
function ZIw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAll(GetTriggerPlayer())
set bj_forLoopAIndex=0
set bj_forLoopAIndexEnd=wt
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if vIw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Isw)
endif
if EIw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Psw)
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function ELw takes nothing returns boolean
if not(gs[1]==0)then
return false
endif
return true
endfunction
function ZLw takes nothing returns nothing
if ELw()then
call EnableTrigger(CS)
endif
set gs[1]=gs[1]+1
set gs[2]=gs[2]+1
set xs[1]=GetUnitLoc(As)
set Rs[gs[2]]=DistanceBetweenPoints(xs[1],Ps)
set Fs[gs[2]]=0.00
set js[gs[2]]=Is
set ms[gs[2]]=As
set ds[gs[2]]=AngleBetweenPoints(xs[1],Ps)
set Ts[gs[2]]=Us
set fs[gs[2]]=Qs
set vs[gs[2]]=Es
set Gs[gs[2]]=Zs*Rs[gs[2]]
set Hs[gs[2]]=Ds
set Ks[gs[2]]=Js
call SetUnitPathing(As,false)
call SetUnitTimeScalePercent(As,Ws*100.00)
call SetUnitAnimation(As,Qs)
call GroupAddUnitSimple(As,Ys)
call UnitAddAbilityBJ(1098015094,xr)
call UnitRemoveAbilityBJ(1098015094,xr)
call RemoveLocation(xs[1])
call RemoveLocation(Ps)
endfunction
function ZPw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,7)=="expgain")then
return false
endif
return true
endfunction
function Hsc takes string Asc returns integer
local integer Dsc
set w3[MM]=Asc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Dsc=kj
set jj[Dsc]=1096
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 48")
set Dsc=0
endif
else
set Fj=Fj-1
set Dsc=hj[Fj]
set jj[Dsc]=1096
endif
set MM=MM-1
return Dsc
endfunction
function Lsc takes string Jsc returns integer
local integer Ksc
set w3[MM]=Jsc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Ksc=kj
set jj[Ksc]=853
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 51")
set Ksc=0
endif
else
set Fj=Fj-1
set Ksc=hj[Fj]
set jj[Ksc]=853
endif
set MM=MM-1
return Ksc
endfunction
function Msc takes string Bsc returns integer
local integer Nsc
set w3[MM]=Bsc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Nsc=kj
set jj[Nsc]=1160
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 58")
set Nsc=0
endif
else
set Fj=Fj-1
set Nsc=hj[Fj]
set jj[Nsc]=1160
endif
set MM=MM-1
return Nsc
endfunction
function Psc takes string Usc returns integer
local integer Isc
set w3[MM]=Usc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Isc=kj
set jj[Isc]=1095
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 45")
set Isc=0
endif
else
set Fj=Fj-1
set Isc=hj[Fj]
set jj[Isc]=1095
endif
set MM=MM-1
return Isc
endfunction
function Rtc takes string dtc returns integer
local integer ftc
set w3[MM]=dtc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set ftc=kj
set jj[ftc]=961
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 82")
set ftc=0
endif
else
set Fj=Fj-1
set ftc=hj[Fj]
set jj[ftc]=961
endif
set MM=MM-1
return ftc
endfunction
function Vsc takes string Xsc returns integer
local integer Csc
set w3[MM]=Xsc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Csc=kj
set jj[Csc]=957
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 54")
set Csc=0
endif
else
set Fj=Fj-1
set Csc=hj[Fj]
set jj[Csc]=957
endif
set MM=MM-1
return Csc
endfunction
function btc takes string Otc returns integer
local integer ltc
set w3[MM]=Otc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set ltc=kj
set jj[ltc]=1162
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 72")
set ltc=0
endif
else
set Fj=Fj-1
set ltc=hj[Fj]
set jj[ltc]=1162
endif
set MM=MM-1
return ltc
endfunction
function etc takes string ytc returns integer
local integer ptc
set w3[MM]=ytc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set ptc=kj
set jj[ptc]=960
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 75")
set ptc=0
endif
else
set Fj=Fj-1
set ptc=hj[Fj]
set jj[ptc]=960
endif
set MM=MM-1
return ptc
endfunction
function itc takes string stc returns integer
local integer ttc
set w3[MM]=stc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set ttc=kj
set jj[ttc]=1161
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 65")
set ttc=0
endif
else
set Fj=Fj-1
set ttc=hj[Fj]
set jj[ttc]=1161
endif
set MM=MM-1
return ttc
endfunction
function ntc takes string qtc returns integer
local integer atc
set w3[MM]=qtc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set atc=kj
set jj[atc]=1163
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 79")
set atc=0
endif
else
set Fj=Fj-1
set atc=hj[Fj]
set jj[atc]=1163
endif
set MM=MM-1
return atc
endfunction
function otc takes string Stc returns integer
local integer ctc
set w3[MM]=Stc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set ctc=kj
set jj[ctc]=959
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 68")
set ctc=0
endif
else
set Fj=Fj-1
set ctc=hj[Fj]
set jj[ctc]=959
endif
set MM=MM-1
return ctc
endfunction
function rtc takes string wtc returns integer
local integer utc
set w3[MM]=wtc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set utc=kj
set jj[utc]=958
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 61")
set utc=0
endif
else
set Fj=Fj-1
set utc=hj[Fj]
set jj[utc]=958
endif
set MM=MM-1
return utc
endfunction
function Nyr takes string tyr returns boolean
local integer iyr
local integer Syr
local integer cyr
local integer oyr
local integer Oyr
local integer lyr
local integer byr
local integer yyr
local integer pyr
local integer eyr
local integer qyr
local integer ayr
local integer nyr
local integer dyr
local integer fyr
local integer Ryr
local integer Tyr
local integer Yyr
local integer Gyr
local integer gyr
local integer hyr
local integer Fyr
local integer kyr
local integer jyr
local integer xyr
local integer vyr
local integer myr
local integer Qyr
local integer Wyr
local integer Eyr
local integer Zyr
local integer Uyr
local integer Iyr
local integer Pyr
local integer Ayr
local integer Dyr
local integer Hyr
local integer Jyr
local integer Kyr
local integer Lyr
local integer Xyr
local integer Cyr
local integer Vyr
local integer Byr
set w3[MM]=tyr
set MM=MM+1
set iyr=Psc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 45")
set Syr=eDt(iyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 45")
call Fao(Syr,o2u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 48")
set cyr=Syr
call k4o(cyr,"when calling setRequiringEnumUnit in SotFRP_AbilitySystem, line 48")
set byr=WHt(cyr,"when calling new_BuiltinFunction in SotFRP_AbilitySystem, line 45")
set Jyr=byr
set oyr=Hsc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 48")
set Oyr=eDt(oyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 48")
call dao(Oyr,o2u(),m4u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 51")
set lyr=Oyr
call k4o(lyr,"when calling setRequiringEnumUnit in SotFRP_AbilitySystem, line 51")
call C4o(Jyr,lyr,"when calling addOverload in SotFRP_AbilitySystem, line 48")
set eyr=byr
set Kyr=eyr
set yyr=Lsc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 51")
set pyr=eDt(yyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 51")
call dao(pyr,G5u(),o2u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 54")
call C4o(Kyr,pyr,"when calling addOverload in SotFRP_AbilitySystem, line 51")
set nyr=eyr
set Lyr=nyr
set qyr=Vsc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 54")
set ayr=eDt(qyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 54")
call Pao(ayr,G5u(),o2u(),m4u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 57")
call C4o(Lyr,ayr,"when calling addOverload in SotFRP_AbilitySystem, line 54")
call IBu(nyr,vno(Rvr("addability","when calling stringToIndex in SotFRP_AbilitySystem, line 57"),Rvr("'","when calling stringToIndex in SotFRP_AbilitySystem, line 57"),"when calling asList in SotFRP_AbilitySystem, line 57"),"when calling registerProtectedBuiltin in SotFRP_AbilitySystem, line 45")
set dyr=Msc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 58")
set fyr=eDt(dyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 58")
call Fao(fyr,o2u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 61")
set Ryr=fyr
call k4o(Ryr,"when calling setRequiringEnumUnit in SotFRP_AbilitySystem, line 61")
set Gyr=WHt(Ryr,"when calling new_BuiltinFunction in SotFRP_AbilitySystem, line 58")
set Xyr=Gyr
set Tyr=rtc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 61")
set Yyr=eDt(Tyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 61")
call dao(Yyr,G5u(),o2u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 64")
call C4o(Xyr,Yyr,"when calling addOverload in SotFRP_AbilitySystem, line 61")
call IBu(Gyr,vno(Rvr("removeability","when calling stringToIndex in SotFRP_AbilitySystem, line 64"),Rvr("@","when calling stringToIndex in SotFRP_AbilitySystem, line 64"),"when calling asList in SotFRP_AbilitySystem, line 64"),"when calling registerProtectedBuiltin in SotFRP_AbilitySystem, line 58")
set gyr=itc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 65")
set hyr=eDt(gyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 65")
call dao(hyr,o2u(),m4u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 68")
set Fyr=hyr
call k4o(Fyr,"when calling setRequiringEnumUnit in SotFRP_AbilitySystem, line 68")
set xyr=WHt(Fyr,"when calling new_BuiltinFunction in SotFRP_AbilitySystem, line 65")
set Cyr=xyr
set kyr=otc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 68")
set jyr=eDt(kyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 68")
call Pao(jyr,G5u(),o2u(),m4u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 71")
call C4o(Cyr,jyr,"when calling addOverload in SotFRP_AbilitySystem, line 68")
call jBu(xyr,"setabilitylevel","when calling registerProtectedBuiltin in SotFRP_AbilitySystem, line 65")
set vyr=btc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 72")
set myr=eDt(vyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 72")
call Pao(myr,o2u(),m4u(),m4u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 75")
set Qyr=myr
call k4o(Qyr,"when calling setRequiringEnumUnit in SotFRP_AbilitySystem, line 75")
set Zyr=WHt(Qyr,"when calling new_BuiltinFunction in SotFRP_AbilitySystem, line 72")
set Vyr=Zyr
set Wyr=etc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 75")
set Eyr=eDt(Wyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 75")
call nno(Eyr,G5u(),o2u(),m4u(),m4u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 78")
call C4o(Vyr,Eyr,"when calling addOverload in SotFRP_AbilitySystem, line 75")
call jBu(Zyr,"setabilitymanacost","when calling registerProtectedBuiltin in SotFRP_AbilitySystem, line 72")
set Uyr=ntc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 79")
set Iyr=eDt(Uyr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 79")
call Pao(Iyr,o2u(),m4u(),w2u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 82")
set Pyr=Iyr
call k4o(Pyr,"when calling setRequiringEnumUnit in SotFRP_AbilitySystem, line 82")
set Hyr=WHt(Pyr,"when calling new_BuiltinFunction in SotFRP_AbilitySystem, line 79")
set Byr=Hyr
set Ayr=Rtc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotFRP_AbilitySystem in SotFRP_AbilitySystem, line 82")
set Dyr=eDt(Ayr,"when calling new_BuiltinData in SotFRP_AbilitySystem, line 82")
call nno(Dyr,G5u(),o2u(),m4u(),w2u(),"when calling setArgumentsTypes in SotFRP_AbilitySystem, line 85")
call C4o(Byr,Dyr,"when calling addOverload in SotFRP_AbilitySystem, line 82")
call jBu(Hyr,"setabilitycooldown","when calling registerProtectedBuiltin in SotFRP_AbilitySystem, line 79")
set MM=MM-1
return true
endfunction
function ZRo takes nothing returns boolean
set MM=0
return Nyr("SotFRP_AbilitySystem, line 1")
endfunction
function lgr takes string ogr returns boolean
local boolean Ogr
set w3[MM]=ogr
set MM=MM+1
set Ogr=not d7u(S7s(GetFilterUnit()),"when calling isUnitTypeProtected in SotfrpGuiRegions, line 139")
set MM=MM-1
return Ogr
endfunction
function ZTo takes nothing returns boolean
set MM=0
return lgr("SotfrpGuiRegions, line 139")
endfunction
function ZVw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call UnitAddAbility(GetEnumUnit(),1093683538)
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1093683538)
if IsUnitInGroup(GetEnumUnit(),as)==false then
call GroupAddUnit(as,GetEnumUnit())
call TriggerRegisterUnitStateEvent(Wc,GetEnumUnit(),UNIT_STATE_MANA,LESS_THAN_OR_EQUAL,0.)
endif
endif
endfunction
function EXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="~worker")then
return false
endif
return true
endfunction
function mXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@worker")then
return false
endif
return true
endfunction
function ZXw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(ASw))
if EXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],DSw)
elseif mXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],HSw)
else
call DoNothing()
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function ZZw takes nothing returns nothing
set Ut=CreateLeaderboard()
call LeaderboardSetLabel(Ut,"________ ________...")
call PlayerSetLeaderboard(GetLocalPlayer(),Ut)
call LeaderboardDisplay(Ut,false)
endfunction
function nhw takes unit ahw returns nothing
call SetWidgetLife(ahw,GetWidgetLife(ahw)+50.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl",ahw,"origin"))
endfunction
function Z_u takes nothing returns boolean
call nhw(ry)
return true
endfunction
function Zvw takes nothing returns nothing
call CameraSetEQNoiseForPlayer(GetEnumPlayer(),4.00)
endfunction
function Exw takes nothing returns boolean
if not(Du==LoadIntegerBJ(0,GetHandleIdBJ(GetEnumUnit()),Au))then
return false
endif
return true
endfunction
function Zxw takes nothing returns nothing
if Exw()then
call FlushChildHashtableBJ(GetHandleIdBJ(GetEnumUnit()),Au)
call GroupRemoveUnitSimple(GetEnumUnit(),Ku)
call RemoveUnit(GetEnumUnit())
endif
endfunction
function a6w takes nothing returns boolean
return BlzIsUnitInvulnerable(GetFilterUnit())==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_UNDEAD)and IsUnitType(GetFilterUnit(),UNIT_TYPE_MECHANICAL)==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_MAGIC_IMMUNE)==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_STRUCTURE)==false
endfunction
function a7w takes nothing returns boolean
return IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()),GetOwningPlayer(GetEnumUnit()))==false and GetOwningPlayer(GetFilterUnit())!=Player(bj_PLAYER_NEUTRAL_VICTIM)and GetUnitTypeId(GetFilterUnit())!=1747988528
endfunction
function TRw takes effect dRw,real fRw returns nothing
local timer RRw=CreateTimer()
call SaveEffectHandle(c,GetHandleId(RRw),O,dRw)
call TimerStart(RRw,fRw,false,Uww)
set RRw=null
set RRw=null
endfunction
function a8w takes nothing returns nothing
local integer p8w=GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682995)
local real e8w=GetSpellTargetX()
local real q8w=GetSpellTargetY()
call TRw(AddSpecialEffect("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",e8w,q8w),p8w)
call TRw(AddSpecialEffect("Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeTarget.mdl",e8w,q8w),p8w)
endfunction
function pAw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(SubStringBJ(GetEventPlayerChatString(),1,8)=="setrules")then
return false
endif
return true
endfunction
function qAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="rules")then
return false
endif
return true
endfunction
function aAw takes nothing returns nothing
if pAw()then
set Cw=SubStringBJ(GetEventPlayerChatString(),10,StringLength(GetEventPlayerChatString()))
endif
if qAw()then
call DisplayTextToForce(GetPlayersMatching(Condition(Ttw)),"|CFF808040"+Cw+"|r")
endif
endfunction
function MDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,4)=="tree")then
return false
endif
return true
endfunction
function bHw takes nothing returns boolean
if not(GetEventPlayerChatString()=="mass remove tree")then
return false
endif
return true
endfunction
function cHw takes nothing returns boolean
if not(GetEventPlayerChatString()=="remove tree")then
return false
endif
return true
endfunction
function qHw takes nothing returns boolean
if not(GetEventPlayerChatString()=="reset tree")then
return false
endif
return true
endfunction
function sHw takes nothing returns boolean
if not(GetEventPlayerChatString()=="kill tree")then
return false
endif
return true
endfunction
function aHw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
if MDw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Ltw)
endif
if sHw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Xtw)
endif
if cHw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Ctw)
endif
if bHw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Vtw)
endif
if qHw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Btw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function aIw takes nothing returns nothing
local string pIw=GetEventPlayerChatString()
local player eIw=GetTriggerPlayer()
local group qIw
call GetPlayerId(eIw)
call StringLength(pIw)
if pIw=="'attack" then
set qIw=CreateGroup()
call GroupEnumUnitsOfPlayer(qIw,eIw,Condition(ksw))
call ForGroup(qIw,jsw)
call DestroyGroup(qIw)
set qIw=null
set eIw=null
set eIw=null
set qIw=null
return
endif
if pIw=="'aiswitcher" then
set qIw=CreateGroup()
call GroupEnumUnitsOfPlayer(qIw,eIw,Condition(ksw))
call ForGroup(qIw,xsw)
call DestroyGroup(qIw)
set qIw=null
set eIw=null
set eIw=null
set qIw=null
return
endif
set qIw=null
set eIw=null
set eIw=null
set qIw=null
endfunction
function aKw takes nothing returns nothing
call SetDestructableInvulnerableBJ(GetEnumDestructable(),true)
call ModifyGateBJ(bj_GATEOPERATION_OPEN,GetEnumDestructable())
call KillDestructable(GetEnumDestructable())
call RemoveDestructable(GetEnumDestructable())
endfunction
function aMw takes nothing returns nothing
call UnitResetCooldown(GetEnumUnit())
endfunction
function aNw takes nothing returns boolean
return GetSpellAbilityId()==1093681986
endfunction
function aPw takes nothing returns nothing
local group qPw=CreateGroup()
call GroupEnumUnitsOfPlayer(qPw,GetTriggerPlayer(),Condition(Msw))
call ForGroup(qPw,wtw)
call DestroyGroup(qPw)
set qPw=null
set qPw=null
endfunction
function HSc takes string ASc returns integer
local integer DSc
set w3[MM]=ASc
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set DSc=pY
set eY[DSc]=1612
else
call Mau("Out of memory: Could not create StringLevelClosure_presetBaseOrderID_presetTargetTypes_presetOption_presetCastRange_SotfrpGuiPresets.","when calling error in SotfrpGuiPresets, line 25")
set DSc=0
endif
else
set yY=yY-1
set DSc=bY[yY]
set eY[DSc]=1612
endif
set MM=MM-1
return DSc
endfunction
function Iis takes integer Eis,integer Zis,string Uis returns nothing
set w3[MM]=Uis
set MM=MM+1
call axu(sQ[Eis],"Ncl6",tQ[Eis],6,Zis,"when calling setLevelsDataString in AbilityObjEditing, line 9848")
call xec(Eis,"BaseOrderID",Zis,"when calling addTooltipProperty in AbilityObjEditing, line 9849")
set MM=MM-1
endfunction
function Jac takes integer Aac,integer Dac,string Hac returns nothing
set w3[MM]=Hac
set MM=MM+1
if SY[Aac]==0 then
if Aac==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionIllidanChannel.presetBaseOrderID","when calling error in AbilityObjEditing, line 9847")
else
call Mau("Called AbilityDefinitionIllidanChannel.presetBaseOrderID on invalid object.","when calling error in AbilityObjEditing, line 9847")
endif
endif
call Iis(Aac,Dac,"when calling presetBaseOrderID in AbilityObjEditing, line 9847")
set MM=MM-1
endfunction
function LSc takes string JSc returns integer
local integer KSc
set w3[MM]=JSc
set MM=MM+1
if vG==0 then
if mG<32768 then
set mG=mG+1
set KSc=mG
set QG[KSc]=1511
else
call Mau("Out of memory: Could not create RealLevelClosure_presetCastRange_SotfrpGuiPresets.","when calling error in SotfrpGuiPresets, line 28")
set KSc=0
endif
else
set vG=vG-1
set KSc=xG[vG]
set QG[KSc]=1511
endif
set MM=MM-1
return KSc
endfunction
function QgS takes string vgS returns integer
local integer mgS
set w3[MM]=vgS
set MM=MM+1
if oY==0 then
if OY<32768 then
set OY=OY+1
set mgS=OY
set lY[mgS]=1263
else
call Mau("Out of memory: Could not create IntLevelClosure_presetOptions_ChannelAbilityPreset_ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 99")
set mgS=0
endif
else
set oY=oY-1
set mgS=cY[oY]
set lY[mgS]=1263
endif
set MM=MM-1
return mgS
endfunction
function rSs takes integer Mis,integer wSs,string uSs returns nothing
set w3[MM]=uSs
set MM=MM+1
call hxu(sQ[Mis],"Ncl3",tQ[Mis],3,wSs,"when calling setLevelsDataInt in AbilityObjEditing, line 9876")
call Eec(Mis,"Options",wSs,"when calling addTooltipProperty in AbilityObjEditing, line 9877")
set MM=MM-1
endfunction
function cnc takes integer tnc,integer inc,string Snc returns nothing
set w3[MM]=Snc
set MM=MM+1
if SY[tnc]==0 then
if tnc==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionIllidanChannel.presetOptions","when calling error in AbilityObjEditing, line 9875")
else
call Mau("Called AbilityDefinitionIllidanChannel.presetOptions on invalid object.","when calling error in AbilityObjEditing, line 9875")
endif
endif
call rSs(tnc,inc,"when calling presetOptions in AbilityObjEditing, line 9875")
set MM=MM-1
endfunction
function Vfs takes integer Pfs,integer Afs,boolean Dfs,string Hfs returns nothing
local integer Jfs
local integer Kfs
local integer Lfs
local integer Xfs
local integer Cfs
set w3[MM]=Hfs
set MM=MM+1
set Jfs=Afs
if mwu(kW[Pfs],Jfs)then
if not Dfs then
set Xfs=Iwu(kW[Pfs],Jfs)
set kW[Pfs]=Xfs
endif
elseif Dfs then
set Cfs=Ewu(kW[Pfs],Jfs)
set kW[Pfs]=Cfs
endif
set Lfs=Pfs
set Kfs=QgS("when calling alloc_IntLevelClosure_presetOptions_ChannelAbilityPreset_ChannelAbilityPreset in ChannelAbilityPreset, line 99")
set WW[Kfs]=Pfs
call cnc(Lfs,Kfs,"when calling presetOptions in ChannelAbilityPreset, line 99")
set MM=MM-1
endfunction
function QGc takes integer jGc,integer xGc,boolean vGc,string mGc returns nothing
set w3[MM]=mGc
set MM=MM+1
if SY[jGc]==0 then
if jGc==0 then
call Mau("Nullpointer exception when calling ChannelAbilityPreset.presetOption","when calling error in ChannelAbilityPreset, line 91")
else
call Mau("Called ChannelAbilityPreset.presetOption on invalid object.","when calling error in ChannelAbilityPreset, line 91")
endif
endif
call Vfs(jGc,xGc,vGc,"when calling presetOption in ChannelAbilityPreset, line 91")
set MM=MM-1
endfunction
function egS takes string ygS returns integer
local integer pgS
set w3[MM]=ygS
set MM=MM+1
if tY==0 then
if iY<32768 then
set iY=iY+1
set pgS=iY
set SY[pgS]=295
else
call Mau("Out of memory: Could not create ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 42")
set pgS=0
endif
else
set tY=tY-1
set pgS=sY[tY]
set SY[pgS]=295
endif
set MM=MM-1
return pgS
endfunction
function tSs takes integer sSs returns nothing
endfunction
function cSs takes integer iSs,integer SSs returns nothing
call ais(iSs,SSs,ty)
call tSs(iSs)
endfunction
function jss takes integer kss returns nothing
set SQ[kss]=true
endfunction
function Vec takes integer Xec,string Cec returns nothing
set w3[MM]=Cec
set MM=MM+1
if SY[Xec]==0 then
if Xec==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.tooltipStartListen","when calling error in AbilityObjEditing, line 85")
else
call Mau("Called AbilityDefinition.tooltipStartListen on invalid object.","when calling error in AbilityObjEditing, line 85")
endif
endif
call jss(Xec)
set MM=MM-1
endfunction
function cxu takes integer rxu,string sxu,integer txu,integer ixu,boolean Sxu returns nothing
if Sxu then
call Dju(rxu,sxu,txu,ixu,1)
else
call Dju(rxu,sxu,txu,ixu,0)
endif
endfunction
function Kxu takes integer Zxu,string Uxu,integer Ixu,integer Pxu,integer Axu,string Dxu returns nothing
local integer Hxu
local integer Jxu
set w3[MM]=Dxu
set MM=MM+1
set Hxu=1
set Jxu=Ixu
loop
exitwhen Hxu>Jxu
call cxu(Zxu,Uxu,Hxu,Pxu,LLc(Axu,Hxu,"when calling run in ObjEditingNatives, line 106"))
set Hxu=Hxu+1
endloop
set MM=MM-1
endfunction
function iYS takes string sYS returns integer
local integer tYS
set w3[MM]=sYS
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set tYS=pY
set eY[tYS]=1594
else
call Mau("Out of memory: Could not create StringLevelClosure_addTooltipProperty_AbilityDefinition_AbilityObjEditing.","when calling error in AbilityObjEditing, line 80")
set tYS=0
endif
else
set yY=yY-1
set tYS=bY[yY]
set eY[tYS]=1594
endif
set MM=MM-1
return tYS
endfunction
function Fss takes integer fss,string Rss,integer Tss,string Yss returns nothing
local integer Gss
local integer gss
local string hss
set w3[MM]=Yss
set MM=MM+1
set gss=fss
set hss=Rss
set Gss=iYS("when calling alloc_StringLevelClosure_addTooltipProperty_AbilityDefinition_AbilityObjEditing in AbilityObjEditing, line 80")
set yQ[Gss]=Tss
call xec(gss,hss,Gss,"when calling addTooltipProperty in AbilityObjEditing, line 80")
set MM=MM-1
endfunction
function Lec takes integer Dec,string Hec,integer Jec,string Kec returns nothing
set w3[MM]=Kec
set MM=MM+1
if SY[Dec]==0 then
if Dec==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.addTooltipProperty","when calling error in AbilityObjEditing, line 79")
else
call Mau("Called AbilityDefinition.addTooltipProperty on invalid object.","when calling error in AbilityObjEditing, line 79")
endif
endif
call Fss(Dec,Hec,Jec,"when calling addTooltipProperty in AbilityObjEditing, line 79")
set MM=MM-1
endfunction
function His takes integer Pis,integer Ais,string Dis returns nothing
set w3[MM]=Dis
set MM=MM+1
call Kxu(sQ[Pis],"Ncl5",tQ[Pis],5,Ais,"when calling setLevelsDataBoolean in AbilityObjEditing, line 9855")
call Lec(Pis,"DisableOtherAbilities",Ais,"when calling addTooltipProperty in AbilityObjEditing, line 9856")
set MM=MM-1
endfunction
function Cac takes integer Kac,integer Lac,string Xac returns nothing
set w3[MM]=Xac
set MM=MM+1
if SY[Kac]==0 then
if Kac==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionIllidanChannel.presetDisableOtherAbilities","when calling error in AbilityObjEditing, line 9854")
else
call Mau("Called AbilityDefinitionIllidanChannel.presetDisableOtherAbilities on invalid object.","when calling error in AbilityObjEditing, line 9854")
endif
endif
call His(Kac,Lac,"when calling presetDisableOtherAbilities in AbilityObjEditing, line 9854")
set MM=MM-1
endfunction
function FgS takes string ggS returns integer
local integer hgS
set w3[MM]=ggS
set MM=MM+1
if vG==0 then
if mG<32768 then
set mG=mG+1
set hgS=mG
set QG[hgS]=1505
else
call Mau("Out of memory: Could not create RealLevelClosure_presetArtDuration_ChannelAbilityPreset_ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 79")
set hgS=0
endif
else
set vG=vG-1
set hgS=xG[vG]
set QG[hgS]=1505
endif
set MM=MM-1
return hgS
endfunction
function GgS takes string TgS returns integer
local integer YgS
set w3[MM]=TgS
set MM=MM+1
if vG==0 then
if mG<32768 then
set mG=mG+1
set YgS=mG
set QG[YgS]=1544
else
call Mau("Out of memory: Could not create RealLevelClosure_presetFollowThroughTime_ChannelAbilityPreset_ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 78")
set YgS=0
endif
else
set vG=vG-1
set YgS=xG[vG]
set QG[YgS]=1544
endif
set MM=MM-1
return YgS
endfunction
function ets takes integer yts,string pts returns nothing
call Cju(sQ[yts],"aeat",0,0,pts)
endfunction
function Hqc takes integer Pqc,string Aqc,string Dqc returns nothing
set w3[MM]=Dqc
set MM=MM+1
if SY[Pqc]==0 then
if Pqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setArtEffect","when calling error in AbilityObjEditing, line 171")
else
call Mau("Called AbilityDefinition.setArtEffect on invalid object.","when calling error in AbilityObjEditing, line 171")
endif
endif
call ets(Pqc,Aqc)
set MM=MM-1
endfunction
function bts takes integer Ots,string lts returns nothing
call Cju(sQ[Ots],"asat",0,0,lts)
endfunction
function Iqc takes integer Eqc,string Zqc,string Uqc returns nothing
set w3[MM]=Uqc
set MM=MM+1
if SY[Eqc]==0 then
if Eqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setArtSpecial","when calling error in AbilityObjEditing, line 168")
else
call Mau("Called AbilityDefinition.setArtSpecial on invalid object.","when calling error in AbilityObjEditing, line 168")
endif
endif
call bts(Eqc,Zqc)
set MM=MM-1
endfunction
function rYS takes string wYS returns integer
local integer uYS
set w3[MM]=wYS
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set uYS=pY
set eY[uYS]=1593
else
call Mau("Out of memory: Could not create StringLevelClosure_addTooltipProperty_AbilityDefinition_AbilityObjEditing.","when calling error in AbilityObjEditing, line 77")
set uYS=0
endif
else
set yY=yY-1
set uYS=bY[yY]
set eY[uYS]=1593
endif
set MM=MM-1
return uYS
endfunction
function dss takes integer bss,string yss,integer pss,string ess returns nothing
local integer qss
local integer ass
local string nss
set w3[MM]=ess
set MM=MM+1
set ass=bss
set nss=yss
set qss=rYS("when calling alloc_StringLevelClosure_addTooltipProperty_AbilityDefinition_AbilityObjEditing in AbilityObjEditing, line 77")
set bQ[qss]=pss
call xec(ass,nss,qss,"when calling addTooltipProperty in AbilityObjEditing, line 77")
set MM=MM-1
endfunction
function Aec takes integer Zec,string Uec,integer Iec,string Pec returns nothing
set w3[MM]=Pec
set MM=MM+1
if SY[Zec]==0 then
if Zec==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.addTooltipProperty","when calling error in AbilityObjEditing, line 76")
else
call Mau("Called AbilityDefinition.addTooltipProperty on invalid object.","when calling error in AbilityObjEditing, line 76")
endif
endif
call dss(Zec,Uec,Iec,"when calling addTooltipProperty in AbilityObjEditing, line 76")
set MM=MM-1
endfunction
function uxu takes integer Vju,string Bju,integer Nju,integer Mju,real wxu returns nothing
endfunction
function Exu takes integer Fxu,string kxu,integer jxu,integer xxu,integer vxu,string mxu returns nothing
local integer Qxu
local integer Wxu
set w3[MM]=mxu
set MM=MM+1
set Qxu=1
set Wxu=jxu
loop
exitwhen Qxu>Wxu
call uxu(Fxu,kxu,Qxu,xxu,sXc(vxu,Qxu,"when calling run in ObjEditingNatives, line 98"))
set Qxu=Qxu+1
endloop
set MM=MM-1
endfunction
function Xis takes integer Jis,integer Kis,string Lis returns nothing
set w3[MM]=Lis
set MM=MM+1
call Exu(sQ[Jis],"Ncl1",tQ[Jis],1,Kis,"when calling setLevelsDataUnreal in AbilityObjEditing, line 9862")
call Aec(Jis,"FollowThroughTime",Kis,"when calling addTooltipProperty in AbilityObjEditing, line 9863")
set MM=MM-1
endfunction
function Mac takes integer Vac,integer Bac,string Nac returns nothing
set w3[MM]=Nac
set MM=MM+1
if SY[Vac]==0 then
if Vac==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionIllidanChannel.presetFollowThroughTime","when calling error in AbilityObjEditing, line 9861")
else
call Mau("Called AbilityDefinitionIllidanChannel.presetFollowThroughTime on invalid object.","when calling error in AbilityObjEditing, line 9861")
endif
endif
call Xis(Vac,Bac,"when calling presetFollowThroughTime in AbilityObjEditing, line 9861")
set MM=MM-1
endfunction
function Wis takes integer vis,integer mis,string Qis returns nothing
set w3[MM]=Qis
set MM=MM+1
call Exu(sQ[vis],"Ncl4",tQ[vis],4,mis,"when calling setLevelsDataUnreal in AbilityObjEditing, line 9841")
call Aec(vis,"ArtDuration",mis,"when calling addTooltipProperty in AbilityObjEditing, line 9842")
set MM=MM-1
endfunction
function Pac takes integer Zac,integer Uac,string Iac returns nothing
set w3[MM]=Iac
set MM=MM+1
if SY[Zac]==0 then
if Zac==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionIllidanChannel.presetArtDuration","when calling error in AbilityObjEditing, line 9840")
else
call Mau("Called AbilityDefinitionIllidanChannel.presetArtDuration on invalid object.","when calling error in AbilityObjEditing, line 9840")
endif
endif
call Wis(Zac,Uac,"when calling presetArtDuration in AbilityObjEditing, line 9840")
set MM=MM-1
endfunction
function RgS takes string dgS returns integer
local integer fgS
set w3[MM]=dgS
set MM=MM+1
if NG==0 then
if MG<32768 then
set MG=MG+1
set fgS=MG
set wg[fgS]=650
else
call Mau("Out of memory: Could not create BooleanLevelClosure_presetDisableOtherAbilities_ChannelAbilityPreset_ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 77")
set fgS=0
endif
else
set NG=NG-1
set fgS=BG[NG]
set wg[fgS]=650
endif
set MM=MM-1
return fgS
endfunction
function ots takes integer Sts,string cts returns nothing
call Cju(sQ[Sts],"atat",0,0,cts)
endfunction
function Wqc takes integer vqc,string mqc,string Qqc returns nothing
set w3[MM]=Qqc
set MM=MM+1
if SY[vqc]==0 then
if vqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setArtTarget","when calling error in AbilityObjEditing, line 165")
else
call Mau("Called AbilityDefinition.setArtTarget on invalid object.","when calling error in AbilityObjEditing, line 165")
endif
endif
call ots(vqc,mqc)
set MM=MM-1
endfunction
function its takes integer sts,string tts returns nothing
call Cju(sQ[sts],"acat",0,0,tts)
endfunction
function xqc takes integer Fqc,string kqc,string jqc returns nothing
set w3[MM]=jqc
set MM=MM+1
if SY[Fqc]==0 then
if Fqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setArtCaster","when calling error in AbilityObjEditing, line 162")
else
call Mau("Called AbilityDefinition.setArtCaster on invalid object.","when calling error in AbilityObjEditing, line 162")
endif
endif
call its(Fqc,kqc)
set MM=MM-1
endfunction
function Ifs takes integer kfs,boolean jfs,boolean xfs,string vfs returns nothing
local integer mfs
local integer Qfs
local integer Wfs
local integer Efs
local integer Zfs
local integer Ufs
set w3[MM]=vfs
set MM=MM+1
set Efs=kfs
set mfs=RgS("when calling alloc_BooleanLevelClosure_presetDisableOtherAbilities_ChannelAbilityPreset_ChannelAbilityPreset in ChannelAbilityPreset, line 77")
call Cac(Efs,mfs,"when calling presetDisableOtherAbilities in ChannelAbilityPreset, line 77")
set Zfs=kfs
set Qfs=GgS("when calling alloc_RealLevelClosure_presetFollowThroughTime_ChannelAbilityPreset_ChannelAbilityPreset in ChannelAbilityPreset, line 78")
call Mac(Zfs,Qfs,"when calling presetFollowThroughTime in ChannelAbilityPreset, line 78")
set Ufs=kfs
set Wfs=FgS("when calling alloc_RealLevelClosure_presetArtDuration_ChannelAbilityPreset_ChannelAbilityPreset in ChannelAbilityPreset, line 79")
call Pac(Ufs,Wfs,"when calling presetArtDuration in ChannelAbilityPreset, line 79")
if xfs then
call QGc(kfs,0,true,"when calling presetOption in ChannelAbilityPreset, line 81")
endif
if jfs then
call xqc(kfs,"","when calling setArtCaster in ChannelAbilityPreset, line 83")
call Hqc(kfs,"","when calling setArtEffect in ChannelAbilityPreset, line 84")
call Iqc(kfs,"","when calling setArtSpecial in ChannelAbilityPreset, line 85")
call Wqc(kfs,"","when calling setArtTarget in ChannelAbilityPreset, line 86")
endif
set MM=MM-1
endfunction
function GGc takes integer fGc,boolean RGc,boolean TGc,string YGc returns nothing
set w3[MM]=YGc
set MM=MM+1
if SY[fGc]==0 then
if fGc==0 then
call Mau("Nullpointer exception when calling ChannelAbilityPreset.removeChannelProperties","when calling error in ChannelAbilityPreset, line 76")
else
call Mau("Called ChannelAbilityPreset.removeChannelProperties on invalid object.","when calling error in ChannelAbilityPreset, line 76")
endif
endif
call Ifs(fGc,RGc,TGc,"when calling removeChannelProperties in ChannelAbilityPreset, line 76")
set MM=MM-1
endfunction
function Ffs takes integer Gfs,boolean gfs,string hfs returns nothing
set w3[MM]=hfs
set MM=MM+1
call GGc(Gfs,gfs,true,"when calling removeChannelProperties in ChannelAbilityPreset, line 74")
set MM=MM-1
endfunction
function dGc takes integer qGc,boolean aGc,string nGc returns nothing
set w3[MM]=nGc
set MM=MM+1
if SY[qGc]==0 then
if qGc==0 then
call Mau("Nullpointer exception when calling ChannelAbilityPreset.removeChannelProperties","when calling error in ChannelAbilityPreset, line 73")
else
call Mau("Called ChannelAbilityPreset.removeChannelProperties on invalid object.","when calling error in ChannelAbilityPreset, line 73")
endif
endif
call Ffs(qGc,aGc,"when calling removeChannelProperties in ChannelAbilityPreset, line 73")
set MM=MM-1
endfunction
function bYS takes string OYS returns integer
local integer lYS
set w3[MM]=OYS
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set lYS=pY
set eY[lYS]=1591
else
call Mau("Out of memory: Could not create StringLevelClosure_AbilityDefinition_AbilityObjEditing.","when calling error in AbilityObjEditing, line 320")
set lYS=0
endif
else
set yY=yY-1
set lYS=bY[yY]
set eY[lYS]=1591
endif
set MM=MM-1
return lYS
endfunction
function Kts takes integer Pts,integer Ats,string Dts returns nothing
local integer Hts
local integer Jts
set w3[MM]=Dts
set MM=MM+1
call Dju(sQ[Pts],"alev",0,0,Ats)
set tQ[Pts]=Ats
set Jts=bYS("when calling alloc_StringLevelClosure_AbilityDefinition_AbilityObjEditing in AbilityObjEditing, line 320")
set qQ[Jts]=Ats
set Hts=Jts
call xec(Pts,"Levels",Hts,"when calling addTooltipProperty in AbilityObjEditing, line 321")
set MM=MM-1
endfunction
function dac takes integer qac,integer aac,string nac returns nothing
set w3[MM]=nac
set MM=MM+1
if SY[qac]==0 then
if qac==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setLevels","when calling error in AbilityObjEditing, line 317")
else
call Mau("Called AbilityDefinition.setLevels on invalid object.","when calling error in AbilityObjEditing, line 317")
endif
endif
call Kts(qac,aac,"when calling setLevels in AbilityObjEditing, line 317")
set MM=MM-1
endfunction
function initS takes nothing returns nothing
set Aq[0]="absorb"
set Aq[1]="acidbomb"
set Aq[2]="acolyteharvest"
set Aq[3]="whirlwind"
set Aq[4]="ambush"
set Aq[5]="ancestralspirit"
set Aq[6]="ancestralspirittarget"
set Aq[7]="animatedead"
set Aq[8]="antimagicshell"
set Aq[9]="webon"
set Aq[10]="weboff"
set Aq[11]="web"
set Aq[12]="attributemodskill"
set Aq[13]="auraunholy"
set Aq[14]="auravampiric"
set Aq[15]="autodispel"
set Aq[16]="autodispeloff"
set Aq[17]="autodispelon"
set Aq[18]="autoentangle"
set Aq[19]="autoentangleinstant"
set Aq[20]="wateryminion"
set Aq[21]="waterelemental"
set Aq[22]="avatar"
set Aq[23]="avengerform"
set Aq[24]="awaken"
set Aq[25]="banish"
set Aq[26]="barkskin"
set Aq[27]="barkskinoff"
set Aq[28]="barkskinon"
set Aq[29]="battleroar"
set Aq[30]="battlestations"
set Aq[31]="bearform"
set Aq[32]="berserk"
set Aq[33]="blackarrow"
set Aq[34]="blackarrowoff"
set Aq[35]="blackarrowon"
set Aq[36]="blight"
set Aq[37]="blink"
set Aq[38]="blizzard"
set Aq[39]="bloodlust"
set Aq[40]="bloodlustoff"
set Aq[41]="bloodluston"
set Aq[42]="board"
set Aq[43]="breathoffire"
set Aq[44]="breathoffrost"
set Aq[45]="ward"
set Aq[46]="burrow"
set Aq[47]="cannibalize"
set Aq[48]="carrionscarabs"
set Aq[49]="carrionscarabsinstant"
set Aq[50]="carrionscarabsoff"
set Aq[51]="carrionscarabson"
set Aq[52]="carrionswarm"
set Aq[53]="chainlightning"
set Aq[54]="channel"
set Aq[55]="charm"
set Aq[56]="chemicalrage"
set Aq[57]="cloudoffog"
set Aq[58]="clusterrockets"
set Aq[59]="coldarrows"
set Aq[60]="coldarrowstarg"
set Aq[61]="controlmagic"
set Aq[62]="corporealform"
set Aq[63]="corrosivebreath"
set Aq[64]="coupleinstant"
set Aq[65]="coupletarget"
set Aq[66]="creepanimatedead"
set Aq[67]="creepdevour"
set Aq[68]="creepheal"
set Aq[69]="creephealoff"
set Aq[70]="creephealon"
set Aq[71]="creepthunderbolt"
set Aq[72]="creepthunderclap"
set Aq[73]="cripple"
set Aq[74]="curse"
set Aq[75]="curseoff"
set Aq[76]="curseon"
set Aq[77]="cyclone"
set Aq[78]="darkconversion"
set Aq[79]="darkportal"
set Aq[80]="darkritual"
set Aq[81]="darksummoning"
set Aq[82]="deathanddecay"
set Aq[83]="deathcoil"
set Aq[84]="deathpact"
set Aq[85]="windwalk"
set Aq[86]="defend"
set Aq[87]="detectaoe"
set Aq[88]="detonate"
set Aq[89]="devour"
set Aq[90]="devourmagic"
set Aq[91]="disassociate"
set Aq[92]="disenchant"
set Aq[93]="dismount"
set Aq[94]="dispel"
set Aq[95]="divineshield"
set Aq[96]="doom"
set Aq[97]="drain"
set Aq[98]="dreadlordinferno"
set Aq[99]="dropitem"
set Aq[100]="drunkenhaze"
set Aq[101]="earthquake"
set Aq[102]="eattree"
set Aq[103]="elementalfury"
set Aq[104]="wispharvest"
set Aq[105]="ensnareoff"
set Aq[106]="ensnareon"
set Aq[107]="entangle"
set Aq[108]="entangleinstant"
set Aq[109]="entanglingroots"
set Aq[110]="etherealform"
set Aq[111]="evileye"
set Aq[112]="faeriefire"
set Aq[113]="faeriefireoff"
set Aq[114]="faeriefireon"
set Aq[115]="fanofknives"
set Aq[116]="farsight"
set Aq[117]="fingerofdeath"
set Aq[118]="firebolt"
set Aq[119]="flamestrike"
set Aq[120]="flamingarrows"
set Aq[121]="flamingarrowstarg"
set Aq[122]="flamingattack"
set Aq[123]="flamingattacktarg"
set Aq[124]="flare"
set Aq[125]="forceboard"
set Aq[126]="forceofnature"
set Aq[127]="forkedlightning"
set Aq[128]="freezingbreath"
set Aq[129]="frenzy"
set Aq[130]="frenzyoff"
set Aq[131]="frenzyon"
set Aq[132]="frostarmor"
set Aq[133]="frostarmoroff"
set Aq[134]="frostarmoron"
set Aq[135]="frostnova"
set Aq[136]="getitem"
set Aq[137]="gold2lumber"
set Aq[138]="grabtree"
set Aq[139]="harvest"
set Aq[140]="heal"
set Aq[141]="healingspray"
set Aq[142]="healingward"
set Aq[143]="healingwave"
set Aq[144]="healoff"
set Aq[145]="healon"
set Aq[146]="hex"
set Aq[147]="voodoo"
set Aq[148]="holybolt"
set Aq[149]="howlofterror"
set Aq[150]="humanbuild"
set Aq[151]="immolation"
set Aq[152]="impale"
set Aq[153]="incineratearrow"
set Aq[154]="incineratearrowoff"
set Aq[155]="incineratearrowon"
set Aq[156]="inferno"
set Aq[157]="innerfire"
set Aq[158]="innerfireoff"
set Aq[159]="innerfireon"
set Aq[160]="instant"
set Aq[161]="invisibility"
set Aq[162]="lavamonster"
set Aq[163]="lightningshield"
set Aq[164]="load"
set Aq[165]="loadarcher"
set Aq[166]="loadcorpse"
set Aq[167]="loadcorpseinstant"
set Aq[168]="locustswarm"
set Aq[169]="lumber2gold"
set Aq[170]="magicdefense"
set Aq[171]="magicleash"
set Aq[172]="magicundefense"
set Aq[173]="manaburn"
set Aq[174]="manaflareoff"
set Aq[175]="manaflareon"
set Aq[176]="manashieldoff"
set Aq[177]="manashieldon"
set Aq[178]="massteleport"
set Aq[179]="mechanicalcritter"
set Aq[180]="metamorphosis"
set Aq[181]="militia"
set Aq[182]="militiaconvert"
set Aq[183]="militiaoff"
set Aq[184]="militiaunconvert"
set Aq[185]="mindrot"
set Aq[186]="mirrorimage"
set Aq[187]="monsoon"
set Aq[188]="mount"
set Aq[189]="mounthippogryph"
set Aq[190]="vengeanceoff"
set Aq[191]="nagabuild"
set Aq[192]="neutraldetectaoe"
set Aq[193]="neutralinteract"
set Aq[194]="neutralspell"
set Aq[195]="nightelfbuild"
set Aq[196]="orcbuild"
set Aq[197]="parasite"
set Aq[198]="parasiteoff"
set Aq[199]="parasiteon"
set Aq[200]="patrol"
set Aq[201]="phaseshift"
set Aq[202]="phaseshiftinstant"
set Aq[203]="phaseshiftoff"
set Aq[204]="phaseshifton"
set Aq[205]="phoenixfire"
set Aq[206]="phoenixmorph"
set Aq[207]="poisonarrows"
set Aq[208]="poisonarrowstarg"
set Aq[209]="polymorph"
set Aq[210]="possession"
set Aq[211]="preservation"
set Aq[212]="purge"
set Aq[213]="rainofchaos"
set Aq[214]="rainoffire"
set Aq[215]="raisedead"
set Aq[216]="raisedeadoff"
set Aq[217]="raisedeadon"
set Aq[218]="ravenform"
set Aq[219]="recharge"
set Aq[220]="rechargeoff"
set Aq[221]="rechargeon"
set Aq[222]="rejuvination"
set Aq[223]="renew"
set Aq[224]="renewoff"
set Aq[225]="renewon"
set Aq[226]="repair"
set Aq[227]="repairoff"
set Aq[228]="repairon"
set Aq[229]="replenish"
set Aq[230]="replenishlife"
set Aq[231]="replenishlifeoff"
set Aq[232]="replenishlifeon"
set Aq[233]="replenishmana"
set Aq[234]="replenishmanaoff"
set Aq[235]="replenishmanaon"
set Aq[236]="replenishoff"
set Aq[237]="replenishon"
set Aq[238]="request_hero"
set Aq[239]="requestsacrifice"
set Aq[240]="restoration"
set Aq[241]="restorationoff"
set Aq[242]="restorationon"
set Aq[243]="resumebuild"
set Aq[244]="resumeharvesting"
set Aq[245]="resurrection"
set Aq[246]="returnresources"
set Aq[247]="revenge"
set Aq[248]="revive"
set Aq[249]="roar"
set Aq[250]="robogoblin"
set Aq[251]="root"
set Aq[252]="sacrifice"
set Aq[253]="sanctuary"
set Aq[254]="scout"
set Aq[255]="selfdestruct"
set Aq[256]="selfdestructoff"
set Aq[257]="selfdestructon"
set Aq[258]="sentinel"
set Aq[259]="setrally"
set Aq[260]="shadowsight"
set Aq[261]="shadowstrike"
set Aq[262]="shockwave"
set Aq[263]="silence"
set Aq[264]="sleep"
set Aq[265]="slow"
set Aq[266]="slowoff"
set Aq[267]="slowon"
set Aq[268]="vengeanceon"
set Aq[269]="soulburn"
set Aq[270]="soulpreservation"
set Aq[271]="spellshield"
set Aq[272]="spellshieldaoe"
set Aq[273]="spellsteal"
set Aq[274]="spellstealoff"
set Aq[275]="spellstealon"
set Aq[276]="spies"
set Aq[277]="spiritlink"
set Aq[278]="spiritofvengeance"
set Aq[279]="spirittroll"
set Aq[280]="spiritwolf"
set Aq[281]="stampede"
set Aq[282]="standdown"
set Aq[283]="starfall"
set Aq[284]="stasistrap"
set Aq[285]="steal"
set Aq[286]="stomp"
set Aq[287]="stoneform"
set Aq[288]="volcano"
set Aq[289]="submerge"
set Aq[290]="summonfactory"
set Aq[291]="summongrizzly"
set Aq[292]="summonphoenix"
set Aq[293]="summonquillbeast"
set Aq[294]="summonwareagle"
set Aq[295]="tankdroppilot"
set Aq[296]="tankloadpilot"
set Aq[297]="tankpilot"
set Aq[298]="taunt"
set Aq[299]="thunderbolt"
set Aq[300]="thunderclap"
set Aq[301]="tornado"
set Aq[302]="townbelloff"
set Aq[303]="townbellon"
set Aq[304]="tranquility"
set Aq[305]="transmute"
set Aq[306]="unavatar"
set Aq[307]="unavengerform"
set Aq[308]="unbearform"
set Aq[309]="unburrow"
set Aq[310]="uncoldarrows"
set Aq[311]="uncorporealform"
set Aq[312]="undeadbuild"
set Aq[313]="undefend"
set Aq[314]="undivineshield"
set Aq[315]="unetherealform"
set Aq[316]="unflamingarrows"
set Aq[317]="unflamingattack"
set Aq[318]="unholyfrenzy"
set Aq[319]="unimmolation"
set Aq[320]="unload"
set Aq[321]="unloadall"
set Aq[322]="unloadallcorpses"
set Aq[323]="unloadallinstant"
set Aq[324]="unpoisonarrows"
set Aq[325]="unravenform"
set Aq[326]="unrobogoblin"
set Aq[327]="unroot"
set Aq[328]="unstableconcoction"
set Aq[329]="unstoneform"
set Aq[330]="unsubmerge"
set Aq[331]="unsummon"
set Aq[332]="unwindwalk"
set Aq[333]="vengeance"
set Aq[334]="vengeanceinstant"
endfunction
function ktt takes integer gtt,boolean htt,string Ftt returns string
set w3[MM]=Ftt
set MM=MM+1
if Aq[0]==null then
call initS()
endif
set KD[gtt]=KD[gtt]+1
if KD[gtt]>334 then
if htt then
set KD[gtt]=0
else
call Mau("Cannot get more than 344 Orders from an OrderStringFactory","when calling error in OrderStringFactory, line 17")
endif
endif
set MM=MM-1
return Aq[KD[gtt]]
endfunction
function hXc takes integer TXc,boolean YXc,string GXc returns string
local string gXc
set w3[MM]=GXc
set MM=MM+1
if jk[TXc]==0 then
if TXc==0 then
call Mau("Nullpointer exception when calling OrderStringFactory.getOrderString","when calling error in OrderStringFactory, line 9")
else
call Mau("Called OrderStringFactory.getOrderString on invalid object.","when calling error in OrderStringFactory, line 9")
endif
endif
set gXc=ktt(TXc,YXc,"when calling getOrderString in OrderStringFactory, line 9")
set MM=MM-1
return gXc
endfunction
function ngS takes string qgS returns integer
local integer agS
set w3[MM]=qgS
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set agS=pY
set eY[agS]=1596
else
call Mau("Out of memory: Could not create StringLevelClosure_presetBaseOrderID_ChannelAbilityPreset_ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 64")
set agS=0
endif
else
set yY=yY-1
set agS=bY[yY]
set eY[agS]=1596
endif
set MM=MM-1
return agS
endfunction
function Fnc takes integer gnc,integer hnc returns nothing
endfunction
function mss takes integer xss,boolean vss returns nothing
set SQ[xss]=false
if iQ[xss]!=0 and vss then
call Fnc(iQ[xss],xss)
endif
endfunction
function wqc takes integer Bec,boolean Nec,string Mec returns nothing
set w3[MM]=Mec
set MM=MM+1
if SY[Bec]==0 then
if Bec==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.tooltipStopListen","when calling error in AbilityObjEditing, line 91")
else
call Mau("Called AbilityDefinition.tooltipStopListen on invalid object.","when calling error in AbilityObjEditing, line 91")
endif
endif
call mss(Bec,Nec)
set MM=MM-1
endfunction
function Yfs takes integer afs,integer nfs,boolean dfs,string ffs returns nothing
local integer Rfs
local integer Tfs
set w3[MM]=ffs
set MM=MM+1
set tQ[afs]=nfs
call Vec(afs,"when calling tooltipStartListen in ChannelAbilityPreset, line 60")
call dac(afs,nfs,"when calling setLevels in ChannelAbilityPreset, line 61")
call wqc(afs,false,"when calling tooltipStopListen in ChannelAbilityPreset, line 62")
set jW[afs]=hXc(vy,true,"when calling getOrderString in ChannelAbilityPreset, line 63")
set Tfs=afs
set Rfs=ngS("when calling alloc_StringLevelClosure_presetBaseOrderID_ChannelAbilityPreset_ChannelAbilityPreset in ChannelAbilityPreset, line 64")
set xW[Rfs]=afs
call Jac(Tfs,Rfs,"when calling presetBaseOrderID in ChannelAbilityPreset, line 64")
if dfs then
call dGc(afs,true,"when calling removeChannelProperties in ChannelAbilityPreset, line 66")
endif
set MM=MM-1
endfunction
function eGc takes integer lGc,integer bGc,boolean yGc,string pGc returns nothing
set w3[MM]=pGc
set MM=MM+1
if SY[lGc]==0 then
if lGc==0 then
call Mau("Nullpointer exception when calling ChannelAbilityPreset.setup","when calling error in ChannelAbilityPreset, line 58")
else
call Mau("Called ChannelAbilityPreset.setup on invalid object.","when calling error in ChannelAbilityPreset, line 58")
endif
endif
call Yfs(lGc,bGc,yGc,"when calling setup in ChannelAbilityPreset, line 58")
set MM=MM-1
endfunction
function iRs takes integer sRs returns nothing
local integer tRs=0
set kW[sRs]=tRs
endfunction
function nRs takes integer yRs,integer pRs,integer eRs,boolean qRs,string aRs returns nothing
set w3[MM]=aRs
set MM=MM+1
call cSs(yRs,pRs)
call iRs(yRs)
call eGc(yRs,eRs,qRs,"when calling setup in ChannelAbilityPreset, line 56")
set MM=MM-1
endfunction
function bRs takes integer SRs,integer cRs,boolean oRs,string ORs returns integer
local integer lRs
set w3[MM]=ORs
set MM=MM+1
set lRs=egS("when calling alloc_ChannelAbilityPreset in ChannelAbilityPreset, line 54")
call nRs(lRs,SRs,cRs,oRs,"when calling construct_ChannelAbilityPreset2 in ChannelAbilityPreset, line 54")
set MM=MM-1
return lRs
endfunction
function Nis takes integer Cis,integer Vis,string Bis returns nothing
set w3[MM]=Bis
set MM=MM+1
call hxu(sQ[Cis],"Ncl2",tQ[Cis],2,Vis,"when calling setLevelsDataInt in AbilityObjEditing, line 9869")
call Eec(Cis,"TargetType",Vis,"when calling addTooltipProperty in AbilityObjEditing, line 9870")
set MM=MM-1
endfunction
function snc takes integer wnc,integer unc,string rnc returns nothing
set w3[MM]=rnc
set MM=MM+1
if SY[wnc]==0 then
if wnc==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionIllidanChannel.presetTargetType","when calling error in AbilityObjEditing, line 9868")
else
call Mau("Called AbilityDefinitionIllidanChannel.presetTargetType on invalid object.","when calling error in AbilityObjEditing, line 9868")
endif
endif
call Nis(wnc,unc,"when calling presetTargetType in AbilityObjEditing, line 9868")
set MM=MM-1
endfunction
function xgS takes string kgS returns integer
local integer jgS
set w3[MM]=kgS
set MM=MM+1
if oY==0 then
if OY<32768 then
set OY=OY+1
set jgS=OY
set lY[jgS]=1268
else
call Mau("Out of memory: Could not create IntLevelClosure_presetTargetType_ChannelAbilityPreset_ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 89")
set jgS=0
endif
else
set oY=oY-1
set jgS=cY[oY]
set lY[jgS]=1268
endif
set MM=MM-1
return jgS
endfunction
function rRs takes integer Bfs,integer Nfs,string Mfs returns nothing
local integer wRs
local integer uRs
set w3[MM]=Mfs
set MM=MM+1
set uRs=Bfs
set wRs=xgS("when calling alloc_IntLevelClosure_presetTargetType_ChannelAbilityPreset_ChannelAbilityPreset in ChannelAbilityPreset, line 89")
set QW[wRs]=Nfs
call snc(uRs,wRs,"when calling presetTargetType in ChannelAbilityPreset, line 89")
set MM=MM-1
endfunction
function kGc takes integer gGc,integer hGc,string FGc returns nothing
set w3[MM]=FGc
set MM=MM+1
if SY[gGc]==0 then
if gGc==0 then
call Mau("Nullpointer exception when calling ChannelAbilityPreset.presetTargetTypes","when calling error in ChannelAbilityPreset, line 88")
else
call Mau("Called ChannelAbilityPreset.presetTargetTypes on invalid object.","when calling error in ChannelAbilityPreset, line 88")
endif
endif
call rRs(gGc,hGc,"when calling presetTargetTypes in ChannelAbilityPreset, line 88")
set MM=MM-1
endfunction
function tis takes integer uis,integer ris,string sis returns nothing
set w3[MM]=sis
set MM=MM+1
call Exu(sQ[uis],"aran",tQ[uis],0,ris,"when calling setLevelsDataUnreal in AbilityObjEditing, line 382")
call Aec(uis,"CastRange",ris,"when calling addTooltipProperty in AbilityObjEditing, line 383")
set MM=MM-1
endfunction
function vac takes integer kac,integer jac,string xac returns nothing
set w3[MM]=xac
set MM=MM+1
if SY[kac]==0 then
if kac==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.presetCastRange","when calling error in AbilityObjEditing, line 381")
else
call Mau("Called AbilityDefinition.presetCastRange on invalid object.","when calling error in AbilityObjEditing, line 381")
endif
endif
call tis(kac,jac,"when calling presetCastRange in AbilityObjEditing, line 381")
set MM=MM-1
endfunction
function pYr takes string sYr returns integer
local integer tYr
local integer iYr
local integer SYr
local integer cYr
local integer oYr
local integer OYr
local integer lYr
local integer bYr
local integer yYr
set w3[MM]=sYr
set MM=MM+1
set iYr=bRs(RXc(Gq,"when calling next in SotfrpGuiPresets, line 24"),1,true,"when calling new_ChannelAbilityPreset in SotfrpGuiPresets, line 24")
set bYr=iYr
set tYr=HSc("when calling alloc_StringLevelClosure_presetBaseOrderID_presetTargetTypes_presetOption_presetCastRange_SotfrpGuiPresets in SotfrpGuiPresets, line 25")
call Jac(bYr,tYr,"when calling presetBaseOrderID in SotfrpGuiPresets, line 25")
set SYr=iYr
call kGc(SYr,2,"when calling presetTargetTypes in SotfrpGuiPresets, line 26")
set cYr=SYr
call QGc(cYr,0,false,"when calling presetOption in SotfrpGuiPresets, line 27")
set OYr=cYr
set yYr=OYr
set oYr=LSc("when calling alloc_RealLevelClosure_presetCastRange_SotfrpGuiPresets in SotfrpGuiPresets, line 28")
call vac(yYr,oYr,"when calling presetCastRange in SotfrpGuiPresets, line 28")
set lYr=OYr
set MM=MM-1
return lYr
endfunction
function NTr takes string VTr returns boolean
local integer BTr
set w3[MM]=VTr
set MM=MM+1
if Ie then
set BTr=pYr("when calling generateSmartAbility in SotfrpGuiPresets, line 30")
else
set BTr=0
endif
set Nf=BTr
set Mf=1095577700
set rR[0]="Q"
set rR[1]="W"
set rR[2]="E"
set rR[3]="R"
set rR[4]="A"
set rR[5]="S"
set rR[6]="D"
set rR[7]="F"
set rR[8]="Z"
set rR[9]="X"
set rR[10]="C"
set rR[11]="V"
set uR=gT
set wR[0]="Q"
set wR[1]="W"
set wR[2]="E"
set wR[3]="R"
set wR[4]="A"
set wR[5]="S"
set wR[6]="D"
set wR[7]="F"
set wR[8]="Z"
set wR[9]="X"
set wR[10]="C"
set wR[11]="V"
set MM=MM-1
return true
endfunction
function aRo takes nothing returns boolean
set MM=0
return NTr("SotfrpGuiPresets, line 1")
endfunction
function HGS takes string AGS returns integer
local integer DGS
set w3[MM]=AGS
set MM=MM+1
if dG==0 then
if fG<32768 then
set fG=fG+1
set DGS=fG
set RG[DGS]=658
else
call Mau("Out of memory: Could not create Buff.","when calling error in BuffsJurst, line 3")
set DGS=0
endif
else
set dG=dG-1
set DGS=nG[dG]
set RG[DGS]=658
endif
set MM=MM-1
return DGS
endfunction
function kqs takes integer Fqs returns nothing
endfunction
function xqs takes integer jqs returns nothing
call kqs(jqs)
endfunction
function fqs takes string nqs returns integer
local integer dqs
set w3[MM]=nqs
set MM=MM+1
set dqs=HGS("when calling alloc_Buff in BuffsJurst, line 3")
call xqs(dqs)
set MM=MM-1
return dqs
endfunction
function Otu takes integer itu,unit Stu,string ctu returns integer
local integer otu
set w3[MM]=ctu
set MM=MM+1
set otu=fqs("when calling new_Buff in BuffsJurst, line 9")
set CQ[otu]=itu
set VQ[otu]=Stu
set MM=MM-1
return otu
endfunction
function m5S takes integer j5S,integer x5S,timer v5S returns nothing
call SaveTimerHandle(CR,j5S,x5S,v5S)
endfunction
function nio takes integer pio,integer eio,timer qio,string aio returns nothing
set w3[MM]=aio
set MM=MM+1
if Wv[pio]==0 then
if pio==0 then
call Mau("Nullpointer exception when calling Table.saveTimer","when calling error in TableJurst, line 175")
else
call Mau("Called Table.saveTimer on invalid object.","when calling error in TableJurst, line 175")
endif
endif
call m5S(pio,eio,qio)
set MM=MM-1
endfunction
function k5S takes integer h5S,integer F5S returns timer
return LoadTimerHandle(CR,h5S,F5S)
endfunction
function yio takes integer oio,integer Oio,string lio returns timer
local timer bio
set w3[MM]=lio
set MM=MM+1
if Wv[oio]==0 then
if oio==0 then
call Mau("Nullpointer exception when calling Table.loadTimer","when calling error in TableJurst, line 171")
else
call Mau("Called Table.loadTimer on invalid object.","when calling error in TableJurst, line 171")
endif
endif
set bio=k5S(oio,Oio)
set MM=MM-1
set xdw=bio
set bio=null
return xdw
endfunction
function ras takes integer Vqs,unit Bqs,string Nqs returns timer
local integer Mqs
local timer was
local integer uas
set w3[MM]=Nqs
set MM=MM+1
set Mqs=GetHandleId(Bqs)
set was=yio(BQ[Vqs],Mqs,"when calling loadTimer in BuffsJurst, line 108")
set uas=Otu(Vqs,Bqs,"when calling create in BuffsJurst, line 109")
if was!=null then
call nTc(Vkr(was,"when calling getData in BuffsJurst, line 111"),"when calling destroy in BuffsJurst, line 111")
call sjr(was,"when calling release in BuffsJurst, line 112")
call jto(BQ[Vqs],Mqs,"when calling removeHandle in BuffsJurst, line 113")
if rW[Vqs]!=0 then
call rYc(rW[Vqs],Bqs,"when calling evaluate in BuffsJurst, line 115")
endif
endif
if NQ[Vqs]!=0 then
call rYc(NQ[Vqs],Bqs,"when calling evaluate in BuffsJurst, line 119")
endif
if was==null then
if MQ[Vqs]!=0 then
call rYc(MQ[Vqs],Bqs,"when calling evaluate in BuffsJurst, line 123")
endif
elseif wW[Vqs]!=0 then
call rYc(wW[Vqs],Bqs,"when calling evaluate in BuffsJurst, line 126")
endif
set was=wjr("when calling getTimer in BuffsJurst, line 128")
call Kkr(was,uas,"when calling setData in BuffsJurst, line 129")
call nio(BQ[Vqs],Mqs,was,"when calling saveTimer in BuffsJurst, line 130")
set MM=MM-1
set Enw=was
set was=null
return Enw
endfunction
function PTc takes integer ETc,unit ZTc,string UTc returns timer
local timer ITc
set w3[MM]=UTc
set MM=MM+1
if gG[ETc]==0 then
if ETc==0 then
call Mau("Nullpointer exception when calling BuffType.prepare","when calling error in BuffsJurst, line 106")
else
call Mau("Called BuffType.prepare on invalid object.","when calling error in BuffsJurst, line 106")
endif
endif
set ITc=ras(ETc,ZTc,"when calling prepare in BuffsJurst, line 106")
set MM=MM-1
set wdw=ITc
set ITc=null
return wdw
endfunction
function oas takes integer sas,unit tas,real ias,string Sas returns nothing
local timer cas
set w3[MM]=Sas
set MM=MM+1
set cas=PTc(sas,tas,"when calling prepare in BuffsJurst, line 135")
call TimerStart(cas,ias,false,Zaw)
set MM=MM-1
set cas=null
endfunction
function KTc takes integer ATc,unit DTc,real HTc,string JTc returns nothing
set w3[MM]=JTc
set MM=MM+1
if gG[ATc]==0 then
if ATc==0 then
call Mau("Nullpointer exception when calling BuffType.apply","when calling error in BuffsJurst, line 134")
else
call Mau("Called BuffType.apply on invalid object.","when calling error in BuffsJurst, line 134")
endif
endif
call oas(ATc,DTc,HTc,"when calling apply in BuffsJurst, line 134")
set MM=MM-1
endfunction
function g5S takes integer T5S,integer Y5S,unit G5S returns nothing
call SaveUnitHandle(CR,T5S,Y5S,G5S)
endfunction
function cio takes integer sio,integer tio,unit iio,string Sio returns nothing
set w3[MM]=Sio
set MM=MM+1
if Wv[sio]==0 then
if sio==0 then
call Mau("Nullpointer exception when calling Table.saveUnit","when calling error in TableJurst, line 103")
else
call Mau("Called Table.saveUnit on invalid object.","when calling error in TableJurst, line 103")
endif
endif
call g5S(sio,tio,iio)
set MM=MM-1
endfunction
function Ujr takes string Qjr returns nothing
local unit Wjr
local integer Ejr
local integer Zjr
set w3[MM]=Qjr
set MM=MM+1
if GetSpellAbilityId()==oT then
set Wjr=GetSpellAbilityUnit()
call KTc(pT,Wjr,12.,"when calling apply in TouchOfKarma, line 65")
set Ejr=Fxs("when calling new_DummyCaster in TouchOfKarma, line 66")
call ijc(Ejr,g7s(Wjr),"when calling owner in TouchOfKarma, line 66")
set Zjr=Ejr
call pjc(Zjr,bT,GetUnitAbilityLevel(Wjr,oT),Hq,Wjr,"when calling castTarget in TouchOfKarma, line 66")
call cio(nT,GetHandleId(Wjr),GetSpellTargetUnit(),"when calling saveUnit in TouchOfKarma, line 68")
call cio(dT,GetHandleId(GetSpellTargetUnit()),Wjr,"when calling saveUnit in TouchOfKarma, line 69")
endif
set MM=MM-1
set Wjr=null
endfunction
function aTo takes nothing returns nothing
set MM=0
call Ujr("TouchOfKarma, line 98")
endfunction
function yVw takes nothing returns boolean
if GetUnitAbilityLevelSwapped(1093684017,GetEnumUnit())!=0 then
return true
endif
if GetUnitAbilityLevelSwapped(1093684018,GetEnumUnit())!=0 then
return true
endif
return false
endfunction
function pVw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not yVw()then
return false
endif
return true
endfunction
function eVw takes nothing returns boolean
if not pVw()then
return false
endif
return true
endfunction
function aVw takes nothing returns nothing
local unit qVw=GetEnumUnit()
if eVw()then
call UnitRemoveAbility(qVw,1093684017)
if IsUnitInGroup(GetEnumUnit(),bt)==true then
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl",GetUnitLoc(qVw)))
call GroupRemoveUnit(bt,qVw)
call SetUnitPathing(qVw,true)
call UnitAddAbility(qVw,1097691750)
call UnitRemoveAbility(qVw,1097691750)
call SetUnitFlyHeight(qVw,0.,240.)
call UnitRemoveAbility(qVw,1093684018)
call UnitRemoveAbility(qVw,1093684019)
call UnitRemoveAbility(qVw,1093684020)
call UnitRemoveAbility(qVw,1093684021)
call UnitRemoveAbility(qVw,1110455370)
call UnitAddAbility(qVw,1093684017)
call UnitMakeAbilityPermanent(qVw,true,1093684017)
endif
else
call DoNothing()
endif
set qVw=null
set qVw=null
endfunction
function aWw takes nothing returns boolean
if not(ww==true)then
return false
endif
if not(SubStringBJ(GetEventPlayerChatString(),1,8)=="aweather")then
return false
endif
return true
endfunction
function afw takes nothing returns nothing
call TriggerEvaluate(Nb)
endfunction
function agr takes nothing returns boolean
set GR=1098085479
set gR=1095577657
set hR=5
set FR=30
set kR="G"
return true
endfunction
function ajw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function amu takes nothing returns nothing
call TriggerRegisterUnitEvent(mq,GetFilterUnit(),EVENT_UNIT_DAMAGED)
endfunction
function avw takes nothing returns nothing
set Ju[8]=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[8],bj_UNIT_FACING)
call UnitAddAbilityBJ(1093678146,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093678146,GetLastCreatedUnit(),Mu)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"thunderbolt",GetEnumUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
endfunction
function awu takes nothing returns boolean
set dy=0.030
set fy=1097691750
set Ry=1097625443
set Ty=pa[PLAYER_NEUTRAL_PASSIVE]
return true
endfunction
function axw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function b1w takes nothing returns boolean
return IsPlayerEnemy(GetOwningPlayer(GetSpellAbilityUnit()),GetOwningPlayer(GetFilterUnit()))==true
endfunction
function b2w takes nothing returns boolean
if not(GetSpellAbilityId()==1093679157)then
return false
endif
return true
endfunction
function b4w takes nothing returns boolean
if not(GetSpellAbilityId()==1093682503)then
return false
endif
return true
endfunction
function bAw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(dtw))
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],ftw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function bBw takes nothing returns nothing
local group lBw=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(Bcw))
if GetEventPlayerChatString()=="'heromagearmor" then
call ForGroup(lBw,Ncw)
elseif GetEventPlayerChatString()=="@heromagearmor" then
call ForGroup(lBw,Mcw)
endif
call DestroyGroup(lBw)
set lBw=null
set lBw=null
endfunction
function bEw takes nothing returns nothing
call SetBlightRadiusLocBJ(false,GetEnumPlayer(),G,92.00)
endfunction
function bMw takes nothing returns boolean
if GetUnitAbilityLevel(GetTriggerUnit(),1093683538)>0 then
return true
endif
return false
endfunction
function bPw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())
endfunction
function akr takes string qkr returns boolean
set w3[MM]=qkr
set MM=MM+1
set XR=2016423985
call e7u(XR,"when calling protectUnitType in SyncSimple_config, line 41")
set MM=MM-1
return true
endfunction
function bRo takes nothing returns boolean
set MM=0
return akr("SyncSimple_config, line 1")
endfunction
function Gnr takes string Tnr returns boolean
local boolean Ynr
set w3[MM]=Tnr
set MM=MM+1
set Ynr=not d7u(S7s(GetFilterUnit()),"when calling isUnitTypeProtected in SotFRP_SaveLoad, line 79")
set MM=MM-1
return Ynr
endfunction
function bTo takes nothing returns boolean
set MM=0
return Gnr("SotFRP_SaveLoad, line 79")
endfunction
function OUw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function lUw takes nothing returns boolean
if not OUw()then
return false
endif
return true
endfunction
function oUw takes nothing returns boolean
if not(X[GetConvertedPlayerId(GetTriggerPlayer())]<0)then
return false
endif
return true
endfunction
function bUw takes nothing returns nothing
if lUw()then
if GetTriggerPlayer()==Player(0)then
call DestroyEffectBJ(W[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(1)then
call DestroyEffectBJ(E[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(2)then
call DestroyEffectBJ(J[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(3)then
call DestroyEffectBJ(H[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(4)then
call DestroyEffectBJ(D[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(5)then
call DestroyEffectBJ(A[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(6)then
call DestroyEffectBJ(P[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(7)then
call DestroyEffectBJ(I[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(8)then
call DestroyEffectBJ(U[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(9)then
call DestroyEffectBJ(Z[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(10)then
call DestroyEffectBJ(L[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(11)then
call DestroyEffectBJ(K[X[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
set X[GetConvertedPlayerId(GetTriggerPlayer())]=X[GetConvertedPlayerId(GetTriggerPlayer())]-1
if oUw()then
set X[GetConvertedPlayerId(GetTriggerPlayer())]=0
endif
endif
endfunction
function OVw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function lVw takes nothing returns boolean
if not OVw()then
return false
endif
return true
endfunction
function cVw takes nothing returns boolean
if not(GetUnitAbilityLevelSwapped(1093684017,GetEnumUnit())==0)then
return false
endif
if not(GetUnitAbilityLevelSwapped(1093684018,GetEnumUnit())==0)then
return false
endif
return true
endfunction
function oVw takes nothing returns boolean
if not cVw()then
return false
endif
return true
endfunction
function bVw takes nothing returns nothing
if lVw()then
if oVw()then
call UnitAddAbilityBJ(1093684017,GetEnumUnit())
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1093684017)
else
call IncUnitAbilityLevelSwapped(1093684017,GetEnumUnit())
call IncUnitAbilityLevelSwapped(1093684018,GetEnumUnit())
endif
else
call DoNothing()
endif
endfunction
function OXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@tauren")then
return false
endif
return true
endfunction
function lXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="~tauren")then
return false
endif
return true
endfunction
function bXw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(jSw))
if lXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],xSw)
elseif OXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],vSw)
else
call DoNothing()
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function bZw takes nothing returns nothing
set aw[dw]=1093677128
set nw[dw]="advanceddeathtower"
set dw=dw+1
set aw[dw]=1093677129
set nw[dw]="ancientprotector"
set dw=dw+1
set aw[dw]=1093677130
set nw[dw]="arcanetower"
set dw=dw+1
set aw[dw]=1093677131
set nw[dw]="archer"
set dw=dw+1
set aw[dw]=1093677132
set nw[dw]="archmage"
set dw=dw+1
set aw[dw]=1093677133
set nw[dw]="assassin"
set dw=dw+1
set aw[dw]=1093677134
set nw[dw]="avatarofvengeance"
set dw=dw+1
set aw[dw]=1093677135
set nw[dw]="banshee"
set dw=dw+1
set aw[dw]=1093677136
set nw[dw]="bardarachnathid"
set dw=dw+1
set aw[dw]=1093677650
set nw[dw]="blackarrow"
set dw=dw+1
set aw[dw]=1093677137
set nw[dw]="blackdragon"
set dw=dw+1
set aw[dw]=1093677138
set nw[dw]="bloodmage"
set dw=dw+1
set aw[dw]=1093677651
set nw[dw]="breathoffire"
set dw=dw+1
set aw[dw]=1093677652
set nw[dw]="breathoffrost"
set dw=dw+1
set aw[dw]=1093677140
set nw[dw]="cannontower"
set dw=dw+1
set aw[dw]=1093677653
set nw[dw]="charm"
set dw=dw+1
set aw[dw]=1093677142
set nw[dw]="chimaera"
set dw=dw+1
set aw[dw]=1093677654
set nw[dw]="clusterrockets"
set dw=dw+1
set aw[dw]=1093677143
set nw[dw]="couatl"
set dw=dw+1
set aw[dw]=1093677139
set nw[dw]="cryptfiend"
set dw=dw+1
set aw[dw]=1093679437
set nw[dw]="chainlightning"
set dw=dw+1
set aw[dw]=1093677655
set nw[dw]="darksummoning"
set dw=dw+1
set aw[dw]=1093677144
set nw[dw]="deathtower"
set dw=dw+1
set aw[dw]=1093677145
set nw[dw]="demolisher"
set dw=dw+1
set aw[dw]=1093677146
set nw[dw]="demonhunter"
set dw=dw+1
set aw[dw]=1093677360
set nw[dw]="destroyer"
set dw=dw+1
set aw[dw]=1093677361
set nw[dw]="draeneidemolisher"
set dw=dw+1
set aw[dw]=1093677362
set nw[dw]="dragonhawk"
set dw=dw+1
set aw[dw]=1093677363
set nw[dw]="druidofthetalon"
set dw=dw+1
set aw[dw]=1093677364
set nw[dw]="dryad"
set dw=dw+1
set aw[dw]=1093677366
set nw[dw]="faeriedragon"
set dw=dw+1
set aw[dw]=1093677878
set nw[dw]="faeriefire"
set dw=dw+1
set aw[dw]=1093677367
set nw[dw]="farseer"
set dw=dw+1
set aw[dw]=1093677368
set nw[dw]="firelord"
set dw=dw+1
set aw[dw]=1093677369
set nw[dw]="flyingmachine"
set dw=dw+1
set aw[dw]=1093677377
set nw[dw]="flyingmachinebombs"
set dw=dw+1
set aw[dw]=1093677657
set nw[dw]="frostbolt"
set dw=dw+1
set aw[dw]=1093677378
set nw[dw]="frostwyrm"
set dw=dw+1
set aw[dw]=1093677379
set nw[dw]="gargoyle"
set dw=dw+1
set aw[dw]=1093677380
set nw[dw]="glaivethrower"
set dw=dw+1
set aw[dw]=1093677381
set nw[dw]="gnollassassin"
set dw=dw+1
set aw[dw]=1093677382
set nw[dw]="goblinblaster"
set dw=dw+1
set aw[dw]=1093677383
set nw[dw]="greendrake"
set dw=dw+1
set aw[dw]=1093677384
set nw[dw]="gryphonrider"
set dw=dw+1
set aw[dw]=1093677141
set nw[dw]="guardtower"
set dw=dw+1
set aw[dw]=1093677386
set nw[dw]="humanbattleship"
set dw=dw+1
set aw[dw]=1093677387
set nw[dw]="huntress"
set dw=dw+1
set aw[dw]=1093677388
set nw[dw]="hydralisk"
set dw=dw+1
set aw[dw]=1093677389
set nw[dw]="illidan"
set dw=dw+1
set aw[dw]=1093677390
set nw[dw]="keeperofthegrove"
set dw=dw+1
set aw[dw]=1093677391
set nw[dw]="kodobeast"
set dw=dw+1
set aw[dw]=1093677392
set nw[dw]="lavaspawn"
set dw=dw+1
set aw[dw]=1093677393
set nw[dw]="lich"
set dw=dw+1
set aw[dw]=1093677879
set nw[dw]="lightningshield"
set dw=dw+1
set aw[dw]=1093677394
set nw[dw]="locust"
set dw=dw+1
set aw[dw]=1093677395
set nw[dw]="makruka"
set dw=dw+1
set aw[dw]=1093677874
set nw[dw]="massteleport"
set dw=dw+1
set aw[dw]=1093677396
set nw[dw]="meatwagon"
set dw=dw+1
set aw[dw]=1093677397
set nw[dw]="mortarteam"
set dw=dw+1
set aw[dw]=1093677398
set nw[dw]="mur'gul"
set dw=dw+1
set aw[dw]=1093677399
set nw[dw]="nagaseawitch"
set dw=dw+1
set aw[dw]=1093677400
set nw[dw]="necromancer"
set dw=dw+1
set aw[dw]=1093677385
set nw[dw]="nerubiantower"
set dw=dw+1
set aw[dw]=1093677872
set nw[dw]="orbofcorruption"
set dw=dw+1
set aw[dw]=1093677658
set nw[dw]="orbofdarkness"
set dw=dw+1
set aw[dw]=1093677873
set nw[dw]="orboffrost"
set dw=dw+1
set aw[dw]=1093677402
set nw[dw]="pandarenbrewmaster"
set dw=dw+1
set aw[dw]=1093677616
set nw[dw]="phoenix"
set dw=dw+1
set aw[dw]=1093677617
set nw[dw]="priest"
set dw=dw+1
set aw[dw]=1093677618
set nw[dw]="priestessofthemoon"
set dw=dw+1
set aw[dw]=1093677619
set nw[dw]="quilbeast"
set dw=dw+1
set aw[dw]=1093677621
set nw[dw]="reefelemental"
set dw=dw+1
set aw[dw]=1093677875
set nw[dw]="resurrection"
set dw=dw+1
set aw[dw]=1093677620
set nw[dw]="rexxar"
set dw=dw+1
set aw[dw]=1093677622
set nw[dw]="rifleman"
set dw=dw+1
set aw[dw]=1093677623
set nw[dw]="satyr"
set dw=dw+1
set aw[dw]=1093677624
set nw[dw]="serpentward"
set dw=dw+1
set aw[dw]=1093677625
set nw[dw]="shadowhunter"
set dw=dw+1
set aw[dw]=1093677634
set nw[dw]="shockwave"
set dw=dw+1
set aw[dw]=1093677633
set nw[dw]="siegeenginebarrage"
set dw=dw+1
set aw[dw]=1093677635
set nw[dw]="skeletalmage"
set dw=dw+1
set aw[dw]=1093677636
set nw[dw]="skyfurytower"
set dw=dw+1
set aw[dw]=1093677637
set nw[dw]="sludgeflinger"
set dw=dw+1
set aw[dw]=1093677641
set nw[dw]="snapdragon"
set dw=dw+1
set aw[dw]=1093677638
set nw[dw]="sorceress"
set dw=dw+1
set aw[dw]=1093677639
set nw[dw]="spellbreaker"
set dw=dw+1
set aw[dw]=1093677401
set nw[dw]="spirittower"
set dw=dw+1
set aw[dw]=1093677640
set nw[dw]="spiritofvengeance"
set dw=dw+1
set aw[dw]=1093677876
set nw[dw]="tomeofretraining"
set dw=dw+1
set aw[dw]=1093677642
set nw[dw]="trollbatrider"
set dw=dw+1
set aw[dw]=1093677643
set nw[dw]="trollheadhunter"
set dw=dw+1
set aw[dw]=1093677644
set nw[dw]="trollwitchdoctor"
set dw=dw+1
set aw[dw]=1093677645
set nw[dw]="tuskarr"
set dw=dw+1
set aw[dw]=1093677365
set nw[dw]="voidwalker"
set dw=dw+1
set aw[dw]=1093677877
set nw[dw]="warstomp"
set dw=dw+1
set aw[dw]=1093677646
set nw[dw]="warden"
set dw=dw+1
set aw[dw]=1093677647
set nw[dw]="waterelemental"
set dw=dw+1
set aw[dw]=1093677648
set nw[dw]="windrider"
set dw=dw+1
set aw[dw]=1093677649
set nw[dw]="wisp"
set dw=dw+1
set aw[dw]=1093677656
set nw[dw]="wispexplode"
set dw=dw+1
set aw[dw]=1093683542
set nw[dw]="cyclone"
set dw=dw+1
set aw[dw]=1093683543
set nw[dw]="tornado"
set dw=dw+1
set aw[dw]=1093679438
set nw[dw]="arcanemissile"
set dw=dw+1
set aw[dw]=1093679436
set nw[dw]="holybolt"
set dw=dw+1
set aw[dw]=1093679439
set nw[dw]="icebolt"
set dw=dw+1
set aw[dw]=1093683277
set nw[dw]="laserray"
set dw=dw+1
set aw[dw]=1093683012
set nw[dw]="fingerofdeath"
set dw=dw+1
set aw[dw]=1093683510
set nw[dw]="forkedlightning"
set dw=dw+1
set aw[dw]=1093683511
set nw[dw]="aerialshackles"
set dw=dw+1
set aw[dw]=1093683512
set nw[dw]="manaburn"
set dw=dw+1
set aw[dw]=1093683513
set nw[dw]="lifedrain"
set dw=dw+1
set aw[dw]=1093683521
set nw[dw]="siphonmana"
set dw=dw+1
set aw[dw]=1093683522
set nw[dw]="healingwave"
set dw=dw+1
set aw[dw]=1093683785
set nw[dw]="nagadeath"
set dw=dw+1
set aw[dw]=1093683786
set nw[dw]="ucanceldeath"
set dw=dw+1
set aw[dw]=1093683787
set nw[dw]="humanlargedeathexplode"
set dw=dw+1
set aw[dw]=1093683788
set nw[dw]="undeaddissipate"
set dw=dw+1
set aw[dw]=1093679435
set nw[dw]="spinningburninghead"
set dw=dw+1
set aw[dw]=1093684279
set nw[dw]="lightningmissile"
set dw=dw+1
set aw[dw]=1093683526
set nw[dw]="magefirebolt"
set dw=dw+1
set aw[dw]=1093683029
set nw[dw]="felfirebolt"
set dw=dw+1
set aw[dw]=1093683034
set nw[dw]="felbreathoffire"
set dw=dw+1
set aw[dw]=1093683030
set nw[dw]="felincinerate"
set dw=dw+1
set aw[dw]=1093683250
set nw[dw]="felliquidfire"
set dw=dw+1
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function bgr takes nothing returns boolean
return true
endfunction
function bhw takes nothing returns nothing
if GetSpellAbilityId()!=ZO then
return
endif
call Jgw(IO,GetUnitAbilityLevel(GetSpellAbilityUnit(),ZO),"attackonce",GetSpellTargetUnit())
call SaveUnitHandle(i,PO,GetHandleId(GetSpellTargetUnit()),GetSpellAbilityUnit())
endfunction
function bkw takes nothing returns nothing
if IsUnitEnemy(GetFilterUnit(),Rl)then
call UnitDamageTarget(fl,GetFilterUnit(),Tl,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endif
endfunction
function lUu takes real OUu returns real
return OUu*OUu
endfunction
function Rrs takes real ars,real nrs,real drs,real frs returns real
return lUu(drs-ars)+lUu(frs-nrs)
endfunction
function bou takes nothing returns nothing
local real lou=Rrs(ep,qp,reu(GetFilterDestructable()),k3)
if lou<pp then
set yp=GetFilterDestructable()
set pp=lou
endif
endfunction
function bvw takes nothing returns nothing
call CameraSetEQNoiseForPlayer(GetEnumPlayer(),4.00)
endfunction
function bxw takes nothing returns nothing
call CameraClearNoiseForPlayer(GetEnumPlayer())
endfunction
function c0u takes nothing returns boolean
return GetSpellAbilityId()==1095725665
endfunction
function c3w takes nothing returns boolean
if GetSpellAbilityId()==1093683289 then
return true
else
return false
endif
endfunction
function c8w takes nothing returns nothing
call TRw(AddSpecialEffectTarget("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",GetSpellTargetUnit(),"overhead"),GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682993))
endfunction
function c9r takes nothing returns boolean
set Zd=0
return true
endfunction
function cBw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function SJw takes nothing returns boolean
if not(ls[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
return true
endfunction
function cJw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],qiw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
call DisplayTextToForce(GetPlayersAll(),k[GetConvertedPlayerId(GetTriggerPlayer())-1]+GetPlayerName(GetTriggerPlayer())+"|R|CFF808040 вышел из игры.|R")
if SJw()then
call DisplayTextToForce(GetPlayersAll(),"TRIGSTR_1122")
set ls[GetConvertedPlayerId(GetTriggerPlayer())]=false
set ls[0]=true
endif
endfunction
function cKw takes nothing returns boolean
return GetSpellAbilityId()==1093683527
endfunction
function cLw takes nothing returns nothing
call KillDestructable(GetEnumDestructable())
endfunction
function SNw takes nothing returns boolean
if GetSpellAbilityId()==1097102189 then
return true
endif
if GetSpellAbilityId()==1097099635 then
return true
endif
if GetSpellAbilityId()==1097098094 then
return true
endif
if GetSpellAbilityId()==1097098088 then
return true
endif
if GetSpellAbilityId()==1097102957 then
return true
endif
if GetSpellAbilityId()==1094935653 then
return true
endif
return false
endfunction
function cNw takes nothing returns boolean
if not SNw()then
return false
endif
return true
endfunction
function SPw takes nothing returns boolean
if not(GetEventPlayerChatString()=="item "+M[GetForLoopIndexA()])then
return false
endif
return true
endfunction
function cPw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
set bj_forLoopAIndex=0
set bj_forLoopAIndexEnd=N
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if SPw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Vsw)
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function cQw takes nothing returns boolean
if not(ww==true)then
return false
endif
if not(SubStringBJ(GetEventPlayerChatString(),1,7)=="weather")then
return false
endif
return true
endfunction
function b7u takes string l7u returns boolean
set w3[MM]=l7u
set MM=MM+1
set Fd=wJs("when calling new_HashSet in ScmdPermissions, line 7")
set MM=MM-1
return true
endfunction
function cRo takes nothing returns boolean
set MM=0
return b7u("ScmdPermissions, line 1")
endfunction
function cRw takes nothing returns nothing
local integer iRw=Hl
local integer SRw=iRw+4096
if SRw<Jl then
set Hl=SRw
call ForForce(bj_FORCE_PLAYER[0],Eww)
else
set SRw=Jl
endif
loop
call FlushChildHashtable(i,iRw)
set iRw=iRw+1
exitwhen iRw==SRw
endloop
endfunction
function n5u takes string p5u returns nothing
local integer e5u
local integer q5u
local integer a5u
set w3[MM]=p5u
set MM=MM+1
set e5u=l7s(GetTriggeringTrigger())
set q5u=0
set a5u=iYu(ad,e5u,-1)-1
loop
exitwhen q5u>a5u
call NFo(0,Nio(nd,e5u,"when calling loadInt in ScmdDataTypes, line 936"),iYu(ad,e5u,q5u),"when calling resolve in ScmdDataTypes, line 936",0,null,0,null)
call KGo(5,inw,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 936")
set q5u=q5u+1
endloop
set MM=MM-1
endfunction
function cTo takes nothing returns nothing
set MM=0
call n5u("ScmdDataTypes, line 933")
endfunction
function cZw takes nothing returns nothing
set B[N]=1634099555
set M[N]="alleria'sfluteofaccuracy"
set N=N+1
set B[N]=1936749416
set M[N]="amuletofspellshield"
set N=N+1
set B[N]=1634362734
set M[N]="ancientjanggoofendurance"
set N=N+1
set B[N]=1650946932
set M[N]="beltofgiantstrength+6"
set N=N+1
set B[N]=1650814070
set M[N]="bootsofquel'thalas+6"
set N=N+1
set B[N]=1651732580
set M[N]="bootsofspeed"
set N=N+1
set B[N]=1668181858
set M[N]="circletofnobility"
set N=N+1
set B[N]=1918989411
set M[N]="clawsofattack+12"
set N=N+1
set B[N]=1918989366
set M[N]="clawsofattack+6"
set N=N+1
set B[N]=1918989369
set M[N]="clawsofattack+9"
set N=N+1
set B[N]=1668048493
set M[N]="cloakofflames"
set N=N+1
set B[N]=1668051812
set M[N]="cloakofshadows"
set N=N+1
set B[N]=1668446579
set M[N]="crystalball"
set N=N+1
set B[N]=1685288301
set M[N]="diamondofsummoning"
set N=N+1
set B[N]=1920169009
set M[N]="gauntletsofogrestrength+3"
set N=N+1
set B[N]=1734567276
set M[N]="glovesofhaste"
set N=N+1
set B[N]=1752588652
set M[N]="helmofvalor"
set N=N+1
set B[N]=1751348590
set M[N]="hoodofcunning"
set N=N+1
set B[N]=1919448168
set M[N]="khadgar'sgemofhealth"
set N=N+1
set B[N]=1802529134
set M[N]="khadgar'spipeofinsight"
set N=N+1
set B[N]=1818715240
set M[N]="legiondoom-horn"
set N=N+1
set B[N]=1919512113
set M[N]="mantleofintelligence+3"
set N=N+1
set B[N]=1835233141
set M[N]="medallionofcourage"
set N=N+1
set B[N]=1868850534
set M[N]="orbofdarkness"
set N=N+1
set B[N]=1885695602
set M[N]="pendantofenergy"
set N=N+1
set B[N]=1886219873
set M[N]="pendantofmana"
set N=N+1
set B[N]=1886549620
set M[N]="periaptofvitality"
set N=N+1
set B[N]=1919182129
set M[N]="ringofprotection+2"
set N=N+1
set B[N]=1919182130
set M[N]="ringofprotection+3"
set N=N+1
set B[N]=1919182131
set M[N]="ringofprotection+4"
set N=N+1
set B[N]=1919707494
set M[N]="ringofregeneration"
set N=N+1
set B[N]=1667854953
set M[N]="robeofthemagi+6"
set N=N+1
set B[N]=1651663203
set M[N]="runedbracers"
set N=N+1
set B[N]=1935827816
set M[N]="scourgebonechimes"
set N=N+1
set B[N]=1918986033
set M[N]="slippersofagility+3"
set N=N+1
set B[N]=1920428410
set M[N]="sobimask"
set N=N+1
set B[N]=1936943468
set M[N]="staffofsilence"
set N=N+1
set B[N]=1937007980
set M[N]="staffofteleportation"
set N=N+1
set B[N]=1702261868
set M[N]="talismanofevasion"
set N=N+1
set B[N]=1818784628
set M[N]="thelionhornofstormwind"
set N=N+1
set B[N]=2002874980
set M[N]="warsongbattledrums"
set N=N+1
set B[N]=2003397732
set M[N]="amuletofthewild"
set N=N+1
set B[N]=1634626408
set M[N]="ankhofreincarnation"
set N=N+1
set B[N]=1718055787
set M[N]="bookofthedead"
set N=N+1
set B[N]=1718051943
set M[N]="demonicfigurine"
set N=N+1
set B[N]=2003335012
set M[N]="healingwards"
set N=N+1
set B[N]=1751937908
set M[N]="healthstone"
set N=N+1
set B[N]=1936220530
set M[N]="iceshard"
set N=N+1
set B[N]=1768842867
set M[N]="infernostone"
set N=N+1
set B[N]=1835955060
set M[N]="manastone"
set N=N+1
set B[N]=1885628790
set M[N]="potionofdivinity"
set N=N+1
set B[N]=1885825125
set M[N]="potionofgreaterhealing"
set N=N+1
set B[N]=1885826401
set M[N]="potionofgreatermana"
set N=N+1
set B[N]=1886287477
set M[N]="potionofinvulnerability"
set N=N+1
set B[N]=1886350702
set M[N]="potionofomniscience"
set N=N+1
set B[N]=1886545267
set M[N]="potionofrestoration"
set N=N+1
set B[N]=1718055524
set M[N]="reddrakeegg"
set N=N+1
set B[N]=1919248947
set M[N]="replenishmentpotion"
set N=N+1
set B[N]=1935765092
set M[N]="scrollofanimatedead"
set N=N+1
set B[N]=1936876915
set M[N]="scrollofrestoration"
set N=N+1
set B[N]=1936880227
set M[N]="scrollofresurrection"
set N=N+1
set B[N]=1936879474
set M[N]="scrollofthebeast"
set N=N+1
set B[N]=2004055908
set M[N]="sentrywards"
set N=N+1
set B[N]=1718052456
set M[N]="spikedcollar"
set N=N+1
set B[N]=1718055527
set M[N]="stonetoken"
set N=N+1
set B[N]=1953461367
set M[N]="talismanofthewild"
set N=N+1
set B[N]=2003397740
set M[N]="wandofillusion"
set N=N+1
set B[N]=2003596132
set M[N]="wandoflightningshield"
set N=N+1
set B[N]=2003791219
set M[N]="wandofmanastealing"
set N=N+1
set B[N]=2004052083
set M[N]="wandofshadowsight"
set N=N+1
set B[N]=2003007843
set M[N]="wandofthewind"
set N=N+1
set B[N]=1819107954
set M[N]="bundleoflumber"
set N=N+1
set B[N]=1734766450
set M[N]="glyphoffortification"
set N=N+1
set B[N]=1735355758
set M[N]="glyphofomniscience"
set N=N+1
set B[N]=1735751273
set M[N]="glyphofultravision"
set N=N+1
set B[N]=1735355492
set M[N]="goldcoins"
set N=N+1
set B[N]=1835101800
set M[N]="manualofhealth"
set N=N+1
set B[N]=1919183219
set M[N]="runeofdispelmagic"
set N=N+1
set B[N]=1919444275
set M[N]="runeofgreaterhealing"
set N=N+1
set B[N]=1919770930
set M[N]="runeofgreatermana"
set N=N+1
set B[N]=1920099634
set M[N]="runeofgreaterresurrection"
set N=N+1
set B[N]=1919444274
set M[N]="runeofhealing"
set N=N+1
set B[N]=1919444273
set M[N]="runeoflesserhealing"
set N=N+1
set B[N]=1920099633
set M[N]="runeoflesserresurrection"
set N=N+1
set B[N]=1919770990
set M[N]="runeofmana"
set N=N+1
set B[N]=1920099682
set M[N]="runeofrebirth"
set N=N+1
set B[N]=1920099699
set M[N]="runeofrestoration"
set N=N+1
set B[N]=1920168051
set M[N]="runeofshielding"
set N=N+1
set B[N]=1920168036
set M[N]="runeofspeed"
set N=N+1
set B[N]=1920168044
set M[N]="runeofspiritlink"
set N=N+1
set B[N]=1920426356
set M[N]="runeofthewatcher"
set N=N+1
set B[N]=1918989414
set M[N]="clawsofattack+15"
set N=N+1
set B[N]=1667984999
set M[N]="crownofkings+5"
set N=N+1
set B[N]=1684370275
set M[N]="kelensdaggerofescape"
set N=N+1
set B[N]=1836016756
set M[N]="maskofdeath"
set N=N+1
set B[N]=1868984943
set M[N]="orboffrost"
set N=N+1
set B[N]=1919182132
set M[N]="ringofprotection+5"
set N=N+1
set B[N]=1885564018
set M[N]="claritypotion"
set N=N+1
set B[N]=1752394870
set M[N]="healingsalve"
set N=N+1
set B[N]=1953719156
set M[N]="ivorytower"
set N=N+1
set B[N]=1886151532
set M[N]="lesserclaritypotion"
set N=N+1
set B[N]=1835233897
set M[N]="mechanicalcritter"
set N=N+1
set B[N]=1836019566
set M[N]="moonstone"
set N=N+1
set B[N]=1885889889
set M[N]="potionofhealing"
set N=N+1
set B[N]=1885957750
set M[N]="potionofinvisibility"
set N=N+1
set B[N]=1886287468
set M[N]="potionoflesserinvulnerability"
set N=N+1
set B[N]=1886216558
set M[N]="potionofmana"
set N=N+1
set B[N]=1919837539
set M[N]="rodofnecromancy"
set N=N+1
set B[N]=1936422252
set M[N]="sacrificialskull"
set N=N+1
set B[N]=1936221537
set M[N]="scrollofhealing"
set N=N+1
set B[N]=1936548206
set M[N]="scrollofmana"
set N=N+1
set B[N]=1936749167
set M[N]="scrollofprotection"
set N=N+1
set B[N]=1936876903
set M[N]="scrollofregeneration"
set N=N+1
set B[N]=1936220531
set M[N]="scrollofspeed"
set N=N+1
set B[N]=1937012592
set M[N]="scrolloftownportal"
set N=N+1
set B[N]=1936288875
set M[N]="spidersilkbroach"
set N=N+1
set B[N]=1936614759
set M[N]="staffofnegation"
set N=N+1
set B[N]=1936941422
set M[N]="staffofsanctuary"
set N=N+1
set B[N]=1952670067
set M[N]="tinycastle"
set N=N+1
set B[N]=1952936552
set M[N]="tinygreathall"
set N=N+1
set B[N]=1953654132
set M[N]="tomeofretraining"
set N=N+1
set B[N]=1986096496
set M[N]="vampiricpotion"
set N=N+1
set B[N]=2003723623
set M[N]="wandofnegation"
set N=N+1
set B[N]=2003723637
set M[N]="wandofneutralization"
set N=N+1
set B[N]=1803117164
set M[N]="bloodkey"
set N=N+1
set B[N]=1667786099
set M[N]="cheese"
set N=N+1
set B[N]=1652187749
set M[N]="emptyvial"
set N=N+1
set B[N]=1701734259
set M[N]="enchantedgemstone"
set N=N+1
set B[N]=1652187750
set M[N]="fullvial"
set N=N+1
set B[N]=1735222898
set M[N]="gemfragment"
set N=N+1
set B[N]=1818584167
set M[N]="gerard'slostledger"
set N=N+1
set B[N]=1803118440
set M[N]="ghostkey"
set N=N+1
set B[N]=1735356530
set M[N]="glyphofpurification"
set N=N+1
set B[N]=1635412082
set M[N]="hearofaszune"
set N=N+1
set B[N]=1668180078
set M[N]="hornofcenarius"
set N=N+1
set B[N]=1684760183
set M[N]="kegofthunderwater"
set N=N+1
set B[N]=1798532403
set M[N]="keyofthreemoons"
set N=N+1
set B[N]=1835496555
set M[N]="magickeychain"
set N=N+1
set B[N]=1836020340
set M[N]="mogrin'sreport"
set N=N+1
set B[N]=1803119982
set M[N]="moonkey"
set N=N+1
set B[N]=1798532401
set M[N]="mooncrystal"
set N=N+1
set B[N]=1785753204
set M[N]="notetojainaproudmoore"
set N=N+1
set B[N]=1798532402
set M[N]="partialkeyofthethreemoons"
set N=N+1
set B[N]=1885891700
set M[N]="phatlewt"
set N=N+1
set B[N]=1935895664
set M[N]="secretlevelpowerup"
set N=N+1
set B[N]=1936683622
set M[N]="shadoworbfragment"
set N=N+1
set B[N]=1936226148
set M[N]="shimmerweed"
set N=N+1
set B[N]=1936421492
set M[N]="skeletalartifact"
set N=N+1
set B[N]=1735160683
set M[N]="skullofgul'dan"
set N=N+1
set B[N]=1803121518
set M[N]="sunkey"
set N=N+1
set B[N]=1936025714
set M[N]="theheartofsearinox"
set N=N+1
set B[N]=1953000549
set M[N]="thunderlizardegg"
set N=N+1
set B[N]=1685088357
set M[N]="thunderphoenixegg"
set N=N+1
set B[N]=1685350498
set M[N]="thunderbloombulb"
set N=N+1
set B[N]=1802793581
set M[N]="urnofkingterenas"
set N=N+1
set B[N]=2004118631
set M[N]="wirt'sleg"
set N=N+1
set B[N]=2003790951
set M[N]="wirt'sotherleg"
set N=N+1
set B[N]=1634562659
set M[N]="amuletofrecall"
set N=N+1
set B[N]=1635279219
set M[N]="ancestralstaff"
set N=N+1
set B[N]=1634625127
set M[N]="ancientfigurine"
set N=N+1
set B[N]=1885433203
set M[N]="anti-magicpotion"
set N=N+1
set B[N]=1634890595
set M[N]="arcanescroll"
set N=N+1
set B[N]=1634890600
set M[N]="arcaniteshield"
set N=N+1
set B[N]=1634951788
set M[N]="assassin'sblade"
set N=N+1
set B[N]=1651798900
set M[N]="battlestandard"
set N=N+1
set B[N]=1651270241
set M[N]="bladebanearmor"
set N=N+1
set B[N]=1650878578
set M[N]="bloodfeather'sheart"
set N=N+1
set B[N]=1651663207
set M[N]="bracerofagility"
set N=N+1
set B[N]=1668248428
set M[N]="celestialorbofsouls"
set N=N+1
set B[N]=1918989363
set M[N]="clawsofattack+3"
set N=N+1
set B[N]=1937010791
set M[N]="clockworkpenguin"
set N=N+1
set B[N]=1668441204
set M[N]="crownofthedeathlord"
set N=N+1
set B[N]=1685353314
set M[N]="drek'thar'sspellbook"
set N=N+1
set B[N]=1685221480
set M[N]="druidpouch"
set N=N+1
set B[N]=1685418868
set M[N]="dustofappearance"
set N=N+1
set B[N]=1936221550
set M[N]="enchantedshield"
set N=N+1
set B[N]=1701738092
set M[N]="enchantedvial"
set N=N+1
set B[N]=1702060406
set M[N]="essenceofaszune"
set N=N+1
set B[N]=1718773863
set M[N]="firehandgauntlets"
set N=N+1
set B[N]=1718056302
set M[N]="flaregun"
set N=N+1
set B[N]=1719104371
set M[N]="frostwyrmskullshield"
set N=N+1
set B[N]=1718773604
set M[N]="frostguard"
set N=N+1
set B[N]=1734700404
set M[N]="gemoftrueseeing"
set N=N+1
set B[N]=1735816045
set M[N]="glovesofspellmastery"
set N=N+1
set B[N]=1735352941
set M[N]="goblinlandmines"
set N=N+1
set B[N]=1952803955
set M[N]="goblinnightscope"
set N=N+1
set B[N]=1919248948
set M[N]="greaterreplenishmentpotion"
set N=N+1
set B[N]=1919248950
set M[N]="greaterscrollofreplenishment"
set N=N+1
set B[N]=1735553900
set M[N]="grimoireofsouls"
set N=N+1
set B[N]=1751282792
set M[N]="helmofbattlethirst"
set N=N+1
set B[N]=1936093031
set M[N]="hornoftheclouds"
set N=N+1
set B[N]=1718378855
set M[N]="humanflag"
set N=N+1
set B[N]=1769431666
set M[N]="ironwoodbranch"
set N=N+1
set B[N]=1784967790
set M[N]="jadering"
set N=N+1
set B[N]=1801937260
set M[N]="kegofale"
set N=N+1
set B[N]=1802268013
set M[N]="killmaim"
set N=N+1
set B[N]=1919248946
set M[N]="lesserreplenishmentpotion"
set N=N+1
set B[N]=1919248949
set M[N]="lesserscrollofreplenishment"
set N=N+1
set B[N]=1819177582
set M[N]="lion'sring"
set N=N+1
set B[N]=1835823988
set M[N]="maulofstrength"
set N=N+1
set B[N]=1835955046
set M[N]="mindstaff"
set N=N+1
set B[N]=1919248945
set M[N]="minorreplenishmentpotion"
set N=N+1
set B[N]=1819636325
set M[N]="monsterlure"
set N=N+1
set B[N]=1853059177
set M[N]="necklaceofspellimmunity"
set N=N+1
set B[N]=1852206183
set M[N]="nightelfflag"
set N=N+1
set B[N]=1868787570
set M[N]="orbofcorruption"
set N=N+1
set B[N]=1868982642
set M[N]="orboffire"
set N=N+1
set B[N]=1735156847
set M[N]="orbofkil'jaeden"
set N=N+1
set B[N]=1869375847
set M[N]="orboflightning"
set N=N+1
set B[N]=1869375794
set M[N]="orboflightning2"
set N=N+1
set B[N]=1869835375
set M[N]="orbofslow"
set N=N+1
set B[N]=1870030190
set M[N]="orbofvenom"
set N=N+1
set B[N]=1868983399
set M[N]="orcflag"
set N=N+1
set B[N]=1885825390
set M[N]="potionofgreaterinvisibility"
set N=N+1
set B[N]=1886613604
set M[N]="potionofspeed"
set N=N+1
set B[N]=1919182128
set M[N]="ringofprotection+1"
set N=N+1
set B[N]=1919841136
set M[N]="ringofsuperiority"
set N=N+1
set B[N]=1918987569
set M[N]="ringofthearchmagi+1"
set N=N+1
set B[N]=1918987572
set M[N]="ringofthearchmagi+4"
set N=N+1
set B[N]=1918987570
set M[N]="ringofthearchmagi+2"
set N=N+1
set B[N]=1918987571
set M[N]="ringofthearchmagi+3"
set N=N+1
set B[N]=1918987572
set M[N]="ringofthearchmagi"
set N=N+1
set B[N]=1920296820
set M[N]="runedgauntlets"
set N=N+1
set B[N]=1920298352
set M[N]="rustyminingpick"
set N=N+1
set B[N]=1752134252
set M[N]="sacredrelic"
set N=N+1
set B[N]=1935894636
set M[N]="scepterofhealing"
set N=N+1
set B[N]=1667460452
set M[N]="scepterofmastery"
set N=N+1
set B[N]=1919906931
set M[N]="scepterofthesea"
set N=N+1
set B[N]=1935897964
set M[N]="scrolloftheunholylegion"
set N=N+1
set B[N]=1936876132
set M[N]="searingblade"
set N=N+1
set B[N]=1936880748
set M[N]="serathil"
set N=N+1
set B[N]=1936683569
set M[N]="shadoworb+1"
set N=N+1
set B[N]=1936683617
set M[N]="shadoworb+10"
set N=N+1
set B[N]=1936683617
set M[N]="shadoworb"
set N=N+1
set B[N]=1936683570
set M[N]="shadoworb+2"
set N=N+1
set B[N]=1936683571
set M[N]="shadoworb+3"
set N=N+1
set B[N]=1936683572
set M[N]="shadoworb+4"
set N=N+1
set B[N]=1936683573
set M[N]="shadoworb+5"
set N=N+1
set B[N]=1936683574
set M[N]="shadoworb+6"
set N=N+1
set B[N]=1936683575
set M[N]="shadoworb+7"
set N=N+1
set B[N]=1936683576
set M[N]="shadoworb+8"
set N=N+1
set B[N]=1936683577
set M[N]="shadoworb+9"
set N=N+1
set B[N]=1936221047
set M[N]="shamanclaws"
set N=N+1
set B[N]=1936225389
set M[N]="shamanictotem"
set N=N+1
set B[N]=1936222318
set M[N]="shieldofhonor"
set N=N+1
set B[N]=1936221300
set M[N]="shieldofthedeathlord"
set N=N+1
set B[N]=1936224883
set M[N]="shimmerglazeroast"
set N=N+1
set B[N]=1936421736
set M[N]="skullshield"
set N=N+1
set B[N]=1936684396
set M[N]="soul"
set N=N+1
set B[N]=1735618421
set M[N]="soulgem"
set N=N+1
set B[N]=1935830891
set M[N]="spellbook"
set N=N+1
set B[N]=1936749166
set M[N]="spiderring"
set N=N+1
set B[N]=1936749157
set M[N]="staffofpreservation"
set N=N+1
set B[N]=1937011301
set M[N]="staffofreanimation"
set N=N+1
set B[N]=1937012577
set M[N]="sturdywaraxe"
set N=N+1
set B[N]=1952998509
set M[N]="thunderlizarddiamond"
set N=N+1
set B[N]=1952604523
set M[N]="tinyaltarofkings"
set N=N+1
set B[N]=1952604530
set M[N]="tinybarracks"
set N=N+1
set B[N]=1952609133
set M[N]="tinyblacksmith"
set N=N+1
set B[N]=1952866674
set M[N]="tinyfarm"
set N=N+1
set B[N]=1953265005
set M[N]="tinylumbermill"
set N=N+1
set B[N]=1953330019
set M[N]="tomeofsacrifices"
set N=N+1
set B[N]=1953328500
set M[N]="totemofmight"
set N=N+1
set B[N]=1969646695
set M[N]="undeadflag"
set N=N+1
set B[N]=1986290796
set M[N]="voodoodoll"
set N=N+1
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function ccu takes nothing returns boolean
local real icu
local real Scu
set sp=CreateGroup()
set ip=0
set Sp=Ee
set cp=0
set op=Filter(waw)
set lp=0
set bp=Rect(0.,0.,0.,0.)
set yp=null
set pp=Ua
set icu=wY
set Scu=uY
set ep=icu
set qp=Scu
return true
endfunction
function chw takes nothing returns nothing
local unit Shw
if GetUnitAbilityLevel(GetTriggerUnit(),1110455623)==0 then
set Shw=null
return
endif
set Shw=GetTriggerUnit()
if GetUnitAbilityLevel(Shw,1112040563)>0 or GetUnitAbilityLevel(Shw,1110455377)>0 or GetUnitAbilityLevel(Shw,1110455619)>0 or GetUnitAbilityLevel(Shw,1110455620)>0 or GetUnitAbilityLevel(Shw,1110455621)>0 or GetUnitAbilityLevel(Shw,1110455622)>0 then
call UnitRemoveAbility(Shw,1112040563)
call UnitRemoveAbility(Shw,1110455377)
call UnitRemoveAbility(Shw,1110455619)
call UnitRemoveAbility(Shw,1110455620)
call UnitRemoveAbility(Shw,1110455621)
call UnitRemoveAbility(Shw,1110455622)
else
call Jgw(1093684537,GetUnitAbilityLevel(GetEventDamageSource(),1093684545),"acidbomb",Shw)
endif
call UnitRemoveAbility(Shw,1110455623)
set Shw=null
set Shw=null
endfunction
function cju takes nothing returns boolean
set qq=256
set aq=128
set nq=3
return true
endfunction
function ckw takes nothing returns nothing
call GroupRemoveUnit(dl,LoadUnitHandle(i,y,GetHandleId(GetExpiredTimer())))
call ATw(GetExpiredTimer())
endfunction
function cmw takes nothing returns nothing
call UnitDamageTargetBJ(Nu,GetEnumUnit(),Uu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_FIRE)
call AddSpecialEffectTargetUnitBJ("origin",GetEnumUnit(),"Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endfunction
function cxw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function d6w takes nothing returns nothing
call UnitDamageTarget(ht,GetEnumUnit(),15*gt,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endfunction
function d7w takes nothing returns nothing
local unit n7w=CreateUnitAtLoc(Player(PLAYER_NEUTRAL_PASSIVE),1747995215,GetUnitLoc(GetEnumUnit()),270.00)
call UnitAddAbility(n7w,1093684055)
call IssueTargetOrder(n7w,"invisibility",GetEnumUnit())
call eRw(n7w,3.)
set n7w=null
set n7w=null
endfunction
function d8w takes nothing returns boolean
return GetSpellAbilityId()==1098086193 or GetSpellAbilityId()==1098086194
endfunction
function dHw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,5)=="time ")then
return false
endif
return true
endfunction
function dIw takes nothing returns boolean
return SubString(GetEventPlayerChatString(),0,1)=="@"
endfunction
function dJw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetOwningPlayer(GetSoldUnit()),1747988528)
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Yiw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function nLw takes nothing returns boolean
if not(Bw[1]==0)then
return false
endif
return true
endfunction
function dLw takes nothing returns nothing
if nLw()then
call EnableTrigger(HS)
endif
set Bw[1]=Bw[1]+1
set Bw[2]=Bw[2]+1
set Nw[1]=GetUnitLoc(Mw)
set wu[Bw[2]]=DistanceBetweenPoints(Nw[1],uu)
set ru[Bw[2]]=0.00
set su[Bw[2]]=tu
set iu[Bw[2]]=Mw
set Su[Bw[2]]=AngleBetweenPoints(Nw[1],uu)
set cu[Bw[2]]=ou
set Ou[Bw[2]]=lu
set bu[Bw[2]]=yu
set pu[Bw[2]]=eu*wu[Bw[2]]
call SetUnitPathing(Mw,false)
call SetUnitTimeScalePercent(Mw,qu*100.00)
call SetUnitAnimation(Mw,lu)
call GroupAddUnitSimple(Mw,au)
call UnitAddAbilityBJ(1098015094,Mw)
call UnitRemoveAbilityBJ(1098015094,Mw)
call RemoveLocation(Nw[1])
call RemoveLocation(uu)
endfunction
function Ztc takes string Wtc returns integer
local integer Etc
set w3[MM]=Wtc
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set Etc=ZG
set UG[Etc]=694
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_SotFRP_Locale.","when calling error in SotFRP_Locale, line 34")
set Etc=0
endif
else
set EG=EG-1
set Etc=WG[EG]
set UG[Etc]=694
endif
set MM=MM-1
return Etc
endfunction
function GvS takes string TvS returns integer
local integer YvS
set w3[MM]=TvS
set MM=MM+1
if AF==0 then
if DF<32768 then
set DF=DF+1
set YvS=DF
set HF[YvS]=1397
else
call Mau("Out of memory: Could not create Locale.","when calling error in Locale, line 8")
set YvS=0
endif
else
set AF=AF-1
set YvS=PF[AF]
set HF[YvS]=1397
endif
set MM=MM-1
return YvS
endfunction
function N4s takes integer B4s returns nothing
endfunction
function Lpc takes string Jpc returns integer
local integer Kpc
set w3[MM]=Jpc
set MM=MM+1
if Wm==0 then
if Em<32768 then
set Em=Em+1
set Kpc=Em
else
call Mau("Out of memory: Could not create StringStringHashMap.","when calling error in Utility, line 139")
set Kpc=0
endif
else
set Wm=Wm-1
set Kpc=Qm[Wm]
endif
set MM=MM-1
return Kpc
endfunction
function nRS takes integer aRS returns nothing
endfunction
function YRS takes integer TRS returns nothing
call nRS(TRS)
call InitHashtable()
call InitHashtable()
endfunction
function RRS takes string dRS returns integer
local integer fRS
set w3[MM]=dRS
set MM=MM+1
set fRS=Lpc("when calling alloc_StringStringHashMap in Utility, line 144")
call YRS(fRS)
set MM=MM-1
return fRS
endfunction
function t2s takes integer r2s,string s2s returns nothing
set w3[MM]=s2s
set MM=MM+1
call N4s(r2s)
call RRS("when calling new_StringStringHashMap in Locale, line 18")
set gP[r2s]=O7S("when calling new_Table in Locale, line 19")
set hP[r2s]=wJs("when calling new_HashSet in Locale, line 20")
set FP[r2s]=HDs("when calling new_HashMap in Locale, line 21")
set kP[r2s]=InitHashtable()
set jP[r2s]=InitHashtable()
set MM=MM-1
endfunction
function u2s takes string M4s returns integer
local integer w2s
set w3[MM]=M4s
set MM=MM+1
set w2s=GvS("when calling alloc_Locale in Locale, line 17")
call t2s(w2s,"when calling construct_Locale in Locale, line 17")
set MM=MM-1
return w2s
endfunction
function par takes string bar returns boolean
local integer yar
set w3[MM]=bar
set MM=MM+1
set nf=u2s("when calling new_Locale in SotFRP_Locale, line 8")
set df=u2s("when calling new_Locale in SotFRP_Locale, line 9")
set yar=Ztc("when calling alloc_CallbackSingle_nullTimer_SotFRP_Locale in SotFRP_Locale, line 34")
call KGs(yar)
call Cou(yar,"when calling nullTimer in SotFRP_Locale, line 34")
set MM=MM-1
return true
endfunction
function dRo takes nothing returns boolean
set MM=0
return par("SotFRP_Locale, line 1")
endfunction
function VcS takes integer CcS returns nothing
endfunction
function jHr takes nothing returns nothing
set jT=jT-1
endfunction
function kHr takes unit FHr returns nothing
set kT[jT]=FHr
set jT=jT+1
endfunction
function u0s takes unit M9s,integer w0s returns nothing
call SetUnitUserData(M9s,w0s)
endfunction
function McS takes integer BcS,unit NcS returns nothing
call VcS(BcS)
set KB[BcS]=NcS
call u0s(KB[BcS],BcS)
call kHr(NcS)
call nxr(hT)
call jHr()
endfunction
function xyc takes string kyc returns integer
local integer jyc
set w3[MM]=kyc
set MM=MM+1
if Vv==0 then
if Bv<32768 then
set Bv=Bv+1
set jyc=Bv
set Nv[jyc]=1681
else
call Mau("Out of memory: Could not create UnitIndex.","when calling error in UnitIndexer, line 172")
set jyc=0
endif
else
set Vv=Vv-1
set jyc=Cv[Vv]
set Nv[jyc]=1681
endif
set MM=MM-1
return jyc
endfunction
function JcS takes unit AcS,string DcS returns integer
local integer HcS
set w3[MM]=DcS
set MM=MM+1
set HcS=xyc("when calling alloc_UnitIndex in UnitIndexer, line 181")
call McS(HcS,AcS)
set MM=MM-1
return HcS
endfunction
function UHr takes unit WHr,string EHr returns integer
local integer ZHr
set w3[MM]=EHr
set MM=MM+1
set ZHr=U7s(WHr)
if ZHr==0 then
set ZHr=JcS(WHr,"when calling new_UnitIndex in UnitIndexer, line 135")
endif
set MM=MM-1
return ZHr
endfunction
function vHr takes unit xHr returns boolean
return true
endfunction
function CHr takes string XHr returns nothing
set w3[MM]=XHr
set MM=MM+1
if vHr(kmu())then
call UHr(kmu(),"when calling toUnitIndex in UnitIndexer, line 196")
endif
set MM=MM-1
endfunction
function dTo takes nothing returns nothing
set MM=0
call CHr("UnitIndexer, line 196")
endfunction
function dUw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAll(GetTriggerPlayer())
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],osw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function d_u takes nothing returns boolean
local integer n_u=sy
call fGw(n_u)
call SetRect(fb[n_u],Rb[n_u],Tb[n_u],Yb[n_u],Gb[n_u])
call TGw(n_u)
return true
endfunction
function djw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function dvw takes nothing returns nothing
set Ju[8]=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[8],bj_UNIT_FACING)
call UnitAddAbilityBJ(1093678659,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"slow",GetEnumUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
endfunction
function ngu takes integer qgu,integer agu returns integer
return BlzBitXor(qgu,agu)
endfunction
function initPows takes nothing returns nothing
local integer allPows
local integer i_1
local integer temp
local integer i_2
local integer temp_1
set gy[0]=1
set allPows=1
set i_1=1
set temp=Gy-1
loop
exitwhen i_1>temp
set gy[i_1]=gy[i_1-1]*2
set allPows=egu(allPows,gy[i_1])
set i_1=i_1+1
endloop
set i_2=0
set temp_1=Gy-1
loop
exitwhen i_2>temp_1
set hy[i_2]=ngu(allPows,gy[i_2])
set i_2=i_2+1
endloop
endfunction
function dwu takes nothing returns boolean
set Gy=32
call initPows()
return true
endfunction
function e3w takes nothing returns boolean
if GetSpellAbilityId()==1093683289 then
return true
else
return false
endif
endfunction
function e4w takes nothing returns boolean
if GetSpellAbilityId()==1093679432 then
return true
endif
return false
endfunction
function eAw takes nothing returns boolean
return GetFilterPlayer()==GetTriggerPlayer()
endfunction
function eEw takes nothing returns nothing
call SetBlightRadiusLocBJ(false,GetEnumPlayer(),G,572.00)
endfunction
function eHw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.,G,Ktw)
call RemoveLocation(G)
endfunction
function eJw takes nothing returns nothing
call GetConvertedPlayerId(GetTriggerPlayer())
call GetUnitLoc(GetEnumUnit())
endfunction
function eLw takes nothing returns boolean
if not(GetSpellAbilityId()==1093682506)then
return false
endif
return true
endfunction
function ONw takes nothing returns boolean
if GetSpellAbilityId()==1097098094 then
return true
endif
if GetSpellAbilityId()==1094935653 then
return true
endif
return false
endfunction
function bNw takes nothing returns boolean
if not ONw()then
return false
endif
return true
endfunction
function oNw takes nothing returns boolean
if GetSpellAbilityId()==1097102189 then
return true
endif
if GetSpellAbilityId()==1097099635 then
return true
endif
if GetSpellAbilityId()==1097098088 then
return true
endif
if GetSpellAbilityId()==1097102957 then
return true
endif
return false
endfunction
function pNw takes nothing returns boolean
if not oNw()then
return false
endif
return true
endfunction
function eNw takes nothing returns nothing
if pNw()then
call ForGroupBJ(GetUnitsInRangeOfLocAll(200.00,GetSpellTargetLoc()),aow)
elseif bNw()then
call ForGroupBJ(GetUnitsInRangeOfLocAll(250.00,GetSpellTargetLoc()),now)
else
call DoNothing()
endif
endfunction
function ePw takes nothing returns nothing
local string yPw=GetEventPlayerChatString()
local integer pPw=S2I(SubString(yPw,5,StringLength(yPw)))
if pPw>999 then
set pPw=999
endif
call SetItemCharges(UnitItemInSlot(GetEnumUnit(),S2I(SubString(yPw,3,4))-1),pPw)
set pPw=0
set yPw=null
endfunction
function bZS takes string OZS returns integer
local integer lZS
set w3[MM]=OZS
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set lZS=ZG
set UG[lZS]=684
else
call Mau("Out of memory: Could not create CallbackSingle_doAfter_PlayerDefinedUnitTypes.","when calling error in PlayerDefinedUnitTypes, line 89")
set lZS=0
endif
else
set EG=EG-1
set lZS=WG[EG]
set UG[lZS]=684
endif
set MM=MM-1
return lZS
endfunction
function EQu takes string QQu returns boolean
local integer WQu
set w3[MM]=QQu
set MM=MM+1
set Oa=120
set ca=0
set WQu=bZS("when calling alloc_CallbackSingle_doAfter_PlayerDefinedUnitTypes in PlayerDefinedUnitTypes, line 89")
call KGs(WQu)
call Jou(1.,WQu,"when calling doAfter in PlayerDefinedUnitTypes, line 89")
set MM=MM-1
return true
endfunction
function eRo takes nothing returns boolean
set MM=0
return EQu("PlayerDefinedUnitTypes, line 1")
endfunction
function BTu takes hashtable XTu,integer CTu,integer VTu returns destructable
return LoadDestructableHandle(XTu,CTu,VTu)
endfunction
function W6S takes integer m6S,integer Q6S returns destructable
return BTu(VR,m6S,Q6S)
endfunction
function KSo takes integer ASo,integer DSo,string HSo returns destructable
local destructable JSo
set w3[MM]=HSo
set MM=MM+1
if Yh[ASo]==0 then
if ASo==0 then
call Mau("Nullpointer exception when calling Table.loadDestructable","when calling error in Table, line 81")
else
call Mau("Called Table.loadDestructable on invalid object.","when calling error in Table, line 81")
endif
endif
set JSo=W6S(ASo,DSo)
set MM=MM-1
set mdw=JSo
set JSo=null
return mdw
endfunction
function Evr takes integer mvr,string Qvr returns destructable
local destructable Wvr
set w3[MM]=Qvr
set MM=MM+1
call yco(YT,0,ConvertFogState(mvr),"when calling saveFogState in TypeCasting, line 60")
set Wvr=KSo(YT,0,"when calling loadDestructable in TypeCasting, line 61")
set MM=MM-1
set xnw=Wvr
set Wvr=null
return xnw
endfunction
function bRr takes string ORr returns nothing
local unit lRr
set w3[MM]=ORr
set MM=MM+1
set lRr=kmu()
if S7s(lRr)==Uf then
call leu(Evr(BZc(If,vvr(lRr),"when calling get in SotfrpGuiDestructables, line 109"),"when calling destructableFromIndex in SotfrpGuiDestructables, line 109"))
endif
set MM=MM-1
set lRr=null
endfunction
function eTo takes nothing returns nothing
set MM=0
call bRr("SotfrpGuiDestructables, line 106")
endfunction
function BQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(1))then
return false
endif
return true
endfunction
function MQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(3))then
return false
endif
return true
endfunction
function NQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(2))then
return false
endif
return true
endfunction
function OWw takes nothing returns boolean
if not(qw[GetConvertedPlayerId(GetTriggerPlayer())]>=9)then
return false
endif
return true
endfunction
function SWw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(10))then
return false
endif
return true
endfunction
function VQw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(0))then
return false
endif
return true
endfunction
function bWw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="weather on")then
return false
endif
return true
endfunction
function cWw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(11))then
return false
endif
return true
endfunction
function iWw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(9))then
return false
endif
return true
endfunction
function lWw takes nothing returns boolean
if not(GetEventPlayerChatString()=="deleteweather")then
return false
endif
return true
endfunction
function oWw takes nothing returns boolean
if not(qw[GetConvertedPlayerId(GetTriggerPlayer())]<1)then
return false
endif
return true
endfunction
function pWw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="deleteweather all")then
return false
endif
return true
endfunction
function rWw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(6))then
return false
endif
return true
endfunction
function sWw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(7))then
return false
endif
return true
endfunction
function tWw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(8))then
return false
endif
return true
endfunction
function uWw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(5))then
return false
endif
return true
endfunction
function wWw takes nothing returns boolean
if not(GetTriggerPlayer()==Player(4))then
return false
endif
return true
endfunction
function yWw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="weather off")then
return false
endif
return true
endfunction
function eWw takes nothing returns nothing
if lWw()then
if VQw()then
call RemoveWeatherEffectBJ(sw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if BQw()then
call RemoveWeatherEffectBJ(tw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if NQw()then
call RemoveWeatherEffectBJ(yw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if MQw()then
call RemoveWeatherEffectBJ(bw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if wWw()then
call RemoveWeatherEffectBJ(lw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if uWw()then
call RemoveWeatherEffectBJ(Ow[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if rWw()then
call RemoveWeatherEffectBJ(ow[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if sWw()then
call RemoveWeatherEffectBJ(cw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if tWw()then
call RemoveWeatherEffectBJ(Sw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if iWw()then
call RemoveWeatherEffectBJ(iw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if SWw()then
call RemoveWeatherEffectBJ(ew[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if cWw()then
call RemoveWeatherEffectBJ(pw[qw[GetConvertedPlayerId(GetTriggerPlayer())]])
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=qw[GetConvertedPlayerId(GetTriggerPlayer())]-1
endif
if oWw()then
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=1
endif
if OWw()then
set qw[GetConvertedPlayerId(GetTriggerPlayer())]=8
endif
return
endif
if bWw()then
set ww=true
return
endif
if yWw()then
set ww=false
return
endif
if pWw()then
set bj_forLoopAIndex=1
set bj_forLoopAIndexEnd=9
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
call RemoveWeatherEffectBJ(sw[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(tw[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(yw[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(bw[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(lw[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(Ow[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(ow[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(cw[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(Sw[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(iw[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(ew[GetForLoopIndexA()])
call RemoveWeatherEffectBJ(pw[GetForLoopIndexA()])
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
endif
endfunction
function qgr takes nothing returns nothing
endfunction
function egr takes nothing returns boolean
call qgr()
return true
endfunction
function ekw takes nothing returns nothing
local unit ykw
local integer pkw
if GetSpellAbilityId()!=1093684561 then
set ykw=null
return
endif
set ykw=GetSpellAbilityUnit()
set fl=ykw
set Rl=GetOwningPlayer(ykw)
set pkw=GetUnitAbilityLevel(ykw,1093684561)
if pkw==3 then
set Tl=220.
elseif pkw==2 then
set Tl=160.
else
set Tl=90.
endif
call GroupEnumUnitsInRange(w,GetUnitX(ykw)*1.0,GetUnitY(ykw)*1.0,200.*1.0,Filter(fww_2922))
call Jgw(1093684562,pkw,"lightningshield",ykw)
set ykw=null
set ykw=null
endfunction
function Omw takes nothing returns boolean
if not(RectContainsLoc(GetPlayableMapRect(),Ju[12])==true)then
return false
endif
return true
endfunction
function bmw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function imw takes nothing returns boolean
if not(LoadBooleanBJ(2,GetHandleIdBJ(GetEnumUnit()),Au)==true)then
return false
endif
return true
endfunction
function omw takes nothing returns boolean
if not(DistanceBetweenPoints(Ju[12],Ju[10])<=Zu+10.00)then
return false
endif
return true
endfunction
function pmw takes nothing returns boolean
if not(CountUnitsInGroup(cr[rr])==0)then
return false
endif
if not(CountUnitsInGroup(lr[rr])==0)then
return false
endif
return true
endfunction
function ymw takes nothing returns boolean
if not(CountUnitsInGroup(Lu)==0)then
return false
endif
return true
endfunction
function emw takes nothing returns nothing
set Ju[10]=LoadLocationHandleBJ(1,GetHandleIdBJ(GetEnumUnit()),Au)
set Ju[11]=GetUnitLoc(GetEnumUnit())
if imw()then
set Ju[12]=PolarProjectionBJ(Ju[11],Zu,AngleBetweenPoints(Ju[4],Ju[10]))
set tr=DistanceBetweenPoints(Ju[4],Ju[10])
set yr=DistanceBetweenPoints(Ju[4],Ju[12])
else
set Ju[12]=PolarProjectionBJ(Ju[11],Zu,AngleBetweenPoints(Ju[5],Ju[10]))
set tr=DistanceBetweenPoints(Ju[5],Ju[10])
set yr=DistanceBetweenPoints(Ju[5],Ju[12])
endif
call SetUnitPositionLoc(GetEnumUnit(),Ju[12])
call SetUnitFlyHeightBJ(GetEnumUnit(),4.00*(Eu/tr)*yr*((-(1.00*yr))/tr+1.),0.00)
if Omw()then
if omw()then
call KillUnit(GetEnumUnit())
call GroupRemoveUnitSimple(GetEnumUnit(),cr[rr])
call GroupAddUnitSimple(GetEnumUnit(),Ku)
call SaveIntegerBJ(Du+3,0,GetHandleIdBJ(GetEnumUnit()),Au)
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Iu,Ju[12],Condition(xuw)),vuw)
call RemoveLocation(Ju[10])
endif
else
call GroupRemoveUnitSimple(GetEnumUnit(),cr[rr])
call GroupAddUnitSimple(GetEnumUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetEnumUnit()),Au)
call RemoveLocation(Ju[10])
endif
if pmw()then
if bmw()then
call ForForce(GetPlayersAll(),muw)
endif
call GroupRemoveUnitSimple(Nu,Lu)
call FlushChildHashtableBJ(Bu,Au)
if ymw()then
call DisableTrigger(GetTriggeringTrigger())
set Vu=0
endif
call RemoveLocation(Ju[4])
call RemoveLocation(Ju[5])
endif
call RemoveLocation(Ju[11])
call RemoveLocation(Ju[12])
endfunction
function f2w takes nothing returns boolean
return GetSpellAbilityId()==1093681461
endfunction
function f6w takes nothing returns nothing
call SetUnitState(GetEnumUnit(),UNIT_STATE_LIFE,GetUnitState(GetEnumUnit(),UNIT_STATE_LIFE)+30*gt)
endfunction
function f9u takes nothing returns boolean
return GetSpellAbilityId()==1095724656
endfunction
function fBw takes nothing returns boolean
return GetSpellAbilityId()==1093682514
endfunction
function fCw takes nothing returns boolean
if not(GetSpellAbilityId()==1093679190)then
return false
endif
return true
endfunction
function fIw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())and GetUnitTypeId(GetFilterUnit())!=1747988528
endfunction
function fKw takes nothing returns boolean
if not(GetSpellAbilityId()==1093683265)then
return false
endif
return true
endfunction
function fPw takes nothing returns boolean
local string dPw=GetEventPlayerChatString()
if SubString(dPw,0,5)=="idod " and S2I(SubString(dPw,5,6))<=6 and S2I(SubString(dPw,5,6))>=1 and SubString(dPw,6,7)==" " and SubString(dPw,7,StringLength(dPw))=="on" or SubString(dPw,7,StringLength(dPw))=="off" then
set dPw=null
return true
else
set dPw=null
return false
endif
endfunction
function FIS takes string gIS returns integer
local integer hIS
set w3[MM]=gIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hIS=kj
set jj[hIS]=977
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 40")
set hIS=0
endif
else
set Fj=Fj-1
set hIS=hj[Fj]
set jj[hIS]=977
endif
set MM=MM-1
return hIS
endfunction
function GIS takes string TIS returns integer
local integer YIS
set w3[MM]=TIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set YIS=kj
set jj[YIS]=976
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 34")
set YIS=0
endif
else
set Fj=Fj-1
set YIS=hj[Fj]
set jj[YIS]=976
endif
set MM=MM-1
return YIS
endfunction
function HIS takes string AIS returns integer
local integer DIS
set w3[MM]=AIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set DIS=kj
set jj[DIS]=831
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 86")
set DIS=0
endif
else
set Fj=Fj-1
set DIS=hj[Fj]
set jj[DIS]=831
endif
set MM=MM-1
return DIS
endfunction
function LIS takes string JIS returns integer
local integer KIS
set w3[MM]=JIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set KIS=kj
set jj[KIS]=982
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 89")
set KIS=0
endif
else
set Fj=Fj-1
set KIS=hj[Fj]
set jj[KIS]=982
endif
set MM=MM-1
return KIS
endfunction
function MIS takes string BIS returns integer
local integer NIS
set w3[MM]=BIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set NIS=kj
set jj[NIS]=984
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 101")
set NIS=0
endif
else
set Fj=Fj-1
set NIS=hj[Fj]
set jj[NIS]=984
endif
set MM=MM-1
return NIS
endfunction
function PIS takes string UIS returns integer
local integer IIS
set w3[MM]=UIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set IIS=kj
set jj[IIS]=981
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 72")
set IIS=0
endif
else
set Fj=Fj-1
set IIS=hj[Fj]
set jj[IIS]=981
endif
set MM=MM-1
return IIS
endfunction
function QIS takes string vIS returns integer
local integer mIS
set w3[MM]=vIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mIS=kj
set jj[mIS]=979
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 50")
set mIS=0
endif
else
set Fj=Fj-1
set mIS=hj[Fj]
set jj[mIS]=979
endif
set MM=MM-1
return mIS
endfunction
function RIS takes string dIS returns integer
local integer fIS
set w3[MM]=dIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fIS=kj
set jj[fIS]=975
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 23")
set fIS=0
endif
else
set Fj=Fj-1
set fIS=hj[Fj]
set jj[fIS]=975
endif
set MM=MM-1
return fIS
endfunction
function VIS takes string XIS returns integer
local integer CIS
set w3[MM]=XIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set CIS=kj
set jj[CIS]=983
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 95")
set CIS=0
endif
else
set Fj=Fj-1
set CIS=hj[Fj]
set jj[CIS]=983
endif
set MM=MM-1
return CIS
endfunction
function ZIS takes string WIS returns integer
local integer EIS
set w3[MM]=WIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set EIS=kj
set jj[EIS]=980
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 55")
set EIS=0
endif
else
set Fj=Fj-1
set EIS=hj[Fj]
set jj[EIS]=980
endif
set MM=MM-1
return EIS
endfunction
function nIS takes string qIS returns integer
local integer aIS
set w3[MM]=qIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set aIS=kj
set jj[aIS]=974
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 20")
set aIS=0
endif
else
set Fj=Fj-1
set aIS=hj[Fj]
set jj[aIS]=974
endif
set MM=MM-1
return aIS
endfunction
function rPS takes string wPS returns integer
local integer uPS
set w3[MM]=wPS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uPS=kj
set jj[uPS]=985
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 107")
set uPS=0
endif
else
set Fj=Fj-1
set uPS=hj[Fj]
set jj[uPS]=985
endif
set MM=MM-1
return uPS
endfunction
function xIS takes string kIS returns integer
local integer jIS
set w3[MM]=kIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jIS=kj
set jj[jIS]=978
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 44")
set jIS=0
endif
else
set Fj=Fj-1
set jIS=hj[Fj]
set jj[jIS]=978
endif
set MM=MM-1
return jIS
endfunction
function eAu takes string APu returns boolean
local integer DPu
local integer HPu
local integer JPu
local integer KPu
local integer LPu
local integer XPu
local integer CPu
local integer VPu
local integer BPu
local integer NPu
local integer MPu
local integer wAu
local integer uAu
local integer rAu
local integer sAu
local integer tAu
local integer iAu
local integer SAu
local integer cAu
local integer oAu
local integer OAu
local integer lAu
local integer bAu
local integer yAu
local integer pAu
set w3[MM]=APu
set MM=MM+1
set DPu=nIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 20")
set HPu=eDt(DPu,"when calling new_BuiltinData in SLangPlayerFunctions, line 20")
call Fao(HPu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 22")
call jBu(WHt(HPu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 20"),"getcolorcode","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 20")
set JPu=RIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 23")
set KPu=eDt(JPu,"when calling new_BuiltinData in SLangPlayerFunctions, line 23")
call Fao(KPu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 33")
call jBu(WHt(KPu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 23"),"setlocale","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 23")
set LPu=GIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 34")
set XPu=eDt(LPu,"when calling new_BuiltinData in SLangPlayerFunctions, line 34")
call dao(XPu,o2u(),y4u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 39")
call jBu(WHt(XPu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 34"),"setplayeralliancestateally","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 34")
set CPu=FIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 40")
set VPu=eDt(CPu,"when calling new_BuiltinData in SLangPlayerFunctions, line 40")
call Fao(VPu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 43")
call jBu(WHt(VPu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 40"),"getplayeralliancestateally","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 40")
set BPu=xIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 44")
set NPu=eDt(BPu,"when calling new_BuiltinData in SLangPlayerFunctions, line 44")
call dao(NPu,o2u(),y4u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 49")
call jBu(WHt(NPu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 44"),"setplayeralliancestatevision","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 44")
set MPu=QIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 50")
set wAu=eDt(MPu,"when calling new_BuiltinData in SLangPlayerFunctions, line 50")
call Fao(wAu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 53")
call jBu(WHt(wAu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 50"),"getplayeralliancestatevision","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 50")
set uAu=ZIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 55")
set rAu=eDt(uAu,"when calling new_BuiltinData in SLangPlayerFunctions, line 55")
call Fao(rAu,w2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 59")
call jBu(WHt(rAu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 55"),"setcameradistance","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 55")
set sAu=PIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 72")
set tAu=eDt(sAu,"when calling new_BuiltinData in SLangPlayerFunctions, line 72")
call Fao(tAu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 85")
call jBu(WHt(tAu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 72"),"setplayercolor","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 72")
set iAu=HIS("when calling alloc_IBuiltin_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 86")
call jBu(WHt(eDt(iAu,"when calling new_BuiltinData in SLangPlayerFunctions, line 86"),"when calling new_BuiltinFunction in SLangPlayerFunctions, line 86"),"getplayercolor","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 86")
set SAu=LIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 89")
set cAu=eDt(SAu,"when calling new_BuiltinData in SLangPlayerFunctions, line 89")
call Fao(cAu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 94")
call jBu(WHt(cAu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 89"),"ally","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 89")
set oAu=VIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 95")
set OAu=eDt(oAu,"when calling new_BuiltinData in SLangPlayerFunctions, line 95")
call Fao(OAu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 100")
call jBu(WHt(OAu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 95"),"unally","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 95")
set lAu=MIS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 101")
set bAu=eDt(lAu,"when calling new_BuiltinData in SLangPlayerFunctions, line 101")
call Fao(bAu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 106")
call jBu(WHt(bAu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 101"),"vision","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 101")
set yAu=rPS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangPlayerFunctions in SLangPlayerFunctions, line 107")
set pAu=eDt(yAu,"when calling new_BuiltinData in SLangPlayerFunctions, line 107")
call Fao(pAu,o2u(),"when calling setArgumentsTypes in SLangPlayerFunctions, line 112")
call jBu(WHt(pAu,"when calling new_BuiltinFunction in SLangPlayerFunctions, line 107"),"unvision","when calling registerProtectedBuiltin in SLangPlayerFunctions, line 107")
set MM=MM-1
return true
endfunction
function fRo takes nothing returns boolean
set MM=0
return eAu("SLangPlayerFunctions, line 1")
endfunction
function Qyc takes integer vyc,string myc returns nothing
set w3[MM]=myc
set MM=MM+1
if Nv[vyc]==0 then
call Mau("Double free: object of type UnitIndex","when calling error in UnitIndexer, line 172")
else
set Cv[Vv]=vyc
set Vv=Vv+1
set Nv[vyc]=0
endif
set MM=MM-1
endfunction
function uoS takes integer woS returns nothing
call kHr(KB[woS])
call nxr(FT)
call jHr()
call u0s(KB[woS],0)
endfunction
function XcS takes integer KcS,string LcS returns nothing
set w3[MM]=LcS
set MM=MM+1
call uoS(KcS)
call Qyc(KcS,"when calling dealloc_UnitIndex in UnitIndexer, line 188")
set MM=MM-1
endfunction
function Tlo takes integer flo,string Rlo returns nothing
set w3[MM]=Rlo
set MM=MM+1
if Nv[flo]==0 then
if flo==0 then
call Mau("Nullpointer exception when calling UnitIndex.UnitIndex","when calling error in UnitIndexer, line 172")
else
call Mau("Called UnitIndex.UnitIndex on invalid object.","when calling error in UnitIndexer, line 172")
endif
endif
call XcS(flo,"when calling destroyUnitIndex in UnitIndexer, line 172")
set MM=MM-1
endfunction
function LHr takes unit JHr,string KHr returns boolean
set w3[MM]=KHr
set MM=MM+1
if U7s(JHr)==0 then
set MM=MM-1
return false
else
call Tlo(UHr(JHr,"when calling toUnitIndex in UnitIndexer, line 169"),"when calling dispatch_UnitIndex_destroyUnitIndex in UnitIndexer, line 169")
set MM=MM-1
return true
endif
endfunction
function BHr takes string VHr returns nothing
set w3[MM]=VHr
set MM=MM+1
if vHr(kmu())then
call LHr(kmu(),"when calling deindex in UnitIndexer, line 197")
endif
set MM=MM-1
endfunction
function fTo takes nothing returns nothing
set MM=0
call BHr("UnitIndexer, line 197")
endfunction
function dVw takes nothing returns boolean
if not(GetEventPlayerChatString()=="'heroboosterjets")then
return false
endif
return true
endfunction
function nVw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@heroboosterjets")then
return false
endif
return true
endfunction
function fVw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(gcw))
if dVw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],hcw)
call DestroyGroup(g[GetConvertedPlayerId(GetTriggerPlayer())])
return
elseif nVw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Fcw)
else
call DoNothing()
endif
endfunction
function fZw takes nothing returns nothing
set m[1]="Abilities\\Spells\\Human\\DevotionAura\\DevotionAura.mdx"
set m[2]="Abilities\\Spells\\Human\\DivineShield\\DivineShieldTarget.mdx"
set m[3]="Abilities\\Spells\\Human\\Slow\\SlowTarget.mdx"
set m[4]="Abilities\\Spells\\NightElf\\Barkskin\\BarkSkinTarget.mdx"
set m[5]="Abilities\\Spells\\NightElf\\EntanglingRoots\\EntanglingRootsTarget.mdx"
set m[6]="Abilities\\Spells\\NightElf\\FaerieFire\\FaerieFireTarget.mdx"
set m[7]="Abilities\\Spells\\NightElf\\MoonWell\\MoonWellCasterArt.mdx"
set m[8]="Abilities\\Spells\\NightElf\\Rejuvenation\\RejuvenationTarget.mdx"
set m[9]="Abilities\\Spells\\NightElf\\MoonWell\\MoonWellCasterArt.mdx"
set m[10]="Abilities\\Spells\\NightElf\\Starfall\\StarfallCaster.mdx"
set m[11]="Abilities\\Spells\\NightElf\\ThornsAura\\ThornsAura.mdx"
set m[12]="Abilities\\Spells\\NightElf\\TargetArtLumber\\TargetArtLumber.mdx"
set m[13]="Abilities\\Spells\\Orc\\Berserker\\Berserkertarget.mdx"
set m[14]="Abilities\\Spells\\Orc\\Bloodlust\\BloodLustTarget.mdx"
set m[15]="Abilities\\Spells\\Orc\\CommandAura\\CommandAura.mdx"
set m[16]="Abilities\\Spells\\Orc\\Ensnare\\ensnareTarget.mdx"
set m[17]="Abilities\\Spells\\Orc\\LightningShield\\LightningShieldTarget.mdx"
set m[18]="Abilities\\Spells\\Orc\\Purge\\PurgeBuffTarget.mdx"
set m[19]="Abilities\\Spells\\Orc\\SpikeBarrier\\SpikeBarrier.mdx"
set m[20]="Abilities\\Spells\\Undead\\AntiMagicShell\\AntiMagicShell.mdx"
set m[21]="Abilities\\Spells\\Undead\\Curse\\CurseTarget.mdx"
set m[22]="Abilities\\Spells\\Undead\\Cripple\\CrippleTarget.mdx"
set m[23]="Abilities\\Spells\\Undead\\FrostArmor\\FrostArmorTarget.mdx"
set m[24]="Abilities\\Spells\\Undead\\PlagueCloud\\PlagueCloudCaster.mdx"
set m[25]="Abilities\\Spells\\Undead\\UnholyAura\\UnholyAura.mdx"
set m[26]="Abilities\\Spells\\Undead\\VampiricAura\\VampiricAura.mdx"
set m[27]="Abilities\\Spells\\Undead\\Web\\WebTarget.mdx"
set m[28]="Abilities\\Weapons\\BlackKeeperMissile\\BlackKeeperMissile.mdx"
set m[29]="Abilities\\Weapons\\Banditmissile\\Banditmissile.mdx"
set m[30]="Abilities\\Weapons\\BansheeMissile\\BansheeMissile.mdx"
set m[31]="Abilities\\Weapons\\BristleBackMissile\\BristleBackMissile.mdx"
set m[32]="Abilities\\Weapons\\Catapult\\CatapultMissile.mdx"
set m[33]="Abilities\\Weapons\\CryptFiendMissile\\CryptFiendMissile.mdx"
set m[34]="Abilities\\Weapons\\ColdArrow\\ColdArrowMissile.mdx"
set m[35]="Abilities\\Weapons\\DruidoftheTalonMissile\\DruidoftheTalonMissile.mdx"
set m[36]="Abilities\\Weapons\\Dryadmissile\\Dryadmissile.mdx"
set m[37]="Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdx"
set m[38]="Abilities\\Weapons\\FireBallMissile\\FireBallMissile.mdx"
set m[39]="Abilities\\Weapons\\FlamingArrow\\FlamingArrowMissile.mdx"
set m[40]="Abilities\\Weapons\\GargoyleMissile\\GargoyleMissile.mdx"
set m[41]="Abilities\\Weapons\\GryphonRiderMissile\\GryphonRiderMissile.mdx"
set m[42]="Abilities\\Weapons\\HarpyMissile\\HarpyMissile.mdx"
set m[43]="Abilities\\Weapons\\huntermissile\\huntermissile.mdx"
set m[44]="Abilities\\Weapons\\KeeperGroveMissile\\KeeperGroveMissile.mdx"
set m[45]="Abilities\\Weapons\\LichMissile\\LichMissile.mdx"
set m[46]="Abilities\\Weapons\\NecromancerMissile\\NecromancerMissile.mdx"
set m[47]="Abilities\\Weapons\\SearingArrow\\SearingArrowMissile.mdx"
set m[48]="Abilities\\Weapons\\WaterElementalMissile\\WaterElementalMissile.mdx"
set m[49]="Buildings\\Other\\CircleOfPower\\CircleOfPower.mdx"
set m[50]="Doodads\\Cinematic\\FireTrapUp\\FireTrapUp.mdx"
set m[51]="Doodads\\Cinematic\\FrostTrapUp\\FrostTrapUp.mdx"
set m[52]="Abilities\\Weapons\\GlaiveMissile\\GlaiveMissile.mdl"
set m[53]="Abilities\\Weapons\\ChimaeraAcidMissile\\ChimaeraAcidMissile.mdl"
set m[54]="Doodads\\Cityscape\\Props\\CrystalShield\\CrystalShield.mdx"
set m[55]="Abilities\\Weapons\\IllidanMissile\\IllidanMissile.mdl"
set m[56]="Abilities\\Spells\\Undead\\AbsorbMana\\AbsorbManaBirthMissile.mdl"
set m[57]="Abilities\\Weapons\\ZigguratFrostMissile\\ZigguratFrostMissile.mdl"
set m[58]="Doodads\\Cityscape\\Props\\MagicRunes\\MagicRunes2.mdx"
set m[59]="Doodads\\Cityscape\\Structures\\City_ColumnSingle\\City_ColumnSingle.mdx"
set m[60]="Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile.mdl"
set m[61]="Abilities\\Weapons\\AvengerMissile\\AvengerMissile.mdl"
set m[62]="Abilities\\Weapons\\DragonHawkMissile\\DragonHawkMissile.mdl"
set m[63]="Abilities\\Weapons\\PhoenixMissile\\Phoenix_Missile_mini.mdl"
set m[64]="Abilities\\Weapons\\SpiritOfVengeanceMissile\\SpiritOfVengeanceMissile.mdl"
set m[65]="Abilities\\Weapons\\FaerieDragonMissile\\FaerieDragonMissile.mdl"
set m[66]="Abilities\\Weapons\\DemonHunterMissile\\DemonHunterMissile.mdl"
set m[67]="Abilities\\Spells\\Undead\\DarkSummoning\\DarkSummonMissile.mdl"
set m[68]="Abilities\\Weapons\\ZigguratMissile\\ZigguratMissile.mdl"
set m[69]="Abilities\\Spells\\Undead\\DeathCoil\\DeathCoilMissile.mdl"
set m[70]="Abilities\\Weapons\\Axe\\AxeMissile.mdl"
set m[71]="Units\\Undead\\Tichondrius\\Tichondrius.mdx"
set m[72]="Units\\Undead\\Shade\\Shade.mdx"
set m[73]="Abilities\\Spells\\Human\\StormBolt\\StormBoltMissile.mdx"
set m[74]="Doodads\\Ashenvale\\Props\\Brazier\\Brazier.mdx"
set m[75]="Environment\\UndeadBuildingFire\\UndeadLargeBuildingFire0.mdx"
set m[76]="Environment\\SmallBuildingFire\\SmallBuildingFire0.mdx"
set m[77]="Objects\\Spawnmodels\\Orc\\OrcBlood\\OrcBloodGrunt.mdx"
set m[78]="units\\creeps\\GoblinLandMine\\GoblinLandMine.mdl"
set m[79]="Doodads\\LordaeronSummer\\Plants\\LillyPad\\LillyPad.mdx"
set m[80]="units\\nightelf\\Hippogryph\\Hippogryph.mdx"
set m[81]="grunt3cape.mdx"
set m[82]="buildings\\orc\\TrollBurrow\\TrollBurrow.mdx"
set m[83]="abilities\\weapons\\huntermissile\\huntermissile.mdx"
set m[84]="Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdx"
set m[85]="Abilities\\Spells\\Human\\FlameStrike\\FlameStrike1.mdx"
set m[86]="Abilities\\Spells\\Undead\\Impale\\ImpaleMissTarget.mdx"
set m[87]="Abilities\\Spells\\Other\\Drain\\ManaDrainCaster.mdx"
set m[88]="Abilities\\Spells\\Other\\Drain\\ManaDrainTarget.mdx"
set m[89]="Environment\\NightElfBuildingFire\\ElfLargeBuildingFire1.mdx"
set m[90]="Environment\\LargeBuildingFire\\LargeBuildingFire1.mdx"
set m[91]="units\\human\\Footman\\Footman.mdx"
set m[92]="units\\human\\Rifleman\\Rifleman.mdx"
set m[93]="units\\creeps\\HighElfArcher\\HighElfArcher.mdx"
set m[94]="Abilities\\Spells\\Human\\CloudOfFog\\CloudOfFog.mdx"
set m[95]="units\\orc\\Grunt\\Grunt.mdl"
set m[96]="units\\orc\\RiderlessWyvern\\RiderlessWyvern.mdx"
set m[97]="Objects\\InventoryItems\\Glyph\\Glyph.mdx"
set m[98]="Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdx"
set m[99]="Objects\\RandomObject\\RandomObject.mdl"
set Q[1]="overhead"
set Q[2]="head"
set Q[3]="chest"
set Q[4]="origin"
set Q[5]="left hand"
set Q[6]="right hand"
set Q[7]="left foot"
set Q[8]="right foot"
set Q[9]="weapon"
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function f_u takes nothing returns boolean
return true
endfunction
function GYw takes integer dYw,unit fYw,real RYw,integer TYw returns nothing
local timer YYw=pYw(dYw,fYw)
call SaveInteger(i,ub[dYw],GetHandleId(YYw),TYw)
call TimerStart(YYw,RYw,true,Pww)
set YYw=null
set YYw=null
endfunction
function fhw takes nothing returns nothing
local unit dhw
if GetSpellAbilityId()!=1093684550 then
set dhw=null
return
endif
set dhw=GetSpellAbilityUnit()
call Jgw(1093684549,GetUnitAbilityLevel(dhw,1093684550),"attackonce",dhw)
call GYw(AO,dhw,1.,GetUnitAbilityLevel(dhw,1093684550)*4)
set dhw=null
set dhw=null
endfunction
function fjw takes nothing returns nothing
set Ju[8]=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[8],bj_UNIT_FACING)
call UnitAddAbilityBJ(1093678659,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"slow",GetEnumUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
endfunction
function fkr takes nothing returns boolean
set VR=InitHashtable()
return true
endfunction
function g3w takes nothing returns nothing
call GroupRemoveUnit(lt,GetSpellAbilityUnit())
endfunction
function g4w takes nothing returns boolean
return IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()),GetOwningPlayer(GetSpellAbilityUnit()))==false
endfunction
function gBw takes nothing returns nothing
local unit RBw=GetSpellAbilityUnit()
local location TBw=GetSpellTargetLoc()
local boolean YBw=BlzIsUnitInvulnerable(RBw)
local effect GBw=AddSpecialEffectTarget("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl",RBw,"chest")
call PauseUnit(RBw,true)
call SetUnitInvulnerable(RBw,true)
call iTw(1.)
call DestroyEffect(GBw)
call SetUnitPositionLoc(RBw,TBw)
set TBw=null
set GBw=AddSpecialEffectTarget("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl",RBw,"chest")
call iTw(1.)
call DestroyEffect(GBw)
call SetUnitInvulnerable(RBw,YBw)
call PauseUnit(RBw,false)
call SetUnitAnimation(RBw,"stand")
set RBw=null
set GBw=null
set RBw=null
set TBw=null
set GBw=null
endfunction
function gFu takes nothing returns boolean
set Ue="DRAL"
return true
endfunction
function gFw takes nothing returns nothing
if GetSpellAbilityId()!=ul or GetUnitAbilityLevel(GetSpellTargetUnit(),Sl)==0 then
return
endif
call IssueImmediateOrder(GetSpellAbilityUnit(),"stop")
endfunction
function gHr takes nothing returns boolean
set gT=1751543663
return true
endfunction
function gHw takes nothing returns nothing
if GetDestructableTypeId(GetSpellTargetDestructable())==1146383478 then
set kw[GetPlayerId(GetTriggerPlayer())]=GetSpellTargetDestructable()
call RemoveUnit(ss[GetPlayerId(GetTriggerPlayer())])
set ss[GetPlayerId(GetTriggerPlayer())]=CreateUnitAtLoc(GetTriggerPlayer(),1747996982,GetUnitLoc(GetSpellAbilityUnit()),270.00)
else
call hTw(GetOwningPlayer(GetSpellAbilityUnit()),"",true,false)
endif
endfunction
function gNw takes nothing returns boolean
if GetSpellAbilityId()==1093682996 then
return true
endif
return false
endfunction
function gPw takes nothing returns nothing
local group GPw=CreateGroup()
call GroupEnumUnitsOfPlayer(GPw,GetTriggerPlayer(),Condition(stw))
call ForGroup(GPw,ttw)
call DestroyGroup(GPw)
set GPw=null
set GPw=null
endfunction
function G3S takes string T3S returns integer
local integer Y3S
set w3[MM]=T3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y3S=kj
set jj[Y3S]=1045
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins.","when calling error in ScmdFogOfWarBuiltins, line 41")
set Y3S=0
endif
else
set Fj=Fj-1
set Y3S=hj[Fj]
set jj[Y3S]=1045
endif
set MM=MM-1
return Y3S
endfunction
function R3S takes string d3S returns integer
local integer f3S
set w3[MM]=d3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f3S=kj
set jj[f3S]=862
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdFogOfWarBuiltins.","when calling error in ScmdFogOfWarBuiltins, line 27")
set f3S=0
endif
else
set Fj=Fj-1
set f3S=hj[Fj]
set jj[f3S]=862
endif
set MM=MM-1
return f3S
endfunction
function b3S takes string O3S returns integer
local integer l3S
set w3[MM]=O3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l3S=kj
set jj[l3S]=1044
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins.","when calling error in ScmdFogOfWarBuiltins, line 16")
set l3S=0
endif
else
set Fj=Fj-1
set l3S=hj[Fj]
set jj[l3S]=1044
endif
set MM=MM-1
return l3S
endfunction
function e3S takes string y3S returns integer
local integer p3S
set w3[MM]=y3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p3S=kj
set jj[p3S]=844
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdFogOfWarBuiltins.","when calling error in ScmdFogOfWarBuiltins, line 20")
set p3S=0
endif
else
set Fj=Fj-1
set p3S=hj[Fj]
set jj[p3S]=844
endif
set MM=MM-1
return p3S
endfunction
function i3S takes string s3S returns integer
local integer t3S
set w3[MM]=s3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t3S=kj
set jj[t3S]=1043
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins.","when calling error in ScmdFogOfWarBuiltins, line 9")
set t3S=0
endif
else
set Fj=Fj-1
set t3S=hj[Fj]
set jj[t3S]=1043
endif
set MM=MM-1
return t3S
endfunction
function n3S takes string q3S returns integer
local integer a3S
set w3[MM]=q3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a3S=kj
set jj[a3S]=830
else
call Mau("Out of memory: Could not create IBuiltin_addOverload_registerProtectedBuiltin_ScmdFogOfWarBuiltins.","when calling error in ScmdFogOfWarBuiltins, line 23")
set a3S=0
endif
else
set Fj=Fj-1
set a3S=hj[Fj]
set jj[a3S]=830
endif
set MM=MM-1
return a3S
endfunction
function o3S takes string S3S returns integer
local integer c3S
set w3[MM]=S3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c3S=kj
set jj[c3S]=843
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdFogOfWarBuiltins.","when calling error in ScmdFogOfWarBuiltins, line 13")
set c3S=0
endif
else
set Fj=Fj-1
set c3S=hj[Fj]
set jj[c3S]=843
endif
set MM=MM-1
return c3S
endfunction
function D5u takes string F5u returns boolean
local integer k5u
local integer j5u
local integer x5u
local integer v5u
local integer m5u
local integer Q5u
local integer W5u
local integer E5u
local integer Z5u
local integer U5u
local integer I5u
local integer P5u
local integer A5u
set w3[MM]=F5u
set MM=MM+1
set k5u=i3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdFogOfWarBuiltins, line 9")
set j5u=eDt(k5u,"when calling new_BuiltinData in ScmdFogOfWarBuiltins, line 9")
call Fao(j5u,y4u(),"when calling setArgumentsTypes in ScmdFogOfWarBuiltins, line 12")
call jBu(WHt(j5u,"when calling new_BuiltinFunction in ScmdFogOfWarBuiltins, line 9"),"fogmaskenable","when calling registerProtectedBuiltin in ScmdFogOfWarBuiltins, line 9")
set x5u=o3S("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdFogOfWarBuiltins, line 13")
call IBu(WHt(eDt(x5u,"when calling new_BuiltinData in ScmdFogOfWarBuiltins, line 13"),"when calling new_BuiltinFunction in ScmdFogOfWarBuiltins, line 13"),vno(Rvr("isfogmaskenabled","when calling stringToIndex in ScmdFogOfWarBuiltins, line 15"),Rvr("fogmaskenabled?","when calling stringToIndex in ScmdFogOfWarBuiltins, line 15"),"when calling asList in ScmdFogOfWarBuiltins, line 15"),"when calling registerProtectedBuiltin in ScmdFogOfWarBuiltins, line 13")
set v5u=b3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdFogOfWarBuiltins, line 16")
set m5u=eDt(v5u,"when calling new_BuiltinData in ScmdFogOfWarBuiltins, line 16")
call Fao(m5u,y4u(),"when calling setArgumentsTypes in ScmdFogOfWarBuiltins, line 19")
call jBu(WHt(m5u,"when calling new_BuiltinFunction in ScmdFogOfWarBuiltins, line 16"),"fogenable","when calling registerProtectedBuiltin in ScmdFogOfWarBuiltins, line 16")
set Q5u=e3S("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdFogOfWarBuiltins, line 20")
call IBu(WHt(eDt(Q5u,"when calling new_BuiltinData in ScmdFogOfWarBuiltins, line 20"),"when calling new_BuiltinFunction in ScmdFogOfWarBuiltins, line 20"),vno(Rvr("isfogenabled","when calling stringToIndex in ScmdFogOfWarBuiltins, line 22"),Rvr("fogenabled?","when calling stringToIndex in ScmdFogOfWarBuiltins, line 22"),"when calling asList in ScmdFogOfWarBuiltins, line 22"),"when calling registerProtectedBuiltin in ScmdFogOfWarBuiltins, line 20")
set W5u=n3S("when calling alloc_IBuiltin_addOverload_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdFogOfWarBuiltins, line 23")
set U5u=WHt(eDt(W5u,"when calling new_BuiltinData in ScmdFogOfWarBuiltins, line 23"),"when calling new_BuiltinFunction in ScmdFogOfWarBuiltins, line 23")
set A5u=U5u
set E5u=R3S("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdFogOfWarBuiltins, line 27")
set Z5u=eDt(E5u,"when calling new_BuiltinData in ScmdFogOfWarBuiltins, line 27")
call Fao(Z5u,o2u(),"when calling setArgumentsTypes in ScmdFogOfWarBuiltins, line 39")
call C4o(A5u,Z5u,"when calling addOverload in ScmdFogOfWarBuiltins, line 27")
call jBu(U5u,"seeall","when calling registerProtectedBuiltin in ScmdFogOfWarBuiltins, line 23")
set I5u=G3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdFogOfWarBuiltins in ScmdFogOfWarBuiltins, line 41")
set P5u=eDt(I5u,"when calling new_BuiltinData in ScmdFogOfWarBuiltins, line 41")
call Fao(P5u,o2u(),"when calling setArgumentsTypes in ScmdFogOfWarBuiltins, line 44")
call jBu(WHt(P5u,"when calling new_BuiltinFunction in ScmdFogOfWarBuiltins, line 41"),"fromrawcode","when calling registerProtectedBuiltin in ScmdFogOfWarBuiltins, line 41")
set MM=MM-1
return true
endfunction
function gRo takes nothing returns boolean
set MM=0
return D5u("ScmdFogOfWarBuiltins, line 1")
endfunction
function iSu takes string tSu returns nothing
set w3[MM]=tSu
set MM=MM+1
call VSu("when calling generalEventCallback in ClosureEvents, line 295")
set MM=MM-1
endfunction
function gTo takes nothing returns nothing
set MM=0
call iSu("ClosureEvents, line 295")
endfunction
function gTu takes nothing returns boolean
set he=InitHashtable()
return true
endfunction
function gUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,3)=="add")then
return false
endif
return true
endfunction
function GXw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
return true
endfunction
function gXw takes nothing returns nothing
if GXw()then
call UnitAddTypeBJ(UNIT_TYPE_STRUCTURE,GetEnumUnit())
call UnitRemoveAbilityBJ(1097690998,GetEnumUnit())
endif
endfunction
function gZw takes nothing returns nothing
local string YZw=GetEventPlayerChatString()
local player GZw=GetTriggerPlayer()
set x=x+1
set v[30]=v[29]
set v[29]=v[28]
set v[28]=v[27]
set v[27]=v[26]
set v[26]=v[25]
set v[25]=v[24]
set v[24]=v[23]
set v[23]=v[22]
set v[22]=v[21]
set v[21]=v[20]
set v[20]=v[19]
set v[19]=v[18]
set v[18]=v[17]
set v[17]=v[16]
set v[16]=v[15]
set v[15]=v[14]
set v[14]=v[13]
set v[13]=v[12]
set v[12]=v[11]
set v[11]=v[10]
set v[10]=v[9]
set v[9]=v[8]
set v[8]=v[7]
set v[7]=v[6]
set v[6]=v[5]
set v[5]=v[4]
set v[4]=v[3]
set v[3]=v[2]
set v[2]=v[1]
if YZw!="516b1b971d90fd815f889fd50ac4e3a2a8d0dc5b28736ce07441aef387cdb54968a8666ee1dd2dc47e308adc87e4e8be60ca0d2359b31efa0f671370f1cf4av" then
set v[1]="|CFF808040["+I2S(x)+"] CMDLOG:|R "+k[GetPlayerId(GZw)]+YZw
else
set v[1]="|CFF808040["+I2S(x)+"] CMDLOG:|R "+k[GetPlayerId(GZw)]+GetPlayerName(GZw)+"|R |CFF808040начал загрузку области.|R"
endif
set GZw=null
set GZw=null
endfunction
function gkr takes nothing returns boolean
set BR="air"
set NR="ground"
set MR="invulnerable"
set wT="mechanical"
set uT="organic"
set rT="structure"
set sT="vulnerable"
return true
endfunction
function gnr takes nothing returns boolean
return yHu(GetFilterDestructable())
endfunction
function Odu takes force cdu,player odu returns nothing
call ForceAddPlayer(cdu,odu)
endfunction
function gnu takes nothing returns boolean
set ie=CreateForce()
call Odu(ie,ea)
set oe=0
return true
endfunction
function Gvw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Yvw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function gvw takes nothing returns nothing
if Gvw()then
call UnitDamageTargetBJ(Nu,GetEnumUnit(),xu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_COLD)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
elseif Yvw()then
call UnitDamageTargetBJ(Nu,GetEnumUnit(),vu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_FIRE)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
else
call UnitDamageTargetBJ(Nu,GetEnumUnit(),mu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_LIGHTNING)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
endif
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endfunction
function h2w takes nothing returns nothing
local location R2w=GetSpellTargetLoc()
local effect T2w=AddSpecialEffectLoc("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",R2w)
local effect Y2w=AddSpecialEffectLoc("Abilities\\Spells\\Human\\FlameStrike\\FlameStrikeTarget.mdl",R2w)
local unit G2w=GetSpellAbilityUnit()
local unit g2w=CreateUnitAtLoc(Player(PLAYER_NEUTRAL_PASSIVE),1747995215,GetUnitLoc(G2w),GetUnitFacing(G2w))
call UnitAddAbility(g2w,1093681462)
call iTw(0.5)
call IssuePointOrderLoc(g2w,"flamestrike",R2w)
call iTw(0.5)
call DestroyEffect(T2w)
set T2w=null
call DestroyEffect(Y2w)
set Y2w=null
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl",R2w))
call DestroyEffect(AddSpecialEffectLoc("war3mapImported\\NewMassiveEX.mdx",R2w))
call UnitDamagePoint(G2w,0.,200.,GetLocationX(R2w),GetLocationY(R2w),475.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
set G2w=null
call iTw(10.00)
call RemoveLocation(R2w)
set R2w=null
call RemoveUnit(g2w)
set g2w=null
set R2w=null
set T2w=null
set Y2w=null
set G2w=null
set g2w=null
endfunction
function h6w takes nothing returns nothing
local unit R6w=GetSpellAbilityUnit()
local location T6w=GetSpellTargetLoc()
local integer Y6w=GetUnitAbilityLevel(R6w,1093678155)
local unit G6w=CreateUnitAtLoc(GetOwningPlayer(R6w),1747995215,GetUnitLoc(R6w),270.)
local group g6w=CreateGroup()
call UnitAddAbility(G6w,1093679417)
call SetUnitAbilityLevel(G6w,1093679417,Y6w)
call IssuePointOrderLoc(G6w,"blizzard",T6w)
call iTw(1.)
call GroupEnumUnitsInRangeOfLoc(g6w,T6w,200.,Condition(wbw))
set gt=Y6w
set ht=R6w
call ForGroup(g6w,ubw)
set ht=null
set gt=0
call DestroyGroup(g6w)
set g6w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(g6w,T6w,200.,Condition(rbw))
set gt=Y6w
call ForGroup(g6w,sbw)
set gt=0
call DestroyGroup(g6w)
set g6w=CreateGroup()
call IssuePointOrderLoc(G6w,"blizzard",T6w)
call iTw(1.)
call GroupEnumUnitsInRangeOfLoc(g6w,T6w,200.,Condition(wbw))
set gt=Y6w
set ht=R6w
call ForGroup(g6w,ubw)
set ht=null
set gt=0
call DestroyGroup(g6w)
set g6w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(g6w,T6w,200.,Condition(rbw))
set gt=Y6w
call ForGroup(g6w,sbw)
set gt=0
call DestroyGroup(g6w)
set g6w=CreateGroup()
call IssuePointOrderLoc(G6w,"blizzard",T6w)
call iTw(1.)
call GroupEnumUnitsInRangeOfLoc(g6w,T6w,200.,Condition(wbw))
set gt=Y6w
set ht=R6w
call ForGroup(g6w,ubw)
set ht=null
set gt=0
call DestroyGroup(g6w)
set g6w=CreateGroup()
call GroupEnumUnitsInRangeOfLoc(g6w,T6w,200.,Condition(rbw))
set gt=Y6w
call ForGroup(g6w,sbw)
set gt=0
call DestroyGroup(g6w)
set g6w=null
call RemoveLocation(T6w)
set T6w=null
set R6w=null
set Y6w=0
call iTw(1.)
call RemoveUnit(G6w)
set G6w=null
set R6w=null
set T6w=null
set G6w=null
set g6w=null
endfunction
function h7w takes nothing returns nothing
local unit G7w=GetEnumUnit()
local unit g7w=CreateUnitAtLoc(Player(15),1747995215,GetUnitLoc(G7w),270.)
call UnitAddAbility(g7w,1093681460)
call IssueTargetOrder(g7w,"attackonce",G7w)
call eRw(g7w,3.)
set G7w=null
set g7w=null
set G7w=null
set g7w=null
endfunction
function h8w takes nothing returns nothing
local unit G8w=GetSpellAbilityUnit()
local unit g8w=GetSpellTargetUnit()
call UnitDamageTarget(G8w,g8w,125*GetUnitAbilityLevel(G8w,1095723105)-25,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call TRw(AddSpecialEffect("Abilities\\Spells\\Orc\\LiquidFire\\Liquidfire.mdl",GetUnitX(g8w),GetUnitY(g8w)),1.)
set g8w=null
set G8w=null
set G8w=null
set g8w=null
endfunction
function hCw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function hHr takes nothing returns boolean
set hT=CreateTrigger()
set FT=CreateTrigger()
set jT=0
call xmu(Waw)
call mmu(Eaw)
return true
endfunction
function hIw takes nothing returns nothing
local string YIw=GetEventPlayerChatString()
local player GIw=GetTriggerPlayer()
local group gIw
call GetPlayerId(GIw)
call StringLength(YIw)
if YIw=="@attack" then
set gIw=CreateGroup()
call GroupEnumUnitsOfPlayer(gIw,GIw,Condition(Qsw))
call ForGroup(gIw,Wsw)
call DestroyGroup(gIw)
set gIw=null
set GIw=null
set GIw=null
set gIw=null
return
endif
if YIw=="@aiswitcher" then
set gIw=CreateGroup()
call GroupEnumUnitsOfPlayer(gIw,GIw,Condition(Qsw))
call ForGroup(gIw,Esw)
call DestroyGroup(gIw)
set gIw=null
set GIw=null
set GIw=null
set gIw=null
return
endif
set gIw=null
set GIw=null
set GIw=null
set gIw=null
endfunction
function F3S takes string g3S returns integer
local integer h3S
set w3[MM]=g3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h3S=kj
set jj[h3S]=1098
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 8")
set h3S=0
endif
else
set Fj=Fj-1
set h3S=hj[Fj]
set jj[h3S]=1098
endif
set MM=MM-1
return h3S
endfunction
function H3S takes string A3S returns integer
local integer D3S
set w3[MM]=A3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D3S=kj
set jj[D3S]=1048
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 25")
set D3S=0
endif
else
set Fj=Fj-1
set D3S=hj[Fj]
set jj[D3S]=1048
endif
set MM=MM-1
return D3S
endfunction
function I4u takes nothing returns integer
return rd
endfunction
function L3S takes string J3S returns integer
local integer K3S
set w3[MM]=J3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K3S=kj
set jj[K3S]=1049
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 29")
set K3S=0
endif
else
set Fj=Fj-1
set K3S=hj[Fj]
set jj[K3S]=1049
endif
set MM=MM-1
return K3S
endfunction
function M3S takes string B3S returns integer
local integer N3S
set w3[MM]=B3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N3S=kj
set jj[N3S]=1051
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 37")
set N3S=0
endif
else
set Fj=Fj-1
set N3S=hj[Fj]
set jj[N3S]=1051
endif
set MM=MM-1
return N3S
endfunction
function P3S takes string U3S returns integer
local integer I3S
set w3[MM]=U3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I3S=kj
set jj[I3S]=1088
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 21")
set I3S=0
endif
else
set Fj=Fj-1
set I3S=hj[Fj]
set jj[I3S]=1088
endif
set MM=MM-1
return I3S
endfunction
function Q3S takes string v3S returns integer
local integer m3S
set w3[MM]=v3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m3S=kj
set jj[m3S]=1046
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 13")
set m3S=0
endif
else
set Fj=Fj-1
set m3S=hj[Fj]
set jj[m3S]=1046
endif
set MM=MM-1
return m3S
endfunction
function V3S takes string X3S returns integer
local integer C3S
set w3[MM]=X3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C3S=kj
set jj[C3S]=1050
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 33")
set C3S=0
endif
else
set Fj=Fj-1
set C3S=hj[Fj]
set jj[C3S]=1050
endif
set MM=MM-1
return C3S
endfunction
function Z3S takes string W3S returns integer
local integer E3S
set w3[MM]=W3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E3S=kj
set jj[E3S]=1047
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 17")
set E3S=0
endif
else
set Fj=Fj-1
set E3S=hj[Fj]
set jj[E3S]=1047
endif
set MM=MM-1
return E3S
endfunction
function i1S takes string s1S returns integer
local integer t1S
set w3[MM]=s1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t1S=kj
set jj[t1S]=1053
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 45")
set t1S=0
endif
else
set Fj=Fj-1
set t1S=hj[Fj]
set jj[t1S]=1053
endif
set MM=MM-1
return t1S
endfunction
function r1S takes string w1S returns integer
local integer u1S
set w3[MM]=w1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u1S=kj
set jj[u1S]=1052
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 41")
set u1S=0
endif
else
set Fj=Fj-1
set u1S=hj[Fj]
set jj[u1S]=1052
endif
set MM=MM-1
return u1S
endfunction
function x3S takes string k3S returns integer
local integer j3S
set w3[MM]=k3S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j3S=kj
set jj[j3S]=863
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 10")
set j3S=0
endif
else
set Fj=Fj-1
set j3S=hj[Fj]
set jj[j3S]=863
endif
set MM=MM-1
return j3S
endfunction
function Y6u takes string C5u returns boolean
local integer V5u
local integer B5u
local integer N5u
local integer M5u
local integer w6u
local integer u6u
local integer r6u
local integer s6u
local integer t6u
local integer i6u
local integer S6u
local integer c6u
local integer o6u
local integer O6u
local integer l6u
local integer b6u
local integer y6u
local integer p6u
local integer e6u
local integer q6u
local integer a6u
local integer n6u
local integer d6u
local integer f6u
local integer R6u
local integer T6u
set w3[MM]=C5u
set MM=MM+1
set V5u=F3S("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 8")
set B5u=eDt(V5u,"when calling new_BuiltinData in ScmdItemBuiltins, line 8")
call Fao(B5u,m4u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 10")
set N5u=B5u
call k4o(N5u,"when calling setRequiringEnumUnit in ScmdItemBuiltins, line 10")
set u6u=WHt(N5u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 8")
set T6u=u6u
set M5u=x3S("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 10")
set w6u=eDt(M5u,"when calling new_BuiltinData in ScmdItemBuiltins, line 10")
call dao(w6u,G5u(),m4u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 12")
call C4o(T6u,w6u,"when calling addOverload in ScmdItemBuiltins, line 10")
call jBu(u6u,"iteminslot","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 8")
set r6u=Q3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 13")
set s6u=eDt(r6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 13")
call dao(s6u,I4u(),y4u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 16")
call jBu(WHt(s6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 13"),"itemsetdropondeath","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 13")
set t6u=Z3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 17")
set i6u=eDt(t6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 17")
call dao(i6u,I4u(),y4u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 20")
call jBu(WHt(i6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 17"),"itemsetdroppable","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 17")
set S6u=P3S("when calling alloc_IBuiltin_setArgumentsTypes_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 21")
set c6u=eDt(S6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 21")
call dao(c6u,I4u(),o2u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 24")
set o6u=c6u
call dao(o6u,I4u(),o2u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 24")
call jBu(WHt(o6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 21"),"itemsetname","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 21")
set O6u=H3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 25")
set l6u=eDt(O6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 25")
call dao(l6u,I4u(),o2u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 28")
call jBu(WHt(l6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 25"),"itemsetdescription","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 25")
set b6u=L3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 29")
set y6u=eDt(b6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 29")
call dao(y6u,I4u(),o2u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 32")
call jBu(WHt(y6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 29"),"itemsettooltip","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 29")
set p6u=V3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 33")
set e6u=eDt(p6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 33")
call dao(e6u,I4u(),o2u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 36")
call jBu(WHt(e6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 33"),"itemsetextendedtooltip","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 33")
set q6u=M3S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 37")
set a6u=eDt(q6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 37")
call dao(a6u,I4u(),o2u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 40")
call jBu(WHt(a6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 37"),"itemseticonpath","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 37")
set n6u=r1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 41")
set d6u=eDt(n6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 41")
call dao(d6u,I4u(),m4u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 44")
call jBu(WHt(d6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 41"),"itemsetcharges","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 41")
set f6u=i1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdItemBuiltins in ScmdItemBuiltins, line 45")
set R6u=eDt(f6u,"when calling new_BuiltinData in ScmdItemBuiltins, line 45")
call dao(R6u,I4u(),w2u(),"when calling setArgumentsTypes in ScmdItemBuiltins, line 48")
call jBu(WHt(R6u,"when calling new_BuiltinFunction in ScmdItemBuiltins, line 45"),"itemsetlife","when calling registerProtectedBuiltin in ScmdItemBuiltins, line 45")
set MM=MM-1
return true
endfunction
function hRo takes nothing returns boolean
set MM=0
return Y6u("ScmdItemBuiltins, line 1")
endfunction
function CGr takes integer KGr,string LGr returns integer
local integer XGr
set w3[MM]=LGr
set MM=MM+1
set XGr=nR[KGr]
call hUc(dR[KGr],XGr,"when calling remove in SotfrpGuiRegions, line 93")
set nR[KGr]=0
set YR[KGr]=false
call YYr(KGr,tR,false)
call hYr(KGr,iR)
set MM=MM-1
return XGr
endfunction
function HZS takes integer AZS,string DZS returns nothing
set w3[MM]=DZS
set MM=MM+1
if wj[AZS]==0 then
call Mau("Double free: object of type RectDrawing","when calling error in RectDrawing, line 5")
else
set Bk[Nk]=AZS
set Nk=Nk+1
set wj[AZS]=0
endif
set MM=MM-1
endfunction
function Lpt takes integer Jpt,string Kpt returns nothing
set w3[MM]=Kpt
set MM=MM+1
call HNc(Jpt,"when calling clear in RectDrawing, line 78")
call gIu(MH[Jpt])
call vEc(KH[Jpt],"when calling dispatch_HashList_destroyHashList in RectDrawing, line 80")
set MM=MM-1
endfunction
function Vpt takes integer Xpt,string Cpt returns nothing
set w3[MM]=Cpt
set MM=MM+1
call Lpt(Xpt,"when calling RectDrawing_onDestroy in RectDrawing, line 77")
call HZS(Xpt,"when calling dealloc_RectDrawing in RectDrawing, line 77")
set MM=MM-1
endfunction
function fNc takes integer nNc,string dNc returns nothing
set w3[MM]=dNc
set MM=MM+1
if wj[nNc]==0 then
if nNc==0 then
call Mau("Nullpointer exception when calling RectDrawing.RectDrawing","when calling error in RectDrawing, line 5")
else
call Mau("Called RectDrawing.RectDrawing on invalid object.","when calling error in RectDrawing, line 5")
endif
endif
call Vpt(nNc,"when calling destroyRectDrawing in RectDrawing, line 5")
set MM=MM-1
endfunction
function CCi takes integer KCi,unit LCi,string XCi returns nothing
set w3[MM]=XCi
set MM=MM+1
set YR[DX[KCi]]=false
if nR[DX[KCi]]!=0 then
call fNc(CGr(DX[KCi],"when calling retrieveCoreRectDrawing in SotfrpGuiRegions, line 248"),"when calling dispatch_RectDrawing_destroyRectDrawing in SotfrpGuiRegions, line 248")
endif
set MM=MM-1
endfunction
function Myt takes integer Nyt returns real
set O0w=CH[Nyt]
set l0w=VH[Nyt]
return O0w
endfunction
function cMc takes integer uMc,string rMc returns real
local real sMc
local real tMc
local real iMc
local real SMc
set w3[MM]=rMc
set MM=MM+1
if wj[uMc]==0 then
if uMc==0 then
call Mau("Nullpointer exception when calling RectDrawing.getMin","when calling error in RectDrawing, line 88")
else
call Mau("Called RectDrawing.getMin on invalid object.","when calling error in RectDrawing, line 88")
endif
endif
set iMc=Myt(uMc)
set SMc=l0w
set sMc=iMc
set tMc=SMc
set MM=MM-1
set W0w=sMc
set E0w=tMc
return W0w
endfunction
function opt takes integer cpt returns real
set b0w=BH[cpt]
set y0w=NH[cpt]
return b0w
endfunction
function fMc takes integer pMc,string eMc returns real
local real qMc
local real aMc
local real nMc
local real dMc
set w3[MM]=eMc
set MM=MM+1
if wj[pMc]==0 then
if pMc==0 then
call Mau("Nullpointer exception when calling RectDrawing.getMax","when calling error in RectDrawing, line 97")
else
call Mau("Called RectDrawing.getMax on invalid object.","when calling error in RectDrawing, line 97")
endif
endif
set nMc=opt(pMc)
set dMc=y0w
set qMc=nMc
set aMc=dMc
set MM=MM-1
set Z0w=qMc
set U0w=aMc
return Z0w
endfunction
function Spt takes integer wpt,real upt,real rpt,string spt returns nothing
local real tpt
local real ipt
set w3[MM]=spt
set MM=MM+1
set tpt=upt
set ipt=rpt
set CH[wpt]=tpt
set VH[wpt]=ipt
call VNc(wpt,"when calling repaint in RectDrawing, line 94")
set MM=MM-1
endfunction
function yMc takes integer oMc,real OMc,real lMc,string bMc returns nothing
set w3[MM]=bMc
set MM=MM+1
if wj[oMc]==0 then
if oMc==0 then
call Mau("Nullpointer exception when calling RectDrawing.setMin","when calling error in RectDrawing, line 92")
else
call Mau("Called RectDrawing.setMin on invalid object.","when calling error in RectDrawing, line 92")
endif
endif
call Spt(oMc,OMc,lMc,"when calling setMin in RectDrawing, line 92")
set MM=MM-1
endfunction
function ECi takes integer gCi,unit hCi,string FCi returns nothing
local real kCi
local real jCi
local real xCi
local real vCi
local real mCi
local real QCi
local real WCi
set w3[MM]=FCi
set MM=MM+1
set mCi=cMc(nR[PX[gCi]],"when calling getMin in SotfrpGuiRegions, line 232")
set QCi=E0w
set kCi=mCi
set jCi=QCi
set vCi=jCi+128.
call fMc(nR[PX[gCi]],"when calling getMax in SotfrpGuiRegions, line 233")
set WCi=U0w
set xCi=WCi
if vCi!=xCi then
call yMc(nR[PX[gCi]],kCi,jCi+128.,"when calling setMin in SotfrpGuiRegions, line 234")
endif
set MM=MM-1
endfunction
function W9s takes unit v9s,real m9s,real Q9s returns nothing
call SetUnitPosition(v9s,m9s,Q9s)
endfunction
function tnu takes nothing returns real
set o1=GetSpellTargetX()
set O1=GetSpellTargetY()
return o1
endfunction
function EUi takes integer QUi,unit WUi returns nothing
call W9s(WUi,tnu(),O1)
endfunction
function qpt takes integer Opt,real lpt,real bpt,string ypt returns nothing
local real ppt
local real ept
set w3[MM]=ypt
set MM=MM+1
set ppt=lpt
set ept=bpt
set BH[Opt]=ppt
set NH[Opt]=ept
call VNc(Opt,"when calling repaint in RectDrawing, line 103")
set MM=MM-1
endfunction
function gMc takes integer RMc,real TMc,real YMc,string GMc returns nothing
set w3[MM]=GMc
set MM=MM+1
if wj[RMc]==0 then
if RMc==0 then
call Mau("Nullpointer exception when calling RectDrawing.setMax","when calling error in RectDrawing, line 101")
else
call Mau("Called RectDrawing.setMax on invalid object.","when calling error in RectDrawing, line 101")
endif
endif
call qpt(RMc,TMc,YMc,"when calling setMax in RectDrawing, line 101")
set MM=MM-1
endfunction
function GCi takes integer pCi,unit eCi,string qCi returns nothing
local real aCi
local real nCi
local real dCi
local real fCi
local real RCi
local real TCi
local real YCi
set w3[MM]=qCi
set MM=MM+1
set RCi=fMc(nR[IX[pCi]],"when calling getMax in SotfrpGuiRegions, line 228")
set TCi=U0w
set aCi=RCi
set nCi=TCi
set fCi=aCi-128.
set YCi=cMc(nR[IX[pCi]],"when calling getMin in SotfrpGuiRegions, line 229")
set dCi=YCi
if fCi!=dCi then
call gMc(nR[IX[pCi]],aCi-128.,nCi,"when calling setMax in SotfrpGuiRegions, line 230")
endif
set MM=MM-1
endfunction
function Ynu takes nothing returns real
set e1=GetSpellTargetX()
set q1=GetSpellTargetY()
return e1
endfunction
function Gnu takes nothing returns real
set a1=Ynu()
set n1=q1
return a1
endfunction
function GSc takes string TSc returns integer
local integer YSc
set w3[MM]=TSc
set MM=MM+1
if eg==0 then
if qg<32768 then
set qg=qg+1
set YSc=qg
set ag[YSc]=808
else
call Mau("Out of memory: Could not create ForGroupCallbackD_forDestructablesInRange_onPointCast_SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 121")
set YSc=0
endif
else
set eg=eg-1
set YSc=pg[eg]
set ag[YSc]=808
endif
set MM=MM-1
return YSc
endfunction
function Lcu takes real Acu,real Dcu,real Hcu,integer Jcu,string Kcu returns nothing
set w3[MM]=Kcu
set MM=MM+1
call YIu(bp,Acu-Hcu,Dcu-Hcu,Acu+Hcu,Dcu+Hcu)
call Bcu(bp,Jcu,"when calling forDestructablesInRect in ClosureForGroups, line 176")
set MM=MM-1
endfunction
function GPi takes integer pPi,unit ePi,real qPi,real aPi,string nPi returns nothing
local integer dPi
local real fPi
local real RPi
local real TPi
local real YPi
set w3[MM]=nPi
set MM=MM+1
set TPi=qPi
set YPi=aPi
set fPi=TPi
set RPi=YPi
set dPi=GSc("when calling alloc_ForGroupCallbackD_forDestructablesInRange_onPointCast_SotfrpGuiDestructables in SotfrpGuiDestructables, line 121")
call Lcu(fPi,RPi,200.,dPi,"when calling forDestructablesInRange in SotfrpGuiDestructables, line 121")
set MM=MM-1
endfunction
function Tpt takes integer Rpt returns nothing
endfunction
function Hpt takes integer Qpt,player Wpt,string Ept,boolean Zpt,real Upt,real Ipt,real Ppt,real Apt,string Dpt returns nothing
set w3[MM]=Dpt
set MM=MM+1
call Tpt(Qpt)
set KH[Qpt]=rDs("when calling new_HashList in RectDrawing, line 54")
set LH[Qpt]=Wpt
set XH[Qpt]=Ept
if Upt<=Ppt then
set CH[Qpt]=Upt
set BH[Qpt]=Ppt
else
set CH[Qpt]=Ppt
set BH[Qpt]=Upt
endif
if Ipt<=Apt then
set VH[Qpt]=Ipt
set NH[Qpt]=Apt
else
set VH[Qpt]=Apt
set NH[Qpt]=Ipt
endif
if Zpt then
set CH[Qpt]=dUu(CH[Qpt]/128.)*128.
set VH[Qpt]=dUu(VH[Qpt]/128.)*128.
set BH[Qpt]=TUu(BH[Qpt]/128.)*128.
set NH[Qpt]=TUu(NH[Qpt]/128.)*128.
endif
set MH[Qpt]=Rect(0.,0.,0.,0.)
call VNc(Qpt,"when calling repaint in RectDrawing, line 75")
set MM=MM-1
endfunction
function PZS takes string UZS returns integer
local integer IZS
set w3[MM]=UZS
set MM=MM+1
if Nk==0 then
if Mk<32768 then
set Mk=Mk+1
set IZS=Mk
set wj[IZS]=1557
else
call Mau("Out of memory: Could not create RectDrawing.","when calling error in RectDrawing, line 5")
set IZS=0
endif
else
set Nk=Nk-1
set IZS=Bk[Nk]
set wj[IZS]=1557
endif
set MM=MM-1
return IZS
endfunction
function mpt takes player Ypt,string Gpt,boolean gpt,real hpt,real Fpt,real kpt,real jpt,string xpt returns integer
local integer vpt
set w3[MM]=xpt
set MM=MM+1
set vpt=PZS("when calling alloc_RectDrawing in RectDrawing, line 53")
call Hpt(vpt,Ypt,Gpt,gpt,hpt,Fpt,kpt,jpt,"when calling construct_RectDrawing in RectDrawing, line 53")
set MM=MM-1
return vpt
endfunction
function JCi takes integer ZCi,unit UCi,real ICi,real PCi,string ACi returns nothing
local real DCi
local real HCi
set w3[MM]=ACi
set MM=MM+1
if not YR[AX[ZCi]]then
set YR[AX[ZCi]]=true
set DCi=ICi
set HCi=PCi
set RR[AX[ZCi]]=DCi
set TR[AX[ZCi]]=HCi
else
set nR[AX[ZCi]]=mpt(pa[AX[ZCi]],Ue,true,RR[AX[ZCi]],TR[AX[ZCi]],ICi,PCi,"when calling new_RectDrawing in SotfrpGuiRegions, line 241")
call Pno(dR[AX[ZCi]],nR[AX[ZCi]],"when calling add in SotfrpGuiRegions, line 242")
call hYr(AX[ZCi],tR)
call YYr(AX[ZCi],iR,false)
endif
set MM=MM-1
endfunction
function grs takes real Trs,real Yrs,real Grs returns rect
return Rect(Trs-Grs,Yrs-Grs,Trs+Grs,Yrs+Grs)
endfunction
function Oou takes real uou,real rou,real sou,integer tou,string iou returns nothing
local rect Sou
local real cou
local real oou
set w3[MM]=iou
set MM=MM+1
call Ucu(tou)
set cou=uou
set oou=rou
set ep=cou
set qp=oou
set pp=lUu(sou)
set yp=null
set Sou=grs(uou,rou,sou)
call EnumDestructablesInRect(Sou,filterEnumDestructablesInCircleBJ,raw)
call Tgc(tou,yp,"when calling callback in ClosureForGroups, line 203")
call Pcu("when calling popCallbackD in ClosureForGroups, line 204")
set MM=MM-1
set Sou=null
endfunction
function nSc takes string qSc returns integer
local integer aSc
set w3[MM]=qSc
set MM=MM+1
if eg==0 then
if qg<32768 then
set qg=qg+1
set aSc=qg
set ag[aSc]=810
else
call Mau("Out of memory: Could not create ForGroupCallbackD_forNearestDestructable_onPointCast_SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 118")
set aSc=0
endif
else
set eg=eg-1
set aSc=pg[eg]
set ag[aSc]=810
endif
set MM=MM-1
return aSc
endfunction
function SPi takes integer VIi,unit BIi,real NIi,real MIi,string wPi returns nothing
local integer uPi
local real rPi
local real sPi
local real tPi
local real iPi
set w3[MM]=wPi
set MM=MM+1
set tPi=NIi
set iPi=MIi
set rPi=tPi
set sPi=iPi
set uPi=nSc("when calling alloc_ForGroupCallbackD_forNearestDestructable_onPointCast_SotfrpGuiDestructables in SotfrpGuiDestructables, line 118")
call Oou(rPi,sPi,50.,uPi,"when calling forNearestDestructable in SotfrpGuiDestructables, line 118")
set MM=MM-1
endfunction
function PSc takes string USc returns integer
local integer ISc
set w3[MM]=USc
set MM=MM+1
if lg==0 then
if bg<32768 then
set bg=bg+1
set ISc=bg
set yg[ISc]=802
else
call Mau("Out of memory: Could not create ForGroupCallback_forUnitsOfPlayer_onPointCast_SotfrpGuiLocust.","when calling error in SotfrpGuiLocust, line 25")
set ISc=0
endif
else
set lg=lg-1
set ISc=Og[lg]
set yg[ISc]=802
endif
set MM=MM-1
return ISc
endfunction
function TAi takes integer yAi,unit pAi,real eAi,real qAi,string aAi returns nothing
local integer nAi
local player dAi
local real fAi
local real RAi
set w3[MM]=aAi
set MM=MM+1
set dAi=pa[DL[yAi]]
set nAi=PSc("when calling alloc_ForGroupCallback_forUnitsOfPlayer_onPointCast_SotfrpGuiLocust in SotfrpGuiLocust, line 25")
set fAi=eAi
set RAi=qAi
set HL[nAi]=fAi
set JL[nAi]=RAi
set KL[nAi]=DL[yAi]
call kcu(dAi,nAi,"when calling forUnitsOfPlayer in SotfrpGuiLocust, line 25")
set MM=MM-1
set dAi=null
endfunction
function Evu takes integer Wvu returns integer
return svu(Wvu,"numVar")
endfunction
function nTr takes integer lTr,real bTr,real yTr returns destructable
local real pTr
local real eTr
local integer qTr
local integer aTr
if Kf[lTr]then
set eTr=GetRandomReal(0.,360.)
else
set eTr=Lf[lTr]
endif
set pTr=eTr
if Cf[lTr]then
set aTr=GetRandomInt(0,Evu(Hf[lTr])-1)
else
set aTr=Vf[lTr]
endif
set qTr=aTr
return lHu(pa[lTr],Hf[lTr],qrs(bTr,yTr,Jf[lTr]),T3,Y3,pTr,Xf[lTr],qTr)
endfunction
function iAi takes integer uAi,unit rAi,real sAi,real tAi returns nothing
call nTr(AL[uAi],sAi,tAi)
endfunction
function Equ takes string mqu,real Qqu,real Wqu returns effect
return AddSpecialEffect(mqu,Qqu,Wqu)
endfunction
function ZvS takes string WvS returns integer
local integer EvS
set w3[MM]=WvS
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set EvS=ZG
set UG[EvS]=685
else
call Mau("Out of memory: Could not create CallbackSingle_doAfter_onPointCast_Meteor.","when calling error in Meteor, line 51")
set EvS=0
endif
else
set EG=EG-1
set EvS=WG[EG]
set UG[EvS]=685
endif
set MM=MM-1
return EvS
endfunction
function n6t takes integer O6t,unit l6t,real b6t,real y6t,string p6t returns nothing
local integer e6t
local real q6t
local real a6t
set w3[MM]=p6t
set MM=MM+1
call vqu(Equ("Abilities\\Spells\\Other\\Meteor\\Meteor.mdx",b6t,y6t))
call UnitDamagePoint(l6t,0.875,200.,b6t,y6t,475.,false,false,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
set e6t=ZvS("when calling alloc_CallbackSingle_doAfter_onPointCast_Meteor in Meteor, line 51")
call KGs(e6t)
set vP[e6t]=l6t
set q6t=b6t
set a6t=y6t
set mP[e6t]=q6t
set QP[e6t]=a6t
call Jou(0.875,e6t,"when calling doAfter in Meteor, line 51")
set MM=MM-1
endfunction
function sgc takes integer NGc,unit MGc,real wgc,real ugc,string rgc returns nothing
set w3[MM]=rgc
set MM=MM+1
if og[NGc]==0 then
if NGc==0 then
call Mau("Nullpointer exception when calling OnPointCast.fireEx","when calling error in ClosureEvents, line 89")
else
call Mau("Called OnPointCast.fireEx on invalid object.","when calling error in ClosureEvents, line 89")
endif
endif
if og[NGc]<=1470 then
if og[NGc]<=1469 then
if og[NGc]<=1468 then
call n6t(NGc,MGc,wgc,ugc,"when calling fireEx_onPointCast_Meteor in ClosureEvents, line 89")
else
call SPi(NGc,MGc,wgc,ugc,"when calling fireEx_onPointCast_SotfrpGuiDestructables in ClosureEvents, line 89")
endif
else
call GPi(NGc,MGc,wgc,ugc,"when calling fireEx_onPointCast_SotfrpGuiDestructables in ClosureEvents, line 89")
endif
elseif og[NGc]<=1472 then
if og[NGc]<=1471 then
call iAi(NGc,MGc,wgc,ugc)
else
call TAi(NGc,MGc,wgc,ugc,"when calling fireEx_onPointCast_SotfrpGuiLocust in ClosureEvents, line 89")
endif
else
call JCi(NGc,MGc,wgc,ugc,"when calling fireEx_onPointCast_SotfrpGuiRegions in ClosureEvents, line 89")
endif
set MM=MM-1
endfunction
function GYs takes integer RYs,unit TYs,string YYs returns nothing
set w3[MM]=YYs
set MM=MM+1
call sgc(RYs,TYs,Gnu(),n1,"when calling fireEx in ClosureEvents, line 87")
set MM=MM-1
endfunction
function HXi takes integer EXi,unit ZXi,string UXi returns nothing
local real IXi
local real PXi
local real AXi
local real DXi
set w3[MM]=UXi
set MM=MM+1
set AXi=cMc(nR[EX[EXi]],"when calling getMin in SotfrpGuiRegions, line 217")
set DXi=E0w
set IXi=AXi
set PXi=DXi
call yMc(nR[EX[EXi]],IXi,pfo(PXi-128.,Ce),"when calling setMin in SotfrpGuiRegions, line 218")
set MM=MM-1
endfunction
function WXi takes integer FXi,unit kXi,string jXi returns nothing
local real xXi
local real vXi
local real mXi
local real QXi
set w3[MM]=jXi
set MM=MM+1
set mXi=fMc(nR[WX[FXi]],"when calling getMax in SotfrpGuiRegions, line 214")
set QXi=U0w
set xXi=mXi
set vXi=QXi
call gMc(nR[WX[FXi]],dfo(xXi+128.,Ve),vXi,"when calling setMax in SotfrpGuiRegions, line 215")
set MM=MM-1
endfunction
function HGc takes integer AGc,integer DGc returns nothing
endfunction
function cYs takes integer iYs,unit SYs returns nothing
call HGc(iYs,GetSpellAbilityId())
endfunction
function hXi takes integer dXi,unit fXi,string RXi returns nothing
local real TXi
local real YXi
local real GXi
local real gXi
set w3[MM]=RXi
set MM=MM+1
set GXi=fMc(nR[QX[dXi]],"when calling getMax in SotfrpGuiRegions, line 211")
set gXi=U0w
set TXi=GXi
set YXi=gXi
call gMc(nR[QX[dXi]],TXi,dfo(YXi+128.,Be),"when calling setMax in SotfrpGuiRegions, line 212")
set MM=MM-1
endfunction
function nXi takes integer lXi,unit bXi,string yXi returns nothing
local real pXi
local real eXi
local real qXi
local real aXi
set w3[MM]=yXi
set MM=MM+1
set qXi=cMc(nR[mX[lXi]],"when calling getMin in SotfrpGuiRegions, line 208")
set aXi=E0w
set pXi=qXi
set eXi=aXi
call yMc(nR[mX[lXi]],pfo(pXi-128.,Xe),eXi,"when calling setMin in SotfrpGuiRegions, line 209")
set MM=MM-1
endfunction
function uCi takes integer JXi,unit KXi,string LXi returns nothing
local real XXi
local real CXi
local real VXi
local real BXi
local real NXi
local real MXi
local real wCi
set w3[MM]=LXi
set MM=MM+1
set NXi=cMc(nR[ZX[JXi]],"when calling getMin in SotfrpGuiRegions, line 220")
set MXi=E0w
set XXi=NXi
set CXi=MXi
set BXi=XXi+128.
set wCi=fMc(nR[ZX[JXi]],"when calling getMax in SotfrpGuiRegions, line 221")
set VXi=wCi
if BXi!=VXi then
call yMc(nR[ZX[JXi]],XXi+128.,CXi,"when calling setMin in SotfrpGuiRegions, line 222")
endif
set MM=MM-1
endfunction
function cgc takes integer tgc,unit igc,unit Sgc returns nothing
endfunction
function vYs takes integer jYs,unit xYs returns nothing
call cgc(jYs,xYs,GetSpellTargetUnit())
endfunction
function FWu takes player gWu,unit hWu returns nothing
if ea==gWu then
call ClearSelection()
call SelectUnit(hWu,true)
endif
endfunction
function btu takes nothing returns real
set d3=GetCameraTargetPositionX()
set f3=GetCameraTargetPositionY()
return d3
endfunction
function Gcc takes string Tcc returns integer
local integer Ycc
set w3[MM]=Tcc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set Ycc=sg
set tg[Ycc]=750
else
call Mau("Out of memory: Could not create EventListener_add_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 113")
set Ycc=0
endif
else
set rg=rg-1
set Ycc=ug[rg]
set tg[Ycc]=750
endif
set MM=MM-1
return Ycc
endfunction
function VTs takes integer CTs returns nothing
set EW[CTs]=0
set ZW[CTs]=0
set UW[CTs]=0
endfunction
function NTs takes integer BTs returns nothing
call VTs(BTs)
endfunction
function Rcc takes string dcc returns integer
local integer fcc
set w3[MM]=dcc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set fcc=sg
set tg[fcc]=749
else
call Mau("Out of memory: Could not create EventListener_add_SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 106")
set fcc=0
endif
else
set rg=rg-1
set fcc=ug[rg]
set tg[fcc]=749
endif
set MM=MM-1
return fcc
endfunction
function npt takes integer apt returns real
set p0w=tIu(MH[apt])
set e0w=V1
return p0w
endfunction
function mMc takes integer hMc,string FMc returns real
local real kMc
local real jMc
local real xMc
local real vMc
set w3[MM]=FMc
set MM=MM+1
if wj[hMc]==0 then
if hMc==0 then
call Mau("Nullpointer exception when calling RectDrawing.getCenter","when calling error in RectDrawing, line 106")
else
call Mau("Called RectDrawing.getCenter on invalid object.","when calling error in RectDrawing, line 106")
endif
endif
set xMc=npt(hMc)
set vMc=e0w
set kMc=xMc
set jMc=vMc
set MM=MM-1
set d4=kMc
set f4=jMc
return d4
endfunction
function nSu takes unit ySu,eventid pSu,integer eSu,string qSu returns integer
local integer aSu
set w3[MM]=qSu
set MM=MM+1
set aSu=QHr(ySu)
if aSu<=0 then
set MM=MM-1
return eSu
endif
set EW[eSu]=giu(pSu,"when calling toIntId in ClosureEvents, line 124")
if up[aSu]!=0 then
set UW[up[aSu]]=eSu
set ZW[eSu]=up[aSu]
endif
set up[aSu]=eSu
set MM=MM-1
return eSu
endfunction
function cgr takes integer VGr,string BGr returns unit
local unit NGr
local unit MGr
local unit wgr
local integer ugr
local integer rgr
local unit sgr
local playerunitevent tgr
local unit igr
local playerunitevent Sgr
set w3[MM]=BGr
set MM=MM+1
set MGr=I5r(pa[VGr],sR,mMc(nR[VGr],"when calling getCenter in SotfrpGuiRegions, line 101"),f4,wwu(270.))
call s9s(MGr,da)
set wgr=MGr
call c0s(wgr,255,255,255,25)
set NGr=wgr
if ea!=pa[VGr]then
call K9s(NGr,0.)
endif
call KZc(fR,vvr(NGr),CGr(VGr,"when calling retrieveCoreRectDrawing in SotfrpGuiRegions, line 105"),"when calling put in SotfrpGuiRegions, line 105")
set sgr=NGr
set tgr=EVENT_PLAYER_UNIT_SELECTED
set ugr=Rcc("when calling alloc_EventListener_add_SotfrpGuiRegions in SotfrpGuiRegions, line 106")
call NTs(ugr)
set iX[ugr]=VGr
set SX[ugr]=NGr
call nSu(sgr,tgr,ugr,"when calling add in SotfrpGuiRegions, line 106")
set igr=NGr
set Sgr=EVENT_PLAYER_UNIT_DESELECTED
set rgr=Gcc("when calling alloc_EventListener_add_SotfrpGuiRegions in SotfrpGuiRegions, line 113")
call NTs(rgr)
set cX[rgr]=VGr
set oX[rgr]=NGr
call nSu(igr,Sgr,rgr,"when calling add in SotfrpGuiRegions, line 113")
set MM=MM-1
set hnw=NGr
set NGr=null
set MGr=null
set wgr=null
set sgr=null
set tgr=null
set igr=null
set Sgr=null
return hnw
endfunction
function ftu takes player atu,real ntu,real dtu returns nothing
call SetCameraQuickPositionForPlayer(atu,ntu,dtu)
endfunction
function qtu takes player ytu,real ptu,real etu returns nothing
call SetCameraPositionForPlayer(ytu,ptu,etu)
endfunction
function wVi takes integer VCi,unit BCi,string NCi returns nothing
local unit MCi
set w3[MM]=NCi
set MM=MM+1
set MCi=cgr(HX[VCi],"when calling initSpecifier in SotfrpGuiRegions, line 250")
call FWu(pa[HX[VCi]],MCi)
call ftu(pa[HX[VCi]],btu(),f3)
call qtu(pa[HX[VCi]],F7s(MCi),h3)
call YYr(HX[VCi],tR,false)
call hYr(HX[VCi],iR)
set MM=MM-1
set MCi=null
endfunction
function yCi takes integer rCi,unit sCi,string tCi returns nothing
local real iCi
local real SCi
local real cCi
local real oCi
local real OCi
local real lCi
local real bCi
set w3[MM]=tCi
set MM=MM+1
set OCi=fMc(nR[UX[rCi]],"when calling getMax in SotfrpGuiRegions, line 224")
set lCi=U0w
set iCi=OCi
set SCi=lCi
set oCi=SCi-128.
call cMc(nR[UX[rCi]],"when calling getMin in SotfrpGuiRegions, line 225")
set bCi=E0w
set cCi=bCi
if oCi!=cCi then
call gMc(nR[UX[rCi]],iCi,SCi-128.,"when calling setMax in SotfrpGuiRegions, line 226")
endif
set MM=MM-1
endfunction
function BGc takes integer XGc,unit CGc,string VGc returns nothing
set w3[MM]=VGc
set MM=MM+1
if og[XGc]==0 then
if XGc==0 then
call Mau("Nullpointer exception when calling OnCastListener.fire","when calling error in ClosureEvents, line 56")
else
call Mau("Called OnCastListener.fire on invalid object.","when calling error in ClosureEvents, line 56")
endif
endif
if og[XGc]<=1461 then
if og[XGc]<=1458 then
if og[XGc]<=1456 then
if og[XGc]<=1455 then
call cYs(XGc,CGc)
else
call EUi(XGc,CGc)
endif
elseif og[XGc]<=1457 then
call nXi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
else
call hXi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
endif
elseif og[XGc]<=1460 then
if og[XGc]<=1459 then
call WXi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
else
call HXi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
endif
else
call uCi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
endif
elseif og[XGc]<=1465 then
if og[XGc]<=1463 then
if og[XGc]<=1462 then
call yCi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
else
call GCi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
endif
elseif og[XGc]<=1464 then
call ECi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
else
call CCi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
endif
elseif og[XGc]<=1473 then
if og[XGc]<=1466 then
call wVi(XGc,CGc,"when calling fire_onCast_SotfrpGuiRegions in ClosureEvents, line 56")
else
call GYs(XGc,CGc,"when calling fire in ClosureEvents, line 56")
endif
else
call vYs(XGc,CGc)
endif
set MM=MM-1
endfunction
function tcu takes string BSu returns nothing
local unit NSu
local integer MSu
local integer wcu
local integer ucu
local integer rcu
local integer scu
set w3[MM]=BSu
set MM=MM+1
set NSu=GetTriggerUnit()
set MSu=GetSpellAbilityId()
if PZc(My,vvr(NSu),"when calling has in ClosureEvents, line 191")then
set wcu=BZc(My,vvr(NSu),"when calling get in ClosureEvents, line 192")
loop
exitwhen not(wcu!=0)
set ucu=IW[wcu]
if AW[wcu]==-1 or AW[wcu]==MSu then
call BGc(wcu,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 196")
endif
set wcu=ucu
endloop
endif
if PZc(Ny,MSu,"when calling has in ClosureEvents, line 198")then
set rcu=BZc(Ny,MSu,"when calling get in ClosureEvents, line 199")
loop
exitwhen not(rcu!=0)
set scu=IW[rcu]
if DW[rcu]==null or DW[rcu]==NSu then
call BGc(rcu,GetSpellAbilityUnit(),"when calling fire in ClosureEvents, line 203")
endif
set rcu=scu
endloop
endif
set MM=MM-1
set NSu=null
endfunction
function cSu takes string SSu returns nothing
set w3[MM]=SSu
set MM=MM+1
call tcu("when calling onSpellEffect in ClosureEvents, line 310")
set MM=MM-1
endfunction
function hTo takes nothing returns nothing
set MM=0
call cSu("ClosureEvents, line 310")
endfunction
function Gjw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function gjw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function hjw takes nothing returns nothing
if gjw()then
call UnitDamageTargetBJ(Nu,GetEnumUnit(),xu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_COLD)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
elseif Gjw()then
call UnitDamageTargetBJ(Nu,GetEnumUnit(),vu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_FIRE)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
else
call UnitDamageTargetBJ(Nu,GetEnumUnit(),mu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_LIGHTNING)
call AddSpecialEffectTargetUnitBJ("chest",GetEnumUnit(),"Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
endif
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endfunction
function hrs takes nothing returns boolean
return true
endfunction
function gxr takes trigger Yxr,playerunitevent Gxr returns nothing
call TriggerRegisterAnyUnitEventBJ(Yxr,Gxr)
endfunction
function htu takes nothing returns boolean
local trigger Gtu
local trigger gtu
set my=1097034870
set Qy=1095577655
set Wy=1112354865
set Ey=1112354866
set Zy=70
set Uy=3
set Iy=2
set Py=5
set Ay=0.25
set Dy=256.
set Hy=60
set Jy="W"
set Gtu=CreateTrigger()
call gxr(Gtu,EVENT_PLAYER_UNIT_SPELL_EFFECT)
set gtu=Gtu
call ixr(gtu,Filter(Cqw))
set Gtu=null
set gtu=null
return true
endfunction
function hvw takes nothing returns nothing
call CameraClearNoiseForPlayer(GetEnumPlayer())
endfunction
function i0u takes nothing returns nothing
local unit u0u=GetSpellAbilityUnit()
local location r0u=GetUnitLoc(u0u)
local location s0u=GetSpellTargetLoc()
local timer t0u=CreateTimer()
call SaveLocationHandle(nr,GetHandleId(t0u),StringHash("l1"),r0u)
call SaveLocationHandle(nr,GetHandleId(t0u),StringHash("l2"),s0u)
call SaveUnitHandle(nr,GetHandleId(t0u),StringHash("u"),u0u)
set u0u=null
set r0u=null
set s0u=null
call SaveInteger(nr,GetHandleId(t0u),StringHash("i"),1)
call TimerStart(t0u,0.1,true,Yyw)
set t0u=null
set u0u=null
set r0u=null
set s0u=null
set t0u=null
endfunction
function i3w takes nothing returns nothing
local integer t3w=1
loop
exitwhen t3w>1000000000
if Gr[t3w]==null then
set Gr[t3w]=GetSpellAbilityUnit()
set gr[t3w]=GetSpellTargetLoc()
return
endif
set t3w=t3w+1
endloop
set t3w=0
endfunction
function i6w takes nothing returns boolean
if GetSpellAbilityId()==1093684017 or GetSpellAbilityId()==1093684018 then
return true
else
return false
endif
endfunction
function tAw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function iAw takes nothing returns nothing
if tAw()then
call UnitRemoveAbilityBJ(1096905835,GetEnumUnit())
endif
endfunction
function iBw takes nothing returns nothing
local group tBw=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(Lcw))
if GetEventPlayerChatString()=="'nocooldown" then
call ForGroup(tBw,Xcw)
elseif GetEventPlayerChatString()=="@nocooldown" then
call ForGroup(tBw,Ccw)
endif
call DestroyGroup(tBw)
set tBw=null
set tBw=null
endfunction
function tHw takes nothing returns boolean
if not(GetDestructableMaxLife(GetEnumDestructable())<1000000000.00)then
return false
endif
if not(GetDestructableMaxLife(GetEnumDestructable())!=777.77)then
return false
endif
return true
endfunction
function iHw takes nothing returns nothing
if tHw()then
call SetDestructableInvulnerableBJ(GetEnumDestructable(),true)
call KillDestructable(GetEnumDestructable())
call RemoveDestructable(GetEnumDestructable())
else
call DoNothing()
endif
endfunction
function iJw takes nothing returns nothing
call RemoveUnit(GetEnumUnit())
endfunction
function iKw takes nothing returns nothing
local location rKw=GetSpellTargetLoc()
local integer sKw=GetPlayerId(GetTriggerPlayer())
local destructable tKw=null
if mw[sKw]then
set vw[sKw]=GetRandomReal(0.80,1.20)
endif
if is[sKw]then
set Ss[sKw]=GetRandomReal(0.,360.)
endif
if dt[sKw]then
set nt[sKw]=GetRandomInt(0,ft[sKw])
endif
set tKw=CreateDestructableZ(j[sKw],GetLocationX(rKw),GetLocationY(rKw),Gt[sKw]+GetLocationZ(rKw),Ss[sKw],vw[sKw],nt[sKw])
call FlushChildHashtable(nr,GetHandleId(tKw))
if qt[sKw]==false then
call SetDestructableOccluderHeight(tKw,at[sKw])
endif
if Rt[sKw]then
call SetDestructableInvulnerable(tKw,true)
endif
set sKw=0
call RemoveLocation(rKw)
set rKw=null
set tKw=null
set rKw=null
set tKw=null
endfunction
function iLw takes nothing returns boolean
if IsUnitType(GetFilterUnit(),UNIT_TYPE_FLYING)==false and IsUnitAlly(GetFilterUnit(),GetOwningPlayer(Zr[kr[3]]))==false and GetOwningPlayer(GetFilterUnit())!=GetOwningPlayer(Zr[kr[3]])then
return true
else
return false
endif
endfunction
function iMw takes nothing returns boolean
if GetSpellAbilityId()==1093679185 then
return true
endif
return false
endfunction
function iPw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call CreateItemLoc(B[GetForLoopIndexA()],G)
call RemoveLocation(G)
endfunction
function iQw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(Srw))
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],crw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function Nku takes string Kku returns boolean
local integer Lku
local integer Xku
local integer Cku
local integer Vku
local integer Bku
set w3[MM]=Kku
set MM=MM+1
set Lku=0
set Xku=0
set Cku=0
set Vku=0
set Bku=0
set uq=Lku
set rq=Xku
set sq=Cku
set tq=Vku
set iq=Bku
set Sq=InitGameCache("m.w3v")
set cq=RRu(0,"when calling get in Metadata, line 16")
set oq=RRu(1,"when calling get in Metadata, line 17")
set Oq=RRu(2,"when calling get in Metadata, line 18")
set lq=RRu(3,"when calling get in Metadata, line 19")
set bq=RRu(4,"when calling get in Metadata, line 20")
set yq=5
set MM=MM-1
return true
endfunction
function iRo takes nothing returns boolean
set MM=0
return Nku("Metadata, line 1")
endfunction
function WYu takes hashtable vYu,integer mYu,integer QYu returns trigger
return LoadTriggerHandle(vYu,mYu,QYu)
endfunction
function A6S takes integer I6S,integer P6S returns trigger
return WYu(VR,I6S,P6S)
endfunction
function rco takes integer NSo,integer MSo,string wco returns trigger
local trigger uco
set w3[MM]=wco
set MM=MM+1
if Yh[NSo]==0 then
if NSo==0 then
call Mau("Nullpointer exception when calling Table.loadTrigger","when calling error in Table, line 111")
else
call Mau("Called Table.loadTrigger on invalid object.","when calling error in Table, line 111")
endif
endif
set uco=A6S(NSo,MSo)
set MM=MM-1
set Wdw=uco
set uco=null
return Wdw
endfunction
function Cvr takes integer Kvr,string Lvr returns trigger
local trigger Xvr
set w3[MM]=Lvr
set MM=MM+1
call yco(YT,0,ConvertFogState(Kvr),"when calling saveFogState in TypeCasting, line 95")
set Xvr=rco(YT,0,"when calling loadTrigger in TypeCasting, line 96")
set MM=MM-1
set mnw=Xvr
set Xvr=null
return mnw
endfunction
function sPu takes string uPu returns boolean
local boolean rPu
set w3[MM]=uPu
set MM=MM+1
set rPu=nxr(Cvr(BZc(Da,GetSpellAbilityId(),"when calling get in RegisterEvents, line 58"),"when calling triggerFromIndex in RegisterEvents, line 58"))
set MM=MM-1
return rPu
endfunction
function iTo takes nothing returns boolean
set MM=0
return sPu("RegisterEvents, line 58")
endfunction
function iUu takes nothing returns boolean
set Ua=340282366920938000000000000000000000000.
set Ia=-340282366920938000000000000000000000000.
return true
endfunction
function sUw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function tUw takes nothing returns boolean
if not sUw()then
return false
endif
return true
endfunction
function iUw takes nothing returns nothing
if tUw()then
call AddSpecialEffectTargetUnitBJ(Q[S2I(SubStringBJ(GetEventPlayerChatString(),7,7))],GetEnumUnit(),Qw[S2I(SubStringBJ(GetEventPlayerChatString(),5,6))])
set Ww[GetConvertedPlayerId(GetTriggerPlayer())]=Ww[GetConvertedPlayerId(GetTriggerPlayer())]+1
if GetTriggerPlayer()==Player(0)then
set Ew[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(1)then
set Zw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(2)then
set Kw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(3)then
set Jw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(4)then
set Hw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(5)then
set Dw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(6)then
set Aw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(7)then
set Pw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(8)then
set Iw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(9)then
set Uw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(10)then
set Xw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(11)then
set Lw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]]=GetLastCreatedEffectBJ()
else
call DoNothing()
endif
endif
endfunction
function iZu takes nothing returns boolean
set Ea=2
set Za=45.
return true
endfunction
function iZw takes nothing returns nothing
set Vs[Cs]=1114467444
set Cs=Cs+1
set Vs[Cs]=1114664057
set Cs=Cs+1
set Vs[Cs]=1113943649
set Cs=Cs+1
set Vs[Cs]=1113943655
set Cs=Cs+1
set Vs[Cs]=1113943667
set Cs=Cs+1
set Vs[Cs]=1115120993
set Cs=Cs+1
set Vs[Cs]=1115120994
set Cs=Cs+1
set Vs[Cs]=1112893805
set Cs=Cs+1
set Vs[Cs]=1112896364
set Cs=Cs+1
set Vs[Cs]=1112896372
set Cs=Cs+1
set Vs[Cs]=1112896368
set Cs=Cs+1
set Vs[Cs]=1111844210
set Cs=Cs+1
set Vs[Cs]=1113815395
set Cs=Cs+1
set Vs[Cs]=1113815346
set Cs=Cs+1
set Vs[Cs]=1112757326
set Cs=Cs+1
set Vs[Cs]=1112560453
set Cs=Cs+1
set Vs[Cs]=1112437609
set Cs=Cs+1
set Vs[Cs]=1112437615
set Cs=Cs+1
set Vs[Cs]=1112433775
set Cs=Cs+1
set Vs[Cs]=1110454839
set Cs=Cs+1
set Vs[Cs]=1110455106
set Cs=Cs+1
set Vs[Cs]=1110454840
set Cs=Cs+1
set Vs[Cs]=1110454320
set Cs=Cs+1
set Vs[Cs]=1110455119
set Cs=Cs+1
set Vs[Cs]=1110454864
set Cs=Cs+1
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function svw takes nothing returns boolean
if not(ju<=0)then
return false
endif
return true
endfunction
function tvw takes nothing returns boolean
if not(IsTriggerEnabled(Bt)==false)then
return false
endif
return true
endfunction
function ivw takes nothing returns nothing
call GroupAddUnitSimple(GetTriggerUnit(),Lu)
call GroupRemoveUnitSimple(GetTriggerUnit(),Hu)
call SaveLocationHandleBJ(GetSpellTargetLoc(),1,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveIntegerBJ(GetUnitAbilityLevelSwapped(1093678936,GetTriggerUnit()),5,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveIntegerBJ(0,6,GetHandleIdBJ(GetTriggerUnit()),Au)
if svw()then
call SaveIntegerBJ(3,7,GetHandleIdBJ(GetTriggerUnit()),Au)
else
call SaveIntegerBJ(1,7,GetHandleIdBJ(GetTriggerUnit()),Au)
endif
call SaveIntegerBJ(Vu,8,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveRealBJ(DistanceBetweenPoints(LoadLocationHandleBJ(0,GetHandleIdBJ(GetTriggerUnit()),Au),LoadLocationHandleBJ(1,GetHandleIdBJ(GetTriggerUnit()),Au)),9,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveIntegerBJ(0,10,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveRealBJ(0.00,11,GetHandleIdBJ(GetTriggerUnit()),Au)
call SaveBooleanBJ(true,12,GetHandleIdBJ(GetTriggerUnit()),Au)
set Vu=Vu+1
call UnitRemoveAbilityBJ(1093678936,GetTriggerUnit())
call SetPlayerAbilityAvailableBJ(true,1093678935,GetOwningPlayer(GetTriggerUnit()))
call RemoveUnit(LoadUnitHandleBJ(2,GetHandleIdBJ(GetTriggerUnit()),Au))
call RemoveUnit(LoadUnitHandleBJ(3,GetHandleIdBJ(GetTriggerUnit()),Au))
call IssueImmediateOrderBJ(GetTriggerUnit(),"stop")
call SetUnitAnimation(GetTriggerUnit(),"spell slam")
if tvw()then
call EnableTrigger(si)
endif
endfunction
function Ajw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Ejw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function Ijw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function Ljw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Pjw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function Qjw takes nothing returns boolean
if not(ModuloReal(ir,2.00)==0.00)then
return false
endif
return true
endfunction
function Wjw takes nothing returns boolean
if not(ModuloReal(ir,3.00)==0.00)then
return false
endif
return true
endfunction
function Xjw takes nothing returns boolean
if not(Sr==true)then
return false
endif
return true
endfunction
function Zjw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function rxw takes nothing returns boolean
if Mu==1 then
return true
endif
if Mu==3 then
return true
endif
return false
endfunction
function sxw takes nothing returns boolean
if not(CountUnitsInGroup(lr[rr])==0)then
return false
endif
if not rxw()then
return false
endif
return true
endfunction
function vjw takes nothing returns boolean
if not(DistanceBetweenPoints(Ju[7],Ju[5])<=Fu*5.00)then
return false
endif
if not(GetUnitFlyHeight(GetEnumUnit())<=10.)then
return false
endif
return true
endfunction
function mjw takes nothing returns boolean
if DistanceBetweenPoints(Ju[7],Ju[5])<=Fu+10.00 then
return true
endif
if vjw()then
return true
endif
return false
endfunction
function txw takes nothing returns boolean
if not mjw()then
return false
endif
return true
endfunction
function uxw takes nothing returns boolean
if not(CountUnitsInGroup(Lu)==0)then
return false
endif
return true
endfunction
function wxw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function ixw takes nothing returns nothing
set Ju[6]=GetUnitLoc(GetEnumUnit())
set Ju[7]=PolarProjectionBJ(Ju[6],Fu,AngleBetweenPoints(Ju[4],Ju[5]))
set yr=DistanceBetweenPoints(Ju[4],Ju[7])
call SetUnitPositionLoc(GetEnumUnit(),Ju[7])
call SetUnitFlyHeightBJ(GetEnumUnit(),4.00*(hu/tr)*yr*((-(1.00*yr))/tr+1.),0.00)
if txw()then
call KillUnit(GetEnumUnit())
call GroupRemoveUnitSimple(GetEnumUnit(),lr[rr])
call GroupAddUnitSimple(GetEnumUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetEnumUnit()),Au)
if Zjw()then
call AddSpecialEffectLocBJ(Ju[7],"Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
elseif Ejw()then
set ir=ir+1.
call SaveRealBJ(ir,11,Bu,Au)
if Qjw()then
set Ju[10]=PolarProjectionBJ(Ju[5],GetRandomReal(Gu,Wu),GetRandomDirectionDeg())
call CreateNUnitsAtLocFacingLocBJ(1,1747988545,GetOwningPlayer(Nu),Ju[5],Ju[10])
call GroupAddUnitSimple(GetLastCreatedUnit(),cr[rr])
call SaveLocationHandleBJ(Ju[10],1,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call SaveBooleanBJ(false,2,GetHandleIdBJ(GetLastCreatedUnit()),Au)
endif
if Wjw()then
call AddSpecialEffectLocBJ(Ju[7],"Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
else
call AddSpecialEffectLocBJ(Ju[7],"Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
if Xjw()then
if Ijw()then
call ForForce(GetPlayersAll(),Uww_1897)
endif
call SaveBooleanBJ(false,12,Bu,Au)
call CreateUbersplatBJ(Ju[7],"DHLB",100.,100.,100.,0.,false,true)
call FinishUbersplat(GetLastCreatedUbersplat())
call SetUbersplatRenderAlways(GetLastCreatedUbersplat(),true)
set br=1
loop
exitwhen br>5
set Ju[8]=PolarProjectionBJ(Ju[7],GetRandomReal(50.00,180.00),GetRandomDirectionDeg())
if Ajw()then
call CreateNUnitsAtLoc(1,1747994949,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
call SetUnitTimeScalePercent(GetLastCreatedUnit(),20.00)
elseif Pjw()then
call CreateNUnitsAtLoc(1,1747988534,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
else
call CreateNUnitsAtLoc(1,1747995719,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
call SetUnitTimeScalePercent(GetLastCreatedUnit(),20.00)
endif
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call UnitApplyTimedLifeBJ(5.00,1112820806,GetLastCreatedUnit())
call SaveIntegerBJ(Du+7,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
set br=br+1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Gu,Ju[7],Condition(Iww_830)),Pww_1449)
if Ljw()then
set br=1
loop
exitwhen br>3
call CreateNUnitsAtLoc(1,1747993905,GetOwningPlayer(Nu),Ju[7],bj_UNIT_FACING)
call KillUnit(GetLastCreatedUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
set br=br+1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Qu,Ju[7],Condition(Aww_99)),Dww_369)
endif
endif
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Gu,Ju[7],Condition(Hww_745)),Jww_912)
if sxw()then
if wxw()then
call ForForce(GetPlayersAll(),Kww_993)
endif
call GroupRemoveUnitSimple(Nu,Lu)
call FlushChildHashtableBJ(Bu,Au)
if uxw()then
call DisableTrigger(GetTriggeringTrigger())
set Vu=0
endif
call RemoveLocation(Ju[4])
call RemoveLocation(Ju[5])
endif
endif
call RemoveLocation(Ju[6])
call RemoveLocation(Ju[7])
endfunction
function j0u takes nothing returns boolean
return GetSpellAbilityId()==1095721581
endfunction
function F1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454615)==true)then
return false
endif
return true
endfunction
function G1w takes nothing returns boolean
if not(GetUnitAbilityLevelSwapped(1093681996,GetSpellAbilityUnit())==2)then
return false
endif
return true
endfunction
function R1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454832)==true)then
return false
endif
return true
endfunction
function T1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454617)==true)then
return false
endif
return true
endfunction
function Y1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454618)==true)then
return false
endif
return true
endfunction
function a1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454835)==true)then
return false
endif
return true
endfunction
function d1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454833)==true)then
return false
endif
return true
endfunction
function f1w takes nothing returns boolean
if not(GetUnitAbilityLevelSwapped(1093681996,GetSpellAbilityUnit())==3)then
return false
endif
return true
endfunction
function g1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454614)==true)then
return false
endif
return true
endfunction
function h1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454616)==true)then
return false
endif
return true
endfunction
function k1w takes nothing returns boolean
if not(GetUnitAbilityLevelSwapped(1093681996,GetSpellAbilityUnit())==1)then
return false
endif
return true
endfunction
function n1w takes nothing returns boolean
if not(UnitHasBuffBJ(GetSpellTargetUnit(),1110454834)==true)then
return false
endif
return true
endfunction
function j1w takes nothing returns nothing
call CreateNUnitsAtLoc(1,1747995215,GetOwningPlayer(GetSpellAbilityUnit()),GetUnitLoc(GetSpellAbilityUnit()),bj_UNIT_FACING)
call UnitApplyTimedLifeBJ(3.00,1112820806,GetLastCreatedUnit())
if k1w()then
if F1w()then
call UnitAddAbilityBJ(1093681997,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
elseif h1w()then
call UnitAddAbilityBJ(1093681999,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
elseif g1w()then
call SetUnitLifeBJ(GetSpellTargetUnit(),GetUnitStateSwap(UNIT_STATE_LIFE,GetSpellTargetUnit())-20.00)
else
call UnitAddAbilityBJ(1093681998,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
endif
elseif G1w()then
if Y1w()then
call UnitAddAbilityBJ(1093681997,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093681997,GetLastCreatedUnit(),2)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
elseif T1w()then
call UnitAddAbilityBJ(1093681999,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093681999,GetLastCreatedUnit(),2)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
elseif R1w()then
call SetUnitLifeBJ(GetSpellTargetUnit(),GetUnitStateSwap(UNIT_STATE_LIFE,GetSpellTargetUnit())-40.00)
else
call UnitAddAbilityBJ(1093681998,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093681998,GetLastCreatedUnit(),2)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
endif
elseif f1w()then
if d1w()then
call UnitAddAbilityBJ(1093681997,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093681997,GetLastCreatedUnit(),3)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
elseif n1w()then
call UnitAddAbilityBJ(1093681999,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093681999,GetLastCreatedUnit(),3)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
elseif a1w()then
call SetUnitLifeBJ(GetSpellTargetUnit(),GetUnitStateSwap(UNIT_STATE_LIFE,GetSpellTargetUnit())-60.00)
else
call UnitAddAbilityBJ(1093681998,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093681998,GetLastCreatedUnit(),3)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"innerfire",GetSpellTargetUnit())
endif
else
call DoNothing()
endif
endfunction
function j3w takes nothing returns nothing
local unit k3w=CreateUnitAtLoc(GetOwningPlayer(GetSpellAbilityUnit()),1865429555,GetSpellTargetLoc(),270.)
call UnitApplyTimedLife(k3w,1110455364,60.)
call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Other\\ToonBoom\\ToonBoom.mdl",GetUnitX(k3w)-17.5,GetUnitY(k3w)-17.5))
set k3w=null
set k3w=null
endfunction
function j6w takes nothing returns boolean
return IsPlayerEnemy(GetOwningPlayer(GetSpellAbilityUnit()),GetOwningPlayer(GetFilterUnit()))and IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)==false and BlzIsUnitInvulnerable(GetFilterUnit())==false
endfunction
function jJw takes nothing returns boolean
return GetUnitTypeId(GetOrderedUnit())==1747988528 and GetIssuedOrderId()==OrderId("smart")
endfunction
function jLw takes nothing returns boolean
if not(GetSpellAbilityId()==1093678640)then
return false
endif
return true
endfunction
function jMw takes nothing returns boolean
if GetSpellAbilityId()==1095066220 or GetSpellAbilityId()==1095656044 or GetSpellAbilityId()==1097622123 or GetSpellAbilityId()==1093677894 then
return true
endif
return false
endfunction
function G4c takes string T4c returns integer
local integer Y4c
set w3[MM]=T4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y4c=kj
set jj[Y4c]=1068
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions.","when calling error in ScmdSoundFunctions, line 30")
set Y4c=0
endif
else
set Fj=Fj-1
set Y4c=hj[Fj]
set jj[Y4c]=1068
endif
set MM=MM-1
return Y4c
endfunction
function R4c takes string d4c returns integer
local integer f4c
set w3[MM]=d4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f4c=kj
set jj[f4c]=846
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdSoundFunctions.","when calling error in ScmdSoundFunctions, line 26")
set f4c=0
endif
else
set Fj=Fj-1
set f4c=hj[Fj]
set jj[f4c]=846
endif
set MM=MM-1
return f4c
endfunction
function b4c takes string O4c returns integer
local integer l4c
set w3[MM]=O4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l4c=kj
set jj[l4c]=1065
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions.","when calling error in ScmdSoundFunctions, line 14")
set l4c=0
endif
else
set Fj=Fj-1
set l4c=hj[Fj]
set jj[l4c]=1065
endif
set MM=MM-1
return l4c
endfunction
function e4c takes string y4c returns integer
local integer p4c
set w3[MM]=y4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p4c=kj
set jj[p4c]=1066
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions.","when calling error in ScmdSoundFunctions, line 18")
set p4c=0
endif
else
set Fj=Fj-1
set p4c=hj[Fj]
set jj[p4c]=1066
endif
set MM=MM-1
return p4c
endfunction
function i4c takes string s4c returns integer
local integer t4c
set w3[MM]=s4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t4c=kj
set jj[t4c]=1063
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions.","when calling error in ScmdSoundFunctions, line 6")
set t4c=0
endif
else
set Fj=Fj-1
set t4c=hj[Fj]
set jj[t4c]=1063
endif
set MM=MM-1
return t4c
endfunction
function n4c takes string q4c returns integer
local integer a4c
set w3[MM]=q4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a4c=kj
set jj[a4c]=1067
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions.","when calling error in ScmdSoundFunctions, line 22")
set a4c=0
endif
else
set Fj=Fj-1
set a4c=hj[Fj]
set jj[a4c]=1067
endif
set MM=MM-1
return a4c
endfunction
function o4c takes string S4c returns integer
local integer c4c
set w3[MM]=S4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c4c=kj
set jj[c4c]=1064
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions.","when calling error in ScmdSoundFunctions, line 10")
set c4c=0
endif
else
set Fj=Fj-1
set c4c=hj[Fj]
set jj[c4c]=1064
endif
set MM=MM-1
return c4c
endfunction
function S9r takes string K8r returns boolean
local integer L8r
local integer X8r
local integer C8r
local integer V8r
local integer B8r
local integer N8r
local integer M8r
local integer w9r
local integer u9r
local integer r9r
local integer s9r
local integer t9r
local integer i9r
set w3[MM]=K8r
set MM=MM+1
set L8r=i4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdSoundFunctions, line 6")
set X8r=eDt(L8r,"when calling new_BuiltinData in ScmdSoundFunctions, line 6")
call Fao(X8r,o2u(),"when calling setArgumentsTypes in ScmdSoundFunctions, line 9")
call jBu(WHt(X8r,"when calling new_BuiltinFunction in ScmdSoundFunctions, line 6"),"playmusic","when calling registerProtectedBuiltin in ScmdSoundFunctions, line 6")
set C8r=o4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdSoundFunctions, line 10")
set V8r=eDt(C8r,"when calling new_BuiltinData in ScmdSoundFunctions, line 10")
call Pao(V8r,o2u(),m4u(),m4u(),"when calling setArgumentsTypes in ScmdSoundFunctions, line 13")
call jBu(WHt(V8r,"when calling new_BuiltinFunction in ScmdSoundFunctions, line 10"),"playmusicex","when calling registerProtectedBuiltin in ScmdSoundFunctions, line 10")
set B8r=b4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdSoundFunctions, line 14")
set N8r=eDt(B8r,"when calling new_BuiltinData in ScmdSoundFunctions, line 14")
call Fao(N8r,m4u(),"when calling setArgumentsTypes in ScmdSoundFunctions, line 17")
call jBu(WHt(N8r,"when calling new_BuiltinFunction in ScmdSoundFunctions, line 14"),"setmusicplayposition","when calling registerProtectedBuiltin in ScmdSoundFunctions, line 14")
set M8r=e4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdSoundFunctions, line 18")
set w9r=eDt(M8r,"when calling new_BuiltinData in ScmdSoundFunctions, line 18")
call Fao(w9r,m4u(),"when calling setArgumentsTypes in ScmdSoundFunctions, line 21")
call jBu(WHt(w9r,"when calling new_BuiltinFunction in ScmdSoundFunctions, line 18"),"setmusicvolume","when calling registerProtectedBuiltin in ScmdSoundFunctions, line 18")
set u9r=n4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdSoundFunctions, line 22")
set r9r=eDt(u9r,"when calling new_BuiltinData in ScmdSoundFunctions, line 22")
call Fao(r9r,y4u(),"when calling setArgumentsTypes in ScmdSoundFunctions, line 25")
call jBu(WHt(r9r,"when calling new_BuiltinFunction in ScmdSoundFunctions, line 22"),"stopmusic","when calling registerProtectedBuiltin in ScmdSoundFunctions, line 22")
set s9r=R4c("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdSoundFunctions in ScmdSoundFunctions, line 26")
call jBu(WHt(eDt(s9r,"when calling new_BuiltinData in ScmdSoundFunctions, line 26"),"when calling new_BuiltinFunction in ScmdSoundFunctions, line 26"),"resumemusic","when calling registerProtectedBuiltin in ScmdSoundFunctions, line 26")
set t9r=G4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSoundFunctions in ScmdSoundFunctions, line 30")
set i9r=eDt(t9r,"when calling new_BuiltinData in ScmdSoundFunctions, line 30")
call Fao(i9r,o2u(),"when calling setArgumentsTypes in ScmdSoundFunctions, line 32")
call jBu(WHt(i9r,"when calling new_BuiltinFunction in ScmdSoundFunctions, line 30"),"getsoundfileduration","when calling registerProtectedBuiltin in ScmdSoundFunctions, line 30")
set MM=MM-1
return true
endfunction
function jRo takes nothing returns boolean
set MM=0
return S9r("ScmdSoundFunctions, line 1")
endfunction
function CGs takes integer LGs,string XGs returns nothing
set w3[MM]=XGs
set MM=MM+1
call sjr(XW[LGs],"when calling release in ClosureTimers, line 124")
set MM=MM-1
endfunction
function rhS takes integer whS,string uhS returns nothing
set w3[MM]=uhS
set MM=MM+1
if UG[whS]==0 then
call Mau("Double free: object of type CallbackSingle","when calling error in ClosureTimers, line 107")
else
set WG[EG]=whS
set EG=EG+1
set UG[whS]=0
endif
set MM=MM-1
endfunction
function AGs takes integer IGs,string PGs returns nothing
set w3[MM]=PGs
set MM=MM+1
call CGs(IGs,"when calling CallbackSingle_onDestroy in ClosureTimers, line 123")
call rhS(IGs,"when calling dealloc_CallbackSingle in ClosureTimers, line 123")
set MM=MM-1
endfunction
function MGS takes integer BGS,string NGS returns nothing
set w3[MM]=NGS
set MM=MM+1
if UG[BGS]==0 then
call Mau("Double free: object of type BuffInstance","when calling error in Buffs, line 48")
else
set WG[EG]=BGS
set EG=EG+1
set UG[BGS]=0
endif
set MM=MM-1
endfunction
function yYc takes integer OYc,unit lYc,integer bYc returns nothing
endfunction
function Yns takes integer dns,unit fns,integer Rns,integer Tns returns nothing
call yYc(dns,fns,Rns)
endfunction
function oYc takes integer sYc,unit tYc,integer iYc,integer SYc,string cYc returns nothing
set w3[MM]=cYc
set MM=MM+1
if KG[sYc]==0 then
if sYc==0 then
call Mau("Nullpointer exception when calling EventHandler.fire","when calling error in Buffs, line 14")
else
call Mau("Called EventHandler.fire on invalid object.","when calling error in Buffs, line 14")
endif
endif
call Yns(sYc,tYc,iYc,SYc)
set MM=MM-1
endfunction
function Mas takes integer Bas,string Nas returns nothing
set w3[MM]=Nas
set MM=MM+1
if cW[OW[Bas]]!=0 then
call oYc(cW[OW[Bas]],lW[Bas],bW[Bas],yW[Bas],"when calling fire in Buffs, line 66")
endif
call uUc(iW[OW[Bas]],vvr(lW[Bas]),"when calling remove in Buffs, line 67")
call I8s(lW[Bas],tW[OW[Bas]])
call CGs(Bas,"when calling CallbackSingle_onDestroy in Buffs, line 48")
set MM=MM-1
endfunction
function Vas takes integer Xas,string Cas returns nothing
set w3[MM]=Cas
set MM=MM+1
call Mas(Xas,"when calling BuffInstance_onDestroy in Buffs, line 64")
call MGS(Xas,"when calling dealloc_BuffInstance in Buffs, line 64")
set MM=MM-1
endfunction
function ihc takes integer shc,string thc returns nothing
set w3[MM]=thc
set MM=MM+1
if UG[shc]==0 then
if shc==0 then
call Mau("Nullpointer exception when calling CallbackSingle.CallbackSingle","when calling error in ClosureTimers, line 107")
else
call Mau("Called CallbackSingle.CallbackSingle on invalid object.","when calling error in ClosureTimers, line 107")
endif
endif
if UG[shc]<=679 then
if UG[shc]<=678 then
call AGs(shc,"when calling destroyCallbackSingle in ClosureTimers, line 107")
else
call Vas(shc,"when calling destroyBuffInstance in ClosureTimers, line 107")
endif
else
call AGs(shc,"when calling destroyCallbackSingle in ClosureTimers, line 107")
endif
set MM=MM-1
endfunction
function AUt takes integer vUt,string mUt returns nothing
local integer QUt
local integer WUt
local integer EUt
local boolean ZUt
local integer UUt
local integer IUt
local integer PUt
set w3[MM]=mUt
set MM=MM+1
set QUt=kAs(DJ[vUt],"when calling iterator in ScmdCoreBuiltins, line 336")
loop
exitwhen not PPs(QUt,"when calling hasNext in ScmdCoreBuiltins, line 336")
set WUt=EPs(QUt,"when calling next in ScmdCoreBuiltins, line 336")
call NFo(0,HJ[vUt],WUt,"when calling resolve in ScmdCoreBuiltins, line 337",0,null,0,null)
set EUt=inw
set PUt=px[f7o(EUt,"when calling get in ScmdCoreBuiltins, line 338")]
set ZUt=PUt>=1422 and PUt<=1423
call KGo(5,EUt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdCoreBuiltins, line 339")
if ZUt then
exitwhen true
endif
endloop
call HPs(QUt,"when calling close in ScmdCoreBuiltins, line 336")
set UUt=kAs(DJ[vUt],"when calling iterator in ScmdCoreBuiltins, line 342")
loop
exitwhen not PPs(UUt,"when calling hasNext in ScmdCoreBuiltins, line 342")
set IUt=EPs(UUt,"when calling next in ScmdCoreBuiltins, line 342")
call KGo(5,IUt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdCoreBuiltins, line 343")
endloop
call HPs(UUt,"when calling close in ScmdCoreBuiltins, line 342")
call vEc(DJ[vUt],"when calling dispatch_HashList_destroyHashList in ScmdCoreBuiltins, line 344")
call KGo(0,HJ[vUt],"when calling dispatch_Context_destroyContext in ScmdCoreBuiltins, line 345")
set MM=MM-1
endfunction
function pdt takes integer ldt,integer bdt,string ydt returns nothing
set w3[MM]=ydt
set MM=MM+1
call hUc(GJ[ldt],bdt,"when calling remove in SLangChatSystem, line 103")
set MM=MM-1
endfunction
function E3c takes integer m3c,integer Q3c,string W3c returns nothing
set w3[MM]=W3c
set MM=MM+1
if Uj[m3c]==0 then
if m3c==0 then
call Mau("Nullpointer exception when calling Log.untie","when calling error in SLangChatSystem, line 102")
else
call Mau("Called Log.untie on invalid object.","when calling error in SLangChatSystem, line 102")
endif
endif
call pdt(m3c,Q3c,"when calling untie in SLangChatSystem, line 102")
set MM=MM-1
endfunction
function ndt takes integer edt,integer qdt,string adt returns nothing
set w3[MM]=adt
set MM=MM+1
call Pno(GJ[edt],qdt,"when calling add in SLangChatSystem, line 100")
set MM=MM-1
endfunction
function v3c takes integer k3c,integer j3c,string x3c returns nothing
set w3[MM]=x3c
set MM=MM+1
if Uj[k3c]==0 then
if k3c==0 then
call Mau("Nullpointer exception when calling Log.tie","when calling error in SLangChatSystem, line 99")
else
call Mau("Called Log.tie on invalid object.","when calling error in SLangChatSystem, line 99")
endif
endif
call ndt(k3c,j3c,"when calling tie in SLangChatSystem, line 99")
set MM=MM-1
endfunction
function rft takes integer Bdt,integer Ndt,string Mdt returns nothing
local integer wft
local integer uft
set w3[MM]=Mdt
set MM=MM+1
if jJ[Bdt]!=0 then
call E3c(jJ[Bdt],Bdt,"when calling untie in SLangChatSystem, line 60")
endif
if Ndt!=0 then
set wft=Ndt
call v3c(wft,Bdt,"when calling tie in SLangChatSystem, line 61")
set uft=wft
else
set uft=0
endif
set jJ[Bdt]=uft
set MM=MM-1
endfunction
function t1o takes integer u1o,integer r1o,string s1o returns nothing
set w3[MM]=s1o
set MM=MM+1
if Dj[u1o]==0 then
if u1o==0 then
call Mau("Nullpointer exception when calling LogBoard.tie","when calling error in SLangChatSystem, line 58")
else
call Mau("Called LogBoard.tie on invalid object.","when calling error in SLangChatSystem, line 58")
endif
endif
call rft(u1o,r1o,"when calling tie in SLangChatSystem, line 58")
set MM=MM-1
endfunction
function Vdt takes integer Cdt returns nothing
endfunction
function w1o takes integer N3c,string M3c returns nothing
set w3[MM]=M3c
set MM=MM+1
if Dj[N3c]==0 then
if N3c==0 then
call Mau("Nullpointer exception when calling LogBoard.show","when calling error in SLangChatSystem, line 49")
else
call Mau("Called LogBoard.show on invalid object.","when calling error in SLangChatSystem, line 49")
endif
endif
call Vdt(N3c)
set MM=MM-1
endfunction
function PYs takes integer IYs returns nothing
set JW[IYs]=0
endfunction
function DYs takes integer AYs returns nothing
call PYs(AYs)
endfunction
function Oft takes integer cft,string oft returns nothing
set w3[MM]=oft
set MM=MM+1
set jJ[cft]=0
set xJ[cft]=0
set vJ[cft]=0
set mJ[cft]=true
set QJ[cft]=a4s("when calling new_LinkedList in SLangChatSystem, line 23")
set MM=MM-1
endfunction
function Pdu takes framehandle Edu,framepointtype Zdu,real Udu,real Idu returns nothing
call BlzFrameSetAbsPoint(Edu,Zdu,Udu,Idu)
endfunction
function Wdu takes string Qdu returns framehandle
return BlzCreateFrame(Qdu,be,0,0)
endfunction
function eIS takes string yIS returns integer
local integer pIS
set w3[MM]=yIS
set MM=MM+1
if dg==0 then
if fg<32768 then
set fg=fg+1
set pIS=fg
set Rg[pIS]=814
else
call Mau("Out of memory: Could not create FrameHandleListener_onClick_LogBoard_SLangChatSystem.","when calling error in SLangChatSystem, line 30")
set pIS=0
endif
else
set dg=dg-1
set pIS=ng[dg]
set Rg[pIS]=814
endif
set MM=MM-1
return pIS
endfunction
function rvr takes trigger Mxr,framehandle wvr,frameeventtype uvr returns event
return BlzTriggerRegisterFrameEvent(Mxr,wvr,uvr)
endfunction
function Fou takes integer Rou,framehandle Tou,frameeventtype You,string Gou returns integer
local integer gou
local integer hou
set w3[MM]=Gou
set MM=MM+1
call rvr(ap,Tou,You)
set HW[Rou]=You
set gou=l7s(Tou)
set hou=BZc(np,gou,"when calling get in ClosureFrames, line 82")
if hou!=0 then
set JW[Rou]=hou
endif
call KZc(np,gou,Rou,"when calling put in ClosureFrames, line 86")
set MM=MM-1
return Rou
endfunction
function mou takes framehandle kou,integer jou,string xou returns integer
local integer vou
set w3[MM]=xou
set MM=MM+1
set vou=Fou(jou,kou,FRAMEEVENT_CONTROL_CLICK,"when calling addListenerForFrame in ClosureFrames, line 36")
set MM=MM-1
return vou
endfunction
function tfu takes framehandle ufu,real rfu,real sfu returns nothing
call BlzFrameSetSize(ufu,rfu,sfu)
endfunction
function Gft takes integer pft,string eft returns nothing
local framehandle qft
local framehandle aft
local integer nft
local framehandle dft
local framehandle fft
local framehandle Rft
local framehandle Tft
local framehandle Yft
set w3[MM]=eft
set MM=MM+1
call Oft(pft,"when calling LogBoard_init in SLangChatSystem, line 26")
set qft=Wdu(le)
call Pdu(qft,FRAMEPOINT_TOPRIGHT,ye,pe)
set aft=qft
call tfu(aft,0.175,0.025)
set dft=aft
set Yft=dft
set nft=eIS("when calling alloc_FrameHandleListener_onClick_LogBoard_SLangChatSystem in SLangChatSystem, line 30")
call DYs(nft)
set WJ[nft]=pft
call mou(Yft,nft,"when calling onClick in SLangChatSystem, line 30")
set hJ[pft]=dft
set fft=mdu("ScriptDialogButtonText")
call wfu(fft,"Hide Log")
set FJ[pft]=fft
set Rft=Wdu("EscMenuTextAreaTemplate")
call Pdu(Rft,FRAMEPOINT_TOPRIGHT,Qus(ye,pe,0.,0.025),i1)
set Tft=Rft
call tfu(Tft,0.35,0.4)
set kJ[pft]=Tft
set MM=MM-1
set qft=null
set aft=null
set dft=null
set fft=null
set Rft=null
set Tft=null
set Yft=null
endfunction
function bIS takes string OIS returns integer
local integer lIS
set w3[MM]=OIS
set MM=MM+1
if Pj==0 then
if Aj<32768 then
set Aj=Aj+1
set lIS=Aj
set Dj[lIS]=1400
else
call Mau("Out of memory: Could not create LogBoard.","when calling error in SLangChatSystem, line 11")
set lIS=0
endif
else
set Pj=Pj-1
set lIS=Ij[Pj]
set Dj[lIS]=1400
endif
set MM=MM-1
return lIS
endfunction
function yft takes string lft returns integer
local integer bft
set w3[MM]=lft
set MM=MM+1
set bft=bIS("when calling alloc_LogBoard in SLangChatSystem, line 26")
call Gft(bft,"when calling construct_LogBoard in SLangChatSystem, line 26")
set MM=MM-1
return bft
endfunction
function Bqt takes integer Xqt,string Cqt returns nothing
local integer Vqt
set w3[MM]=Cqt
set MM=MM+1
set Vqt=yft("when calling new_LogBoard in SLangChatSystem, line 169")
call w1o(Vqt,"when calling show in SLangChatSystem, line 170")
call t1o(Vqt,R3c(Ka,"when calling log in SLangChatSystem, line 171"),"when calling tie in SLangChatSystem, line 171")
set MM=MM-1
endfunction
function Krs takes string Jrs returns nothing
endfunction
function Crs takes integer Lrs,integer Xrs returns nothing
if Lrs!=Xrs then
call Krs("Expected <"+tgu(Xrs)+">, Actual <"+tgu(Lrs)+">")
endif
endfunction
function CYs takes integer XYs returns nothing
set dp=dp/2
call Crs(dp,250)
endfunction
function LhS takes integer JhS,string KhS returns nothing
set w3[MM]=KhS
set MM=MM+1
if Lg[JhS]==0 then
call Mau("Double free: object of type DummyCaster","when calling error in DummyCaster, line 28")
else
set Hg[Jg]=JhS
set Jg=Jg+1
set Lg[JhS]=0
endif
set MM=MM-1
endfunction
function vxs takes integer xxs returns nothing
endfunction
function fxs takes integer nxs,string dxs returns nothing
set w3[MM]=dxs
set MM=MM+1
call vxs(nxs)
call LhS(nxs,"when calling dealloc_DummyCaster in DummyCaster, line 28")
set MM=MM-1
endfunction
function Vkc takes integer Xkc,string Ckc returns nothing
set w3[MM]=Ckc
set MM=MM+1
if Lg[Xkc]==0 then
if Xkc==0 then
call Mau("Nullpointer exception when calling DummyCaster.DummyCaster","when calling error in DummyCaster, line 28")
else
call Mau("Called DummyCaster.DummyCaster on invalid object.","when calling error in DummyCaster, line 28")
endif
endif
call fxs(Xkc,"when calling destroyDummyCaster in DummyCaster, line 28")
set MM=MM-1
endfunction
function uyu takes unit Vbu,integer Bbu,integer Nbu,integer Mbu,integer wyu returns nothing
call SetUnitVertexColor(Vbu,Bbu,Nbu,Mbu,wyu)
endfunction
function jqu takes unit dqu,string fqu returns nothing
local integer Rqu
local integer Tqu
local integer Yqu
local unit Gqu
local unit gqu
local unit hqu
local unit Fqu
local unit kqu
set w3[MM]=fqu
set MM=MM+1
set Rqu=0
set Tqu=1
set Yqu=Hp-1
loop
exitwhen Tqu>Yqu
if iZ[Cp[Rqu]]>iZ[Cp[Tqu]]then
set Rqu=Tqu
endif
set Tqu=Tqu+1
endloop
if iZ[Cp[Rqu]]>=Kp then
call E8s(dqu)
else
call Ijc(Cp[Rqu],dqu,"when calling enqueue in DummyRecycler, line 51")
set Gqu=dqu
call a0s(Gqu,Qus(Ve,Be,16.,16.),i1)
set gqu=Gqu
call k8s(gqu)
set hqu=gqu
call S9s(hqu,wwu(Rqu*Jp))
set Fqu=hqu
call K9s(Fqu,1.)
set kqu=Fqu
call uyu(kqu,fp,Rp,Tp,Yp)
endif
set MM=MM-1
set Gqu=null
set gqu=null
set hqu=null
set Fqu=null
set kqu=null
endfunction
function Exs takes integer mxs,string Qxs returns nothing
local unit Wxs
set w3[MM]=Qxs
set MM=MM+1
set Wxs=wZ[mxs]
call I8s(Wxs,uZ[mxs])
call jqu(wZ[mxs],"when calling recycle in DummyCaster, line 91")
set VE[rZ[mxs]]=VE[rZ[mxs]]-1
if VE[rZ[mxs]]==0 then
call Vkc(rZ[mxs],"when calling dispatch_DummyCaster_destroyDummyCaster in DummyCaster, line 94")
endif
set MM=MM-1
set Wxs=null
endfunction
function PvS takes string UvS returns integer
local integer IvS
set w3[MM]=UvS
set MM=MM+1
if Yg==0 then
if Gg<32768 then
set Gg=Gg+1
set IvS=Gg
set gg[IvS]=675
else
call Mau("Out of memory: Could not create CallbackCounted_doPeriodicallyCounted_doAfter_onPointCast_Meteor.","when calling error in Meteor, line 53")
set IvS=0
endif
else
set Yg=Yg-1
set IvS=Tg[Yg]
set gg[IvS]=675
endif
set MM=MM-1
return IvS
endfunction
function axs takes integer cxs,integer oxs,integer Oxs,integer lxs,real bxs,real yxs,string pxs returns unit
local unit exs
local boolean qxs
set w3[MM]=pxs
set MM=MM+1
set exs=jjc(cxs,oxs,Oxs,"when calling prepare in DummyCaster, line 69")
call S9s(exs,brs(F7s(exs),h3,bxs,yxs))
set qxs=b8s(exs,lxs,bxs,yxs)
call Wjc(cxs,exs,oxs,"when calling finish in DummyCaster, line 72")
if not qxs then
set exs=null
endif
set MM=MM-1
set Pnw=exs
set exs=null
return Pnw
endfunction
function Yjc takes integer ejc,integer qjc,integer ajc,integer njc,real djc,real fjc,string Rjc returns unit
local unit Tjc
set w3[MM]=Rjc
set MM=MM+1
if Lg[ejc]==0 then
if ejc==0 then
call Mau("Nullpointer exception when calling DummyCaster.castPoint","when calling error in DummyCaster, line 68")
else
call Mau("Called DummyCaster.castPoint on invalid object.","when calling error in DummyCaster, line 68")
endif
endif
set Tjc=axs(ejc,qjc,ajc,njc,djc,fjc,"when calling castPoint in DummyCaster, line 68")
set MM=MM-1
set sdw=Tjc
set Tjc=null
return sdw
endfunction
function vjs takes integer hjs,real Fjs,real kjs returns nothing
local real jjs=Fjs
local real xjs=kjs
set BE[hjs]=jjs
set NE[hjs]=xjs
endfunction
function ujc takes integer Bkc,real Nkc,real Mkc,string wjc returns nothing
set w3[MM]=wjc
set MM=MM+1
if Lg[Bkc]==0 then
if Bkc==0 then
call Mau("Nullpointer exception when calling DummyCaster.origin","when calling error in DummyCaster, line 36")
else
call Mau("Called DummyCaster.origin on invalid object.","when calling error in DummyCaster, line 36")
endif
endif
call vjs(Bkc,Nkc,Mkc)
set MM=MM-1
endfunction
function F6t takes integer d6t,string f6t returns nothing
local integer R6t
local integer T6t
local integer Y6t
local integer G6t
local real g6t
local real h6t
set w3[MM]=f6t
set MM=MM+1
set R6t=Fxs("when calling new_DummyCaster in Meteor, line 52")
call ijc(R6t,g7s(vP[d6t]),"when calling owner in Meteor, line 52")
set T6t=R6t
call ujc(T6t,mP[d6t],QP[d6t],"when calling origin in Meteor, line 52")
set Y6t=T6t
call Yjc(Y6t,eq,1,Jq,mP[d6t],QP[d6t],"when calling castPoint in Meteor, line 52")
set G6t=PvS("when calling alloc_CallbackCounted_doPeriodicallyCounted_doAfter_onPointCast_Meteor in Meteor, line 53")
call qGs(G6t)
set WP[G6t]=vP[d6t]
set g6t=mP[d6t]
set h6t=QP[d6t]
set EP[G6t]=g6t
set ZP[G6t]=h6t
call nOu(0.5,20,G6t,"when calling doPeriodicallyCounted in Meteor, line 53")
set MM=MM-1
endfunction
function ihS takes string shS returns integer
local integer thS
set w3[MM]=shS
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set thS=mg
set Qg[thS]=715
else
call Mau("Out of memory: Could not create CustomUnitType.","when calling error in CustomUnitTypes, line 73")
set thS=0
endif
else
set vg=vg-1
set thS=xg[vg]
set Qg[thS]=715
endif
set MM=MM-1
return thS
endfunction
function Xgs takes integer Lgs returns nothing
endfunction
function whs takes integer Ngs,string Mgs returns nothing
set w3[MM]=Mgs
set MM=MM+1
call Xgs(Ngs)
call wJs("when calling new_HashSet in CustomUnitTypes, line 105")
call wJs("when calling new_HashSet in CustomUnitTypes, line 106")
call wJs("when calling new_HashSet in CustomUnitTypes, line 107")
call ahc(Ngs,"when calling reset in CustomUnitTypes, line 108")
set MM=MM-1
endfunction
function Bgs takes string Cgs returns integer
local integer Vgs
set w3[MM]=Cgs
set MM=MM+1
set Vgs=ihS("when calling alloc_CustomUnitType in CustomUnitTypes, line 104")
call whs(Vgs,"when calling construct_CustomUnitType in CustomUnitTypes, line 104")
set MM=MM-1
return Vgs
endfunction
function ylt takes integer blt returns nothing
endfunction
function Ylt takes integer nlt,player dlt,string flt returns nothing
local integer Rlt
local integer Tlt
set w3[MM]=flt
set MM=MM+1
call Wct(nlt,dlt)
call ylt(nlt)
set vH[nlt]=Oa*bWu(dlt)
set Rlt=vH[nlt]
set Tlt=vH[nlt]+Oa-1
loop
exitwhen Rlt>Tlt
set la[Rlt]=Bgs("when calling new_CustomUnitType in PlayerDefinedUnitTypes, line 21")
set Rlt=Rlt+1
endloop
set MM=MM-1
endfunction
function nZS takes string qZS returns integer
local integer aZS
set w3[MM]=qZS
set MM=MM+1
if vg==0 then
if mg<32768 then
set mg=mg+1
set aZS=mg
set Qg[aZS]=718
else
call Mau("Out of memory: Could not create PlayerDefinedUnitTypes.","when calling error in PlayerDefinedUnitTypes, line 9")
set aZS=0
endif
else
set vg=vg-1
set aZS=xg[vg]
set Qg[aZS]=718
endif
set MM=MM-1
return aZS
endfunction
function alt takes player plt,string elt returns integer
local integer qlt
set w3[MM]=elt
set MM=MM+1
set qlt=nZS("when calling alloc_PlayerDefinedUnitTypes in PlayerDefinedUnitTypes, line 17")
call Ylt(qlt,plt,"when calling construct_PlayerDefinedUnitTypes in PlayerDefinedUnitTypes, line 17")
set MM=MM-1
return qlt
endfunction
function eZS takes string yZS returns integer
local integer pZS
set w3[MM]=yZS
set MM=MM+1
if vk==0 then
if mk<32768 then
set mk=mk+1
set pZS=mk
set Qk[pZS]=1481
else
call Mau("Out of memory: Could not create PersistableLoadCallback_load_doAfter_PlayerDefinedUnitTypes.","when calling error in PlayerDefinedUnitTypes, line 91")
set pZS=0
endif
else
set vk=vk-1
set pZS=xk[vk]
set Qk[pZS]=1481
endif
set MM=MM-1
return pZS
endfunction
function FOt takes integer fOt,string ROt returns nothing
local integer TOt
local integer YOt
local integer GOt
local integer gOt
local integer hOt
set w3[MM]=ROt
set MM=MM+1
set TOt=0
set YOt=bj_MAX_PLAYERS-1
loop
exitwhen TOt>YOt
set gOt=alt(pa[TOt],"when calling new_PlayerDefinedUnitTypes in PlayerDefinedUnitTypes, line 91")
set hOt=gOt
set GOt=eZS("when calling alloc_PersistableLoadCallback_load_doAfter_PlayerDefinedUnitTypes in PlayerDefinedUnitTypes, line 91")
set xH[GOt]=TOt
call cVc(hOt,GOt,"when calling load in PlayerDefinedUnitTypes, line 91")
set Sa[TOt]=gOt
set TOt=TOt+1
endloop
set MM=MM-1
endfunction
function CRu takes group KRu,rect LRu,boolexpr XRu returns nothing
call GroupEnumUnitsInRect(KRu,LRu,XRu)
endfunction
function JRu takes group DRu,rect HRu returns nothing
call CRu(DRu,HRu,null)
endfunction
function Gtt takes integer ftt returns nothing
local trigger Rtt=CreateTrigger()
local group Ttt
local group Ytt
call mxr(Rtt,De,Filter(Law))
call DIu(EVENT_PLAYER_UNIT_ISSUED_ORDER,Xaw)
call JRu(Zq,Ae)
call ForGroup(Zq,Caw)
set Ttt=Zq
call tTu(Ttt)
set Ytt=Ttt
call STu(Ytt)
set Rtt=null
set Ttt=null
set Ytt=null
endfunction
function Ivi takes integer Evi returns nothing
local group Uvi=RL[Evi]
local unit Zvi
loop
exitwhen not lTu(Uvi)
set Zvi=aTu(Uvi)
call Zrs(Zvi,Qrs(Zvi)-TL[Evi])
endloop
set Zvi=null
set Uvi=null
endfunction
function Ier takes string Zer returns integer
local integer Uer=0
loop
exitwhen not(Mhr(uf,Uer)!=Zer)
set Uer=Uer+1
endloop
return Uer
endfunction
function Ver takes string Per returns integer
local boolean Aer=Mhr(Per,0)=="-"
local integer Der=vhr(Per)
local integer Her=0
local integer Jer=1
local integer Ker
local integer Ler
local integer Xer
local integer Cer
if Aer then
set Ler=1
else
set Ler=0
endif
set Ker=Ler
set Xer=Der-1
loop
exitwhen Ker>Xer
set Her=Her+Ier(Mhr(Per,Ker))*Jer
set Jer=Jer*rf
set Ker=Ker+1
endloop
if Aer then
set Cer=-Her
else
set Cer=Her
endif
return Cer
endfunction
function jRS takes integer hRS returns string
local integer FRS=XM[hRS]
local string kRS=""
loop
exitwhen not(kRS!=KM[hRS]and XM[hRS]<=JM[hRS])
set kRS=Dhr(HM[hRS],XM[hRS],XM[hRS]+LM[hRS])
if kRS==KM[hRS]then
set XM[hRS]=XM[hRS]+LM[hRS]
else
set XM[hRS]=XM[hRS]+1
endif
endloop
return Dhr(HM[hRS],FRS,XM[hRS]-1)
endfunction
function hqo takes integer Yqo,string Gqo returns string
local string gqo
set w3[MM]=Gqo
set MM=MM+1
if Pm[Yqo]==0 then
if Yqo==0 then
call Mau("Nullpointer exception when calling StringTokenizer.nextToken","when calling error in Utility, line 67")
else
call Mau("Called StringTokenizer.nextToken on invalid object.","when calling error in Utility, line 67")
endif
endif
set gqo=jRS(Yqo)
set MM=MM-1
return gqo
endfunction
function HRS takes integer DRS returns nothing
endfunction
function Mpc takes integer Bpc,string Npc returns nothing
set w3[MM]=Npc
set MM=MM+1
if Pm[Bpc]==0 then
call Mau("Double free: object of type StringTokenizer","when calling error in Utility, line 38")
else
set Zm[Um]=Bpc
set Um=Um+1
set Pm[Bpc]=0
endif
set MM=MM-1
endfunction
function LRS takes integer JRS,string KRS returns nothing
set w3[MM]=KRS
set MM=MM+1
call HRS(JRS)
call Mpc(JRS,"when calling dealloc_StringTokenizer in Utility, line 38")
set MM=MM-1
endfunction
function nqo takes integer qqo,string aqo returns nothing
set w3[MM]=aqo
set MM=MM+1
if Pm[qqo]==0 then
if qqo==0 then
call Mau("Nullpointer exception when calling StringTokenizer.StringTokenizer","when calling error in Utility, line 38")
else
call Mau("Called StringTokenizer.StringTokenizer on invalid object.","when calling error in Utility, line 38")
endif
endif
call LRS(qqo,"when calling destroyStringTokenizer in Utility, line 38")
set MM=MM-1
endfunction
function JEi takes integer DEi,string HEi returns nothing
set w3[MM]=HEi
set MM=MM+1
call SetTerrainType(Md[ZL[DEi]]+Ver(hqo(UL[DEi],"when calling nextToken in SotFRP_LegacyLoad, line 222"))*128,wf[ZL[DEi]]+Ver(hqo(UL[DEi],"when calling nextToken in SotFRP_LegacyLoad, line 222"))*128,Ver(hqo(UL[DEi],"when calling nextToken in SotFRP_LegacyLoad, line 222")),Ver(hqo(UL[DEi],"when calling nextToken in SotFRP_LegacyLoad, line 222")),1,0)
call nqo(UL[DEi],"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 223")
set MM=MM-1
endfunction
function JYs takes integer HYs returns nothing
set dp=dp+50
endfunction
function LYs takes integer KYs returns nothing
set dp=dp*2
endfunction
function Las takes integer Jas,string Kas returns nothing
set w3[MM]=Kas
set MM=MM+1
if SW[OW[Jas]]!=0 then
call oYc(SW[OW[Jas]],lW[Jas],bW[Jas],yW[Jas],"when calling fire in Buffs, line 62")
endif
set MM=MM-1
endfunction
function FFS takes string gFS returns integer
local integer hFS
set w3[MM]=gFS
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set hFS=ZG
set UG[hFS]=692
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_SimpleFormationData_Formations.","when calling error in Formations, line 123")
set hFS=0
endif
else
set EG=EG-1
set hFS=WG[EG]
set UG[hFS]=692
endif
set MM=MM-1
return hFS
endfunction
function IYu takes hashtable EYu,integer ZYu,integer UYu returns unit
return LoadUnitHandle(EYu,ZYu,UYu)
endfunction
function v6S takes integer j6S,integer x6S returns unit
return IYu(VR,j6S,x6S)
endfunction
function PSo takes integer ESo,integer ZSo,string USo returns unit
local unit ISo
set w3[MM]=USo
set MM=MM+1
if Yh[ESo]==0 then
if ESo==0 then
call Mau("Nullpointer exception when calling Table.loadUnit","when calling error in Table, line 75")
else
call Mau("Called Table.loadUnit on invalid object.","when calling error in Table, line 75")
endif
endif
set ISo=v6S(ESo,ZSo)
set MM=MM-1
set vdw=ISo
set ISo=null
return vdw
endfunction
function jvr takes integer hvr,string Fvr returns unit
local unit kvr
set w3[MM]=Fvr
set MM=MM+1
call yco(YT,0,ConvertFogState(hvr),"when calling saveFogState in TypeCasting, line 53")
set kvr=PSo(YT,0,"when calling loadUnit in TypeCasting, line 54")
set MM=MM-1
set jnw=kvr
set kvr=null
return jnw
endfunction
function GFS takes integer TFS,string YFS returns nothing
set w3[MM]=YFS
set MM=MM+1
if rh[TFS]==0 then
call Mau("Double free: object of type SimpleFormationData","when calling error in Formations, line 63")
else
set uh=uh+1
set rh[TFS]=0
endif
set MM=MM-1
endfunction
function Vms takes integer Kms,string Lms returns nothing
local integer Xms
local unit Cms
set w3[MM]=Lms
set MM=MM+1
set Xms=x1s(qZ[Kms],"when calling iterator in Formations, line 86")
loop
exitwhen not t1s(Xms)
set Cms=jvr(r1s(Xms),"when calling unitFromIndex in Formations, line 86")
call QHr(Cms)
endloop
call c1s(Xms,"when calling close in Formations, line 86")
call CAc(qZ[Kms],"when calling dispatch_LinkedList_destroyLinkedList in Formations, line 89")
call WZc(aZ[Kms],"when calling dispatch_HashMap_destroyHashMap in Formations, line 90")
call WZc(nZ[Kms],"when calling dispatch_HashMap_destroyHashMap in Formations, line 91")
set MM=MM-1
set Cms=null
endfunction
function Jms takes integer Dms,string Hms returns nothing
set w3[MM]=Hms
set MM=MM+1
call Vms(Dms,"when calling SimpleFormationData_onDestroy in Formations, line 85")
call GFS(Dms,"when calling dealloc_SimpleFormationData in Formations, line 85")
set MM=MM-1
endfunction
function jxc takes integer Fxc,string kxc returns nothing
set w3[MM]=kxc
set MM=MM+1
if rh[Fxc]==0 then
if Fxc==0 then
call Mau("Nullpointer exception when calling SimpleFormationData.SimpleFormationData","when calling error in Formations, line 63")
else
call Mau("Called SimpleFormationData.SimpleFormationData on invalid object.","when calling error in Formations, line 63")
endif
endif
call Jms(Fxc,"when calling destroySimpleFormationData in Formations, line 63")
set MM=MM-1
endfunction
function Ams takes integer Yms,string Gms returns nothing
local real gms
local real hms
local integer Fms
local integer kms
local integer jms
local unit xms
local integer vms
local integer mms
local integer Qms
local unit Wms
local integer Ems
local real Zms
local real Ums
local real Ims
local real Pms
set w3[MM]=Gms
set MM=MM+1
set Zms=0.
set Ums=0.
set gms=Zms
set hms=Ums
set Fms=RDc(qZ[Yms],"when calling size in Formations, line 107")
set kms=0
set jms=x1s(qZ[Yms],"when calling iterator in Formations, line 110")
loop
exitwhen not t1s(jms)
set xms=jvr(r1s(jms),"when calling unitFromIndex in Formations, line 110")
set vms=QHr(xms)
set gms=gms+avr(BZc(aZ[Yms],vms,"when calling get in Formations, line 112"))
set hms=hms+avr(BZc(nZ[Yms],vms,"when calling get in Formations, line 113"))
call u8s(xms,Lq)
call x9s(xms,false)
endloop
call c1s(jms,"when calling close in Formations, line 110")
set gms=gms/Fms
set hms=hms/Fms
set mms=Oe[bWu(RZ[Yms])]
set Qms=x1s(qZ[Yms],"when calling iterator in Formations, line 122")
loop
exitwhen not t1s(Qms)
set Wms=jvr(r1s(Qms),"when calling unitFromIndex in Formations, line 122")
set Ems=FFS("when calling alloc_CallbackSingle_nullTimer_SimpleFormationData_Formations in Formations, line 123")
call KGs(Ems)
set YZ[Ems]=Wms
set GZ[Ems]=mms
set gZ[Ems]=Fms
set hZ[Ems]=kms
set FZ[Ems]=Yms
set Ims=gms
set Pms=hms
set kZ[Ems]=Ims
set jZ[Ems]=Pms
call Cou(Ems,"when calling nullTimer in Formations, line 123")
set kms=kms+1
endloop
call c1s(Qms,"when calling close in Formations, line 122")
call jxc(Yms,"when calling dispatch_SimpleFormationData_destroySimpleFormationData in Formations, line 127")
set MM=MM-1
set xms=null
set Wms=null
endfunction
function mxc takes integer xxc,string vxc returns nothing
set w3[MM]=vxc
set MM=MM+1
if rh[xxc]==0 then
if xxc==0 then
call Mau("Nullpointer exception when calling SimpleFormationData.issueOrders","when calling error in Formations, line 105")
else
call Mau("Called SimpleFormationData.issueOrders on invalid object.","when calling error in Formations, line 105")
endif
endif
call Ams(xxc,"when calling issueOrders in Formations, line 105")
set MM=MM-1
endfunction
function Mms takes integer Bms,string Nms returns nothing
set w3[MM]=Nms
set MM=MM+1
call mxc(TZ[Bms],"when calling issueOrders in Formations, line 103")
set MM=MM-1
endfunction
function FxS takes integer gxS,string hxS returns nothing
set w3[MM]=hxS
set MM=MM+1
if oF[gxS]==0 then
call Mau("Double free: object of type LegacyPositionedUnitData","when calling error in LegacyUnitData, line 390")
else
set iF[SF]=gxS
set SF=SF+1
set oF[gxS]=0
endif
set MM=MM-1
endfunction
function HxS takes integer AxS,string DxS returns nothing
set w3[MM]=DxS
set MM=MM+1
if yF[AxS]==0 then
call Mau("Double free: object of type LegacySingleUnitDataPositioned","when calling error in LegacyUnitData, line 369")
else
set OF[lF]=AxS
set lF=lF+1
set yF[AxS]=0
endif
set MM=MM-1
endfunction
function HMs takes integer AMs,string DMs returns nothing
set w3[MM]=DMs
set MM=MM+1
call vEc(SP[AMs],"when calling dispatch_HashList_destroyHashList in LegacyUnitData, line 167")
call vEc(cP[AMs],"when calling dispatch_HashList_destroyHashList in LegacyUnitData, line 168")
call vEc(oP[AMs],"when calling dispatch_HashList_destroyHashList in LegacyUnitData, line 169")
set MM=MM-1
endfunction
function T3s takes integer f3s,string R3s returns nothing
set w3[MM]=R3s
set MM=MM+1
call HMs(f3s,"when calling LegacySingleUnitData_onDestroy in LegacyUnitData, line 369")
set MM=MM-1
endfunction
function NMs takes integer VMs,string BMs returns nothing
set w3[MM]=BMs
set MM=MM+1
call T3s(VMs,"when calling LegacySingleUnitDataPositioned_onDestroy in LegacyUnitData, line 369")
call HxS(VMs,"when calling dealloc_LegacySingleUnitDataPositioned in LegacyUnitData, line 369")
set MM=MM-1
endfunction
function tAc takes integer rAc,string sAc returns nothing
set w3[MM]=sAc
set MM=MM+1
if yF[rAc]==0 then
if rAc==0 then
call Mau("Nullpointer exception when calling LegacySingleUnitDataPositioned.LegacySingleUnitDataPositioned","when calling error in LegacyUnitData, line 369")
else
call Mau("Called LegacySingleUnitDataPositioned.LegacySingleUnitDataPositioned on invalid object.","when calling error in LegacyUnitData, line 369")
endif
endif
call NMs(rAc,"when calling destroyLegacySingleUnitDataPositioned in LegacyUnitData, line 369")
set MM=MM-1
endfunction
function tNs takes integer wNs,string uNs returns nothing
local integer rNs
local integer sNs
set w3[MM]=uNs
set MM=MM+1
set rNs=kAs(hI[wNs],"when calling iterator in LegacyUnitData, line 418")
loop
exitwhen not PPs(rNs,"when calling hasNext in LegacyUnitData, line 418")
set sNs=EPs(rNs,"when calling next in LegacyUnitData, line 418")
call tAc(sNs,"when calling dispatch_LegacySingleUnitDataPositioned_destroyLegacySingleUnitDataPositioned in LegacyUnitData, line 419")
endloop
call HPs(rNs,"when calling close in LegacyUnitData, line 418")
call vEc(hI[wNs],"when calling dispatch_HashList_destroyHashList in LegacyUnitData, line 420")
set MM=MM-1
endfunction
function cNs takes integer iNs,string SNs returns nothing
set w3[MM]=SNs
set MM=MM+1
call tNs(iNs,"when calling LegacyPositionedUnitData_onDestroy in LegacyUnitData, line 417")
call FxS(iNs,"when calling dealloc_LegacyPositionedUnitData in LegacyUnitData, line 417")
set MM=MM-1
endfunction
function ZPc takes integer WPc,string EPc returns nothing
set w3[MM]=EPc
set MM=MM+1
if oF[WPc]==0 then
if WPc==0 then
call Mau("Nullpointer exception when calling LegacyPositionedUnitData.LegacyPositionedUnitData","when calling error in LegacyUnitData, line 390")
else
call Mau("Called LegacyPositionedUnitData.LegacyPositionedUnitData on invalid object.","when calling error in LegacyUnitData, line 390")
endif
endif
call cNs(WPc,"when calling destroyLegacyPositionedUnitData in LegacyUnitData, line 390")
set MM=MM-1
endfunction
function eBs takes integer yBs,string pBs returns nothing
set w3[MM]=pBs
set MM=MM+1
call Neo(aI[yBs],"when calling dispatch_StringHashMap_destroyStringHashMap in LegacyStringTable, line 62")
set MM=MM-1
endfunction
function exS takes integer yxS,string pxS returns nothing
set w3[MM]=pxS
set MM=MM+1
if Qg[yxS]==0 then
call Mau("Double free: object of type StringTable","when calling error in LegacyStringTable, line 15")
else
set xg[vg]=yxS
set vg=vg+1
set Qg[yxS]=0
endif
set MM=MM-1
endfunction
function QVs takes integer vVs,string mVs returns nothing
set w3[MM]=mVs
set MM=MM+1
call eBs(vVs,"when calling StringTable_onDestroy in LegacyStringTable, line 61")
call exS(vVs,"when calling dealloc_StringTable in LegacyStringTable, line 61")
set MM=MM-1
endfunction
function pPc takes integer bPc,string yPc returns nothing
set w3[MM]=yPc
set MM=MM+1
if Qg[bPc]==0 then
if bPc==0 then
call Mau("Nullpointer exception when calling StringTable.StringTable","when calling error in LegacyStringTable, line 15")
else
call Mau("Called StringTable.StringTable on invalid object.","when calling error in LegacyStringTable, line 15")
endif
endif
call QVs(bPc,"when calling destroyStringTable in LegacyStringTable, line 15")
set MM=MM-1
endfunction
function VCs takes integer XCs,string CCs returns nothing
set w3[MM]=CCs
set MM=MM+1
call pPc(bI[XCs],"when calling dispatch_StringTable_destroyStringTable in LegacySaveData, line 78")
call ZPc(yI[XCs],"when calling dispatch_LegacyPositionedUnitData_destroyLegacyPositionedUnitData in LegacySaveData, line 79")
call Uct(XCs,"when calling Persistable_onDestroy in LegacySaveData, line 21")
set MM=MM-1
endfunction
function VjS takes integer XjS,string CjS returns nothing
set w3[MM]=CjS
set MM=MM+1
if Qg[XjS]==0 then
call Mau("Double free: object of type LegacySaveData","when calling error in LegacySaveData, line 21")
else
set xg[vg]=XjS
set vg=vg+1
set Qg[XjS]=0
endif
set MM=MM-1
endfunction
function lCs takes integer oCs,string OCs returns nothing
set w3[MM]=OCs
set MM=MM+1
call VCs(oCs,"when calling LegacySaveData_onDestroy in LegacySaveData, line 77")
call VjS(oCs,"when calling dealloc_LegacySaveData in LegacySaveData, line 77")
set MM=MM-1
endfunction
function KIc takes integer HIc,string JIc returns nothing
set w3[MM]=JIc
set MM=MM+1
if Qg[HIc]==0 then
if HIc==0 then
call Mau("Nullpointer exception when calling LegacySaveData.LegacySaveData","when calling error in LegacySaveData, line 21")
else
call Mau("Called LegacySaveData.LegacySaveData on invalid object.","when calling error in LegacySaveData, line 21")
endif
endif
call lCs(HIc,"when calling destroyLegacySaveData in LegacySaveData, line 21")
set MM=MM-1
endfunction
function OXi takes integer cXi,string oXi returns nothing
set w3[MM]=oXi
set MM=MM+1
call KIc(vX[cXi],"when calling dispatch_LegacySaveData_destroyLegacySaveData in SotfrpGuiRegions, line 199")
set MM=MM-1
endfunction
function Gcu takes group dcu,integer fcu,string Rcu returns nothing
local unit Tcu
local group Ycu
set w3[MM]=Rcu
set MM=MM+1
set Ycu=dcu
loop
exitwhen not lTu(Ycu)
set Tcu=aTu(Ycu)
call egc(fcu,Tcu,"when calling callback in ClosureForGroups, line 40")
endloop
call lgc(fcu,"when calling dispatch_ForGroupCallback_destroyForGroupCallback in ClosureForGroups, line 41")
set MM=MM-1
set Tcu=null
set Ycu=null
endfunction
function RZS takes string dZS returns integer
local integer fZS
set w3[MM]=dZS
set MM=MM+1
if lg==0 then
if bg<32768 then
set bg=bg+1
set fZS=bg
set yg[fZS]=800
else
call Mau("Out of memory: Could not create ForGroupCallback_forEachFrom_Preloader.","when calling error in Preloader, line 46")
set fZS=0
endif
else
set lg=lg-1
set fZS=Og[lg]
set yg[fZS]=800
endif
set MM=MM-1
return fZS
endfunction
function tZu takes string uZu returns nothing
local integer rZu
local group sZu
set w3[MM]=uZu
set MM=MM+1
call E8s(Wa)
set sZu=Qa
set rZu=RZS("when calling alloc_ForGroupCallback_forEachFrom_Preloader in Preloader, line 46")
call Gcu(sZu,rZu,"when calling forEachFrom in Preloader, line 46")
call STu(Qa)
set Qa=null
set MM=MM-1
set sZu=null
endfunction
function Qlt takes integer vlt,string mlt returns nothing
set w3[MM]=mlt
set MM=MM+1
call tZu("when calling finishPreload in Preloader, line 55")
set MM=MM-1
endfunction
function SXi takes integer tXi,string iXi returns nothing
set w3[MM]=iXi
set MM=MM+1
call KIc(xX[tXi],"when calling dispatch_LegacySaveData_destroyLegacySaveData in SotfrpGuiRegions, line 192")
set MM=MM-1
endfunction
function Uxr takes trigger Qxr,player Wxr,string Exr,boolean Zxr returns event
return TriggerRegisterPlayerChatEvent(Qxr,Wxr,Exr,Zxr)
endfunction
function XTs takes integer QTs returns nothing
local integer WTs
local integer ETs
local trigger ZTs
local trigger UTs
local trigger ITs
local trigger PTs
local trigger ATs
local trigger DTs
local trigger HTs
local trigger JTs
local trigger KTs
local trigger LTs
call rxr(Ly,Iaw)
call rxr(Xy,Paw)
call rxr(Cy,Aaw)
set WTs=0
set ETs=bj_MAX_PLAYERS-1
loop
exitwhen WTs>ETs
call Dxr(Xy,pa[WTs],EVENT_PLAYER_LEAVE)
set ZTs=Cy
call Dxr(ZTs,pa[WTs],EVENT_PLAYER_ARROW_DOWN_DOWN)
set UTs=ZTs
call Dxr(UTs,pa[WTs],EVENT_PLAYER_ARROW_DOWN_UP)
set ITs=UTs
call Dxr(ITs,pa[WTs],EVENT_PLAYER_ARROW_UP_DOWN)
set PTs=ITs
call Dxr(PTs,pa[WTs],EVENT_PLAYER_ARROW_UP_UP)
set ATs=PTs
call Dxr(ATs,pa[WTs],EVENT_PLAYER_ARROW_LEFT_DOWN)
set DTs=ATs
call Dxr(DTs,pa[WTs],EVENT_PLAYER_ARROW_LEFT_UP)
set HTs=DTs
call Dxr(HTs,pa[WTs],EVENT_PLAYER_ARROW_RIGHT_DOWN)
set JTs=HTs
call Dxr(JTs,pa[WTs],EVENT_PLAYER_ARROW_RIGHT_UP)
set KTs=JTs
call Dxr(KTs,pa[WTs],EVENT_PLAYER_END_CINEMATIC)
set LTs=KTs
call Uxr(LTs,pa[WTs],"",false)
set WTs=WTs+1
endloop
call wPu(EVENT_PLAYER_UNIT_SPELL_EFFECT,null,Daw,null)
set ZTs=null
set UTs=null
set ITs=null
set PTs=null
set ATs=null
set DTs=null
set HTs=null
set JTs=null
set KTs=null
set LTs=null
endfunction
function eZi takes integer lZi,string bZi returns nothing
local integer yZi
local integer pZi
set w3[MM]=bZi
set MM=MM+1
set yZi=0
set pZi=bj_MAX_PLAYER_SLOTS
loop
exitwhen yZi>pZi
call Qku(pa[yZi],nf,"when calling setLocale in SotFRP_Locale, line 36")
set yZi=yZi+1
endloop
set MM=MM-1
endfunction
function gLi takes integer YLi,string GLi returns nothing
set w3[MM]=GLi
set MM=MM+1
call PMc(TX[YLi],"when calling dispatch_RegionData_destroyRegionData in SotfrpGuiRegions, line 170")
set MM=MM-1
endfunction
function kLi takes integer hLi,string FLi returns nothing
set w3[MM]=FLi
set MM=MM+1
call PMc(YX[hLi],"when calling dispatch_RegionData_destroyRegionData in SotfrpGuiRegions, line 177")
set MM=MM-1
endfunction
function Nus takes real Vus,real Bus returns real
return SquareRoot(Vus*Vus+Bus*Bus)
endfunction
function Cus takes real Hus,real Jus returns real
local real Kus=Nus(Hus,Jus)
local real Lus=0.
local real Xus=0.
if Kus>0.0 then
set Lus=Hus/Kus
set Xus=Jus/Kus
endif
set I9=Lus
set P9=Xus
return I9
endfunction
function Swu takes real iwu returns real
return Sin(iwu)
endfunction
function owu takes real cwu returns real
return Cos(cwu)
endfunction
function Srs takes real Mus,real wrs,real urs returns real
local real rrs=owu(urs)
local real srs=Swu(urs)
local real trs=Mus*rrs-wrs*srs
local real irs=Mus*srs+wrs*rrs
set A9=trs
set D9=irs
return A9
endfunction
function Tms takes integer Xvs,integer Cvs,integer Vvs,real Bvs,real Nvs,real Mvs,real wms returns real
local real bms=Cus(Qus(Mvs,wms,Bvs,Nvs),i1)
local real yms=P9
local real ums=bms
local real rms=yms
local real pms=Srs(ums,rms,wwu(90.))
local real ems=D9
local real sms=pms
local real tms=ems
local real qms=Mvs
local real ams=wms
local real ims=qms
local real Sms=ams
local integer cms=ModuloInteger(Cvs,yZ[Xvs])
local real oms=0.
local real Oms
local real lms
local real nms
local real dms
local real fms
local real Rms
if cms==0 then
set oms=rgu(Vvs/yZ[Xvs])
elseif Vvs>=cms then
set oms=rgu((Vvs-cms)/yZ[Xvs]+1)
endif
set Oms=0.
if cms!=0 and oms==0. and cms!=yZ[Xvs]then
set lms=(yZ[Xvs]-1)*1./cms
set Oms=Oms+lms/2.+lms*Vvs
else
set Oms=rgu(ModuloInteger(Vvs-cms,yZ[Xvs]))
endif
set nms=Qus(ims,Sms,Uus(Uus(ums,rms,oms),m1,pZ[Xvs]),m1)
set dms=i1
set ims=nms
set Sms=dms
set fms=kus(ims,Sms,Qus(Uus(Uus(sms,tms,Oms),m1,eZ[Xvs]),m1,Uus(Uus(sms,tms,(yZ[Xvs]-1)*1./2),m1,eZ[Xvs]),m1),i1)
set Rms=x1
set ims=fms
set Sms=Rms
set K9=ims
set L9=Sms
return K9
endfunction
function hxc takes integer pxc,integer exc,integer qxc,real axc,real nxc,real dxc,real fxc,string Rxc returns real
local real Txc
local real Yxc
local real Gxc
local real gxc
set w3[MM]=Rxc
set MM=MM+1
if wh[pxc]==0 then
if pxc==0 then
call Mau("Nullpointer exception when calling FormationSettings.getPos","when calling error in Formations, line 26")
else
call Mau("Called FormationSettings.getPos on invalid object.","when calling error in Formations, line 26")
endif
endif
set Gxc=Tms(pxc,exc,qxc,axc,nxc,dxc,fxc)
set gxc=L9
set Txc=Gxc
set Yxc=gxc
set MM=MM-1
set X9=Txc
set C9=Yxc
return X9
endfunction
function rQs takes integer wQs,string uQs returns nothing
set w3[MM]=uQs
set MM=MM+1
call b8s(YZ[wQs],Kq,hxc(GZ[wQs],gZ[wQs],hZ[wQs],dZ[FZ[wQs]],fZ[FZ[wQs]],kZ[wQs],jZ[wQs],"when calling getPos in Formations, line 124"),C9)
set MM=MM-1
endfunction
function ohc takes integer Shc,string chc returns nothing
set w3[MM]=chc
set MM=MM+1
if UG[Shc]==0 then
if Shc==0 then
call Mau("Nullpointer exception when calling CallbackSingle.call","when calling error in ClosureTimers, line 109")
else
call Mau("Called CallbackSingle.call on invalid object.","when calling error in ClosureTimers, line 109")
endif
endif
if UG[Shc]<=689 then
if UG[Shc]<=684 then
if UG[Shc]<=681 then
if UG[Shc]<=680 then
if UG[Shc]<=679 then
call Las(Shc,"when calling call in ClosureTimers, line 109")
else
call JYs(Shc)
endif
else
call LYs(Shc)
endif
elseif UG[Shc]<=683 then
if UG[Shc]<=682 then
call CYs(Shc)
else
call Exs(Shc,"when calling call_doAfter_DummyCaster_DummyCaster in ClosureTimers, line 109")
endif
else
call FOt(Shc,"when calling call_doAfter_PlayerDefinedUnitTypes in ClosureTimers, line 109")
endif
elseif UG[Shc]<=687 then
if UG[Shc]<=686 then
if UG[Shc]<=685 then
call F6t(Shc,"when calling call_doAfter_onPointCast_Meteor in ClosureTimers, line 109")
else
call AUt(Shc,"when calling call_doAfter_setArgumentsTypes_setVariadicArgumentTypes_registerProtectedBuiltin_ScmdCoreBuiltins in ClosureTimers, line 109")
endif
else
call XTs(Shc)
endif
elseif UG[Shc]<=688 then
call Gtt(Shc)
else
call Qlt(Shc,"when calling call_nullTimer_Preloader in ClosureTimers, line 109")
endif
elseif UG[Shc]<=694 then
if UG[Shc]<=692 then
if UG[Shc]<=691 then
if UG[Shc]<=690 then
call Bqt(Shc,"when calling call_nullTimer_SLangChatSystem in ClosureTimers, line 109")
else
call Mms(Shc,"when calling call_nullTimer_SimpleFormationData_Formations in ClosureTimers, line 109")
endif
else
call rQs(Shc,"when calling call_nullTimer_SimpleFormationData_Formations in ClosureTimers, line 109")
endif
elseif UG[Shc]<=693 then
call JEi(Shc,"when calling call_nullTimer_SotFRP_LegacyLoad in ClosureTimers, line 109")
else
call eZi(Shc,"when calling call_nullTimer_SotFRP_Locale in ClosureTimers, line 109")
endif
elseif UG[Shc]<=697 then
if UG[Shc]<=696 then
if UG[Shc]<=695 then
call Ivi(Shc)
else
call kLi(Shc,"when calling call_nullTimer_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in ClosureTimers, line 109")
endif
else
call OXi(Shc,"when calling call_nullTimer_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in ClosureTimers, line 109")
endif
elseif UG[Shc]<=698 then
call gLi(Shc,"when calling call_nullTimer_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in ClosureTimers, line 109")
else
call SXi(Shc,"when calling call_nullTimer_paste_load_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiRegions in ClosureTimers, line 109")
endif
set MM=MM-1
endfunction
function jOu takes string hOu returns nothing
local timer FOu
local integer kOu
set w3[MM]=hOu
set MM=MM+1
set FOu=GetExpiredTimer()
set kOu=Vkr(FOu,"when calling getData in ClosureTimers, line 119")
call ohc(kOu,"when calling call in ClosureTimers, line 120")
call ihc(kOu,"when calling dispatch_CallbackSingle_destroyCallbackSingle in ClosureTimers, line 121")
set MM=MM-1
set FOu=null
endfunction
function gOu takes string GOu returns nothing
set w3[MM]=GOu
set MM=MM+1
call jOu("when calling staticCallback in ClosureTimers, line 114")
set MM=MM-1
endfunction
function jTo takes nothing returns nothing
set MM=0
call gOu("ClosureTimers, line 114")
endfunction
function jXw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function jdu takes nothing returns boolean
local real Fdu
local real kdu
set be=BlzGetOriginFrame(ORIGIN_FRAME_GAME_UI,0)
set Fdu=0.8
set kdu=0.6
set ye=Fdu
set pe=kdu
return true
endfunction
function CGw takes nothing returns integer
local integer XGw
if Pb[0]==0 then
set Ib=Ib+1
set XGw=Ib
else
set XGw=Pb[0]
set Pb[0]=Pb[Pb[0]]
endif
return XGw
endfunction
function ygw takes unit wgw,real ugw,real rgw,real sgw,real tgw,integer igw returns nothing
local timer Sgw=ITw()
local real cgw=GetUnitX(wgw)
local real ogw=GetUnitY(wgw)
local real Ogw=ugw-cgw
local real lgw=rgw-ogw
local integer bgw=CGw()
set Qb[bgw]=R2I(SquareRoot(Ogw*Ogw+lgw*lgw)/sgw/0.01)
set Wb[bgw]=(ugw-cgw)/Qb[bgw]
set Eb[bgw]=(rgw-ogw)/Qb[bgw]
set Zb[bgw]=wgw
set Ub[bgw]=igw
call SetUnitFacing(wgw,Rad2Deg(Atan2(rgw-ogw,ugw-cgw)))
call SaveInteger(i,y,GetHandleId(Sgw),bgw)
call TimerStart(Sgw,0.01,true,Jww)
set Sgw=null
set Sgw=null
endfunction
function Ggw takes unit pgw,unit egw,real qgw,real agw,integer ngw returns nothing
local real dgw=BlzGetUnitCollisionSize(pgw)
local real fgw=BlzGetUnitCollisionSize(egw)
local real Rgw=GetUnitX(egw)
local real Tgw=GetUnitY(egw)
local real Ygw
if dgw<32. and fgw>=32. then
set Rgw=Rgw+16.
set Tgw=Tgw+16.
elseif dgw>=32. and fgw<32. then
set Rgw=Rgw-16.
set Tgw=Tgw-16.
endif
set Ygw=Atan2(Tgw-GetUnitY(pgw),Rgw-GetUnitX(pgw))
call ygw(pgw,Rgw-(dgw+fgw)*Cos(Ygw),Tgw-(dgw+fgw)*Sin(Ygw),qgw,agw,ngw)
endfunction
function Yfw takes nothing returns integer
local integer Tfw=Fb
if Tfw!=0 then
set Fb=jb[Tfw]
else
set kb=kb+1
set Tfw=kb
endif
if Tfw>8190 then
return 0
endif
set xb[Tfw]=95
set jb[Tfw]=-1
return Tfw
endfunction
function jkw takes nothing returns nothing
local unit Gkw
local unit gkw
local real hkw
local real Fkw
local integer kkw
if GetSpellAbilityId()!=1095722360 then
set Gkw=null
set gkw=null
return
endif
set Gkw=GetSpellAbilityUnit()
set gkw=GetSpellTargetUnit()
set hkw=GetUnitX(gkw)-GetUnitX(Gkw)
set Fkw=GetUnitY(gkw)-GetUnitY(Gkw)
if SquareRoot(hkw*hkw+Fkw*Fkw)<=128. then
call Ykw(Gkw,gkw)
else
set kkw=Yfw()
set Db[kkw]=Gkw
set Hb[kkw]=gkw
call Ggw(Gkw,gkw,2000.,0.,kkw)
endif
set gkw=null
set Gkw=null
set Gkw=null
set gkw=null
endfunction
function Fvw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function Ovw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function Rmw takes nothing returns boolean
if not(ur==1)then
return false
endif
if not(ModuloReal(I2R(wr),2.00)==0.00)then
return false
endif
return true
endfunction
function Rvw takes nothing returns boolean
if not(sr==1)then
return false
endif
return true
endfunction
function amw takes nothing returns boolean
if not(Mu==3)then
return false
endif
if not(ModuloReal(I2R(wr),4.00)==0.00)then
return false
endif
return true
endfunction
function cvw takes nothing returns boolean
if not(ModuloReal(I2R(sr),2.00)==0.00)then
return false
endif
return true
endfunction
function dmw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function evw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function fmw takes nothing returns boolean
if not(sr==ju)then
return false
endif
return true
endfunction
function fvw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function jvw takes nothing returns boolean
if not(ur==3)then
return false
endif
if not(ModuloReal(I2R(wr),2.00)==0.00)then
return false
endif
return true
endfunction
function kmw takes nothing returns boolean
if not(ur<=2)then
return false
endif
return true
endfunction
function kvw takes nothing returns boolean
if not(sr==ku)then
return false
endif
return true
endfunction
function lvw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function nmw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function ovw takes nothing returns boolean
if not(ModuloReal(I2R(wr),6.00)==0.00)then
return false
endif
return true
endfunction
function pvw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function yvw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function jmw takes nothing returns nothing
set Bu=GetHandleIdBJ(GetEnumUnit())
set Nu=GetEnumUnit()
set Mu=1
set wr=LoadIntegerBJ(6,Bu,Au)
set ur=LoadIntegerBJ(7,Bu,Au)
set rr=LoadIntegerBJ(8,Bu,Au)
set sr=LoadIntegerBJ(10,Bu,Au)
call SaveIntegerBJ(wr+1,6,Bu,Au)
if kmw()then
if Rmw()then
set Ju[2]=GetUnitLoc(Nu)
if dmw()then
call CreateNUnitsAtLoc(1,1747994948,GetOwningPlayer(Nu),Ju[2],bj_UNIT_FACING)
call AddSpecialEffectTargetUnitBJ("overhead",Nu,"Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
elseif nmw()then
call CreateNUnitsAtLoc(1,1747988530,GetOwningPlayer(Nu),Ju[2],bj_UNIT_FACING)
call AddSpecialEffectTargetUnitBJ("overhead",Nu,"Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
else
call CreateNUnitsAtLoc(1,1747995720,GetOwningPlayer(Nu),Ju[2],bj_UNIT_FACING)
call AddSpecialEffectTargetUnitBJ("overhead",Nu,"Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
endif
call DestroyEffectBJ(GetLastCreatedEffectBJ())
call GroupAddUnitSimple(GetLastCreatedUnit(),lr[rr])
call SaveRealBJ(0.00,1,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call SaveRealBJ(0.00,2,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call SaveRealBJ(10.00,3,GetHandleIdBJ(GetLastCreatedUnit()),Au)
set sr=sr+1
call SaveIntegerBJ(sr,10,Bu,Au)
if fmw()then
call SaveIntegerBJ(2,7,Bu,Au)
endif
call RemoveLocation(Ju[2])
endif
call ForGroupBJ(lr[rr],Quw)
else
set tr=LoadRealBJ(9,Bu,Au)
set Ju[4]=LoadLocationHandleBJ(0,Bu,Au)
set Ju[5]=LoadLocationHandleBJ(1,Bu,Au)
set ir=LoadRealBJ(11,Bu,Au)
set Sr=LoadBooleanBJ(12,Bu,Au)
if jvw()then
if lvw()then
call CreateNUnitsAtLoc(1,1747994948,GetOwningPlayer(Nu),Ju[4],AngleBetweenPoints(Ju[4],Ju[5]))
call SetUnitScalePercent(GetLastCreatedUnit(),400.00,400.00,400.00)
call AddSpecialEffectLocBJ(Ju[4],"Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
elseif Ovw()then
if cvw()then
set Ju[10]=PolarProjectionBJ(Ju[4],GetRandomReal(Gu,Wu),GetRandomDirectionDeg())
call CreateNUnitsAtLocFacingLocBJ(1,1747988545,GetOwningPlayer(Nu),Ju[4],Ju[10])
call GroupAddUnitSimple(GetLastCreatedUnit(),cr[rr])
call SaveLocationHandleBJ(Ju[10],1,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call SaveBooleanBJ(true,2,GetHandleIdBJ(GetLastCreatedUnit()),Au)
endif
call CreateNUnitsAtLoc(1,1747988533,GetOwningPlayer(Nu),Ju[4],AngleBetweenPoints(Ju[4],Ju[5]))
call SetUnitScalePercent(GetLastCreatedUnit(),800.00,800.00,800.00)
if ovw()then
call AddSpecialEffectLocBJ(Ju[4],"Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
else
call CreateNUnitsAtLoc(1,1747995720,GetOwningPlayer(Nu),Ju[4],bj_UNIT_FACING)
call SetUnitScalePercent(GetLastCreatedUnit(),300.00,300.00,300.00)
call SetUnitFlyHeightBJ(GetLastCreatedUnit(),0.00,0.00)
call KillUnit(GetLastCreatedUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call CreateNUnitsAtLoc(1,1747995720,GetOwningPlayer(Nu),Ju[4],bj_UNIT_FACING)
call SetUnitScalePercent(GetLastCreatedUnit(),300.00,300.00,300.00)
call AddSpecialEffectLocBJ(Ju[4],"Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
call GroupAddUnitSimple(GetLastCreatedUnit(),lr[rr])
call SetUnitFlyHeightBJ(GetLastCreatedUnit(),0.00,0.00)
set sr=sr+1
call SaveIntegerBJ(sr,10,Bu,Au)
if Rvw()then
if yvw()then
call ForForce(GetPlayersAll(),Wuw)
endif
call CreateUbersplatBJ(Ju[4],"DHLB",100.,100.,100.,0.,false,true)
call FinishUbersplat(GetLastCreatedUbersplat())
call SetUbersplatRenderAlways(GetLastCreatedUbersplat(),true)
set br=1
loop
exitwhen br>5
set Ju[8]=PolarProjectionBJ(Ju[4],GetRandomReal(50.00,180.00),GetRandomDirectionDeg())
if evw()then
call CreateNUnitsAtLoc(1,1747994949,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
call SetUnitTimeScalePercent(GetLastCreatedUnit(),20.00)
elseif pvw()then
call CreateNUnitsAtLoc(1,1747988534,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
else
call CreateNUnitsAtLoc(1,1747995719,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
call SetUnitTimeScalePercent(GetLastCreatedUnit(),20.00)
endif
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call UnitApplyTimedLifeBJ(5.00,1112820806,GetLastCreatedUnit())
call SaveIntegerBJ(Du+7,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
set br=br+1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Gu,Ju[4],Condition(Euw)),Zuw)
if fvw()then
set br=1
loop
exitwhen br>3
call CreateNUnitsAtLoc(1,1747993905,GetOwningPlayer(Nu),Ju[4],bj_UNIT_FACING)
call KillUnit(GetLastCreatedUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
set br=br+1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Qu,Ju[4],Condition(Uuw)),Iuw)
endif
endif
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Gu,Ju[4],Condition(Puw)),Auw)
if kvw()then
if Fvw()then
call ForForce(GetPlayersAll(),Duw)
endif
call SaveIntegerBJ(4,7,Bu,Au)
endif
endif
call ForGroupBJ(lr[rr],Huw)
call ForGroupBJ(cr[rr],Juw)
if amw()then
set pr=GroupPickRandomUnit(lr[rr])
set Ju[13]=GetUnitLoc(pr)
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[13],bj_UNIT_FACING)
call SetUnitFlyHeightBJ(GetLastCreatedUnit(),GetUnitFlyHeight(pr),0.00)
call UnitAddAbilityBJ(1093678674,GetLastCreatedUnit())
set bj_wantDestroyGroup=true
call IssueTargetOrderBJ(GetLastCreatedUnit(),"chainlightning",GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(Pu,Ju[13],Condition(Kuw))))
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[13])
endif
endif
endfunction
function Qws takes string mws returns string
return Mhr(mws,1)
endfunction
function vws takes string xws returns string
return Mhr(xws,0)
endfunction
function jws takes nothing returns boolean
set LT[0]=""
set LT[1]=""
set LT[2]=""
set LT[3]=""
set LT[4]=""
set LT[5]=""
set LT[6]=""
set LT[7]=""
set LT[8]=""
set LT[9]="\t"
set LT[10]="
"
set LT[11]=""
set LT[12]=""
set LT[13]="
"
set LT[14]=""
set LT[15]=""
set LT[16]=""
set LT[17]=""
set LT[18]=""
set LT[19]=""
set LT[20]=""
set LT[21]=""
set LT[22]=""
set LT[23]=""
set LT[24]=""
set LT[25]=""
set LT[26]=""
set LT[27]=""
set LT[28]=""
set LT[29]=""
set LT[30]=""
set LT[31]=""
set LT[32]=" "
set LT[33]="!"
set LT[34]="\""
set LT[35]="#"
set LT[36]="$"
set LT[37]="%"
set LT[38]="&"
set LT[39]="'"
set LT[40]="("
set LT[41]=")"
set LT[42]="*"
set LT[43]="+"
set LT[44]=","
set LT[45]="-"
set LT[46]="."
set LT[47]="/"
set LT[48]="0"
set LT[49]="1"
set LT[50]="2"
set LT[51]="3"
set LT[52]="4"
set LT[53]="5"
set LT[54]="6"
set LT[55]="7"
set LT[56]="8"
set LT[57]="9"
set LT[58]=":"
set LT[59]=":"
set LT[60]="<"
set LT[61]="="
set LT[62]=">"
set LT[63]="?"
set LT[64]="@"
set LT[65]="A"
set LT[66]="B"
set LT[67]="C"
set LT[68]="D"
set LT[69]="E"
set LT[70]="F"
set LT[71]="G"
set LT[72]="H"
set LT[73]="I"
set LT[74]="J"
set LT[75]="K"
set LT[76]="L"
set LT[77]="M"
set LT[78]="N"
set LT[79]="O"
set LT[80]="P"
set LT[81]="Q"
set LT[82]="R"
set LT[83]="S"
set LT[84]="T"
set LT[85]="U"
set LT[86]="V"
set LT[87]="W"
set LT[88]="X"
set LT[89]="Y"
set LT[90]="Z"
set LT[91]="["
set LT[92]="\\"
set LT[93]="]"
set LT[94]="^"
set LT[95]="_"
set LT[96]="`"
set LT[97]="a"
set LT[98]="b"
set LT[99]="c"
set LT[100]="d"
set LT[101]="e"
set LT[102]="f"
set LT[103]="g"
set LT[104]="h"
set LT[105]="i"
set LT[106]="j"
set LT[107]="k"
set LT[108]="l"
set LT[109]="m"
set LT[110]="n"
set LT[111]="o"
set LT[112]="p"
set LT[113]="q"
set LT[114]="r"
set LT[115]="s"
set LT[116]="t"
set LT[117]="u"
set LT[118]="v"
set LT[119]="w"
set LT[120]="x"
set LT[121]="y"
set LT[122]="z"
set LT[123]="{"
set LT[124]="|"
set LT[125]="}"
set LT[126]="~"
set LT[127]=""
set LT[128]=Qws("À")
set LT[129]=Qws("Á")
set LT[130]=Qws("Â")
set LT[131]=Qws("Ã")
set LT[132]=Qws("Ä")
set LT[133]=Qws("Å")
set LT[134]=Qws("Æ")
set LT[135]=Qws("Ç")
set LT[136]=Qws("È")
set LT[137]=Qws("É")
set LT[138]=Qws("Ê")
set LT[139]=Qws("Ë")
set LT[140]=Qws("Ì")
set LT[141]=Qws("Í")
set LT[142]=Qws("Î")
set LT[143]=Qws("Ï")
set LT[144]=Qws("Ð")
set LT[145]=Qws("Ñ")
set LT[146]=Qws("Ò")
set LT[147]=Qws("Ó")
set LT[148]=Qws("Ô")
set LT[149]=Qws("Õ")
set LT[150]=Qws("Ö")
set LT[151]=Qws("×")
set LT[152]=Qws("Ø")
set LT[153]=Qws("Ù")
set LT[154]=Qws("Ú")
set LT[155]=Qws("Û")
set LT[156]=Qws("Ü")
set LT[157]=Qws("Ý")
set LT[158]=Qws("Þ")
set LT[159]=Qws("ß")
set LT[160]=Qws("à")
set LT[161]=Qws("á")
set LT[162]=Qws("â")
set LT[163]=Qws("ã")
set LT[164]=Qws("ä")
set LT[165]=Qws("å")
set LT[166]=Qws("æ")
set LT[167]=Qws("ç")
set LT[168]=Qws("è")
set LT[169]=Qws("é")
set LT[170]=Qws("ê")
set LT[171]=Qws("ë")
set LT[172]=Qws("ì")
set LT[173]=Qws("í")
set LT[174]=Qws("î")
set LT[175]=Qws("ï")
set LT[176]=Qws("ð")
set LT[177]=Qws("ñ")
set LT[178]=Qws("ò")
set LT[179]=Qws("ó")
set LT[180]=Qws("ô")
set LT[181]=Qws("õ")
set LT[182]=Qws("ö")
set LT[183]=Qws("÷")
set LT[184]=Qws("ø")
set LT[185]=Qws("ù")
set LT[186]=Qws("ú")
set LT[187]=Qws("û")
set LT[188]=Qws("ü")
set LT[189]=Qws("ý")
set LT[190]=Qws("þ")
set LT[191]=Qws("ÿ")
set LT[192]=""
set LT[193]=""
set LT[194]=vws("¡")
set LT[195]=vws("À")
set LT[196]=vws("Ā")
set LT[197]=vws("ŀ")
set LT[198]=vws("ƀ")
set LT[199]=vws("ǀ")
set LT[200]=vws("Ȁ")
set LT[201]=vws("ɀ")
set LT[202]=vws("ʀ")
set LT[203]=vws("ˀ")
set LT[204]=vws("̀")
set LT[205]=vws("̀")
set LT[206]=vws("΄")
set LT[207]=vws("π")
set LT[208]=vws("Ё")
set LT[209]=vws("р")
set LT[210]=vws("Ҁ")
set LT[211]=vws("Ӏ")
set LT[212]=vws("Ԁ")
set LT[213]=vws("Հ")
set LT[214]=vws("ր")
set LT[215]=vws("׀")
set LT[216]=vws("؀")
set LT[217]=vws("ـ")
set LT[218]=vws("ڀ")
set LT[219]=vws("ۀ")
set LT[220]=vws("܀")
set LT[221]=vws("ݍ")
set LT[222]=vws("ހ")
set LT[223]=vws("߀")
set LT[224]=vws("ࢠ")
set LT[225]=vws("ក")
set LT[226]=vws("⌀")
set LT[227]=""
set LT[228]=""
set LT[229]=""
set LT[230]=""
set LT[231]=""
set LT[232]=""
set LT[233]=""
set LT[234]=vws("꠰")
set LT[235]=""
set LT[236]=""
set LT[237]=vws("ힰ")
set LT[238]=""
set LT[239]=vws("豈")
set LT[240]=vws("𐎠")
set LT[241]=""
set LT[242]=""
set LT[243]=""
set LT[244]=""
set LT[245]=""
set LT[246]=""
set LT[247]=""
set LT[248]=""
set LT[249]=""
set LT[250]=""
set LT[251]=""
set LT[252]=""
set LT[253]=""
set LT[254]=""
set LT[255]=""
return true
endfunction
function k2w takes nothing returns boolean
return GetSpellAbilityId()==1093679446
endfunction
function k4w takes nothing returns nothing
call ForGroup(GetUnitsInRangeOfLocMatching(800.,GetUnitLoc(GetSpellAbilityUnit()),Condition(NOw)),MOw)
endfunction
function k6w takes nothing returns boolean
return GetSpellAbilityId()==1093679191
endfunction
function k8w takes nothing returns boolean
return GetSpellAbilityId()==1095725933
endfunction
function k9u takes nothing returns nothing
local unit R9u=GetSpellAbilityUnit()
local location T9u=GetSpellTargetLoc()
local location Y9u=GetUnitLoc(R9u)
local effect G9u=AddSpecialEffect("Abilities\\Spells\\Other\\NoblePhantasm\\NoblePhantasm.mdx",GetLocationX(Y9u)+200.*Cos(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),GetLocationY(Y9u)+200.*Sin(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))))
local effect g9u=AddSpecialEffect("Abilities\\Spells\\Other\\NoblePhantasm\\NoblePhantasm.mdx",GetLocationX(Y9u)+400.*Cos(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),GetLocationY(Y9u)+400.*Sin(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))))
local effect h9u=AddSpecialEffect("Abilities\\Spells\\Other\\NoblePhantasm\\NoblePhantasm.mdx",GetLocationX(Y9u)+600.*Cos(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),GetLocationY(Y9u)+600.*Sin(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))))
local boolean F9u=BlzIsUnitInvulnerable(R9u)
if F9u==false then
call SetUnitInvulnerable(R9u,true)
endif
call UnitDamagePoint(R9u,0.,200.,GetLocationX(Y9u)+200.*Cos(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),GetLocationY(Y9u)+200.*Sin(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),350.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call UnitDamagePoint(R9u,0.,200.,GetLocationX(Y9u)+400.*Cos(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),GetLocationY(Y9u)+400.*Sin(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),350.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call UnitDamagePoint(R9u,0.,200.,GetLocationX(Y9u)+600.*Cos(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),GetLocationY(Y9u)+600.*Sin(Atan2(GetLocationY(T9u)-GetLocationY(Y9u),GetLocationX(T9u)-GetLocationX(Y9u))),350.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
if F9u==false then
call SetUnitInvulnerable(R9u,false)
endif
set F9u=false
call RemoveLocation(T9u)
call RemoveLocation(Y9u)
set T9u=null
set Y9u=null
set R9u=null
call TRw(G9u,2.)
call TRw(g9u,2.)
call TRw(h9u,2.)
set G9u=null
set g9u=null
set h9u=null
set R9u=null
set T9u=null
set Y9u=null
set G9u=null
set g9u=null
set h9u=null
endfunction
function kBw takes nothing returns nothing
if GetUnitAbilityLevel(GetSpellTargetUnit(),1093679431)!=0 then
call IssueImmediateOrder(GetSpellAbilityUnit(),"stop")
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\SpellShieldAmulet\\SpellShieldCaster.mdl",GetSpellTargetUnit(),"origin"))
endif
endfunction
function FCw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function kCw takes nothing returns nothing
if FCw()then
call UnitRemoveAbilityBJ(1093679190,GetEnumUnit())
call UnitRemoveAbilityBJ(1093679188,GetEnumUnit())
call UnitRemoveAbilityBJ(1093679189,GetEnumUnit())
call UnitRemoveAbilityBJ(1093679187,GetEnumUnit())
call GroupRemoveUnitSimple(GetEnumUnit(),dr)
call GroupRemoveUnitSimple(GetEnumUnit(),Rr)
call GroupRemoveUnitSimple(GetEnumUnit(),fr)
endif
endfunction
function FDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="outlandsky")then
return false
endif
return true
endfunction
function GDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskypurple")then
return false
endif
return true
endfunction
function MAw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="blizzardsky")then
return false
endif
return true
endfunction
function ODw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskypurple")then
return false
endif
return true
endfunction
function RDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwintersky")then
return false
endif
return true
endfunction
function SDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskyyellow")then
return false
endif
return true
endfunction
function TDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskybrightgreen")then
return false
endif
return true
endfunction
function YDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskypink")then
return false
endif
return true
endfunction
function aDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="foggedsky")then
return false
endif
return true
endfunction
function bDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskypink")then
return false
endif
return true
endfunction
function cDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="outlandsky")then
return false
endif
return true
endfunction
function dDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronfallsky")then
return false
endif
return true
endfunction
function eDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="dalaransky")then
return false
endif
return true
endfunction
function fDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronsummersky")then
return false
endif
return true
endfunction
function gDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskyred")then
return false
endif
return true
endfunction
function hDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskyyellow")then
return false
endif
return true
endfunction
function iDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronsummersky")then
return false
endif
return true
endfunction
function lDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwintersky")then
return false
endif
return true
endfunction
function nDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="genericsky")then
return false
endif
return true
endfunction
function oDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskyred")then
return false
endif
return true
endfunction
function pDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="blizzardsky")then
return false
endif
return true
endfunction
function qDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="felwoodsky")then
return false
endif
return true
endfunction
function rDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="foggedsky")then
return false
endif
return true
endfunction
function sDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="genericsky")then
return false
endif
return true
endfunction
function tDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronfallsky")then
return false
endif
return true
endfunction
function uDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="felwoodsky")then
return false
endif
return true
endfunction
function wDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="dalaransky")then
return false
endif
return true
endfunction
function yDw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),5,StringLength(GetEventPlayerChatString()))=="lordaeronwinterskybrightgreen")then
return false
endif
return true
endfunction
function kDw takes nothing returns nothing
if MAw()then
call SetSkyModel("Environment\\Sky\\BlizzardSky\\BlizzardSky.mdl")
return
endif
if wDw()then
call SetSkyModel("Environment\\Sky\\DalaranSky\\DalaranSky.mdl")
return
endif
if uDw()then
call SetSkyModel("Environment\\Sky\\FelwoodSky\\FelwoodSky.mdl")
return
endif
if rDw()then
call SetSkyModel("Environment\\Sky\\FoggedSky\\FoggedSky.mdl")
return
endif
if sDw()then
call SetSkyModel("Environment\\Sky\\Sky\\SkyLight.mdl")
return
endif
if tDw()then
call SetSkyModel("Environment\\Sky\\LordaeronFallSky\\LordaeronFallSky.mdl")
return
endif
if iDw()then
call SetSkyModel("Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl")
return
endif
if SDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyYellow\\LordaeronWinterSkyYellow.mdl")
return
endif
if cDw()then
call SetSkyModel("Environment\\Sky\\Outland_Sky\\Outland_Sky.mdl")
return
endif
if oDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyRed\\LordaeronWinterSkyRed.mdl")
return
endif
if ODw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyPurple\\LordaeronWinterSkyPurple.mdl")
return
endif
if lDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSky\\LordaeronWinterSky.mdl")
return
endif
if bDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyPink\\LordaeronWinterSkyPink.mdl")
return
endif
if yDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyBrightGreen\\LordaeronWinterSkyBrightGreen.mdl")
return
endif
call DoNothing()
call DoNothing()
call DoNothing()
call DoNothing()
call DoNothing()
if pDw()then
call SetSkyModel("Environment\\Sky\\BlizzardSky\\BlizzardSky.mdl")
return
endif
if eDw()then
call SetSkyModel("Environment\\Sky\\DalaranSky\\DalaranSky.mdl")
return
endif
if qDw()then
call SetSkyModel("Environment\\Sky\\FelwoodSky\\FelwoodSky.mdl")
return
endif
if aDw()then
call SetSkyModel("Environment\\Sky\\FoggedSky\\FoggedSky.mdl")
return
endif
if nDw()then
call SetSkyModel("Environment\\Sky\\Sky\\SkyLight.mdl")
return
endif
if dDw()then
call SetSkyModel("Environment\\Sky\\LordaeronFallSky\\LordaeronFallSky.mdl")
return
endif
if fDw()then
call SetSkyModel("Environment\\Sky\\LordaeronSummerSky\\LordaeronSummerSky.mdl")
return
endif
if RDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSky\\LordaeronWinterSky.mdl")
return
endif
if TDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyBrightGreen\\LordaeronWinterSkyBrightGreen.mdl")
return
endif
if YDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyPink\\LordaeronWinterSkyPink.mdl")
return
endif
if GDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyPurple\\LordaeronWinterSkyPurple.mdl")
return
endif
if gDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyRed\\LordaeronWinterSkyRed.mdl")
return
endif
if hDw()then
call SetSkyModel("Environment\\Sky\\LordaeronWinterSkyYellow\\LordaeronWinterSkyYellow.mdl")
return
endif
if FDw()then
call SetSkyModel("Environment\\Sky\\Outland_Sky\\Outland_Sky.mdl")
return
endif
endfunction
function w2t takes integer N4t,rect M4t returns nothing
call m4t(N4t)
set QK[N4t]=M4t
endfunction
function B4t takes rect X4t,string C4t returns integer
local integer V4t
set w3[MM]=C4t
set MM=MM+1
set V4t=FBS("when calling alloc_Rect in ScmdDataTypes, line 690")
call w2t(V4t,X4t)
set MM=MM-1
return V4t
endfunction
function H1S takes string A1S returns integer
local integer D1S
set w3[MM]=A1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D1S=kj
set jj[D1S]=1059
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 22")
set D1S=0
endif
else
set Fj=Fj-1
set D1S=hj[Fj]
set jj[D1S]=1059
endif
set MM=MM-1
return D1S
endfunction
function L1S takes string J1S returns integer
local integer K1S
set w3[MM]=J1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K1S=kj
set jj[K1S]=1060
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 25")
set K1S=0
endif
else
set Fj=Fj-1
set K1S=hj[Fj]
set jj[K1S]=1060
endif
set MM=MM-1
return K1S
endfunction
function M1S takes string B1S returns integer
local integer N1S
set w3[MM]=B1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N1S=kj
set jj[N1S]=1062
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 31")
set N1S=0
endif
else
set Fj=Fj-1
set N1S=hj[Fj]
set jj[N1S]=1062
endif
set MM=MM-1
return N1S
endfunction
function P1S takes string U1S returns integer
local integer I1S
set w3[MM]=U1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I1S=kj
set jj[I1S]=1058
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 19")
set I1S=0
endif
else
set Fj=Fj-1
set I1S=hj[Fj]
set jj[I1S]=1058
endif
set MM=MM-1
return I1S
endfunction
function Q1S takes string v1S returns integer
local integer m1S
set w3[MM]=v1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m1S=kj
set jj[m1S]=1056
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 13")
set m1S=0
endif
else
set Fj=Fj-1
set m1S=hj[Fj]
set jj[m1S]=1056
endif
set MM=MM-1
return m1S
endfunction
function V1S takes string X1S returns integer
local integer C1S
set w3[MM]=X1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C1S=kj
set jj[C1S]=1061
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 28")
set C1S=0
endif
else
set Fj=Fj-1
set C1S=hj[Fj]
set jj[C1S]=1061
endif
set MM=MM-1
return C1S
endfunction
function Z1S takes string W1S returns integer
local integer E1S
set w3[MM]=W1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E1S=kj
set jj[E1S]=1057
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 16")
set E1S=0
endif
else
set Fj=Fj-1
set E1S=hj[Fj]
set jj[E1S]=1057
endif
set MM=MM-1
return E1S
endfunction
function r4c takes string w4c returns integer
local integer u4c
set w3[MM]=w4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u4c=kj
set jj[u4c]=845
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 35")
set u4c=0
endif
else
set Fj=Fj-1
set u4c=hj[Fj]
set jj[u4c]=845
endif
set MM=MM-1
return u4c
endfunction
function x1S takes string k1S returns integer
local integer j1S
set w3[MM]=k1S
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j1S=kj
set jj[j1S]=1055
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 10")
set j1S=0
endif
else
set Fj=Fj-1
set j1S=hj[Fj]
set jj[j1S]=1055
endif
set MM=MM-1
return j1S
endfunction
function J8r takes string g8r returns boolean
local integer h8r
local integer F8r
local integer k8r
local integer j8r
local integer x8r
local integer v8r
local integer m8r
local integer Q8r
local integer W8r
local integer E8r
local integer Z8r
local integer U8r
local integer I8r
local integer P8r
local integer A8r
local integer D8r
local integer H8r
set w3[MM]=g8r
set MM=MM+1
set Wd=l5i(B4t(Ae,"when calling new_Rect in ScmdRectBuiltins, line 7"),"when calling new_SharedPointer in ScmdRectBuiltins, line 7")
set h8r=x1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 10")
set F8r=eDt(h8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 10")
call nno(F8r,w2u(),w2u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdRectBuiltins, line 12")
call jBu(WHt(F8r,"when calling new_BuiltinFunction in ScmdRectBuiltins, line 10"),"rect","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 10")
set k8r=Q1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 13")
set j8r=eDt(k8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 13")
call Fao(j8r,S2u(),"when calling setArgumentsTypes in ScmdRectBuiltins, line 15")
call jBu(WHt(j8r,"when calling new_BuiltinFunction in ScmdRectBuiltins, line 13"),"getrectmaxx","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 13")
set x8r=Z1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 16")
set v8r=eDt(x8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 16")
call Fao(v8r,S2u(),"when calling setArgumentsTypes in ScmdRectBuiltins, line 18")
call jBu(WHt(v8r,"when calling new_BuiltinFunction in ScmdRectBuiltins, line 16"),"getrectmaxy","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 16")
set m8r=P1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 19")
set Q8r=eDt(m8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 19")
call Fao(Q8r,S2u(),"when calling setArgumentsTypes in ScmdRectBuiltins, line 21")
call jBu(WHt(Q8r,"when calling new_BuiltinFunction in ScmdRectBuiltins, line 19"),"getrectminx","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 19")
set W8r=H1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 22")
set E8r=eDt(W8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 22")
call Fao(E8r,S2u(),"when calling setArgumentsTypes in ScmdRectBuiltins, line 24")
call jBu(WHt(E8r,"when calling new_BuiltinFunction in ScmdRectBuiltins, line 22"),"getrectminy","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 22")
set Z8r=L1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 25")
set U8r=eDt(Z8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 25")
call Fao(U8r,S2u(),"when calling setArgumentsTypes in ScmdRectBuiltins, line 27")
call jBu(WHt(U8r,"when calling new_BuiltinFunction in ScmdRectBuiltins, line 25"),"getrectcenterx","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 25")
set I8r=V1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 28")
set P8r=eDt(I8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 28")
call Fao(P8r,S2u(),"when calling setArgumentsTypes in ScmdRectBuiltins, line 30")
call jBu(WHt(P8r,"when calling new_BuiltinFunction in ScmdRectBuiltins, line 28"),"getrectcentery","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 28")
set A8r=M1S("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 31")
set D8r=eDt(A8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 31")
call Pao(D8r,S2u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdRectBuiltins, line 34")
call jBu(WHt(D8r,"when calling new_BuiltinFunction in ScmdRectBuiltins, line 31"),"moverectto","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 31")
set H8r=r4c("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdRectBuiltins in ScmdRectBuiltins, line 35")
call jBu(WHt(eDt(H8r,"when calling new_BuiltinData in ScmdRectBuiltins, line 35"),"when calling new_BuiltinFunction in ScmdRectBuiltins, line 35"),"getentiremaprect","when calling registerProtectedBuiltin in ScmdRectBuiltins, line 35")
set MM=MM-1
return true
endfunction
function kRo takes nothing returns boolean
set MM=0
return J8r("ScmdRectBuiltins, line 1")
endfunction
function X7u takes integer L7u returns camerafield
return ConvertCameraField(L7u)
endfunction
function Sti takes integer Nsi,integer Msi,string wti returns nothing
local integer uti
local integer rti
local integer sti
local camerafield tti
local real iti
set w3[MM]=wti
set MM=MM+1
set uti=0
set rti=bj_MAX_PLAYERS
loop
exitwhen uti>rti
set sti=fHs(jd[uti],"when calling iterator in ScmdPlayerCameraSettingsBuiltins, line 40")
loop
exitwhen not PPs(sti,"when calling hasNext in ScmdPlayerCameraSettingsBuiltins, line 40")
set tti=X7u(EPs(sti,"when calling next in ScmdPlayerCameraSettingsBuiltins, line 40"))
set iti=avr(BZc(jd[uti],K7u(tti),"when calling get in ScmdPlayerCameraSettingsBuiltins, line 41"))
if ea==pa[uti]then
call SetCameraField(tti,iti,0.)
endif
endloop
call HPs(sti,"when calling close in ScmdPlayerCameraSettingsBuiltins, line 40")
set uti=uti+1
endloop
set MM=MM-1
set tti=null
endfunction
function Bgc takes integer Xgc,integer Cgc,string Vgc returns nothing
set w3[MM]=Vgc
set MM=MM+1
if jg[Xgc]==0 then
if Xgc==0 then
call Mau("Nullpointer exception when calling CallbackPeriodic.call","when calling error in ClosureTimers, line 130")
else
call Mau("Called CallbackPeriodic.call on invalid object.","when calling error in ClosureTimers, line 130")
endif
endif
call Sti(Xgc,Cgc,"when calling call_doPeriodically_ScmdPlayerCameraSettingsBuiltins in ClosureTimers, line 130")
set MM=MM-1
endfunction
function YOu takes string ROu returns nothing
local integer TOu
set w3[MM]=ROu
set MM=MM+1
set TOu=Vkr(GetExpiredTimer(),"when calling getData in ClosureTimers, line 138")
call Bgc(TOu,TOu,"when calling call in ClosureTimers, line 139")
set MM=MM-1
endfunction
function kTo takes nothing returns nothing
set MM=0
call YOu("ClosureTimers, line 135")
endfunction
function FUw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="addstat off")then
return false
endif
return true
endfunction
function hUw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="addstat on")then
return false
endif
return true
endfunction
function kUw takes nothing returns nothing
if hUw()then
endif
if FUw()then
endif
endfunction
function k_u takes nothing returns boolean
return true
endfunction
function Sru takes string uru returns integer
local integer rru=1
local integer sru=0
local integer tru=vhr(uru)-1
local string iru
loop
exitwhen tru<0
set iru=Mhr(uru,tru)
if iru!=" " then
if iru=="1" then
set sru=sru+rru
endif
set rru=rru*2
endif
set tru=tru-1
endloop
return sru
endfunction
function NLu takes string BLu returns integer
return Sru(BLu)
endfunction
function XGu takes integer KGu returns integer
local integer LGu
if KGu<0 then
set LGu=-KGu
else
set LGu=KGu
endif
return LGu
endfunction
function dLu takes integer pLu returns string
local string eLu
local string qLu
local integer aLu
local integer nLu
if pLu==0 then
return Mhr(Fn,0)
endif
if pLu<0 then
set qLu="-"
else
set qLu=""
endif
set eLu=qLu
set aLu=XGu(pLu)
loop
exitwhen not(aLu!=0)
set nLu=aLu/kn
set eLu=eLu+Mhr(Fn,aLu-nLu*kn)
set aLu=nLu
endloop
return eLu
endfunction
function ULu takes real xLu returns string
local real vLu=oUu(xLu)
local integer mLu=qUu(vLu)
local integer QLu=qUu((vLu-mLu)*1000.)
local string WLu
local string ELu
local string ZLu
if xLu<0. then
set WLu="-"
else
set WLu=""
endif
set ZLu=WLu+dLu(mLu)
if QLu!=0 then
set ELu="."+dLu(QLu)
else
set ELu=""
endif
return ZLu+ELu
endfunction
function oXu takes string SXu,boolean cXu returns string
return tgu(lsu(cXu))+SXu
endfunction
function bXu takes destructable OXu returns string
local string lXu=oXu("",qeu(OXu))
set i4=lXu
return i4
endfunction
function jXu takes destructable hXu,real FXu,real kXu returns string
return dLu(NLu(bXu(hXu)))+jn+cmu(oeu(hXu))+jn+ULu(teu(hXu)-FXu)+jn+ULu(Seu(hXu)-kXu)+jn+ULu(aHu(hXu))+jn+ULu(dHu(hXu))+jn+ULu(RHu(hXu))+jn+dLu(YHu(hXu))+jn+ULu(veu(hXu))+jn+ULu(heu(hXu))+jn+ULu(Reu(hXu))
endfunction
function tnr takes string snr returns boolean
return QFr(jf,snr)
endfunction
function ynr takes string inr returns nothing
local integer Snr=vhr(inr)
local string cnr=""
local integer onr=0
local boolean Onr=false
local integer lnr=0
local integer bnr=Snr-1
loop
exitwhen lnr>bnr
if tnr(Mhr(inr,lnr))then
set cnr=cnr+Mhr(inr,lnr)
elseif Onr then
set cnr=cnr+Mhr(inr,lnr)
set Onr=false
else
if(onr+2==Tf and lnr+1==Snr-1)or onr+2<Tf then
set cnr=cnr+Mhr(inr,lnr)
else
call Preload(cnr+"^")
set cnr=Mhr(inr,lnr)
set onr=0
endif
set Onr=true
endif
set onr=onr+1
if onr+1==Tf and lnr+2<Snr then
call Preload(cnr+"^")
set cnr=""
set onr=0
endif
set lnr=lnr+1
endloop
if onr!=0 then
call Preload(cnr)
endif
endfunction
function knr takes nothing returns nothing
call ynr(jXu(GetEnumDestructable(),xf,vf))
endfunction
function kws takes nothing returns boolean
return true
endfunction
function Fxw takes nothing returns boolean
if not(GetUnitFlyHeight(GetEnumUnit())<5.00)then
return false
endif
return true
endfunction
function Gxw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function Yxw takes nothing returns boolean
if not(er<=100.00)then
return false
endif
return true
endfunction
function gxw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function hxw takes nothing returns boolean
if not(CountUnitsInGroup(lr[rr])==0)then
return false
endif
return true
endfunction
function kxw takes nothing returns nothing
set Ju[2]=GetUnitLoc(Nu)
set er=LoadRealBJ(1,GetHandleIdBJ(GetEnumUnit()),Au)
set qr=LoadRealBJ(2,GetHandleIdBJ(GetEnumUnit()),Au)
set ar=LoadRealBJ(3,GetHandleIdBJ(GetEnumUnit()),Au)
if Yxw()then
set Ju[3]=PolarProjectionBJ(Ju[2],er+2.00,qr+10.00)
call SaveRealBJ(er+2.00,1,GetHandleIdBJ(GetEnumUnit()),Au)
else
set Ju[3]=PolarProjectionBJ(Ju[2],er,qr+5.00)
endif
call SaveRealBJ(qr+10.00,2,GetHandleIdBJ(GetEnumUnit()),Au)
call SaveRealBJ(ar+3.00,3,GetHandleIdBJ(GetEnumUnit()),Au)
call SetUnitPositionLocFacingBJ(GetEnumUnit(),Ju[3],qr+90.00)
call SetUnitFlyHeightBJ(GetEnumUnit(),GetUnitFlyHeight(GetEnumUnit())-3.00,0.00)
call SetUnitScalePercent(GetEnumUnit(),ar,ar,ar)
if Fxw()then
call KillUnit(GetEnumUnit())
call GroupRemoveUnitSimple(GetEnumUnit(),lr[rr])
call GroupAddUnitSimple(GetEnumUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetEnumUnit()),Au)
if gxw()then
call AddSpecialEffectLocBJ(Ju[3],"Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
elseif Gxw()then
call AddSpecialEffectLocBJ(Ju[3],"Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
else
call AddSpecialEffectLocBJ(Ju[3],"Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
endif
call DestroyEffectBJ(GetLastCreatedEffectBJ())
if hxw()then
call SaveIntegerBJ(0,10,Bu,Au)
call SaveIntegerBJ(3,7,Bu,Au)
endif
endif
call RemoveLocation(Ju[2])
call RemoveLocation(Ju[3])
endfunction
function l0u takes nothing returns nothing
local unit o0u=GetSpellAbilityUnit()
local unit O0u=GetSpellTargetUnit()
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Human\\HumanBlood\\HumanBloodKnight.mdl",O0u,"chest"))
call UnitDamageTarget(o0u,O0u,125*GetUnitAbilityLevel(o0u,1095725665)-25,true,true,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
set O0u=null
set o0u=null
set o0u=null
set O0u=null
endfunction
function l1w takes nothing returns boolean
if not(GetSpellAbilityId()==1093682257)then
return false
endif
return true
endfunction
function l5w takes nothing returns boolean
if not(GetSpellAbilityId()==1093683019)then
return false
endif
return true
endfunction
function l8w takes nothing returns nothing
call TRw(AddSpecialEffect("Abilities\\Spells\\Other\\TalkToMe\\TalkToMe.mdl",GetSpellTargetX(),GetSpellTargetY()),GetUnitAbilityLevel(GetSpellAbilityUnit(),1093682994))
endfunction
function OAw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function lAw takes nothing returns nothing
if OAw()then
call UnitRemoveAbilityBJ(1097690998,GetEnumUnit())
endif
endfunction
function OCw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function lCw takes nothing returns nothing
if OCw()then
call UnitRemoveAbilityBJ(1093678935,GetEnumUnit())
endif
endfunction
function lHw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(700.00,G,Jtw)
call RemoveLocation(G)
endfunction
function lIw takes nothing returns nothing
call WRw(GetEnumUnit(),1096971630,0)
endfunction
function lJw takes nothing returns nothing
set ls[0]=false
set ls[GetConvertedPlayerId(GetTriggerPlayer())]=true
set F[GetConvertedPlayerId(GetTriggerPlayer())]=true
call DisplayTextToForce(GetPlayersAll(),k[GetConvertedPlayerId(GetTriggerPlayer())-1]+GetPlayerName(GetTriggerPlayer())+"|R|CFF808040 занял место администратора.|R")
endfunction
function lNw takes nothing returns nothing
call GroupRemoveUnitSimple(GetEnumUnit(),us)
call GroupRemoveUnitSimple(GetEnumUnit(),ws)
call GroupRemoveUnitSimple(GetEnumUnit(),St)
call GroupRemoveUnitSimple(GetEnumUnit(),tt)
call GroupRemoveUnitSimple(GetEnumUnit(),os)
call GroupRemoveUnitSimple(GetEnumUnit(),ys)
call GroupRemoveUnitSimple(GetEnumUnit(),rs)
call GroupRemoveUnitSimple(GetEnumUnit(),Ot)
endfunction
function lPw takes nothing returns boolean
local string OPw=GetEventPlayerChatString()
return true
if SubString(OPw,0,3)=="ic " and S2I(SubString(OPw,3,4))<=6 and S2I(SubString(OPw,3,4))>=1 and SubString(OPw,4,5)==" " and SubString(OPw,5,StringLength(OPw))=="0" or S2I(SubString(OPw,5,StringLength(OPw)))>=1 then
set OPw=null
return true
else
set OPw=null
return false
endif
endfunction
function y8r takes string c8r returns boolean
local integer o8r
local integer O8r
local trigger l8r
local trigger b8r
set w3[MM]=c8r
set MM=MM+1
set vd=oRS("when calling new_StringHashMap in ScmdReader, line 15")
set md=HDs("when calling new_HashMap in ScmdReader, line 16")
set o8r=0
set O8r=bj_MAX_PLAYERS-1
loop
exitwhen o8r>O8r
set l8r=CreateTrigger()
call Uxr(l8r,pa[o8r],null,false)
set b8r=l8r
call rxr(b8r,faw)
set o8r=o8r+1
endloop
set MM=MM-1
set l8r=null
set b8r=null
return true
endfunction
function lRo takes nothing returns boolean
set MM=0
return y8r("ScmdReader, line 1")
endfunction
function lRu takes nothing returns boolean
set ee=CreateTimer()
call pjr(ee,100000.,null)
call njr(CreateTimer(),dy,oaw)
return true
endfunction
function lRw takes nothing returns nothing
local timer oRw=GetExpiredTimer()
local unit ORw=LoadUnitHandle(c,GetHandleId(oRw),o)
call FlushChildHashtable(c,GetHandleId(oRw))
call DestroyTimer(oRw)
set oRw=null
call RemoveUnit(ORw)
set ORw=null
set oRw=null
set ORw=null
endfunction
function Ugw takes player kgw,integer jgw,integer xgw,string vgw,widget mgw,real Qgw,real Wgw,real Egw returns nothing
local unit Zgw=CreateUnit(kgw,Y,Qgw,Wgw,Rad2Deg(Atan2(GetWidgetY(mgw)-Wgw,GetWidgetX(mgw)-Qgw)))
call UnitAddAbility(Zgw,jgw)
call WRw(Zgw,jgw,xgw)
call IssueTargetOrder(Zgw,vgw,mgw)
call mYw(Fgw(Zgw),Egw)
set Zgw=null
endfunction
function Ndw takes player Jdw,integer Kdw,integer Ldw,string Xdw,widget Cdw,real Vdw,real Bdw returns nothing
call Ugw(Jdw,Kdw,Ldw,Xdw,Cdw,Vdw,Bdw,1.)
endfunction
function Hbr takes string Abr returns nothing
local unit Dbr
set w3[MM]=Abr
set MM=MM+1
if GetSpellAbilityId()==Id then
set Dbr=GetSpellAbilityUnit()
call KTc(Dd,Dbr,12.,"when calling apply in ShieldWall, line 29")
call Ndw(GetOwningPlayer(Dbr),Ad,1,"attackonce",Dbr,GetUnitX(Dbr),GetUnitY(Dbr))
endif
set MM=MM-1
set Dbr=null
endfunction
function lTo takes nothing returns nothing
set MM=0
call Hbr("ShieldWall, line 44")
endfunction
function lhw takes nothing returns nothing
local unit ohw
local real Ohw
if GetUnitAbilityLevel(GetEventDamageSource(),UO)==0 or GetEventDamage()==0. then
set ohw=null
return
endif
set ohw=LoadUnitHandle(i,PO,GetHandleId(GetEventDamageSource()))
set Ohw=GetEventDamage()
call BlzSetEventDamage(0.)
call SetWidgetLife(ohw,GetWidgetLife(ohw)+Ohw)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\VampiricAura\\VampiricAuraTarget.mdl",ohw,"origin"))
set ohw=null
set ohw=null
endfunction
function lkw takes nothing returns nothing
local unit okw
local timer Okw
if GetUnitAbilityLevel(GetEventDamageSource(),1093684561)==0 or GetEventDamage()==0. or IsUnitInGroup(GetEventDamageSource(),dl)then
set okw=null
set Okw=null
return
endif
set okw=GetEventDamageSource()
if GetRandomInt(0,100)<10 then
call BlzEndUnitAbilityCooldown(okw,1093684561)
endif
call GroupAddUnit(dl,okw)
set Okw=ITw()
call SaveUnitHandle(i,y,GetHandleId(Okw),okw)
call TimerStart(Okw,1.,false,dww_2755)
set Okw=null
set okw=null
set okw=null
set Okw=null
endfunction
function lmr takes nothing returns boolean
return true
endfunction
function lmw takes nothing returns nothing
call CameraClearNoiseForPlayer(GetEnumPlayer())
endfunction
function ltu takes nothing returns boolean
return true
endfunction
function m3w takes nothing returns nothing
call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl",GetUnitX(GetDyingUnit())+17.5,GetUnitY(GetDyingUnit())-17.5))
endfunction
function m6w takes nothing returns nothing
local unit x6w=GetEnumUnit()
local unit v6w=CreateUnitAtLoc(Player(15),1747995215,GetUnitLoc(x6w),270.)
call UnitAddAbility(v6w,1093679192)
call SetUnitAbilityLevel(v6w,1093679192,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093679191))
call IssueTargetOrder(v6w,"entanglingroots",x6w)
call eRw(v6w,3.)
set x6w=null
set v6w=null
set x6w=null
set v6w=null
endfunction
function m8w takes nothing returns boolean
return GetSpellAbilityId()==1095722099
endfunction
function FAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="whitemask on")then
return false
endif
return true
endfunction
function GAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="hazeandfog off")then
return false
endif
return true
endfunction
function RAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="fog on")then
return false
endif
return true
endfunction
function TAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="fog off")then
return false
endif
return true
endfunction
function YAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="hazeandfog on")then
return false
endif
return true
endfunction
function dAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="nightstalk off")then
return false
endif
return true
endfunction
function fAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="nightstalk on")then
return false
endif
return true
endfunction
function gAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="whitemask on")then
return false
endif
return true
endfunction
function hAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="whitemask off")then
return false
endif
return true
endfunction
function jAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="blackmask on")then
return false
endif
return true
endfunction
function kAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="blackmask off")then
return false
endif
return true
endfunction
function vAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="dreammode on")then
return false
endif
return true
endfunction
function xAw takes nothing returns boolean
if not(GetEventPlayerChatString()=="dreammode off")then
return false
endif
return true
endfunction
function mAw takes nothing returns nothing
if vAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT,2.,"ReplaceableTextures\\CameraMasks\\DreamFilter_Mask.blp",100.00,0.,0.,1.00)
elseif xAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEIN,2.,"ReplaceableTextures\\CameraMasks\\DreamFilter_Mask.blp",100.00,0.,0.,1.00)
elseif jAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT,2.,"ReplaceableTextures\\CameraMasks\\Black_mask.blp",100.00,100.00,100.00,60.00)
elseif kAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEIN,2.,"ReplaceableTextures\\CameraMasks\\Black_mask.blp",100.00,100.00,100.00,60.00)
elseif FAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT,2.,"ReplaceableTextures\\CameraMasks\\White_mask.blp",100.00,100.00,100.00,65.00)
elseif hAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEIN,2.,"ReplaceableTextures\\CameraMasks\\White_mask.blp",100.00,100.00,100.00,65.00)
elseif gAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT,2.,"ReplaceableTextures\\CameraMasks\\White_mask.blp",100.00,100.00,100.00,65.00)
elseif GAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEIN,2.,"ReplaceableTextures\\CameraMasks\\HazeAndFogFilter_Mask.blp",100.00,100.00,100.00,65.00)
elseif YAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT,2.,"ReplaceableTextures\\CameraMasks\\HazeAndFogFilter_Mask.blp",100.00,100.00,100.00,65.00)
elseif TAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEIN,2.,"ReplaceableTextures\\CameraMasks\\GroundFog_mask.blp",100.00,100.00,100.00,65.00)
elseif RAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT,2.,"ReplaceableTextures\\CameraMasks\\GroundFog_mask.blp",100.00,100.00,100.00,65.00)
elseif fAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEOUT,2.,"ReplaceableTextures\\CameraMasks\\DreamFilter_Mask.blp",50.00,50.00,100.00,65.00)
elseif dAw()then
call CinematicFadeBJ(bj_CINEFADETYPE_FADEIN,2.,"ReplaceableTextures\\CameraMasks\\DreamFilter_Mask.blp",50.00,50.00,100.00,65.00)
endif
endfunction
function vCw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function xCw takes nothing returns boolean
if not GetBooleanAnd(GetBooleanAnd(IsUnitInGroup(GetEnumUnit(),dr)==false,IsUnitInGroup(GetEnumUnit(),Rr)==false),IsUnitInGroup(GetEnumUnit(),fr)==false)then
return false
endif
return true
endfunction
function mCw takes nothing returns nothing
if vCw()then
call SetUnitAbilityLevelSwapped(1093679190,GetEnumUnit(),GetUnitAbilityLevelSwapped(1093679190,GetEnumUnit())+1)
call SetUnitAbilityLevelSwapped(1093679188,GetEnumUnit(),GetUnitAbilityLevelSwapped(1093679190,GetEnumUnit()))
call SetUnitAbilityLevelSwapped(1093679189,GetEnumUnit(),GetUnitAbilityLevelSwapped(1093679190,GetEnumUnit()))
call SetUnitAbilityLevelSwapped(1093679187,GetEnumUnit(),GetUnitAbilityLevelSwapped(1093679190,GetEnumUnit()))
if xCw()then
call GroupAddUnitSimple(GetEnumUnit(),dr)
call UnitAddAbilityBJ(1093679190,GetEnumUnit())
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1093679190)
call UnitAddAbilityBJ(1093679188,GetEnumUnit())
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1093679188)
endif
endif
endfunction
function mMw takes nothing returns boolean
if GetSpellAbilityId()==1093683266 or GetSpellAbilityId()==1093683267 or GetSpellAbilityId()==1093683272 and GetUnitTypeId(GetSpellTargetUnit())!=1747988528 and GetOwningPlayer(GetSpellTargetUnit())!=Player(bj_PLAYER_NEUTRAL_VICTIM)then
return true
else
return false
endif
endfunction
function mPw takes nothing returns nothing
local unit FPw=GetManipulatingUnit()
local item kPw=GetManipulatedItem()
local item jPw=null
local integer xPw=0
local integer vPw=0
loop
exitwhen kPw==UnitItemInSlot(FPw,xPw)or xPw==6
set xPw=xPw+1
endloop
if xPw==6 or GetItemCharges(kPw)==0 then
set xPw=0
set kPw=null
set FPw=null
set FPw=null
set kPw=null
set jPw=null
return
endif
loop
set jPw=UnitItemInSlot(FPw,vPw)
if vPw!=xPw and GetItemTypeId(jPw)==GetItemTypeId(kPw)and GetItemCharges(jPw)>0 and GetItemCharges(jPw)<999 and(GetItemUserData(kPw)==1 and GetItemUserData(jPw)==1)or(GetItemUserData(kPw)!=1 and GetItemUserData(jPw)!=1)then
call SetItemCharges(jPw,GetItemCharges(jPw)+GetItemCharges(kPw))
if GetItemCharges(jPw)<=999 then
call RemoveItem(kPw)
else
call SetItemCharges(kPw,GetItemCharges(jPw)-999)
call SetItemCharges(jPw,999)
endif
set vPw=0
set xPw=0
set jPw=null
set kPw=null
set FPw=null
set FPw=null
set kPw=null
set jPw=null
return
endif
set vPw=vPw+1
exitwhen vPw==6
endloop
set vPw=0
set xPw=0
set jPw=null
set kPw=null
set FPw=null
set FPw=null
set kPw=null
set jPw=null
endfunction
function initPlayerArray takes nothing returns nothing
local integer i_1=0
local integer temp=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen i_1>temp
set pa[i_1]=Player(i_1)
set i_1=i_1+1
endloop
endfunction
function mQu takes nothing returns boolean
set ea=GetLocalPlayer()
call initPlayerArray()
return true
endfunction
function QTS takes integer mTS returns nothing
endfunction
function TTS takes integer fTS,boolean RTS returns nothing
call QTS(fTS)
set CM[fTS]=RTS
endfunction
function rec takes string wec returns integer
local integer uec
set w3[MM]=wec
set MM=MM+1
if Dm==0 then
if Hm<32768 then
set Hm=Hm+1
set uec=Hm
else
call Mau("Out of memory: Could not create Box⟪boolean⟫.","when calling error in Box, line 14")
set uec=0
endif
else
set Dm=Dm-1
set uec=Am[Dm]
endif
set MM=MM-1
return uec
endfunction
function BRS takes boolean XRS,string CRS returns integer
local integer VRS
set w3[MM]=CRS
set MM=MM+1
set VRS=rec("when calling alloc_Box⟪boolean⟫ in Box, line 17")
call TTS(VRS,XRS)
set MM=MM-1
return VRS
endfunction
function KQi takes integer HQi,string JQi returns nothing
set w3[MM]=JQi
set MM=MM+1
set EL[HQi]=YHs("when calling new_IterableMap in ScmdUnitParamLinkingBuiltins, line 17")
set MM=MM-1
endfunction
function NQi takes integer VQi,string BQi returns nothing
set w3[MM]=BQi
set MM=MM+1
call KQi(VQi,"when calling DisjointGroups_init in ScmdUnitParamLinkingBuiltins, line 15")
set MM=MM-1
endfunction
function xsc takes string ksc returns integer
local integer jsc
set w3[MM]=ksc
set MM=MM+1
if wv==0 then
if uv<32768 then
set uv=uv+1
set jsc=uv
set rv[jsc]=734
else
call Mau("Out of memory: Could not create DisjointGroups.","when calling error in ScmdUnitParamLinkingBuiltins, line 15")
set jsc=0
endif
else
set wv=wv-1
set jsc=Mx[wv]
set rv[jsc]=734
endif
set MM=MM-1
return jsc
endfunction
function CQi takes string LQi returns integer
local integer XQi
set w3[MM]=LQi
set MM=MM+1
set XQi=xsc("when calling alloc_DisjointGroups in ScmdUnitParamLinkingBuiltins, line 15")
call NQi(XQi,"when calling construct_DisjointGroups in ScmdUnitParamLinkingBuiltins, line 15")
set MM=MM-1
return XQi
endfunction
function Gsc takes string Tsc returns integer
local integer Ysc
set w3[MM]=Tsc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Ysc=kj
set jj[Ysc]=971
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 188")
set Ysc=0
endif
else
set Fj=Fj-1
set Ysc=hj[Fj]
set jj[Ysc]=971
endif
set MM=MM-1
return Ysc
endfunction
function Mrc takes string Brc returns integer
local integer Nrc
set w3[MM]=Brc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set Nrc=sg
set tg[Nrc]=743
else
call Mau("Out of memory: Could not create EventListener_add_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 90")
set Nrc=0
endif
else
set rg=rg-1
set Nrc=ug[rg]
set tg[Nrc]=743
endif
set MM=MM-1
return Nrc
endfunction
function Vrc takes string Xrc returns integer
local integer Crc
set w3[MM]=Xrc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set Crc=sg
set tg[Crc]=742
else
call Mau("Out of memory: Could not create EventListener_add_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 71")
set Crc=0
endif
else
set rg=rg-1
set Crc=ug[rg]
set tg[Crc]=742
endif
set MM=MM-1
return Crc
endfunction
function bSu takes eventid oSu,integer OSu,string lSu returns integer
set w3[MM]=lSu
set MM=MM+1
set EW[OSu]=giu(oSu,"when calling toIntId in ClosureEvents, line 112")
if wp[EW[OSu]]!=0 then
set UW[wp[EW[OSu]]]=OSu
set ZW[OSu]=wp[EW[OSu]]
endif
set wp[EW[OSu]]=OSu
set MM=MM-1
return OSu
endfunction
function bsc takes string Osc returns integer
local integer lsc
set w3[MM]=Osc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set lsc=sg
set tg[lsc]=746
else
call Mau("Out of memory: Could not create EventListener_add_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 123")
set lsc=0
endif
else
set rg=rg-1
set lsc=ug[rg]
set tg[lsc]=746
endif
set MM=MM-1
return lsc
endfunction
function esc takes string ysc returns integer
local integer psc
set w3[MM]=ysc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set psc=sg
set tg[psc]=747
else
call Mau("Out of memory: Could not create EventListener_add_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 135")
set psc=0
endif
else
set rg=rg-1
set psc=ug[rg]
set tg[psc]=747
endif
set MM=MM-1
return psc
endfunction
function isc takes string ssc returns integer
local integer tsc
set w3[MM]=ssc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set tsc=sg
set tg[tsc]=744
else
call Mau("Out of memory: Could not create EventListener_add_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 103")
set tsc=0
endif
else
set rg=rg-1
set tsc=ug[rg]
set tg[tsc]=744
endif
set MM=MM-1
return tsc
endfunction
function nsc takes string qsc returns integer
local integer asc
set w3[MM]=qsc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set asc=kj
set jj[asc]=970
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 178")
set asc=0
endif
else
set Fj=Fj-1
set asc=hj[Fj]
set jj[asc]=970
endif
set MM=MM-1
return asc
endfunction
function osc takes string Ssc returns integer
local integer csc
set w3[MM]=Ssc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set csc=sg
set tg[csc]=745
else
call Mau("Out of memory: Could not create EventListener_add_ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 114")
set csc=0
endif
else
set rg=rg-1
set csc=ug[rg]
set tg[csc]=745
endif
set MM=MM-1
return csc
endfunction
function bBu takes integer sBu,string tBu,string iBu,string SBu,string cBu returns nothing
local integer oBu
local integer OBu
local integer lBu
set w3[MM]=cBu
set MM=MM+1
set oBu=l5i(sBu,"when calling new_SharedPointer in ScmdBuiltinsRegistrar, line 9")
set OBu=0
set lBu=bj_MAX_PLAYERS-1
loop
exitwhen OBu>lBu
call E2u(OBu,tBu,iBu,SBu,X8o(oBu,"when calling clone in ScmdBuiltinsRegistrar, line 11"),"when calling assign in ScmdBuiltinsRegistrar, line 11")
set OBu=OBu+1
endloop
call KGo(10,oBu,"when calling dispatch_SharedPointer_destroySharedPointer in ScmdBuiltinsRegistrar, line 12")
set MM=MM-1
endfunction
function qBu takes integer yBu,string pBu,string eBu returns nothing
set w3[MM]=eBu
set MM=MM+1
call bBu(yBu,pBu,null,null,"when calling registerBuiltin in ScmdBuiltinsRegistrar, line 15")
set MM=MM-1
endfunction
function obr takes string Ilr returns boolean
local integer Plr
local integer Alr
local integer Dlr
local integer Hlr
local integer Jlr
local integer Klr
local integer Llr
local integer Xlr
local integer Clr
local integer Vlr
local integer Blr
local integer Nlr
local integer Mlr
local integer wbr
local integer ubr
local playerunitevent rbr
local playerunitevent sbr
local playerunitevent tbr
local playerunitevent ibr
local playerunitevent Sbr
local playerunitevent cbr
set w3[MM]=Ilr
set MM=MM+1
set Ud=YHs("when calling new_IterableMap in ScmdUnitParamLinkingBuiltins, line 62")
call mmu(Raw)
set Plr=CQi("when calling new_DisjointGroups in ScmdUnitParamLinkingBuiltins, line 69")
call OUc(Ud,1,Plr,"when calling put in ScmdUnitParamLinkingBuiltins, line 70")
set rbr=EVENT_PLAYER_UNIT_DAMAGED
set Alr=Vrc("when calling alloc_EventListener_add_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 71")
call NTs(Alr)
set dL[Alr]=Plr
call bSu(rbr,Alr,"when calling add in ScmdUnitParamLinkingBuiltins, line 71")
set Dlr=CQi("when calling new_DisjointGroups in ScmdUnitParamLinkingBuiltins, line 88")
call OUc(Ud,0,Dlr,"when calling put in ScmdUnitParamLinkingBuiltins, line 89")
set sbr=EVENT_PLAYER_UNIT_DAMAGED
set Hlr=Mrc("when calling alloc_EventListener_add_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 90")
call NTs(Hlr)
set fL[Hlr]=Dlr
call bSu(sbr,Hlr,"when calling add in ScmdUnitParamLinkingBuiltins, line 90")
set Jlr=BRS(false,"when calling new_Box⟪boolean⟫ in ScmdUnitParamLinkingBuiltins, line 99")
set Klr=CQi("when calling new_DisjointGroups in ScmdUnitParamLinkingBuiltins, line 101")
call OUc(Ud,3,Klr,"when calling put in ScmdUnitParamLinkingBuiltins, line 102")
set tbr=EVENT_PLAYER_UNIT_DEATH
set Llr=isc("when calling alloc_EventListener_add_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 103")
call NTs(Llr)
set YL[Llr]=Jlr
set GL[Llr]=Klr
call bSu(tbr,Llr,"when calling add in ScmdUnitParamLinkingBuiltins, line 103")
set Xlr=CQi("when calling new_DisjointGroups in ScmdUnitParamLinkingBuiltins, line 112")
call OUc(Ud,4,Xlr,"when calling put in ScmdUnitParamLinkingBuiltins, line 113")
set ibr=EVENT_PLAYER_UNIT_ISSUED_ORDER
set Clr=osc("when calling alloc_EventListener_add_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 114")
call NTs(Clr)
set gL[Clr]=Jlr
set hL[Clr]=Xlr
call bSu(ibr,Clr,"when calling add in ScmdUnitParamLinkingBuiltins, line 114")
set Sbr=EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER
set Vlr=bsc("when calling alloc_EventListener_add_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 123")
call NTs(Vlr)
set FL[Vlr]=Jlr
set kL[Vlr]=Xlr
call bSu(Sbr,Vlr,"when calling add in ScmdUnitParamLinkingBuiltins, line 123")
set cbr=EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER
set Blr=esc("when calling alloc_EventListener_add_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 135")
call NTs(Blr)
set jL[Blr]=Jlr
set xL[Blr]=Xlr
call bSu(cbr,Blr,"when calling add in ScmdUnitParamLinkingBuiltins, line 135")
set Nlr=nsc("when calling alloc_IBuiltin_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 178")
set Mlr=eDt(Nlr,"when calling new_BuiltinData in ScmdUnitParamLinkingBuiltins, line 178")
call Fao(Mlr,o2u(),"when calling setArgumentsTypes in ScmdUnitParamLinkingBuiltins, line 187")
call qBu(WHt(Mlr,"when calling new_BuiltinFunction in ScmdUnitParamLinkingBuiltins, line 178"),"link","when calling registerBuiltin in ScmdUnitParamLinkingBuiltins, line 178")
set wbr=Gsc("when calling alloc_IBuiltin_setArgumentsTypes_registerBuiltin_ScmdUnitParamLinkingBuiltins in ScmdUnitParamLinkingBuiltins, line 188")
set ubr=eDt(wbr,"when calling new_BuiltinData in ScmdUnitParamLinkingBuiltins, line 188")
call Fao(ubr,o2u(),"when calling setArgumentsTypes in ScmdUnitParamLinkingBuiltins, line 195")
call qBu(WHt(ubr,"when calling new_BuiltinFunction in ScmdUnitParamLinkingBuiltins, line 188"),"unlink","when calling registerBuiltin in ScmdUnitParamLinkingBuiltins, line 188")
set MM=MM-1
set rbr=null
set sbr=null
set tbr=null
set ibr=null
set Sbr=null
set cbr=null
return true
endfunction
function mRo takes nothing returns boolean
set MM=0
return obr("ScmdUnitParamLinkingBuiltins, line 1")
endfunction
function IOr takes string ZOr returns boolean
local boolean UOr
set w3[MM]=ZOr
set MM=MM+1
set UOr=not d7u(S7s(GetFilterUnit()),"when calling isUnitTypeProtected in ScmdUnitBuiltins, line 207")
set MM=MM-1
return UOr
endfunction
function mTo takes nothing returns boolean
set MM=0
return IOr("ScmdUnitBuiltins, line 207")
endfunction
function mkw takes nothing returns nothing
set Yu=false
set Gu=300.00
set gu=1000.00
set hu=600.00
set Fu=10.00
set ku=20
set ju=14
set xu=20.00
set vu=16.00
set mu=60.00
set Qu=600.00
set Wu=600.00
set Eu=400.00
set Zu=10.00
set Uu=50.00
set Iu=200.00
set Pu=600.00
call InitHashtableBJ()
set Au=GetLastCreatedHashtableBJ()
endfunction
function n2w takes nothing returns nothing
local unit a2w=CreateUnitAtLoc(Player(PLAYER_NEUTRAL_PASSIVE),1747995215,GetUnitLoc(GetSpellAbilityUnit()),GetUnitFacing(GetSpellAbilityUnit()))
call UnitAddAbility(a2w,1093679156)
call SetUnitAbilityLevel(a2w,1093679156,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093678664))
call IssuePointOrderLoc(a2w,"blizzard",GetSpellTargetLoc())
call TriggerSleepAction(12.00)
call RemoveUnit(a2w)
set a2w=null
set a2w=null
endfunction
function n3w takes nothing returns boolean
if GetSpellAbilityId()==1093683799 then
return true
else
return false
endif
endfunction
function n5w takes nothing returns nothing
local unit a5w=GetSpellAbilityUnit()
call SetUnitAnimation(a5w,"stand")
call UnitRemoveAbility(a5w,1095917932)
call PolledWait(2.80)
call SetUnitAnimation(a5w,"stand")
call PolledWait(0.10)
call SetUnitAnimation(a5w,"stand")
call PolledWait(0.10)
call SetUnitAnimation(a5w,"stand")
call PolledWait(3.01)
call SetUnitAnimation(a5w,"stand")
set a5w=null
endfunction
function n6w takes nothing returns boolean
return BlzIsUnitInvulnerable(GetFilterUnit())==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_UNDEAD)==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_MECHANICAL)==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_MAGIC_IMMUNE)==false and IsUnitType(GetFilterUnit(),UNIT_TYPE_STRUCTURE)==false
endfunction
function n9u takes nothing returns nothing
local timer e9u=null
local unit q9u=GetSpellAbilityUnit()
local location a9u=GetSpellTargetLoc()
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Other\\Meteor\\Meteor.mdx",a9u))
set e9u=CreateTimer()
call SaveUnitHandle(nr,GetHandleId(e9u),StringHash("u"),q9u)
call SaveLocationHandle(nr,GetHandleId(e9u),StringHash("l"),a9u)
call TimerStart(e9u,0.55,false,pyw)
set e9u=CreateTimer()
call SaveUnitHandle(nr,GetHandleId(e9u),StringHash("u"),q9u)
call SaveLocationHandle(nr,GetHandleId(e9u),StringHash("l"),a9u)
call TimerStart(e9u,0.875,false,eyw)
set a9u=null
set q9u=null
set e9u=null
set e9u=null
set q9u=null
set a9u=null
endfunction
function nBw takes nothing returns nothing
local unit eBw=GetSpellAbilityUnit()
local location qBw=GetSpellTargetLoc()
local effect aBw=AddSpecialEffectLoc("Abilities\\Spells\\Undead\\Darksummoning\\DarkSummonTarget.mdl",GetUnitLoc(eBw))
call PauseUnit(eBw,true)
call SetUnitInvulnerable(eBw,true)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,2.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,5.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,7.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,10.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,12.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,15.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,17.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,20.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,22.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,25.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,27.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,30.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,32.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,35.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,37.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,40.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,42.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,45.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,47.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,50.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,52.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,55.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,57.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,60.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,62.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,65.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,67.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,70.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,72.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,75.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,77.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,80.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,82.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,85.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,87.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,90.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,92.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,95.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,97.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,100.00)
call TriggerSleepAction(0.01)
call SetUnitPositionLoc(eBw,qBw)
set qBw=null
call DestroyEffectBJ(aBw)
call AddSpecialEffectLocBJ(GetUnitLoc(eBw),"Abilities\\Spells\\Undead\\Darksummoning\\DarkSummonTarget.mdl")
set aBw=GetLastCreatedEffectBJ()
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,97.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,95.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,92.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,90.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,87.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,85.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,82.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,80.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,77.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,75.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,72.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,70.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,67.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,65.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,62.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,60.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,57.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,55.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,52.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,50.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,47.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,45.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,42.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,40.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,37.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,35.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,32.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,30.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,27.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,25.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,22.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,20.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,17.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,15.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,12.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,10.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,7.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,5.00)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,2.50)
call TriggerSleepAction(0.01)
call SetUnitVertexColorBJ(eBw,100.,100.,100.,0.00)
call TriggerSleepAction(0.01)
call SetUnitAnimation(eBw,"stand")
call DestroyEffect(aBw)
call PauseUnit(eBw,false)
call SetUnitInvulnerable(eBw,false)
set eBw=null
set aBw=null
set eBw=null
set qBw=null
set aBw=null
endfunction
function nCw takes nothing returns nothing
local unit aCw
set Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]=GetSpellAbilityUnit()
call UnitAddAbilityBJ(1093678922,Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])
call UnitAddAbilityBJ(1093678924,Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])
call UnitAddAbilityBJ(1093678923,Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])
set aCw=Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]
call TriggerSleepAction(20.00)
set Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))]=aCw
call UnitRemoveAbilityBJ(1093678922,Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])
call UnitRemoveAbilityBJ(1093678924,Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])
call UnitRemoveAbilityBJ(1093678923,Ru[GetConvertedPlayerId(GetOwningPlayer(GetSpellAbilityUnit()))])
set aCw=null
set aCw=null
endfunction
function nJw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call SetUnitPositionLoc(GetSoldUnit(),G)
call RemoveLocation(G)
endfunction
function nKw takes nothing returns nothing
set G=GetSpellTargetLoc()
call EnumDestructablesInCircleBJ(256.,G,Aiw)
endfunction
function nMw takes nothing returns nothing
call ForGroup(Xs,Uow)
call ForGroup(Yt,Iow)
endfunction
function Hic takes string Aic returns integer
local integer Dic
set w3[MM]=Aic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Dic=kj
set jj[Dic]=962
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 72")
set Dic=0
endif
else
set Fj=Fj-1
set Dic=hj[Fj]
set jj[Dic]=962
endif
set MM=MM-1
return Dic
endfunction
function Lic takes string Jic returns integer
local integer Kic
set w3[MM]=Jic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Kic=kj
set jj[Kic]=851
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 77")
set Kic=0
endif
else
set Fj=Fj-1
set Kic=hj[Fj]
set jj[Kic]=851
endif
set MM=MM-1
return Kic
endfunction
function Mdr takes nothing returns integer
return Qf
endfunction
function Mic takes string Bic returns integer
local integer Nic
set w3[MM]=Bic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Nic=kj
set jj[Nic]=1206
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 84")
set Nic=0
endif
else
set Fj=Fj-1
set Nic=hj[Fj]
set jj[Nic]=1206
endif
set MM=MM-1
return Nic
endfunction
function Eju takes integer mju,string Qju,real Wju returns nothing
endfunction
function pOS takes integer bOS,real yOS returns nothing
call Eju(LB[bOS],"umvh",yOS)
endfunction
function Cbo takes integer Kbo,real Lbo,string Xbo returns nothing
set w3[MM]=Xbo
set MM=MM+1
if Sv[Kbo]==0 then
if Kbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setMovementHeight","when calling error in UnitObjEditing, line 501")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setMovementHeight on invalid object.","when calling error in UnitObjEditing, line 501")
endif
endif
call pOS(Kbo,Lbo)
set MM=MM-1
endfunction
function occ takes string Scc returns integer
local integer ccc
set w3[MM]=Scc
set MM=MM+1
if ZF==0 then
if UF<32768 then
set UF=UF+1
set ccc=UF
set IF[ccc]=1669
else
call Mau("Out of memory: Could not create ToStringClosure_joinBy_setAbilityList_Palette_SotfrpGuiHelperUnitPreset_SotfrpGuiPresets.","when calling error in SotfrpGuiPresets, line 74")
set ccc=0
endif
else
set ZF=ZF-1
set ccc=EF[ZF]
set IF[ccc]=1669
endif
set MM=MM-1
return ccc
endfunction
function Fju takes integer Gju,string gju,string hju returns nothing
endfunction
function KoS takes integer HoS,string JoS returns nothing
call Fju(LB[HoS],"uabi",JoS)
endfunction
function dbo takes integer qbo,string abo,string nbo returns nothing
set w3[MM]=nbo
set MM=MM+1
if Sv[qbo]==0 then
if qbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setNormalAbilities","when calling error in UnitObjEditing, line 438")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setNormalAbilities on invalid object.","when calling error in UnitObjEditing, line 438")
endif
endif
call KoS(qbo,abo)
set MM=MM-1
endfunction
function EDi takes integer mDi,string QDi,string WDi returns nothing
set w3[MM]=WDi
set MM=MM+1
call dbo(mDi,QDi,"when calling setNormalAbilities in SotfrpGuiPresets, line 173")
set MM=MM-1
endfunction
function qwo takes integer ywo,string pwo,string ewo returns nothing
set w3[MM]=ewo
set MM=MM+1
if Sv[ywo]==0 then
if ywo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiHelperUnitPreset.setAbilityList","when calling error in SotfrpGuiPresets, line 172")
else
call Mau("Called SotfrpGuiHelperUnitPreset.setAbilityList on invalid object.","when calling error in SotfrpGuiPresets, line 172")
endif
endif
call EDi(ywo,pwo,"when calling setAbilityList in SotfrpGuiPresets, line 172")
set MM=MM-1
endfunction
function HDi takes integer ZDi,integer UDi,string IDi returns nothing
local integer PDi
local integer ADi
local integer DDi
set w3[MM]=IDi
set MM=MM+1
call Cqo(NL[ZDi],UDi,"when calling add in SotfrpGuiPresets, line 73")
set DDi=ZDi
set ADi=NL[ZDi]
set PDi=occ("when calling alloc_ToStringClosure_joinBy_setAbilityList_Palette_SotfrpGuiHelperUnitPreset_SotfrpGuiPresets in SotfrpGuiPresets, line 74")
call qwo(DDi,Oku(ADi,PDi,",","when calling joinBy in SotfrpGuiPresets, line 74"),"when calling setAbilityList in SotfrpGuiPresets, line 74")
set MM=MM-1
endfunction
function fwo takes integer awo,integer nwo,string dwo returns nothing
set w3[MM]=dwo
set MM=MM+1
if Sv[awo]==0 then
if awo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiHelperUnitPreset.addAbility","when calling error in SotfrpGuiPresets, line 72")
else
call Mau("Called SotfrpGuiHelperUnitPreset.addAbility on invalid object.","when calling error in SotfrpGuiPresets, line 72")
endif
endif
call HDi(awo,nwo,"when calling addAbility in SotfrpGuiPresets, line 72")
set MM=MM-1
endfunction
function Nrs takes integer Brs returns integer
return cQ[Brs]
endfunction
function gec takes integer Tec,string Yec returns integer
local integer Gec
set w3[MM]=Yec
set MM=MM+1
if SY[Tec]==0 then
if Tec==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.getNewId","when calling error in AbilityObjEditing, line 48")
else
call Mau("Called AbilityDefinition.getNewId on invalid object.","when calling error in AbilityObjEditing, line 48")
endif
endif
set Gec=Nrs(Tec)
set MM=MM-1
return Gec
endfunction
function XDi takes integer JDi,integer KDi,string LDi returns nothing
set w3[MM]=LDi
set MM=MM+1
call fwo(JDi,gec(KDi,"when calling getNewId in SotfrpGuiPresets, line 77"),"when calling addAbility in SotfrpGuiPresets, line 77")
set MM=MM-1
endfunction
function Gwo takes integer Rwo,integer Two,string Ywo returns nothing
set w3[MM]=Ywo
set MM=MM+1
if Sv[Rwo]==0 then
if Rwo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiHelperUnitPreset.addAbility","when calling error in SotfrpGuiPresets, line 76")
else
call Mau("Called SotfrpGuiHelperUnitPreset.addAbility on invalid object.","when calling error in SotfrpGuiPresets, line 76")
endif
endif
call XDi(Rwo,Two,"when calling addAbility in SotfrpGuiPresets, line 76")
set MM=MM-1
endfunction
function FHi takes integer GHi,integer gHi,string hHi returns nothing
set w3[MM]=hHi
set MM=MM+1
call Gwo(GHi,gHi,"when calling addAbility in SotfrpGuiPresets, line 133")
set MM=MM-1
endfunction
function Cwo takes integer Kwo,integer Lwo,string Xwo returns nothing
set w3[MM]=Xwo
set MM=MM+1
if Sv[Kwo]==0 then
if Kwo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiHelperUnitPreset.addHiddenAbility","when calling error in SotfrpGuiPresets, line 132")
else
call Mau("Called SotfrpGuiHelperUnitPreset.addHiddenAbility on invalid object.","when calling error in SotfrpGuiPresets, line 132")
endif
endif
call FHi(Kwo,Lwo,"when calling addHiddenAbility in SotfrpGuiPresets, line 132")
set MM=MM-1
endfunction
function Ris takes integer nis,integer dis,string fis returns nothing
set w3[MM]=fis
set MM=MM+1
call hxu(sQ[nis],"Car1",tQ[nis],1,dis,"when calling setLevelsDataInt in AbilityObjEditing, line 3400")
call Eec(nis,"CargoCapacity",dis,"when calling addTooltipProperty in AbilityObjEditing, line 3401")
set MM=MM-1
endfunction
function Eac takes integer mac,integer Qac,string Wac returns nothing
set w3[MM]=Wac
set MM=MM+1
if SY[mac]==0 then
if mac==0 then
call Mau("Nullpointer exception when calling AbilityDefinitionCargoHoldTransport.presetCargoCapacity","when calling error in AbilityObjEditing, line 3399")
else
call Mau("Called AbilityDefinitionCargoHoldTransport.presetCargoCapacity on invalid object.","when calling error in AbilityObjEditing, line 3399")
endif
endif
call Ris(mac,Qac,"when calling presetCargoCapacity in AbilityObjEditing, line 3399")
set MM=MM-1
endfunction
function wis takes integer Bts,integer Nts,string Mts returns nothing
set w3[MM]=Mts
set MM=MM+1
call Exu(sQ[Bts],"ahdu",tQ[Bts],0,Nts,"when calling setLevelsDataUnreal in AbilityObjEditing, line 354")
call Aec(Bts,"DurationHero",Nts,"when calling addTooltipProperty in AbilityObjEditing, line 355")
set MM=MM-1
endfunction
function Fac takes integer Gac,integer gac,string hac returns nothing
set w3[MM]=hac
set MM=MM+1
if SY[Gac]==0 then
if Gac==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.presetDurationHero","when calling error in AbilityObjEditing, line 353")
else
call Mau("Called AbilityDefinition.presetDurationHero on invalid object.","when calling error in AbilityObjEditing, line 353")
endif
endif
call wis(Gac,gac,"when calling presetDurationHero in AbilityObjEditing, line 353")
set MM=MM-1
endfunction
function Fic takes string gic returns integer
local integer hic
set w3[MM]=gic
set MM=MM+1
if vG==0 then
if mG<32768 then
set mG=mG+1
set hic=mG
set QG[hic]=1513
else
call Mau("Out of memory: Could not create RealLevelClosure_presetCastRange_addButton_addButton_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 32")
set hic=0
endif
else
set vG=vG-1
set hic=xG[vG]
set QG[hic]=1513
endif
set MM=MM-1
return hic
endfunction
function LTS takes string JTS returns integer
local integer KTS
set w3[MM]=JTS
set MM=MM+1
if tY==0 then
if iY<32768 then
set iY=iY+1
set KTS=iY
set SY[KTS]=133
else
call Mau("Out of memory: Could not create AbilityDefinitionCargoHoldTransport.","when calling error in AbilityObjEditing, line 3392")
set KTS=0
endif
else
set tY=tY-1
set KTS=sY[tY]
set SY[KTS]=133
endif
set MM=MM-1
return KTS
endfunction
function Yis takes integer Tis returns nothing
endfunction
function xis takes integer kis,integer jis returns nothing
call ais(kis,jis,1399023667)
call Yis(kis)
endfunction
function Fis takes integer Gis,string gis returns integer
local integer his
set w3[MM]=gis
set MM=MM+1
set his=LTS("when calling alloc_AbilityDefinitionCargoHoldTransport in AbilityObjEditing, line 3393")
call xis(his,Gis)
set MM=MM-1
return his
endfunction
function Gic takes string Tic returns integer
local integer Yic
set w3[MM]=Tic
set MM=MM+1
if vG==0 then
if mG<32768 then
set mG=mG+1
set Yic=mG
set QG[Yic]=1515
else
call Mau("Out of memory: Could not create RealLevelClosure_presetCastRange_addHiddenAbility_addButton_addButton_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 31")
set Yic=0
endif
else
set vG=vG-1
set Yic=xG[vG]
set QG[Yic]=1515
endif
set MM=MM-1
return Yic
endfunction
function YoS takes integer RoS,real ToS returns nothing
call Eju(LB[RoS],"umvr",ToS)
endfunction
function Hlo takes integer Plo,real Alo,string Dlo returns nothing
set w3[MM]=Dlo
set MM=MM+1
if Sv[Plo]==0 then
if Plo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setTurnRate","when calling error in UnitObjEditing, line 280")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setTurnRate on invalid object.","when calling error in UnitObjEditing, line 280")
endif
endif
call YoS(Plo,Alo)
set MM=MM-1
endfunction
function iJr takes integer rJr returns string
local string sJr=""
local integer tJr=rJr
if tJr==0 then
elseif tJr==1 then
set sJr="foot"
elseif tJr==2 then
set sJr="horse"
elseif tJr==3 then
set sJr="fly"
elseif tJr==4 then
set sJr="hover"
elseif tJr==5 then
set sJr="float"
else
set sJr="amph"
endif
return sJr
endfunction
function foS takes integer noS,integer doS returns nothing
call Fju(LB[noS],"umvt",iJr(doS))
endfunction
function Ilo takes integer Elo,integer Zlo,string Ulo returns nothing
set w3[MM]=Ulo
set MM=MM+1
if Sv[Elo]==0 then
if Elo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setMovementType","when calling error in UnitObjEditing, line 277")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setMovementType on invalid object.","when calling error in UnitObjEditing, line 277")
endif
endif
call foS(Elo,Zlo)
set MM=MM-1
endfunction
function Yts takes integer fts,integer Rts,string Tts returns nothing
set w3[MM]=Tts
set MM=MM+1
call axu(sQ[fts],"aub1",tQ[fts],0,Rts,"when calling setLevelsDataString in AbilityObjEditing, line 246")
call xec(fts,"TooltipNormalExtended",Rts,"when calling addTooltipProperty in AbilityObjEditing, line 247")
set MM=MM-1
endfunction
function Nqc takes integer Cqc,integer Vqc,string Bqc returns nothing
set w3[MM]=Bqc
set MM=MM+1
if SY[Cqc]==0 then
if Cqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.presetTooltipNormalExtended","when calling error in AbilityObjEditing, line 245")
else
call Mau("Called AbilityDefinition.presetTooltipNormalExtended on invalid object.","when calling error in AbilityObjEditing, line 245")
endif
endif
call Yts(Cqc,Vqc,"when calling presetTooltipNormalExtended in AbilityObjEditing, line 245")
set MM=MM-1
endfunction
function dts takes integer qts,integer ats,string nts returns nothing
set w3[MM]=nts
set MM=MM+1
call axu(sQ[qts],"atp1",tQ[qts],0,ats,"when calling setLevelsDataString in AbilityObjEditing, line 232")
call xec(qts,"TooltipNormal",ats,"when calling addTooltipProperty in AbilityObjEditing, line 233")
set MM=MM-1
endfunction
function Xqc takes integer Jqc,integer Kqc,string Lqc returns nothing
set w3[MM]=Lqc
set MM=MM+1
if SY[Jqc]==0 then
if Jqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.presetTooltipNormal","when calling error in AbilityObjEditing, line 231")
else
call Mau("Called AbilityDefinition.presetTooltipNormal on invalid object.","when calling error in AbilityObjEditing, line 231")
endif
endif
call dts(Jqc,Kqc,"when calling presetTooltipNormal in AbilityObjEditing, line 231")
set MM=MM-1
endfunction
function bcc takes string Occ returns integer
local integer lcc
set w3[MM]=Occ
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set lcc=pY
set eY[lcc]=1632
else
call Mau("Out of memory: Could not create StringLevelClosure_presetTooltipNormal_Palette_SotfrpGuiHelperUnitPreset_SotfrpGuiPresets.","when calling error in SotfrpGuiPresets, line 86")
set lcc=0
endif
else
set yY=yY-1
set lcc=bY[yY]
set eY[lcc]=1632
endif
set MM=MM-1
return lcc
endfunction
function jts takes integer Fts,string kts returns nothing
call Cju(sQ[Fts],"ahky",0,0,kts)
endfunction
function Sac takes integer sac,string tac,string iac returns nothing
set w3[MM]=iac
set MM=MM+1
if SY[sac]==0 then
if sac==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setHotkeyNormal","when calling error in AbilityObjEditing, line 274")
else
call Mau("Called AbilityDefinition.setHotkeyNormal on invalid object.","when calling error in AbilityObjEditing, line 274")
endif
endif
call jts(sac,tac)
set MM=MM-1
endfunction
function mts takes integer xts,string vts returns nothing
call Cju(sQ[xts],"auhk",0,0,vts)
endfunction
function lac takes integer cac,string oac,string Oac returns nothing
set w3[MM]=Oac
set MM=MM+1
if SY[cac]==0 then
if cac==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setHotkeyTurnOff","when calling error in AbilityObjEditing, line 277")
else
call Mau("Called AbilityDefinition.setHotkeyTurnOff on invalid object.","when calling error in AbilityObjEditing, line 277")
endif
endif
call mts(cac,oac)
set MM=MM-1
endfunction
function oYS takes string SYS returns integer
local integer cYS
set w3[MM]=SYS
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set cYS=pY
set eY[cYS]=1590
else
call Mau("Out of memory: Could not create StringLevelClosure_AbilityDefinition_AbilityObjEditing.","when calling error in AbilityObjEditing, line 284")
set cYS=0
endif
else
set yY=yY-1
set cYS=bY[yY]
set eY[cYS]=1590
endif
set MM=MM-1
return cYS
endfunction
function hts takes integer Gts,string gts returns nothing
call Cju(sQ[Gts],"arhk",0,0,gts)
endfunction
function rac takes integer Mqc,string wac,string uac returns nothing
set w3[MM]=uac
set MM=MM+1
if SY[Mqc]==0 then
if Mqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setHotkeyLearn","when calling error in AbilityObjEditing, line 271")
else
call Mau("Called AbilityDefinition.setHotkeyLearn on invalid object.","when calling error in AbilityObjEditing, line 271")
endif
endif
call hts(Mqc,wac)
set MM=MM-1
endfunction
function Its takes integer Qts,string Wts,string Ets returns nothing
local integer Zts
local integer Uts
set w3[MM]=Ets
set MM=MM+1
call Sac(Qts,Wts,"when calling setHotkeyNormal in AbilityObjEditing, line 281")
call rac(Qts,Wts,"when calling setHotkeyLearn in AbilityObjEditing, line 282")
call lac(Qts,Wts,"when calling setHotkeyTurnOff in AbilityObjEditing, line 283")
set Uts=oYS("when calling alloc_StringLevelClosure_AbilityDefinition_AbilityObjEditing in AbilityObjEditing, line 284")
set eQ[Uts]=Wts
set Zts=Uts
call xec(Qts,"Hotkey",Zts,"when calling addTooltipProperty in AbilityObjEditing, line 285")
set MM=MM-1
endfunction
function Qbc takes string vbc returns integer
local integer mbc
set w3[MM]=vbc
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set mbc=pY
set eY[mbc]=1634
else
call Mau("Out of memory: Could not create StringLevelClosure_presetTooltipNormal_TriggerAbilityPreset_TriggerAbilityPreset.","when calling error in TriggerAbilityPreset, line 21")
set mbc=0
endif
else
set yY=yY-1
set mbc=bY[yY]
set eY[mbc]=1634
endif
set MM=MM-1
return mbc
endfunction
function xbc takes string kbc returns integer
local integer jbc
set w3[MM]=kbc
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set jbc=pY
set eY[jbc]=1633
else
call Mau("Out of memory: Could not create StringLevelClosure_presetTooltipNormal_TriggerAbilityPreset_TriggerAbilityPreset.","when calling error in TriggerAbilityPreset, line 21")
set jbc=0
endif
else
set yY=yY-1
set jbc=bY[yY]
set eY[jbc]=1633
endif
set MM=MM-1
return jbc
endfunction
function a_S takes integer l_S,string b_S returns nothing
local integer y_S
local integer p_S
local integer e_S
local integer q_S
set w3[MM]=b_S
set MM=MM+1
set q_S=l_S
if tQ[l_S]>1 then
set y_S=xbc("when calling alloc_StringLevelClosure_presetTooltipNormal_TriggerAbilityPreset_TriggerAbilityPreset in TriggerAbilityPreset, line 21")
set lV[y_S]=l_S
set e_S=y_S
else
set p_S=Qbc("when calling alloc_StringLevelClosure_presetTooltipNormal_TriggerAbilityPreset_TriggerAbilityPreset in TriggerAbilityPreset, line 21")
set bV[p_S]=l_S
set e_S=p_S
endif
call Xqc(q_S,e_S,"when calling presetTooltipNormal in TriggerAbilityPreset, line 21")
set OV[l_S]=true
set MM=MM-1
endfunction
function voo takes integer joo,string xoo returns nothing
set w3[MM]=xoo
set MM=MM+1
if SY[joo]==0 then
if joo==0 then
call Mau("Nullpointer exception when calling TriggerAbilityPreset.autoPresetTooltipNormal","when calling error in TriggerAbilityPreset, line 20")
else
call Mau("Called TriggerAbilityPreset.autoPresetTooltipNormal on invalid object.","when calling error in TriggerAbilityPreset, line 20")
endif
endif
call a_S(joo,"when calling autoPresetTooltipNormal in TriggerAbilityPreset, line 20")
set MM=MM-1
endfunction
function O_S takes integer S_S,string c_S,string o_S returns nothing
set w3[MM]=o_S
set MM=MM+1
call Its(S_S,c_S,"when calling presetHotkey in TriggerAbilityPreset, line 25")
set cV[S_S]=c_S
if OV[S_S]then
call voo(S_S,"when calling autoPresetTooltipNormal in TriggerAbilityPreset, line 28")
endif
set MM=MM-1
endfunction
function eac takes integer bac,string yac,string pac returns nothing
set w3[MM]=pac
set MM=MM+1
if SY[bac]==0 then
if bac==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.presetHotkey","when calling error in AbilityObjEditing, line 280")
else
call Mau("Called AbilityDefinition.presetHotkey on invalid object.","when calling error in AbilityObjEditing, line 280")
endif
endif
if SY[bac]<=297 then
if SY[bac]<=296 then
call Its(bac,yac,"when calling presetHotkey in AbilityObjEditing, line 280")
else
call O_S(bac,yac,"when calling presetHotkey in AbilityObjEditing, line 280")
endif
else
call Its(bac,yac,"when calling presetHotkey in AbilityObjEditing, line 280")
endif
set MM=MM-1
endfunction
function ecc takes string ycc returns integer
local integer pcc
set w3[MM]=ycc
set MM=MM+1
if yY==0 then
if pY<32768 then
set pY=pY+1
set pcc=pY
set eY[pcc]=1624
else
call Mau("Out of memory: Could not create StringLevelClosure_presetTooltipNormalExtended_Palette_SotfrpGuiHelperUnitPreset_SotfrpGuiPresets.","when calling error in SotfrpGuiPresets, line 88")
set pcc=0
endif
else
set yY=yY-1
set pcc=bY[yY]
set eY[pcc]=1624
endif
set MM=MM-1
return pcc
endfunction
function Bss takes integer Css,string Vss returns nothing
call Cju(sQ[Css],"arar",0,0,Vss)
endfunction
function Tqc takes integer dqc,string fqc,string Rqc returns nothing
set w3[MM]=Rqc
set MM=MM+1
if SY[dqc]==0 then
if dqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setIconResearch","when calling error in AbilityObjEditing, line 149")
else
call Mau("Called AbilityDefinition.setIconResearch on invalid object.","when calling error in AbilityObjEditing, line 149")
endif
endif
call Bss(dqc,fqc)
set MM=MM-1
endfunction
function Xss takes integer Kss,string Lss returns nothing
call Cju(sQ[Kss],"aart",0,0,Lss)
endfunction
function nqc takes integer eqc,string qqc,string aqc returns nothing
set w3[MM]=aqc
set MM=MM+1
if SY[eqc]==0 then
if eqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setIconNormal","when calling error in AbilityObjEditing, line 143")
else
call Mau("Called AbilityDefinition.setIconNormal on invalid object.","when calling error in AbilityObjEditing, line 143")
endif
endif
call Xss(eqc,qqc)
set MM=MM-1
endfunction
function rts takes integer Nss,string Mss,string wts returns nothing
local string uts
set w3[MM]=wts
set MM=MM+1
set uts=Mss
if vhr(Mss)<20 or(not cFr(Mss,"ReplaceableTextures"))then
set uts="ReplaceableTextures\\CommandButtons\\"+uts
endif
if not sFr(Mss,".blp")then
set uts=uts+".blp"
endif
call Tqc(Nss,uts,"when calling setIconResearch in AbilityObjEditing, line 159")
call nqc(Nss,uts,"when calling setIconNormal in AbilityObjEditing, line 160")
set MM=MM-1
endfunction
function hqc takes integer Yqc,string Gqc,string gqc returns nothing
set w3[MM]=gqc
set MM=MM+1
if SY[Yqc]==0 then
if Yqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.presetIcon","when calling error in AbilityObjEditing, line 152")
else
call Mau("Called AbilityDefinition.presetIcon on invalid object.","when calling error in AbilityObjEditing, line 152")
endif
endif
call rts(Yqc,Gqc,"when calling presetIcon in AbilityObjEditing, line 152")
set MM=MM-1
endfunction
function lju takes string Oju returns nothing
endfunction
function oGo takes integer tGo,integer iGo,boolean SGo,string cGo returns nothing
if iGo<0 or iGo>=12 then
call Mau("Index out of Bounds",cGo)
elseif iGo<=5 then
if iGo<=2 then
if iGo<=1 then
if iGo<=0 then
set qww[tGo]=SGo
else
set aww[tGo]=SGo
endif
else
set nww[tGo]=SGo
endif
elseif iGo<=4 then
if iGo<=3 then
set dww[tGo]=SGo
else
set fww[tGo]=SGo
endif
else
set Rww[tGo]=SGo
endif
elseif iGo<=8 then
if iGo<=7 then
if iGo<=6 then
set Tww[tGo]=SGo
else
set Yww[tGo]=SGo
endif
else
set Gww[tGo]=SGo
endif
elseif iGo<=10 then
if iGo<=9 then
set gww[tGo]=SGo
else
set hww[tGo]=SGo
endif
else
set Fww[tGo]=SGo
endif
endfunction
function pGo takes integer OGo,integer lGo,string bGo returns boolean
local boolean yGo
if lGo<0 or lGo>=12 then
call Mau("Index out of Bounds",bGo)
elseif lGo<=5 then
if lGo<=2 then
if lGo<=1 then
if lGo<=0 then
set yGo=qww[OGo]
else
set yGo=aww[OGo]
endif
else
set yGo=nww[OGo]
endif
elseif lGo<=4 then
if lGo<=3 then
set yGo=dww[OGo]
else
set yGo=fww[OGo]
endif
else
set yGo=Rww[OGo]
endif
elseif lGo<=8 then
if lGo<=7 then
if lGo<=6 then
set yGo=Tww[OGo]
else
set yGo=Yww[OGo]
endif
else
set yGo=Gww[OGo]
endif
elseif lGo<=10 then
if lGo<=9 then
set yGo=gww[OGo]
else
set yGo=hww[OGo]
endif
else
set yGo=Fww[OGo]
endif
return yGo
endfunction
function Iss takes integer Zss,integer Uss returns nothing
call Dju(sQ[Zss],"abpy",0,0,Uss)
endfunction
function oqc takes integer iqc,integer Sqc,string cqc returns nothing
set w3[MM]=cqc
set MM=MM+1
if SY[iqc]==0 then
if iqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setButtonPositionNormalY","when calling error in AbilityObjEditing, line 116")
else
call Mau("Called AbilityDefinition.setButtonPositionNormalY on invalid object.","when calling error in AbilityObjEditing, line 116")
endif
endif
call Iss(iqc,Sqc)
set MM=MM-1
endfunction
function Ess takes integer Qss,integer Wss returns nothing
call Dju(sQ[Qss],"abpx",0,0,Wss)
endfunction
function tqc takes integer uqc,integer rqc,string sqc returns nothing
set w3[MM]=sqc
set MM=MM+1
if SY[uqc]==0 then
if uqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.setButtonPositionNormalX","when calling error in AbilityObjEditing, line 113")
else
call Mau("Called AbilityDefinition.setButtonPositionNormalX on invalid object.","when calling error in AbilityObjEditing, line 113")
endif
endif
call Ess(uqc,rqc)
set MM=MM-1
endfunction
function Jss takes integer Pss,integer Ass,integer Dss,string Hss returns nothing
set w3[MM]=Hss
set MM=MM+1
call tqc(Pss,Ass,"when calling setButtonPositionNormalX in AbilityObjEditing, line 132")
call oqc(Pss,Dss,"when calling setButtonPositionNormalY in AbilityObjEditing, line 133")
set MM=MM-1
endfunction
function pqc takes integer Oqc,integer lqc,integer bqc,string yqc returns nothing
set w3[MM]=yqc
set MM=MM+1
if SY[Oqc]==0 then
if Oqc==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.presetButtonPosNormal","when calling error in AbilityObjEditing, line 131")
else
call Mau("Called AbilityDefinition.presetButtonPosNormal on invalid object.","when calling error in AbilityObjEditing, line 131")
endif
endif
call Jss(Oqc,lqc,bqc,"when calling presetButtonPosNormal in AbilityObjEditing, line 131")
set MM=MM-1
endfunction
function pHi takes integer CDi,integer VDi,integer BDi,integer NDi,string MDi,string wHi,string uHi,string rHi returns integer
local integer sHi
local integer tHi
local integer iHi
local integer SHi
local integer cHi
local integer oHi
local integer OHi
local integer lHi
local integer bHi
local integer yHi
set w3[MM]=rHi
set MM=MM+1
set OHi=VDi
set lHi=BDi
set sHi=OHi
set tHi=lHi
if pGo(CDi,rYr(sHi,tHi),"when reading array SotfrpGuiHelperUnitPreset_Palette_isTaken in  in SotfrpGuiPresets, line 81")then
call lju("Button position ("+tgu(VDi)+", "+tgu(BDi)+") is taken")
endif
call oGo(CDi,rYr(sHi,tHi),true,"when writing array SotfrpGuiHelperUnitPreset_Palette_isTaken in SotfrpGuiPresets, line 83")
call eac(NDi,rR[rYr(sHi,tHi)],"when calling presetHotkey in SotfrpGuiPresets, line 84")
if MDi!=null then
set cHi=NDi
set iHi=bcc("when calling alloc_StringLevelClosure_presetTooltipNormal_Palette_SotfrpGuiHelperUnitPreset_SotfrpGuiPresets in SotfrpGuiPresets, line 86")
set ML[iHi]=MDi
set bHi=sHi
set yHi=tHi
set wX[iHi]=bHi
set uX[iHi]=yHi
call Xqc(cHi,iHi,"when calling presetTooltipNormal in SotfrpGuiPresets, line 86")
endif
if wHi!=null then
set oHi=NDi
set SHi=ecc("when calling alloc_StringLevelClosure_presetTooltipNormalExtended_Palette_SotfrpGuiHelperUnitPreset_SotfrpGuiPresets in SotfrpGuiPresets, line 88")
set rX[SHi]=wHi
call Nqc(oHi,SHi,"when calling presetTooltipNormalExtended in SotfrpGuiPresets, line 88")
endif
if uHi!=null then
call hqc(NDi,uHi,"when calling presetIcon in SotfrpGuiPresets, line 90")
endif
call pqc(NDi,sHi,tHi,"when calling presetButtonPosNormal in SotfrpGuiPresets, line 91")
call Gwo(CDi,NDi,"when calling addAbility in SotfrpGuiPresets, line 92")
set MM=MM-1
return NDi
endfunction
function Wwo takes integer gwo,integer hwo,integer Fwo,integer kwo,string jwo,string xwo,string vwo,string mwo returns integer
local integer Qwo
set w3[MM]=mwo
set MM=MM+1
if Sv[gwo]==0 then
if gwo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiHelperUnitPreset.addButton","when calling error in SotfrpGuiPresets, line 79")
else
call Mau("Called SotfrpGuiHelperUnitPreset.addButton on invalid object.","when calling error in SotfrpGuiPresets, line 79")
endif
endif
set Qwo=pHi(gwo,hwo,Fwo,kwo,jwo,xwo,vwo,"when calling addButton in SotfrpGuiPresets, line 79")
set MM=MM-1
return Qwo
endfunction
function YHi takes integer eHi,integer qHi,integer aHi,integer nHi,string dHi,string fHi,string RHi returns integer
local integer THi
set w3[MM]=RHi
set MM=MM+1
set THi=Wwo(eHi,qHi,aHi,nHi,dHi,fHi,null,"when calling addButton in SotfrpGuiPresets, line 100")
set MM=MM-1
return THi
endfunction
function Jwo takes integer Ewo,integer Zwo,integer Uwo,integer Iwo,string Pwo,string Awo,string Dwo returns integer
local integer Hwo
set w3[MM]=Dwo
set MM=MM+1
if Sv[Ewo]==0 then
if Ewo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiHelperUnitPreset.addButton","when calling error in SotfrpGuiPresets, line 99")
else
call Mau("Called SotfrpGuiHelperUnitPreset.addButton on invalid object.","when calling error in SotfrpGuiPresets, line 99")
endif
endif
set Hwo=YHi(Ewo,Zwo,Uwo,Iwo,Pwo,Awo,"when calling addButton in SotfrpGuiPresets, line 99")
set MM=MM-1
return Hwo
endfunction
function vHi takes integer kHi,integer jHi,string xHi returns nothing
set w3[MM]=xHi
set MM=MM+1
call fwo(kHi,jHi,"when calling addAbility in SotfrpGuiPresets, line 136")
set MM=MM-1
endfunction
function Mwo takes integer Vwo,integer Bwo,string Nwo returns nothing
set w3[MM]=Nwo
set MM=MM+1
if Sv[Vwo]==0 then
if Vwo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiHelperUnitPreset.addHiddenAbility","when calling error in SotfrpGuiPresets, line 135")
else
call Mau("Called SotfrpGuiHelperUnitPreset.addHiddenAbility on invalid object.","when calling error in SotfrpGuiPresets, line 135")
endif
endif
call vHi(Vwo,Bwo,"when calling addHiddenAbility in SotfrpGuiPresets, line 135")
set MM=MM-1
endfunction
function dju takes integer qju,string aju,integer nju returns nothing
endfunction
function joS takes integer FoS,integer koS returns nothing
call dju(LB[FoS],"usin",koS)
endfunction
function Nlo takes integer Clo,integer Vlo,string Blo returns nothing
set w3[MM]=Blo
set MM=MM+1
if Sv[Clo]==0 then
if Clo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSightRadiusNight","when calling error in UnitObjEditing, line 336")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setSightRadiusNight on invalid object.","when calling error in UnitObjEditing, line 336")
endif
endif
call joS(Clo,Vlo)
set MM=MM-1
endfunction
function ZHi takes integer EHi returns nothing
endfunction
function WHi takes integer mHi,string QHi returns nothing
set w3[MM]=QHi
set MM=MM+1
call MTr()
set NL[mHi]=a4s("when calling new_LinkedList in SotfrpGuiPresets, line 62")
call ZHi(mHi)
set MM=MM-1
endfunction
function Yju takes integer fju,string Rju,boolean Tju returns nothing
call dju(fju,Rju,lsu(Tju))
endfunction
function tOS takes integer rOS,boolean sOS returns nothing
call Yju(LB[rOS],"ubdg",sOS)
endfunction
function Ebo takes integer mbo,boolean Qbo,string Wbo returns nothing
set w3[MM]=Wbo
set MM=MM+1
if Sv[mbo]==0 then
if mbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setIsaBuilding","when calling error in UnitObjEditing, line 480")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setIsaBuilding on invalid object.","when calling error in UnitObjEditing, line 480")
endif
endif
call tOS(mbo,Qbo)
set MM=MM-1
endfunction
function vju takes integer kju,string jju,real xju returns nothing
endfunction
function NoS takes integer VoS,real BoS returns nothing
call vju(LB[VoS],"umxr",BoS)
endfunction
function Fbo takes integer Gbo,real gbo,string hbo returns nothing
set w3[MM]=hbo
set MM=MM+1
if Sv[Gbo]==0 then
if Gbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setMaximumRollAngledegrees","when calling error in UnitObjEditing, line 456")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setMaximumRollAngledegrees on invalid object.","when calling error in UnitObjEditing, line 456")
endif
endif
call NoS(Gbo,gbo)
set MM=MM-1
endfunction
function DOS takes integer POS,string AOS returns nothing
call Fju(LB[POS],"utip",AOS)
endfunction
function Gyo takes integer Ryo,string Tyo,string Yyo returns nothing
set w3[MM]=Yyo
set MM=MM+1
if Sv[Ryo]==0 then
if Ryo==0 then
call Mau("Nullpointer exception when calling W3UDefinition.setTooltipBasic","when calling error in UnitObjEditing, line 223")
else
call Mau("Called W3UDefinition.setTooltipBasic on invalid object.","when calling error in UnitObjEditing, line 223")
endif
endif
call DOS(Ryo,Tyo)
set MM=MM-1
endfunction
function lOS takes integer oOS,integer OOS returns nothing
call dju(LB[oOS],"uhpm",OOS)
endfunction
function Jbo takes integer Abo,integer Dbo,string Hbo returns nothing
set w3[MM]=Hbo
set MM=MM+1
if Sv[Abo]==0 then
if Abo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setHitPointsMaximumBase","when calling error in UnitObjEditing, line 495")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setHitPointsMaximumBase on invalid object.","when calling error in UnitObjEditing, line 495")
endif
endif
call lOS(Abo,Dbo)
set MM=MM-1
endfunction
function uJr takes integer NHr returns string
local integer wJr=NHr
local string MHr
if wJr==0 then
set MHr="normal"
elseif wJr==1 then
set MHr="small"
elseif wJr==2 then
set MHr="medium"
elseif wJr==3 then
set MHr="large"
elseif wJr==4 then
set MHr="fort"
elseif wJr==5 then
set MHr="hero"
elseif wJr==6 then
set MHr="divine"
else
set MHr="none"
endif
return MHr
endfunction
function aOS takes integer eOS,integer qOS returns nothing
call Fju(LB[eOS],"udty",uJr(qOS))
endfunction
function Mbo takes integer Vbo,integer Bbo,string Nbo returns nothing
set w3[MM]=Nbo
set MM=MM+1
if Sv[Vbo]==0 then
if Vbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setArmorType","when calling error in UnitObjEditing, line 555")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setArmorType on invalid object.","when calling error in UnitObjEditing, line 555")
endif
endif
call aOS(Vbo,Bbo)
set MM=MM-1
endfunction
function EoS takes integer QoS,string WoS returns nothing
call Fju(LB[QoS],"ushu",WoS)
endfunction
function Sbo takes integer sbo,string tbo,string ibo returns nothing
set w3[MM]=ibo
set MM=MM+1
if Sv[sbo]==0 then
if sbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setShadowImageUnit","when calling error in UnitObjEditing, line 348")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setShadowImageUnit on invalid object.","when calling error in UnitObjEditing, line 348")
endif
endif
call EoS(sbo,tbo)
set MM=MM-1
endfunction
function hoS takes integer GoS,integer goS returns nothing
call dju(LB[GoS],"umvs",goS)
endfunction
function Xlo takes integer Jlo,integer Klo,string Llo returns nothing
set w3[MM]=Llo
set MM=MM+1
if Sv[Jlo]==0 then
if Jlo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSpeedBase","when calling error in UnitObjEditing, line 323")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setSpeedBase on invalid object.","when calling error in UnitObjEditing, line 323")
endif
endif
call hoS(Jlo,Klo)
set MM=MM-1
endfunction
function hOS takes integer GOS,real gOS returns nothing
call Eju(LB[GOS],"ucpt",gOS)
endfunction
function byo takes integer oyo,real Oyo,string lyo returns nothing
set w3[MM]=lyo
set MM=MM+1
if Sv[oyo]==0 then
if oyo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAnimationCastPoint","when calling error in UnitObjEditing, line 768")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setAnimationCastPoint on invalid object.","when calling error in UnitObjEditing, line 768")
endif
endif
call hOS(oyo,Oyo)
set MM=MM-1
endfunction
function YOS takes integer ROS,integer TOS returns nothing
call dju(LB[ROS],"uaen",TOS)
endfunction
function cyo takes integer tyo,integer iyo,string Syo returns nothing
set w3[MM]=Syo
set MM=MM+1
if Sv[tyo]==0 then
if tyo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAttacksEnabled","when calling error in UnitObjEditing, line 588")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setAttacksEnabled on invalid object.","when calling error in UnitObjEditing, line 588")
endif
endif
call YOS(tyo,iyo)
set MM=MM-1
endfunction
function IOS takes integer ZOS,string UOS returns nothing
call Fju(LB[ZOS],"utub",UOS)
endfunction
function fyo takes integer ayo,string nyo,string dyo returns nothing
set w3[MM]=dyo
set MM=MM+1
if Sv[ayo]==0 then
if ayo==0 then
call Mau("Nullpointer exception when calling W3UDefinition.setTooltipExtended","when calling error in UnitObjEditing, line 220")
else
call Mau("Called W3UDefinition.setTooltipExtended on invalid object.","when calling error in UnitObjEditing, line 220")
endif
endif
call IOS(ayo,nyo)
set MM=MM-1
endfunction
function loS takes integer ooS,string OoS returns nothing
call Fju(LB[ooS],"upgr",OoS)
endfunction
function hlo takes integer Ylo,string Glo,string glo returns nothing
set w3[MM]=glo
set MM=MM+1
if Sv[Ylo]==0 then
if Ylo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setUpgradesUsed","when calling error in UnitObjEditing, line 268")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setUpgradesUsed on invalid object.","when calling error in UnitObjEditing, line 268")
endif
endif
call loS(Ylo,Glo)
set MM=MM-1
endfunction
function jOS takes integer FOS,real kOS returns nothing
call Eju(LB[FOS],"ucbs",kOS)
endfunction
function qyo takes integer yyo,real pyo,string eyo returns nothing
set w3[MM]=eyo
set MM=MM+1
if Sv[yyo]==0 then
if yyo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setAnimationCastBackswing","when calling error in UnitObjEditing, line 771")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setAnimationCastBackswing on invalid object.","when calling error in UnitObjEditing, line 771")
endif
endif
call jOS(yyo,pyo)
set MM=MM-1
endfunction
function fOS takes integer nOS,integer dOS returns nothing
call dju(LB[nOS],"udef",dOS)
endfunction
function syo takes integer wyo,integer uyo,string ryo returns nothing
set w3[MM]=ryo
set MM=MM+1
if Sv[wyo]==0 then
if wyo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setDefenseBase","when calling error in UnitObjEditing, line 558")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setDefenseBase on invalid object.","when calling error in UnitObjEditing, line 558")
endif
endif
call fOS(wyo,uyo)
set MM=MM-1
endfunction
function uOS takes integer MoS,real wOS returns nothing
call vju(LB[MoS],"umxp",wOS)
endfunction
function vbo takes integer kbo,real jbo,string xbo returns nothing
set w3[MM]=xbo
set MM=MM+1
if Sv[kbo]==0 then
if kbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setMaximumPitchAngledegrees","when calling error in UnitObjEditing, line 459")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setMaximumPitchAngledegrees on invalid object.","when calling error in UnitObjEditing, line 459")
endif
endif
call uOS(kbo,jbo)
set MM=MM-1
endfunction
function poS takes integer boS,string yoS returns nothing
call Fju(LB[boS],"usnd",yoS)
endfunction
function xlo takes integer Flo,string klo,string jlo returns nothing
set w3[MM]=jlo
set MM=MM+1
if Sv[Flo]==0 then
if Flo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setUnitSoundSet","when calling error in UnitObjEditing, line 271")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setUnitSoundSet on invalid object.","when calling error in UnitObjEditing, line 271")
endif
endif
call poS(Flo,klo)
set MM=MM-1
endfunction
function vDi takes integer jDi,string xDi returns nothing
set w3[MM]=xDi
set MM=MM+1
call cyo(jDi,0,"when calling setAttacksEnabled in SotfrpGuiPresets, line 146")
call syo(jDi,0,"when calling setDefenseBase in SotfrpGuiPresets, line 147")
call Mbo(jDi,6,"when calling setArmorType in SotfrpGuiPresets, line 148")
call qyo(jDi,0.,"when calling setAnimationCastBackswing in SotfrpGuiPresets, line 149")
call byo(jDi,0.,"when calling setAnimationCastPoint in SotfrpGuiPresets, line 150")
call vbo(jDi,0.,"when calling setMaximumPitchAngledegrees in SotfrpGuiPresets, line 151")
call Fbo(jDi,0.,"when calling setMaximumRollAngledegrees in SotfrpGuiPresets, line 152")
call Sbo(jDi,"","when calling setShadowImageUnit in SotfrpGuiPresets, line 153")
call Xlo(jDi,0,"when calling setSpeedBase in SotfrpGuiPresets, line 154")
call xlo(jDi,"","when calling setUnitSoundSet in SotfrpGuiPresets, line 155")
call Gyo(jDi,"","when calling setTooltipBasic in SotfrpGuiPresets, line 156")
call fyo(jDi,"","when calling setTooltipExtended in SotfrpGuiPresets, line 157")
call hlo(jDi,"","when calling setUpgradesUsed in SotfrpGuiPresets, line 158")
call Jbo(jDi,Ee,"when calling setHitPointsMaximumBase in SotfrpGuiPresets, line 159")
call Ebo(jDi,true,"when calling setIsaBuilding in SotfrpGuiPresets, line 160")
set MM=MM-1
endfunction
function bwo takes integer Owo,string lwo returns nothing
set w3[MM]=lwo
set MM=MM+1
if Sv[Owo]==0 then
if Owo==0 then
call Mau("Nullpointer exception when calling SotfrpGuiHelperUnitPreset.initialize","when calling error in SotfrpGuiPresets, line 145")
else
call Mau("Called SotfrpGuiHelperUnitPreset.initialize on invalid object.","when calling error in SotfrpGuiPresets, line 145")
endif
endif
call vDi(Owo,"when calling initialize in SotfrpGuiPresets, line 145")
set MM=MM-1
endfunction
function XOS takes integer LOS returns nothing
endfunction
function MOS takes integer COS,integer VOS,integer BOS returns nothing
local integer NOS
call XOS(COS)
set NOS=eju("w3u",VOS,BOS)
set LB[COS]=NOS
endfunction
function vOS takes integer xOS returns nothing
endfunction
function EOS takes integer mOS,integer QOS,integer WOS returns nothing
call MOS(mOS,QOS,WOS)
call vOS(mOS)
endfunction
function soS takes integer roS returns nothing
endfunction
function coS takes integer toS,integer ioS,integer SoS returns nothing
call EOS(toS,ioS,SoS)
call soS(toS)
endfunction
function HHi takes integer AHi,string DHi returns nothing
set w3[MM]=DHi
set MM=MM+1
call coS(AHi,RXc(Yq,"when calling next in SotfrpGuiPresets, line 163"),uR)
call WHi(AHi,"when calling SotfrpGuiHelperUnitPreset_init in SotfrpGuiPresets, line 162")
call bwo(AHi,"when calling initialize in SotfrpGuiPresets, line 164")
set MM=MM-1
endfunction
function icc takes string scc returns integer
local integer tcc
set w3[MM]=scc
set MM=MM+1
if tv==0 then
if iv<32768 then
set iv=iv+1
set tcc=iv
set Sv[tcc]=1696
else
call Mau("Out of memory: Could not create SotfrpGuiHelperUnitPreset.","when calling error in SotfrpGuiPresets, line 141")
set tcc=0
endif
else
set tv=tv-1
set tcc=sv[tv]
set Sv[tcc]=1696
endif
set MM=MM-1
return tcc
endfunction
function PHi takes string UHi returns integer
local integer IHi
set w3[MM]=UHi
set MM=MM+1
set IHi=icc("when calling alloc_SotfrpGuiHelperUnitPreset in SotfrpGuiPresets, line 162")
call HHi(IHi,"when calling construct_SotfrpGuiHelperUnitPreset in SotfrpGuiPresets, line 162")
set MM=MM-1
return IHi
endfunction
function cOS takes integer iOS,string SOS returns nothing
call Fju(LB[iOS],"uico",SOS)
endfunction
function Pbo takes integer Zbo,string Ubo,string Ibo returns nothing
set w3[MM]=Ibo
set MM=MM+1
if Sv[Zbo]==0 then
if Zbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setIconGameInterface","when calling error in UnitObjEditing, line 486")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setIconGameInterface on invalid object.","when calling error in UnitObjEditing, line 486")
endif
endif
call cOS(Zbo,Ubo)
set MM=MM-1
endfunction
function Ric takes string dic returns integer
local integer fic
set w3[MM]=dic
set MM=MM+1
if vG==0 then
if mG<32768 then
set mG=mG+1
set fic=mG
set QG[fic]=1534
else
call Mau("Out of memory: Could not create RealLevelClosure_presetDurationHero_presetCastRange_addHiddenAbility_addButton_addButton_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 31")
set fic=0
endif
else
set vG=vG-1
set fic=xG[vG]
set QG[fic]=1534
endif
set MM=MM-1
return fic
endfunction
function aoS takes integer eoS,string qoS returns nothing
call Fju(LB[eoS],"utyp",qoS)
endfunction
function Wlo takes integer vlo,string mlo,string Qlo returns nothing
set w3[MM]=Qlo
set MM=MM+1
if Sv[vlo]==0 then
if vlo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setUnitClassification","when calling error in UnitObjEditing, line 274")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setUnitClassification on invalid object.","when calling error in UnitObjEditing, line 274")
endif
endif
call aoS(vlo,mlo)
set MM=MM-1
endfunction
function Vts takes integer Lts,integer Xts,string Cts returns nothing
set w3[MM]=Cts
set MM=MM+1
call Exu(sQ[Lts],"adur",tQ[Lts],0,Xts,"when calling setLevelsDataUnreal in AbilityObjEditing, line 347")
call Aec(Lts,"DurationNormal",Xts,"when calling addTooltipProperty in AbilityObjEditing, line 348")
set MM=MM-1
endfunction
function Yac takes integer fac,integer Rac,string Tac returns nothing
set w3[MM]=Tac
set MM=MM+1
if SY[fac]==0 then
if fac==0 then
call Mau("Nullpointer exception when calling AbilityDefinition.presetDurationNormal","when calling error in AbilityObjEditing, line 346")
else
call Mau("Called AbilityDefinition.presetDurationNormal on invalid object.","when calling error in AbilityObjEditing, line 346")
endif
endif
call Vts(fac,Rac,"when calling presetDurationNormal in AbilityObjEditing, line 346")
set MM=MM-1
endfunction
function CoS takes integer LoS,string XoS returns nothing
call Fju(LB[LoS],"umdl",XoS)
endfunction
function Ybo takes integer fbo,string Rbo,string Tbo returns nothing
set w3[MM]=Tbo
set MM=MM+1
if Sv[fbo]==0 then
if fbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setModelFile","when calling error in UnitObjEditing, line 450")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setModelFile on invalid object.","when calling error in UnitObjEditing, line 450")
endif
endif
call CoS(fbo,Rbo)
set MM=MM-1
endfunction
function HTS takes string ATS returns integer
local integer DTS
set w3[MM]=ATS
set MM=MM+1
if tY==0 then
if iY<32768 then
set iY=iY+1
set DTS=iY
set SY[DTS]=2
else
call Mau("Out of memory: Could not create AbilityDefinition.","when calling error in AbilityObjEditing, line 38")
set DTS=0
endif
else
set tY=tY-1
set DTS=sY[tY]
set SY[DTS]=2
endif
set MM=MM-1
return DTS
endfunction
function bis takes integer cis,integer ois,string Ois returns integer
local integer lis
set w3[MM]=Ois
set MM=MM+1
set lis=HTS("when calling alloc_AbilityDefinition in AbilityObjEditing, line 57")
call ais(lis,cis,ois)
set MM=MM-1
return lis
endfunction
function eYr takes nothing returns integer
return Nf
endfunction
function DoS takes integer PoS,real AoS returns nothing
call vju(LB[PoS],"usca",AoS)
endfunction
function ebo takes integer bbo,real ybo,string pbo returns nothing
set w3[MM]=pbo
set MM=MM+1
if Sv[bbo]==0 then
if bbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setScalingValue","when calling error in UnitObjEditing, line 369")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setScalingValue on invalid object.","when calling error in UnitObjEditing, line 369")
endif
endif
call DoS(bbo,ybo)
set MM=MM-1
endfunction
function eic takes string yic returns integer
local integer pic
set w3[MM]=yic
set MM=MM+1
if oY==0 then
if OY<32768 then
set OY=OY+1
set pic=OY
set lY[pic]=1252
else
call Mau("Out of memory: Could not create IntLevelClosure_presetCargoCapacity_presetDurationNormal_presetDurationHero_presetCastRange_addHiddenAbility_addButton_addButton_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 31")
set pic=0
endif
else
set oY=oY-1
set pic=cY[oY]
set lY[pic]=1252
endif
set MM=MM-1
return pic
endfunction
function KOS takes integer HOS,string JOS returns nothing
call Fju(LB[HOS],"unam",JOS)
endfunction
function kyo takes integer gyo,string hyo,string Fyo returns nothing
set w3[MM]=Fyo
set MM=MM+1
if Sv[gyo]==0 then
if gyo==0 then
call Mau("Nullpointer exception when calling W3UDefinition.setName","when calling error in UnitObjEditing, line 232")
else
call Mau("Called W3UDefinition.setName on invalid object.","when calling error in UnitObjEditing, line 232")
endif
endif
call KOS(gyo,hyo)
set MM=MM-1
endfunction
function IoS takes integer ZoS,real UoS returns nothing
call vju(LB[ZoS],"ussc",UoS)
endfunction
function lbo takes integer cbo,real obo,string Obo returns nothing
set w3[MM]=Obo
set MM=MM+1
if Sv[cbo]==0 then
if cbo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSelectionScale","when calling error in UnitObjEditing, line 360")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setSelectionScale on invalid object.","when calling error in UnitObjEditing, line 360")
endif
endif
call IoS(cbo,obo)
set MM=MM-1
endfunction
function nic takes string qic returns integer
local integer aic
set w3[MM]=qic
set MM=MM+1
if vG==0 then
if mG<32768 then
set mG=mG+1
set aic=mG
set QG[aic]=1542
else
call Mau("Out of memory: Could not create RealLevelClosure_presetDurationNormal_presetDurationHero_presetCastRange_addHiddenAbility_addButton_addButton_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 31")
set aic=0
endif
else
set vG=vG-1
set aic=xG[vG]
set QG[aic]=1542
endif
set MM=MM-1
return aic
endfunction
function VTS takes string XTS returns integer
local integer CTS
set w3[MM]=XTS
set MM=MM+1
if tY==0 then
if iY<32768 then
set iY=iY+1
set CTS=iY
set SY[CTS]=371
else
call Mau("Out of memory: Could not create AbilityDefinitionLoad.","when calling error in AbilityObjEditing, line 10097")
set CTS=0
endif
else
set tY=tY-1
set CTS=sY[tY]
set SY[CTS]=371
endif
set MM=MM-1
return CTS
endfunction
function OSs takes integer oSs returns nothing
endfunction
function aSs takes integer eSs,integer qSs returns nothing
call ais(eSs,qSs,cy)
call OSs(eSs)
endfunction
function pSs takes integer lSs,string bSs returns integer
local integer ySs
set w3[MM]=bSs
set MM=MM+1
set ySs=VTS("when calling alloc_AbilityDefinitionLoad in AbilityObjEditing, line 10098")
call aSs(ySs,lSs)
set MM=MM-1
return ySs
endfunction
function moS takes integer xoS,integer voS returns nothing
call dju(LB[xoS],"usid",voS)
endfunction
function rbo takes integer Mlo,integer wbo,string ubo returns nothing
set w3[MM]=ubo
set MM=MM+1
if Sv[Mlo]==0 then
if Mlo==0 then
call Mau("Nullpointer exception when calling UnitOrBuildingOrHeroDefinition.setSightRadiusDay","when calling error in UnitObjEditing, line 339")
else
call Mau("Called UnitOrBuildingOrHeroDefinition.setSightRadiusDay on invalid object.","when calling error in UnitObjEditing, line 339")
endif
endif
call moS(Mlo,wbo)
set MM=MM-1
endfunction
function xic takes string kic returns integer
local integer jic
set w3[MM]=kic
set MM=MM+1
if vG==0 then
if mG<32768 then
set mG=mG+1
set jic=mG
set QG[jic]=1512
else
call Mau("Out of memory: Could not create RealLevelClosure_presetCastRange_addButton_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 33")
set jic=0
endif
else
set vG=vG-1
set jic=xG[vG]
set QG[jic]=1512
endif
set MM=MM-1
return jic
endfunction
function Ndr takes string Odr returns integer
local integer ldr
local integer bdr
local integer ydr
local integer pdr
local integer edr
local integer qdr
local integer adr
local integer ndr
local integer ddr
local integer fdr
local integer Rdr
local integer Tdr
local integer Ydr
local integer Gdr
local integer gdr
local integer hdr
local integer Fdr
local integer kdr
local integer jdr
local integer xdr
local integer vdr
local integer mdr
local integer Qdr
local integer Wdr
local integer Edr
local integer Zdr
local integer Udr
local integer Idr
local integer Pdr
local integer Adr
local integer Ddr
local integer Hdr
local integer Jdr
local integer Kdr
local integer Ldr
local integer Xdr
local integer Cdr
local integer Vdr
local integer Bdr
set w3[MM]=Odr
set MM=MM+1
set ldr=PHi("when calling new_SotfrpGuiHelperUnitPreset in SotfrpGuiCoreUnit, line 16")
call kyo(ldr,"Ядро","when calling setName in SotfrpGuiCoreUnit, line 17")
set bdr=ldr
call Pbo(bdr,"ReplaceableTextures\\WorldEditUI\\StartingLocation.blp","when calling setIconGameInterface in SotfrpGuiCoreUnit, line 18")
set ydr=bdr
call Ybo(ydr,Fq,"when calling setModelFile in SotfrpGuiCoreUnit, line 19")
set pdr=ydr
call ebo(pdr,0.33,"when calling setScalingValue in SotfrpGuiCoreUnit, line 20")
set edr=pdr
call lbo(edr,1.75,"when calling setSelectionScale in SotfrpGuiCoreUnit, line 21")
set qdr=edr
call Wlo(qdr,"peon","when calling setUnitClassification in SotfrpGuiCoreUnit, line 22")
set adr=qdr
call Hlo(adr,3.,"when calling setTurnRate in SotfrpGuiCoreUnit, line 23")
set ndr=adr
call rbo(ndr,1500,"when calling setSightRadiusDay in SotfrpGuiCoreUnit, line 24")
set ddr=ndr
call Nlo(ddr,1500,"when calling setSightRadiusNight in SotfrpGuiCoreUnit, line 25")
set fdr=ddr
call Cbo(fdr,300.,"when calling setMovementHeight in SotfrpGuiCoreUnit, line 26")
set Rdr=fdr
call Ilo(Rdr,3,"when calling setMovementType in SotfrpGuiCoreUnit, line 27")
set Tdr=Rdr
call Mwo(Tdr,Sy,"when calling addHiddenAbility in SotfrpGuiCoreUnit, line 28")
set Ydr=Tdr
call Mwo(Ydr,iy,"when calling addHiddenAbility in SotfrpGuiCoreUnit, line 29")
set Gdr=Ydr
call Cwo(Gdr,eYr(),"when calling addHiddenAbility in SotfrpGuiCoreUnit, line 30")
set Qdr=Gdr
set Ldr=Qdr
set hdr=Fis(RXc(Gq,"when calling next in SotfrpGuiCoreUnit, line 31"),"when calling new_AbilityDefinitionCargoHoldTransport in SotfrpGuiCoreUnit, line 31")
set Ddr=hdr
set gdr=eic("when calling alloc_IntLevelClosure_presetCargoCapacity_presetDurationNormal_presetDurationHero_presetCastRange_addHiddenAbility_addButton_addButton_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 31")
call Eac(Ddr,gdr,"when calling presetCargoCapacity in SotfrpGuiCoreUnit, line 31")
set kdr=hdr
set Hdr=kdr
set Fdr=nic("when calling alloc_RealLevelClosure_presetDurationNormal_presetDurationHero_presetCastRange_addHiddenAbility_addButton_addButton_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 31")
call Yac(Hdr,Fdr,"when calling presetDurationNormal in SotfrpGuiCoreUnit, line 31")
set xdr=kdr
set Jdr=xdr
set jdr=Ric("when calling alloc_RealLevelClosure_presetDurationHero_presetCastRange_addHiddenAbility_addButton_addButton_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 31")
call Fac(Jdr,jdr,"when calling presetDurationHero in SotfrpGuiCoreUnit, line 31")
set mdr=xdr
set Kdr=mdr
set vdr=Gic("when calling alloc_RealLevelClosure_presetCastRange_addHiddenAbility_addButton_addButton_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 31")
call vac(Kdr,vdr,"when calling presetCastRange in SotfrpGuiCoreUnit, line 31")
call Cwo(Ldr,mdr,"when calling addHiddenAbility in SotfrpGuiCoreUnit, line 31")
set Zdr=Qdr
set Cdr=Zdr
set Edr=pSs(RXc(Gq,"when calling next in SotfrpGuiCoreUnit, line 32"),"when calling new_AbilityDefinitionLoad in SotfrpGuiCoreUnit, line 32")
set Xdr=Edr
set Wdr=Fic("when calling alloc_RealLevelClosure_presetCastRange_addButton_addButton_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 32")
call vac(Xdr,Wdr,"when calling presetCastRange in SotfrpGuiCoreUnit, line 32")
call Jwo(Cdr,0,2,Edr,"Погрузка","Погрузка дружественных наземных войск.","when calling addButton in SotfrpGuiCoreUnit, line 32")
set Pdr=Zdr
set Bdr=Pdr
set Idr=bis(RXc(Gq,"when calling next in SotfrpGuiCoreUnit, line 33"),Oy,"when calling new_AbilityDefinition in SotfrpGuiCoreUnit, line 33")
set Vdr=Idr
set Udr=xic("when calling alloc_RealLevelClosure_presetCastRange_addButton_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 33")
call vac(Vdr,Udr,"when calling presetCastRange in SotfrpGuiCoreUnit, line 33")
call Jwo(Bdr,1,2,Idr,"Выгрузка","Выгрузка дружественных наземных войск.","when calling addButton in SotfrpGuiCoreUnit, line 33")
set Adr=Pdr
set MM=MM-1
return Adr
endfunction
function Pic takes string Uic returns integer
local integer Iic
set w3[MM]=Uic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Iic=kj
set jj[Iic]=1164
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 69")
set Iic=0
endif
else
set Fj=Fj-1
set Iic=hj[Fj]
set jj[Iic]=1164
endif
set MM=MM-1
return Iic
endfunction
function T7u takes integer f7u,integer R7u returns nothing
set kd[f7u]=R7u
endfunction
function Vic takes string Xic returns integer
local integer Cic
set w3[MM]=Xic
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Cic=kj
set jj[Cic]=852
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 80")
set Cic=0
endif
else
set Fj=Fj-1
set Cic=hj[Fj]
set jj[Cic]=852
endif
set MM=MM-1
return Cic
endfunction
function Zic takes string Wic returns integer
local integer Eic
set w3[MM]=Wic
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set Eic=sg
set tg[Eic]=748
else
call Mau("Out of memory: Could not create EventListener_add_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 60")
set Eic=0
endif
else
set rg=rg-1
set Eic=ug[rg]
set tg[Eic]=748
endif
set MM=MM-1
return Eic
endfunction
function Qic takes string vic returns integer
local integer mic
set w3[MM]=vic
set MM=MM+1
if Sg==0 then
if cg<32768 then
set cg=cg+1
set mic=cg
set og[mic]=1456
else
call Mau("Out of memory: Could not create OnCastListener_onCast_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 46")
set mic=0
endif
else
set Sg=Sg-1
set mic=ig[Sg]
set og[mic]=1456
endif
set MM=MM-1
return mic
endfunction
function nWu takes player aWu returns real
set W1=GetPlayerStartLocationX(aWu)
set E1=GetPlayerStartLocationY(aWu)
return W1
endfunction
function qYr takes nothing returns integer
return Mf
endfunction
function cfr takes integer wfr,string ufr returns unit
local unit rfr
local unit sfr
local integer tfr
local unit ifr
local integer Sfr
set w3[MM]=ufr
set MM=MM+1
set sfr=I5r(pa[wfr],Mdr(),nWu(pa[wfr]),E1,wwu(270.))
call c0s(sfr,255,255,255,150)
set rfr=sfr
set ifr=rfr
set Sfr=qYr()
set tfr=Qic("when calling alloc_OnCastListener_onCast_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 46")
call bYs(tfr)
call GSu(ifr,Sfr,tfr,"when calling onCast in SotfrpGuiCoreUnit, line 46")
set MM=MM-1
set Gnw=rfr
set rfr=null
set sfr=null
set ifr=null
return Gnw
endfunction
function iSc takes string sSc returns integer
local integer tSc
set w3[MM]=sSc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tSc=kj
set jj[tSc]=1081
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 110")
set tSc=0
endif
else
set Fj=Fj-1
set tSc=hj[Fj]
set jj[tSc]=1081
endif
set MM=MM-1
return tSc
endfunction
function oSc takes string SSc returns integer
local integer cSc
set w3[MM]=SSc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cSc=kj
set jj[cSc]=1082
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 113")
set cSc=0
endif
else
set Fj=Fj-1
set cSc=hj[Fj]
set jj[cSc]=1082
endif
set MM=MM-1
return cSc
endfunction
function rSc takes string wSc returns integer
local integer uSc
set w3[MM]=wSc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uSc=kj
set jj[uSc]=963
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 92")
set uSc=0
endif
else
set Fj=Fj-1
set uSc=hj[Fj]
set jj[uSc]=963
endif
set MM=MM-1
return uSc
endfunction
function wdo takes integer Mno returns nothing
set VJ[Mno]=0
endfunction
function sdo takes integer udo,string rdo returns nothing
set w3[MM]=rdo
set MM=MM+1
if Tx[udo]==0 then
if udo==0 then
call Mau("Nullpointer exception when calling BuiltinData.setArgumentsTypes","when calling error in ScmdDataTypes, line 1391")
else
call Mau("Called BuiltinData.setArgumentsTypes on invalid object.","when calling error in ScmdDataTypes, line 1391")
endif
endif
call wdo(udo)
set MM=MM-1
endfunction
function odr takes string mnr returns boolean
local integer Qnr
local integer Wnr
local integer Enr
local group Znr
local group Unr
local group Inr
local group Pnr
local integer Anr
local integer Dnr
local integer Hnr
local integer Jnr
local integer Knr
local integer Lnr
local integer Xnr
local integer Cnr
local integer Vnr
local integer Bnr
local integer Nnr
local integer Mnr
local integer wdr
local integer udr
local integer rdr
local integer sdr
local integer tdr
local playerevent idr
local integer Sdr
local integer cdr
set w3[MM]=mnr
set MM=MM+1
if Ie then
call Ndr("when calling generateCore in SotfrpGuiCoreUnit, line 35")
endif
set Qf=2016423987
call e7u(Mdr(),"when calling protectUnitType in SotfrpGuiCoreUnit, line 56")
set Qnr=0
set Wnr=bj_MAX_PLAYERS-1
loop
exitwhen Qnr>Wnr
if PWu(pa[Qnr])then
set Wf[Qnr]=cfr(Qnr,"when calling initCore in SotfrpGuiCoreUnit, line 59")
endif
set Qnr=Qnr+1
endloop
set idr=EVENT_PLAYER_LEAVE
set Enr=Zic("when calling alloc_EventListener_add_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 60")
call NTs(Enr)
call bSu(idr,Enr,"when calling add in SotfrpGuiCoreUnit, line 60")
call T7u(0,2)
set Unr=CreateGroup()
call JRu(Unr,Ae)
set Znr=Unr
call ForGroup(Znr,kaw)
set Inr=Znr
call tTu(Inr)
set Pnr=Inr
call STu(Pnr)
set Anr=Pic("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 69")
set Dnr=eDt(Anr,"when calling new_BuiltinData in SotfrpGuiCoreUnit, line 69")
call sdo(Dnr,"when calling setArgumentsTypes in SotfrpGuiCoreUnit, line 72")
set Hnr=Dnr
call k4o(Hnr,"when calling setRequiringEnumUnit in SotfrpGuiCoreUnit, line 72")
set Lnr=WHt(Hnr,"when calling new_BuiltinFunction in SotfrpGuiCoreUnit, line 69")
set Sdr=Lnr
set Jnr=Hic("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 72")
set Knr=eDt(Jnr,"when calling new_BuiltinData in SotfrpGuiCoreUnit, line 72")
call Fao(Knr,G5u(),"when calling setArgumentsTypes in SotfrpGuiCoreUnit, line 75")
call C4o(Sdr,Knr,"when calling addOverload in SotfrpGuiCoreUnit, line 72")
call jBu(Lnr,"fs","when calling registerProtectedBuiltin in SotfrpGuiCoreUnit, line 69")
set Xnr=Lic("when calling alloc_IBuiltin_registerProtectedBuiltin_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 77")
call jBu(WHt(eDt(Xnr,"when calling new_BuiltinData in SotfrpGuiCoreUnit, line 77"),"when calling new_BuiltinFunction in SotfrpGuiCoreUnit, line 77"),"getcorex","when calling registerProtectedBuiltin in SotfrpGuiCoreUnit, line 77")
set Cnr=Vic("when calling alloc_IBuiltin_registerProtectedBuiltin_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 80")
call jBu(WHt(eDt(Cnr,"when calling new_BuiltinData in SotfrpGuiCoreUnit, line 80"),"when calling new_BuiltinFunction in SotfrpGuiCoreUnit, line 80"),"getcorey","when calling registerProtectedBuiltin in SotfrpGuiCoreUnit, line 80")
set Vnr=Mic("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 84")
set Bnr=eDt(Vnr,"when calling new_BuiltinData in SotfrpGuiCoreUnit, line 84")
call k4o(Bnr,"when calling setRequiringEnumUnit in SotfrpGuiCoreUnit, line 92")
set wdr=WHt(Bnr,"when calling new_BuiltinFunction in SotfrpGuiCoreUnit, line 84")
set cdr=wdr
set Nnr=rSc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 92")
set Mnr=eDt(Nnr,"when calling new_BuiltinData in SotfrpGuiCoreUnit, line 92")
call Fao(Mnr,G5u(),"when calling setArgumentsTypes in SotfrpGuiCoreUnit, line 100")
call C4o(cdr,Mnr,"when calling addOverload in SotfrpGuiCoreUnit, line 92")
call jBu(wdr,"duplicate","when calling registerProtectedBuiltin in SotfrpGuiCoreUnit, line 84")
set udr=iSc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 110")
set rdr=eDt(udr,"when calling new_BuiltinData in SotfrpGuiCoreUnit, line 110")
call dao(rdr,m4u(),o2u(),"when calling setArgumentsTypes in SotfrpGuiCoreUnit, line 112")
call jBu(WHt(rdr,"when calling new_BuiltinFunction in SotfrpGuiCoreUnit, line 110"),"spawn","when calling registerProtectedBuiltin in SotfrpGuiCoreUnit, line 110")
set sdr=oSc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SotfrpGuiCoreUnit in SotfrpGuiCoreUnit, line 113")
set tdr=eDt(sdr,"when calling new_BuiltinData in SotfrpGuiCoreUnit, line 113")
call dao(tdr,m4u(),o2u(),"when calling setArgumentsTypes in SotfrpGuiCoreUnit, line 115")
call jBu(WHt(tdr,"when calling new_BuiltinFunction in SotfrpGuiCoreUnit, line 113"),"mnstr","when calling registerProtectedBuiltin in SotfrpGuiCoreUnit, line 113")
set MM=MM-1
set Znr=null
set Unr=null
set Inr=null
set Pnr=null
set idr=null
return true
endfunction
function nRo takes nothing returns boolean
set MM=0
return odr("SotfrpGuiCoreUnit, line 1")
endfunction
function nRw takes nothing returns nothing
local timer qRw=GetExpiredTimer()
local effect aRw=LoadEffectHandle(c,GetHandleId(qRw),O)
call FlushChildHashtable(c,GetHandleId(qRw))
call DestroyTimer(qRw)
set qRw=null
call DestroyEffect(aRw)
set aRw=null
set qRw=null
set aRw=null
endfunction
function qas takes integer Oas,unit las,real bas,integer yas,string pas returns nothing
local timer eas
set w3[MM]=pas
set MM=MM+1
set eas=PTc(Oas,las,"when calling prepare in BuffsJurst, line 140")
call Pto(BQ[Oas],GetHandleId(eas),yas,"when calling saveInteger in BuffsJurst, line 141")
call TimerStart(eas,bas,true,Uaw)
set MM=MM-1
set eas=null
endfunction
function NTc takes integer LTc,unit XTc,real CTc,integer VTc,string BTc returns nothing
set w3[MM]=BTc
set MM=MM+1
if gG[LTc]==0 then
if LTc==0 then
call Mau("Nullpointer exception when calling BuffType.applyPeriodic","when calling error in BuffsJurst, line 139")
else
call Mau("Called BuffType.applyPeriodic on invalid object.","when calling error in BuffsJurst, line 139")
endif
endif
call qas(LTc,XTc,CTc,VTc,"when calling applyPeriodic in BuffsJurst, line 139")
set MM=MM-1
endfunction
function kjr takes string Rjr returns nothing
local unit Tjr
local integer Yjr
local unit Gjr
local real gjr
local real hjr
local real Fjr
set w3[MM]=Rjr
set MM=MM+1
set Tjr=GetTriggerUnit()
set Yjr=GetHandleId(Tjr)
if GetUnitAbilityLevel(Tjr,OT)>0 and GetEventDamage()>0. then
set Gjr=rio(nT,Yjr,"when calling loadUnit in TouchOfKarma, line 28")
set gjr=GetEventDamage()
set hjr=Kto(qT,Yjr,"when calling loadReal in TouchOfKarma, line 30")
if gjr<hjr then
set Fjr=gjr
else
set Fjr=hjr
endif
call BlzSetEventDamage(gjr-Fjr)
call Bto(qT,Yjr,hjr-Fjr,"when calling saveReal in TouchOfKarma, line 37")
if Fjr==hjr then
call UnitRemoveAbility(Tjr,OT)
endif
set hjr=0.
if GetUnitAbilityLevel(Gjr,lT)>0 then
set hjr=Kto(fT,GetHandleId(Gjr),"when calling loadReal in TouchOfKarma, line 43")
endif
call Bto(fT,GetHandleId(Gjr),hjr+0.75*Fjr,"when calling saveReal in TouchOfKarma, line 45")
call NTc(eT,Gjr,1.,5,"when calling applyPeriodic in TouchOfKarma, line 46")
call Ndw(GetOwningPlayer(Tjr),yT,Wto(aT,Yjr,"when calling loadInteger in TouchOfKarma, line 47"),"attackonce",Gjr,GetUnitX(Gjr),GetUnitY(Gjr))
endif
set MM=MM-1
set Tjr=null
set Gjr=null
endfunction
function nTo takes nothing returns nothing
set MM=0
call kjr("TouchOfKarma, line 99")
endfunction
function qUw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function aUw takes nothing returns boolean
if not qUw()then
return false
endif
return true
endfunction
function eUw takes nothing returns boolean
if not(Ww[GetConvertedPlayerId(GetTriggerPlayer())]<0)then
return false
endif
return true
endfunction
function nUw takes nothing returns nothing
if aUw()then
if GetTriggerPlayer()==Player(0)then
call DestroyEffectBJ(Ew[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(1)then
call DestroyEffectBJ(Zw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(2)then
call DestroyEffectBJ(Kw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(3)then
call DestroyEffectBJ(Jw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(4)then
call DestroyEffectBJ(Hw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(5)then
call DestroyEffectBJ(Dw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(6)then
call DestroyEffectBJ(Aw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(7)then
call DestroyEffectBJ(Pw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(8)then
call DestroyEffectBJ(Iw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(9)then
call DestroyEffectBJ(Uw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(10)then
call DestroyEffectBJ(Xw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
if GetTriggerPlayer()==Player(11)then
call DestroyEffectBJ(Lw[Ww[GetConvertedPlayerId(GetTriggerPlayer())]])
else
call DoNothing()
endif
set Ww[GetConvertedPlayerId(GetTriggerPlayer())]=Ww[GetConvertedPlayerId(GetTriggerPlayer())]-1
if eUw()then
set Ww[GetConvertedPlayerId(GetTriggerPlayer())]=0
endif
endif
endfunction
function aXw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function nXw takes nothing returns nothing
if aXw()then
call UnitRemoveTypeBJ(UNIT_TYPE_MECHANICAL,GetEnumUnit())
endif
endfunction
function nZw takes nothing returns nothing
set Qw[1]="war3mapImported\\Advanced Rod.mdx"
set Qw[2]="war3mapImported\\Akamas_weapon.mdx"
set Qw[3]="war3mapImported\\Axe.mdx"
set Qw[4]="war3mapImported\\Bandit's_axe.mdx"
set Qw[5]="war3mapImported\\Beastmaster_axe.mdx"
set Qw[6]="war3mapImported\\Blade.mdx"
set Qw[7]="war3mapImported\\Blademaster_sword.mdx"
set Qw[8]="war3mapImported\\Buckler.mdx"
set Qw[9]="war3mapImported\\Chaos_claw.mdx"
set Qw[10]="war3mapImported\\Chaos_claw.mdx"
set Qw[11]="war3mapImported\\Doomguard_sword.mdx"
set Qw[12]="war3mapImported\\FelGuard_weapon.mdx"
set Qw[13]="war3mapImported\\ForestTroll_weapon.mdx"
set Qw[14]="war3mapImported\\FurionStaff.mdx"
set Qw[15]="war3mapImported\\GryphonRider_hammer.mdx"
set Qw[16]="war3mapImported\\Hellscream_axe.mdx"
set Qw[17]="war3mapImported\\Illidian_weapon.mdx"
set Qw[18]="war3mapImported\\IronRaven.mdx"
set Qw[19]="war3mapImported\\IronRaven[half].MDX"
set Qw[20]="war3mapImported\\JainaStaff.mdx"
set Qw[21]="war3mapImported\\Knight_sword.mdx"
set Qw[22]="war3mapImported\\Kobold_hammer.mdx"
set Qw[23]="war3mapImported\\Leonite_Aegis.MDX"
set Qw[24]="war3mapImported\\Magnatur_weapon.mdx"
set Qw[25]="war3mapImported\\Maul.mdx"
set Qw[26]="war3mapImported\\Militia_axe.mdx"
set Qw[27]="war3mapImported\\NE_Shield.MDX"
set Qw[28]="war3mapImported\\Ogre's_clubb.mdx"
set Qw[29]="war3mapImported\\OrcWarlord_clubb.mdx"
set Qw[30]="war3mapImported\\Orc_rampager.MDX"
set Qw[31]="war3mapImported\\Peasant_axe.mdx"
set Qw[32]="war3mapImported\\Pickle.mdx"
set Qw[33]="war3mapImported\\PitLord_wepaon.mdx"
set Qw[34]="war3mapImported\\Proudmoore_sword.mdx"
set Qw[35]="war3mapImported\\RevenantOfTheWaves_Clubb.mdx"
set Qw[36]="war3mapImported\\Satyr_weapon.mdx"
set Qw[37]="war3mapImported\\ShadowHUnter_weapon.mdx"
set Qw[38]="war3mapImported\\Shaman_claw.mdx"
set Qw[39]="war3mapImported\\Sickle.mdx"
set Qw[40]="war3mapImported\\SkeletonOrc_axe.mdx"
set Qw[41]="war3mapImported\\Skeleton_sword.mdx"
set Qw[42]="war3mapImported\\SpellShield.mdx"
set Qw[43]="war3mapImported\\SpiritWalker_axe.mdx"
set Qw[44]="war3mapImported\\Sword.mdx"
set Qw[45]="war3mapImported\\TaurenChieftain_axe.mdx"
set Qw[46]="war3mapImported\\Thunderbolt_hammer.mdx"
set Qw[47]="war3mapImported\\Undead_Tower.MDX"
set Qw[48]="war3mapImported\\Walkingstick.mdx"
set Qw[49]="war3mapImported\\Warlock_weapon.mdx"
set Qw[50]="war3mapImported\\Wolfrider_sword.mdx"
set Qw[51]="war3mapImported\\bloodelf_sword.mdx"
set Qw[52]="war3mapImported\\bloodelfspellthief_sword.mdx"
set Qw[53]="war3mapImported\\bottle.mdx"
set Qw[54]="war3mapImported\\bottle2.mdx"
set Qw[55]="war3mapImported\\centaur_axe.mdx"
set Qw[56]="war3mapImported\\claw.mdx"
set Qw[57]="war3mapImported\\dagger.mdx"
set Qw[58]="war3mapImported\\dragons_weapon.mdx"
set Qw[59]="war3mapImported\\elvenbow.mdx"
set Qw[60]="war3mapImported\\faceless'_clubb.mdx"
set Qw[61]="war3mapImported\\frostmourne.mdx"
set Qw[62]="war3mapImported\\fullhelm.mdx"
set Qw[63]="war3mapImported\\hammer.mdx"
set Qw[64]="war3mapImported\\reversedagger.mdx"
set Qw[65]="war3mapImported\\runeblade.mdx"
set Qw[66]="war3mapImported\\spear.mdx"
set Qw[67]="war3mapImported\\spear2.mdx"
set Qw[68]="war3mapImported\\stonesword.mdx"
set Qw[69]="war3mapImported\\towershield.mdx"
set Qw[70]="war3mapImported\\wand.mdx"
set Qw[71]="war3mapImported\\wizardcone.mdx"
set Qw[72]="war3mapImported\\Pirate Saber.mdx"
set Qw[73]="war3mapImported\\Kitablade.mdx"
set Qw[74]="war3mapImported\\Flintlock Rifle.mdx"
set Qw[75]="war3mapImported\\Longsword.mdx"
set Qw[76]="war3mapImported\\Pistol.MDX"
set Qw[77]="war3mapImported\\Halberd.mdx"
set Qw[78]="war3mapImported\\Quiver.mdx"
set Qw[79]="war3mapImported\\BackPack.mdx"
set Qw[80]="war3mapImported\\BlackWingVR.mdx"
set Qw[81]="war3mapImported\\DragonBlade.mdx"
set Qw[82]="war3mapImported\\PirateHat.MDX"
set Qw[83]="war3mapImported\\sign.mdx"
set Qw[84]="war3mapImported\\HolyShield Seal_Portrait.mdl"
set Qw[85]="Abilities\\Spells\\Undead\\RegenerationAura\\ObsidianRegenAura.mdl"
set Qw[86]="Abilities\\Weapons\\BloodElfSpellThiefMISSILE\\BloodElfSpellThiefMISSILE.mdl"
set Qw[87]="Abilities\\Weapons\\ShadowHunterMissile\\ShadowHunterMissile.mdl"
set Qw[88]="abilities\\Weapons\\FelFireBallMissile\\FelFireBallMissile.mdx"
set Qw[89]="Abilities\\Weapons\\Mortar\\MortarMissile.mdl"
set Qw[90]="war3mapImported\\TwilightSparkle.mdx"
set Qw[91]="war3mapImported\\PrismaticWave.mdx"
set Qw[92]="war3mapImported\\HolyAwakening.mdx"
set Qw[93]="war3mapImported\\EMPBubble.mdx"
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function njw takes nothing returns nothing
set Ju[8]=GetUnitLoc(GetEnumUnit())
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[8],bj_UNIT_FACING)
call UnitAddAbilityBJ(1093678670,GetLastCreatedUnit())
call SetUnitAbilityLevelSwapped(1093678670,GetLastCreatedUnit(),Mu)
call IssueTargetOrderBJ(GetLastCreatedUnit(),"thunderbolt",GetEnumUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
endfunction
function nkw takes nothing returns nothing
call BlzEndUnitAbilityCooldown(LoadUnitHandle(i,y,GetHandleId(GetExpiredTimer())),1095722360)
call ATw(GetExpiredTimer())
endfunction
function nvw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function nwu takes nothing returns boolean
set Yy=4096
return true
endfunction
function o1w takes nothing returns nothing
local unit r1w=GetSpellAbilityUnit()
local unit s1w=GetSpellTargetUnit()
local location S1w=GetUnitLoc(r1w)
local location c1w=GetUnitLoc(s1w)
local effect t1w=AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl",S1w)
local effect i1w=AddSpecialEffectLoc("Abilities\\Spells\\Human\\MassTeleport\\MassTeleportCaster.mdl",c1w)
call TriggerSleepAction(00.05)
call SetUnitPositionLoc(r1w,c1w)
call SetUnitPositionLoc(s1w,S1w)
call SetUnitPositionLoc(r1w,c1w)
set r1w=null
set s1w=null
set S1w=null
set c1w=null
call TriggerSleepAction(5.00)
call DestroyEffect(t1w)
call DestroyEffect(i1w)
set t1w=null
set i1w=null
set r1w=null
set s1w=null
set t1w=null
set i1w=null
set S1w=null
set c1w=null
endfunction
function o4w takes nothing returns boolean
if not(GetSpellAbilityId()==1093681740)then
return false
endif
return true
endfunction
function o5w takes nothing returns nothing
local unit c5w=CreateUnitAtLoc(Player(PLAYER_NEUTRAL_PASSIVE),1747995215,GetUnitLoc(GetSpellAbilityUnit()),GetUnitFacing(GetSpellAbilityUnit()))
call UnitAddAbility(c5w,1093679161)
call SetUnitAbilityLevel(c5w,1093679161,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093679160))
call IssuePointOrderLoc(c5w,"monsoon",GetSpellTargetLoc())
call TriggerSleepAction(12.80)
call RemoveUnit(c5w)
set c5w=null
set c5w=null
endfunction
function o6w takes nothing returns nothing
local unit S6w=GetSpellAbilityUnit()
local integer c6w=0
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl",GetUnitLoc(S6w)))
if GetSpellAbilityId()==1093684017 then
if GetUnitState(S6w,UNIT_STATE_MANA)<37.5-GetUnitAbilityLevel(S6w,1093684017)*7.5 then
set S6w=null
return
endif
set c6w=GetUnitAbilityLevel(S6w,1093684017)
call UnitRemoveAbility(S6w,1093684017)
call UnitAddAbility(S6w,1093684018)
call SetUnitAbilityLevel(S6w,1093684018,c6w)
call UnitMakeAbilityPermanent(S6w,true,1093684018)
call UnitAddAbility(S6w,1093684019)
call UnitMakeAbilityPermanent(S6w,true,1093684019)
call UnitAddAbility(S6w,1093684020)
call SetUnitAbilityLevel(S6w,1093684020,c6w)
call UnitMakeAbilityPermanent(S6w,true,1093684020)
call UnitAddAbility(S6w,1093684021)
call UnitMakeAbilityPermanent(S6w,true,1093684021)
call UnitAddAbility(S6w,1097691750)
call UnitRemoveAbility(S6w,1097691750)
call SetUnitFlyHeight(S6w,240.,240.)
call SetUnitPathing(S6w,false)
call GroupAddUnit(bt,S6w)
else
call GroupRemoveUnit(bt,S6w)
call SetUnitPathing(S6w,true)
call UnitAddAbility(S6w,1097691750)
call UnitRemoveAbility(S6w,1097691750)
call SetUnitFlyHeight(S6w,0.,240.)
set c6w=GetUnitAbilityLevel(S6w,1093684018)
call UnitRemoveAbility(S6w,1093684018)
call UnitRemoveAbility(S6w,1093684019)
call UnitRemoveAbility(S6w,1093684020)
call UnitRemoveAbility(S6w,1093684021)
call UnitRemoveAbility(S6w,1110455370)
call UnitAddAbility(S6w,1093684017)
call UnitMakeAbilityPermanent(S6w,true,1093684017)
call SetUnitAbilityLevel(S6w,1093684017,c6w)
endif
set S6w=null
set c6w=0
set S6w=null
endfunction
function o7w takes nothing returns boolean
return GetSpellAbilityId()==1095722083
endfunction
function oAw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function oBw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call SetUnitAbilityLevel(GetEnumUnit(),1093683539,GetUnitAbilityLevel(GetEnumUnit(),1093683539)+1)
if GetUnitAbilityLevel(GetEnumUnit(),1093683539)==0 then
call UnitAddAbility(GetEnumUnit(),1093683539)
call UnitMakeAbilityPermanent(GetEnumUnit(),true,1093683539)
if IsUnitInGroup(GetEnumUnit(),ns)==false then
call GroupAddUnit(ns,GetEnumUnit())
call TriggerRegisterUnitEvent(Uc,GetEnumUnit(),EVENT_UNIT_DAMAGED)
endif
endif
endif
endfunction
function cCw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function oCw takes nothing returns nothing
if cCw()then
call UnitAddAbilityBJ(1093678935,GetEnumUnit())
endif
endfunction
function oIw takes nothing returns boolean
return SubString(GetEventPlayerChatString(),0,1)=="'"
endfunction
function oQw takes nothing returns boolean
return GetFilterPlayer()==GetTriggerPlayer()
endfunction
function GCS takes string TCS returns integer
local integer YCS
set w3[MM]=TCS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set YCS=ox
set Ox[YCS]=1277
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Destructable_ScmdDataTypes.","when calling error in ScmdDataTypes, line 834")
set YCS=0
endif
else
set cx=cx-1
set YCS=Sx[cx]
set Ox[YCS]=1277
endif
set MM=MM-1
return YCS
endfunction
function GVS takes string TVS returns integer
local integer YVS
set w3[MM]=TVS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set YVS=ox
set Ox[YVS]=1282
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Handle_ScmdDataTypes.","when calling error in ScmdDataTypes, line 557")
set YVS=0
endif
else
set cx=cx-1
set YVS=Sx[cx]
set Ox[YVS]=1282
endif
set MM=MM-1
return YVS
endfunction
function HBS takes string ABS returns integer
local integer DBS
set w3[MM]=ABS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set DBS=ox
set Ox[DBS]=1288
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Region_ScmdDataTypes.","when calling error in ScmdDataTypes, line 710")
set DBS=0
endif
else
set cx=cx-1
set DBS=Sx[cx]
set Ox[DBS]=1288
endif
set MM=MM-1
return DBS
endfunction
function HCS takes string ACS returns integer
local integer DCS
set w3[MM]=ACS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set DCS=ox
set Ox[DCS]=1279
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Expression_ScmdDataTypes.","when calling error in ScmdDataTypes, line 1575")
set DCS=0
endif
else
set cx=cx-1
set DCS=Sx[cx]
set Ox[DCS]=1279
endif
set MM=MM-1
return DCS
endfunction
function HLS takes string ALS returns integer
local integer DLS
set w3[MM]=ALS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set DLS=ox
set Ox[DLS]=1291
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_ScmdDataTypes.","when calling error in ScmdDataTypes, line 414")
set DLS=0
endif
else
set cx=cx-1
set DLS=Sx[cx]
set Ox[DLS]=1291
endif
set MM=MM-1
return DLS
endfunction
function LLS takes string JLS returns integer
local integer KLS
set w3[MM]=JLS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set KLS=ox
set Ox[KLS]=1292
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_ScmdDataTypes.","when calling error in ScmdDataTypes, line 1286")
set KLS=0
endif
else
set cx=cx-1
set KLS=Sx[cx]
set Ox[KLS]=1292
endif
set MM=MM-1
return KLS
endfunction
function LXS takes string JXS returns integer
local integer KXS
set w3[MM]=JXS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set KXS=ox
set Ox[KXS]=1274
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_BuiltinSpecialForm_ScmdDataTypes.","when calling error in ScmdDataTypes, line 1540")
set KXS=0
endif
else
set cx=cx-1
set KXS=Sx[cx]
set Ox[KXS]=1274
endif
set MM=MM-1
return KXS
endfunction
function MBS takes string BBS returns integer
local integer NBS
set w3[MM]=BBS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set NBS=ox
set Ox[NBS]=1289
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_RuntimeFunction_ScmdDataTypes.","when calling error in ScmdDataTypes, line 1320")
set NBS=0
endif
else
set cx=cx-1
set NBS=Sx[cx]
set Ox[NBS]=1289
endif
set MM=MM-1
return NBS
endfunction
function MLS takes string BLS returns integer
local integer NLS
set w3[MM]=BLS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set NLS=ox
set Ox[NLS]=1271
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Agent_ScmdDataTypes.","when calling error in ScmdDataTypes, line 578")
set NLS=0
endif
else
set cx=cx-1
set NLS=Sx[cx]
set Ox[NLS]=1271
endif
set MM=MM-1
return NLS
endfunction
function MNS takes string BNS returns integer
local integer NNS
set w3[MM]=BNS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set NNS=ox
set Ox[NNS]=1296
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Symbol_ScmdDataTypes.","when calling error in ScmdDataTypes, line 244")
set NNS=0
endif
else
set cx=cx-1
set NNS=Sx[cx]
set Ox[NNS]=1296
endif
set MM=MM-1
return NNS
endfunction
function PLS takes string ULS returns integer
local integer ILS
set w3[MM]=ULS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set ILS=ox
set Ox[ILS]=1290
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_ScmdDataTypes.","when calling error in ScmdDataTypes, line 50")
set ILS=0
endif
else
set cx=cx-1
set ILS=Sx[cx]
set Ox[ILS]=1290
endif
set MM=MM-1
return ILS
endfunction
function PMS takes string UMS returns integer
local integer IMS
set w3[MM]=UMS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set IMS=ox
set Ox[IMS]=1300
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Vector_ScmdDataTypes.","when calling error in ScmdDataTypes, line 1054")
set IMS=0
endif
else
set cx=cx-1
set IMS=Sx[cx]
set Ox[IMS]=1300
endif
set MM=MM-1
return IMS
endfunction
function QBS takes string vBS returns integer
local integer mBS
set w3[MM]=vBS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set mBS=ox
set Ox[mBS]=1287
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Rect_ScmdDataTypes.","when calling error in ScmdDataTypes, line 680")
set mBS=0
endif
else
set cx=cx-1
set mBS=Sx[cx]
set Ox[mBS]=1287
endif
set MM=MM-1
return mBS
endfunction
function QCS takes string vCS returns integer
local integer mCS
set w3[MM]=vCS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set mCS=ox
set Ox[mCS]=1278
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Exception_ScmdDataTypes.","when calling error in ScmdDataTypes, line 185")
set mCS=0
endif
else
set cx=cx-1
set mCS=Sx[cx]
set Ox[mCS]=1278
endif
set MM=MM-1
return mCS
endfunction
function QVS takes string vVS returns integer
local integer mVS
set w3[MM]=vVS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set mVS=ox
set Ox[mVS]=1283
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Integer_ScmdDataTypes.","when calling error in ScmdDataTypes, line 478")
set mVS=0
endif
else
set cx=cx-1
set mVS=Sx[cx]
set Ox[mVS]=1283
endif
set MM=MM-1
return mVS
endfunction
function RMS takes string dMS returns integer
local integer fMS
set w3[MM]=dMS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set fMS=ox
set Ox[fMS]=1298
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Undefined_ScmdDataTypes.","when calling error in ScmdDataTypes, line 72")
set fMS=0
endif
else
set cx=cx-1
set fMS=Sx[cx]
set Ox[fMS]=1298
endif
set MM=MM-1
return fMS
endfunction
function RNS takes string dNS returns integer
local integer fNS
set w3[MM]=dNS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set fNS=ox
set Ox[fNS]=1294
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_SpecialEffect_ScmdDataTypes.","when calling error in ScmdDataTypes, line 594")
set fNS=0
endif
else
set cx=cx-1
set fNS=Sx[cx]
set Ox[fNS]=1294
endif
set MM=MM-1
return fNS
endfunction
function VCS takes string XCS returns integer
local integer CCS
set w3[MM]=XCS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set CCS=ox
set Ox[CCS]=1280
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Function_ScmdDataTypes.","when calling error in ScmdDataTypes, line 1302")
set CCS=0
endif
else
set cx=cx-1
set CCS=Sx[cx]
set Ox[CCS]=1280
endif
set MM=MM-1
return CCS
endfunction
function VMS takes string XMS returns integer
local integer CMS
set w3[MM]=XMS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set CMS=ox
set Ox[CMS]=1301
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_WeatherEffect_ScmdDataTypes.","when calling error in ScmdDataTypes, line 627")
set CMS=0
endif
else
set cx=cx-1
set CMS=Sx[cx]
set Ox[CMS]=1301
endif
set MM=MM-1
return CMS
endfunction
function VVS takes string XVS returns integer
local integer CVS
set w3[MM]=XVS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set CVS=ox
set Ox[CVS]=1284
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Item_ScmdDataTypes.","when calling error in ScmdDataTypes, line 809")
set CVS=0
endif
else
set cx=cx-1
set CVS=Sx[cx]
set Ox[CVS]=1284
endif
set MM=MM-1
return CVS
endfunction
function Y9i takes integer T9i returns nothing
endfunction
function F9i takes integer G9i,string g9i,integer h9i returns nothing
call Y9i(G9i)
set wL[G9i]=g9i
set uL[G9i]=h9i
endfunction
function bMS takes string OMS returns integer
local integer lMS
set w3[MM]=OMS
set MM=MM+1
if Zx==0 then
if Ux<32768 then
set Ux=Ux+1
set lMS=Ux
set Ix[lMS]=823
else
call Mau("Out of memory: Could not create TypeToken.","when calling error in ScmdDataTypes, line 23")
set lMS=0
endif
else
set Zx=Zx-1
set lMS=Ex[Zx]
set Ix[lMS]=823
endif
set MM=MM-1
return lMS
endfunction
function R9i takes string a9i,integer n9i,string d9i returns integer
local integer f9i
set w3[MM]=d9i
set MM=MM+1
set f9i=bMS("when calling alloc_TypeToken in ScmdDataTypes, line 28")
call F9i(f9i,a9i,n9i)
set MM=MM-1
return f9i
endfunction
function Y5u takes string d5u,integer f5u,string R5u returns integer
local integer T5u
set w3[MM]=R5u
set MM=MM+1
set T5u=R9i(d5u,f5u,"when calling new_TypeToken in ScmdDataTypes, line 33")
set MM=MM-1
return T5u
endfunction
function ZXS takes string WXS returns integer
local integer EXS
set w3[MM]=WXS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set EXS=ox
set Ox[EXS]=1273
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_BuiltinFunction_ScmdDataTypes.","when calling error in ScmdDataTypes, line 1516")
set EXS=0
endif
else
set cx=cx-1
set EXS=Sx[cx]
set Ox[EXS]=1273
endif
set MM=MM-1
return EXS
endfunction
function bNS takes string ONS returns integer
local integer lNS
set w3[MM]=ONS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set lNS=ox
set Ox[lNS]=1293
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Sound_ScmdDataTypes.","when calling error in ScmdDataTypes, line 651")
set lNS=0
endif
else
set cx=cx-1
set lNS=Sx[cx]
set Ox[lNS]=1293
endif
set MM=MM-1
return lNS
endfunction
function eXS takes string yXS returns integer
local integer pXS
set w3[MM]=yXS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set pXS=ox
set Ox[pXS]=1272
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Boolean_ScmdDataTypes.","when calling error in ScmdDataTypes, line 354")
set pXS=0
endif
else
set cx=cx-1
set pXS=Sx[cx]
set Ox[pXS]=1272
endif
set MM=MM-1
return pXS
endfunction
function iBS takes string sBS returns integer
local integer tBS
set w3[MM]=sBS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set tBS=ox
set Ox[tBS]=1285
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Null_ScmdDataTypes.","when calling error in ScmdDataTypes, line 87")
set tBS=0
endif
else
set cx=cx-1
set tBS=Sx[cx]
set Ox[tBS]=1285
endif
set MM=MM-1
return tBS
endfunction
function n2u takes string e2u returns nothing
local integer q2u
local integer a2u
set w3[MM]=e2u
set MM=MM+1
set q2u=0
set a2u=bj_MAX_PLAYER_SLOTS-1
loop
exitwhen q2u>a2u
set yd[q2u]=oRS("when calling new_StringHashMap in ScmdDataTypes, line 251")
set q2u=q2u+1
endloop
set MM=MM-1
endfunction
function nBS takes string qBS returns integer
local integer aBS
set w3[MM]=qBS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set aBS=ox
set Ox[aBS]=1286
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Real_ScmdDataTypes.","when calling error in ScmdDataTypes, line 423")
set aBS=0
endif
else
set cx=cx-1
set aBS=Sx[cx]
set Ox[aBS]=1286
endif
set MM=MM-1
return aBS
endfunction
function nVS takes string qVS returns integer
local integer aVS
set w3[MM]=qVS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set aVS=ox
set Ox[aVS]=1281
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Group_ScmdDataTypes.","when calling error in ScmdDataTypes, line 732")
set aVS=0
endif
else
set cx=cx-1
set aVS=Sx[cx]
set Ox[aVS]=1281
endif
set MM=MM-1
return aVS
endfunction
function oCS takes string SCS returns integer
local integer cCS
set w3[MM]=SCS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set cCS=ox
set Ox[cCS]=1276
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_ClassCastException_ScmdDataTypes.","when calling error in ScmdDataTypes, line 218")
set cCS=0
endif
else
set cx=cx-1
set cCS=Sx[cx]
set Ox[cCS]=1276
endif
set MM=MM-1
return cCS
endfunction
function oMS takes string SMS returns integer
local integer cMS
set w3[MM]=SMS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set cMS=ox
set Ox[cMS]=1297
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Trigger_ScmdDataTypes.","when calling error in ScmdDataTypes, line 895")
set cMS=0
endif
else
set cx=cx-1
set cMS=Sx[cx]
set Ox[cMS]=1297
endif
set MM=MM-1
return cMS
endfunction
function r3S takes string w3S returns integer
local integer u3S
set w3[MM]=w3S
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set u3S=ox
set Ox[u3S]=1302
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Widget_ScmdDataTypes.","when calling error in ScmdDataTypes, line 762")
set u3S=0
endif
else
set cx=cx-1
set u3S=Sx[cx]
set Ox[u3S]=1302
endif
set MM=MM-1
return u3S
endfunction
function rCS takes string wCS returns integer
local integer uCS
set w3[MM]=wCS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set uCS=ox
set Ox[uCS]=1275
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_CameraSetup_ScmdDataTypes.","when calling error in ScmdDataTypes, line 856")
set uCS=0
endif
else
set cx=cx-1
set uCS=Sx[cx]
set Ox[uCS]=1275
endif
set MM=MM-1
return uCS
endfunction
function xMS takes string kMS returns integer
local integer jMS
set w3[MM]=kMS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set jMS=ox
set Ox[jMS]=1299
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_Unit_ScmdDataTypes.","when calling error in ScmdDataTypes, line 784")
set jMS=0
endif
else
set cx=cx-1
set jMS=Sx[cx]
set Ox[jMS]=1299
endif
set MM=MM-1
return jMS
endfunction
function xNS takes string kNS returns integer
local integer jNS
set w3[MM]=kNS
set MM=MM+1
if cx==0 then
if ox<32768 then
set ox=ox+1
set jNS=ox
set Ox[jNS]=1295
else
call Mau("Out of memory: Could not create IsInstanceChecker_initialize_String_ScmdDataTypes.","when calling error in ScmdDataTypes, line 301")
set jNS=0
endif
else
set cx=cx-1
set jNS=Sx[cx]
set Ox[jNS]=1295
endif
set MM=MM-1
return jNS
endfunction
function B1u takes string q1u returns boolean
local integer a1u
local integer n1u
local integer d1u
local integer f1u
local integer R1u
local integer T1u
local integer Y1u
local integer G1u
local integer g1u
local integer h1u
local integer F1u
local integer k1u
local integer j1u
local integer x1u
local integer v1u
local integer m1u
local integer Q1u
local integer W1u
local integer E1u
local integer Z1u
local integer U1u
local integer I1u
local integer P1u
local integer A1u
local integer D1u
local integer H1u
local integer J1u
local integer K1u
local integer L1u
local integer X1u
local integer C1u
local integer V1u
set w3[MM]=q1u
set MM=MM+1
set a1u=PLS("when calling alloc_IsInstanceChecker_initialize_ScmdDataTypes in ScmdDataTypes, line 50")
set mn=Y5u("Object",a1u,"when calling initialize in ScmdDataTypes, line 50")
set n1u=RMS("when calling alloc_IsInstanceChecker_initialize_Undefined_ScmdDataTypes in ScmdDataTypes, line 72")
set Rd=Y5u("Undefined",n1u,"when calling initialize in ScmdDataTypes, line 72")
set d1u=iBS("when calling alloc_IsInstanceChecker_initialize_Null_ScmdDataTypes in ScmdDataTypes, line 87")
set sd=Y5u("Null",d1u,"when calling initialize in ScmdDataTypes, line 87")
set Nn=l5i(K3t("when calling new_Null in ScmdDataTypes, line 118"),"when calling new_SharedPointer in ScmdDataTypes, line 118")
set f1u=QCS("when calling alloc_IsInstanceChecker_initialize_Exception_ScmdDataTypes in ScmdDataTypes, line 185")
set Xn=Y5u("Exception",f1u,"when calling initialize in ScmdDataTypes, line 185")
set R1u=oCS("when calling alloc_IsInstanceChecker_initialize_ClassCastException_ScmdDataTypes in ScmdDataTypes, line 218")
set Kn=Y5u("ClassCastException",R1u,"when calling initialize in ScmdDataTypes, line 218")
set T1u=MNS("when calling alloc_IsInstanceChecker_initialize_Symbol_ScmdDataTypes in ScmdDataTypes, line 244")
set bd=Y5u("Symbol",T1u,"when calling initialize in ScmdDataTypes, line 244")
call n2u("when calling onInit in ScmdDataTypes, line 293")
set Y1u=xNS("when calling alloc_IsInstanceChecker_initialize_String_ScmdDataTypes in ScmdDataTypes, line 301")
set ld=Y5u("String",Y1u,"when calling initialize in ScmdDataTypes, line 301")
set G1u=eXS("when calling alloc_IsInstanceChecker_initialize_Boolean_ScmdDataTypes in ScmdDataTypes, line 354")
set In=Y5u("Boolean",G1u,"when calling initialize in ScmdDataTypes, line 354")
set g1u=HLS("when calling alloc_IsInstanceChecker_initialize_ScmdDataTypes in ScmdDataTypes, line 414")
set Qn=Y5u("Number",g1u,"when calling initialize in ScmdDataTypes, line 414")
set h1u=nBS("when calling alloc_IsInstanceChecker_initialize_Real_ScmdDataTypes in ScmdDataTypes, line 423")
set td=Y5u("Real",h1u,"when calling initialize in ScmdDataTypes, line 423")
set F1u=QVS("when calling alloc_IsInstanceChecker_initialize_Integer_ScmdDataTypes in ScmdDataTypes, line 478")
set ud=Y5u("Integer",F1u,"when calling initialize in ScmdDataTypes, line 478")
set k1u=GVS("when calling alloc_IsInstanceChecker_initialize_Handle_ScmdDataTypes in ScmdDataTypes, line 557")
set wd=Y5u("Handle",k1u,"when calling initialize in ScmdDataTypes, line 557")
set j1u=MLS("when calling alloc_IsInstanceChecker_initialize_Agent_ScmdDataTypes in ScmdDataTypes, line 578")
set Un=Y5u("Agent",j1u,"when calling initialize in ScmdDataTypes, line 578")
set x1u=RNS("when calling alloc_IsInstanceChecker_initialize_SpecialEffect_ScmdDataTypes in ScmdDataTypes, line 594")
set Od=Y5u("SpecialEffect",x1u,"when calling initialize in ScmdDataTypes, line 594")
set v1u=VMS("when calling alloc_IsInstanceChecker_initialize_WeatherEffect_ScmdDataTypes in ScmdDataTypes, line 627")
set Gd=Y5u("WeatherEffect",v1u,"when calling initialize in ScmdDataTypes, line 627")
set m1u=bNS("when calling alloc_IsInstanceChecker_initialize_Sound_ScmdDataTypes in ScmdDataTypes, line 651")
set od=Y5u("Sound",m1u,"when calling initialize in ScmdDataTypes, line 651")
set Q1u=QBS("when calling alloc_IsInstanceChecker_initialize_Rect_ScmdDataTypes in ScmdDataTypes, line 680")
set id=Y5u("Rect",Q1u,"when calling initialize in ScmdDataTypes, line 680")
set W1u=HBS("when calling alloc_IsInstanceChecker_initialize_Region_ScmdDataTypes in ScmdDataTypes, line 710")
set Sd=Y5u("Region",W1u,"when calling initialize in ScmdDataTypes, line 710")
set E1u=nVS("when calling alloc_IsInstanceChecker_initialize_Group_ScmdDataTypes in ScmdDataTypes, line 732")
set Mn=Y5u("Group",E1u,"when calling initialize in ScmdDataTypes, line 732")
set Z1u=r3S("when calling alloc_IsInstanceChecker_initialize_Widget_ScmdDataTypes in ScmdDataTypes, line 762")
set gd=Y5u("Widget",Z1u,"when calling initialize in ScmdDataTypes, line 762")
set U1u=xMS("when calling alloc_IsInstanceChecker_initialize_Unit_ScmdDataTypes in ScmdDataTypes, line 784")
set Td=Y5u("Unit",U1u,"when calling initialize in ScmdDataTypes, line 784")
set I1u=VVS("when calling alloc_IsInstanceChecker_initialize_Item_ScmdDataTypes in ScmdDataTypes, line 809")
set rd=Y5u("Item",I1u,"when calling initialize in ScmdDataTypes, line 809")
set P1u=GCS("when calling alloc_IsInstanceChecker_initialize_Destructable_ScmdDataTypes in ScmdDataTypes, line 834")
set Ln=Y5u("Destructable",P1u,"when calling initialize in ScmdDataTypes, line 834")
set A1u=rCS("when calling alloc_IsInstanceChecker_initialize_CameraSetup_ScmdDataTypes in ScmdDataTypes, line 856")
set Dn=Y5u("CameraSetup",A1u,"when calling initialize in ScmdDataTypes, line 856")
set Jn=0
set D1u=oMS("when calling alloc_IsInstanceChecker_initialize_Trigger_ScmdDataTypes in ScmdDataTypes, line 895")
set pd=Y5u("Trigger",D1u,"when calling initialize in ScmdDataTypes, line 895")
set ed=InitHashtable()
set qd=InitHashtable()
set ad=InitHashtable()
set nd=O7S("when calling new_Table in ScmdDataTypes, line 909")
set dd=Condition(naw)
set fd=daw
set H1u=PMS("when calling alloc_IsInstanceChecker_initialize_Vector_ScmdDataTypes in ScmdDataTypes, line 1054")
set Yd=Y5u("Vector",H1u,"when calling initialize in ScmdDataTypes, line 1054")
set J1u=LLS("when calling alloc_IsInstanceChecker_initialize_ScmdDataTypes in ScmdDataTypes, line 1286")
set Wn=Y5u("Callable",J1u,"when calling initialize in ScmdDataTypes, line 1286")
set K1u=VCS("when calling alloc_IsInstanceChecker_initialize_Function_ScmdDataTypes in ScmdDataTypes, line 1302")
call Y5u("Function",K1u,"when calling initialize in ScmdDataTypes, line 1302")
set L1u=MBS("when calling alloc_IsInstanceChecker_initialize_RuntimeFunction_ScmdDataTypes in ScmdDataTypes, line 1320")
set cd=Y5u("RuntimeFunction",L1u,"when calling initialize in ScmdDataTypes, line 1320")
set X1u=ZXS("when calling alloc_IsInstanceChecker_initialize_BuiltinFunction_ScmdDataTypes in ScmdDataTypes, line 1516")
set Pn=Y5u("BuiltinFunction",X1u,"when calling initialize in ScmdDataTypes, line 1516")
set C1u=LXS("when calling alloc_IsInstanceChecker_initialize_BuiltinSpecialForm_ScmdDataTypes in ScmdDataTypes, line 1540")
set An=Y5u("BuiltinSpecialForm",C1u,"when calling initialize in ScmdDataTypes, line 1540")
set Zn=0
set V1u=HCS("when calling alloc_IsInstanceChecker_initialize_Expression_ScmdDataTypes in ScmdDataTypes, line 1575")
set Cn=Y5u("Expression",V1u,"when calling initialize in ScmdDataTypes, line 1575")
set Vn=wJs("when calling new_HashSet in ScmdDataTypes, line 1613")
set MM=MM-1
return true
endfunction
function oRo takes nothing returns boolean
set MM=0
return B1u("ScmdDataTypes, line 1")
endfunction
function qru takes integer bru,integer yru returns integer
local integer pru=bru
local integer eru=0
if pru<0 then
set pru=-2147483648+pru
set eru=1
endif
return eru*xy[31-yru]+pru/xy[yru]
endfunction
function lru takes integer cru returns string
local string oru=""
local integer Oru=cru
loop
exitwhen not(Oru!=0)
set oru=tgu(ModuloInteger(Oru,2))+oru
set Oru=qru(Oru,1)
endloop
return oru
endfunction
function VLu takes integer CLu returns string
set t4=lru(CLu)
return t4
endfunction
function vRS takes integer xRS returns nothing
endfunction
function ARS takes integer URS,string IRS,string PRS returns nothing
call vRS(URS)
set HM[URS]=IRS
set JM[URS]=vhr(IRS)
set KM[URS]=PRS
set LM[URS]=vhr(PRS)
set XM[URS]=0
endfunction
function Vpc takes string Xpc returns integer
local integer Cpc
set w3[MM]=Xpc
set MM=MM+1
if Um==0 then
if Im<32768 then
set Im=Im+1
set Cpc=Im
set Pm[Cpc]=1642
else
call Mau("Out of memory: Could not create StringTokenizer.","when calling error in Utility, line 38")
set Cpc=0
endif
else
set Um=Um-1
set Cpc=Zm[Um]
set Pm[Cpc]=1642
endif
set MM=MM-1
return Cpc
endfunction
function ZRS takes string mRS,string QRS,string WRS returns integer
local integer ERS
set w3[MM]=WRS
set MM=MM+1
set ERS=Vpc("when calling alloc_StringTokenizer in Utility, line 46")
call ARS(ERS,mRS,QRS)
set MM=MM-1
return ERS
endfunction
function yLu takes string lLu returns integer
local integer bLu=0
loop
exitwhen not(Mhr(Fn,bLu)!=lLu)
set bLu=bLu+1
endloop
return bLu
endfunction
function jLu takes string fLu returns integer
local boolean RLu=Mhr(fLu,0)=="-"
local integer TLu=vhr(fLu)
local integer YLu=0
local integer GLu=1
local integer gLu
local integer hLu
local integer FLu
local integer kLu
if RLu then
set hLu=1
else
set hLu=0
endif
set gLu=hLu
set FLu=TLu-1
loop
exitwhen gLu>FLu
set YLu=YLu+yLu(Mhr(fLu,gLu))*GLu
set GLu=GLu*kn
set gLu=gLu+1
endloop
if RLu then
set kLu=-YLu
else
set kLu=YLu
endif
return kLu
endfunction
function XLu takes string ILu,string PLu returns real
local boolean ALu
local integer DLu
local integer HLu
local real JLu
local real KLu
local string LLu
set w3[MM]=PLu
set MM=MM+1
set ALu=Mhr(ILu,0)=="-"
set LLu=ILu
if ALu then
set HLu=1
else
set HLu=0
endif
set DLu=ZRS(Vhr(LLu,HLu),".","when calling new_StringTokenizer in SaveableHandles, line 414")
set JLu=rgu(jLu(hqo(DLu,"when calling nextToken in SaveableHandles, line 415")))+rgu(jLu(hqo(DLu,"when calling nextToken in SaveableHandles, line 415")))/1000.
call nqo(DLu,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SaveableHandles, line 416")
set MM=MM-1
if ALu then
set KLu=-JLu
else
set KLu=JLu
endif
return KLu
endfunction
function csu takes string isu returns boolean
local boolean Ssu
if isu=="1" or isu=="true" then
set Ssu=true
else
set Ssu=false
endif
return Ssu
endfunction
function iXu takes string uXu,integer rXu returns boolean
local integer sXu=vhr(uXu)
local boolean tXu
if rXu<sXu then
set tXu=csu(Mhr(uXu,sXu-rXu-1))
else
set tXu=false
endif
return tXu
endfunction
function wXu takes string MLu returns boolean
return iXu(MLu,0)
endfunction
function IXu takes string xXu,real vXu,real mXu,string QXu returns destructable
local integer WXu
local string EXu
local destructable ZXu
local string UXu
set w3[MM]=QXu
set MM=MM+1
set WXu=ZRS(xXu,jn,"when calling new_StringTokenizer in SaveableHandles, line 485")
set UXu=VLu(jLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 486")))
set EXu=UXu
set ZXu=lHu(null,imu(hqo(WXu,"when calling nextToken in SaveableHandles, line 487"),"when calling fromRawCode in SaveableHandles, line 487"),XLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 487"),"when calling decodeReal in SaveableHandles, line 487")+vXu,XLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 487"),"when calling decodeReal in SaveableHandles, line 487")+mXu,XLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 487"),"when calling decodeReal in SaveableHandles, line 487"),XLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 487"),"when calling decodeReal in SaveableHandles, line 487"),XLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 487"),"when calling decodeReal in SaveableHandles, line 487"),jLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 487")))
call Weu(ZXu,XLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 488"),"when calling decodeReal in SaveableHandles, line 488"))
call Geu(ZXu,XLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 489"),"when calling decodeReal in SaveableHandles, line 489"))
call deu(ZXu,XLu(hqo(WXu,"when calling nextToken in SaveableHandles, line 490"),"when calling decodeReal in SaveableHandles, line 490"))
call peu(ZXu,wXu(EXu))
call nqo(WXu,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SaveableHandles, line 492")
set MM=MM-1
set anw=ZXu
set ZXu=null
return anw
endfunction
function Xar takes integer Par,string Aar,string Dar returns nothing
local real Har
local real Jar
local real Kar
local real Lar
set w3[MM]=Dar
set MM=MM+1
set Kar=JGr(Par,"when calling getSelectedOrigin in SotFRP_SaveLoad, line 31")
set Lar=e4
set Har=Kar
set Jar=Lar
set ff[Par]=Har
set Rf[Par]=Jar
call IXu(Aar,ff[Par],Rf[Par],"when calling decodeDestructable in SotFRP_SaveLoad, line 34")
set MM=MM-1
endfunction
function FZi takes integer YZi,integer GZi,string gZi,string hZi returns nothing
set w3[MM]=hZi
set MM=MM+1
call Xar(GZi,gZi,"when calling processDestructables in SotFRP_SaveLoad, line 122")
set MM=MM-1
endfunction
function TXu takes string RXu returns boolean
return iXu(RXu,3)
endfunction
function fXu takes string dXu returns boolean
return iXu(dXu,2)
endfunction
function gXu takes string YXu,integer GXu returns boolean
return iXu(YXu,4+GXu)
endfunction
function nXu takes string aXu returns boolean
return iXu(aXu,1)
endfunction
function pXu takes integer yXu returns string
set S4=lru(yXu)
return S4
endfunction
function qXu takes string eXu returns boolean
return iXu(eXu,0)
endfunction
function SVu takes integer iVu returns string
set c4=lru(iVu)
return c4
endfunction
function eVu takes string pVu returns boolean
return iXu(pVu,2)
endfunction
function lVu takes string OVu returns boolean
return iXu(OVu,0)
endfunction
function tVu takes string sVu returns string
return PFr(PFr(PFr(PFr(PFr(PFr(PFr(PFr(sVu,"/v","|"),"/p",":"),"/c","|c"),"/r","|r"),"/n","|n"),"/a","&"),"/b","\\"),"/s","/")
endfunction
function yVu takes string bVu returns boolean
return iXu(bVu,1)
endfunction
function VVu takes string QVu,real WVu,real EVu,boolean ZVu,string UVu,string IVu returns item
local integer PVu
local string AVu
local integer DVu
local real HVu
local real JVu
local real KVu
local real LVu
local item XVu
local string CVu
set w3[MM]=IVu
set MM=MM+1
set PVu=ZRS(QVu,UVu,"when calling new_StringTokenizer in SaveableHandles, line 776")
set CVu=SVu(jLu(hqo(PVu,"when calling nextToken in SaveableHandles, line 777")))
set AVu=CVu
set DVu=imu(hqo(PVu,"when calling nextToken in SaveableHandles, line 778"),"when calling fromRawCode in SaveableHandles, line 778")
if ZVu then
set JVu=XLu(hqo(PVu,"when calling nextToken in SaveableHandles, line 779"),"when calling decodeReal in SaveableHandles, line 779")+WVu
else
set JVu=0.
endif
set HVu=JVu
if ZVu then
set LVu=XLu(hqo(PVu,"when calling nextToken in SaveableHandles, line 780"),"when calling decodeReal in SaveableHandles, line 780")+EVu
else
set LVu=0.
endif
set KVu=LVu
set XVu=CreateItem(DVu,HVu,KVu)
call chu(XVu,lVu(AVu))
call mHu(XVu,yVu(AVu))
call hHu(XVu,eVu(AVu))
call ahu(XVu,jLu(hqo(PVu,"when calling nextToken in SaveableHandles, line 785")))
call Zrs(XVu,XLu(hqo(PVu,"when calling nextToken in SaveableHandles, line 786"),"when calling decodeReal in SaveableHandles, line 786"))
call Thu(XVu,tVu(hqo(PVu,"when calling nextToken in SaveableHandles, line 787")))
call Fhu(XVu,tVu(hqo(PVu,"when calling nextToken in SaveableHandles, line 788")))
call mhu(XVu,tVu(hqo(PVu,"when calling nextToken in SaveableHandles, line 789")))
call Uhu(XVu,tVu(hqo(PVu,"when calling nextToken in SaveableHandles, line 790")))
call Hhu(XVu,tVu(hqo(PVu,"when calling nextToken in SaveableHandles, line 791")))
call nqo(PVu,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SaveableHandles, line 792")
set MM=MM-1
set fnw=XVu
set XVu=null
return fnw
endfunction
function rVu takes string MCu,string wVu returns item
local item uVu
set w3[MM]=wVu
set MM=MM+1
set uVu=VVu(MCu,0.,0.,false,xn,"when calling decodeItem in SaveableHandles, line 801")
set MM=MM-1
set dnw=uVu
set uVu=null
return dnw
endfunction
function NCu takes string cCu,real oCu,real OCu,player lCu,string bCu returns unit
local integer yCu
local string pCu
local integer eCu
local real qCu
local real aCu
local unit nCu
local string dCu
local string fCu
local string RCu
local integer TCu
local string YCu
local string GCu
local string gCu
local string hCu
local string FCu
local integer kCu
local integer jCu
local string xCu
local item vCu
local string mCu
local integer QCu
local integer WCu
local integer ECu
local integer ZCu
local integer UCu
local integer ICu
local integer PCu
local string ACu
local string DCu
local integer HCu
local integer JCu
local integer KCu
local integer LCu
local integer XCu
local string CCu
local string VCu
local string BCu
set w3[MM]=bCu
set MM=MM+1
set yCu=ZRS(cCu,jn,"when calling new_StringTokenizer in SaveableHandles, line 614")
set BCu=pXu(jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 615")))
set pCu=BCu
set eCu=imu(hqo(yCu,"when calling nextToken in SaveableHandles, line 616"),"when calling fromRawCode in SaveableHandles, line 616")
if TXu(pCu)!=IsHeroUnitId(eCu)then
call nqo(yCu,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SaveableHandles, line 618")
set MM=MM-1
set nCu=null
set vCu=null
return null
endif
set qCu=XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 620"),"when calling decodeReal in SaveableHandles, line 620")+oCu
set aCu=XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 621"),"when calling decodeReal in SaveableHandles, line 621")+OCu
set nCu=CreateUnit(lCu,eCu,qCu,aCu,XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 622"),"when calling decodeReal in SaveableHandles, line 622"))
if qXu(pCu)then
call L5r(nCu,Sy)
call G8s(nCu,Sy,true)
endif
if gXu(pCu,0)then
call cKu(nCu,1,false)
elseif gXu(pCu,1)then
call cKu(nCu,1,true)
endif
call cKu(nCu,2,gXu(pCu,2))
set dCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 631")
if dCu!=vn then
call CJu(nCu,1.)
call CJu(nCu,0.)
call CJu(nCu,XLu(dCu,"when calling decodeReal in SaveableHandles, line 635"))
endif
set fCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 636")
if fCu!=vn then
call KHu(nCu,CWu(jLu(fCu)))
endif
set RCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 639")
if RCu!=vn then
set TCu=ZRS(RCu,xn,"when calling new_StringTokenizer in SaveableHandles, line 641")
call dJu(nCu,jLu(hqo(TCu,"when calling nextToken in SaveableHandles, line 642")),jLu(hqo(TCu,"when calling nextToken in SaveableHandles, line 642")),jLu(hqo(TCu,"when calling nextToken in SaveableHandles, line 642")),jLu(hqo(TCu,"when calling nextToken in SaveableHandles, line 642")))
call nqo(TCu,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SaveableHandles, line 643")
endif
set YCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 644")
if YCu!=vn then
call cJu(nCu,XLu(YCu,"when calling decodeReal in SaveableHandles, line 646"))
endif
call QJu(nCu,XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 647"),"when calling decodeReal in SaveableHandles, line 647"))
call N9s(nCu,XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 648"),"when calling decodeReal in SaveableHandles, line 648"))
set GCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 649")
if GCu!=vn then
call AJu(nCu,XLu(GCu,"when calling decodeReal in SaveableHandles, line 651"))
endif
set gCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 652")
if gCu!=vn then
call AJu(nCu,XLu(gCu,"when calling decodeReal in SaveableHandles, line 654"))
endif
set hCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 655")
if hCu!=null then
call D9s(nCu,twu(XLu(hCu,"when calling decodeReal in SaveableHandles, line 657")))
if TXu(pCu)then
call SetHeroXP(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 659")),false)
call Q6r(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 660")))
call Z6r(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 661")))
call P6r(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 662")))
endif
set FCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 663")
if FCu!=null then
call ous(nCu,jLu(FCu))
set kCu=0
set jCu=H7s(nCu)-1
loop
exitwhen kCu>jCu
set xCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 667")
if xCu!=vn then
set vCu=rVu(xCu,"when calling decodeItem in SaveableHandles, line 669")
call V5r(nCu,vCu)
call H8s(nCu,vCu,kCu)
endif
set kCu=kCu+1
endloop
set mCu=hqo(yCu,"when calling nextToken in SaveableHandles, line 672")
if mCu!=null then
set QCu=0
set WCu=jLu(mCu)-1
loop
exitwhen QCu>WCu
call DKu(nCu,imu(hqo(yCu,"when calling nextToken in SaveableHandles, line 675"),"when calling fromRawCode in SaveableHandles, line 675"))
set QCu=QCu+1
endloop
set ECu=0
set ZCu=jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 676"))-1
loop
exitwhen ECu>ZCu
set UCu=ZRS(hqo(yCu,"when calling nextToken in SaveableHandles, line 677"),xn,"when calling new_StringTokenizer in SaveableHandles, line 677")
set ICu=imu(hqo(UCu,"when calling nextToken in SaveableHandles, line 678"),"when calling fromRawCode in SaveableHandles, line 678")
set PCu=jLu(hqo(UCu,"when calling nextToken in SaveableHandles, line 679"))
call wLu(nCu,ICu,PCu)
set ACu=hqo(UCu,"when calling nextToken in SaveableHandles, line 681")
if ACu!=vn then
call BlzSetUnitAbilityManaCost(nCu,ICu,PCu,jLu(ACu))
endif
set DCu=hqo(UCu,"when calling nextToken in SaveableHandles, line 684")
if DCu!=vn then
call j_s(nCu,ICu,PCu,XLu(DCu,"when calling decodeReal in SaveableHandles, line 686"))
endif
call nqo(UCu,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SaveableHandles, line 687")
set ECu=ECu+1
endloop
set HCu=0
set JCu=jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 688"))-1
loop
exitwhen HCu>JCu
set KCu=ZRS(hqo(yCu,"when calling nextToken in SaveableHandles, line 689"),xn,"when calling new_StringTokenizer in SaveableHandles, line 689")
set LCu=imu(hqo(KCu,"when calling nextToken in SaveableHandles, line 690"),"when calling fromRawCode in SaveableHandles, line 690")
call mKu(nCu,LCu)
set XCu=jLu(hqo(KCu,"when calling nextToken in SaveableHandles, line 692"))
call wLu(nCu,LCu,XCu)
set CCu=hqo(KCu,"when calling nextToken in SaveableHandles, line 694")
if CCu!=vn then
call BlzSetUnitAbilityManaCost(nCu,LCu,XCu,jLu(CCu))
endif
set VCu=hqo(KCu,"when calling nextToken in SaveableHandles, line 697")
if VCu!=vn then
call j_s(nCu,LCu,XCu,XLu(VCu,"when calling decodeReal in SaveableHandles, line 699"))
endif
call nqo(KCu,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SaveableHandles, line 700")
set HCu=HCu+1
endloop
call v0s(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 701")))
call hqo(yCu,"when calling nextToken in SaveableHandles, line 702")
call O9s(nCu,XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 703"),"when calling decodeReal in SaveableHandles, line 703"))
call Z0s(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 704")))
call hqo(yCu,"when calling nextToken in SaveableHandles, line 705")
call f9s(nCu,XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 706"),"when calling decodeReal in SaveableHandles, line 706"))
call B0s(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 707")),1)
call t_s(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 708")),1)
call b_s(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 709")),1)
call d_s(nCu,XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 710"),"when calling decodeReal in SaveableHandles, line 710"),1)
call B0s(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 711")),2)
call t_s(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 712")),2)
call b_s(nCu,jLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 713")),2)
call d_s(nCu,XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 714"),"when calling decodeReal in SaveableHandles, line 714"),2)
call G_s(nCu,XLu(hqo(yCu,"when calling nextToken in SaveableHandles, line 715"),"when calling decodeReal in SaveableHandles, line 715"))
if TXu(pCu)then
call H0s(nCu,tVu(hqo(yCu,"when calling nextToken in SaveableHandles, line 717")))
endif
call P0s(nCu,tVu(hqo(yCu,"when calling nextToken in SaveableHandles, line 718")))
endif
endif
endif
call nqo(yCu,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SaveableHandles, line 719")
call UHu(nCu,fXu(pCu))
if nXu(pCu)then
call k8s(nCu)
endif
call a0s(nCu,qCu,aCu)
set MM=MM-1
set nnw=nCu
set nCu=null
set vCu=null
return nnw
endfunction
function Iar takes integer xar,string mar,string Qar returns nothing
local real War
local real Ear
local real Zar
local real Uar
set w3[MM]=Qar
set MM=MM+1
set Zar=JGr(xar,"when calling getSelectedOrigin in SotFRP_SaveLoad, line 25")
set Uar=e4
set War=Zar
set Ear=Uar
set ff[xar]=War
set Rf[xar]=Ear
call NCu(mar,ff[xar],Rf[xar],pa[xar],"when calling decodeUnit in SotFRP_SaveLoad, line 28")
set MM=MM-1
endfunction
function TZi takes integer nZi,integer dZi,string fZi,string RZi returns nothing
set w3[MM]=RZi
set MM=MM+1
call Iar(dZi,fZi,"when calling processUnits in SotFRP_SaveLoad, line 121")
set MM=MM-1
endfunction
function iqr takes string Ber,string Ner returns real
local boolean Mer
local integer wqr
local integer uqr
local real rqr
local real sqr
local string tqr
set w3[MM]=Ner
set MM=MM+1
set Mer=Mhr(Ber,0)=="-"
set tqr=Ber
if Mer then
set uqr=1
else
set uqr=0
endif
set wqr=ZRS(Vhr(tqr,uqr),".","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 53")
set rqr=rgu(Ver(hqo(wqr,"when calling nextToken in SotFRP_LegacyLoad, line 54")))+rgu(Ver(hqo(wqr,"when calling nextToken in SotFRP_LegacyLoad, line 54")))/1000.
call nqo(wqr,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 55")
set MM=MM-1
if Mer then
set sqr=-rqr
else
set sqr=rqr
endif
return sqr
endfunction
function Hqr takes string Yqr,real Gqr,real gqr,player hqr,string Fqr returns unit
local integer kqr
local integer jqr
local integer xqr
local real vqr
local real mqr
local real Qqr
local unit Wqr
local string Eqr
local string Zqr
local string Uqr
local integer Iqr
local real Pqr
local string Aqr
local integer Dqr
set w3[MM]=Fqr
set MM=MM+1
set kqr=Ver(Mhr(Yqr,0))
set jqr=ZRS(Vhr(Yqr,1),"&","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 79")
set xqr=Ver(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 80"))
set vqr=iqr(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 81"),"when calling decodeReal in SotFRP_LegacyLoad, line 81")+Gqr
set mqr=iqr(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 82"),"when calling decodeReal in SotFRP_LegacyLoad, line 82")+gqr
set Qqr=iqr(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 83"),"when calling decodeReal in SotFRP_LegacyLoad, line 83")
set Wqr=I5r(hqr,xqr,vqr,mqr,wwu(Qqr))
set Eqr=hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 85")
if Eqr!="*" then
call KHu(Wqr,CWu(Ver(Eqr)))
endif
set Zqr=hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 88")
if Zqr!="*" then
call cJu(Wqr,iqr(Zqr,"when calling decodeReal in SotFRP_LegacyLoad, line 90"))
endif
set Uqr=hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 91")
if Uqr!="*" then
set Iqr=ZRS(Uqr,":","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 93")
call dJu(Wqr,Ver(hqo(Iqr,"when calling nextToken in SotFRP_LegacyLoad, line 94")),Ver(hqo(Iqr,"when calling nextToken in SotFRP_LegacyLoad, line 94")),Ver(hqo(Iqr,"when calling nextToken in SotFRP_LegacyLoad, line 94")),Ver(hqo(Iqr,"when calling nextToken in SotFRP_LegacyLoad, line 94")))
call nqo(Iqr,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 95")
endif
set Pqr=iqr(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 96"),"when calling decodeReal in SotFRP_LegacyLoad, line 96")
if Pqr!=t7s(Wqr)then
call CJu(Wqr,Pqr)
endif
set Aqr=hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 99")
if Aqr!="*" then
call AJu(Wqr,iqr(Aqr,"when calling decodeReal in SotFRP_LegacyLoad, line 101"))
endif
call N9s(Wqr,iqr(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 102"),"when calling decodeReal in SotFRP_LegacyLoad, line 102"))
call QJu(Wqr,iqr(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 103"),"when calling decodeReal in SotFRP_LegacyLoad, line 103"))
call v0s(Wqr,Ver(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 104")))
call O9s(Wqr,e7s(Wqr))
call Z0s(Wqr,Ver(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 106")))
call f9s(Wqr,a7s(Wqr))
set Dqr=Ver(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 108"))
call B0s(Wqr,Dqr,1)
call B0s(Wqr,Dqr,2)
call G_s(Wqr,iqr(hqo(jqr,"when calling nextToken in SotFRP_LegacyLoad, line 111"),"when calling decodeReal in SotFRP_LegacyLoad, line 111"))
call nqo(jqr,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 112")
if kqr==cf or kqr==Of then
call L5r(Wqr,Sy)
call G8s(Wqr,Sy,true)
else
call I8s(Wqr,Sy)
endif
if kqr==of or kqr==Of then
call k8s(Wqr)
endif
call a0s(Wqr,vqr,mqr)
set MM=MM-1
set Ynw=Wqr
set Wqr=null
return Ynw
endfunction
function gRS takes integer GRS returns boolean
return XM[GRS]<=JM[GRS]
endfunction
function Tqo takes integer dqo,string fqo returns boolean
local boolean Rqo
set w3[MM]=fqo
set MM=MM+1
if Pm[dqo]==0 then
if dqo==0 then
call Mau("Nullpointer exception when calling StringTokenizer.hasMoreTokens","when calling error in Utility, line 64")
else
call Mau("Called StringTokenizer.hasMoreTokens on invalid object.","when calling error in Utility, line 64")
endif
endif
set Rqo=gRS(dqo)
set MM=MM-1
return Rqo
endfunction
function Tqr takes string Sqr,real cqr,real oqr,player Oqr,string lqr returns destructable
local integer bqr
local integer yqr
local integer pqr
local real eqr
local real qqr
local real aqr
local real nqr
local real dqr
local integer fqr
local destructable Rqr
set w3[MM]=lqr
set MM=MM+1
set bqr=Ver(Mhr(Sqr,0))
set yqr=ZRS(Vhr(Sqr,1),"&","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 60")
set pqr=Ver(hqo(yqr,"when calling nextToken in SotFRP_LegacyLoad, line 61"))
set eqr=iqr(hqo(yqr,"when calling nextToken in SotFRP_LegacyLoad, line 62"),"when calling decodeReal in SotFRP_LegacyLoad, line 62")+cqr
set qqr=iqr(hqo(yqr,"when calling nextToken in SotFRP_LegacyLoad, line 63"),"when calling decodeReal in SotFRP_LegacyLoad, line 63")+oqr
set aqr=iqr(hqo(yqr,"when calling nextToken in SotFRP_LegacyLoad, line 64"),"when calling decodeReal in SotFRP_LegacyLoad, line 64")
set nqr=iqr(hqo(yqr,"when calling nextToken in SotFRP_LegacyLoad, line 65"),"when calling decodeReal in SotFRP_LegacyLoad, line 65")
set dqr=iqr(hqo(yqr,"when calling nextToken in SotFRP_LegacyLoad, line 66"),"when calling decodeReal in SotFRP_LegacyLoad, line 66")
set fqr=Ver(hqo(yqr,"when calling nextToken in SotFRP_LegacyLoad, line 67"))
call nqo(yqr,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 68")
set Rqr=lHu(Oqr,pqr,eqr,qqr,aqr,nqr,dqr,fqr)
if bqr==tf then
call peu(Rqr,true)
endif
set MM=MM-1
set Tnw=Rqr
set Rqr=null
return Tnw
endfunction
function lar takes unit uar,string rar,string sar returns nothing
local integer tar
local integer iar
local integer Sar
local integer car
local integer oar
local real Oar
set w3[MM]=sar
set MM=MM+1
set tar=ZRS(Vhr(rar,1),"&","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 157")
set iar=qUu(e7s(uar))
set Sar=qUu(a7s(uar))
set car=L0s(uar,1)
set oar=L0s(uar,2)
set Oar=R_s(uar)
call SetHeroXP(uar,Ver(hqo(tar,"when calling nextToken in SotFRP_LegacyLoad, line 163")),false)
call Q6r(uar,Ver(hqo(tar,"when calling nextToken in SotFRP_LegacyLoad, line 164")))
call Z6r(uar,Ver(hqo(tar,"when calling nextToken in SotFRP_LegacyLoad, line 165")))
call P6r(uar,Ver(hqo(tar,"when calling nextToken in SotFRP_LegacyLoad, line 166")))
call v0s(uar,iar)
call Z0s(uar,Sar)
call B0s(uar,car,1)
call B0s(uar,oar,2)
call G_s(uar,Oar)
call nqo(tar,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 172")
set MM=MM-1
endfunction
function war takes unit Jqr,string Kqr,string Lqr returns nothing
local integer Xqr
local integer Cqr
local string Vqr
local integer Bqr
local integer Nqr
local integer Mqr
set w3[MM]=Lqr
set MM=MM+1
set Xqr=ZRS(Kqr,"|","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 124")
loop
exitwhen not Tqo(Xqr,"when calling hasMoreTokens in SotFRP_LegacyLoad, line 125")
set Vqr=hqo(Xqr,"when calling nextToken in SotFRP_LegacyLoad, line 127")
set Bqr=Ver(Mhr(Vqr,0))
if Bqr==lf then
set Cqr=0
elseif Bqr==bf then
set Cqr=1
elseif Bqr==yf then
set Cqr=2
elseif Bqr==pf then
set Cqr=3
elseif Bqr==ef then
set Cqr=4
else
set Cqr=-1
endif
if Cqr==-1 then
set Mqr=ZRS(Vhr(Vqr,1),":","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 143")
set Nqr=Ver(hqo(Mqr,"when calling nextToken in SotFRP_LegacyLoad, line 144"))
set Cqr=Ver(hqo(Mqr,"when calling nextToken in SotFRP_LegacyLoad, line 145"))
call nqo(Mqr,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 146")
else
set Nqr=Ver(Vhr(Vqr,1))
endif
if Cqr==0 then
call DKu(Jqr,Cqr)
else
call mKu(Jqr,Nqr)
call wLu(Jqr,Nqr,Cqr)
endif
endloop
call nqo(Xqr,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 154")
set MM=MM-1
endfunction
function Ger takes integer per,string eer,string qer returns nothing
local real aer
local real ner
local integer der
local string fer
local integer Rer
local real Ter
local real Yer
set w3[MM]=qer
set MM=MM+1
set Ter=JGr(per,"when calling getSelectedOrigin in SotFRP_LegacyLoad, line 193")
set Yer=e4
set aer=Ter
set ner=Yer
set Md[per]=aer
set wf[per]=ner
set der=ZRS(eer,"|","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 196")
loop
exitwhen not Tqo(der,"when calling hasMoreTokens in SotFRP_LegacyLoad, line 197")
set fer=hqo(der,"when calling nextToken in SotFRP_LegacyLoad, line 198")
set Rer=Ver(Mhr(fer,0))
if Rer==sf or Rer==tf then
call Tqr(fer,Md[per],wf[per],pa[per],"when calling decodeDestructable in SotFRP_LegacyLoad, line 201")
elseif Rer==Sf or Rer==cf or Rer==Of or Rer==of then
set Nd[per]=Hqr(fer,Md[per],wf[per],pa[per],"when calling decodeUnit in SotFRP_LegacyLoad, line 203")
elseif Rer>=lf and Rer<=qf then
call war(Nd[per],fer,"when calling decodeUnitAbilities in SotFRP_LegacyLoad, line 205")
elseif Rer==af then
call lar(Nd[per],fer,"when calling decodeUnitHeroData in SotFRP_LegacyLoad, line 207")
endif
endloop
call nqo(der,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 208")
set MM=MM-1
endfunction
function VEi takes integer KEi,integer LEi,string XEi,string CEi returns nothing
set w3[MM]=CEi
set MM=MM+1
call Ger(LEi,XEi,"when calling processHandles in SotFRP_LegacyLoad, line 227")
set MM=MM-1
endfunction
function rBu takes string BVu,real NVu,real MVu,string wBu returns item
local item uBu
set w3[MM]=wBu
set MM=MM+1
set uBu=VVu(BVu,NVu,MVu,true,jn,"when calling decodeItem in SaveableHandles, line 797")
set MM=MM-1
set Rnw=uBu
set uBu=null
return Rnw
endfunction
function rnr takes integer Car,string Var,string Bar returns nothing
local real Nar
local real Mar
local real wnr
local real unr
set w3[MM]=Bar
set MM=MM+1
set wnr=JGr(Car,"when calling getSelectedOrigin in SotFRP_SaveLoad, line 37")
set unr=e4
set Nar=wnr
set Mar=unr
set ff[Car]=Nar
set Rf[Car]=Mar
call rBu(Var,ff[Car],Rf[Car],"when calling decodeItem in SotFRP_SaveLoad, line 40")
set MM=MM-1
endfunction
function mZi takes integer kZi,integer jZi,string xZi,string vZi returns nothing
set w3[MM]=vZi
set MM=MM+1
call rnr(jZi,xZi,"when calling processItems in SotFRP_SaveLoad, line 123")
set MM=MM-1
endfunction
function Gtc takes string Ttc returns integer
local integer Ytc
set w3[MM]=Ttc
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set Ytc=ZG
set UG[Ytc]=693
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_SotFRP_LegacyLoad.","when calling error in SotFRP_LegacyLoad, line 221")
set Ytc=0
endif
else
set EG=EG-1
set Ytc=WG[EG]
set UG[Ytc]=693
endif
set MM=MM-1
return Ytc
endfunction
function Eer takes integer ger,string her,string Fer returns nothing
local real ker
local real jer
local integer xer
local integer ver
local integer mer
local real Qer
local real Wer
set w3[MM]=Fer
set MM=MM+1
set Qer=JGr(ger,"when calling getSelectedOrigin in SotFRP_LegacyLoad, line 211")
set Wer=e4
set ker=Qer
set jer=Wer
set Md[ger]=ker
set wf[ger]=jer
if her=="TlRFMllqRmlPVGN4WkRrd1ptUTRNVFZtT0RnNVptUTFNR0ZqTkdVellUSmhPR1F3WkdNMVlqSTROek0yWTJVd056UTBNV0ZsWmpNNE4yTmtZalUwT1RZNFlUZzJOalp" then
set MM=MM-1
return
endif
if Mhr(her,0)!="t" then
set MM=MM-1
return
endif
set xer=ZRS(Vhr(her,1),":","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 218")
loop
exitwhen not Tqo(xer,"when calling hasMoreTokens in SotFRP_LegacyLoad, line 219")
set ver=ZRS(hqo(xer,"when calling nextToken in SotFRP_LegacyLoad, line 220"),"&","when calling new_StringTokenizer in SotFRP_LegacyLoad, line 220")
set mer=Gtc("when calling alloc_CallbackSingle_nullTimer_SotFRP_LegacyLoad in SotFRP_LegacyLoad, line 221")
call KGs(mer)
set ZL[mer]=ger
set UL[mer]=ver
call Cou(mer,"when calling nullTimer in SotFRP_LegacyLoad, line 221")
endloop
call nqo(xer,"when calling dispatch_StringTokenizer_destroyStringTokenizer in SotFRP_LegacyLoad, line 224")
set MM=MM-1
endfunction
function uZi takes integer BEi,integer NEi,string MEi,string wZi returns nothing
set w3[MM]=wZi
set MM=MM+1
call Eer(NEi,MEi,"when calling processTerrain in SotFRP_LegacyLoad, line 228")
set MM=MM-1
endfunction
function Q_o takes integer j_o,integer x_o,string v_o,string m_o returns nothing
set w3[MM]=m_o
set MM=MM+1
if Nx[j_o]==0 then
if j_o==0 then
call Mau("Nullpointer exception when calling InputStreamProcessor.call","when calling error in ScmdReader, line 13")
else
call Mau("Called InputStreamProcessor.call on invalid object.","when calling error in ScmdReader, line 13")
endif
endif
if Nx[j_o]<=1243 then
if Nx[j_o]<=1242 then
if Nx[j_o]<=1241 then
call VEi(j_o,x_o,v_o,"when calling call_registerInputStreamProcessor_SotFRP_LegacyLoad in ScmdReader, line 13")
else
call uZi(j_o,x_o,v_o,"when calling call_registerInputStreamProcessor_SotFRP_LegacyLoad in ScmdReader, line 13")
endif
else
call TZi(j_o,x_o,v_o,"when calling call_registerInputStreamProcessor_SotFRP_SaveLoad in ScmdReader, line 13")
endif
elseif Nx[j_o]<=1244 then
call FZi(j_o,x_o,v_o,"when calling call_registerInputStreamProcessor_SotFRP_SaveLoad in ScmdReader, line 13")
else
call mZi(j_o,x_o,v_o,"when calling call_registerInputStreamProcessor_SotFRP_SaveLoad in ScmdReader, line 13")
endif
set MM=MM-1
endfunction
function MxS takes integer BxS,string NxS returns nothing
set w3[MM]=NxS
set MM=MM+1
if fF[BxS]==0 then
call Mau("Double free: object of type FoldClosure","when calling error in LinkedList, line 523")
else
set aF[nF]=BxS
set nF=nF+1
set fF[BxS]=0
endif
set MM=MM-1
endfunction
function j3s takes integer F3s,string k3s returns nothing
set w3[MM]=k3s
set MM=MM+1
call MxS(F3s,"when calling dealloc_FoldClosure in LinkedList, line 523")
set MM=MM-1
endfunction
function dAc takes integer aAc,string nAc returns nothing
set w3[MM]=nAc
set MM=MM+1
if fF[aAc]==0 then
if aAc==0 then
call Mau("Nullpointer exception when calling FoldClosure.FoldClosure","when calling error in LinkedList, line 523")
else
call Mau("Called FoldClosure.FoldClosure on invalid object.","when calling error in LinkedList, line 523")
endif
endif
call j3s(aAc,"when calling destroyFoldClosure in LinkedList, line 523")
set MM=MM-1
endfunction
function Yat takes integer fat,string Rat,string Tat returns string
return Tat+" at |cff5394ec"+Rat+"|r"
endfunction
function PPu takes integer WPu,integer EPu,integer ZPu,string UPu returns integer
local integer IPu
set w3[MM]=UPu
set MM=MM+1
set IPu=Rvr(Yat(WPu,gvr(EPu,"when calling stringFromIndex in SLangChatSystem, line 178"),gvr(ZPu,"when calling stringFromIndex in SLangChatSystem, line 178")),"when calling stringToIndex in SLangChatSystem, line 178")
set MM=MM-1
return IPu
endfunction
function J4s takes integer A4s,integer D4s,string H4s returns string
return H4s+tgu(D4s)+","
endfunction
function fku takes integer eku,integer qku,integer aku,string nku returns integer
local integer dku
set w3[MM]=nku
set MM=MM+1
set dku=Rvr(J4s(eku,qku,gvr(aku,"when calling stringFromIndex in LinkedList, line 364")),"when calling stringToIndex in LinkedList, line 364")
set MM=MM-1
return dku
endfunction
function gAc takes integer fAc,integer RAc,integer TAc,string YAc returns integer
local integer GAc
set w3[MM]=YAc
set MM=MM+1
if fF[fAc]==0 then
if fAc==0 then
call Mau("Nullpointer exception when calling FoldClosure.run","when calling error in LinkedList, line 524")
else
call Mau("Called FoldClosure.run on invalid object.","when calling error in LinkedList, line 524")
endif
endif
if fF[fAc]<=759 then
set GAc=fku(fAc,RAc,TAc,"when calling run_wrapper in LinkedList, line 524")
else
set GAc=PPu(fAc,RAc,TAc,"when calling run_wrapper in LinkedList, line 524")
endif
set MM=MM-1
return GAc
endfunction
function G4s takes integer n4s,integer d4s,integer f4s,string R4s returns integer
local integer T4s
local integer Y4s
set w3[MM]=R4s
set MM=MM+1
set T4s=d4s
set Y4s=qP[RP[n4s]]
loop
exitwhen not(Y4s!=RP[n4s])
set T4s=gAc(f4s,pP[Y4s],T4s,"when calling run in LinkedList, line 296")
set Y4s=qP[Y4s]
endloop
call dAc(f4s,"when calling dispatch_FoldClosure_destroyFoldClosure in LinkedList, line 298")
set MM=MM-1
return T4s
endfunction
function EDc takes integer xDc,integer vDc,integer mDc,string QDc returns integer
local integer WDc
set w3[MM]=QDc
set MM=MM+1
if WF[xDc]==0 then
if xDc==0 then
call Mau("Nullpointer exception when calling LinkedList.foldl","when calling error in LinkedList, line 292")
else
call Mau("Called LinkedList.foldl on invalid object.","when calling error in LinkedList, line 292")
endif
endif
set WDc=G4s(xDc,vDc,mDc,"when calling foldl in LinkedList, line 292")
set MM=MM-1
return WDc
endfunction
function xUS takes string kUS returns integer
local integer jUS
set w3[MM]=kUS
set MM=MM+1
if nF==0 then
if dF<32768 then
set dF=dF+1
set jUS=dF
set fF[jUS]=760
else
call Mau("Out of memory: Could not create FoldClosure_foldl_send_registerExceptionHandler_SLangChatSystem.","when calling error in SLangChatSystem, line 178")
set jUS=0
endif
else
set nF=nF-1
set jUS=aF[nF]
set fF[jUS]=760
endif
set MM=MM-1
return jUS
endfunction
function dat takes integer cat,integer oat,string Oat,integer lat,string bat returns nothing
local integer yat
local string pat
local integer eat
local integer qat
local integer aat
local integer nat
set w3[MM]=bat
set MM=MM+1
set aat=Xa[oat]
set nat=oat
if lat!=0 then
set eat=lat
set qat=Rvr("","when calling stringToIndex in SLangChatSystem, line 178")
set yat=xUS("when calling alloc_FoldClosure_foldl_send_registerExceptionHandler_SLangChatSystem in SLangChatSystem, line 178")
set pat=gvr(EDc(eat,qat,yat,"when calling foldl in SLangChatSystem, line 178"),"when calling stringFromIndex in SLangChatSystem, line 178")
else
set pat=""
endif
call a3c(aat,nat,"|cFFcc666eException|r"+pat+": "+Oat,pa[oat],"when calling send in SLangChatSystem, line 178")
set MM=MM-1
endfunction
function w8o takes integer C7o,integer V7o,string B7o,integer N7o,string M7o returns nothing
set w3[MM]=M7o
set MM=MM+1
if gj[C7o]==0 then
if C7o==0 then
call Mau("Nullpointer exception when calling IExceptionHandler.call","when calling error in ScmdDataTypes, line 1560")
else
call Mau("Called IExceptionHandler.call on invalid object.","when calling error in ScmdDataTypes, line 1560")
endif
endif
call dat(C7o,V7o,B7o,N7o,"when calling call_registerExceptionHandler_SLangChatSystem in ScmdDataTypes, line 1560")
set MM=MM-1
endfunction
function O4u takes integer s4u,string t4u,integer i4u,string S4u returns nothing
local integer c4u
local integer o4u
set w3[MM]=S4u
set MM=MM+1
set c4u=0
set o4u=Zn-1
loop
exitwhen c4u>o4u
call w8o(En[c4u],s4u,t4u,i4u,"when calling call in ScmdDataTypes, line 1567")
set c4u=c4u+1
endloop
set MM=MM-1
endfunction
function nCt takes integer aCt returns string
return dK[aCt]
endfunction
function T6o takes integer d6o,string f6o returns string
local string R6o
set w3[MM]=f6o
set MM=MM+1
if px[d6o]==0 then
if d6o==0 then
call Mau("Nullpointer exception when calling Exception.getCause","when calling error in ScmdDataTypes, line 204")
else
call Mau("Called Exception.getCause on invalid object.","when calling error in ScmdDataTypes, line 204")
endif
endif
set R6o=nCt(d6o)
set MM=MM-1
return R6o
endfunction
function fCt takes integer dCt returns integer
return fK[dCt]
endfunction
function h6o takes integer Y6o,string G6o returns integer
local integer g6o
set w3[MM]=G6o
set MM=MM+1
if px[Y6o]==0 then
if Y6o==0 then
call Mau("Nullpointer exception when calling Exception.getStackTrace","when calling error in ScmdDataTypes, line 207")
else
call Mau("Called Exception.getStackTrace on invalid object.","when calling error in ScmdDataTypes, line 207")
endif
endif
set g6o=fCt(Y6o)
set MM=MM-1
return g6o
endfunction
function cDt takes integer SDt returns boolean
return MJ[SDt]
endfunction
function J4o takes integer A4o,string D4o returns boolean
local boolean H4o
set w3[MM]=D4o
set MM=MM+1
if Tx[A4o]==0 then
if A4o==0 then
call Mau("Nullpointer exception when calling BuiltinData.isProvidingEnumUnit","when calling error in ScmdDataTypes, line 1417")
else
call Mau("Called BuiltinData.isProvidingEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1417")
endif
endif
set H4o=cDt(A4o)
set MM=MM-1
return H4o
endfunction
function rHt takes integer VDt,integer BDt,string NDt returns boolean
local integer MDt
local boolean wHt
local boolean uHt
set w3[MM]=NDt
set MM=MM+1
set MDt=w2o(VDt,BDt,"when calling resolveOverload in ScmdDataTypes, line 1498")
if MDt!=0 then
set wHt=J4o(MDt,"when calling isProvidingEnumUnit in ScmdDataTypes, line 1499")
else
set wHt=false
endif
set uHt=wHt
set MM=MM-1
return uHt
endfunction
function ADt takes integer ZDt,integer UDt,string IDt returns boolean
local boolean PDt
set w3[MM]=IDt
set MM=MM+1
set PDt=rHt(ZDt,UDt,"when calling isProvidingEnumUnit in ScmdDataTypes, line 1536")
set MM=MM-1
return PDt
endfunction
function GJt takes integer nJt,integer dJt,string fJt returns boolean
local integer RJt
local boolean TJt
local boolean YJt
set w3[MM]=fJt
set MM=MM+1
set RJt=O2o(nJt,dJt,"when calling resolveOverload in ScmdDataTypes, line 1498")
if RJt!=0 then
set TJt=J4o(RJt,"when calling isProvidingEnumUnit in ScmdDataTypes, line 1499")
else
set TJt=false
endif
set YJt=TJt
set MM=MM-1
return YJt
endfunction
function OJt takes integer iJt,integer SJt,string cJt returns boolean
local boolean oJt
set w3[MM]=cJt
set MM=MM+1
set oJt=GJt(iJt,SJt,"when calling isProvidingEnumUnit in ScmdDataTypes, line 1557")
set MM=MM-1
return oJt
endfunction
function n4o takes integer p4o,integer e4o,string q4o returns boolean
local boolean a4o
set w3[MM]=q4o
set MM=MM+1
if px[p4o]==0 then
if p4o==0 then
call Mau("Nullpointer exception when calling Builtin.isProvidingEnumUnit","when calling error in ScmdDataTypes, line 1512")
else
call Mau("Called Builtin.isProvidingEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1512")
endif
endif
if px[p4o]<=1417 then
set a4o=ADt(p4o,e4o,"when calling isProvidingEnumUnit in ScmdDataTypes, line 1512")
else
set a4o=OJt(p4o,e4o,"when calling isProvidingEnumUnit in ScmdDataTypes, line 1512")
endif
set MM=MM-1
return a4o
endfunction
function MAt takes integer NAt returns boolean
return NJ[NAt]
endfunction
function m4o takes integer j4o,string x4o returns boolean
local boolean v4o
set w3[MM]=x4o
set MM=MM+1
if Tx[j4o]==0 then
if j4o==0 then
call Mau("Nullpointer exception when calling BuiltinData.isRequiringEnumUnit","when calling error in ScmdDataTypes, line 1408")
else
call Mau("Called BuiltinData.isRequiringEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1408")
endif
endif
set v4o=MAt(j4o)
set MM=MM-1
return v4o
endfunction
function CDt takes integer DDt,integer HDt,string JDt returns boolean
local integer KDt
local boolean LDt
local boolean XDt
set w3[MM]=JDt
set MM=MM+1
set KDt=w2o(DDt,HDt,"when calling resolveOverload in ScmdDataTypes, line 1494")
if KDt!=0 then
set LDt=m4o(KDt,"when calling isRequiringEnumUnit in ScmdDataTypes, line 1495")
else
set LDt=false
endif
set XDt=LDt
set MM=MM-1
return XDt
endfunction
function EDt takes integer vDt,integer mDt,string QDt returns boolean
local boolean WDt
set w3[MM]=QDt
set MM=MM+1
set WDt=CDt(vDt,mDt,"when calling isRequiringEnumUnit in ScmdDataTypes, line 1533")
set MM=MM-1
return WDt
endfunction
function aJt takes integer lJt,integer bJt,string yJt returns boolean
local integer pJt
local boolean eJt
local boolean qJt
set w3[MM]=yJt
set MM=MM+1
set pJt=O2o(lJt,bJt,"when calling resolveOverload in ScmdDataTypes, line 1494")
if pJt!=0 then
set eJt=m4o(pJt,"when calling isRequiringEnumUnit in ScmdDataTypes, line 1495")
else
set eJt=false
endif
set qJt=eJt
set MM=MM-1
return qJt
endfunction
function tJt takes integer wJt,integer uJt,string rJt returns boolean
local boolean sJt
set w3[MM]=rJt
set MM=MM+1
set sJt=aJt(wJt,uJt,"when calling isRequiringEnumUnit in ScmdDataTypes, line 1554")
set MM=MM-1
return sJt
endfunction
function y4o takes integer o4o,integer O4o,string l4o returns boolean
local boolean b4o
set w3[MM]=l4o
set MM=MM+1
if px[o4o]==0 then
if o4o==0 then
call Mau("Nullpointer exception when calling Builtin.isRequiringEnumUnit","when calling error in ScmdDataTypes, line 1510")
else
call Mau("Called Builtin.isRequiringEnumUnit on invalid object.","when calling error in ScmdDataTypes, line 1510")
endif
endif
if px[o4o]<=1417 then
set b4o=EDt(o4o,O4o,"when calling isRequiringEnumUnit in ScmdDataTypes, line 1510")
else
set b4o=tJt(o4o,O4o,"when calling isRequiringEnumUnit in ScmdDataTypes, line 1510")
endif
set MM=MM-1
return b4o
endfunction
function tVt takes integer VCt,integer BCt,string NCt returns boolean
local integer MCt
local integer wVt
local integer uVt
local integer rVt
local boolean sVt
set w3[MM]=NCt
set MM=MM+1
if FZc(Vn,VCt,"when calling has in ScmdDataTypes, line 1616")then
set MM=MM-1
return false
endif
call Pno(Vn,VCt,"when calling add in ScmdDataTypes, line 1618")
if px[f7o(RK[VCt],"when calling get in ScmdDataTypes, line 1619")]==1424 then
set sVt=tVt(f7o(RK[VCt],"when calling get in ScmdDataTypes, line 1620"),BCt,"when calling dfsImpl in ScmdDataTypes, line 1620")
set MM=MM-1
return sVt
else
call NFo(0,BCt,RK[VCt],"when calling resolve in ScmdDataTypes, line 1622",0,null,0,null)
set MCt=inw
set rVt=px[f7o(MCt,"when calling get in ScmdDataTypes, line 1623")]
if rVt>=1416 and rVt<=1418 then
if y4o(f7o(MCt,"when calling get in ScmdDataTypes, line 1624"),TK[VCt],"when calling isRequiringEnumUnit in ScmdDataTypes, line 1624")then
call KGo(5,MCt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1625")
set MM=MM-1
return true
elseif n4o(f7o(MCt,"when calling get in ScmdDataTypes, line 1627"),TK[VCt],"when calling isProvidingEnumUnit in ScmdDataTypes, line 1627")then
call KGo(5,MCt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1628")
set MM=MM-1
return false
endif
elseif px[f7o(MCt,"when calling get in ScmdDataTypes, line 1630")]==1420 then
if px[f7o(ZK[f7o(MCt,"when calling get in ScmdDataTypes, line 1631")],"when calling get in ScmdDataTypes, line 1631")]==1424 and tVt(f7o(ZK[f7o(MCt,"when calling get in ScmdDataTypes, line 1631")],"when calling get in ScmdDataTypes, line 1631"),BCt,"when calling dfsImpl in ScmdDataTypes, line 1631")then
call KGo(5,MCt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1632")
set MM=MM-1
return true
endif
endif
call KGo(5,MCt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1634")
set wVt=nPt(TK[VCt],"when calling iterator in ScmdDataTypes, line 1635")
loop
exitwhen not PPs(wVt,"when calling hasNext in ScmdDataTypes, line 1635")
set uVt=EPs(wVt,"when calling next in ScmdDataTypes, line 1635")
if px[f7o(uVt,"when calling get in ScmdDataTypes, line 1636")]==1424 and tVt(f7o(uVt,"when calling get in ScmdDataTypes, line 1636"),BCt,"when calling dfsImpl in ScmdDataTypes, line 1636")then
call HPs(wVt,"when calling close in ScmdDataTypes, line 1635")
set MM=MM-1
return true
endif
endloop
call HPs(wVt,"when calling close in ScmdDataTypes, line 1635")
set MM=MM-1
return false
endif
endfunction
function N6o takes integer X6o,integer C6o,string V6o returns boolean
local boolean B6o
set w3[MM]=V6o
set MM=MM+1
if px[X6o]==0 then
if X6o==0 then
call Mau("Nullpointer exception when calling Expression.dfsImpl","when calling error in ScmdDataTypes, line 1615")
else
call Mau("Called Expression.dfsImpl on invalid object.","when calling error in ScmdDataTypes, line 1615")
endif
endif
set B6o=tVt(X6o,C6o,"when calling dfsImpl in ScmdDataTypes, line 1615")
set MM=MM-1
return B6o
endfunction
function QUc takes integer vUc,string mUc returns nothing
set w3[MM]=mUc
set MM=MM+1
if dh[vUc]==0 then
if vUc==0 then
call Mau("Nullpointer exception when calling HashSet.clear","when calling error in HashSet, line 27")
else
call Mau("Called HashSet.clear on invalid object.","when calling error in HashSet, line 27")
endif
endif
call WHs(vUc)
set MM=MM-1
endfunction
function OVt takes integer iVt,integer SVt,string cVt returns boolean
local boolean oVt
set w3[MM]=cVt
set MM=MM+1
call QUc(Vn,"when calling clear in ScmdDataTypes, line 1641")
set oVt=N6o(iVt,SVt,"when calling dfsImpl in ScmdDataTypes, line 1642")
set MM=MM-1
return oVt
endfunction
function s7o takes integer M6o,integer w7o,string u7o returns boolean
local boolean r7o
set w3[MM]=u7o
set MM=MM+1
if px[M6o]==0 then
if M6o==0 then
call Mau("Nullpointer exception when calling Expression.dfs","when calling error in ScmdDataTypes, line 1640")
else
call Mau("Called Expression.dfs on invalid object.","when calling error in ScmdDataTypes, line 1640")
endif
endif
set r7o=OVt(M6o,w7o,"when calling dfs in ScmdDataTypes, line 1640")
set MM=MM-1
return r7o
endfunction
function TVt takes integer lVt,integer bVt,string yVt returns nothing
local integer pVt
local group eVt
local unit qVt
local group aVt
local integer nVt
local integer dVt
local integer fVt
local integer RVt
set w3[MM]=yVt
set MM=MM+1
set pVt=WLt("when calling new_Context in ScmdDataTypes, line 1661")
call T2o(pVt,bVt,"when calling setPlayerId in ScmdDataTypes, line 1662")
if s7o(lVt,pVt,"when calling dfs in ScmdDataTypes, line 1663")then
set eVt=CreateGroup()
set Bn=bVt
call GroupEnumUnitsSelected(eVt,pa[bVt],Filter(Baw))
set aVt=eVt
loop
exitwhen not lTu(aVt)
set qVt=aTu(aVt)
call x2o(pVt,qVt,"when calling setEnumUnit in ScmdDataTypes, line 1668")
call NFo(3,lVt,pVt,"when calling evaluate in ScmdDataTypes, line 1669",0,null,0,null)
set nVt=inw
set fVt=px[f7o(nVt,"when calling get in ScmdDataTypes, line 1670")]
if fVt>=1422 and fVt<=1423 then
call O4u(bVt,T6o(f7o(nVt,"when calling get in ScmdDataTypes, line 1671"),"when calling getCause in ScmdDataTypes, line 1671"),h6o(f7o(nVt,"when calling get in ScmdDataTypes, line 1671"),"when calling getStackTrace in ScmdDataTypes, line 1671"),"when calling handleException in ScmdDataTypes, line 1671")
call KGo(5,nVt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1672")
exitwhen true
endif
call KGo(5,nVt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1674")
endloop
call STu(eVt)
else
call NFo(3,lVt,pVt,"when calling evaluate in ScmdDataTypes, line 1677",0,null,0,null)
set dVt=inw
set RVt=px[f7o(dVt,"when calling get in ScmdDataTypes, line 1678")]
if RVt>=1422 and RVt<=1423 then
call O4u(bVt,T6o(f7o(dVt,"when calling get in ScmdDataTypes, line 1679"),"when calling getCause in ScmdDataTypes, line 1679"),h6o(f7o(dVt,"when calling get in ScmdDataTypes, line 1679"),"when calling getStackTrace in ScmdDataTypes, line 1679"),"when calling handleException in ScmdDataTypes, line 1679")
endif
call KGo(5,dVt,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1680")
endif
call KGo(0,pVt,"when calling dispatch_Context_destroyContext in ScmdDataTypes, line 1681")
set MM=MM-1
set eVt=null
set qVt=null
set aVt=null
endfunction
function c7o takes integer t7o,integer i7o,string S7o returns nothing
set w3[MM]=S7o
set MM=MM+1
if px[t7o]==0 then
if t7o==0 then
call Mau("Nullpointer exception when calling Expression.startEvaluationChain","when calling error in ScmdDataTypes, line 1660")
else
call Mau("Called Expression.startEvaluationChain on invalid object.","when calling error in ScmdDataTypes, line 1660")
endif
endif
call TVt(t7o,i7o,"when calling startEvaluationChain in ScmdDataTypes, line 1660")
set MM=MM-1
endfunction
function LCt takes integer KCt returns integer
return RK[KCt]
endfunction
function D6o takes integer I6o,string P6o returns integer
local integer A6o
set w3[MM]=P6o
set MM=MM+1
if px[I6o]==0 then
if I6o==0 then
call Mau("Nullpointer exception when calling Expression.getCallee","when calling error in ScmdDataTypes, line 1607")
else
call Mau("Called Expression.getCallee on invalid object.","when calling error in ScmdDataTypes, line 1607")
endif
endif
set A6o=LCt(I6o)
set MM=MM-1
return A6o
endfunction
function Usi takes integer Zsi returns nothing
endfunction
function Ksi takes integer Hsi,string Jsi returns nothing
call Usi(Hsi)
set SL[Hsi]=Jsi
set cL[Hsi]=vhr(Jsi)
set oL[Hsi]=0
endfunction
function b1S takes string O1S returns integer
local integer l1S
set w3[MM]=O1S
set MM=MM+1
if Kx==0 then
if Lx<32768 then
set Lx=Lx+1
set l1S=Lx
set Xx[l1S]=1670
else
call Mau("Out of memory: Could not create Tokenizer.","when calling error in ScmdParser, line 22")
set l1S=0
endif
else
set Kx=Kx-1
set l1S=Jx[Kx]
set Xx[l1S]=1670
endif
set MM=MM-1
return l1S
endfunction
function Dsi takes string Isi,string Psi returns integer
local integer Asi
set w3[MM]=Psi
set MM=MM+1
set Asi=b1S("when calling alloc_Tokenizer in ScmdParser, line 30")
call Ksi(Asi,Isi)
set MM=MM-1
return Asi
endfunction
function O7u takes string o7u returns boolean
return o7u==" "
endfunction
function nri takes integer eri,integer qri,integer ari returns string
return Dhr(SL[eri],qri,ari)
endfunction
function a0o takes integer b0o,integer y0o,integer p0o,string e0o returns string
local string q0o
set w3[MM]=e0o
set MM=MM+1
if Xx[b0o]==0 then
if b0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.substring","when calling error in ScmdParser, line 45")
else
call Mau("Called Tokenizer.substring on invalid object.","when calling error in ScmdParser, line 45")
endif
endif
set q0o=nri(b0o,y0o,p0o)
set MM=MM-1
return q0o
endfunction
function Rri takes integer dri,integer fri returns string
return Mhr(SL[dri],fri)
endfunction
function T0o takes integer n0o,integer d0o,string f0o returns string
local string R0o
set w3[MM]=f0o
set MM=MM+1
if Xx[n0o]==0 then
if n0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.charAt","when calling error in ScmdParser, line 48")
else
call Mau("Called Tokenizer.charAt on invalid object.","when calling error in ScmdParser, line 48")
endif
endif
set R0o=Rri(n0o,d0o)
set MM=MM-1
return R0o
endfunction
function gri takes integer Tri,string Yri returns string
local string Gri
set w3[MM]=Yri
set MM=MM+1
set Gri=T0o(Tri,oL[Tri],"when calling charAt in ScmdParser, line 52")
set MM=MM-1
return Gri
endfunction
function h0o takes integer Y0o,string G0o returns string
local string g0o
set w3[MM]=G0o
set MM=MM+1
if Xx[Y0o]==0 then
if Y0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.current","when calling error in ScmdParser, line 51")
else
call Mau("Called Tokenizer.current on invalid object.","when calling error in ScmdParser, line 51")
endif
endif
set g0o=gri(Y0o,"when calling current in ScmdParser, line 51")
set MM=MM-1
return g0o
endfunction
function Fri takes integer hri returns nothing
set oL[hri]=oL[hri]+1
endfunction
function j0o takes integer F0o,string k0o returns nothing
set w3[MM]=k0o
set MM=MM+1
if Xx[F0o]==0 then
if F0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.next","when calling error in ScmdParser, line 54")
else
call Mau("Called Tokenizer.next on invalid object.","when calling error in ScmdParser, line 54")
endif
endif
call Fri(F0o)
set MM=MM-1
endfunction
function Zri takes integer mri,string Qri returns string
local integer Wri
local string Eri
set w3[MM]=Qri
set MM=MM+1
set Wri=oL[mri]
loop
exitwhen not O7u(h0o(mri,"when calling current in ScmdParser, line 65"))
call j0o(mri,"when calling next in ScmdParser, line 66")
endloop
set Eri=a0o(mri,Wri,oL[mri],"when calling substring in ScmdParser, line 67")
set MM=MM-1
return Eri
endfunction
function A0o takes integer U0o,string I0o returns string
local string P0o
set w3[MM]=I0o
set MM=MM+1
if Xx[U0o]==0 then
if U0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.skipWhitespaces","when calling error in ScmdParser, line 63")
else
call Mau("Called Tokenizer.skipWhitespaces on invalid object.","when calling error in ScmdParser, line 63")
endif
endif
set P0o=Zri(U0o,"when calling skipWhitespaces in ScmdParser, line 63")
set MM=MM-1
return P0o
endfunction
function t7u takes string s7u returns boolean
return s7u=="0" or s7u=="1" or s7u=="2" or s7u=="3" or s7u=="4" or s7u=="5" or s7u=="6" or s7u=="7" or s7u=="8" or s7u=="9"
endfunction
function c7u takes string i7u returns boolean
local string S7u=OFr(i7u)
return t7u(S7u)or S7u=="a" or S7u=="b" or S7u=="c" or S7u=="d" or S7u=="e" or S7u=="f"
endfunction
function Lri takes integer Uri,string Iri returns boolean
local string Pri
local integer Ari
local boolean Dri
local string Hri
local boolean Jri
local string Kri
set w3[MM]=Iri
set MM=MM+1
set Pri=OFr(h0o(Uri,"when calling current in ScmdParser, line 70"))
call j0o(Uri,"when calling next in ScmdParser, line 71")
if Pri=="\\" or Pri=="$" or Pri=="[" or Pri=="]" then
set MM=MM-1
set q0w=true
set a0w=Pri
return q0w
elseif Pri=="c" then
set Ari=0
loop
exitwhen not(c7u(h0o(Uri,"when calling current in ScmdParser, line 76"))and Ari!=6)
call j0o(Uri,"when calling next in ScmdParser, line 77")
set Ari=Ari+1
endloop
if Ari!=6 then
set MM=MM-1
set q0w=false
set a0w="Некорректная управляющая последовательность (некорректный код цвета)."
return q0w
endif
set Jri=true
set Kri="|cFF"+a0o(Uri,oL[Uri]-6,oL[Uri],"when calling substring in ScmdParser, line 81")
set Dri=Jri
set Hri=Kri
set MM=MM-1
set q0w=Dri
set a0w=Hri
return q0w
elseif Pri=="r" then
set MM=MM-1
set q0w=true
set a0w="|r"
return q0w
elseif Pri=="n" then
set MM=MM-1
set q0w=true
set a0w="|n"
return q0w
elseif Pri=="s" then
set MM=MM-1
set q0w=true
set a0w=" "
return q0w
endif
set MM=MM-1
set q0w=false
set a0w="Некорректная управляющая последовательность."
return q0w
endfunction
function C0o takes integer D0o,string H0o returns boolean
local boolean J0o
local string K0o
local boolean L0o
local string X0o
set w3[MM]=H0o
set MM=MM+1
if Xx[D0o]==0 then
if D0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.getEscapeSequence","when calling error in ScmdParser, line 69")
else
call Mau("Called Tokenizer.getEscapeSequence on invalid object.","when calling error in ScmdParser, line 69")
endif
endif
set L0o=Lri(D0o,"when calling getEscapeSequence in ScmdParser, line 69")
set X0o=a0w
set J0o=L0o
set K0o=X0o
set MM=MM-1
set n0w=J0o
set d0w=K0o
return n0w
endfunction
function vri takes integer xri returns boolean
return oL[xri]<cL[xri]
endfunction
function Z0o takes integer Q0o,string W0o returns boolean
local boolean E0o
set w3[MM]=W0o
set MM=MM+1
if Xx[Q0o]==0 then
if Q0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.hasMore","when calling error in ScmdParser, line 60")
else
call Mau("Called Tokenizer.hasMore on invalid object.","when calling error in ScmdParser, line 60")
endif
endif
set E0o=vri(Q0o)
set MM=MM-1
return E0o
endfunction
function usi takes integer Xri,string Cri returns boolean
local string Vri
local boolean Bri
local string Nri
local boolean Mri
local string wsi
set w3[MM]=Cri
set MM=MM+1
set Vri=h0o(Xri,"when calling current in ScmdParser, line 91")
if(not Z0o(Xri,"when calling hasMore in ScmdParser, line 92"))or Vri==" " or Vri=="]" or Vri=="[" or Vri=="$" then
set MM=MM-1
set f0w=true
set R0w=null
return f0w
endif
call j0o(Xri,"when calling next in ScmdParser, line 94")
if Vri=="\\" then
set Mri=C0o(Xri,"when calling getEscapeSequence in ScmdParser, line 96")
set wsi=d0w
set Bri=Mri
set Nri=wsi
set MM=MM-1
set f0w=Bri
set R0w=Nri
return f0w
endif
set MM=MM-1
set f0w=true
set R0w=Vri
return f0w
endfunction
function r_o takes integer V0o,string B0o returns boolean
local boolean N0o
local string M0o
local boolean w_o
local string u_o
set w3[MM]=B0o
set MM=MM+1
if Xx[V0o]==0 then
if V0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.nextStringChunk","when calling error in ScmdParser, line 90")
else
call Mau("Called Tokenizer.nextStringChunk on invalid object.","when calling error in ScmdParser, line 90")
endif
endif
set w_o=usi(V0o,"when calling nextStringChunk in ScmdParser, line 90")
set u_o=R0w
set N0o=w_o
set M0o=u_o
set MM=MM-1
set T0w=N0o
set Y0w=M0o
return T0w
endfunction
function bsi takes integer rsi,string ssi returns boolean
local boolean tsi
local string isi
local string Ssi
local boolean csi
local string osi
local boolean Osi
local string lsi
set w3[MM]=ssi
set MM=MM+1
set csi=r_o(rsi,"when calling nextStringChunk in ScmdParser, line 100")
set osi=Y0w
set tsi=csi
set isi=osi
set Ssi=""
loop
exitwhen not(tsi and isi!=null)
set Ssi=Ssi+isi
set Osi=r_o(rsi,"when calling nextStringChunk in ScmdParser, line 104")
set lsi=Y0w
set tsi=Osi
set isi=lsi
endloop
if not tsi then
set MM=MM-1
set G0w=tsi
set g0w=isi
return G0w
endif
set isi=Ssi
set MM=MM-1
set G0w=tsi
set g0w=isi
return G0w
endfunction
function O_o takes integer s_o,string t_o returns boolean
local boolean i_o
local string S_o
local boolean c_o
local string o_o
set w3[MM]=t_o
set MM=MM+1
if Xx[s_o]==0 then
if s_o==0 then
call Mau("Nullpointer exception when calling Tokenizer.getString","when calling error in ScmdParser, line 99")
else
call Mau("Called Tokenizer.getString on invalid object.","when calling error in ScmdParser, line 99")
endif
endif
set c_o=bsi(s_o,"when calling getString in ScmdParser, line 99")
set o_o=g0w
set i_o=c_o
set S_o=o_o
set MM=MM-1
set x0w=i_o
set v0w=S_o
return x0w
endfunction
function Rsi takes integer ysi,string psi returns integer
local integer esi
local string qsi
local integer asi
local string nsi
local integer dsi
local string fsi
set w3[MM]=psi
set MM=MM+1
set esi=oL[ysi]
set qsi=h0o(ysi,"when calling current in ScmdParser, line 112")
loop
exitwhen not(Z0o(ysi,"when calling hasMore in ScmdParser, line 113")and(not O7u(qsi))and qsi!="[" and qsi!="]" and qsi!="$" and qsi!="\\")
call j0o(ysi,"when calling next in ScmdParser, line 114")
set qsi=h0o(ysi,"when calling current in ScmdParser, line 115")
endloop
if qsi=="\\" or oL[ysi]==esi then
set MM=MM-1
set h0w=1
set F0w="Некорректное название переменной."
return h0w
endif
set dsi=3
set fsi=a0o(ysi,esi,oL[ysi],"when calling substring in ScmdParser, line 118")
set asi=dsi
set nsi=fsi
set MM=MM-1
set h0w=asi
set F0w=nsi
return h0w
endfunction
function a_o takes integer l_o,string b_o returns integer
local integer y_o
local string p_o
local integer e_o
local string q_o
set w3[MM]=b_o
set MM=MM+1
if Xx[l_o]==0 then
if l_o==0 then
call Mau("Nullpointer exception when calling Tokenizer.getSymbol","when calling error in ScmdParser, line 110")
else
call Mau("Called Tokenizer.getSymbol on invalid object.","when calling error in ScmdParser, line 110")
endif
endif
set e_o=Rsi(l_o,"when calling getSymbol in ScmdParser, line 110")
set q_o=F0w
set y_o=e_o
set p_o=q_o
set MM=MM-1
set k0w=y_o
set j0w=p_o
return k0w
endfunction
function jri takes integer kri returns nothing
set oL[kri]=oL[kri]-1
endfunction
function m0o takes integer x0o,string v0o returns nothing
set w3[MM]=v0o
set MM=MM+1
if Xx[x0o]==0 then
if x0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.prev","when calling error in ScmdParser, line 57")
else
call Mau("Called Tokenizer.prev on invalid object.","when calling error in ScmdParser, line 57")
endif
endif
call jri(x0o)
set MM=MM-1
endfunction
function Qsi takes integer Tsi,string Ysi returns integer
local string Gsi
local boolean gsi
local string hsi
local integer Fsi
local string ksi
local integer jsi
local string xsi
local boolean vsi
local string msi
set w3[MM]=Ysi
set MM=MM+1
set OL[Tsi]=A0o(Tsi,"when calling skipWhitespaces in ScmdParser, line 121")
if not Z0o(Tsi,"when calling hasMore in ScmdParser, line 122")then
set MM=MM-1
set m0w=0
set Q0w=null
return m0w
endif
set Gsi=h0o(Tsi,"when calling current in ScmdParser, line 124")
call j0o(Tsi,"when calling next in ScmdParser, line 125")
if Gsi=="[" then
set MM=MM-1
set m0w=4
set Q0w=null
return m0w
elseif Gsi=="]" then
set MM=MM-1
set m0w=6
set Q0w=null
return m0w
elseif Gsi=="$" then
if h0o(Tsi,"when calling current in ScmdParser, line 131")=="[" then
call j0o(Tsi,"when calling next in ScmdParser, line 132")
set MM=MM-1
set m0w=5
set Q0w=null
return m0w
endif
if O7u(h0o(Tsi,"when calling current in ScmdParser, line 134"))then
call j0o(Tsi,"when calling next in ScmdParser, line 135")
set MM=MM-1
set m0w=7
set Q0w=null
return m0w
endif
set jsi=a_o(Tsi,"when calling getSymbol in ScmdParser, line 137")
set xsi=j0w
set Fsi=jsi
set ksi=xsi
set MM=MM-1
set m0w=Fsi
set Q0w=ksi
return m0w
endif
call m0o(Tsi,"when calling prev in ScmdParser, line 138")
set vsi=O_o(Tsi,"when calling getString in ScmdParser, line 139")
set msi=v0w
set gsi=vsi
set hsi=msi
if not gsi then
set MM=MM-1
set m0w=1
set Q0w=hsi
return m0w
endif
set MM=MM-1
set m0w=2
set Q0w=hsi
return m0w
endfunction
function G_o takes integer n_o,string d_o returns integer
local integer f_o
local string R_o
local integer T_o
local string Y_o
set w3[MM]=d_o
set MM=MM+1
if Xx[n_o]==0 then
if n_o==0 then
call Mau("Nullpointer exception when calling Tokenizer.nextToken","when calling error in ScmdParser, line 120")
else
call Mau("Called Tokenizer.nextToken on invalid object.","when calling error in ScmdParser, line 120")
endif
endif
set T_o=Qsi(n_o,"when calling nextToken in ScmdParser, line 120")
set Y_o=Q0w
set f_o=T_o
set R_o=Y_o
set MM=MM-1
set O4=f_o
set l4=R_o
return O4
endfunction
function JCt takes integer ACt,integer DCt,string HCt returns nothing
set w3[MM]=HCt
set MM=MM+1
if RK[ACt]!=0 then
call KGo(5,RK[ACt],"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdDataTypes, line 1604")
endif
set RK[ACt]=DCt
set MM=MM-1
endfunction
function U6o takes integer W6o,integer E6o,string Z6o returns nothing
set w3[MM]=Z6o
set MM=MM+1
if px[W6o]==0 then
if W6o==0 then
call Mau("Nullpointer exception when calling Expression.setCallee","when calling error in ScmdDataTypes, line 1602")
else
call Mau("Called Expression.setCallee on invalid object.","when calling error in ScmdDataTypes, line 1602")
endif
endif
call JCt(W6o,E6o,"when calling setCallee in ScmdDataTypes, line 1602")
set MM=MM-1
endfunction
function O4s takes integer o4s returns integer
return pP[eP[RP[o4s]]]
endfunction
function aDc takes integer pDc,string eDc returns integer
local integer qDc
set w3[MM]=eDc
set MM=MM+1
if WF[pDc]==0 then
if pDc==0 then
call Mau("Nullpointer exception when calling LinkedList.peek","when calling error in LinkedList, line 110")
else
call Mau("Called LinkedList.peek on invalid object.","when calling error in LinkedList, line 110")
endif
endif
set qDc=O4s(pDc)
set MM=MM-1
return qDc
endfunction
function vVt takes integer jVt,string xVt returns nothing
set w3[MM]=xVt
set MM=MM+1
call gVt(jVt,"when calling Expression_init in ScmdDataTypes, line 1588")
set RK[jVt]=0
set MM=MM-1
endfunction
function kVt takes string hVt returns integer
local integer FVt
set w3[MM]=hVt
set MM=MM+1
set FVt=ZCS("when calling alloc_Expression in ScmdDataTypes, line 1588")
call vVt(FVt,"when calling construct_Expression in ScmdDataTypes, line 1588")
set MM=MM-1
return FVt
endfunction
function Esi takes integer Wsi returns string
return OL[Wsi]
endfunction
function k_o takes integer g_o,string h_o returns string
local string F_o
set w3[MM]=h_o
set MM=MM+1
if Xx[g_o]==0 then
if g_o==0 then
call Mau("Nullpointer exception when calling Tokenizer.getSkipped","when calling error in ScmdParser, line 144")
else
call Mau("Called Tokenizer.getSkipped on invalid object.","when calling error in ScmdParser, line 144")
endif
endif
set F_o=Esi(g_o)
set MM=MM-1
return F_o
endfunction
function Xsi takes integer Lsi returns nothing
endfunction
function e1S takes integer y1S,string p1S returns nothing
set w3[MM]=p1S
set MM=MM+1
if Xx[y1S]==0 then
call Mau("Double free: object of type Tokenizer","when calling error in ScmdParser, line 22")
else
set Jx[Kx]=y1S
set Kx=Kx+1
set Xx[y1S]=0
endif
set MM=MM-1
endfunction
function Bsi takes integer Csi,string Vsi returns nothing
set w3[MM]=Vsi
set MM=MM+1
call Xsi(Csi)
call e1S(Csi,"when calling dealloc_Tokenizer in ScmdParser, line 22")
set MM=MM-1
endfunction
function l0o takes integer o0o,string O0o returns nothing
set w3[MM]=O0o
set MM=MM+1
if Xx[o0o]==0 then
if o0o==0 then
call Mau("Nullpointer exception when calling Tokenizer.Tokenizer","when calling error in ScmdParser, line 22")
else
call Mau("Called Tokenizer.Tokenizer on invalid object.","when calling error in ScmdParser, line 22")
endif
endif
call Bsi(o0o,"when calling destroyTokenizer in ScmdParser, line 22")
set MM=MM-1
endfunction
function c4s takes integer s4s,string t4s returns integer
local integer i4s
local integer S4s
set w3[MM]=t4s
set MM=MM+1
set i4s=eP[RP[s4s]]
set S4s=0
if i4s!=RP[s4s]then
set S4s=pP[i4s]
call VDc(s4s,i4s,"when calling removeEntry in LinkedList, line 106")
endif
set MM=MM-1
return S4s
endfunction
function yDc takes integer ODc,string lDc returns integer
local integer bDc
set w3[MM]=lDc
set MM=MM+1
if WF[ODc]==0 then
if ODc==0 then
call Mau("Nullpointer exception when calling LinkedList.pop","when calling error in LinkedList, line 101")
else
call Mau("Called LinkedList.pop on invalid object.","when calling error in LinkedList, line 101")
endif
endif
set bDc=c4s(ODc,"when calling pop in LinkedList, line 101")
set MM=MM-1
return bDc
endfunction
function m6u takes integer k6u,integer j6u,string x6u returns integer
local integer v6u
set w3[MM]=x6u
set MM=MM+1
set v6u=aDc(k6u,"when calling peek in ScmdParser, line 158")
call yDc(k6u,"when calling pop in ScmdParser, line 159")
if D6o(v6u,"when calling getCallee in ScmdParser, line 160")==0 then
call U6o(v6u,l5i(j6u,"when calling new_SharedPointer in ScmdParser, line 161"),"when calling setCallee in ScmdParser, line 161")
else
call U1o(L6o(v6u,"when calling getArgs in ScmdParser, line 163"),l5i(j6u,"when calling new_SharedPointer in ScmdParser, line 163"),"when calling add in ScmdParser, line 163")
endif
set MM=MM-1
return v6u
endfunction
function r7u takes integer Q6u,string W6u,string E6u returns integer
local integer Z6u
local integer U6u
local string I6u
local integer P6u
local integer A6u
local integer D6u
local integer H6u
local integer J6u
local integer K6u
local string L6u
local integer X6u
local string C6u
local integer V6u
local string B6u
local integer N6u
local string M6u
local integer w7u
local string u7u
set w3[MM]=E6u
set MM=MM+1
set Z6u=Dsi(W6u,"when calling new_Tokenizer in ScmdParser, line 167")
set K6u=G_o(Z6u,"when calling nextToken in ScmdParser, line 168")
set L6u=l4
set U6u=K6u
set I6u=L6u
set P6u=a4s("when calling new_LinkedList in ScmdParser, line 169")
set A6u=a4s("when calling new_LinkedList in ScmdParser, line 170")
set D6u=kVt("when calling new_Expression in ScmdParser, line 171")
loop
exitwhen not true
loop
exitwhen not(U6u==2 or U6u==3)
if U6u==2 then
if D6o(D6u,"when calling getCallee in ScmdParser, line 175")==0 then
call U6o(D6u,l5i(X7i(I6u,"when calling new_Symbol in ScmdParser, line 176"),"when calling new_SharedPointer in ScmdParser, line 176"),"when calling setCallee in ScmdParser, line 176")
else
call U1o(L6o(D6u,"when calling getArgs in ScmdParser, line 178"),l5i(M4u(I6u,k_o(Z6u,"when calling getSkipped in ScmdParser, line 178"),"when calling forStrings in ScmdParser, line 178"),"when calling new_SharedPointer in ScmdParser, line 178"),"when calling add in ScmdParser, line 178")
endif
elseif D6o(D6u,"when calling getCallee in ScmdParser, line 179")!=0 then
call U1o(L6o(D6u,"when calling getArgs in ScmdParser, line 180"),l5i(X7i(I6u,"when calling new_Symbol in ScmdParser, line 180"),"when calling new_SharedPointer in ScmdParser, line 180"),"when calling add in ScmdParser, line 180")
else
call U6o(D6u,l5i(X7i(I6u,"when calling new_Symbol in ScmdParser, line 182"),"when calling new_SharedPointer in ScmdParser, line 182"),"when calling setCallee in ScmdParser, line 182")
endif
set X6u=G_o(Z6u,"when calling nextToken in ScmdParser, line 183")
set C6u=l4
set U6u=X6u
set I6u=C6u
endloop
if U6u==0 then
if D6o(D6u,"when calling getCallee in ScmdParser, line 185")!=0 then
loop
exitwhen not(RDc(A6u,"when calling size in ScmdParser, line 186")>0 and aDc(A6u,"when calling peek in ScmdParser, line 186")==7)
set D6u=m6u(P6u,D6u,"when calling pop in ScmdParser, line 187")
call yDc(A6u,"when calling pop in ScmdParser, line 188")
endloop
endif
if D6o(D6u,"when calling getCallee in ScmdParser, line 189")==0 or RDc(A6u,"when calling size in ScmdParser, line 189")!=0 then
set V6u=1
set B6u="No callee"
set U6u=V6u
set I6u=B6u
endif
exitwhen true
elseif U6u==4 or U6u==5 or U6u==7 then
call tDc(P6u,D6u,"when calling push in ScmdParser, line 193")
call tDc(A6u,U6u,"when calling push in ScmdParser, line 194")
set D6u=kVt("when calling new_Expression in ScmdParser, line 195")
if U6u==4 then
call U6o(D6u,X8o(hd,"when calling clone in ScmdParser, line 197"),"when calling setCallee in ScmdParser, line 197")
endif
elseif U6u==6 then
if D6o(D6u,"when calling getCallee in ScmdParser, line 199")!=0 then
loop
exitwhen not(RDc(A6u,"when calling size in ScmdParser, line 200")>0 and aDc(A6u,"when calling peek in ScmdParser, line 200")==7)
set D6u=m6u(P6u,D6u,"when calling pop in ScmdParser, line 201")
call yDc(A6u,"when calling pop in ScmdParser, line 202")
endloop
endif
if D6o(D6u,"when calling getCallee in ScmdParser, line 203")==0 or RDc(A6u,"when calling size in ScmdParser, line 203")==0 then
set N6u=1
set M6u="Brackets do not match"
set U6u=N6u
set I6u=M6u
else
call yDc(A6u,"when calling pop in ScmdParser, line 206")
set D6u=m6u(P6u,D6u,"when calling pop in ScmdParser, line 207")
endif
endif
if U6u==1 then
exitwhen true
endif
set w7u=G_o(Z6u,"when calling nextToken in ScmdParser, line 210")
set u7u=l4
set U6u=w7u
set I6u=u7u
endloop
if U6u==1 then
call q9r(Q6u,"|cFFcc666eParse error|r: "+I6u,"when calling sendSystemMessage in ScmdParser, line 212")
call Q6o(D6u,"when calling dispatch_Expression_destroyExpression in ScmdParser, line 213")
set D6u=0
set H6u=x1s(P6u,"when calling iterator in ScmdParser, line 215")
loop
exitwhen not t1s(H6u)
set J6u=r1s(H6u)
call Q6o(J6u,"when calling dispatch_Expression_destroyExpression in ScmdParser, line 216")
endloop
call c1s(H6u,"when calling close in ScmdParser, line 215")
endif
call CAc(A6u,"when calling dispatch_LinkedList_destroyLinkedList in ScmdParser, line 217")
call CAc(P6u,"when calling dispatch_LinkedList_destroyLinkedList in ScmdParser, line 218")
call l0o(Z6u,"when calling dispatch_Tokenizer_destroyTokenizer in ScmdParser, line 219")
set MM=MM-1
return D6u
endfunction
function X5u takes integer H5u,string J5u,string K5u returns nothing
local integer L5u
set w3[MM]=K5u
set MM=MM+1
set L5u=r7u(H5u,J5u,"when calling parse in ScmdInterpreter, line 7")
if L5u!=0 then
call c7o(L5u,H5u,"when calling startEvaluationChain in ScmdInterpreter, line 9")
call Q6o(L5u,"when calling dispatch_Expression_destroyExpression in ScmdInterpreter, line 10")
endif
set MM=MM-1
endfunction
function d8r takes string p8r returns nothing
local string e8r
local integer q8r
local integer a8r
local integer n8r
set w3[MM]=p8r
set MM=MM+1
set e8r=GetEventPlayerChatString()
set q8r=vhr(e8r)
set a8r=bWu(GetTriggerPlayer())
if Mhr(e8r,q8r-1)=="^" then
set xd[a8r]=xd[a8r]+Dhr(e8r,0,q8r-1)
else
set e8r=xd[a8r]+e8r
set xd[a8r]=""
if Qd[a8r]!=0 then
if e8r!=gvr(BZc(md,Qd[a8r],"when calling get in ScmdReader, line 30"),"when calling stringFromIndex in ScmdReader, line 30")then
call Q_o(Qd[a8r],a8r,e8r,"when calling call in ScmdReader, line 31")
else
set Qd[a8r]=0
endif
else
set n8r=eqo(vd,e8r,"when calling get in ScmdReader, line 35")
if n8r==0 then
call X5u(a8r,e8r,"when calling interpret in ScmdReader, line 37")
else
set Qd[a8r]=n8r
endif
endif
endif
set MM=MM-1
endfunction
function oTo takes nothing returns nothing
set MM=0
call d8r("ScmdReader, line 53")
endfunction
function cXw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function oXw takes nothing returns nothing
if cXw()then
call UnitRemoveTypeBJ(ConvertUnitType(20),GetEnumUnit())
endif
endfunction
function oYw takes nothing returns nothing
local timer iYw=GetExpiredTimer()
local integer SYw=LoadInteger(i,y,GetHandleId(iYw))
local integer cYw=LoadInteger(i,ub[Bl[SYw]],GetHandleId(iYw))
if cYw==0 then
call ATw(iYw)
call RemoveSavedHandle(i,ub[Bl[SYw]],GetHandleId(Nl[SYw]))
call kfw(tb[Bl[SYw]],Nl[SYw])
call kfw(ib[Bl[SYw]],Nl[SYw])
call LTw(SYw)
set iYw=null
set iYw=null
return
endif
call kfw(Sb[Bl[SYw]],Nl[SYw])
call SaveInteger(i,ub[Bl[SYw]],GetHandleId(iYw),cYw-1)
set iYw=null
set iYw=null
endfunction
function oju takes nothing returns boolean
set dq=InitGameCache("1")
set fq=InitGameCache("2")
return true
endfunction
function omu takes nothing returns boolean
set Fq="Objects\\StartLocation\\StartLocation.mdx"
return true
endfunction
function oxw takes nothing returns nothing
call UnitDamageTargetBJ(Nu,GetEnumUnit(),Uu,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_FIRE)
call AddSpecialEffectTargetUnitBJ("origin",GetEnumUnit(),"Abilities\\Spells\\Other\\Incinerate\\FireLordDeathExplode.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endfunction
function p1w takes nothing returns nothing
call CreateNUnitsAtLoc(1,1966093104,GetOwningPlayer(GetSpellAbilityUnit()),GetSpellTargetLoc(),bj_UNIT_FACING)
call SetUnitPathing(GetLastCreatedUnit(),false)
call SetUnitPositionLoc(GetLastCreatedUnit(),GetSpellTargetLoc())
call UnitApplyTimedLifeBJ(3.00,1112820806,GetLastCreatedUnit())
call ForGroupBJ(GetUnitsInRangeOfLocMatching(200.00,GetSpellTargetLoc(),Condition(xOw)),vOw)
endfunction
function p2w takes nothing returns nothing
local unit y2w=CreateUnitAtLoc(Player(PLAYER_NEUTRAL_PASSIVE),1747995215,GetUnitLoc(GetSpellAbilityUnit()),GetUnitFacing(GetSpellAbilityUnit()))
call UnitAddAbility(y2w,1093679158)
call SetUnitAbilityLevel(y2w,1093679158,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093679157))
call IssuePointOrderLoc(y2w,"rainoffire",GetSpellTargetLoc())
call TriggerSleepAction(12.00)
call RemoveUnit(y2w)
set y2w=null
set y2w=null
endfunction
function p6w takes nothing returns nothing
call ForGroup(bt,Nlw)
endfunction
function p7w takes nothing returns nothing
local unit O7w=GetSpellAbilityUnit()
local unit l7w=CreateUnitAtLoc(GetOwningPlayer(O7w),1747995215,GetUnitLoc(O7w),270.)
local integer b7w=GetUnitAbilityLevel(O7w,1095722083)
local integer y7w=GetRandomInt(1,4)
set O7w=null
if y7w==1 then
call UnitAddAbility(l7w,1095721316)
call SetUnitAbilityLevel(l7w,1095721316,b7w)
elseif y7w==2 then
call UnitAddAbility(l7w,1095721572)
call SetUnitAbilityLevel(l7w,1095721572,b7w)
elseif y7w==3 then
call UnitAddAbility(l7w,1095722852)
call SetUnitAbilityLevel(l7w,1095722852,b7w)
elseif y7w==4 then
call UnitAddAbility(l7w,1095725668)
call SetUnitAbilityLevel(l7w,1095725668,b7w)
endif
set b7w=0
set y7w=0
call IssueImmediateOrder(l7w,"summonwareagle")
call eRw(l7w,3.)
set l7w=null
set O7w=null
set l7w=null
endfunction
function p9u takes nothing returns nothing
local timer l9u=GetExpiredTimer()
local unit b9u=LoadUnitHandle(nr,GetHandleId(l9u),StringHash("u"))
local location y9u=LoadLocationHandle(nr,GetHandleId(l9u),StringHash("l"))
call FlushChildHashtable(nr,GetHandleId(l9u))
call DestroyTimer(l9u)
set l9u=null
call UnitDamagePoint(b9u,0.,200.,GetLocationX(y9u),GetLocationY(y9u),475.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call RemoveLocation(y9u)
set y9u=null
set b9u=null
set l9u=null
set b9u=null
set y9u=null
endfunction
function pBw takes nothing returns boolean
if not(GetSpellAbilityId()==1093679152)then
return false
endif
return true
endfunction
function bCw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@frostblast")then
return false
endif
return true
endfunction
function yCw takes nothing returns boolean
if not(GetEventPlayerChatString()=="'frostblast")then
return false
endif
return true
endfunction
function pCw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(tcw))
if yCw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],icw)
elseif bCw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Scw)
else
call DoNothing()
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function pEw takes nothing returns nothing
call SetBlightRadiusLocBJ(false,GetEnumPlayer(),G,380.00)
endfunction
function pFw takes nothing returns nothing
local unit lFw
local real bFw
local real yFw
if GetEventDamage()==0. then
set lFw=null
return
endif
set pl=GetEventDamage()/2.
call ForGroup(LoadGroupHandle(i,bl,GetHandleId(GetEventDamageSource())),iww_3165)
if GetUnitAbilityLevel(GetTriggerUnit(),rl)==0 then
set lFw=null
return
endif
set lFw=GetTriggerUnit()
set pl=GetEventDamage()
set bFw=LoadReal(i,Ol,GetHandleId(lFw))
if pl<bFw then
set yFw=pl
else
set yFw=bFw
endif
call BlzSetEventDamage(pl-yFw)
call SaveReal(i,Ol,GetHandleId(lFw),(bFw-yFw)*1.0)
if bFw==yFw then
call UnitRemoveAbility(lFw,rl)
endif
set lFw=null
set lFw=null
endfunction
function yHw takes nothing returns boolean
if not(GetDestructableMaxLife(GetEnumDestructable())<1000000000.00)then
return false
endif
return true
endfunction
function pHw takes nothing returns nothing
if yHw()then
call DestructableRestoreLife(GetEnumDestructable(),GetDestructableMaxLife(GetEnumDestructable()),true)
else
call DoNothing()
endif
endfunction
function rTw takes nothing returns integer
local integer uTw=GetRandomInt(0,1)
if uTw==0 then
return-1
else
return 1
endif
endfunction
function pKw takes nothing returns nothing
local location oKw=GetSpellTargetLoc()
local destructable OKw=null
local integer lKw=GetPlayerId(GetTriggerPlayer())
local integer bKw=0
local integer yKw=0
if et[lKw]then
set yKw=GetRandomInt(2,12)
else
set yKw=bs[lKw]
endif
loop
exitwhen bKw==yKw
if mw[lKw]then
set vw[lKw]=GetRandomReal(0.80,1.20)
endif
if is[lKw]then
set Ss[lKw]=GetRandomReal(0.,360.)
endif
if dt[bKw]then
set nt[bKw]=GetRandomInt(0,ft[bKw])
endif
set OKw=CreateDestructableZ(j[lKw],GetLocationX(oKw)+rTw()*GetRandomReal(0.,150.),GetLocationY(oKw)+rTw()*GetRandomReal(0.,150.),Gt[lKw]+GetLocationZ(oKw),Ss[lKw],vw[lKw],nt[lKw])
call FlushChildHashtable(nr,GetHandleId(OKw))
if qt[lKw]==false then
call SetDestructableOccluderHeight(OKw,at[lKw])
endif
if Rt[lKw]then
call SetDestructableInvulnerable(OKw,true)
endif
set bKw=bKw+1
endloop
set yKw=0
set bKw=0
set lKw=0
set OKw=null
call RemoveLocation(oKw)
set oKw=null
set oKw=null
set OKw=null
endfunction
function iOc takes string sOc returns integer
local integer tOc
set w3[MM]=sOc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set tOc=NY
set MY[tOc]=777
else
call Mau("Out of memory: Could not create ForForceCallback_execute_StringEncoder.","when calling error in StringEncoder, line 53")
set tOc=0
endif
else
set BY=BY-1
set tOc=VY[BY]
set MY[tOc]=777
endif
set MM=MM-1
return tOc
endfunction
function oOc takes string SOc returns integer
local integer cOc
set w3[MM]=SOc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set cOc=NY
set MY[cOc]=778
else
call Mau("Out of memory: Could not create ForForceCallback_execute_StringEncoder.","when calling error in StringEncoder, line 54")
set cOc=0
endif
else
set BY=BY-1
set cOc=VY[BY]
set MY[cOc]=778
endif
set MM=MM-1
return cOc
endfunction
function hgr takes string Ygr returns boolean
local integer Ggr
local integer ggr
set w3[MM]=Ygr
set MM=MM+1
set vR=" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
set mR=95
set QR=HDs("when calling new_HashMap in StringEncoder, line 13")
set Ggr=iOc("when calling alloc_ForForceCallback_execute_StringEncoder in StringEncoder, line 53")
call Inu(Ggr,"when calling execute in StringEncoder, line 53")
set ggr=oOc("when calling alloc_ForForceCallback_execute_StringEncoder in StringEncoder, line 54")
call Inu(ggr,"when calling execute in StringEncoder, line 54")
set MM=MM-1
return true
endfunction
function pRo takes nothing returns boolean
set MM=0
return hgr("StringEncoder, line 1")
endfunction
function Uvr takes destructable Zvr returns integer
return l7s(Zvr)
endfunction
function oRr takes string tRr returns nothing
local unit iRr
local unit SRr
local unit cRr
set w3[MM]=tRr
set MM=MM+1
set iRr=kmu()
if S7s(iRr)==Uf then
set SRr=iRr
call s9s(SRr,da)
set cRr=SRr
call c0s(cRr,255,255,255,25)
if ea!=g7s(iRr)then
call K9s(iRr,0.)
endif
call KZc(If,vvr(iRr),Uvr(CreateDestructableZ(1330932083,j7s(iRr),v7s(iRr),Yus(F7s(iRr),h3)+150.,270.,1.,1)),"when calling put in SotfrpGuiDestructables, line 105")
endif
set MM=MM-1
set iRr=null
set SRr=null
set cRr=null
endfunction
function pTo takes nothing returns nothing
set MM=0
call oRr("SotfrpGuiDestructables, line 99")
endfunction
function pTu takes nothing returns nothing
call Iqo(Ye,GetEnumUnit())
endfunction
function pXw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function pZw takes nothing returns nothing
set Nr[Mr]=1280599857
set Mr=Mr+1
set Nr[Mr]=1280599858
set Mr=Mr+1
set Nr[Mr]=1515480881
set Mr=Mr+1
set Nr[Mr]=1515480882
set Mr=Mr+1
set Nr[Mr]=1230271591
set Mr=Mr+1
set Nr[Mr]=1096050481
set Mr=Mr+1
set Nr[Mr]=1096050482
set Mr=Mr+1
set Nr[Mr]=1498702712
set Mr=Mr+1
set Nr[Mr]=1498702693
set Mr=Mr+1
set Nr[Mr]=1146381105
set Mr=Mr+1
set Nr[Mr]=1146381106
set Mr=Mr+1
set Nr[Mr]=1146382133
set Mr=Mr+1
set Nr[Mr]=1146382134
set Mr=Mr+1
set Nr[Mr]=1515480113
set Mr=Mr+1
set Nr[Mr]=1515480117
set Mr=Mr+1
set Nr[Mr]=1230268209
set Mr=Mr+1
set Nr[Mr]=1230268210
set Mr=Mr+1
set Nr[Mr]=1515484024
set Mr=Mr+1
set Nr[Mr]=1146382129
set Mr=Mr+1
set Nr[Mr]=1146382130
set Mr=Mr+1
set Nr[Mr]=1230272561
set Mr=Mr+1
set Nr[Mr]=1230272562
set Mr=Mr+1
set Nr[Mr]=1280599345
set Mr=Mr+1
set Nr[Mr]=1280599346
set Mr=Mr+1
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function pgr takes nothing returns boolean
return true
endfunction
function pmu takes nothing returns nothing
local boolean ymu=false
local unit lmu
local unit bmu
if GetSpellAbilityId()==kq then
set lmu=GetSpellAbilityUnit()
set bmu=GetSpellTargetUnit()
if GetUnitAbilityLevel(lmu,jq)>0 then
call UnitRemoveAbility(lmu,jq)
set ymu=true
endif
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FrostArmor\\FrostArmorDamage.mdl",bmu,"chest"))
call UnitDamageTarget(lmu,bmu,GetUnitAbilityLevel(lmu,kq)*75.,true,true,ATTACK_TYPE_MELEE,DAMAGE_TYPE_NORMAL,WEAPON_TYPE_WHOKNOWS)
if ymu then
call UnitDamageTarget(lmu,bmu,GetUnitAbilityLevel(lmu,kq)*75.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endif
call cfw(Qq+I2S(GetRandomInt(1,5))+".wav",GetUnitX(lmu),GetUnitY(lmu))
call cfw(Wq,GetUnitX(bmu),GetUnitY(bmu))
endif
set lmu=null
set bmu=null
endfunction
function pwu takes nothing returns boolean
set yy=500
set py=500
set ey=0
set qy=0
set ay[0]="A"
set ay[1]="B"
set ay[2]="C"
set ay[3]="D"
set ay[4]="E"
set ay[5]="F"
set ay[6]="G"
set ay[7]="H"
set ay[8]="I"
set ay[9]="J"
set ay[10]="K"
set ay[11]="L"
set ay[12]="M"
set ay[13]="N"
set ay[14]="O"
set ay[15]="P"
set ay[16]="Q"
set ay[17]="R"
set ay[18]="S"
set ay[19]="T"
set ay[20]="U"
set ay[21]="V"
set ay[22]="W"
set ay[23]="X"
set ay[24]="Y"
set ay[25]="Z"
set ay[26]="a"
set ay[27]="b"
set ay[28]="c"
set ay[29]="d"
set ay[30]="e"
set ay[31]="f"
set ay[32]="g"
set ay[33]="h"
set ay[34]="i"
set ay[35]="j"
set ay[36]="k"
set ay[37]="l"
set ay[38]="m"
set ay[39]="n"
set ay[40]="o"
set ay[41]="p"
set ay[42]="q"
set ay[43]="r"
set ay[44]="s"
set ay[45]="t"
set ay[46]="u"
set ay[47]="v"
set ay[48]="w"
set ay[49]="x"
set ay[50]="y"
set ay[51]="z"
set ay[52]="0"
set ay[53]="1"
set ay[54]="2"
set ay[55]="3"
set ay[56]="4"
set ay[57]="5"
set ay[58]="6"
set ay[59]="7"
set ay[60]="8"
set ay[61]="9"
set ay[62]="+"
set ay[63]="/"
set ny[0]=-1
set ny[1]=-1
set ny[2]=-1
set ny[3]=-1
set ny[4]=-1
set ny[5]=-1
set ny[6]=-1
set ny[7]=-1
set ny[8]=-1
set ny[9]=-1
set ny[10]=-1
set ny[11]=-1
set ny[12]=-1
set ny[13]=-1
set ny[14]=-1
set ny[15]=-1
set ny[16]=-1
set ny[17]=-1
set ny[18]=-1
set ny[19]=-1
set ny[20]=-1
set ny[21]=-1
set ny[22]=-1
set ny[23]=-1
set ny[24]=-1
set ny[25]=-1
set ny[26]=-1
set ny[27]=-1
set ny[28]=-1
set ny[29]=-1
set ny[30]=-1
set ny[31]=-1
set ny[32]=-1
set ny[33]=-1
set ny[34]=-1
set ny[35]=-1
set ny[36]=-1
set ny[37]=-1
set ny[38]=-1
set ny[39]=-1
set ny[40]=-1
set ny[41]=-1
set ny[42]=-1
set ny[43]=62
set ny[44]=-1
set ny[45]=-1
set ny[46]=-1
set ny[47]=63
set ny[48]=52
set ny[49]=53
set ny[50]=54
set ny[51]=55
set ny[52]=56
set ny[53]=57
set ny[54]=58
set ny[55]=59
set ny[56]=60
set ny[57]=61
set ny[58]=-1
set ny[59]=-1
set ny[60]=-1
set ny[61]=-1
set ny[62]=-1
set ny[63]=-1
set ny[64]=-1
set ny[65]=0
set ny[66]=1
set ny[67]=2
set ny[68]=3
set ny[69]=4
set ny[70]=5
set ny[71]=6
set ny[72]=7
set ny[73]=8
set ny[74]=9
set ny[75]=10
set ny[76]=11
set ny[77]=12
set ny[78]=13
set ny[79]=14
set ny[80]=15
set ny[81]=16
set ny[82]=17
set ny[83]=18
set ny[84]=19
set ny[85]=20
set ny[86]=21
set ny[87]=22
set ny[88]=23
set ny[89]=24
set ny[90]=25
set ny[91]=-1
set ny[92]=-1
set ny[93]=-1
set ny[94]=-1
set ny[95]=-1
set ny[96]=-1
set ny[97]=26
set ny[98]=27
set ny[99]=28
set ny[100]=29
set ny[101]=30
set ny[102]=31
set ny[103]=32
set ny[104]=33
set ny[105]=34
set ny[106]=35
set ny[107]=36
set ny[108]=37
set ny[109]=38
set ny[110]=39
set ny[111]=40
set ny[112]=41
set ny[113]=42
set ny[114]=43
set ny[115]=44
set ny[116]=45
set ny[117]=46
set ny[118]=47
set ny[119]=48
set ny[120]=49
set ny[121]=50
set ny[122]=51
set ny[123]=-1
set ny[124]=-1
set ny[125]=-1
set ny[126]=-1
set ny[127]=-1
set ny[128]=-1
set ny[129]=-1
set ny[130]=-1
set ny[131]=-1
set ny[132]=-1
set ny[133]=-1
set ny[134]=-1
set ny[135]=-1
set ny[136]=-1
set ny[137]=-1
set ny[138]=-1
set ny[139]=-1
set ny[140]=-1
set ny[141]=-1
set ny[142]=-1
set ny[143]=-1
set ny[144]=-1
set ny[145]=-1
set ny[146]=-1
set ny[147]=-1
set ny[148]=-1
set ny[149]=-1
set ny[150]=-1
set ny[151]=-1
set ny[152]=-1
set ny[153]=-1
set ny[154]=-1
set ny[155]=-1
set ny[156]=-1
set ny[157]=-1
set ny[158]=-1
set ny[159]=-1
set ny[160]=-1
set ny[161]=-1
set ny[162]=-1
set ny[163]=-1
set ny[164]=-1
set ny[165]=-1
set ny[166]=-1
set ny[167]=-1
set ny[168]=-1
set ny[169]=-1
set ny[170]=-1
set ny[171]=-1
set ny[172]=-1
set ny[173]=-1
set ny[174]=-1
set ny[175]=-1
set ny[176]=-1
set ny[177]=-1
set ny[178]=-1
set ny[179]=-1
set ny[180]=-1
set ny[181]=-1
set ny[182]=-1
set ny[183]=-1
set ny[184]=-1
set ny[185]=-1
set ny[186]=-1
set ny[187]=-1
set ny[188]=-1
set ny[189]=-1
set ny[190]=-1
set ny[191]=-1
set ny[192]=-1
set ny[193]=-1
set ny[194]=-1
set ny[195]=-1
set ny[196]=-1
set ny[197]=-1
set ny[198]=-1
set ny[199]=-1
set ny[200]=-1
set ny[201]=-1
set ny[202]=-1
set ny[203]=-1
set ny[204]=-1
set ny[205]=-1
set ny[206]=-1
set ny[207]=-1
set ny[208]=-1
set ny[209]=-1
set ny[210]=-1
set ny[211]=-1
set ny[212]=-1
set ny[213]=-1
set ny[214]=-1
set ny[215]=-1
set ny[216]=-1
set ny[217]=-1
set ny[218]=-1
set ny[219]=-1
set ny[220]=-1
set ny[221]=-1
set ny[222]=-1
set ny[223]=-1
set ny[224]=-1
set ny[225]=-1
set ny[226]=-1
set ny[227]=-1
set ny[228]=-1
set ny[229]=-1
set ny[230]=-1
set ny[231]=-1
set ny[232]=-1
set ny[233]=-1
set ny[234]=-1
set ny[235]=-1
set ny[236]=-1
set ny[237]=-1
set ny[238]=-1
set ny[239]=-1
set ny[240]=-1
set ny[241]=-1
set ny[242]=-1
set ny[243]=-1
set ny[244]=-1
set ny[245]=-1
set ny[246]=-1
set ny[247]=-1
set ny[248]=-1
set ny[249]=-1
set ny[250]=-1
set ny[251]=-1
set ny[252]=-1
set ny[253]=-1
set ny[254]=-1
return true
endfunction
function q1w takes nothing returns boolean
if not(GetSpellAbilityId()==1093681996)then
return false
endif
return true
endfunction
function q2w takes nothing returns boolean
if GetSpellAbilityId()==1093678664 then
return true
endif
return false
endfunction
function q3w takes nothing returns nothing
call GroupRemoveUnit(Ot,GetSpellAbilityUnit())
endfunction
function e5w takes nothing returns boolean
if GetSpellAbilityId()==1093677896 then
return true
endif
if GetSpellAbilityId()==1093677911 then
return true
endif
if GetSpellAbilityId()==1093677897 then
return true
endif
return false
endfunction
function q5w takes nothing returns boolean
if not e5w()then
return false
endif
return true
endfunction
function q6w takes nothing returns boolean
return GetSpellAbilityId()==1093678155
endfunction
function q7w takes nothing returns boolean
return GetSpellAbilityId()==1093684053
endfunction
function qCw takes nothing returns boolean
if not(GetSpellAbilityId()==1093678921)then
return false
endif
return true
endfunction
function qJw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
call GetConvertedPlayerId(GetTriggerPlayer())
call GetUnitLoc(null)
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Riw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function qKw takes nothing returns boolean
if not(GetSpellAbilityId()==1093679434)then
return false
endif
return true
endfunction
function qLw takes nothing returns nothing
set Lr=0.25
set Jr=false
set mr=GetSpellTargetLoc()
set xr=GetTriggerUnit()
set mt=GetUnitAbilityLevelSwapped(1093682506,GetTriggerUnit())
set Er=15.00
set Pr="Abilities\\Weapons\\FaerieDragonMissile\\FaerieDragonMissile.mdl"
set Dr="slam"
set Xr=0.30
call ConditionalTriggerExecute(IS)
endfunction
function qMw takes nothing returns nothing
local integer eMw=0
loop
exitwhen eMw>Cs
call UnitRemoveAbility(GetEnumUnit(),Vs[eMw])
set eMw=eMw+1
endloop
set eMw=0
endfunction
function FUS takes string gUS returns integer
local integer hUS
set w3[MM]=gUS
set MM=MM+1
if Yj==0 then
if Gj<32768 then
set Gj=Gj+1
set hUS=Gj
set gj[hUS]=1218
else
call Mau("Out of memory: Could not create IExceptionHandler_registerExceptionHandler_SLangChatSystem.","when calling error in SLangChatSystem, line 177")
set hUS=0
endif
else
set Yj=Yj-1
set hUS=Tj[Yj]
set gj[hUS]=1218
endif
set MM=MM-1
return hUS
endfunction
function GUS takes string TUS returns integer
local integer YUS
set w3[MM]=TUS
set MM=MM+1
if dj==0 then
if fj<32768 then
set fj=fj+1
set YUS=fj
set Rj[YUS]=1237
else
call Mau("Out of memory: Could not create ISystemMessagesReceiver_registerSystemMessagesReceiver_SLangChatSystem.","when calling error in SLangChatSystem, line 175")
set YUS=0
endif
else
set dj=dj-1
set YUS=nj[dj]
set Rj[YUS]=1237
endif
set MM=MM-1
return YUS
endfunction
function HUS takes string AUS returns integer
local integer DUS
set w3[MM]=AUS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set DUS=kj
set jj[DUS]=1165
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_registerBuiltin_SLangChatSystem.","when calling error in SLangChatSystem, line 206")
set DUS=0
endif
else
set Fj=Fj-1
set DUS=hj[Fj]
set jj[DUS]=1165
endif
set MM=MM-1
return DUS
endfunction
function LUS takes string JUS returns integer
local integer KUS
set w3[MM]=JUS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set KUS=kj
set jj[KUS]=1166
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_registerBuiltin_SLangChatSystem.","when calling error in SLangChatSystem, line 213")
set KUS=0
endif
else
set Fj=Fj-1
set KUS=hj[Fj]
set jj[KUS]=1166
endif
set MM=MM-1
return KUS
endfunction
function O9r takes integer o9r returns nothing
set Ed[Zd]=o9r
set Zd=Zd+1
endfunction
function PUS takes string UUS returns integer
local integer IUS
set w3[MM]=UUS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set IUS=kj
set jj[IUS]=967
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerBuiltin_SLangChatSystem.","when calling error in SLangChatSystem, line 202")
set IUS=0
endif
else
set Fj=Fj-1
set IUS=hj[Fj]
set jj[IUS]=967
endif
set MM=MM-1
return IUS
endfunction
function QUS takes string vUS returns integer
local integer mUS
set w3[MM]=vUS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mUS=kj
set jj[mUS]=972
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangChatSystem.","when calling error in SLangChatSystem, line 179")
set mUS=0
endif
else
set Fj=Fj-1
set mUS=hj[Fj]
set jj[mUS]=972
endif
set MM=MM-1
return mUS
endfunction
function RUS takes string dUS returns integer
local integer fUS
set w3[MM]=dUS
set MM=MM+1
if ej==0 then
if qj<32768 then
set qj=qj+1
set fUS=qj
set aj[fUS]=1223
else
call Mau("Out of memory: Could not create IMessageFormatter_setFormatter_SLangChatSystem.","when calling error in SLangChatSystem, line 173")
set fUS=0
endif
else
set ej=ej-1
set fUS=pj[ej]
set aj[fUS]=1223
endif
set MM=MM-1
return fUS
endfunction
function Sfu takes string ifu returns boolean
return BlzLoadTOCFile(ifu)
endfunction
function VUS takes string XUS returns integer
local integer CUS
set w3[MM]=XUS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set CUS=kj
set jj[CUS]=968
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerBuiltin_SLangChatSystem.","when calling error in SLangChatSystem, line 220")
set CUS=0
endif
else
set Fj=Fj-1
set CUS=hj[Fj]
set jj[CUS]=968
endif
set MM=MM-1
return CUS
endfunction
function ZUS takes string WUS returns integer
local integer EUS
set w3[MM]=WUS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set EUS=kj
set jj[EUS]=973
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangChatSystem.","when calling error in SLangChatSystem, line 190")
set EUS=0
endif
else
set Fj=Fj-1
set EUS=hj[Fj]
set jj[EUS]=973
endif
set MM=MM-1
return EUS
endfunction
function b4u takes integer l4u returns nothing
set En[Zn]=l4u
set Zn=Zn+1
endfunction
function bUS takes string OUS returns integer
local integer lUS
set w3[MM]=OUS
set MM=MM+1
if ej==0 then
if qj<32768 then
set qj=qj+1
set lUS=qj
set aj[lUS]=1221
else
call Mau("Out of memory: Could not create IMessageFormatter_SLangChatSystem.","when calling error in SLangChatSystem, line 158")
set lUS=0
endif
else
set ej=ej-1
set lUS=pj[ej]
set aj[lUS]=1221
endif
set MM=MM-1
return lUS
endfunction
function eUS takes string yUS returns integer
local integer pUS
set w3[MM]=yUS
set MM=MM+1
if ej==0 then
if qj<32768 then
set qj=qj+1
set pUS=qj
set aj[pUS]=1222
else
call Mau("Out of memory: Could not create IMessageFormatter_SLangChatSystem.","when calling error in SLangChatSystem, line 159")
set pUS=0
endif
else
set ej=ej-1
set pUS=pj[ej]
set aj[pUS]=1222
endif
set MM=MM-1
return pUS
endfunction
function Adt takes integer Pdt returns nothing
set gJ[Pdt]=0
endfunction
function Xdt takes integer Kdt,string Ldt returns nothing
set w3[MM]=Ldt
set MM=MM+1
call Adt(Kdt)
set YJ[Kdt]=a4s("when calling new_LinkedList in SLangChatSystem, line 96")
set GJ[Kdt]=wJs("when calling new_HashSet in SLangChatSystem, line 97")
set MM=MM-1
endfunction
function oIS takes string SIS returns integer
local integer cIS
set w3[MM]=SIS
set MM=MM+1
if Ej==0 then
if Zj<32768 then
set Zj=Zj+1
set cIS=Zj
set Uj[cIS]=1399
else
call Mau("Out of memory: Could not create Log.","when calling error in SLangChatSystem, line 88")
set cIS=0
endif
else
set Ej=Ej-1
set cIS=Wj[Ej]
set Uj[cIS]=1399
endif
set MM=MM-1
return cIS
endfunction
function Jdt takes string Ddt returns integer
local integer Hdt
set w3[MM]=Ddt
set MM=MM+1
set Hdt=oIS("when calling alloc_Log in SLangChatSystem, line 95")
call Xdt(Hdt,"when calling construct_Log in SLangChatSystem, line 95")
set MM=MM-1
return Hdt
endfunction
function udt takes integer wdt returns nothing
endfunction
function Odt takes integer Sdt,integer cdt,string odt returns nothing
set w3[MM]=odt
set MM=MM+1
call udt(Sdt)
set RJ[Sdt]=cdt
set TJ[Sdt]=Jdt("when calling new_Log in SLangChatSystem, line 142")
set MM=MM-1
endfunction
function iIS takes string sIS returns integer
local integer tIS
set w3[MM]=sIS
set MM=MM+1
if vj==0 then
if mj<32768 then
set mj=mj+1
set tIS=mj
set Qj[tIS]=700
else
call Mau("Out of memory: Could not create Channel.","when calling error in SLangChatSystem, line 135")
set tIS=0
endif
else
set vj=vj-1
set tIS=xj[vj]
set Qj[tIS]=700
endif
set MM=MM-1
return tIS
endfunction
function idt takes integer rdt,string sdt returns integer
local integer tdt
set w3[MM]=sdt
set MM=MM+1
set tdt=iIS("when calling alloc_Channel in SLangChatSystem, line 140")
call Odt(tdt,rdt,"when calling construct_Channel in SLangChatSystem, line 140")
set MM=MM-1
return tdt
endfunction
function Hnt takes integer Ant,integer Dnt returns nothing
set RJ[Ant]=Dnt
endfunction
function l3c takes integer c3c,integer o3c,string O3c returns nothing
set w3[MM]=O3c
set MM=MM+1
if Qj[c3c]==0 then
if c3c==0 then
call Mau("Nullpointer exception when calling Channel.setFormatter","when calling error in SLangChatSystem, line 144")
else
call Mau("Called Channel.setFormatter on invalid object.","when calling error in SLangChatSystem, line 144")
endif
endif
call Hnt(c3c,o3c)
set MM=MM-1
endfunction
function nUS takes string qUS returns integer
local integer aUS
set w3[MM]=qUS
set MM=MM+1
if EG==0 then
if ZG<32768 then
set ZG=ZG+1
set aUS=ZG
set UG[aUS]=690
else
call Mau("Out of memory: Could not create CallbackSingle_nullTimer_SLangChatSystem.","when calling error in SLangChatSystem, line 168")
set aUS=0
endif
else
set EG=EG-1
set aUS=WG[EG]
set UG[aUS]=690
endif
set MM=MM-1
return aUS
endfunction
function rIS takes string wIS returns integer
local integer uIS
set w3[MM]=wIS
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uIS=kj
set jj[uIS]=969
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerBuiltin_SLangChatSystem.","when calling error in SLangChatSystem, line 227")
set uIS=0
endif
else
set Fj=Fj-1
set uIS=hj[Fj]
set jj[uIS]=969
endif
set MM=MM-1
return uIS
endfunction
function QPu takes string iPu returns boolean
local integer SPu
local integer cPu
local integer oPu
local integer OPu
local integer lPu
local integer bPu
local integer yPu
local integer pPu
local integer ePu
local integer qPu
local integer aPu
local integer nPu
local integer dPu
local integer fPu
local integer RPu
local integer TPu
local integer YPu
local integer GPu
local integer gPu
local integer hPu
local integer FPu
local integer kPu
local integer jPu
local integer xPu
local integer vPu
local integer mPu
set w3[MM]=iPu
set MM=MM+1
set Ca=24
set Va=512
set SPu=bUS("when calling alloc_IMessageFormatter_SLangChatSystem in SLangChatSystem, line 158")
set Ka=idt(SPu,"when calling new_Channel in SLangChatSystem, line 158")
set cPu=eUS("when calling alloc_IMessageFormatter_SLangChatSystem in SLangChatSystem, line 159")
set La=idt(cPu,"when calling new_Channel in SLangChatSystem, line 159")
call Sfu("ui\\framedef\\templates.toc")
set oPu=nUS("when calling alloc_CallbackSingle_nullTimer_SLangChatSystem in SLangChatSystem, line 168")
call KGs(oPu)
call Cou(oPu,"when calling nullTimer in SLangChatSystem, line 168")
set OPu=0
set lPu=bj_MAX_PLAYERS-1
loop
exitwhen OPu>lPu
set yPu=idt(0,"when calling new_Channel in SLangChatSystem, line 173")
set mPu=yPu
set bPu=RUS("when calling alloc_IMessageFormatter_setFormatter_SLangChatSystem in SLangChatSystem, line 173")
call l3c(mPu,bPu,"when calling setFormatter in SLangChatSystem, line 173")
set Xa[OPu]=yPu
set OPu=OPu+1
endloop
set pPu=GUS("when calling alloc_ISystemMessagesReceiver_registerSystemMessagesReceiver_SLangChatSystem in SLangChatSystem, line 175")
call O9r(pPu)
set ePu=FUS("when calling alloc_IExceptionHandler_registerExceptionHandler_SLangChatSystem in SLangChatSystem, line 177")
call b4u(ePu)
set qPu=QUS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangChatSystem in SLangChatSystem, line 179")
set aPu=eDt(qPu,"when calling new_BuiltinData in SLangChatSystem, line 179")
call dao(aPu,o2u(),o2u(),"when calling setArgumentsTypes in SLangChatSystem, line 189")
call jBu(WHt(aPu,"when calling new_BuiltinFunction in SLangChatSystem, line 179"),"sendmsg","when calling registerProtectedBuiltin in SLangChatSystem, line 179")
set nPu=ZUS("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_SLangChatSystem in SLangChatSystem, line 190")
set dPu=eDt(nPu,"when calling new_BuiltinData in SLangChatSystem, line 190")
call dao(dPu,o2u(),o2u(),"when calling setArgumentsTypes in SLangChatSystem, line 200")
call jBu(WHt(dPu,"when calling new_BuiltinFunction in SLangChatSystem, line 190"),"dumplog","when calling registerProtectedBuiltin in SLangChatSystem, line 190")
set fPu=PUS("when calling alloc_IBuiltin_setArgumentsTypes_registerBuiltin_SLangChatSystem in SLangChatSystem, line 202")
set RPu=eDt(fPu,"when calling new_BuiltinData in SLangChatSystem, line 202")
call Fao(RPu,o2u(),"when calling setArgumentsTypes in SLangChatSystem, line 205")
call qBu(WHt(RPu,"when calling new_BuiltinFunction in SLangChatSystem, line 202"),"!","when calling registerBuiltin in SLangChatSystem, line 202")
set TPu=HUS("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_registerBuiltin_SLangChatSystem in SLangChatSystem, line 206")
set YPu=eDt(TPu,"when calling new_BuiltinData in SLangChatSystem, line 206")
call Fao(YPu,o2u(),"when calling setArgumentsTypes in SLangChatSystem, line 212")
set GPu=YPu
call k4o(GPu,"when calling setRequiringEnumUnit in SLangChatSystem, line 212")
call qBu(WHt(GPu,"when calling new_BuiltinFunction in SLangChatSystem, line 206"),"%","when calling registerBuiltin in SLangChatSystem, line 206")
set gPu=LUS("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_registerBuiltin_SLangChatSystem in SLangChatSystem, line 213")
set hPu=eDt(gPu,"when calling new_BuiltinData in SLangChatSystem, line 213")
call Fao(hPu,o2u(),"when calling setArgumentsTypes in SLangChatSystem, line 219")
set FPu=hPu
call k4o(FPu,"when calling setRequiringEnumUnit in SLangChatSystem, line 219")
call qBu(WHt(FPu,"when calling new_BuiltinFunction in SLangChatSystem, line 213"),"%*","when calling registerBuiltin in SLangChatSystem, line 213")
set kPu=VUS("when calling alloc_IBuiltin_setArgumentsTypes_registerBuiltin_SLangChatSystem in SLangChatSystem, line 220")
set jPu=eDt(kPu,"when calling new_BuiltinData in SLangChatSystem, line 220")
call dao(jPu,o2u(),o2u(),"when calling setArgumentsTypes in SLangChatSystem, line 226")
call qBu(WHt(jPu,"when calling new_BuiltinFunction in SLangChatSystem, line 220"),"setICname","when calling registerBuiltin in SLangChatSystem, line 220")
set xPu=rIS("when calling alloc_IBuiltin_setArgumentsTypes_registerBuiltin_SLangChatSystem in SLangChatSystem, line 227")
set vPu=eDt(xPu,"when calling new_BuiltinData in SLangChatSystem, line 227")
call Fao(vPu,o2u(),"when calling setArgumentsTypes in SLangChatSystem, line 230")
call qBu(WHt(vPu,"when calling new_BuiltinFunction in SLangChatSystem, line 227"),".","when calling registerBuiltin in SLangChatSystem, line 227")
set MM=MM-1
return true
endfunction
function qRo takes nothing returns boolean
set MM=0
return QPu("SLangChatSystem, line 1")
endfunction
function Okr takes string ckr returns nothing
local integer okr
set w3[MM]=ckr
set MM=MM+1
set okr=bkr(kmu())
if okr!=0 and(not tto(okr,"when calling areAllPlayersSynced in SyncSimple, line 180"))then
call QZu("SimpleSynchronizer: dummy unit was removed before all players synced, make sure your map doesn't remove neutral dummy units")
endif
set MM=MM-1
endfunction
function qTo takes nothing returns nothing
set MM=0
call Okr("SyncSimple, line 177")
endfunction
function eXw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
return true
endfunction
function qXw takes nothing returns nothing
if eXw()then
call UnitAddTypeBJ(UNIT_TYPE_MECHANICAL,GetEnumUnit())
endif
endfunction
function qZw takes nothing returns nothing
set Yw=1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=Yw+1
set Yw=0
call DestroyTrigger(GetTriggeringTrigger())
endfunction
function qhw takes nothing returns nothing
local unit ehw
if GetUnitAbilityLevel(GetTriggerUnit(),1110455627)==0 then
set ehw=null
return
endif
set ehw=GetTriggerUnit()
call UnitRemoveAbility(ehw,1112757326)
call UnitRemoveAbility(ehw,1112560453)
call BlzSetEventDamage(GetEventDamage()*0.7)
set ehw=null
set ehw=null
endfunction
function C7s takes unit X7s returns boolean
return UnitAlive(X7s)
endfunction
function qiu takes nothing returns boolean
return C7s(GetFilterUnit())
endfunction
function qmu takes nothing returns nothing
local unit emu=GetEventDamageSource()
if GetUnitAbilityLevel(emu,kq)>0 and GetRandomInt(0,1000)<=125 then
call Ndw(GetOwningPlayer(emu),xq,GetUnitAbilityLevel(emu,kq),"attackonce",emu,GetUnitX(emu),GetUnitY(emu))
endif
set emu=null
endfunction
function qmw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function qvw takes nothing returns boolean
return GetBooleanAnd(IsUnitAliveBJ(GetFilterUnit())==true,IsUnitEnemy(GetFilterUnit(),GetOwningPlayer(Nu))==true)
endfunction
function Oxw takes nothing returns boolean
if not(DistanceBetweenPoints(Ju[12],Ju[10])<=Zu+10.00)then
return false
endif
return true
endfunction
function Sxw takes nothing returns boolean
if not(LoadBooleanBJ(2,GetHandleIdBJ(GetEnumUnit()),Au)==true)then
return false
endif
return true
endfunction
function exw takes nothing returns boolean
if not(CountUnitsInGroup(cr[rr])==0)then
return false
endif
if not(CountUnitsInGroup(lr[rr])==0)then
return false
endif
return true
endfunction
function lxw takes nothing returns boolean
if not(RectContainsLoc(GetPlayableMapRect(),Ju[12])==true)then
return false
endif
return true
endfunction
function pxw takes nothing returns boolean
if not(CountUnitsInGroup(Lu)==0)then
return false
endif
return true
endfunction
function yxw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function qxw takes nothing returns nothing
set Ju[10]=LoadLocationHandleBJ(1,GetHandleIdBJ(GetEnumUnit()),Au)
set Ju[11]=GetUnitLoc(GetEnumUnit())
if Sxw()then
set Ju[12]=PolarProjectionBJ(Ju[11],Zu,AngleBetweenPoints(Ju[4],Ju[10]))
set tr=DistanceBetweenPoints(Ju[4],Ju[10])
set yr=DistanceBetweenPoints(Ju[4],Ju[12])
else
set Ju[12]=PolarProjectionBJ(Ju[11],Zu,AngleBetweenPoints(Ju[5],Ju[10]))
set tr=DistanceBetweenPoints(Ju[5],Ju[10])
set yr=DistanceBetweenPoints(Ju[5],Ju[12])
endif
call SetUnitPositionLoc(GetEnumUnit(),Ju[12])
call SetUnitFlyHeightBJ(GetEnumUnit(),4.00*(Eu/tr)*yr*((-(1.00*yr))/tr+1.),0.00)
if lxw()then
if Oxw()then
call KillUnit(GetEnumUnit())
call GroupRemoveUnitSimple(GetEnumUnit(),cr[rr])
call GroupAddUnitSimple(GetEnumUnit(),Ku)
call SaveIntegerBJ(Du+3,0,GetHandleIdBJ(GetEnumUnit()),Au)
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Iu,Ju[12],Condition(Lww_1076)),Xww_2143)
call RemoveLocation(Ju[10])
endif
else
call GroupRemoveUnitSimple(GetEnumUnit(),cr[rr])
call GroupAddUnitSimple(GetEnumUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetEnumUnit()),Au)
call RemoveLocation(Ju[10])
endif
if exw()then
if yxw()then
call ForForce(GetPlayersAll(),Cww_273)
endif
call GroupRemoveUnitSimple(Nu,Lu)
call FlushChildHashtableBJ(Bu,Au)
if pxw()then
call DisableTrigger(GetTriggeringTrigger())
set Vu=0
endif
call RemoveLocation(Ju[4])
call RemoveLocation(Ju[5])
endif
call RemoveLocation(Ju[11])
call RemoveLocation(Ju[12])
endfunction
function r2w takes nothing returns nothing
local unit M4w=GetSpellAbilityUnit()
local integer w2w=0
local integer u2w=GetUnitAbilityLevel(M4w,1093682742)
if IsUnitInGroup(M4w,ot)==true then
call GroupRemoveUnit(ot,M4w)
call iTw(1.)
endif
call GroupAddUnit(ot,M4w)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\MirrorImage\\MirrorImageCaster.mdl",M4w,"chest"))
call UnitAddAbility(M4w,1093682754)
call UnitMakeAbilityPermanent(M4w,true,1093682754)
call SetUnitAbilityLevel(M4w,1093682754,u2w)
call UnitAddAbility(M4w,1093683797)
call UnitMakeAbilityPermanent(M4w,true,1093683797)
call SetUnitAbilityLevel(M4w,1093683797,u2w)
set u2w=0
loop
exitwhen IsUnitInGroup(M4w,ot)==false
call iTw(1.)
set w2w=w2w+1
if w2w==6 or GetUnitState(M4w,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(ot,M4w)
endif
endloop
call UnitRemoveAbility(M4w,1093682754)
call UnitRemoveAbility(M4w,1093683797)
call UnitRemoveAbility(M4w,1110455090)
set M4w=null
set w2w=0
set M4w=null
endfunction
function wTw takes boolean MRw returns integer
if MRw then
return 1
else
return 0
endif
endfunction
function r9u takes nothing returns nothing
local unit N8w=GetSpellAbilityUnit()
local unit M8w=GetSpellTargetUnit()
local timer w9u=LoadTimerHandle(nr,GetHandleId(M8w),StringHash("daT"))
local effect u9u=null
if w9u!=null then
set u9u=LoadEffectHandle(nr,GetHandleId(w9u),StringHash("e"))
call FlushChildHashtable(nr,GetHandleId(w9u))
call DestroyTimer(w9u)
else
call UnitAddAbility(M8w,1095722085)
call UnitMakeAbilityPermanent(M8w,true,1095722085)
endif
set w9u=CreateTimer()
call SaveTimerHandle(nr,GetHandleId(M8w),StringHash("daT"),w9u)
call SaveUnitHandle(nr,GetHandleId(w9u),StringHash("s"),M8w)
if u9u==null then
call SaveEffectHandle(nr,GetHandleId(w9u),StringHash("e"),AddSpecialEffectTarget("Abilities\\Spells\\Other\\Disarm\\Disarm.mdx",M8w,"overhead"))
else
call SaveEffectHandle(nr,GetHandleId(w9u),StringHash("e"),u9u)
set u9u=null
endif
call TimerStart(w9u,30*GetUnitAbilityLevel(N8w,1095722081)/(1+9*wTw(IsUnitType(M8w,UNIT_TYPE_HERO))),false,lyw)
set N8w=null
set M8w=null
set w9u=null
set N8w=null
set M8w=null
set w9u=null
set u9u=null
endfunction
function rBw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call GroupAddUnit(Yt,GetEnumUnit())
endif
endfunction
function rCw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call CreateItemLoc(1227896410,G)
call RemoveLocation(G)
endfunction
function rEw takes nothing returns nothing
call SetBlightRadiusLocBJ(true,GetEnumPlayer(),G,220.00)
endfunction
function rHw takes nothing returns nothing
set G=GetUnitLoc(GetEnumUnit())
call EnumDestructablesInCircleBJ(256.,G,Dtw)
call RemoveLocation(G)
endfunction
function rIw takes nothing returns nothing
local timer uIw=GetExpiredTimer()
call SaveTimerHandle(nr,GetHandleId(LoadUnitHandle(nr,GetHandleId(uIw),StringHash("aiRu"))),StringHash("aiR"),null)
call SaveUnitHandle(nr,GetHandleId(uIw),StringHash("aiRu"),null)
call DestroyTrigger(LoadTriggerHandle(nr,GetHandleId(uIw),StringHash("aiR")))
call SaveTriggerHandle(nr,GetHandleId(uIw),StringHash("aiR"),null)
call DestroyTimer(uIw)
set uIw=null
set uIw=null
endfunction
function uLw takes nothing returns boolean
if not(kr[1]==0)then
return false
endif
return true
endfunction
function rLw takes nothing returns nothing
if uLw()then
call EnableTrigger(PS)
endif
set kr[1]=kr[1]+1
set kr[2]=kr[2]+1
set jr[1]=GetUnitLoc(xr)
set vr[kr[2]]=DistanceBetweenPoints(jr[1],mr)
set Qr[kr[2]]=0.00
set Wr[kr[2]]=Er
set Zr[kr[2]]=xr
set Qt[kr[2]]=mt
set Ur[kr[2]]=AngleBetweenPoints(jr[1],mr)
set Ir[kr[2]]=Pr
set Ar[kr[2]]=Dr
set Hr[kr[2]]=Jr
set Kr[kr[2]]=Lr*vr[kr[2]]
call SetUnitPathing(xr,false)
call SetUnitTimeScalePercent(xr,Xr*100.00)
call SetUnitAnimation(xr,Dr)
call GroupAddUnitSimple(xr,Cr)
call UnitAddAbilityBJ(1098015094,xr)
call UnitRemoveAbilityBJ(1098015094,xr)
call RemoveLocation(jr[1])
call RemoveLocation(mr)
endfunction
function uPw takes nothing returns boolean
if not(GetEventPlayerChatString()=="*"+nw[GetForLoopIndexA()])then
return false
endif
return true
endfunction
function rPw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAll(GetTriggerPlayer())
set bj_forLoopAIndex=0
set bj_forLoopAIndexEnd=dw
loop
exitwhen bj_forLoopAIndex>bj_forLoopAIndexEnd
if uPw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Lsw)
endif
set bj_forLoopAIndex=bj_forLoopAIndex+1
endloop
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function uQw takes nothing returns boolean
if GetSpellAbilityId()==1096970854 then
return true
endif
if GetSpellAbilityId()==1096971634 then
return true
endif
if GetSpellAbilityId()==1096971573 then
return true
endif
if GetSpellAbilityId()==1096971570 then
return true
endif
if GetSpellAbilityId()==1096971571 then
return true
endif
if GetSpellAbilityId()==1097035878 then
return true
endif
if GetSpellAbilityId()==1096906341 then
return true
endif
if GetSpellAbilityId()==1097167974 then
return true
endif
if GetSpellAbilityId()==1095069029 then
return true
endif
if GetSpellAbilityId()==1095071337 then
return true
endif
if GetSpellAbilityId()==1095059820 then
return true
endif
if GetSpellAbilityId()==1098080817 then
return true
endif
if GetSpellAbilityId()==1098080818 then
return true
endif
if GetSpellAbilityId()==1098080819 then
return true
endif
if GetSpellAbilityId()==1098085486 then
return true
endif
if GetSpellAbilityId()==1098015094 then
return true
endif
if GetSpellAbilityId()==1097691750 then
return true
endif
return false
endfunction
function rQw takes nothing returns boolean
if not uQw()then
return false
endif
return true
endfunction
function edu takes string pdu returns boolean
set w3[MM]=pdu
set MM=MM+1
call wJs("when calling new_HashSet in Formations, line 18")
set MM=MM-1
return true
endfunction
function rRo takes nothing returns boolean
set MM=0
return edu("Formations, line 1")
endfunction
function Eau takes string Qau returns nothing
local unit Wau
set w3[MM]=Qau
set MM=MM+1
if GetSpellAbilityId()==Vp then
set Wau=GetSpellAbilityUnit()
call KTc(Mp,Wau,2.,"when calling apply in EmergencyEvade, line 25")
call Ndw(GetOwningPlayer(Wau),Np,GetUnitAbilityLevel(Wau,Vp),"attackonce",Wau,GetUnitX(Wau),GetUnitY(Wau))
endif
set MM=MM-1
set Wau=null
endfunction
function rTo takes nothing returns nothing
set MM=0
call Eau("EmergencyEvade, line 47")
endfunction
function rUw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,3)=="afx")then
return false
endif
return true
endfunction
function uXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="~undead")then
return false
endif
return true
endfunction
function wXw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@undead")then
return false
endif
return true
endfunction
function rXw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(gSw))
if uXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],hSw)
elseif wXw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],FSw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function rvw takes nothing returns boolean
if not(GetSpellAbilityId()==1093678936)then
return false
endif
return true
endfunction
function s3w takes nothing returns boolean
if GetSpellAbilityId()==1093679433 then
return true
endif
return false
endfunction
function s5w takes nothing returns boolean
return GetSpellAbilityId()==1093682502
endfunction
function s6w takes nothing returns nothing
local unit M5w=GetSpellAbilityUnit()
local unit w6w=CreateUnitAtLoc(GetOwningPlayer(M5w),1747997750,GetSpellTargetLoc(),GetUnitFacing(M5w))
local unit u6w=CreateUnitAtLoc(GetOwningPlayer(M5w),1747995215,GetSpellTargetLoc(),GetUnitFacing(M5w))
local integer r6w=4*GetUnitAbilityLevel(M5w,1093684045)
call SetUnitColor(w6w,PLAYER_COLOR_ORANGE)
call SetUnitAnimation(w6w,"birth")
call SetUnitScale(w6w,0.4,0.4,0.4)
call UnitAddAbility(u6w,1093684044)
call IssueImmediateOrder(u6w,"voodoo")
call iTw(r6w)
call KillUnit(w6w)
call RemoveUnit(u6w)
set r6w=0
set u6w=null
set w6w=null
set M5w=null
set M5w=null
set w6w=null
set u6w=null
endfunction
function s8w takes nothing returns boolean
return GetSpellAbilityId()==1093681463
endfunction
function sAw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function sBw takes nothing returns nothing
if GetUnitTypeId(GetEnumUnit())!=1747988528 and IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true then
call GroupRemoveUnit(Yt,GetEnumUnit())
endif
endfunction
function sEw takes nothing returns nothing
call SetBlightRadiusLocBJ(true,GetEnumPlayer(),G,380.00)
endfunction
function sJw takes nothing returns nothing
local boolean uJw=false
local destructable rJw=GetTriggerDestructable()
local integer MHw=0
local integer wJw=ts
loop
exitwhen MHw>wJw
if rJw==Fw[MHw]then
if IsDestructableAliveBJ(hw[MHw])==true then
call ModifyGateBJ(bj_GATEOPERATION_OPEN,hw[MHw])
else
call ModifyGateBJ(bj_GATEOPERATION_CLOSE,hw[MHw])
endif
set uJw=true
endif
set MHw=MHw+1
endloop
if uJw==true then
call iTw(5.00)
call DestructableRestoreLife(rJw,GetDestructableMaxLife(rJw),true)
endif
set MHw=0
set wJw=0
set uJw=false
set rJw=null
set rJw=null
endfunction
function sMw takes nothing returns nothing
local unit rMw=CreateUnitAtLoc(GetOwningPlayer(GetSpellAbilityUnit()),1747997017,GetUnitLoc(GetSpellAbilityUnit()),GetUnitFacing(GetSpellAbilityUnit()))
call cfw("Abilities\\Weapons\\Axe\\AxeMissileLaunch1.wav",GetUnitX(GetSpellAbilityUnit()),GetUnitY(GetSpellAbilityUnit()))
call SetUnitTimeScale(rMw,2.)
call SetUnitPathing(rMw,false)
call IssuePointOrderLoc(rMw,"move",GetSpellTargetLoc())
call UnitApplyTimedLife(rMw,1110455126,10.00)
loop
set Os=rMw
call ForGroup(GetUnitsInRangeOfLocMatching(300.00,GetUnitLoc(rMw),Condition(jow)),xow)
call cfw("Sound\\Units\\Combat\\MetalHeavySliceFlesh2.wav",GetUnitX(GetSpellAbilityUnit()),GetUnitY(GetSpellAbilityUnit()))
call iTw(1.00)
exitwhen GetUnitState(rMw,UNIT_STATE_LIFE)<=0.
endloop
set rMw=null
set rMw=null
endfunction
function rNw takes nothing returns boolean
if GetSpellAbilityId()==1097888359 then
return true
endif
if GetSpellAbilityId()==1094938741 then
return true
endif
if GetSpellAbilityId()==1097885490 then
return true
endif
if GetSpellAbilityId()==1096901741 then
return true
endif
if GetSpellAbilityId()==1097753709 then
return true
endif
if GetSpellAbilityId()==1094935661 then
return true
endif
if GetSpellAbilityId()==1094935602 then
return true
endif
if GetSpellAbilityId()==1097033829 then
return true
endif
return false
endfunction
function sNw takes nothing returns boolean
if not rNw()then
return false
endif
return true
endfunction
function sQw takes nothing returns boolean
return IsUnitInTransportBJ(GetFilterUnit(),GetSpellAbilityUnit())==true
endfunction
function rkS takes string wkS returns integer
local integer ukS
set w3[MM]=wkS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set ukS=NY
set MY[ukS]=766
else
call Mau("Out of memory: Could not create ForForceCallback_execute_GamecacheKeys.","when calling error in GamecacheKeys, line 40")
set ukS=0
endif
else
set BY=BY-1
set ukS=VY[BY]
set MY[ukS]=766
endif
set MM=MM-1
return ukS
endfunction
function nRu takes string pRu returns boolean
local integer eRu
local integer qRu
local integer aRu
set w3[MM]=pRu
set MM=MM+1
set ae=" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`{|}~"
set ne=69
set de=100
set Re=0
set eRu=1
set qRu=nq-1
loop
exitwhen eRu>qRu
set aRu=rkS("when calling alloc_ForForceCallback_execute_GamecacheKeys in GamecacheKeys, line 40")
set HZ[aRu]=eRu
call Inu(aRu,"when calling execute in GamecacheKeys, line 40")
set eRu=eRu+1
endloop
set MM=MM-1
return true
endfunction
function sRo takes nothing returns boolean
set MM=0
return nRu("GamecacheKeys, line 1")
endfunction
function ikS takes string skS returns integer
local integer tkS
set w3[MM]=skS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set tkS=NY
set MY[tkS]=767
else
call Mau("Out of memory: Could not create ForForceCallback_execute_GamecacheKeys_GamecacheKeys.","when calling error in GamecacheKeys, line 33")
set tkS=0
endif
else
set BY=BY-1
set tkS=VY[BY]
set MY[tkS]=767
endif
set MM=MM-1
return tkS
endfunction
function xRu takes string TRu,integer YRu,string GRu returns nothing
local integer gRu
local integer hRu
local integer FRu
local integer kRu
local integer jRu
set w3[MM]=GRu
set MM=MM+1
if YRu==0 then
set gRu=0
set hRu=ne-1
loop
exitwhen gRu>hRu
if Re==de then
set MM=MM-1
return
endif
set fe[Re]=TRu+Mhr(ae,gRu)
set Re=Re+1
set gRu=gRu+1
endloop
else
set FRu=0
set kRu=ne-1
loop
exitwhen FRu>kRu
if Re==de then
set MM=MM-1
return
endif
set jRu=ikS("when calling alloc_ForForceCallback_execute_GamecacheKeys_GamecacheKeys in GamecacheKeys, line 33")
set JZ[jRu]=TRu
set KZ[jRu]=FRu
set LZ[jRu]=YRu
call Inu(jRu,"when calling execute in GamecacheKeys, line 33")
set FRu=FRu+1
endloop
endif
set MM=MM-1
endfunction
function BWs takes integer CWs,string VWs returns nothing
set w3[MM]=VWs
set MM=MM+1
call xRu(JZ[CWs]+Mhr(ae,KZ[CWs]),LZ[CWs]-1,"when calling precompute in GamecacheKeys, line 33")
set MM=MM-1
endfunction
function PGS takes string UGS returns integer
local integer IGS
set w3[MM]=UGS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set IGS=HY
set JY[IGS]=1323
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_BufferAdapters.","when calling error in BufferAdapters, line 25")
set IGS=0
endif
else
set DY=DY-1
set IGS=AY[DY]
set JY[IGS]=1323
endif
set MM=MM-1
return IGS
endfunction
function ZGS takes string WGS returns integer
local integer EGS
set w3[MM]=WGS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set EGS=IY
set PY[EGS]=1359
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_BufferAdapters.","when calling error in BufferAdapters, line 25")
set EGS=0
endif
else
set UY=UY-1
set EGS=ZY[UY]
set PY[EGS]=1359
endif
set MM=MM-1
return EGS
endfunction
function Isu takes integer msu,integer Qsu,string Wsu returns nothing
local integer Esu
local integer Zsu
local integer Usu
set w3[MM]=Wsu
set MM=MM+1
set Esu=ZGS("when calling alloc_LimitedExecuteCondition_executeWhile_BufferAdapters in BufferAdapters, line 25")
set PQ[Esu]=Qsu
set Usu=Esu
set Zsu=PGS("when calling alloc_LimitedExecuteAction_executeWhile_BufferAdapters in BufferAdapters, line 25")
set AQ[Zsu]=msu
set DQ[Zsu]=Qsu
call rdu(64,Usu,Zsu,"when calling executeWhile in BufferAdapters, line 25")
set MM=MM-1
endfunction
function Dot takes integer Pot,string Aot returns nothing
set w3[MM]=Aot
set MM=MM+1
call Isu(bH[Pot],yH[Pot],"when calling populateFromFile in Persistable, line 149")
set MM=MM-1
endfunction
function Uks takes integer jks,integer xks,string vks returns nothing
local integer mks
local integer Qks
local integer Wks
local real Eks
local real Zks
set w3[MM]=vks
set MM=MM+1
call Rgo(0,xks,"when calling readByte in DestructableData, line 173")
set mks=inw
set QE[jks]=mks
if Jpu(QE[jks],7)then
call Rgo(0,xks,"when calling readByte in DestructableData, line 175")
set Qks=inw
set WE[jks]=Qks
endif
set Wks=tUu(xks,mE[jks],"when calling readRawcodeTableIndex in DestructableData, line 176")
set EE[jks]=Wks
set Eks=TEu(xks,"when calling readPointData in DestructableData, line 178")
set Zks=J1
set ZE[jks]=Eks
set UE[jks]=Zks
if Jpu(QE[jks],2)then
if Jpu(QE[jks],1)then
call rgo(1,xks,"when calling readReal in DestructableData, line 181")
set IE[jks]=snw
else
call Fgo(0,xks,"when calling readShort in DestructableData, line 183")
set IE[jks]=(inw-32767)*1./10
endif
elseif Jpu(QE[jks],1)then
call Rgo(0,xks,"when calling readByte in DestructableData, line 185")
set IE[jks]=rgu(inw)
else
set IE[jks]=0.
endif
call Fgo(0,xks,"when calling readShort in DestructableData, line 188")
set PE[jks]=inw*1./180
if Jpu(QE[jks],4)then
if Jpu(QE[jks],3)then
call rgo(1,xks,"when calling readReal in DestructableData, line 192")
set AE[jks]=snw
else
call Fgo(0,xks,"when calling readShort in DestructableData, line 194")
set AE[jks]=(inw-32767)*1./10
endif
elseif Jpu(QE[jks],3)then
call Rgo(0,xks,"when calling readByte in DestructableData, line 196")
set AE[jks]=rgu(inw)
else
set AE[jks]=1.
endif
if Jpu(QE[jks],6)then
if Jpu(QE[jks],5)then
set DE[jks]=3
else
set DE[jks]=2
endif
elseif Jpu(QE[jks],5)then
set DE[jks]=1
else
call Rgo(0,xks,"when calling readByte in DestructableData, line 208")
set DE[jks]=inw
endif
set MM=MM-1
endfunction
function Lkc takes integer Hkc,integer Jkc,string Kkc returns nothing
set w3[MM]=Kkc
set MM=MM+1
if Dg[Hkc]==0 then
if Hkc==0 then
call Mau("Nullpointer exception when calling SingleDestructableData.deserialize","when calling error in DestructableData, line 172")
else
call Mau("Called SingleDestructableData.deserialize on invalid object.","when calling error in DestructableData, line 172")
endif
endif
call Uks(Hkc,Jkc,"when calling deserialize in DestructableData, line 172")
set MM=MM-1
endfunction
function FFs takes integer YFs,string GFs returns nothing
local integer gFs
local integer hFs
set w3[MM]=GFs
set MM=MM+1
set hFs=eE[fE[YFs]]
set gFs=Vks(pE[fE[YFs]],"when calling new_SingleDestructableData in DestructableData, line 267")
call Lkc(gFs,RE[YFs],"when calling deserialize in DestructableData, line 267")
call Nno(hFs,gFs,"when calling add in DestructableData, line 267")
set MM=MM-1
endfunction
function qOt takes integer pOt,string eOt returns nothing
set w3[MM]=eOt
set MM=MM+1
call Lso(hH[pOt],"when calling sync in Persistable, line 209")
set MM=MM-1
endfunction
function lJc takes integer oJc,string OJc returns nothing
set w3[MM]=OJc
set MM=MM+1
if NF[oJc]==0 then
if oJc==0 then
call Mau("Nullpointer exception when calling FileSaveCallback.run","when calling error in MultifileIO, line 31")
else
call Mau("Called FileSaveCallback.run on invalid object.","when calling error in MultifileIO, line 31")
endif
endif
call qOt(oJc,"when calling run_save_PersistentStore_Persistable in MultifileIO, line 31")
set MM=MM-1
endfunction
function F7t takes integer g7t,string h7t returns nothing
set w3[MM]=h7t
set MM=MM+1
call lJc(BP[g7t],"when calling run in MultifileIO, line 168")
set MM=MM-1
endfunction
function AEu takes nothing returns nothing
set va=0
call PreloadGenClear()
call PreloadGenStart()
endfunction
function VEu takes nothing returns integer
return Ra-va
endfunction
function BEu takes nothing returns boolean
return VEu()>0
endfunction
function CEu takes string XEu returns nothing
call Preload(xa)
call PreloadGenEnd(XEu)
endfunction
function HEu takes string DEu returns nothing
call Preload(DEu)
endfunction
function LEu takes string JEu,string KEu returns nothing
set w3[MM]=KEu
set MM=MM+1
if va==Ra then
call Mau("IOWriter: tried to write more packets than allowed","when calling error in PreloadIO, line 57")
endif
if vhr(JEu)>Ta then
call Mau("IOWriter: tried to write more than max packet length","when calling error in PreloadIO, line 60")
endif
call HEu(Fa+tgu(va)+ka+JEu+ja)
set va=va+1
set MM=MM-1
endfunction
function iEs takes integer rEs,string sEs returns string
local string tEs
set w3[MM]=sEs
set MM=MM+1
call QRc(rEs,"when calling checkRead in HashBuffer, line 68")
set rU[rEs]=rU[rEs]+1
if not Dio(XZ[rEs],rU[rEs],"when calling hasString in HashBuffer, line 70")then
call Mau("HashBuffer: trying to read non-present string at pos#"+tgu(rU[rEs]),"when calling error in HashBuffer, line 71")
endif
set tEs=jSo(XZ[rEs],rU[rEs],"when calling loadString in HashBuffer, line 72")
set MM=MM-1
return tEs
endfunction
function emc takes integer bmc,string ymc returns string
local string pmc
set w3[MM]=ymc
set MM=MM+1
if qG[bmc]==0 then
if bmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.readString","when calling error in HashBuffer, line 67")
else
call Mau("Called HashBuffer.readString on invalid object.","when calling error in HashBuffer, line 67")
endif
endif
set pmc=iEs(bmc,"when calling readString in HashBuffer, line 67")
set MM=MM-1
return pmc
endfunction
function iju takes string sju,integer tju returns string
return sju+"/chunk"+tgu(tju)+".txt"
endfunction
function wZs takes integer MEs returns boolean
return rU[MEs]<NZ[MEs]
endfunction
function uQc takes integer Nmc,string Mmc returns boolean
local boolean wQc
set w3[MM]=Mmc
set MM=MM+1
if qG[Nmc]==0 then
if Nmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.hasString","when calling error in HashBuffer, line 146")
else
call Mau("Called HashBuffer.hasString on invalid object.","when calling error in HashBuffer, line 146")
endif
endif
set wQc=wZs(Nmc)
set MM=MM-1
return wQc
endfunction
function G7t takes integer T7t,string Y7t returns nothing
set w3[MM]=Y7t
set MM=MM+1
call AEu()
loop
exitwhen not(uQc(IP[CP[T7t]],"when calling hasString in MultifileIO, line 136")and BEu())
call LEu(emc(IP[CP[T7t]],"when calling readString in MultifileIO, line 137"),"when calling writePacket in MultifileIO, line 137")
endloop
if PP[CP[T7t]]then
call CEu(iju(AP[CP[T7t]],VP[T7t]))
else
call CEu(AP[CP[T7t]])
endif
set MM=MM-1
endfunction
function R7t takes integer d7t,string f7t returns nothing
set w3[MM]=f7t
set MM=MM+1
call AEu()
call LEu(UP[LP[d7t]],"when calling writePacket in MultifileIO, line 128")
call CEu(iju(AP[LP[d7t]],XP[d7t]))
set MM=MM-1
endfunction
function iwt takes integer twt returns integer
return BA[twt]
endfunction
function AKc takes integer UKc,string IKc returns integer
local integer PKc
set w3[MM]=IKc
set MM=MM+1
if ak[UKc]==0 then
if UKc==0 then
call Mau("Nullpointer exception when calling Network.getData","when calling error in Network, line 259")
else
call Mau("Called Network.getData on invalid object.","when calling error in Network, line 259")
endif
endif
set PKc=iwt(UKc)
set MM=MM-1
return PKc
endfunction
function MES takes string BES returns integer
local integer NES
set w3[MM]=BES
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set NES=NY
set MY[NES]=795
else
call Mau("Out of memory: Could not create ForForceCallback_try_load_PersistentStore_Persistable.","when calling error in Persistable, line 148")
set NES=0
endif
else
set BY=BY-1
set NES=VY[BY]
set MY[NES]=795
endif
set MM=MM-1
return NES
endfunction
function PBi takes integer UBi,string IBi returns nothing
set w3[MM]=IBi
set MM=MM+1
set JX[UBi]=a4s("when calling new_LinkedList in StringBuffer, line 42")
set KX[UBi]=""
set LX[UBi]=""
set MM=MM-1
endfunction
function yqs takes integer bqs returns nothing
set LQ[bqs]=2
set XQ[bqs]=0
endfunction
function eqs takes integer pqs returns nothing
call yqs(pqs)
endfunction
function JBi takes integer ABi,integer DBi,string HBi returns nothing
set w3[MM]=HBi
set MM=MM+1
call eqs(ABi)
call PBi(ABi,"when calling AbstractStringBuffer_init in StringBuffer, line 51")
if DBi>jR then
call vZu("Trying to instantiate an instance of AbstractStringBuffer with maxSize="+tgu(DBi)+", but MAX_BACKBUFFER_SIZE is "+tgu(jR))
call vZu("The value will be clamped to "+tgu(jR))
endif
set XX[ABi]=vdo(DBi,jR)
set MM=MM-1
endfunction
function sSt takes integer rSt returns nothing
endfunction
function bSt takes integer oSt,integer OSt,string lSt returns nothing
set w3[MM]=lSt
set MM=MM+1
call JBi(oSt,OSt,"when calling construct_AbstractStringBuffer in OrderedStringBuffer, line 85")
call sSt(oSt)
set MM=MM-1
endfunction
function nES takes string qES returns integer
local integer aES
set w3[MM]=qES
set MM=MM+1
if pG==0 then
if eG<32768 then
set eG=eG+1
set aES=eG
set qG[aES]=664
else
call Mau("Out of memory: Could not create OrderedStringBuffer.","when calling error in OrderedStringBuffer, line 79")
set aES=0
endif
else
set pG=pG-1
set aES=yG[pG]
set qG[aES]=664
endif
set MM=MM-1
return aES
endfunction
function cSt takes integer tSt,string iSt returns integer
local integer SSt
set w3[MM]=iSt
set MM=MM+1
set SSt=nES("when calling alloc_OrderedStringBuffer in OrderedStringBuffer, line 85")
call bSt(SSt,tSt,"when calling construct_OrderedStringBuffer2 in OrderedStringBuffer, line 85")
set MM=MM-1
return SSt
endfunction
function RES takes integer dES,string fES returns nothing
set w3[MM]=fES
set MM=MM+1
if qG[dES]==0 then
call Mau("Double free: object of type OrderedStringBuffer","when calling error in OrderedStringBuffer, line 79")
else
set yG[pG]=dES
set pG=pG+1
set qG[dES]=0
endif
set MM=MM-1
endfunction
function VBi takes integer KBi,string LBi returns nothing
local integer XBi
local integer CBi
set w3[MM]=LBi
set MM=MM+1
set XBi=x1s(JX[KBi],"when calling iterator in StringBuffer, line 63")
loop
exitwhen not t1s(XBi)
set CBi=r1s(XBi)
call Nuo(CBi,"when calling dispatch_ChunkElement_destroyChunkElement in StringBuffer, line 64")
endloop
call c1s(XBi,"when calling close in StringBuffer, line 63")
call CAc(JX[KBi],"when calling dispatch_LinkedList_destroyLinkedList in StringBuffer, line 65")
call aqs(KBi)
set MM=MM-1
endfunction
function eSt takes integer ySt,string pSt returns nothing
set w3[MM]=pSt
set MM=MM+1
call VBi(ySt,"when calling AbstractStringBuffer_onDestroy in OrderedStringBuffer, line 79")
set MM=MM-1
endfunction
function Yit takes integer Rit,string Tit returns nothing
set w3[MM]=Tit
set MM=MM+1
call eSt(Rit,"when calling OrderedStringBuffer_onDestroy in OrderedStringBuffer, line 78")
call RES(Rit,"when calling dealloc_OrderedStringBuffer in OrderedStringBuffer, line 78")
set MM=MM-1
endfunction
function jXc takes integer FXc,string kXc returns nothing
set w3[MM]=kXc
set MM=MM+1
if qG[FXc]==0 then
if FXc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.OrderedStringBuffer","when calling error in OrderedStringBuffer, line 79")
else
call Mau("Called OrderedStringBuffer.OrderedStringBuffer on invalid object.","when calling error in OrderedStringBuffer, line 79")
endif
endif
call Yit(FXc,"when calling destroyOrderedStringBuffer in OrderedStringBuffer, line 79")
set MM=MM-1
endfunction
function Kes takes integer Jes returns boolean
return LQ[Jes]==1 or LQ[Jes]==2
endfunction
function dRc takes integer qRc,string aRc returns boolean
local boolean nRc
set w3[MM]=aRc
set MM=MM+1
if qG[qRc]==0 then
if qRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.isWriteable","when calling error in BufferInterface, line 137")
else
call Mau("Called AbstractBuffer.isWriteable on invalid object.","when calling error in BufferInterface, line 137")
endif
endif
set nRc=Kes(qRc)
set MM=MM-1
return nRc
endfunction
function cqs takes integer iqs,string Sqs returns nothing
set w3[MM]=Sqs
set MM=MM+1
call iRc(iqs,"when calling checkFailed in BufferInterface, line 157")
if Ba and(not dRc(iqs,"when calling isWriteable in BufferInterface, line 158"))then
call Mau("Buffer: cannot write to buffer with mode "+Hsu(LQ[iqs]),"when calling error in BufferInterface, line 159")
endif
set MM=MM-1
endfunction
function xRc takes integer kRc,string jRc returns nothing
set w3[MM]=jRc
set MM=MM+1
if qG[kRc]==0 then
if kRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.checkWrite","when calling error in BufferInterface, line 156")
else
call Mau("Called AbstractBuffer.checkWrite on invalid object.","when calling error in BufferInterface, line 156")
endif
endif
call cqs(kRc,"when calling checkWrite in BufferInterface, line 156")
set MM=MM-1
endfunction
function pEs takes integer lEs,boolean bEs,string yEs returns nothing
set w3[MM]=yEs
set MM=MM+1
call xRc(lEs,"when calling checkWrite in HashBuffer, line 46")
set BZ[lEs]=BZ[lEs]+1
call GSo(XZ[lEs],BZ[lEs],bEs,"when calling saveBoolean in HashBuffer, line 48")
set MM=MM-1
endfunction
function lmc takes integer cmc,boolean omc,string Omc returns nothing
set w3[MM]=Omc
set MM=MM+1
if qG[cmc]==0 then
if cmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.writeBoolean","when calling error in HashBuffer, line 45")
else
call Mau("Called HashBuffer.writeBoolean on invalid object.","when calling error in HashBuffer, line 45")
endif
endif
call pEs(cmc,omc,"when calling writeBoolean in HashBuffer, line 45")
set MM=MM-1
endfunction
function rZS takes string wZS returns integer
local integer uZS
set w3[MM]=wZS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set uZS=NY
set MY[uZS]=796
else
call Mau("Out of memory: Could not create ForForceCallback_try_load_PersistentStore_Persistable.","when calling error in Persistable, line 152")
set uZS=0
endif
else
set BY=BY-1
set uZS=VY[BY]
set MY[uZS]=796
endif
set MM=MM-1
return uZS
endfunction
function gEs takes integer YEs,string GEs returns nothing
set w3[MM]=GEs
set MM=MM+1
call hco(XZ[YEs],"when calling flush in HashBuffer, line 117")
set MM=MM-1
endfunction
function xmc takes integer kmc,string jmc returns nothing
set w3[MM]=jmc
set MM=MM+1
if qG[kmc]==0 then
if kmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.clear","when calling error in HashBuffer, line 116")
else
call Mau("Called HashBuffer.clear on invalid object.","when calling error in HashBuffer, line 116")
endif
endif
call gEs(kmc,"when calling clear in HashBuffer, line 116")
set MM=MM-1
endfunction
function Iot takes integer xot,integer vot,string mot returns nothing
local integer Qot
local boolean Wot
local boolean Eot
local integer Zot
local integer Uot
set w3[MM]=mot
set MM=MM+1
set Qot=cSt(Ta,"when calling new_OrderedStringBuffer in Persistable, line 142")
call lmc(AKc(oH[xot],"when calling getData in Persistable, line 144"),true,"when calling writeBoolean in Persistable, line 144")
set Zot=MES("when calling alloc_ForForceCallback_try_load_PersistentStore_Persistable in Persistable, line 148")
set bH[Zot]=Qot
set yH[Zot]=OH[xot]
set Eot=Jnu(Zot,"when calling try in Persistable, line 148")
if Eot then
set Uot=rZS("when calling alloc_ForForceCallback_try_load_PersistentStore_Persistable in Persistable, line 152")
set pH[Uot]=Qot
set eH[Uot]=oH[xot]
set Wot=Jnu(Uot,"when calling try in Persistable, line 152")
else
set Wot=false
endif
if(not Eot)or(not Wot)or(not FRc(Qot,"when calling isValid in Persistable, line 158"))then
call xmc(AKc(oH[xot],"when calling getData in Persistable, line 159"),"when calling clear in Persistable, line 159")
call lmc(AKc(oH[xot],"when calling getData in Persistable, line 160"),false,"when calling writeBoolean in Persistable, line 160")
endif
call jXc(Qot,"when calling dispatch_OrderedStringBuffer_destroyOrderedStringBuffer in Persistable, line 162")
call Lso(lH[xot],"when calling sync in Persistable, line 163")
set MM=MM-1
endfunction
function VHc takes integer LHc,integer XHc,string CHc returns nothing
set w3[MM]=CHc
set MM=MM+1
if BF[LHc]==0 then
if LHc==0 then
call Mau("Nullpointer exception when calling FileLoadCallback.run","when calling error in MultifileIO, line 28")
else
call Mau("Called FileLoadCallback.run on invalid object.","when calling error in MultifileIO, line 28")
endif
endif
call Iot(LHc,XHc,"when calling run_load_PersistentStore_Persistable in MultifileIO, line 28")
set MM=MM-1
endfunction
function c7t takes integer i7t,string S7t returns nothing
set w3[MM]=S7t
set MM=MM+1
call VHc(KP[i7t],0,"when calling run in MultifileIO, line 240")
set MM=MM-1
endfunction
function EEu takes integer WEu returns string
return Ga[WEu]
endfunction
function OJs takes integer SJs,integer cJs,string oJs returns nothing
set w3[MM]=oJs
set MM=MM+1
call Cqo(hU[SJs],cJs,"when calling add in IOTaskExecutor, line 48")
set MM=MM-1
endfunction
function BUc takes integer XUc,integer CUc,string VUc returns nothing
set w3[MM]=VUc
set MM=MM+1
if gh[XUc]==0 then
if XUc==0 then
call Mau("Nullpointer exception when calling IOTaskExecutor.submit","when calling error in IOTaskExecutor, line 21")
else
call Mau("Called IOTaskExecutor.submit on invalid object.","when calling error in IOTaskExecutor, line 21")
endif
endif
call OJs(XUc,CUc,"when calling submit in IOTaskExecutor, line 21")
set MM=MM-1
endfunction
function LvS takes string JvS returns integer
local integer KvS
set w3[MM]=JvS
set MM=MM+1
if Fh==0 then
if kh<32768 then
set kh=kh+1
set KvS=kh
set jh[KvS]=1228
else
call Mau("Out of memory: Could not create IOTask_submit_FileReader_MultifileIO.","when calling error in MultifileIO, line 213")
set KvS=0
endif
else
set Fh=Fh-1
set KvS=hh[Fh]
set jh[KvS]=1228
endif
set MM=MM-1
return KvS
endfunction
function H6t takes integer U6t,integer I6t,string P6t returns nothing
local integer A6t
local integer D6t
set w3[MM]=P6t
set MM=MM+1
set D6t=DP[U6t]
set A6t=LvS("when calling alloc_IOTask_submit_FileReader_MultifileIO in MultifileIO, line 213")
set HP[A6t]=U6t
set JP[A6t]=I6t
call BUc(D6t,A6t,"when calling submit in MultifileIO, line 213")
set MM=MM-1
endfunction
function IEu takes nothing returns integer
return ha-ga
endfunction
function PEu takes nothing returns boolean
return IEu()>0
endfunction
function pWu takes player yWu returns string
return GetPlayerName(yWu)
endfunction
function hEu takes nothing returns nothing
local integer GEu=0
local integer gEu=Ra-1
loop
exitwhen GEu>gEu
set Ya[GEu]=pWu(pa[GEu])
set Ga[GEu]=null
set GEu=GEu+1
endloop
endfunction
function WWu takes player mWu,string QWu returns nothing
call SetPlayerName(mWu,QWu)
endfunction
function jEu takes nothing returns nothing
local integer FEu=0
local integer kEu=Ra-1
loop
exitwhen FEu>kEu
call WWu(pa[FEu],Ya[FEu])
set FEu=FEu+1
endloop
endfunction
function QEu takes string xEu returns nothing
local integer vEu
local integer mEu
set ga=0
set ha=0
call hEu()
call Preloader(xEu)
set vEu=0
set mEu=Ra-1
loop
exitwhen vEu>mEu
if Ya[vEu]!=pWu(pa[vEu])then
set Ga[vEu]=pWu(pa[vEu])
set ha=ha+1
else
exitwhen true
endif
set vEu=vEu+1
endloop
call jEu()
endfunction
function TEs takes integer dEs,string fEs,string REs returns nothing
set w3[MM]=REs
set MM=MM+1
call xRc(dEs,"when calling checkWrite in HashBuffer, line 41")
set NZ[dEs]=NZ[dEs]+1
call WSo(XZ[dEs],NZ[dEs],fEs,"when calling saveString in HashBuffer, line 43")
set MM=MM-1
endfunction
function Smc takes integer smc,string tmc,string imc returns nothing
set w3[MM]=imc
set MM=MM+1
if qG[smc]==0 then
if smc==0 then
call Mau("Nullpointer exception when calling HashBuffer.writeString","when calling error in HashBuffer, line 40")
else
call Mau("Called HashBuffer.writeString on invalid object.","when calling error in HashBuffer, line 40")
endif
endif
call TEs(smc,tmc,"when calling writeString in HashBuffer, line 40")
set MM=MM-1
endfunction
function UEu takes string ZEu returns string
set w3[MM]=ZEu
set MM=MM+1
if ga==ha then
call Mau("IOReader: tried to read more packets than available","when calling error in PreloadIO, line 140")
endif
set ga=ga+1
set MM=MM-1
return Ga[ga-1]
endfunction
function t7t takes integer r7t,string s7t returns nothing
set w3[MM]=s7t
set MM=MM+1
if PP[HP[r7t]]then
call QEu(iju(AP[HP[r7t]],JP[r7t]))
else
call QEu(AP[HP[r7t]])
endif
if EEu(0)!=UP[HP[r7t]]and PEu()then
loop
exitwhen not PEu()
call Smc(IP[HP[r7t]],UEu("when calling readPacket in MultifileIO, line 224"),"when calling writeString in MultifileIO, line 224")
endloop
if PP[HP[r7t]]then
call H6t(HP[r7t],JP[r7t]+1,"when calling readChunk in MultifileIO, line 228")
endif
endif
set MM=MM-1
endfunction
function HUc takes integer AUc,string DUc returns nothing
set w3[MM]=DUc
set MM=MM+1
if jh[AUc]==0 then
if AUc==0 then
call Mau("Nullpointer exception when calling IOTask.run","when calling error in IOTaskExecutor, line 11")
else
call Mau("Called IOTask.run on invalid object.","when calling error in IOTaskExecutor, line 11")
endif
endif
if jh[AUc]<=1228 then
if jh[AUc]<=1227 then
if jh[AUc]<=1226 then
call c7t(AUc,"when calling run_onComplete_FileReader_MultifileIO in IOTaskExecutor, line 11")
else
call F7t(AUc,"when calling run_onComplete_FileWriter_MultifileIO in IOTaskExecutor, line 11")
endif
else
call t7t(AUc,"when calling run_submit_FileReader_MultifileIO in IOTaskExecutor, line 11")
endif
elseif jh[AUc]<=1229 then
call R7t(AUc,"when calling run_submit_FileWriter_MultifileIO in IOTaskExecutor, line 11")
else
call G7t(AUc,"when calling run_submit_FileWriter_MultifileIO in IOTaskExecutor, line 11")
endif
set MM=MM-1
endfunction
function FJs takes integer GJs,string gJs returns nothing
local integer hJs
set w3[MM]=gJs
set MM=MM+1
set hJs=oDc(hU[jU[GJs]],"when calling dequeue in IOTaskExecutor, line 63")
call HUc(hJs,"when calling run in IOTaskExecutor, line 64")
call PUc(hJs,"when calling dispatch_IOTask_destroyIOTask in IOTaskExecutor, line 65")
set MM=MM-1
endfunction
function rpc takes string wpc returns integer
local integer upc
set w3[MM]=wpc
set MM=MM+1
if cm==0 then
if om<32768 then
set om=om+1
set upc=om
set Om[upc]=1575
else
call Mau("Out of memory: Could not create SingleUnitData.","when calling error in UnitTypeData, line 1299")
set upc=0
endif
else
set cm=cm-1
set upc=Sm[cm]
set Om[upc]=1575
endif
set MM=MM-1
return upc
endfunction
function Y5r takes nothing returns integer
set W9=0
return W9
endfunction
function XyS takes integer HyS returns nothing
local integer JyS=Y5r()
local real KyS
local real LyS
set lN[HyS]=JyS
set KyS=uEu()
set LyS=U1
set bN[HyS]=KyS
set yN[HyS]=LyS
set pN[HyS]=0.0
set eN[HyS]=0
set qN[HyS]=0
call uEu()
endfunction
function spS takes integer wpS,integer upS,integer rpS returns nothing
call XyS(wpS)
set oN[wpS]=upS
set ON[wpS]=rpS
endfunction
function MyS takes integer CyS,integer VyS,string ByS returns integer
local integer NyS
set w3[MM]=ByS
set MM=MM+1
set NyS=rpc("when calling alloc_SingleUnitData in UnitTypeData, line 1318")
call spS(NyS,CyS,VyS)
set MM=MM-1
return NyS
endfunction
function b2r takes integer O2r,integer l2r returns integer
set h9=Ewu(O2r,l2r)
return h9
endfunction
function F2r takes integer q2r returns integer
local integer n2r=0
local integer a2r=n2r
local integer d2r
local integer f2r
local integer R2r
local integer T2r
local integer Y2r
local integer G2r
local integer g2r
local integer h2r
if IsUnitIdType(q2r,UNIT_TYPE_GIANT)then
set d2r=b2r(a2r,0)
set a2r=d2r
endif
if IsUnitIdType(q2r,UNIT_TYPE_SUMMONED)then
set f2r=b2r(a2r,1)
set a2r=f2r
endif
if IsUnitIdType(q2r,UNIT_TYPE_UNDEAD)then
set R2r=b2r(a2r,2)
set a2r=R2r
endif
if IsUnitIdType(q2r,UNIT_TYPE_MECHANICAL)then
set T2r=b2r(a2r,3)
set a2r=T2r
endif
if IsUnitIdType(q2r,UNIT_TYPE_PEON)then
set Y2r=b2r(a2r,4)
set a2r=Y2r
endif
if IsUnitIdType(q2r,UNIT_TYPE_SAPPER)then
set G2r=b2r(a2r,5)
set a2r=G2r
endif
if IsUnitIdType(q2r,UNIT_TYPE_ANCIENT)then
set g2r=b2r(a2r,6)
set a2r=g2r
endif
if IsUnitIdType(q2r,UNIT_TYPE_TAUREN)then
set h2r=b2r(a2r,7)
set a2r=h2r
endif
set F9=a2r
return F9
endfunction
function u2r takes integer M4r,integer w2r returns integer
set g9=Ewu(M4r,w2r)
return g9
endfunction
function UbS takes integer hbS,unit FbS,integer kbS returns nothing
local integer jbS
local integer xbS
local integer vbS
local integer mbS
local integer QbS
local integer WbS
local integer EbS
local integer ZbS
set tN[hbS]=kbS
set iN[hbS]=r7s(FbS,tN[hbS])
set jbS=iN[hbS]
if jbS==1 then
set xbS=u2r(sN[hbS],0)
set sN[hbS]=xbS
elseif jbS==2 then
set vbS=u2r(sN[hbS],1)
set sN[hbS]=vbS
elseif jbS==3 then
set mbS=u2r(sN[hbS],2)
set sN[hbS]=mbS
elseif jbS==4 then
set QbS=u2r(sN[hbS],3)
set sN[hbS]=QbS
endif
set SN[hbS]=U_s(FbS,kbS,iN[hbS])
if SN[hbS]!=BlzGetAbilityManaCost(kbS,iN[hbS])then
set WbS=u2r(sN[hbS],4)
set sN[hbS]=WbS
endif
set cN[hbS]=Q_s(FbS,kbS,iN[hbS])
if cN[hbS]!=BlzGetAbilityCooldown(kbS,iN[hbS])then
set EbS=u2r(sN[hbS],5)
set sN[hbS]=EbS
endif
if(not t2r(sN[hbS],4))or SN[hbS]<=255 and(not t2r(sN[hbS],4))or(qUu(cN[hbS]*2.)*1./2==cN[hbS]and cN[hbS]*2.<=255.)then
set ZbS=u2r(sN[hbS],6)
set sN[hbS]=ZbS
endif
endfunction
function Hyo takes integer Iyo,unit Pyo,integer Ayo,string Dyo returns nothing
set w3[MM]=Dyo
set MM=MM+1
if im[Iyo]==0 then
if Iyo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.build","when calling error in UnitTypeData, line 830")
else
call Mau("Called SingleAbilityData.build on invalid object.","when calling error in UnitTypeData, line 830")
endif
endif
call UbS(Iyo,Pyo,Ayo)
set MM=MM-1
endfunction
function NKr takes integer VKr,integer BKr returns integer
set x6=Ewu(VKr,BKr)
return x6
endfunction
function JLr takes unit yLr returns integer
local integer hLr=0
local integer pLr=hLr
local real eLr=0.0
local integer qLr
local integer aLr
local integer nLr
local integer dLr
local integer fLr
local integer RLr
local integer TLr
local real YLr
local integer GLr
local integer gLr
local integer FLr
local integer kLr
local integer jLr
local integer xLr
local integer vLr
local integer mLr
local integer QLr
local integer WLr
local integer ELr
local integer ZLr
local integer ULr
local integer ILr
local integer PLr
local integer ALr
local integer DLr
local integer HLr
if MJu(yLr)then
set FLr=NKr(pLr,0)
set pLr=FLr
set eLr=BJu(yLr)
set qLr=qUu(eLr)
if rgu(qLr)==eLr and qLr<=255 then
set kLr=NKr(pLr,1)
set pLr=kLr
else
set aLr=qUu(eLr*10.)
if aLr*1./10==eLr and aLr<=65535 then
set jLr=NKr(pLr,2)
set pLr=jLr
endif
endif
endif
set nLr=0
if VHu(yLr)then
set xLr=NKr(pLr,3)
set pLr=xLr
set nLr=wEu(XHu(yLr))
endif
set vLr=0
set mLr=0
set QLr=0
set WLr=0
set dLr=vLr
set fLr=mLr
set RLr=QLr
set TLr=WLr
if xJu(yLr)then
set ELr=NKr(pLr,4)
set pLr=ELr
set ZLr=kJu(yLr)
set ULr=u4
set ILr=r4
set PLr=s4
set dLr=ZLr
set fLr=ULr
set RLr=ILr
set TLr=PLr
endif
set YLr=0.0
if bJu(yLr)then
set ALr=NKr(pLr,5)
set pLr=ALr
set YLr=OJu(yLr)
set GLr=qUu(YLr*100.)
if GLr*1./100==YLr and GLr>=0 and GLr<=255 then
set DLr=NKr(pLr,6)
set pLr=DLr
else
set gLr=qUu(YLr*1000.)+32767
if(gLr-32767)*1./1000==YLr and gLr>=0 and gLr<=65535 then
set HLr=NKr(pLr,7)
set pLr=HLr
endif
endif
endif
set P6=pLr
set A6=eLr
set D6=nLr
set H6=dLr
set J6=fLr
set K6=RLr
set L6=TLr
set X6=YLr
return P6
endfunction
function P2r takes unit k2r returns integer
local integer x2r=0
local integer j2r=x2r
local integer v2r
local integer m2r
local integer Q2r
local integer W2r
local integer E2r
local integer Z2r
local integer U2r
local integer I2r
if m5r(k2r,UNIT_TYPE_GIANT)then
set v2r=b2r(j2r,0)
set j2r=v2r
endif
if m5r(k2r,UNIT_TYPE_SUMMONED)then
set m2r=b2r(j2r,1)
set j2r=m2r
endif
if m5r(k2r,UNIT_TYPE_UNDEAD)then
set Q2r=b2r(j2r,2)
set j2r=Q2r
endif
if m5r(k2r,UNIT_TYPE_MECHANICAL)then
set W2r=b2r(j2r,3)
set j2r=W2r
endif
if m5r(k2r,UNIT_TYPE_PEON)then
set E2r=b2r(j2r,4)
set j2r=E2r
endif
if m5r(k2r,UNIT_TYPE_SAPPER)then
set Z2r=b2r(j2r,5)
set j2r=Z2r
endif
if m5r(k2r,UNIT_TYPE_ANCIENT)then
set U2r=b2r(j2r,6)
set j2r=U2r
endif
if m5r(k2r,UNIT_TYPE_TAUREN)then
set I2r=b2r(j2r,7)
set j2r=I2r
endif
set k9=j2r
return k9
endfunction
function L2r takes integer J2r,integer K2r returns integer
set j9=Ewu(J2r,K2r)
return j9
endfunction
function S5r takes unit r5r returns integer
local integer t5r=0
local integer s5r=t5r
local integer i5r
if m5r(r5r,UNIT_TYPE_TOWNHALL)then
set i5r=L2r(s5r,0)
set s5r=i5r
endif
set v9=s5r
return v9
endfunction
function d5r takes integer a5r,integer n5r returns integer
set Q9=Ewu(a5r,n5r)
return Q9
endfunction
function ZXr takes integer WXr,integer EXr returns integer
set s7=Ewu(WXr,EXr)
return s7
endfunction
function qCr takes unit VXr returns integer
local integer SCr=0
local integer BXr=SCr
local real NXr=0.0
local integer MXr
local real wCr
local real uCr
local integer rCr
local integer sCr
local real tCr
local real iCr
local integer cCr
local integer oCr
local integer OCr
local integer lCr
local integer bCr
local integer yCr
local integer pCr
local integer eCr
if UJu(VXr)then
set cCr=ZXr(BXr,0)
set BXr=cCr
set NXr=EJu(VXr)
set MXr=qUu(NXr*10.)
if MXr*1./10==NXr and MXr<=65535 then
set oCr=ZXr(BXr,1)
set BXr=oCr
endif
endif
set wCr=0.0
if E7s(VXr)!=h0s(VXr)then
set OCr=ZXr(BXr,2)
set BXr=OCr
set wCr=E7s(VXr)
endif
set uCr=0.0
if KJu(VXr)then
set lCr=ZXr(BXr,3)
set BXr=lCr
set uCr=HJu(VXr)
set rCr=qUu(uCr*100.)
if rCr*1./100==uCr and rCr<=255 then
set bCr=ZXr(BXr,4)
set BXr=bCr
else
set sCr=qUu(uCr*1000.)
if sCr*1./1000==uCr and sCr<=65535 then
set yCr=ZXr(BXr,5)
set BXr=yCr
endif
endif
endif
set tCr=0.0
if gKu(VXr)then
set pCr=ZXr(BXr,6)
set BXr=pCr
set tCr=YKu(VXr)
endif
set iCr=0.0
if Q7s(VXr)!=G0s(VXr)then
set eCr=ZXr(BXr,7)
set BXr=eCr
set iCr=N_u(Q7s(VXr))
endif
set l7=BXr
set b7=NXr
set y7=wCr
set p7=uCr
set e7=tCr
set q7=iCr
return l7
endfunction
function u5r takes integer B2r returns integer
local integer M2r=0
local integer N2r=M2r
local integer w5r
if IsUnitIdType(B2r,UNIT_TYPE_TOWNHALL)then
set w5r=L2r(N2r,0)
set N2r=w5r
endif
set x9=N2r
return x9
endfunction
function bBr takes integer OBr,integer lBr returns integer
set J7=Ewu(OBr,lBr)
return J7
endfunction
function XCr takes integer KCr,integer LCr returns integer
set Y7=Ewu(KCr,LCr)
return Y7
endfunction
function wVr takes integer NCr,integer MCr returns integer
set G7=Ewu(NCr,MCr)
return G7
endfunction
function vVr takes unit iVr returns integer
local integer SVr=S7s(iVr)
local integer qVr=0
local integer cVr=qVr
local integer aVr=0
local integer oVr=aVr
local integer OVr=u6r(iVr)
local unit lVr
local unit bVr
local integer yVr
local integer pVr
local integer eVr
local integer nVr
local integer dVr
local integer fVr
local integer RVr
local integer TVr
local integer YVr
local integer GVr
local integer gVr
local integer hVr
local integer FVr
local integer kVr
local integer jVr
local integer xVr
if l6r(iVr)then
set nVr=XCr(cVr,0)
set cVr=nVr
endif
set bVr=I5r(Ty,SVr,0.,0.,wwu(0.))
call i6r(bVr,OVr,false)
set lVr=bVr
set yVr=G6r(iVr,false)
if yVr!=G6r(lVr,false)then
set dVr=XCr(cVr,1)
set cVr=dVr
if yVr>255 then
set fVr=XCr(cVr,2)
set cVr=fVr
if yVr>65535 then
set RVr=XCr(cVr,7)
set cVr=RVr
set TVr=wVr(oVr,0)
set oVr=TVr
endif
endif
endif
set pVr=F6r(iVr,false)
if pVr!=F6r(lVr,false)then
set YVr=XCr(cVr,3)
set cVr=YVr
if pVr>255 then
set GVr=XCr(cVr,4)
set cVr=GVr
if pVr>65535 then
set gVr=XCr(cVr,7)
set cVr=gVr
set hVr=wVr(oVr,1)
set oVr=hVr
endif
endif
endif
set eVr=x6r(iVr,false)
if eVr!=x6r(lVr,false)then
set FVr=XCr(cVr,5)
set cVr=FVr
if eVr>255 then
set kVr=XCr(cVr,6)
set cVr=kVr
if eVr>65535 then
set jVr=XCr(cVr,7)
set cVr=jVr
set xVr=wVr(oVr,2)
set oVr=xVr
endif
endif
endif
call E8s(lVr)
set v7=cVr
set m7=oVr
set Q7=OVr
set W7=yVr
set E7=pVr
set Z7=eVr
set lVr=null
set bVr=null
return v7
endfunction
function wNr takes unit aBr,string nBr returns integer
local integer dBr
local integer fBr
local integer RBr
local integer TBr
local integer YBr
local integer GBr
local integer gBr
local integer hBr
local integer FBr
local integer kBr
local integer jBr
local integer xBr
local integer vBr
local integer mBr
local integer QBr
local integer WBr
local integer EBr
local integer ZBr
local integer UBr
local integer IBr
local integer PBr
local integer ABr
local integer DBr
local integer HBr
local integer JBr
local integer KBr
local integer LBr
local integer XBr
local integer CBr
local integer VBr
local integer BBr
local integer NBr
local integer MBr
set w3[MM]=nBr
set MM=MM+1
set dBr=S7s(aBr)
set vBr=0
set fBr=vBr
set mBr=tVr()
set QBr=h7
set WBr=F7
set EBr=k7
set ZBr=j7
set UBr=x7
set RBr=mBr
set TBr=QBr
set YBr=WBr
set GBr=EBr
set gBr=ZBr
set hBr=UBr
if IsHeroUnitId(dBr)then
set IBr=bBr(fBr,0)
set fBr=IBr
set PBr=vVr(aBr)
set ABr=m7
set DBr=Q7
set HBr=W7
set JBr=E7
set KBr=Z7
set RBr=PBr
set TBr=ABr
set YBr=DBr
set GBr=HBr
set gBr=JBr
set hBr=KBr
endif
set FBr=0
if H7s(aBr)!=0 then
set LBr=bBr(fBr,1)
set fBr=LBr
set FBr=H7s(aBr)
endif
if bKu(aBr,0)then
set XBr=bBr(fBr,2)
set fBr=XBr
endif
if bKu(aBr,1)then
set CBr=bBr(fBr,3)
set fBr=CBr
endif
if bKu(aBr,2)then
set VBr=bBr(fBr,4)
set fBr=VBr
endif
set kBr=HXu(aBr,"when calling removedAbilities in UnitTypeData, line 490")
if e1o(kBr,"when calling hasNext in UnitTypeData, line 491")then
set BBr=bBr(fBr,5)
set fBr=BBr
endif
call n1o(kBr,"when calling close in UnitTypeData, line 493")
set jBr=XXu(aBr,"when calling modifiedAbilities in UnitTypeData, line 494")
if e1o(jBr,"when calling hasNext in UnitTypeData, line 495")then
set NBr=bBr(fBr,6)
set fBr=NBr
else
set xBr=NXu(aBr,"when calling addedAbilities in UnitTypeData, line 498")
if e1o(xBr,"when calling hasNext in UnitTypeData, line 499")then
set MBr=bBr(fBr,6)
set fBr=MBr
endif
call n1o(xBr,"when calling close in UnitTypeData, line 501")
endif
call n1o(jBr,"when calling close in UnitTypeData, line 502")
set MM=MM-1
set w8=fBr
set u8=RBr
set r8=TBr
set s8=YBr
set t8=GBr
set i8=gBr
set S8=hBr
set c8=FBr
return w8
endfunction
function BNr takes integer CNr,integer VNr returns integer
set a8=Ewu(CNr,VNr)
return a8
endfunction
function FMr takes unit oMr,integer OMr returns integer
local integer lMr=S7s(oMr)
local integer bMr=L0s(oMr,OMr)
local real yMr=e_s(oMr,OMr)
local integer pMr=c_s(oMr,OMr)
local integer eMr=w_s(oMr,OMr)
local integer nMr=0
local integer qMr=nMr
local integer aMr
local integer dMr
local integer fMr
local integer RMr
local integer TMr
local integer YMr
local integer GMr
local integer gMr
local integer hMr
if bMr!=Ovu(lMr,OMr)then
set dMr=BNr(qMr,0)
set qMr=dMr
if bMr>255 or bMr<0 then
set fMr=BNr(qMr,1)
set qMr=fMr
endif
endif
if yMr!=yvu(lMr,OMr)then
set RMr=BNr(qMr,2)
set qMr=RMr
set aMr=qUu(yMr*100.)
if aMr*1./100==yMr and aMr<=255 then
set TMr=BNr(qMr,3)
set qMr=TMr
endif
endif
if pMr!=qvu(lMr,OMr)then
set YMr=BNr(qMr,4)
set qMr=YMr
if pMr>255 then
set GMr=BNr(qMr,5)
set qMr=GMr
endif
endif
if eMr!=dvu(lMr,OMr)then
set gMr=BNr(qMr,6)
set qMr=gMr
if eMr>255 then
set hMr=BNr(qMr,7)
set qMr=hMr
endif
endif
set Y8=qMr
set G8=bMr
set g8=yMr
set h8=pMr
set F8=eMr
return Y8
endfunction
function s3r takes integer u3r,integer r3r returns integer
set Q8=Ewu(u3r,r3r)
return Q8
endfunction
function x1r takes unit G3r returns integer
local integer g3r=S7s(G3r)
local integer X3r=0
local integer h3r=X3r
local integer C3r=uMr()
local integer V3r=d8
local real B3r=f8
local integer N3r=R8
local integer M3r=T8
local integer F3r=C3r
local integer k3r=V3r
local real j3r=B3r
local integer x3r=N3r
local integer v3r=M3r
local integer w1r=FMr(G3r,1)
local integer u1r=G8
local real r1r=g8
local integer s1r=h8
local integer t1r=F8
local integer m3r=w1r
local integer Q3r=u1r
local real W3r=r1r
local integer E3r=s1r
local integer Z3r=t1r
local integer U3r
local integer I3r
local real P3r
local integer A3r
local integer D3r
local integer H3r
local integer J3r
local integer K3r
local integer L3r
local integer i1r
local integer S1r
local integer c1r
local real o1r
local integer O1r
local integer l1r
local integer b1r
local integer y1r
local real p1r
local integer e1r
local integer q1r
local integer a1r
local integer n1r
local integer d1r
local integer f1r
local real R1r
local integer T1r
local integer Y1r
local integer G1r
local integer g1r
local integer h1r
local integer F1r
local integer k1r
local integer j1r
if m3r!=0 then
set i1r=s3r(h3r,0)
set h3r=i1r
set S1r=m3r
set c1r=Q3r
set o1r=W3r
set O1r=E3r
set l1r=Z3r
set F3r=S1r
set k3r=c1r
set j3r=o1r
set x3r=O1r
set v3r=l1r
endif
set b1r=uMr()
set y1r=d8
set p1r=f8
set e1r=R8
set q1r=T8
set U3r=b1r
set I3r=y1r
set P3r=p1r
set A3r=e1r
set D3r=q1r
set a1r=FMr(G3r,2)
set H3r=a1r
if H3r!=0 then
set n1r=s3r(h3r,1)
set h3r=n1r
set d1r=m3r
set f1r=Q3r
set R1r=W3r
set T1r=E3r
set Y1r=Z3r
set U3r=d1r
set I3r=f1r
set P3r=R1r
set A3r=T1r
set D3r=Y1r
endif
set J3r=0
if NHu(G3r)then
set G1r=s3r(h3r,2)
set h3r=G1r
set J3r=uJu(G3r)
if J3r>=0 and J3r<=255 then
set g1r=s3r(h3r,3)
set h3r=g1r
endif
endif
set K3r=k0s(G3r)
if K3r!=Yvu(g3r)then
set h1r=s3r(h3r,4)
set h3r=h1r
if K3r<=65535 then
set F1r=s3r(h3r,5)
set h3r=F1r
endif
endif
set L3r=Q0s(G3r)
if L3r!=gvu(g3r)then
set k1r=s3r(h3r,6)
set h3r=k1r
if L3r<=65535 then
set j1r=s3r(h3r,7)
set h3r=j1r
endif
endif
set V8=h3r
set B8=F3r
set N8=k3r
set M8=j3r
set w9=x3r
set u9=v3r
set r9=U3r
set s9=I3r
set t9=P3r
set i9=A3r
set S9=D3r
set c9=J3r
set o9=K3r
set O9=L3r
return V8
endfunction
function y5r takes integer l5r,integer b5r returns integer
set m9=Ewu(l5r,b5r)
return m9
endfunction
function aqS takes integer seS,unit teS,string ieS returns nothing
local integer SeS
local integer ceS
local integer oeS
local integer OeS
local integer leS
local integer beS
local integer yeS
local integer peS
local integer eeS
local integer qeS
local integer aeS
local integer neS
local integer deS
local integer feS
local integer ReS
local real TeS
local integer YeS
local integer GeS
local integer geS
local integer heS
local integer FeS
local real keS
local integer jeS
local integer xeS
local real veS
local real meS
local real QeS
local real WeS
local real EeS
local integer ZeS
local integer UeS
local integer IeS
local integer PeS
local integer AeS
local integer DeS
local integer HeS
local integer JeS
local integer KeS
local integer LeS
local integer XeS
local integer CeS
local integer VeS
local real BeS
local integer NeS
local integer MeS
local integer wqS
local integer uqS
local real rqS
local integer sqS
local integer tqS
local integer iqS
local integer SqS
local integer cqS
local integer oqS
local integer OqS
local integer lqS
local integer bqS
local integer yqS
local integer pqS
local integer eqS
local integer qqS
set w3[MM]=ieS
set MM=MM+1
set DN[seS]=S7s(teS)
if A7s(teS,Sy)then
set aeS=y5r(PN[seS],0)
set PN[seS]=aeS
endif
if h8s(teS)then
set neS=y5r(PN[seS],1)
set PN[seS]=neS
endif
if R7s(teS)!=GetObjectName(DN[seS])then
set deS=y5r(PN[seS],2)
set PN[seS]=deS
set feS=uso(IN[seS],R7s(teS),"when calling addString in UnitTypeData, line 1090")
set HN[seS]=feS
endif
set ReS=JLr(teS)
set TeS=A6
set YeS=D6
set GeS=H6
set geS=J6
set heS=K6
set FeS=L6
set keS=X6
set JN[seS]=ReS
set KN[seS]=TeS
set LN[seS]=YeS
set XN[seS]=GeS
set CN[seS]=geS
set VN[seS]=heS
set BN[seS]=FeS
set NN[seS]=keS
if JN[seS]!=0 then
set jeS=y5r(PN[seS],3)
set PN[seS]=jeS
endif
set xeS=qCr(teS)
set veS=b7
set meS=y7
set QeS=p7
set WeS=e7
set EeS=q7
set MN[seS]=xeS
set wM[seS]=veS
set uM[seS]=meS
set rM[seS]=QeS
set sM[seS]=WeS
set tM[seS]=EeS
if MN[seS]!=0 then
set ZeS=y5r(PN[seS],4)
set PN[seS]=ZeS
endif
set UeS=wNr(teS,"when calling getGeneralStats in UnitTypeData, line 1099")
set IeS=u8
set PeS=r8
set AeS=s8
set DeS=t8
set HeS=i8
set JeS=S8
set KeS=c8
set iM[seS]=UeS
set SM[seS]=IeS
set cM[seS]=PeS
set oM[seS]=AeS
set OM[seS]=DeS
set lM[seS]=HeS
set bM[seS]=JeS
set yM[seS]=KeS
if iM[seS]!=0 then
set LeS=y5r(PN[seS],5)
set PN[seS]=LeS
endif
set XeS=x1r(teS)
set CeS=B8
set VeS=N8
set BeS=M8
set NeS=w9
set MeS=u9
set wqS=r9
set uqS=s9
set rqS=t9
set sqS=i9
set tqS=S9
set iqS=c9
set SqS=o9
set cqS=O9
set pM[seS]=XeS
set eM[seS]=CeS
set qM[seS]=VeS
set aM[seS]=BeS
set nM[seS]=NeS
set dM[seS]=MeS
set fM[seS]=wqS
set RM[seS]=uqS
set TM[seS]=rqS
set YM[seS]=sqS
set GM[seS]=tqS
set gM[seS]=iqS
set hM[seS]=SqS
set FM[seS]=cqS
if pM[seS]!=0 then
set oqS=y5r(PN[seS],6)
set PN[seS]=oqS
endif
if DHu(teS)and(not PHu(teS))then
set OqS=d5r(AN[seS],0)
set AN[seS]=OqS
endif
set SeS=Xht(HXu(teS,"when calling removedAbilities in UnitTypeData, line 1109"))
loop
exitwhen not Eht(SeS)
set ceS=Iht(SeS)
if ceS!=Sy then
call Cqo(kM[seS],ceS,"when calling add in UnitTypeData, line 1111")
endif
endloop
call Dht(SeS,"when calling close in UnitTypeData, line 1109")
set oeS=Xht(XXu(teS,"when calling modifiedAbilities in UnitTypeData, line 1112"))
loop
exitwhen not Eht(oeS)
set OeS=Iht(oeS)
set eeS=jM[seS]
set leS=syS("when calling new_SingleAbilityData in UnitTypeData, line 1113")
call Hyo(leS,teS,OeS,"when calling build in UnitTypeData, line 1113")
call Cqo(eeS,leS,"when calling add in UnitTypeData, line 1113")
endloop
call Dht(oeS,"when calling close in UnitTypeData, line 1112")
set beS=Xht(NXu(teS,"when calling addedAbilities in UnitTypeData, line 1114"))
loop
exitwhen not Eht(beS)
set yeS=Iht(beS)
if yeS!=Sy then
set qeS=jM[seS]
set peS=syS("when calling new_SingleAbilityData in UnitTypeData, line 1116")
call Hyo(peS,teS,yeS,"when calling build in UnitTypeData, line 1116")
call Cqo(qeS,peS,"when calling add in UnitTypeData, line 1116")
endif
endloop
call Dht(beS,"when calling close in UnitTypeData, line 1114")
set lqS=P2r(teS)
set xM[seS]=lqS
if xM[seS]!=F2r(DN[seS])then
set bqS=d5r(AN[seS],1)
set AN[seS]=bqS
endif
set yqS=S5r(teS)
set vM[seS]=yqS
if vM[seS]!=u5r(DN[seS])then
set pqS=d5r(AN[seS],2)
set AN[seS]=pqS
endif
if WaygateIsActive(teS)then
set eqS=d5r(AN[seS],3)
set AN[seS]=eqS
endif
if AN[seS]!=0 then
set qqS=y5r(PN[seS],7)
set PN[seS]=qqS
endif
set MM=MM-1
endfunction
function Lpo takes integer Hpo,unit Jpo,string Kpo returns nothing
set w3[MM]=Kpo
set MM=MM+1
if qm[Hpo]==0 then
if Hpo==0 then
call Mau("Nullpointer exception when calling UnitTypeData.build","when calling error in UnitTypeData, line 1080")
else
call Mau("Called UnitTypeData.build on invalid object.","when calling error in UnitTypeData, line 1080")
endif
endif
call aqS(Hpo,Jpo,"when calling build in UnitTypeData, line 1080")
set MM=MM-1
endfunction
function Gpc takes string Tpc returns integer
local integer Ypc
set w3[MM]=Tpc
set MM=MM+1
if dm==0 then
if fm<32768 then
set fm=fm+1
set Ypc=fm
else
call Mau("Out of memory: Could not create KeyValueWrapper.","when calling error in UnitTypeData, line 1245")
set Ypc=0
endif
else
set dm=dm-1
set Ypc=nm[dm]
endif
set MM=MM-1
return Ypc
endfunction
function FdS takes integer hdS returns nothing
endfunction
function vdS takes integer kdS,integer jdS,integer xdS returns nothing
call FdS(kdS)
set WM[kdS]=jdS
set EM[kdS]=xdS
endfunction
function gdS takes integer RdS,integer TdS,string YdS returns integer
local integer GdS
set w3[MM]=YdS
set MM=MM+1
set GdS=Gpc("when calling alloc_KeyValueWrapper in UnitTypeData, line 1249")
call vdS(GdS,RdS,TdS)
set MM=MM-1
return GdS
endfunction
function odS takes integer MnS,integer wdS,string udS returns integer
local integer rdS
local integer sdS
local integer tdS
local integer idS
local integer SdS
local integer cdS
set w3[MM]=udS
set MM=MM+1
set rdS=Zpo(wdS,"when calling hashCode in UnitTypeData, line 1267")
set sdS=BZc(mM[MnS],rdS,"when calling get in UnitTypeData, line 1268")
if sdS==0 then
set sdS=a4s("when calling new_LinkedList in UnitTypeData, line 1270")
call OUc(mM[MnS],rdS,sdS,"when calling put in UnitTypeData, line 1271")
endif
set tdS=x1s(sdS,"when calling iterator in UnitTypeData, line 1272")
loop
exitwhen not t1s(tdS)
set idS=r1s(tdS)
if Dpo(WM[idS],wdS,"when calling equals in UnitTypeData, line 1273")then
call mpo(wdS,"when calling dispatch_UnitTypeData_destroyUnitTypeData in UnitTypeData, line 1274")
call c1s(tdS,"when calling close in UnitTypeData, line 1272")
set MM=MM-1
set K0w=EM[idS]
return K0w
endif
endloop
call c1s(tdS,"when calling close in UnitTypeData, line 1272")
call Cqo(sdS,gdS(wdS,yZc(QM[MnS],"when calling size in UnitTypeData, line 1276"),"when calling new_KeyValueWrapper in UnitTypeData, line 1276"),"when calling add in UnitTypeData, line 1276")
call Nno(QM[MnS],wdS,"when calling add in UnitTypeData, line 1277")
set cdS=yZc(QM[MnS],"when calling size in UnitTypeData, line 1278")-1
set SdS=cdS
set MM=MM-1
set K0w=SdS
return K0w
endfunction
function qeo takes integer leo,integer beo,string yeo returns integer
local integer peo
local integer eeo
set w3[MM]=yeo
set MM=MM+1
if am[leo]==0 then
if leo==0 then
call Mau("Nullpointer exception when calling UnitTypeTable.addUnitType","when calling error in UnitTypeData, line 1266")
else
call Mau("Called UnitTypeTable.addUnitType on invalid object.","when calling error in UnitTypeData, line 1266")
endif
endif
set eeo=odS(leo,beo,"when calling addUnitType in UnitTypeData, line 1266")
set peo=eeo
set MM=MM-1
set J0w=peo
return J0w
endfunction
function TyS takes integer byS,unit yyS,real pyS,real eyS,string qyS returns nothing
local integer ayS
local integer nyS
local real dyS
local real fyS
local integer RyS
set w3[MM]=qyS
set MM=MM+1
set dyS=cEu(Qus(F7s(yyS),h3,pyS,eyS),i1)
set fyS=D1
set bN[byS]=dyS
set yN[byS]=fyS
set pN[byS]=GetUnitFacing(yyS)
set nyS=ON[byS]
set ayS=InS(oN[byS],"when calling new_UnitTypeData in UnitTypeData, line 1326")
call Lpo(ayS,yyS,"when calling build in UnitTypeData, line 1326")
set RyS=qeo(nyS,ayS,"when calling addUnitType in UnitTypeData, line 1326")
set lN[byS]=RyS
set MM=MM-1
endfunction
function opo takes integer spo,unit tpo,real ipo,real Spo,string cpo returns nothing
set w3[MM]=cpo
set MM=MM+1
if Om[spo]==0 then
if spo==0 then
call Mau("Nullpointer exception when calling SingleUnitData.build","when calling error in UnitTypeData, line 1322")
else
call Mau("Called SingleUnitData.build on invalid object.","when calling error in UnitTypeData, line 1322")
endif
endif
call TyS(spo,tpo,ipo,Spo,"when calling build in UnitTypeData, line 1322")
set MM=MM-1
endfunction
function HpS takes integer IpS,string PpS returns nothing
local integer ApS
local integer DpS
set w3[MM]=PpS
set MM=MM+1
if g7s(FN[IpS])==kN[IpS]then
set DpS=fN[jN[IpS]]
set ApS=MyS(aN[jN[IpS]],dN[jN[IpS]],"when calling new_SingleUnitData in UnitTypeData, line 1412")
call opo(ApS,FN[IpS],xN[IpS],vN[IpS],"when calling build in UnitTypeData, line 1412")
call Nno(DpS,ApS,"when calling add in UnitTypeData, line 1412")
endif
set MM=MM-1
endfunction
function J_t takes integer D_t,string H_t returns nothing
set w3[MM]=H_t
set MM=MM+1
call pKc(KA[D_t],"when calling sendRound in NetworkData, line 443")
set MM=MM-1
endfunction
function QGS takes string vGS returns integer
local integer mGS
set w3[MM]=vGS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set mGS=HY
set JY[mGS]=1322
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_BufferAdapters.","when calling error in BufferAdapters, line 21")
set mGS=0
endif
else
set DY=DY-1
set mGS=AY[DY]
set JY[mGS]=1322
endif
set MM=MM-1
return mGS
endfunction
function xGS takes string kGS returns integer
local integer jGS
set w3[MM]=kGS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set jGS=IY
set PY[jGS]=1358
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_BufferAdapters.","when calling error in BufferAdapters, line 21")
set jGS=0
endif
else
set UY=UY-1
set jGS=ZY[UY]
set PY[jGS]=1358
endif
set MM=MM-1
return jGS
endfunction
function vsu takes integer gsu,integer hsu,string Fsu returns nothing
local integer ksu
local integer jsu
local integer xsu
set w3[MM]=Fsu
set MM=MM+1
set ksu=xGS("when calling alloc_LimitedExecuteCondition_executeWhile_BufferAdapters in BufferAdapters, line 21")
set ZQ[ksu]=gsu
set xsu=ksu
set jsu=QGS("when calling alloc_LimitedExecuteAction_executeWhile_BufferAdapters in BufferAdapters, line 21")
set UQ[jsu]=gsu
set IQ[jsu]=hsu
call rdu(64,xsu,jsu,"when calling executeWhile in BufferAdapters, line 21")
set MM=MM-1
endfunction
function Kot takes integer Hot,string Jot returns nothing
set w3[MM]=Jot
set MM=MM+1
call vsu(pH[Hot],AKc(eH[Hot],"when calling getData in Persistable, line 153"),"when calling transfer in Persistable, line 153")
set MM=MM-1
endfunction
function HYS takes integer AYS,string DYS returns nothing
set w3[MM]=DYS
set MM=MM+1
if EY[AYS]==0 then
call Mau("Double free: object of type Base64Decoder","when calling error in Base64, line 189")
else
set mY[QY]=AYS
set QY=QY+1
set EY[AYS]=0
endif
set MM=MM-1
endfunction
function Rls takes integer als,string nls returns nothing
local integer dls
local integer fls
set w3[MM]=nls
set MM=MM+1
if TQ[als]!=0 then
call qYc(TQ[als],"when calling dispatch_ByteBuffer_destroyByteBuffer in Base64, line 199")
endif
if fQ[als]!=0 then
call Ndc(fQ[als],"when calling dispatch_BigString_destroyBigString in Base64, line 202")
endif
if RQ[als]!=0 then
set dls=x1s(RQ[als],"when calling iterator in Base64, line 205")
loop
exitwhen not t1s(dls)
set fls=r1s(dls)
call vfc(fls,"when calling dispatch_BigStringElement_destroyBigStringElement in Base64, line 206")
endloop
call c1s(dls,"when calling close in Base64, line 205")
call CAc(RQ[als],"when calling dispatch_LinkedList_destroyLinkedList in Base64, line 208")
endif
set MM=MM-1
endfunction
function tls takes integer rls,string sls returns nothing
set w3[MM]=sls
set MM=MM+1
call Rls(rls,"when calling Base64Decoder_onDestroy in Base64, line 197")
call HYS(rls,"when calling dealloc_Base64Decoder in Base64, line 197")
set MM=MM-1
endfunction
function Knc takes integer Hnc,string Jnc returns nothing
set w3[MM]=Jnc
set MM=MM+1
if EY[Hnc]==0 then
if Hnc==0 then
call Mau("Nullpointer exception when calling Base64Decoder.Base64Decoder","when calling error in Base64, line 189")
else
call Mau("Called Base64Decoder.Base64Decoder on invalid object.","when calling error in Base64, line 189")
endif
endif
call tls(Hnc,"when calling destroyBase64Decoder in Base64, line 189")
set MM=MM-1
endfunction
function uls takes integer NOs,string MOs returns integer
local integer wls
set w3[MM]=MOs
set MM=MM+1
set wls=TQ[NOs]
set TQ[NOs]=0
call Knc(NOs,"when calling dispatch_Base64Decoder_destroyBase64Decoder in Base64, line 280")
set MM=MM-1
return wls
endfunction
function Sdc takes integer sdc,string tdc returns integer
local integer idc
set w3[MM]=tdc
set MM=MM+1
if EY[sdc]==0 then
if sdc==0 then
call Mau("Nullpointer exception when calling Base64Decoder.intoData","when calling error in Base64, line 277")
else
call Mau("Called Base64Decoder.intoData on invalid object.","when calling error in Base64, line 277")
endif
endif
set idc=uls(sdc,"when calling intoData in Base64, line 277")
set MM=MM-1
return idc
endfunction
function PYS takes string UYS returns integer
local integer IYS
set w3[MM]=UYS
set MM=MM+1
if QY==0 then
if WY<32768 then
set WY=WY+1
set IYS=WY
set EY[IYS]=643
else
call Mau("Out of memory: Could not create Base64Decoder.","when calling error in Base64, line 189")
set IYS=0
endif
else
set QY=QY-1
set IYS=mY[QY]
set EY[IYS]=643
endif
set MM=MM-1
return IYS
endfunction
function cls takes integer ils,string Sls returns nothing
set w3[MM]=Sls
set MM=MM+1
set TQ[ils]=Bds("when calling new_ByteBuffer in Base64, line 192")
set MM=MM-1
endfunction
function qls takes integer yls,integer pls,string els returns nothing
set w3[MM]=els
set MM=MM+1
call cls(yls,"when calling Base64Decoder_init in Base64, line 194")
set fQ[yls]=pls
set MM=MM-1
endfunction
function bls takes integer ols,string Ols returns integer
local integer lls
set w3[MM]=Ols
set MM=MM+1
set lls=PYS("when calling alloc_Base64Decoder in Base64, line 194")
call qls(lls,ols,"when calling construct_Base64Decoder in Base64, line 194")
set MM=MM-1
return lls
endfunction
function FYS takes string gYS returns integer
local integer hYS
set w3[MM]=gYS
set MM=MM+1
if gY==0 then
if hY<32768 then
set hY=hY+1
set hYS=hY
set FY[hYS]=711
else
call Mau("Out of memory: Could not create Base64DataReader.","when calling error in Base64Data, line 77")
set hYS=0
endif
else
set gY=gY-1
set hYS=GY[gY]
set FY[hYS]=711
endif
set MM=MM-1
return hYS
endfunction
function Gos takes integer Yos returns nothing
endfunction
function vos takes integer jos,integer xos returns nothing
call Gos(jos)
set nQ[jos]=xos
endfunction
function kos takes integer gos,string hos returns integer
local integer Fos
set w3[MM]=hos
set MM=MM+1
set Fos=FYS("when calling alloc_Base64DataReader in Base64Data, line 80")
call vos(Fos,gos)
set MM=MM-1
return Fos
endfunction
function LYS takes string JYS returns integer
local integer KYS
set w3[MM]=JYS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set KYS=IY
set PY[KYS]=1357
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_Base64Decoder_Base64.","when calling error in Base64, line 255")
set KYS=0
endif
else
set UY=UY-1
set KYS=ZY[UY]
set PY[KYS]=1357
endif
set MM=MM-1
return KYS
endfunction
function VYS takes string XYS returns integer
local integer CYS
set w3[MM]=XYS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set CYS=HY
set JY[CYS]=1321
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_Base64Decoder_Base64.","when calling error in Base64, line 255")
set CYS=0
endif
else
set DY=DY-1
set CYS=AY[DY]
set JY[CYS]=1321
endif
set MM=MM-1
return CYS
endfunction
function Qys takes integer mys returns integer
return mQ[mys]
endfunction
function ffc takes integer afc,string nfc returns integer
local integer dfc
set w3[MM]=nfc
set MM=MM+1
if sG[afc]==0 then
if afc==0 then
call Mau("Nullpointer exception when calling BigString.length","when calling error in BigString, line 204")
else
call Mau("Called BigString.length on invalid object.","when calling error in BigString, line 204")
endif
endif
set dfc=Qys(afc)
set MM=MM-1
return dfc
endfunction
function Qds takes integer vds,string mds returns nothing
set w3[MM]=mds
set MM=MM+1
if dW[vds]>0 then
call dYc(vds,"when calling commitInt in ByteBuffer, line 92")
endif
call TYc(vds,"when calling loadInt in ByteBuffer, line 93")
set MM=MM-1
endfunction
function iGc takes integer sGc,string tGc returns nothing
set w3[MM]=tGc
set MM=MM+1
if VG[sGc]==0 then
if sGc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.toReadMode","when calling error in ByteBuffer, line 90")
else
call Mau("Called ByteBuffer.toReadMode on invalid object.","when calling error in ByteBuffer, line 90")
endif
endif
call Qds(sGc,"when calling toReadMode in ByteBuffer, line 90")
set MM=MM-1
endfunction
function bps takes integer ips,integer Sps,integer cps,string ops returns nothing
local integer Ops
local integer lps
set w3[MM]=ops
set MM=MM+1
call Jys(ips)
set Ops=x1s(Sps,"when calling iterator in BigString, line 54")
loop
exitwhen not t1s(Ops)
set lps=r1s(Ops)
if vhr(QQ[lps])>cps then
call Mau("BigString: trying to construct a BigString with one of the elements above the requested max size.","when calling error in BigString, line 56")
endif
set mQ[ips]=mQ[ips]+vhr(QQ[lps])
endloop
call c1s(Ops,"when calling close in BigString, line 54")
set vQ[ips]=cps
set kQ[ips]=Sps
set MM=MM-1
endfunction
function tps takes integer wps,integer ups,string rps returns integer
local integer sps
set w3[MM]=rps
set MM=MM+1
set sps=eGS("when calling alloc_BigString in BigString, line 53")
call bps(sps,wps,ups,"when calling construct_BigString2 in BigString, line 53")
set MM=MM-1
return sps
endfunction
function BOs takes integer HOs,string JOs returns nothing
local integer KOs
local integer LOs
local integer XOs
local integer COs
local integer VOs
set w3[MM]=JOs
set MM=MM+1
if fQ[HOs]==0 then
set fQ[HOs]=tps(RQ[HOs],Yy,"when calling new_BigString in Base64, line 244")
elseif RQ[HOs]!=0 then
call CAc(RQ[HOs],"when calling dispatch_LinkedList_destroyLinkedList in Base64, line 247")
endif
set RQ[HOs]=0
set KOs=ffc(fQ[HOs],"when calling length in Base64, line 250")/4-1
set ey=0
set qy=KOs
set COs=py
set LOs=LYS("when calling alloc_LimitedExecuteCondition_executeWhile_Base64Decoder_Base64 in Base64, line 255")
set VOs=LOs
set XOs=VYS("when calling alloc_LimitedExecuteAction_executeWhile_Base64Decoder_Base64 in Base64, line 255")
set YQ[XOs]=HOs
call rdu(COs,VOs,XOs,"when calling executeWhile in Base64, line 255")
call iGc(TQ[HOs],"when calling toReadMode in Base64, line 258")
set MM=MM-1
endfunction
function rdc takes integer wdc,string udc returns nothing
set w3[MM]=udc
set MM=MM+1
if EY[wdc]==0 then
if wdc==0 then
call Mau("Nullpointer exception when calling Base64Decoder.decode","when calling error in Base64, line 242")
else
call Mau("Called Base64Decoder.decode on invalid object.","when calling error in Base64, line 242")
endif
endif
call BOs(wdc,"when calling decode in Base64, line 242")
set MM=MM-1
endfunction
function kcs takes integer Fcs returns nothing
endfunction
function nYS takes integer qYS,string aYS returns nothing
set w3[MM]=aYS
set MM=MM+1
if dY[qYS]==0 then
call Mau("Double free: object of type Base64DataDecoder","when calling error in Base64Data, line 117")
else
set qY[aY]=qYS
set aY=aY+1
set dY[qYS]=0
endif
set MM=MM-1
endfunction
function dcs takes integer acs,string ncs returns nothing
set w3[MM]=ncs
set MM=MM+1
call kcs(acs)
call nYS(acs,"when calling dealloc_Base64DataDecoder in Base64Data, line 117")
set MM=MM-1
endfunction
function xnc takes integer knc,string jnc returns nothing
set w3[MM]=jnc
set MM=MM+1
if dY[knc]==0 then
if knc==0 then
call Mau("Nullpointer exception when calling Base64DataDecoder.Base64DataDecoder","when calling error in Base64Data, line 117")
else
call Mau("Called Base64DataDecoder.Base64DataDecoder on invalid object.","when calling error in Base64Data, line 117")
endif
endif
call dcs(knc,"when calling destroyBase64DataDecoder in Base64Data, line 117")
set MM=MM-1
endfunction
function qcs takes integer lcs,integer bcs,string ycs returns integer
local integer pcs
local integer ecs
set w3[MM]=ycs
set MM=MM+1
call xnc(lcs,"when calling dispatch_Base64DataDecoder_destroyBase64DataDecoder in Base64Data, line 119")
set pcs=bls(bcs,"when calling new_Base64Decoder in Base64Data, line 120")
call rdc(pcs,"when calling decode in Base64Data, line 121")
set ecs=kos(Sdc(pcs,"when calling intoData in Base64Data, line 122"),"when calling new_Base64DataReader in Base64Data, line 122")
set MM=MM-1
return ecs
endfunction
function Enc takes integer vnc,integer mnc,string Qnc returns integer
local integer Wnc
set w3[MM]=Qnc
set MM=MM+1
if dY[vnc]==0 then
if vnc==0 then
call Mau("Nullpointer exception when calling Base64DataDecoder.decode","when calling error in Base64Data, line 118")
else
call Mau("Called Base64DataDecoder.decode on invalid object.","when calling error in Base64Data, line 118")
endif
endif
set Wnc=qcs(vnc,mnc,"when calling decode in Base64Data, line 118")
set MM=MM-1
return Wnc
endfunction
function eYS takes string yYS returns integer
local integer pYS
set w3[MM]=yYS
set MM=MM+1
if aY==0 then
if nY<32768 then
set nY=nY+1
set pYS=nY
set dY[pYS]=707
else
call Mau("Out of memory: Could not create Base64DataDecoder.","when calling error in Base64Data, line 117")
set pYS=0
endif
else
set aY=aY-1
set pYS=qY[aY]
set dY[pYS]=707
endif
set MM=MM-1
return pYS
endfunction
function Rcs takes integer fcs returns nothing
endfunction
function hcs takes integer gcs returns nothing
call Rcs(gcs)
endfunction
function Gcs takes string Tcs returns integer
local integer Ycs
set w3[MM]=Tcs
set MM=MM+1
set Ycs=eYS("when calling alloc_Base64DataDecoder in Base64Data, line 117")
call hcs(Ycs)
set MM=MM-1
return Ycs
endfunction
function ASt takes integer ZSt,integer USt,string ISt returns integer
local integer PSt
set w3[MM]=ISt
set MM=MM+1
set PSt=Enc(Gcs("when calling new_Base64DataDecoder in PersistableData, line 73"),USt,"when calling decode in PersistableData, line 73")
set MM=MM-1
return PSt
endfunction
function HCc takes integer ICc,integer PCc,string ACc returns integer
local integer DCc
set w3[MM]=ACc
set MM=MM+1
if Qg[ICc]==0 then
if ICc==0 then
call Mau("Nullpointer exception when calling Persistable.getReader","when calling error in PersistableData, line 72")
else
call Mau("Called Persistable.getReader on invalid object.","when calling error in PersistableData, line 72")
endif
endif
set DCc=ASt(ICc,PCc,"when calling getReader in PersistableData, line 72")
set MM=MM-1
return DCc
endfunction
function GES takes string TES returns integer
local integer YES
set w3[MM]=TES
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set YES=NY
set MY[YES]=772
else
call Mau("Out of memory: Could not create ForForceCallback_execute_PacketReader_PacketIO.","when calling error in PacketIO, line 159")
set YES=0
endif
else
set BY=BY-1
set YES=VY[BY]
set MY[YES]=772
endif
set MM=MM-1
return YES
endfunction
function bQu takes string oQu,string OQu returns nothing
local integer lQu
set w3[MM]=OQu
set MM=MM+1
call PreloadGenClear()
call PreloadGenStart()
set lQu=GES("when calling alloc_ForForceCallback_execute_PacketReader_PacketIO in PacketIO, line 159")
call Inu(lQu,"when calling execute in PacketIO, line 159")
call Preloader(oQu)
set sa=1
set MM=MM-1
endfunction
function RGS takes string dGS returns integer
local integer fGS
set w3[MM]=dGS
set MM=MM+1
if iG==0 then
if SG<32768 then
set SG=SG+1
set fGS=SG
set cG[fGS]=646
else
call Mau("Out of memory: Could not create BigStringElement.","when calling error in BigString, line 15")
set fGS=0
endif
else
set iG=iG-1
set fGS=tG[iG]
set cG[fGS]=646
endif
set MM=MM-1
return fGS
endfunction
function Tps takes integer Rps returns nothing
endfunction
function jps takes integer Fps,string kps returns nothing
call Tps(Fps)
set QQ[Fps]=kps
endfunction
function hps takes string Yps,string Gps returns integer
local integer gps
set w3[MM]=Gps
set MM=MM+1
set gps=RGS("when calling alloc_BigStringElement in BigString, line 16")
call jps(gps,Yps)
set MM=MM-1
return gps
endfunction
function pQu takes nothing returns string
local string yQu=BlzGetAbilityTooltip(Cq,sa)
if yQu=="END OF FILE" then
return""
endif
set sa=sa+1
return yQu
endfunction
function dQu takes string eQu returns integer
local integer qQu
local string aQu
local integer nQu
set w3[MM]=eQu
set MM=MM+1
set qQu=a4s("when calling new_LinkedList in PacketIO, line 183")
set aQu=pQu()
loop
exitwhen not(aQu!="")
call tDc(qQu,hps(aQu,"when calling new_BigStringElement in PacketIO, line 187"),"when calling push in PacketIO, line 187")
set aQu=pQu()
endloop
set nQu=tps(qQu,Yy,"when calling new_BigString in PacketIO, line 190")
set MM=MM-1
return nQu
endfunction
function vVc takes integer jVc,integer xVc returns integer
return 0
endfunction
function Mct takes integer Cct,string Vct returns nothing
local integer Bct
local integer Nct
set w3[MM]=Vct
set MM=MM+1
call bQu(hCc(ND[Cct],"when calling getPath in PersistableData, line 80"),"when calling open in PersistableData, line 80")
set Bct=Lhr(pQu())
set Nct=dQu("when calling readBigString in PersistableData, line 82")
if Bct==0 or Bct!=kfc(Nct,"when calling checksum in PersistableData, line 83")then
call Ndc(Nct,"when calling dispatch_BigString_destroyBigString in PersistableData, line 84")
call Mau("Persistable: checksum failed to validate","when calling error in PersistableData, line 85")
else
if BD[ND[Cct]]!=0 then
set Nct=vVc(BD[ND[Cct]],Nct)
endif
set BM[MD[Cct]]=HCc(ND[Cct],Nct,"when calling getReader in PersistableData, line 89")
endif
set MM=MM-1
endfunction
function bTc takes integer OTc,integer lTc returns nothing
endfunction
function OOt takes integer oOt returns nothing
call bTc(cH[TH[oOt]],YH[oOt])
endfunction
function bmS takes string OmS returns integer
local integer lmS
set w3[MM]=OmS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set lmS=NY
set MY[lmS]=787
else
call Mau("Out of memory: Could not create ForForceCallback_execute_execute_Network_NetworkData.","when calling error in NetworkData, line 275")
set lmS=0
endif
else
set BY=BY-1
set lmS=VY[BY]
set MY[lmS]=787
endif
set MM=MM-1
return lmS
endfunction
function T0t takes integer d0t,string f0t returns nothing
local integer R0t
set w3[MM]=f0t
set MM=MM+1
if ea==cA[RA[d0t]]then
set R0t=bmS("when calling alloc_ForForceCallback_execute_execute_Network_NetworkData in NetworkData, line 275")
set YA[R0t]=TA[d0t]
set GA[R0t]=RA[d0t]
call Inu(R0t,"when calling execute in NetworkData, line 275")
endif
set MM=MM-1
endfunction
function FhS takes string ghS returns integer
local integer hhS
set w3[MM]=ghS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set hhS=NY
set MY[hhS]=788
else
call Mau("Out of memory: Could not create ForForceCallback_execute_execute_PositionedDestructableData_DestructableData.","when calling error in DestructableData, line 266")
set hhS=0
endif
else
set BY=BY-1
set hhS=VY[BY]
set MY[hhS]=788
endif
set MM=MM-1
return hhS
endfunction
function TFs takes integer qFs,string aFs returns nothing
local integer nFs
local integer dFs
local integer fFs
local integer RFs
set w3[MM]=aFs
set MM=MM+1
if weu(yE[nE[qFs]],0)then
if weu(yE[nE[qFs]],1)then
call ego(0,dE[qFs],"when calling readInt in DestructableData, line 260")
set nFs=inw
else
call Fgo(0,dE[qFs],"when calling readShort in DestructableData, line 262")
set nFs=inw
endif
else
call Rgo(0,dE[qFs],"when calling readByte in DestructableData, line 264")
set nFs=inw
endif
set dFs=0
set fFs=nFs-1
loop
exitwhen dFs>fFs
set RFs=FhS("when calling alloc_ForForceCallback_execute_execute_PositionedDestructableData_DestructableData in DestructableData, line 266")
set fE[RFs]=nE[qFs]
set RE[RFs]=dE[qFs]
call Inu(RFs,"when calling execute in DestructableData, line 266")
set dFs=dFs+1
endloop
set MM=MM-1
endfunction
function DyS takes integer ZyS,integer UyS,string IyS returns nothing
local real PyS
local real AyS
set w3[MM]=IyS
set MM=MM+1
set PyS=TEu(UyS,"when calling readPointData in UnitTypeData, line 1338")
set AyS=J1
set bN[ZyS]=PyS
set yN[ZyS]=AyS
call Fgo(0,UyS,"when calling readShort in UnitTypeData, line 1339")
set pN[ZyS]=inw*1./180
set MM=MM-1
endfunction
function Gpo takes integer Rpo,integer Tpo,string Ypo returns nothing
set w3[MM]=Ypo
set MM=MM+1
if Om[Rpo]==0 then
if Rpo==0 then
call Mau("Nullpointer exception when calling SingleUnitData.deserialize","when calling error in UnitTypeData, line 1337")
else
call Mau("Called SingleUnitData.deserialize on invalid object.","when calling error in UnitTypeData, line 1337")
endif
endif
call DyS(Rpo,Tpo,"when calling deserialize in UnitTypeData, line 1337")
set MM=MM-1
endfunction
function UpS takes integer QpS,string WpS returns nothing
local integer EpS
local integer ZpS
set w3[MM]=WpS
set MM=MM+1
set ZpS=fN[gN[QpS]]
set EpS=MyS(aN[gN[QpS]],dN[gN[QpS]],"when calling new_SingleUnitData in UnitTypeData, line 1403")
call Gpo(EpS,hN[QpS],"when calling deserialize in UnitTypeData, line 1403")
call Nno(ZpS,EpS,"when calling add in UnitTypeData, line 1403")
set MM=MM-1
endfunction
function Wst takes integer mst,string Qst returns nothing
set w3[MM]=Qst
set MM=MM+1
call gLc(UD[mst],"when calling sendRound in Network, line 451")
set MM=MM-1
endfunction
function qBt takes integer bBt,integer yBt returns nothing
local integer pBt=YK[yBt]
local integer eBt
set YK[yBt]=YK[bBt]
set YK[bBt]=pBt
set eBt=GK[yBt]
set GK[yBt]=GK[bBt]
set GK[bBt]=eBt
endfunction
function q7o takes integer y7o,integer p7o,string e7o returns nothing
set w3[MM]=e7o
set MM=MM+1
if xx[y7o]==0 then
if y7o==0 then
call Mau("Nullpointer exception when calling GenericSharedPointer.swap","when calling error in ScmdDataTypes, line 146")
else
call Mau("Called GenericSharedPointer.swap on invalid object.","when calling error in ScmdDataTypes, line 146")
endif
endif
call qBt(y7o,p7o)
set MM=MM-1
endfunction
function Wyi takes integer xyi,string vyi returns nothing
local integer myi
local integer Qyi
set w3[MM]=vyi
set MM=MM+1
call x2o(eL[xyi],qL[xyi],"when calling setEnumUnit in ScmdUnitBuiltins, line 211")
call NFo(3,N1o(aL[xyi],0,"when calling get in ScmdUnitBuiltins, line 212"),eL[xyi],"when calling evaluate in ScmdUnitBuiltins, line 212",0,null,0,null)
set myi=inw
set Qyi=px[f7o(myi,"when calling get in ScmdUnitBuiltins, line 213")]
if Qyi>=1422 and Qyi<=1423 then
call q7o(nL[xyi],myi,"when calling swap in ScmdUnitBuiltins, line 214")
endif
call KGo(5,myi,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdUnitBuiltins, line 215")
set MM=MM-1
endfunction
function XKi takes integer HKi,string JKi returns nothing
local integer KKi
local integer LKi
set w3[MM]=JKi
set MM=MM+1
call x2o(bX[HKi],yX[HKi],"when calling setEnumUnit in SotfrpGuiRegions, line 147")
call NFo(3,N1o(pX[HKi],0,"when calling get in SotfrpGuiRegions, line 148"),bX[HKi],"when calling evaluate in SotfrpGuiRegions, line 148",0,null,0,null)
set KKi=inw
set LKi=px[f7o(KKi,"when calling get in SotfrpGuiRegions, line 149")]
if LKi>=1422 and LKi<=1423 then
call q7o(eX[HKi],KKi,"when calling swap in SotfrpGuiRegions, line 150")
endif
call KGo(5,KKi,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in SotfrpGuiRegions, line 151")
set MM=MM-1
endfunction
function QRu takes integer vRu,string mRu returns nothing
set w3[MM]=mRu
set MM=MM+1
call xRu("",vRu-1,"when calling precompute in GamecacheKeys, line 36")
set MM=MM-1
endfunction
function XWs takes integer KWs,string LWs returns nothing
set w3[MM]=LWs
set MM=MM+1
call QRu(HZ[KWs],"when calling precompute in GamecacheKeys, line 40")
set MM=MM-1
endfunction
function PxS takes string UxS returns integer
local integer IxS
set w3[MM]=UxS
set MM=MM+1
if lF==0 then
if bF<32768 then
set bF=bF+1
set IxS=bF
set yF[IxS]=1319
else
call Mau("Out of memory: Could not create LegacySingleUnitDataPositioned.","when calling error in LegacyUnitData, line 369")
set IxS=0
endif
else
set lF=lF-1
set IxS=OF[lF]
set yF[IxS]=1319
endif
set MM=MM-1
return IxS
endfunction
function EMs takes integer kMs,string jMs returns nothing
local integer xMs
local integer vMs
local integer mMs
local integer QMs
local integer WMs
set w3[MM]=jMs
set MM=MM+1
set xMs=0
set mI[kMs]=xMs
set QI[kMs]=0
set WI[kMs]=0
set EI[kMs]=0.0
set ZI[kMs]=0
set vMs=0
set mMs=0
set QMs=0
set WMs=0
set UI[kMs]=vMs
set II[kMs]=mMs
set PI[kMs]=QMs
set AI[kMs]=WMs
set DI[kMs]=0.0
set HI[kMs]=0.0
set JI[kMs]=0.0
set KI[kMs]=0.0
set LI[kMs]=0.0
set XI[kMs]=0.0
set CI[kMs]=0
set VI[kMs]=0
set BI[kMs]=0
set NI[kMs]=0
set MI[kMs]=0
set wP[kMs]=0.0
set uP[kMs]=0
set rP[kMs]=0.0
set sP[kMs]=0
set tP[kMs]=0.0
set iP[kMs]=0
set SP[kMs]=rDs("when calling new_HashList in LegacyUnitData, line 162")
set cP[kMs]=rDs("when calling new_HashList in LegacyUnitData, line 163")
set oP[kMs]=rDs("when calling new_HashList in LegacyUnitData, line 164")
set MM=MM-1
endfunction
function PMs takes integer ZMs,integer UMs,string IMs returns nothing
set w3[MM]=IMs
set MM=MM+1
call EMs(ZMs,"when calling LegacySingleUnitData_init in LegacyUnitData, line 171")
set vI[ZMs]=UMs
set MM=MM-1
endfunction
function l3s takes integer S3s returns nothing
local real c3s=0.
local real o3s=0.
local real O3s
set OP[S3s]=c3s
set lP[S3s]=o3s
set O3s=0.
set bP[S3s]=O3s
endfunction
function d3s takes integer q3s,integer a3s,string n3s returns nothing
set w3[MM]=n3s
set MM=MM+1
call PMs(q3s,a3s,"when calling construct_LegacySingleUnitData in LegacyUnitData, line 374")
call l3s(q3s)
set MM=MM-1
endfunction
function e3s takes integer b3s,string y3s returns integer
local integer p3s
set w3[MM]=y3s
set MM=MM+1
set p3s=PxS("when calling alloc_LegacySingleUnitDataPositioned in LegacyUnitData, line 374")
call d3s(p3s,b3s,"when calling construct_LegacySingleUnitDataPositioned in LegacyUnitData, line 374")
set MM=MM-1
return p3s
endfunction
function AYo takes integer ZYo,integer UYo,integer IYo,string PYo returns nothing
if UYo<0 or UYo>=2 then
call Mau("Index out of Bounds",PYo)
elseif UYo<=0 then
set bww[ZYo]=IYo
else
set yww[ZYo]=IYo
endif
endfunction
function IXs takes integer WXs,integer EXs,string ZXs returns nothing
local integer UXs
set w3[MM]=ZXs
set MM=MM+1
call Fgo(0,EXs,"when calling readShort in LegacyItemData, line 135")
set UXs=inw
set MU[WXs]=UXs
call ego(0,EXs,"when calling readInt in LegacyItemData, line 136")
set wI[WXs]=inw
if Lhu(MU[WXs],4)then
set uI[WXs]=0
elseif Lhu(MU[WXs],5)then
set uI[WXs]=1
else
call ego(0,EXs,"when calling readInt in LegacyItemData, line 142")
set uI[WXs]=inw
endif
if Lhu(MU[WXs],6)then
call rgo(1,EXs,"when calling readReal in LegacyItemData, line 144")
set rI[WXs]=snw
endif
if Lhu(MU[WXs],7)then
call ego(0,EXs,"when calling readInt in LegacyItemData, line 146")
set sI[WXs]=inw
endif
if Lhu(MU[WXs],8)then
call ego(0,EXs,"when calling readInt in LegacyItemData, line 148")
set tI[WXs]=inw
endif
if Lhu(MU[WXs],9)then
call ego(0,EXs,"when calling readInt in LegacyItemData, line 150")
set iI[WXs]=inw
endif
if Lhu(MU[WXs],10)then
call ego(0,EXs,"when calling readInt in LegacyItemData, line 152")
set SI[WXs]=inw
endif
if Lhu(MU[WXs],11)then
call ego(0,EXs,"when calling readInt in LegacyItemData, line 154")
set cI[WXs]=inw
endif
set MM=MM-1
endfunction
function wCs takes integer BXs,integer NXs,string MXs returns nothing
set w3[MM]=MXs
set MM=MM+1
call rgo(1,NXs,"when calling readReal in LegacyItemData, line 176")
call rgo(1,NXs,"when calling readReal in LegacyItemData, line 177")
call IXs(BXs,NXs,"when calling deserialize in LegacyItemData, line 178")
set MM=MM-1
endfunction
function DIc takes integer IIc,integer PIc,string AIc returns nothing
set w3[MM]=AIc
set MM=MM+1
if Kh[IIc]==0 then
if IIc==0 then
call Mau("Nullpointer exception when calling SingleItemData.deserialize","when calling error in LegacyItemData, line 134")
else
call Mau("Called SingleItemData.deserialize on invalid object.","when calling error in LegacyItemData, line 134")
endif
endif
if Kh[IIc]<=1571 then
call IXs(IIc,PIc,"when calling deserialize in LegacyItemData, line 134")
else
call wCs(IIc,PIc,"when calling deserialize in LegacyItemData, line 134")
endif
set MM=MM-1
endfunction
function GFu takes integer bFu,string yFu returns integer
local integer pFu
local integer eFu
local real qFu
local integer aFu
local integer nFu
local integer dFu
local integer fFu
local real RFu
local integer TFu
local integer YFu
set w3[MM]=yFu
set MM=MM+1
set dFu=0
call ego(0,bFu,"when calling readInt in LegacyUnitData, line 125")
set fFu=inw
call rgo(1,bFu,"when calling readReal in LegacyUnitData, line 125")
set RFu=snw
call ego(0,bFu,"when calling readInt in LegacyUnitData, line 125")
set TFu=inw
call ego(0,bFu,"when calling readInt in LegacyUnitData, line 125")
set YFu=inw
set pFu=dFu
set eFu=fFu
set qFu=RFu
set aFu=TFu
set nFu=YFu
set MM=MM-1
set G1=pFu
set g1=eFu
set h1=qFu
set F1=aFu
set k1=nFu
return G1
endfunction
function HjS takes string AjS returns integer
local integer DjS
set w3[MM]=AjS
set MM=MM+1
if Hh==0 then
if Jh<32768 then
set Jh=Jh+1
set DjS=Jh
set Kh[DjS]=1571
else
call Mau("Out of memory: Could not create SingleItemData.","when calling error in LegacyItemData, line 30")
set DjS=0
endif
else
set Hh=Hh-1
set DjS=Dh[Hh]
set Kh[DjS]=1571
endif
set MM=MM-1
return DjS
endfunction
function DXs takes integer PXs returns nothing
local integer AXs=0
set MU[PXs]=AXs
set wI[PXs]=0
set uI[PXs]=0
set rI[PXs]=0.0
set sI[PXs]=0
set tI[PXs]=0
set iI[PXs]=0
set SI[PXs]=0
set cI[PXs]=0
endfunction
function VXs takes integer XXs,integer CXs returns nothing
call DXs(XXs)
set NU[XXs]=CXs
endfunction
function LXs takes integer HXs,string JXs returns integer
local integer KXs
set w3[MM]=JXs
set MM=MM+1
set KXs=HjS("when calling alloc_SingleItemData in LegacyItemData, line 44")
call VXs(KXs,HXs)
set MM=MM-1
return KXs
endfunction
function MTo takes integer CTo,integer VTo,integer BTo,string NTo returns nothing
if VTo<0 or VTo>=6 then
call Mau("Index out of Bounds",NTo)
elseif VTo<=2 then
if VTo<=1 then
if VTo<=0 then
set M0w[CTo]=BTo
else
set www[CTo]=BTo
endif
else
set uww[CTo]=BTo
endif
elseif VTo<=4 then
if VTo<=3 then
set rww[CTo]=BTo
else
set sww[CTo]=BTo
endif
else
set tww[CTo]=BTo
endif
endfunction
function NYo takes integer XYo,integer CYo,integer VYo,string BYo returns nothing
if CYo<0 or CYo>=2 then
call Mau("Index out of Bounds",BYo)
elseif CYo<=0 then
set pww[XYo]=VYo
else
set eww[XYo]=VYo
endif
endfunction
function OYo takes integer iYo,integer SYo,integer cYo,string oYo returns nothing
if SYo<0 or SYo>=2 then
call Mau("Index out of Bounds",oYo)
elseif SYo<=0 then
set iww[iYo]=cYo
else
set Sww[iYo]=cYo
endif
endfunction
function fYo takes integer qYo,integer aYo,integer nYo,string dYo returns nothing
if aYo<0 or aYo>=2 then
call Mau("Index out of Bounds",dYo)
elseif aYo<=0 then
set cww[qYo]=nYo
else
set oww[qYo]=nYo
endif
endfunction
function fZu takes real dZu returns nothing
call qZu(R2S(dZu))
endfunction
function xYo takes integer hYo,integer FYo,real kYo,string jYo returns nothing
if FYo<0 or FYo>=2 then
call Mau("Index out of Bounds",jYo)
elseif FYo<=0 then
set Oww[hYo]=kYo
else
set lww[hYo]=kYo
endif
endfunction
function FMs takes integer VNs,integer BNs,string NNs returns nothing
local integer MNs
local integer wMs
local integer uMs
local integer rMs
local integer sMs
local integer tMs
local integer iMs
local integer SMs
local integer cMs
local integer oMs
local integer OMs
local integer lMs
local integer bMs
local real yMs
local integer pMs
local integer eMs
local integer qMs
local integer aMs
local real nMs
local integer dMs
local integer fMs
local integer RMs
local integer TMs
local integer YMs
local integer GMs
local integer gMs
local integer hMs
set w3[MM]=NNs
set MM=MM+1
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 280")
set OMs=inw
set mI[VNs]=OMs
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 281")
set QI[VNs]=inw
if Vhu(mI[VNs],7)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 283")
set EI[VNs]=snw
endif
if Vhu(mI[VNs],8)then
call Rgo(0,BNs,"when calling readByte in LegacyUnitData, line 285")
set ZI[VNs]=inw
endif
if Vhu(mI[VNs],9)then
call Rgo(0,BNs,"when calling readByte in LegacyUnitData, line 287")
set UI[VNs]=inw
call Rgo(0,BNs,"when calling readByte in LegacyUnitData, line 288")
set II[VNs]=inw
call Rgo(0,BNs,"when calling readByte in LegacyUnitData, line 289")
set PI[VNs]=inw
call Rgo(0,BNs,"when calling readByte in LegacyUnitData, line 290")
set AI[VNs]=inw
endif
if Vhu(mI[VNs],10)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 292")
set DI[VNs]=snw
endif
if Vhu(mI[VNs],11)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 294")
set HI[VNs]=snw
endif
if Vhu(mI[VNs],12)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 296")
set JI[VNs]=snw
endif
if Vhu(mI[VNs],13)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 298")
set KI[VNs]=snw
endif
if Vhu(mI[VNs],14)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 300")
set LI[VNs]=snw
endif
if Vhu(mI[VNs],15)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 302")
set XI[VNs]=snw
endif
if Vhu(mI[VNs],3)then
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 304")
set NI[VNs]=inw
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 305")
set CI[VNs]=inw
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 306")
set VI[VNs]=inw
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 307")
set BI[VNs]=inw
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 308")
set MI[VNs]=inw
endif
call qZu("graphics&hero oK")
if Vhu(mI[VNs],16)then
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 311")
set WI[VNs]=inw
set MNs=0
set wMs=WI[VNs]-1
loop
exitwhen MNs>wMs
call ogo(1,BNs,"when calling readBoolean in LegacyUnitData, line 313")
if tnw then
set uMs=LXs(vI[VNs],"when calling new_SingleItemData in LegacyUnitData, line 314")
call DIc(uMs,BNs,"when calling deserialize in LegacyUnitData, line 314")
call MTo(VNs,MNs,uMs,"when writing array LegacySingleUnitData_items in LegacyUnitData, line 314")
endif
set MNs=MNs+1
endloop
endif
call qZu("inventory")
if Vhu(mI[VNs],17)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 317")
set wP[VNs]=snw
call fZu(wP[VNs])
endif
call qZu("armor")
if Vhu(mI[VNs],18)then
set lMs=GFu(BNs,"when calling readAttackParameters in LegacyUnitData, line 321")
set bMs=g1
set yMs=h1
set pMs=F1
set eMs=k1
call OYo(VNs,0,lMs,"when writing array LegacySingleUnitData_weapons_flags_val in LegacyUnitData, line 321")
call fYo(VNs,0,bMs,"when writing array LegacySingleUnitData_weapons_baseDamage in LegacyUnitData, line 321")
call xYo(VNs,0,yMs,"when writing array LegacySingleUnitData_weapons_cooldown in LegacyUnitData, line 321")
call AYo(VNs,0,pMs,"when writing array LegacySingleUnitData_weapons_diceSides in LegacyUnitData, line 321")
call NYo(VNs,0,eMs,"when writing array LegacySingleUnitData_weapons_diceNumber in LegacyUnitData, line 321")
call nZu(gYo(VNs,0,"when reading array LegacySingleUnitData_weapons_baseDamage in  in LegacyUnitData, line 322"))
call fZu(EYo(VNs,0,"when reading array LegacySingleUnitData_weapons_cooldown in  in LegacyUnitData, line 323"))
call nZu(LYo(VNs,0,"when reading array LegacySingleUnitData_weapons_diceSides in  in LegacyUnitData, line 324"))
call nZu(sGo(VNs,0,"when reading array LegacySingleUnitData_weapons_diceNumber in  in LegacyUnitData, line 325"))
endif
call qZu("atk1")
if Vhu(mI[VNs],19)then
set qMs=GFu(BNs,"when calling readAttackParameters in LegacyUnitData, line 328")
set aMs=g1
set nMs=h1
set dMs=F1
set fMs=k1
call OYo(VNs,1,qMs,"when writing array LegacySingleUnitData_weapons_flags_val in LegacyUnitData, line 328")
call fYo(VNs,1,aMs,"when writing array LegacySingleUnitData_weapons_baseDamage in LegacyUnitData, line 328")
call xYo(VNs,1,nMs,"when writing array LegacySingleUnitData_weapons_cooldown in LegacyUnitData, line 328")
call AYo(VNs,1,dMs,"when writing array LegacySingleUnitData_weapons_diceSides in LegacyUnitData, line 328")
call NYo(VNs,1,fMs,"when writing array LegacySingleUnitData_weapons_diceNumber in LegacyUnitData, line 328")
call nZu(gYo(VNs,1,"when reading array LegacySingleUnitData_weapons_baseDamage in  in LegacyUnitData, line 329"))
call fZu(EYo(VNs,1,"when reading array LegacySingleUnitData_weapons_cooldown in  in LegacyUnitData, line 330"))
call nZu(LYo(VNs,1,"when reading array LegacySingleUnitData_weapons_diceSides in  in LegacyUnitData, line 331"))
call nZu(sGo(VNs,1,"when reading array LegacySingleUnitData_weapons_diceNumber in  in LegacyUnitData, line 332"))
endif
call qZu("at2k")
if Vhu(mI[VNs],20)then
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 335")
set uP[VNs]=inw
call nZu(uP[VNs])
endif
if Vhu(mI[VNs],21)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 338")
set rP[VNs]=snw
endif
if Vhu(mI[VNs],22)then
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 340")
set sP[VNs]=inw
endif
if Vhu(mI[VNs],23)then
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 342")
set tP[VNs]=snw
endif
call qZu("stats")
if Vhu(mI[VNs],24)then
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 345")
set iP[VNs]=inw
endif
call qZu("name")
if Vhu(mI[VNs],25)then
call qZu("starting removed")
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 349")
set rMs=inw
call nZu(rMs)
set sMs=0
set tMs=rMs-1
loop
exitwhen sMs>tMs
set TMs=SP[VNs]
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 352")
call Nno(TMs,inw,"when calling add in LegacyUnitData, line 352")
set sMs=sMs+1
endloop
endif
if Vhu(mI[VNs],26)then
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 354")
set iMs=inw
call qZu("starting added")
call nZu(iMs)
set SMs=0
set cMs=iMs-1
loop
exitwhen SMs>cMs
set YMs=cP[VNs]
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 358")
call Nno(YMs,inw,"when calling add in LegacyUnitData, line 358")
call Rgo(0,BNs,"when calling readByte in LegacyUnitData, line 359")
set RMs=inw
set oMs=RMs
call Nno(cP[VNs],oMs,"when calling add in LegacyUnitData, line 360")
if rFu(oMs,4)then
set GMs=cP[VNs]
call Fgo(0,BNs,"when calling readShort in LegacyUnitData, line 362")
call Nno(GMs,inw,"when calling add in LegacyUnitData, line 362")
endif
if rFu(oMs,5)then
set gMs=cP[VNs]
call ego(0,BNs,"when calling readInt in LegacyUnitData, line 364")
call Nno(gMs,inw,"when calling add in LegacyUnitData, line 364")
endif
if rFu(oMs,6)then
set hMs=oP[VNs]
call rgo(1,BNs,"when calling readReal in LegacyUnitData, line 366")
call Nno(hMs,evr(snw),"when calling add in LegacyUnitData, line 366")
endif
set SMs=SMs+1
endloop
endif
call qZu("abils")
set MM=MM-1
endfunction
function CMs takes integer JMs,integer KMs,string LMs returns nothing
local real XMs
set w3[MM]=LMs
set MM=MM+1
call rgo(1,KMs,"when calling readReal in LegacyUnitData, line 381")
set OP[JMs]=snw
call rgo(1,KMs,"when calling readReal in LegacyUnitData, line 382")
set lP[JMs]=snw
call rgo(1,KMs,"when calling readReal in LegacyUnitData, line 383")
set XMs=wwu(snw)
set bP[JMs]=XMs
call FMs(JMs,KMs,"when calling deserialize in LegacyUnitData, line 385")
set MM=MM-1
endfunction
function qAc takes integer yAc,integer pAc,string eAc returns nothing
set w3[MM]=eAc
set MM=MM+1
if yF[yAc]==0 then
if yAc==0 then
call Mau("Nullpointer exception when calling LegacySingleUnitDataPositioned.deserialize","when calling error in LegacyUnitData, line 380")
else
call Mau("Called LegacySingleUnitDataPositioned.deserialize on invalid object.","when calling error in LegacyUnitData, line 380")
endif
endif
call CMs(yAc,pAc,"when calling deserialize in LegacyUnitData, line 380")
set MM=MM-1
endfunction
function YNs takes integer dNs,string fNs returns nothing
local integer RNs
local integer TNs
set w3[MM]=fNs
set MM=MM+1
set TNs=hI[jI[dNs]]
set RNs=e3s(gI[jI[dNs]],"when calling new_LegacySingleUnitDataPositioned in LegacyUnitData, line 405")
call qAc(RNs,xI[dNs],"when calling deserialize in LegacyUnitData, line 405")
call Nno(TNs,RNs,"when calling add in LegacyUnitData, line 405")
set MM=MM-1
endfunction
function Xws takes integer Kws,string Lws returns integer
set w3[MM]=Lws
set MM=MM+1
if(Ba and Kws<0)or Kws>255 then
call Mau(tgu(Kws)+" cannot be converted to utf-8 code unit. Valid values are between 0 and 255","when calling error in Utf8CodeUnit, line 49")
endif
set MM=MM-1
set U9=Kws
return U9
endfunction
function Z1i takes integer v1i,string m1i returns nothing
local integer Q1i
local integer W1i
local string E1i
set w3[MM]=m1i
set MM=MM+1
set Q1i=0
set W1i=TC[v1i]-1
loop
exitwhen Q1i>W1i
set E1i=NM[YC[v1i]]
call Rgo(0,GC[v1i],"when calling readByte in StringTable, line 75")
set NM[YC[v1i]]=E1i+Dws(Xws(inw,"when calling toUtf8CodeUnit in StringTable, line 75"))
set Q1i=Q1i+1
endloop
set MM=MM-1
endfunction
function ORu takes gamecache SRu,string cRu,string oRu returns nothing
call SyncStoredBoolean(SRu,cRu,oRu)
endfunction
function EWs takes integer QWs,string WWs returns nothing
call ORu(xZ[IZ[QWs]],vZ[IZ[QWs]],WWs)
endfunction
function jWs takes integer FWs,string kWs returns nothing
call uRu(xZ[ZZ[FWs]],vZ[ZZ[FWs]],kWs)
endfunction
function iRu takes gamecache rRu,string sRu,string tRu returns nothing
call SyncStoredReal(rRu,sRu,tRu)
endfunction
function mWs takes integer xWs,string vWs returns nothing
call iRu(xZ[UZ[xWs]],vZ[UZ[xWs]],vWs)
endfunction
function Jvc takes integer Avc,string Dvc,string Hvc returns nothing
set w3[MM]=Hvc
set MM=MM+1
if lh[Avc]==0 then
if Avc==0 then
call Mau("Nullpointer exception when calling SynchronizerFunction.sync","when calling error in GamecacheBuffer, line 9")
else
call Mau("Called SynchronizerFunction.sync on invalid object.","when calling error in GamecacheBuffer, line 9")
endif
endif
if lh[Avc]<=1652 then
if lh[Avc]<=1651 then
call jWs(Avc,Dvc)
else
call mWs(Avc,Dvc)
endif
else
call EWs(Avc,Dvc)
endif
set MM=MM-1
endfunction
function AWs takes integer IWs,string PWs returns nothing
set w3[MM]=PWs
set MM=MM+1
call Jvc(AZ[IWs],RRu(EZ[DZ[IWs]],"when calling get in GamecacheBuffer, line 121"),"when calling sync in GamecacheBuffer, line 121")
set EZ[DZ[IWs]]=EZ[DZ[IWs]]+1
set MM=MM-1
endfunction
function Zbt takes integer vbt returns real
local real Wbt=HH[vbt]
local real Ebt=JH[vbt]
local real mbt=Wbt
local real Qbt=Ebt
set HH[vbt]=HH[vbt]+128.
if HH[vbt]>AH[vbt]then
set HH[vbt]=IH[vbt]
set JH[vbt]=JH[vbt]+128.
endif
call qZu("("+xUu(HH[vbt])+", "+xUu(JH[vbt])+")")
set c0w=mbt
set o0w=Qbt
return c0w
endfunction
function ONc takes integer sNc,string tNc returns real
local real iNc
local real SNc
local real cNc
local real oNc
set w3[MM]=tNc
set MM=MM+1
if Vk[sNc]==0 then
if sNc==0 then
call Mau("Nullpointer exception when calling RectCellIterator.next","when calling error in RectCellIterator, line 20")
else
call Mau("Called RectCellIterator.next on invalid object.","when calling error in RectCellIterator, line 20")
endif
endif
set cNc=Zbt(sNc)
set oNc=o0w
set iNc=cNc
set SNc=oNc
set MM=MM-1
set P0w=iNc
set A0w=SNc
return P0w
endfunction
function D8S takes integer m8S,string Q8S returns nothing
local real W8S
local real E8S
local integer Z8S
local integer U8S
local real I8S
local real P8S
local integer A8S
set w3[MM]=Q8S
set MM=MM+1
set I8S=ONc(KC[m8S],"when calling next in TerrainData, line 59")
set P8S=A0w
set W8S=I8S
set E8S=P8S
set U8S=DC[LC[m8S]]
set A8S=IBc(EC[LC[m8S]],GetTerrainType(W8S,E8S),"when calling addRawcode in TerrainData, line 60")
set Z8S=A8S
call Nno(U8S,Z8S,"when calling add in TerrainData, line 60")
if XC[m8S]then
call Nno(HC[LC[m8S]],GetTerrainVariance(W8S,E8S),"when calling add in TerrainData, line 62")
endif
set MM=MM-1
endfunction
function JUs takes integer AUs,string DUs returns string
local string HUs
set w3[MM]=DUs
set MM=MM+1
set HUs=jSo(iU[AUs],oU[AUs],"when calling loadString in HashData, line 191")
set oU[AUs]=oU[AUs]+1
set MM=MM-1
return HUs
endfunction
function sWc takes integer wWc,string uWc returns string
local string rWc
set w3[MM]=uWc
set MM=MM+1
if FY[wWc]==0 then
if wWc==0 then
call Mau("Nullpointer exception when calling HashReader.readStringUnchecked","when calling error in HashData, line 190")
else
call Mau("Called HashReader.readStringUnchecked on invalid object.","when calling error in HashData, line 190")
endif
endif
set rWc=JUs(wWc,"when calling readStringUnchecked in HashData, line 190")
set MM=MM-1
return rWc
endfunction
function VZs takes integer LZs,string XZs returns string
local string CZs
set w3[MM]=XZs
set MM=MM+1
call vQc(LZs,2,"when calling validateType in HashData, line 186")
set CZs=sWc(LZs,"when calling readStringUnchecked in HashData, line 187")
set MM=MM-1
return CZs
endfunction
function MQc takes integer VQc,string BQc returns string
local string NQc
set w3[MM]=BQc
set MM=MM+1
if FY[VQc]==0 then
if VQc==0 then
call Mau("Nullpointer exception when calling HashReader.readString","when calling error in HashData, line 185")
else
call Mau("Called HashReader.readString on invalid object.","when calling error in HashData, line 185")
endif
endif
set NQc=VZs(VQc,"when calling readString in HashData, line 185")
set MM=MM-1
return NQc
endfunction
function tMi takes integer uMi,string rMi returns string
local string sMi
set w3[MM]=rMi
set MM=MM+1
set sMi=MQc(uC[uMi],"when calling readString in StringEncoder, line 120")
set MM=MM-1
return sMi
endfunction
function Gro takes integer Rro,string Tro returns string
local string Yro
set w3[MM]=Tro
set MM=MM+1
if ev[Rro]==0 then
if Rro==0 then
call Mau("Nullpointer exception when calling StringEncoder.popString","when calling error in StringEncoder, line 119")
else
call Mau("Called StringEncoder.popString on invalid object.","when calling error in StringEncoder, line 119")
endif
endif
set Yro=tMi(Rro,"when calling popString in StringEncoder, line 119")
set MM=MM-1
return Yro
endfunction
function Dst takes integer Pst,string Ast returns nothing
set w3[MM]=Ast
set MM=MM+1
call Smc(BA[PD[Pst]],Gro(NA[PD[Pst]],"when calling popString in Network, line 461"),"when calling writeString in Network, line 461")
set MM=MM-1
endfunction
function vBi takes integer kBi,string jBi returns boolean
local boolean xBi
set w3[MM]=jBi
set MM=MM+1
set xBi=RDc(JX[kBi],"when calling size in StringBuffer, line 189")>0
set MM=MM-1
return xBi
endfunction
function Juo takes integer Auo,string Duo returns boolean
local boolean Huo
set w3[MM]=Duo
set MM=MM+1
if qG[Auo]==0 then
if Auo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.hasChunk","when calling error in StringBuffer, line 188")
else
call Mau("Called AbstractStringBuffer.hasChunk on invalid object.","when calling error in StringBuffer, line 188")
endif
endif
set Huo=vBi(Auo,"when calling hasChunk in StringBuffer, line 188")
set MM=MM-1
return Huo
endfunction
function ZBi takes integer mBi,string QBi returns string
local integer WBi
local string EBi
set w3[MM]=QBi
set MM=MM+1
if not Juo(mBi,"when calling hasChunk in StringBuffer, line 192")then
call Mau("OrderedStringBuffer: trying to pop non-existent chunk","when calling error in StringBuffer, line 193")
endif
set WBi=oDc(JX[mBi],"when calling dequeue in StringBuffer, line 194")
set EBi=CX[WBi]
call Nuo(WBi,"when calling dispatch_ChunkElement_destroyChunkElement in StringBuffer, line 196")
set MM=MM-1
return EBi
endfunction
function Cuo takes integer Kuo,string Luo returns string
local string Xuo
set w3[MM]=Luo
set MM=MM+1
if qG[Kuo]==0 then
if Kuo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.popChunk","when calling error in StringBuffer, line 191")
else
call Mau("Called AbstractStringBuffer.popChunk on invalid object.","when calling error in StringBuffer, line 191")
endif
endif
set Xuo=ZBi(Kuo,"when calling popChunk in StringBuffer, line 191")
set MM=MM-1
return Xuo
endfunction
function NEs takes integer BEs returns integer
return NZ[BEs]+1
endfunction
function Bmc takes integer Xmc,string Cmc returns integer
local integer Vmc
set w3[MM]=Cmc
set MM=MM+1
if qG[Xmc]==0 then
if Xmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.getStringCount","when calling error in HashBuffer, line 134")
else
call Mau("Called HashBuffer.getStringCount on invalid object.","when calling error in HashBuffer, line 134")
endif
endif
set Vmc=NEs(Xmc)
set MM=MM-1
return Vmc
endfunction
function e7t takes integer b7t,string y7t,string p7t returns nothing
set w3[MM]=p7t
set MM=MM+1
if(not PP[b7t])and Bmc(IP[b7t],"when calling getStringCount in MultifileIO, line 121")==Ra then
call Mau("FileWriter: exceeded max packet count","when calling error in MultifileIO, line 122")
endif
call Smc(IP[b7t],y7t,"when calling writeString in MultifileIO, line 123")
set MM=MM-1
endfunction
function nJc takes integer eJc,string qJc,string aJc returns nothing
set w3[MM]=aJc
set MM=MM+1
if VF[eJc]==0 then
if eJc==0 then
call Mau("Nullpointer exception when calling FileWriter.writeLine","when calling error in MultifileIO, line 120")
else
call Mau("Called FileWriter.writeLine on invalid object.","when calling error in MultifileIO, line 120")
endif
endif
call e7t(eJc,qJc,"when calling writeLine in MultifileIO, line 120")
set MM=MM-1
endfunction
function Ees takes integer Qes,string Wes returns nothing
set w3[MM]=Wes
set MM=MM+1
call nJc(JQ[Qes],Cuo(KQ[Qes],"when calling popChunk in BufferAdapters, line 30"),"when calling writeLine in BufferAdapters, line 30")
set MM=MM-1
endfunction
function lQs takes integer cQs,integer oQs,string OQs returns nothing
set w3[MM]=OQs
set MM=MM+1
if Ba and WZ[cQs]!=oQs then
call Mau("GamecacheBuffer: invalid buffer usage - mismatched type","when calling error in GamecacheBuffer, line 48")
endif
set MM=MM-1
endfunction
function Cxc takes integer Kxc,integer Lxc,string Xxc returns nothing
set w3[MM]=Xxc
set MM=MM+1
if Sh[Kxc]==0 then
if Kxc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.checkType","when calling error in GamecacheBuffer, line 46")
else
call Mau("Called GamecacheBuffer.checkType on invalid object.","when calling error in GamecacheBuffer, line 46")
endif
endif
call lQs(Kxc,Lxc,"when calling checkType in GamecacheBuffer, line 46")
set MM=MM-1
endfunction
function pQs takes integer bQs,string yQs returns nothing
set w3[MM]=yQs
set MM=MM+1
if Ba and mZ[bQs]+1>=Re then
call Mau("GamecacheBuffer: trying to write out of available keys bounds","when calling error in GamecacheBuffer, line 52")
endif
set mZ[bQs]=mZ[bQs]+1
set MM=MM-1
endfunction
function Nxc takes integer Vxc,string Bxc returns nothing
set w3[MM]=Bxc
set MM=MM+1
if Sh[Vxc]==0 then
if Vxc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.advanceWriteIndex","when calling error in GamecacheBuffer, line 50")
else
call Mau("Called GamecacheBuffer.advanceWriteIndex on invalid object.","when calling error in GamecacheBuffer, line 50")
endif
endif
call pQs(Vxc,"when calling advanceWriteIndex in GamecacheBuffer, line 50")
set MM=MM-1
endfunction
function afu takes gamecache yfu,string pfu,string efu,real qfu returns nothing
call StoreReal(yfu,pfu,efu,qfu)
endfunction
function gQs takes integer TQs,real YQs,string GQs returns nothing
set w3[MM]=GQs
set MM=MM+1
call Nxc(TQs,"when calling advanceWriteIndex in GamecacheBuffer, line 66")
call Cxc(TQs,1,"when calling checkType in GamecacheBuffer, line 67")
call afu(xZ[TQs],vZ[TQs],RRu(mZ[TQs],"when calling get in GamecacheBuffer, line 68"),YQs)
set MM=MM-1
endfunction
function Ovc takes integer Svc,real cvc,string ovc returns nothing
set w3[MM]=ovc
set MM=MM+1
if Sh[Svc]==0 then
if Svc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.writeReal","when calling error in GamecacheBuffer, line 65")
else
call Mau("Called GamecacheBuffer.writeReal on invalid object.","when calling error in GamecacheBuffer, line 65")
endif
endif
call gQs(Svc,cvc,"when calling writeReal in GamecacheBuffer, line 65")
set MM=MM-1
endfunction
function H5S takes integer A5S,integer D5S returns boolean
return UTu(VR,A5S,D5S)
endfunction
function vio takes integer Fio,integer kio,string jio returns boolean
local boolean xio
set w3[MM]=jio
set MM=MM+1
if Yh[Fio]==0 then
if Fio==0 then
call Mau("Nullpointer exception when calling Table.hasReal","when calling error in Table, line 12")
else
call Mau("Called Table.hasReal on invalid object.","when calling error in Table, line 12")
endif
endif
set xio=H5S(Fio,kio)
set MM=MM-1
return xio
endfunction
function ZEs takes integer QEs,string WEs returns real
local real EEs
set w3[MM]=WEs
set MM=MM+1
call QRc(QEs,"when calling checkRead in HashBuffer, line 96")
set wU[QEs]=wU[QEs]+1
if Ba and(not vio(XZ[QEs],wU[QEs],"when calling hasReal in HashBuffer, line 98"))then
call Mau("HashBuffer: trying to read non-present real at pos#"+tgu(wU[QEs]),"when calling error in HashBuffer, line 99")
endif
set EEs=oSo(XZ[QEs],wU[QEs],"when calling loadReal in HashBuffer, line 100")
set MM=MM-1
return EEs
endfunction
function Ymc takes integer fmc,string Rmc returns real
local real Tmc
set w3[MM]=Rmc
set MM=MM+1
if qG[fmc]==0 then
if fmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.readRealUnsafe","when calling error in HashBuffer, line 95")
else
call Mau("Called HashBuffer.readRealUnsafe on invalid object.","when calling error in HashBuffer, line 95")
endif
endif
set Tmc=ZEs(fmc,"when calling readRealUnsafe in HashBuffer, line 95")
set MM=MM-1
return Tmc
endfunction
function Krt takes integer Hrt,string Jrt returns nothing
set w3[MM]=Jrt
set MM=MM+1
call Ovc(wD[gD[Hrt]],Ymc(BA[gD[Hrt]],"when calling readRealUnsafe in Network, line 349"),"when calling writeReal in Network, line 349")
set yD[gD[Hrt]]=yD[gD[Hrt]]+1
set MM=MM-1
endfunction
function Egr takes string vgr,string mgr returns integer
local integer Qgr
local integer Wgr
set w3[MM]=mgr
set MM=MM+1
if(bFr(vgr)==vgr and OFr(vgr)!=vgr)or vgr=="/" then
set Qgr=DFr("00"+vgr)
else
set Qgr=DFr(vgr)
endif
if Ba and(not PZc(QR,Qgr,"when calling has in StringEncoder, line 27"))then
call Mau("Network: trying to get index from invalid character '"+vgr+"'","when calling error in StringEncoder, line 28")
endif
set Wgr=BZc(QR,Qgr,"when calling get in StringEncoder, line 30")
set MM=MM-1
return Wgr
endfunction
function LMi takes integer JMi,string KMi returns nothing
set w3[MM]=KMi
set MM=MM+1
call XWc(wC[tC[JMi]],Egr(Mhr(iC[JMi],BX[tC[JMi]]),"when calling getIndexFromChar in StringEncoder, line 88"),"when calling writeInt in StringEncoder, line 88")
set BX[tC[JMi]]=BX[tC[JMi]]+1
set MM=MM-1
endfunction
function muS takes integer juS,integer xuS,string vuS returns nothing
set w3[MM]=vuS
set MM=MM+1
call aFc(xuS,WV[juS],"when calling writeByte in UnitData, line 922")
call gFc(xuS,EV[juS],"when calling writeInt in UnitData, line 923")
if not(CDr(WV[juS],0)or CDr(WV[juS],1)or CDr(WV[juS],2)or CDr(WV[juS],3))then
call RFc(xuS,ZV[juS],"when calling writeShort in UnitData, line 926")
endif
if CDr(WV[juS],4)then
if CDr(WV[juS],6)then
call aFc(xuS,UV[juS],"when calling writeByte in UnitData, line 929")
else
call gFc(xuS,UV[juS],"when calling writeInt in UnitData, line 931")
endif
endif
if CDr(WV[juS],5)then
if CDr(WV[juS],6)then
call aFc(xuS,qUu(IV[juS]*2.),"when calling writeByte in UnitData, line 934")
else
call jFc(xuS,IV[juS],"when calling writeReal in UnitData, line 936")
endif
endif
set MM=MM-1
endfunction
function FOo takes integer GOo,integer gOo,string hOo returns nothing
set w3[MM]=hOo
set MM=MM+1
if Hv[GOo]==0 then
if GOo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.serialize","when calling error in UnitData, line 921")
else
call Mau("Called SingleAbilityData.serialize on invalid object.","when calling error in UnitData, line 921")
endif
endif
call muS(GOo,gOo,"when calling serialize in UnitData, line 921")
set MM=MM-1
endfunction
function gmr takes integer Ymr,integer Gmr returns boolean
return mwu(Ymr,Gmr)
endfunction
function FQr takes integer aQr,integer nQr,integer dQr,integer fQr,integer RQr,integer TQr,integer YQr,integer GQr,integer gQr,string hQr returns nothing
set w3[MM]=hQr
set MM=MM+1
call aFc(aQr,nQr,"when calling writeByte in UnitData, line 115")
if dmr(nQr,7)then
call aFc(aQr,dQr,"when calling writeByte in UnitData, line 117")
endif
call gFc(aQr,fQr,"when calling writeInt in UnitData, line 119")
if dmr(nQr,1)then
if dmr(nQr,2)then
if gmr(dQr,0)then
call gFc(aQr,RQr,"when calling writeInt in UnitData, line 124")
else
call RFc(aQr,RQr,"when calling writeShort in UnitData, line 126")
endif
else
call aFc(aQr,RQr,"when calling writeByte in UnitData, line 128")
endif
endif
if dmr(nQr,3)then
if dmr(nQr,4)then
if gmr(dQr,1)then
call gFc(aQr,TQr,"when calling writeInt in UnitData, line 132")
else
call RFc(aQr,TQr,"when calling writeShort in UnitData, line 134")
endif
else
call aFc(aQr,TQr,"when calling writeByte in UnitData, line 136")
endif
endif
if dmr(nQr,5)then
if dmr(nQr,6)then
if gmr(dQr,2)then
call gFc(aQr,YQr,"when calling writeInt in UnitData, line 140")
else
call RFc(aQr,YQr,"when calling writeShort in UnitData, line 142")
endif
else
call aFc(aQr,YQr,"when calling writeByte in UnitData, line 144")
endif
endif
call thr(aQr,gQr,GQr,"when calling writeStringTableIndex in UnitData, line 146")
set MM=MM-1
endfunction
function mAr takes integer gAr,integer hAr,integer FAr,real kAr,integer jAr,integer xAr,string vAr returns nothing
set w3[MM]=vAr
set MM=MM+1
call aFc(gAr,hAr,"when calling writeByte in UnitData, line 807")
if DDr(hAr,0)then
if DDr(hAr,1)then
call gFc(gAr,FAr,"when calling writeInt in UnitData, line 811")
else
call aFc(gAr,FAr,"when calling writeByte in UnitData, line 813")
endif
endif
if DDr(hAr,2)then
if DDr(hAr,3)then
call aFc(gAr,qUu(kAr*100.),"when calling writeByte in UnitData, line 816")
else
call jFc(gAr,kAr,"when calling writeReal in UnitData, line 818")
endif
endif
if DDr(hAr,4)then
if DDr(hAr,5)then
call gFc(gAr,jAr,"when calling writeInt in UnitData, line 821")
else
call aFc(gAr,jAr,"when calling writeByte in UnitData, line 823")
endif
endif
if DDr(hAr,6)then
if DDr(hAr,7)then
call gFc(gAr,xAr,"when calling writeInt in UnitData, line 826")
else
call aFc(gAr,xAr,"when calling writeByte in UnitData, line 828")
endif
endif
set MM=MM-1
endfunction
function GAr takes integer tAr,integer iAr,integer SAr,integer cAr,integer oAr,real OAr,integer lAr,integer bAr,integer yAr,integer pAr,real eAr,integer qAr,integer aAr,integer nAr,integer dAr,integer fAr,integer RAr,integer TAr,string YAr returns nothing
set w3[MM]=YAr
set MM=MM+1
call RFc(tAr,iAr,"when calling writeShort in UnitData, line 668")
if QUr(iAr,0)then
call aFc(tAr,SAr,"when calling writeByte in UnitData, line 671")
endif
if QUr(iAr,4)then
call mAr(tAr,cAr,oAr,OAr,lAr,bAr,"when calling writeAttackParameters in UnitData, line 674")
endif
if QUr(iAr,5)then
call mAr(tAr,yAr,pAr,eAr,qAr,aAr,"when calling writeAttackParameters in UnitData, line 676")
endif
if QUr(iAr,6)then
if QUr(iAr,7)then
call aFc(tAr,nAr,"when calling writeByte in UnitData, line 679")
else
call gFc(tAr,nAr,"when calling writeInt in UnitData, line 681")
endif
endif
if QUr(iAr,8)then
if QUr(iAr,9)then
call RFc(tAr,dAr,"when calling writeShort in UnitData, line 684")
else
call gFc(tAr,dAr,"when calling writeInt in UnitData, line 686")
endif
endif
if QUr(iAr,10)then
if QUr(iAr,11)then
call RFc(tAr,fAr,"when calling writeShort in UnitData, line 689")
else
call gFc(tAr,fAr,"when calling writeInt in UnitData, line 691")
endif
endif
if QUr(iAr,14)then
call aFc(tAr,RAr,"when calling writeByte in UnitData, line 694")
endif
if QUr(iAr,15)then
call aFc(tAr,TAr,"when calling writeByte in UnitData, line 696")
endif
set MM=MM-1
endfunction
function NWr takes integer AWr,integer DWr,real HWr,integer JWr,integer KWr,integer LWr,integer XWr,integer CWr,real VWr,string BWr returns nothing
set w3[MM]=BWr
set MM=MM+1
call aFc(AWr,DWr,"when calling writeByte in UnitData, line 257")
if VQr(DWr,0)then
if VQr(DWr,1)then
call aFc(AWr,qUu(HWr),"when calling writeByte in UnitData, line 261")
elseif VQr(DWr,2)then
call RFc(AWr,qUu(HWr*10.),"when calling writeShort in UnitData, line 263")
else
call jFc(AWr,HWr,"when calling writeReal in UnitData, line 265")
endif
endif
if VQr(DWr,3)then
call aFc(AWr,JWr,"when calling writeByte in UnitData, line 267")
endif
if VQr(DWr,4)then
call aFc(AWr,KWr,"when calling writeByte in UnitData, line 269")
call aFc(AWr,LWr,"when calling writeByte in UnitData, line 270")
call aFc(AWr,XWr,"when calling writeByte in UnitData, line 271")
call aFc(AWr,CWr,"when calling writeByte in UnitData, line 272")
endif
if VQr(DWr,5)then
if VQr(DWr,6)then
call aFc(AWr,qUu(VWr*100.),"when calling writeByte in UnitData, line 275")
elseif VQr(DWr,7)then
call RFc(AWr,qUu(VWr*1000.)+32767,"when calling writeShort in UnitData, line 277")
else
call jFc(AWr,VWr,"when calling writeReal in UnitData, line 279")
endif
endif
set MM=MM-1
endfunction
function bZr takes integer sZr,integer tZr,real iZr,real SZr,real cZr,real oZr,real OZr,string lZr returns nothing
set w3[MM]=lZr
set MM=MM+1
call aFc(sZr,tZr,"when calling writeByte in UnitData, line 383")
if gEr(tZr,0)then
if gEr(tZr,1)then
call RFc(sZr,qUu(iZr*10.),"when calling writeShort in UnitData, line 387")
else
call jFc(sZr,iZr,"when calling writeReal in UnitData, line 389")
endif
endif
if gEr(tZr,2)then
call RFc(sZr,qUu(SZr*10000.),"when calling writeShort in UnitData, line 391")
endif
if gEr(tZr,3)then
if gEr(tZr,4)then
call aFc(sZr,qUu(cZr*100.),"when calling writeByte in UnitData, line 394")
elseif gEr(tZr,5)then
call RFc(sZr,qUu(cZr*1000.),"when calling writeShort in UnitData, line 396")
else
call jFc(sZr,cZr,"when calling writeReal in UnitData, line 398")
endif
endif
if gEr(tZr,6)then
call jFc(sZr,oZr,"when calling writeReal in UnitData, line 400")
endif
if gEr(tZr,7)then
call RFc(sZr,qUu(OZr*10000.),"when calling writeShort in UnitData, line 402")
endif
set MM=MM-1
endfunction
function kLs takes integer gLs,integer hLs,string FLs returns nothing
set w3[MM]=FLs
set MM=MM+1
call aFc(hLs,IU[gLs],"when calling writeByte in ItemData, line 138")
if Ggu(IU[gLs],7)then
call aFc(hLs,PU[gLs],"when calling writeByte in ItemData, line 140")
endif
call gFc(hLs,AU[gLs],"when calling writeInt in ItemData, line 141")
if Ggu(IU[gLs],6)then
if Ggu(IU[gLs],4)then
call gFc(hLs,DU[gLs],"when calling writeInt in ItemData, line 145")
else
call RFc(hLs,DU[gLs],"when calling writeShort in ItemData, line 147")
endif
elseif(not Ggu(IU[gLs],4))and(not Ggu(IU[gLs],5))then
call aFc(hLs,DU[gLs],"when calling writeByte in ItemData, line 149")
endif
if xgu(PU[gLs],0)then
call jFc(hLs,HU[gLs],"when calling writeReal in ItemData, line 152")
endif
if xgu(PU[gLs],1)then
call thr(hLs,UU[gLs],JU[gLs],"when calling writeStringTableIndex in ItemData, line 155")
endif
if xgu(PU[gLs],2)then
call thr(hLs,UU[gLs],KU[gLs],"when calling writeStringTableIndex in ItemData, line 157")
endif
if xgu(PU[gLs],3)then
call thr(hLs,UU[gLs],LU[gLs],"when calling writeStringTableIndex in ItemData, line 159")
endif
if xgu(PU[gLs],4)then
call thr(hLs,UU[gLs],XU[gLs],"when calling writeStringTableIndex in ItemData, line 161")
endif
if xgu(PU[gLs],5)then
call thr(hLs,UU[gLs],CU[gLs],"when calling writeStringTableIndex in ItemData, line 163")
endif
set MM=MM-1
endfunction
function pXs takes integer lXs,integer bXs,string yXs returns nothing
set w3[MM]=yXs
set MM=MM+1
call yEu(bXs,VU[lXs],BU[lXs],"when calling writePointData in ItemData, line 213")
call kLs(lXs,bXs,"when calling serialize in ItemData, line 215")
set MM=MM-1
endfunction
function gIc takes integer TIc,integer YIc,string GIc returns nothing
set w3[MM]=GIc
set MM=MM+1
if Ah[TIc]==0 then
if TIc==0 then
call Mau("Nullpointer exception when calling SingleItemData.serialize","when calling error in ItemData, line 137")
else
call Mau("Called SingleItemData.serialize on invalid object.","when calling error in ItemData, line 137")
endif
endif
if Ah[TIc]<=1569 then
call kLs(TIc,YIc,"when calling serialize in ItemData, line 137")
else
call pXs(TIc,YIc,"when calling serialize in ItemData, line 137")
endif
set MM=MM-1
endfunction
function OiS takes integer LtS,integer XtS,string CtS returns nothing
local integer VtS
local integer BtS
local integer NtS
local integer MtS
local integer wiS
local integer uiS
local integer riS
local integer siS
local integer tiS
local integer iiS
local integer SiS
local integer ciS
local integer oiS
set w3[MM]=CtS
set MM=MM+1
call aFc(XtS,JV[LtS],"when calling writeByte in UnitData, line 1203")
if uHr(JV[LtS],7)then
call aFc(XtS,KV[LtS],"when calling writeByte in UnitData, line 1205")
endif
call gFc(XtS,LV[LtS],"when calling writeInt in UnitData, line 1206")
if uHr(JV[LtS],2)then
call FQr(XtS,XV[LtS],CV[LtS],VV[LtS],BV[LtS],NV[LtS],MV[LtS],wB[LtS],HV[LtS],"when calling writeHeroParameters in UnitData, line 1209")
endif
if uHr(JV[LtS],3)then
call thr(XtS,HV[LtS],uB[LtS],"when calling writeStringTableIndex in UnitData, line 1212")
endif
if uHr(JV[LtS],4)then
call NWr(XtS,rB[LtS],sB[LtS],tB[LtS],iB[LtS],SB[LtS],cB[LtS],oB[LtS],OB[LtS],"when calling writeArtParameters in UnitData, line 1215")
endif
if uHr(JV[LtS],5)then
call bZr(XtS,lB[LtS],bB[LtS],yB[LtS],pB[LtS],eB[LtS],qB[LtS],"when calling writeAnimationParameters in UnitData, line 1217")
endif
if uHr(JV[LtS],6)then
call GAr(XtS,aB[LtS],nB[LtS],dB[LtS],fB[LtS],RB[LtS],TB[LtS],YB[LtS],GB[LtS],gB[LtS],hB[LtS],FB[LtS],kB[LtS],jB[LtS],xB[LtS],vB[LtS],mB[LtS],QB[LtS],"when calling writeStats in UnitData, line 1220")
if QUr(aB[LtS],0)then
set ciS=0
set VtS=ciS
set BtS=0
set NtS=nB[LtS]-1
loop
exitwhen BtS>NtS
if GGo(LtS,BtS,"when reading array SingleUnitData_items in  in UnitData, line 1224")!=0 then
set oiS=Ewu(VtS,BtS)
set VtS=oiS
endif
set BtS=BtS+1
endloop
call aFc(XtS,VtS,"when calling writeByte in UnitData, line 1226")
set MtS=0
set wiS=nB[LtS]-1
loop
exitwhen MtS>wiS
if GGo(LtS,MtS,"when reading array SingleUnitData_items in  in UnitData, line 1228")!=0 then
call gIc(GGo(LtS,MtS,"when reading array SingleUnitData_items in  in UnitData, line 1229"),XtS,"when calling serialize in UnitData, line 1229")
endif
set MtS=MtS+1
endloop
endif
if QUr(aB[LtS],12)then
call aFc(XtS,RDc(WB[LtS],"when calling size in UnitData, line 1231"),"when calling writeByte in UnitData, line 1231")
set uiS=x1s(WB[LtS],"when calling iterator in UnitData, line 1232")
loop
exitwhen not t1s(uiS)
set riS=r1s(uiS)
call gFc(XtS,riS,"when calling writeInt in UnitData, line 1233")
endloop
call c1s(uiS,"when calling close in UnitData, line 1232")
endif
if QUr(aB[LtS],13)then
call aFc(XtS,RDc(EB[LtS],"when calling size in UnitData, line 1235"),"when calling writeByte in UnitData, line 1235")
set siS=x1s(EB[LtS],"when calling iterator in UnitData, line 1236")
loop
exitwhen not t1s(siS)
set tiS=r1s(siS)
call FOo(tiS,XtS,"when calling serialize in UnitData, line 1237")
endloop
call c1s(siS,"when calling close in UnitData, line 1236")
endif
endif
if aHr(KV[LtS],0)then
call aFc(XtS,ZB[LtS],"when calling writeByte in UnitData, line 1240")
if lHr(ZB[LtS],0)then
if not lHr(ZB[LtS],1)then
call gFc(XtS,UB[LtS],"when calling writeInt in UnitData, line 1243")
else
call RFc(XtS,UB[LtS],"when calling writeShort in UnitData, line 1245")
endif
elseif lHr(ZB[LtS],1)then
call aFc(XtS,UB[LtS],"when calling writeByte in UnitData, line 1247")
endif
if lHr(ZB[LtS],2)then
if not lHr(ZB[LtS],3)then
call gFc(XtS,IB[LtS],"when calling writeInt in UnitData, line 1250")
else
call RFc(XtS,IB[LtS],"when calling writeShort in UnitData, line 1252")
endif
elseif lHr(ZB[LtS],3)then
call aFc(XtS,IB[LtS],"when calling writeByte in UnitData, line 1254")
endif
endif
if aHr(KV[LtS],2)then
call yEu(XtS,PB[LtS],AB[LtS],"when calling writePointData in UnitData, line 1257")
endif
if aHr(KV[LtS],3)then
call aFc(XtS,DB[LtS],"when calling writeByte in UnitData, line 1260")
endif
if aHr(KV[LtS],4)then
call aFc(XtS,HB[LtS],"when calling writeByte in UnitData, line 1262")
endif
if aHr(KV[LtS],5)then
call aFc(XtS,RDc(JB[LtS],"when calling size in UnitData, line 1265"),"when calling writeByte in UnitData, line 1265")
set iiS=x1s(JB[LtS],"when calling iterator in UnitData, line 1266")
loop
exitwhen not t1s(iiS)
set SiS=r1s(iiS)
call thr(XtS,HV[LtS],SiS,"when calling writeStringTableIndex in UnitData, line 1267")
endloop
call c1s(iiS,"when calling close in UnitData, line 1266")
endif
set MM=MM-1
endfunction
function rrS takes integer MuS,integer wrS,string urS returns nothing
set w3[MM]=urS
set MM=MM+1
call yEu(wrS,PV[MuS],AV[MuS],"when calling writePointData in UnitData, line 1352")
call RFc(wrS,qUu(DV[MuS]*180.),"when calling writeShort in UnitData, line 1353")
call OiS(MuS,wrS,"when calling serialize in UnitData, line 1355")
set MM=MM-1
endfunction
function MOo takes integer VOo,integer BOo,string NOo returns nothing
set w3[MM]=NOo
set MM=MM+1
if Xv[VOo]==0 then
if VOo==0 then
call Mau("Nullpointer exception when calling SinglePositionedUnitData.serialize","when calling error in UnitData, line 1351")
else
call Mau("Called SinglePositionedUnitData.serialize on invalid object.","when calling error in UnitData, line 1351")
endif
endif
call rrS(VOo,BOo,"when calling serialize in UnitData, line 1351")
set MM=MM-1
endfunction
function gEc takes integer TEc,string YEc returns integer
local integer GEc
set w3[MM]=YEc
set MM=MM+1
if eh[TEc]==0 then
if TEc==0 then
call Mau("Nullpointer exception when calling HLIterator.next","when calling error in HashList, line 138")
else
call Mau("Called HLIterator.next on invalid object.","when calling error in HashList, line 138")
endif
endif
set GEc=EPs(TEc,"when calling next in HashList, line 138")
set MM=MM-1
return GEc
endfunction
function LwS takes integer JwS,string KwS returns nothing
set w3[MM]=KwS
set MM=MM+1
call MOo(gEc(aV[JwS],"when calling next in UnitData, line 1405"),nV[JwS],"when calling serialize in UnitData, line 1405")
set MM=MM-1
endfunction
function Lfu takes gamecache Hfu,string Jfu,string Kfu returns real
return GetStoredReal(Hfu,Jfu,Kfu)
endfunction
function aQs takes integer eQs,string qQs returns nothing
set w3[MM]=qQs
set MM=MM+1
if Ba and QZ[eQs]+1>=Re then
call Mau("GamecacheBuffer: trying to read out of available keys bounds","when calling error in GamecacheBuffer, line 57")
endif
set QZ[eQs]=QZ[eQs]+1
set MM=MM-1
endfunction
function uvc takes integer Mxc,string wvc returns nothing
set w3[MM]=wvc
set MM=MM+1
if Sh[Mxc]==0 then
if Mxc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.advanceReadIndex","when calling error in GamecacheBuffer, line 55")
else
call Mau("Called GamecacheBuffer.advanceReadIndex on invalid object.","when calling error in GamecacheBuffer, line 55")
endif
endif
call aQs(Mxc,"when calling advanceReadIndex in GamecacheBuffer, line 55")
set MM=MM-1
endfunction
function xfu takes gamecache Ffu,string kfu,string jfu returns boolean
return HaveStoredReal(Ffu,kfu,jfu)
endfunction
function UQs takes integer WQs,string EQs returns real
local real ZQs
set w3[MM]=EQs
set MM=MM+1
call uvc(WQs,"when calling advanceReadIndex in GamecacheBuffer, line 83")
call Cxc(WQs,1,"when calling checkType in GamecacheBuffer, line 84")
if not xfu(xZ[WQs],vZ[WQs],RRu(QZ[WQs],"when calling get in GamecacheBuffer, line 85"))then
call Mau("GamecacheBuffer: trying to read non-present real #"+tgu(QZ[WQs]),"when calling error in GamecacheBuffer, line 86")
endif
set ZQs=Lfu(xZ[WQs],vZ[WQs],RRu(QZ[WQs],"when calling get in GamecacheBuffer, line 87"))
set MM=MM-1
return ZQs
endfunction
function Tvc takes integer dvc,string fvc returns real
local real Rvc
set w3[MM]=fvc
set MM=MM+1
if Sh[dvc]==0 then
if dvc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.readReal","when calling error in GamecacheBuffer, line 82")
else
call Mau("Called GamecacheBuffer.readReal on invalid object.","when calling error in GamecacheBuffer, line 82")
endif
endif
set Rvc=UQs(dvc,"when calling readReal in GamecacheBuffer, line 82")
set MM=MM-1
return Rvc
endfunction
function nEs takes integer eEs,real qEs,string aEs returns nothing
set w3[MM]=aEs
set MM=MM+1
call xRc(eEs,"when calling checkWrite in HashBuffer, line 36")
set VZ[eEs]=VZ[eEs]+1
call pSo(XZ[eEs],VZ[eEs],qEs,"when calling saveReal in HashBuffer, line 38")
set MM=MM-1
endfunction
function rmc takes integer Mvc,real wmc,string umc returns nothing
set w3[MM]=umc
set MM=MM+1
if qG[Mvc]==0 then
if Mvc==0 then
call Mau("Nullpointer exception when calling HashBuffer.writeReal","when calling error in HashBuffer, line 35")
else
call Mau("Called HashBuffer.writeReal on invalid object.","when calling error in HashBuffer, line 35")
endif
endif
call nEs(Mvc,wmc,"when calling writeReal in HashBuffer, line 35")
set MM=MM-1
endfunction
function Mrt takes integer Brt,string Nrt returns nothing
set w3[MM]=Nrt
set MM=MM+1
call rmc(BA[FD[Brt]],Tvc(wD[FD[Brt]],"when calling readReal in Network, line 355"),"when calling writeReal in Network, line 355")
set yD[FD[Brt]]=yD[FD[Brt]]+1
set MM=MM-1
endfunction
function xgr takes integer Fgr,string kgr returns string
local string jgr
set w3[MM]=kgr
set MM=MM+1
if Fgr>mR then
call Mau("Network: trying to get invalid character from index '"+tgu(Fgr)+"'","when calling error in StringEncoder, line 17")
endif
set jgr=Mhr(vR,Fgr)
set MM=MM-1
return jgr
endfunction
function NMi takes integer VMi,string BMi returns nothing
set w3[MM]=BMi
set MM=MM+1
set VX[oC[VMi]]=VX[oC[VMi]]+xgr(PQc(MX[oC[VMi]],"when calling readIntUnchecked in StringEncoder, line 97"),"when calling getCharFromIndex in StringEncoder, line 97")
set BX[oC[VMi]]=BX[oC[VMi]]+1
set MM=MM-1
endfunction
function rPs takes integer MIs,string wPs,string uPs returns nothing
set w3[MM]=uPs
set MM=MM+1
call WSo(eU[MIs],nU[MIs],wPs,"when calling saveString in HashData, line 39")
set nU[MIs]=nU[MIs]+1
set MM=MM-1
endfunction
function SEc takes integer sEc,string tEc,string iEc returns nothing
set w3[MM]=iEc
set MM=MM+1
if vY[sEc]==0 then
if sEc==0 then
call Mau("Nullpointer exception when calling HashWriter.writeString","when calling error in HashData, line 38")
else
call Mau("Called HashWriter.writeString on invalid object.","when calling error in HashData, line 38")
endif
endif
call rPs(sEc,tEc,"when calling writeString in HashData, line 38")
set MM=MM-1
endfunction
function N_t takes integer V_t,string B_t returns nothing
set w3[MM]=B_t
set MM=MM+1
call SEc(MP[XA[V_t]],Gro(uA[XA[V_t]],"when calling popString in NetworkData, line 451"),"when calling writeString in NetworkData, line 451")
set MM=MM-1
endfunction
function RQs takes integer nQs,integer dQs,string fQs returns nothing
set w3[MM]=fQs
set MM=MM+1
call Nxc(nQs,"when calling advanceWriteIndex in GamecacheBuffer, line 61")
call Cxc(nQs,0,"when calling checkType in GamecacheBuffer, line 62")
call bfu(xZ[nQs],vZ[nQs],RRu(mZ[nQs],"when calling get in GamecacheBuffer, line 63"),dQs)
set MM=MM-1
endfunction
function ivc takes integer rvc,integer svc,string tvc returns nothing
set w3[MM]=tvc
set MM=MM+1
if Sh[rvc]==0 then
if rvc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.writeInt","when calling error in GamecacheBuffer, line 60")
else
call Mau("Called GamecacheBuffer.writeInt on invalid object.","when calling error in GamecacheBuffer, line 60")
endif
endif
call RQs(rvc,svc,"when calling writeInt in GamecacheBuffer, line 60")
set MM=MM-1
endfunction
function P0t takes integer U0t,string I0t returns nothing
set w3[MM]=I0t
set MM=MM+1
call ivc(rA[kA[U0t]],PQc(wA[kA[U0t]],"when calling readIntUnchecked in NetworkData, line 346"),"when calling writeInt in NetworkData, line 346")
set eA[kA[U0t]]=eA[kA[U0t]]+1
set MM=MM-1
endfunction
function OEs takes integer SEs,integer cEs,string oEs returns nothing
set w3[MM]=oEs
set MM=MM+1
call xRc(SEs,"when calling checkWrite in HashBuffer, line 31")
set CZ[SEs]=CZ[SEs]+1
call sSo(XZ[SEs],CZ[SEs],cEs,"when calling saveInt in HashBuffer, line 33")
set MM=MM-1
endfunction
function Nvc takes integer Cvc,integer Vvc,string Bvc returns nothing
set w3[MM]=Bvc
set MM=MM+1
if qG[Cvc]==0 then
if Cvc==0 then
call Mau("Nullpointer exception when calling HashBuffer.writeInt","when calling error in HashBuffer, line 30")
else
call Mau("Called HashBuffer.writeInt on invalid object.","when calling error in HashBuffer, line 30")
endif
endif
call OEs(Cvc,Vvc,"when calling writeInt in HashBuffer, line 30")
set MM=MM-1
endfunction
function bBi takes integer oBi,string OBi returns string
local string lBi
set w3[MM]=OBi
set MM=MM+1
call nuo(oBi,"when calling checkDataAvailable in StringBuffer, line 126")
set lBi=KX[oBi]
set KX[oBi]=""
call Ruo(oBi,"when calling nextChunk in StringBuffer, line 129")
set MM=MM-1
return lBi
endfunction
function guo takes integer Tuo,string Yuo returns string
local string Guo
set w3[MM]=Yuo
set MM=MM+1
if qG[Tuo]==0 then
if Tuo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.popAll","when calling error in StringBuffer, line 125")
else
call Mau("Called AbstractStringBuffer.popAll on invalid object.","when calling error in StringBuffer, line 125")
endif
endif
set Guo=bBi(Tuo,"when calling popAll in StringBuffer, line 125")
set MM=MM-1
return Guo
endfunction
function nBi takes integer yBi,string pBi,string eBi returns string
local string qBi
local integer aBi
set w3[MM]=eBi
set MM=MM+1
set qBi=""
set aBi=-1
loop
exitwhen not(aBi<0)
if vhr(qBi)>xR then
call lRc(yBi,3,"failed to find terminator character","when calling fail in StringBuffer, line 140")
set MM=MM-1
return null
endif
set aBi=GFr(KX[yBi],pBi)
if aBi<0 then
set qBi=qBi+guo(yBi,"when calling popAll in StringBuffer, line 149")
else
set qBi=qBi+Dhr(KX[yBi],0,aBi)
set KX[yBi]=Vhr(KX[yBi],aBi+1)
endif
endloop
set MM=MM-1
return qBi
endfunction
function xuo takes integer huo,string Fuo,string kuo returns string
local string juo
set w3[MM]=kuo
set MM=MM+1
if qG[huo]==0 then
if huo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.popStringUntil","when calling error in StringBuffer, line 133")
else
call Mau("Called AbstractStringBuffer.popStringUntil on invalid object.","when calling error in StringBuffer, line 133")
endif
endif
set juo=nBi(huo,Fuo,"when calling popStringUntil in StringBuffer, line 133")
set MM=MM-1
return juo
endfunction
function Jit takes integer Ait,string Dit returns integer
local integer Hit
set w3[MM]=Dit
set MM=MM+1
set Hit=Lhr(xuo(Ait,Dq,"when calling popStringUntil in OrderedStringBuffer, line 143"))
set MM=MM-1
return Hit
endfunction
function BXc takes integer XXc,string CXc returns integer
local integer VXc
set w3[MM]=CXc
set MM=MM+1
if qG[XXc]==0 then
if XXc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.readIntInternal","when calling error in OrderedStringBuffer, line 142")
else
call Mau("Called OrderedStringBuffer.readIntInternal on invalid object.","when calling error in OrderedStringBuffer, line 142")
endif
endif
set VXc=Jit(XXc,"when calling readIntInternal in OrderedStringBuffer, line 142")
set MM=MM-1
return VXc
endfunction
function sit takes integer Mtt,string wit returns string
local string uit
local integer rit
set w3[MM]=wit
set MM=MM+1
call QRc(Mtt,"when calling checkRead in OrderedStringBuffer, line 154")
set uit=null
if LXc(Mtt,2,"when calling checkType in OrderedStringBuffer, line 156")then
set rit=BXc(Mtt,"when calling readIntInternal in OrderedStringBuffer, line 157")
if rit<0 or rit>xR then
call lRc(Mtt,3,"tried to read string of length "+tgu(rit)+", but max is "+tgu(xR),"when calling fail in OrderedStringBuffer, line 159")
else
set uit=Euo(Mtt,rit,"when calling popString in OrderedStringBuffer, line 162")
endif
endif
set MM=MM-1
return uit
endfunction
function OCc takes integer SCc,string cCc returns string
local string oCc
set w3[MM]=cCc
set MM=MM+1
if qG[SCc]==0 then
if SCc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.readString","when calling error in OrderedStringBuffer, line 153")
else
call Mau("Called OrderedStringBuffer.readString on invalid object.","when calling error in OrderedStringBuffer, line 153")
endif
endif
set oCc=sit(SCc,"when calling readString in OrderedStringBuffer, line 153")
set MM=MM-1
return oCc
endfunction
function Ntt takes integer Xtt,string Ctt returns real
local real Vtt
local real Btt
set w3[MM]=Ctt
set MM=MM+1
call QRc(Xtt,"when calling checkRead in OrderedStringBuffer, line 150")
if LXc(Xtt,1,"when calling checkType in OrderedStringBuffer, line 151")then
set Vtt=Jhr(xuo(Xtt,Dq,"when calling popStringUntil in OrderedStringBuffer, line 151"))
else
set Vtt=0.
endif
set Btt=Vtt
set MM=MM-1
return Btt
endfunction
function iCc takes integer rCc,string sCc returns real
local real tCc
set w3[MM]=sCc
set MM=MM+1
if qG[rCc]==0 then
if rCc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.readReal","when calling error in OrderedStringBuffer, line 149")
else
call Mau("Called OrderedStringBuffer.readReal on invalid object.","when calling error in OrderedStringBuffer, line 149")
endif
endif
set tCc=Ntt(rCc,"when calling readReal in OrderedStringBuffer, line 149")
set MM=MM-1
return tCc
endfunction
function Cit takes integer Kit,string Lit returns integer
local integer Xit
set w3[MM]=Lit
set MM=MM+1
set Xit=AXc(Kit,"when calling popTypeIdentifier in OrderedStringBuffer, line 170")
set KX[Kit]=Xmu(Xit,"when calling toString in OrderedStringBuffer, line 172")+KX[Kit]
set MM=MM-1
return Xit
endfunction
function nCc takes integer eCc,string qCc returns integer
local integer aCc
set w3[MM]=qCc
set MM=MM+1
if qG[eCc]==0 then
if eCc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.peekType","when calling error in OrderedStringBuffer, line 169")
else
call Mau("Called OrderedStringBuffer.peekType on invalid object.","when calling error in OrderedStringBuffer, line 169")
endif
endif
set aCc=Cit(eCc,"when calling peekType in OrderedStringBuffer, line 169")
set MM=MM-1
return aCc
endfunction
function pCc takes integer lCc,string bCc returns boolean
local boolean yCc
set w3[MM]=bCc
set MM=MM+1
if qG[lCc]==0 then
if lCc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.readBoolean","when calling error in OrderedStringBuffer, line 165")
else
call Mau("Called OrderedStringBuffer.readBoolean on invalid object.","when calling error in OrderedStringBuffer, line 165")
endif
endif
set yCc=Ltt(lCc,"when calling readBoolean in OrderedStringBuffer, line 165")
set MM=MM-1
return yCc
endfunction
function Att takes integer Ztt,string Utt returns integer
local integer Itt
local integer Ptt
set w3[MM]=Utt
set MM=MM+1
call QRc(Ztt,"when calling checkRead in OrderedStringBuffer, line 146")
if LXc(Ztt,0,"when calling checkType in OrderedStringBuffer, line 147")then
set Itt=BXc(Ztt,"when calling readIntInternal in OrderedStringBuffer, line 147")
else
set Itt=0
endif
set Ptt=Itt
set MM=MM-1
return Ptt
endfunction
function uCc takes integer NXc,string MXc returns integer
local integer wCc
set w3[MM]=MXc
set MM=MM+1
if qG[NXc]==0 then
if NXc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.readInt","when calling error in OrderedStringBuffer, line 145")
else
call Mau("Called OrderedStringBuffer.readInt on invalid object.","when calling error in OrderedStringBuffer, line 145")
endif
endif
set wCc=Att(NXc,"when calling readInt in OrderedStringBuffer, line 145")
set MM=MM-1
return wCc
endfunction
function Gsu takes integer dsu,integer fsu,string Rsu returns nothing
local integer Tsu
local integer Ysu
set w3[MM]=Rsu
set MM=MM+1
set Tsu=nCc(dsu,"when calling peekType in BufferAdapters, line 7")
set Ysu=Tsu
if Ysu==0 then
call Nvc(fsu,uCc(dsu,"when calling readInt in BufferAdapters, line 11"),"when calling writeInt in BufferAdapters, line 11")
elseif Ysu==1 then
call rmc(fsu,iCc(dsu,"when calling readReal in BufferAdapters, line 13"),"when calling writeReal in BufferAdapters, line 13")
elseif Ysu==2 then
call Smc(fsu,OCc(dsu,"when calling readString in BufferAdapters, line 15"),"when calling writeString in BufferAdapters, line 15")
elseif Ysu==3 then
call lmc(fsu,pCc(dsu,"when calling readBoolean in BufferAdapters, line 17"),"when calling writeBoolean in BufferAdapters, line 17")
endif
set MM=MM-1
endfunction
function Res takes integer des,string fes returns nothing
set w3[MM]=fes
set MM=MM+1
call Gsu(UQ[des],IQ[des],"when calling transferValueTo in BufferAdapters, line 22")
set MM=MM-1
endfunction
function yMi takes integer OMi,string lMi returns integer
local integer bMi
set w3[MM]=lMi
set MM=MM+1
set bMi=PQc(uC[OMi],"when calling readIntUnchecked in StringEncoder, line 126")
set MM=MM-1
return bMi
endfunction
function mro takes integer jro,string xro returns integer
local integer vro
set w3[MM]=xro
set MM=MM+1
if ev[jro]==0 then
if jro==0 then
call Mau("Nullpointer exception when calling StringEncoder.popInt","when calling error in StringEncoder, line 125")
else
call Mau("Called StringEncoder.popInt on invalid object.","when calling error in StringEncoder, line 125")
endif
endif
set vro=yMi(jro,"when calling popInt in StringEncoder, line 125")
set MM=MM-1
return vro
endfunction
function Rst takes integer dst,string fst returns nothing
set w3[MM]=fst
set MM=MM+1
call ivc(rD[QD[dst]],mro(NA[QD[dst]],"when calling popInt in Network, line 373"),"when calling writeInt in Network, line 373")
set eD[QD[dst]]=eD[QD[dst]]+1
set MM=MM-1
endfunction
function AEs takes integer UEs,string IEs returns boolean
local boolean PEs
set w3[MM]=IEs
set MM=MM+1
call QRc(UEs,"when calling checkRead in HashBuffer, line 110")
set uU[UEs]=uU[UEs]+1
if Ba and(not Zio(XZ[UEs],uU[UEs],"when calling hasBoolean in HashBuffer, line 112"))then
call Mau("HashBuffer: trying to read non-present boolean at pos#"+tgu(uU[UEs]),"when calling error in HashBuffer, line 113")
endif
set PEs=dSo(XZ[UEs],uU[UEs],"when calling loadBoolean in HashBuffer, line 114")
set MM=MM-1
return PEs
endfunction
function Fmc takes integer Gmc,string gmc returns boolean
local boolean hmc
set w3[MM]=gmc
set MM=MM+1
if qG[Gmc]==0 then
if Gmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.readBooleanUnsafe","when calling error in HashBuffer, line 109")
else
call Mau("Called HashBuffer.readBooleanUnsafe on invalid object.","when calling error in HashBuffer, line 109")
endif
endif
set hmc=AEs(Gmc,"when calling readBooleanUnsafe in HashBuffer, line 109")
set MM=MM-1
return hmc
endfunction
function Tfu takes gamecache nfu,string dfu,string ffu,boolean Rfu returns nothing
call StoreBoolean(nfu,dfu,ffu,Rfu)
endfunction
function jQs takes integer hQs,boolean FQs,string kQs returns nothing
set w3[MM]=kQs
set MM=MM+1
call Nxc(hQs,"when calling advanceWriteIndex in GamecacheBuffer, line 71")
call Cxc(hQs,2,"when calling checkType in GamecacheBuffer, line 72")
call Tfu(xZ[hQs],vZ[hQs],RRu(mZ[hQs],"when calling get in GamecacheBuffer, line 73"),FQs)
set MM=MM-1
endfunction
function pvc takes integer lvc,boolean bvc,string yvc returns nothing
set w3[MM]=yvc
set MM=MM+1
if Sh[lvc]==0 then
if lvc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.writeBoolean","when calling error in GamecacheBuffer, line 70")
else
call Mau("Called GamecacheBuffer.writeBoolean on invalid object.","when calling error in GamecacheBuffer, line 70")
endif
endif
call jQs(lvc,bvc,"when calling writeBoolean in GamecacheBuffer, line 70")
set MM=MM-1
endfunction
function Sst takes integer tst,string ist returns nothing
set w3[MM]=ist
set MM=MM+1
call pvc(uD[jD[tst]],Fmc(BA[jD[tst]],"when calling readBooleanUnsafe in Network, line 361"),"when calling writeBoolean in Network, line 361")
set pD[jD[tst]]=pD[jD[tst]]+1
set MM=MM-1
endfunction
function dru takes integer aru,integer nru returns integer
return jy[aru*16+nru]
endfunction
function Tru takes integer fru,integer Rru returns integer
return dru(Fy[fru],Fy[Rru])*16+dru(ky[fru],ky[Rru])
endfunction
function Kru takes integer hru,integer Fru returns integer
local integer Zru=wru(hru)
local integer Uru=q3
local integer Iru=a3
local integer Pru=n3
local integer kru=Zru
local integer jru=Uru
local integer xru=Iru
local integer vru=Pru
local integer Aru=wru(Fru)
local integer Dru=q3
local integer Hru=a3
local integer Jru=n3
local integer mru=Aru
local integer Qru=Dru
local integer Wru=Hru
local integer Eru=Jru
return Uuu(Tru(kru,mru),Tru(jru,Qru),Tru(xru,Wru),Tru(vru,Eru))
endfunction
function Cru takes integer Lru,integer Xru returns integer
return Kru(Lru,Xru)
endfunction
function lys takes integer cys,string oys,string Oys returns nothing
set w3[MM]=Oys
set MM=MM+1
set mQ[cys]=mQ[cys]+1
if vhr(jQ[cys])>=vQ[cys]then
call tDc(kQ[cys],hps(jQ[cys],"when calling new_BigStringElement in BigString, line 108"),"when calling push in BigString, line 108")
set jQ[cys]=oys
else
set jQ[cys]=jQ[cys]+oys
endif
set MM=MM-1
endfunction
function rfc takes integer Mdc,string wfc,string ufc returns nothing
set w3[MM]=ufc
set MM=MM+1
if sG[Mdc]==0 then
if Mdc==0 then
call Mau("Nullpointer exception when calling BigString.appendChar","when calling error in BigString, line 104")
else
call Mau("Called BigString.appendChar on invalid object.","when calling error in BigString, line 104")
endif
endif
call lys(Mdc,wfc,"when calling appendChar in BigString, line 104")
set MM=MM-1
endfunction
function xls takes integer Fls,string kls,string jls returns nothing
set w3[MM]=jls
set MM=MM+1
call rfc(GQ[Fls],kls,"when calling appendChar in Base64, line 103")
set MM=MM-1
endfunction
function pdc takes integer ldc,string bdc,string ydc returns nothing
set w3[MM]=ydc
set MM=MM+1
if CY[ldc]==0 then
if ldc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.append","when calling error in Base64, line 102")
else
call Mau("Called Base64Encoder.append on invalid object.","when calling error in Base64, line 102")
endif
endif
call xls(ldc,bdc,"when calling append in Base64, line 102")
set MM=MM-1
endfunction
function usu takes integer Mru,integer wsu returns integer
return qru(Mru,wsu)
endfunction
function Pls takes integer vls,integer mls,integer Qls,string Wls returns nothing
local integer Els
local integer Zls
local integer Uls
local integer Ils
set w3[MM]=Wls
set MM=MM+1
set Els=mls
set Zls=0
set Uls=Qls
loop
exitwhen Zls>Uls
set Ils=usu(Cru(Els,16515072),18)
call pdc(vls,ay[Ils],"when calling append in Base64, line 110")
set Els=Nru(Els,6)
set Zls=Zls+1
endloop
set MM=MM-1
endfunction
function ddc takes integer edc,integer qdc,integer adc,string ndc returns nothing
set w3[MM]=ndc
set MM=MM+1
if CY[edc]==0 then
if edc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.encodeSingle","when calling error in Base64, line 105")
else
call Mau("Called Base64Encoder.encodeSingle on invalid object.","when calling error in Base64, line 105")
endif
endif
call Pls(edc,qdc,adc,"when calling encodeSingle in Base64, line 105")
set MM=MM-1
endfunction
function Xls takes integer Als,string Dls returns nothing
local integer Hls
local integer Jls
local integer Kls
local integer Lls
set w3[MM]=Dls
set MM=MM+1
set Hls=XYc(gQ[Als],"when calling readByte in Base64, line 114")
set Jls=XYc(gQ[Als],"when calling readByte in Base64, line 115")
set Kls=XYc(gQ[Als],"when calling readByte in Base64, line 116")
set Lls=Nru(Hls,16)+Nru(Jls,8)+Kls
call ddc(Als,Lls,3,"when calling encodeSingle in Base64, line 118")
set MM=MM-1
endfunction
function Tdc takes integer fdc,string Rdc returns nothing
set w3[MM]=Rdc
set MM=MM+1
if CY[fdc]==0 then
if fdc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.encode3","when calling error in Base64, line 113")
else
call Mau("Called Base64Encoder.encode3 on invalid object.","when calling error in Base64, line 113")
endif
endif
call Xls(fdc,"when calling encode3 in Base64, line 113")
set MM=MM-1
endfunction
function Sys takes integer tys,string iys returns nothing
set w3[MM]=iys
set MM=MM+1
call Tdc(FQ[tys],"when calling encode3 in Base64, line 150")
set ey=ey+1
set MM=MM-1
endfunction
function Moc takes string Boc returns integer
local integer Noc
set w3[MM]=Boc
set MM=MM+1
if ov==0 then
if Ov<32768 then
set Ov=Ov+1
set Noc=Ov
set lv[Noc]=701
else
call Mau("Out of memory: Could not create ChunkElement.","when calling error in StringBuffer, line 7")
set Noc=0
endif
else
set ov=ov-1
set Noc=cv[ov]
set lv[Noc]=701
endif
set MM=MM-1
return Noc
endfunction
function NBi takes integer BBi returns nothing
set CX[BBi]=""
endfunction
function iNi takes integer sNi,string tNi returns nothing
call NBi(sNi)
set CX[sNi]=tNi
endfunction
function rNi takes string MBi,string wNi returns integer
local integer uNi
set w3[MM]=wNi
set MM=MM+1
set uNi=Moc("when calling alloc_ChunkElement in StringBuffer, line 10")
call iNi(uNi,MBi)
set MM=MM-1
return uNi
endfunction
function UVi takes integer EVi,string ZVi returns nothing
set w3[MM]=ZVi
set MM=MM+1
call tDc(JX[EVi],rNi(LX[EVi],"when calling new_ChunkElement in StringBuffer, line 80"),"when calling push in StringBuffer, line 80")
set LX[EVi]=""
set MM=MM-1
endfunction
function ruo takes integer wuo,string uuo returns nothing
set w3[MM]=uuo
set MM=MM+1
if qG[wuo]==0 then
if wuo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.flushBuffer","when calling error in StringBuffer, line 79")
else
call Mau("Called AbstractStringBuffer.flushBuffer on invalid object.","when calling error in StringBuffer, line 79")
endif
endif
call UVi(wuo,"when calling flushBuffer in StringBuffer, line 79")
set MM=MM-1
endfunction
function KVi takes integer IVi,string PVi,string AVi returns nothing
local string DVi
local integer HVi
local integer JVi
set w3[MM]=AVi
set MM=MM+1
set DVi=PVi
if vhr(PVi)>xR then
call Mau("AbstractStringBuffer: trying to push a string above MAX_BUFFER_SIZE","when calling error in StringBuffer, line 87")
endif
set HVi=vhr(PVi)+vhr(LX[IVi])-XX[IVi]
loop
exitwhen not(HVi>0)
set JVi=vdo(vhr(DVi),XX[IVi]-vhr(LX[IVi]))
set LX[IVi]=LX[IVi]+Dhr(DVi,0,JVi)
set DVi=Vhr(DVi,JVi)
set HVi=HVi-XX[IVi]
call ruo(IVi,"when calling flushBuffer in StringBuffer, line 96")
endloop
set LX[IVi]=LX[IVi]+DVi
set MM=MM-1
endfunction
function Suo takes integer suo,string tuo,string iuo returns nothing
set w3[MM]=iuo
set MM=MM+1
if qG[suo]==0 then
if suo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.pushString","when calling error in StringBuffer, line 84")
else
call Mau("Called AbstractStringBuffer.pushString on invalid object.","when calling error in StringBuffer, line 84")
endif
endif
call KVi(suo,tuo,"when calling pushString in StringBuffer, line 84")
set MM=MM-1
endfunction
function xit takes integer Fit,integer kit,string jit returns nothing
set w3[MM]=jit
set MM=MM+1
call Suo(Fit,Xmu(kit,"when calling toString in OrderedStringBuffer, line 92"),"when calling pushString in OrderedStringBuffer, line 92")
set MM=MM-1
endfunction
function ZXc takes integer QXc,integer WXc,string EXc returns nothing
set w3[MM]=EXc
set MM=MM+1
if qG[QXc]==0 then
if QXc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.pushTypeIdentifier","when calling error in OrderedStringBuffer, line 91")
else
call Mau("Called OrderedStringBuffer.pushTypeIdentifier on invalid object.","when calling error in OrderedStringBuffer, line 91")
endif
endif
call xit(QXc,WXc,"when calling pushTypeIdentifier in OrderedStringBuffer, line 91")
set MM=MM-1
endfunction
function bit takes integer oit,boolean Oit,string lit returns nothing
set w3[MM]=lit
set MM=MM+1
call xRc(oit,"when calling checkWrite in OrderedStringBuffer, line 138")
call ZXc(oit,3,"when calling pushTypeIdentifier in OrderedStringBuffer, line 139")
call Suo(oit,tgu(lsu(Oit)),"when calling pushString in OrderedStringBuffer, line 140")
set MM=MM-1
endfunction
function BRc takes integer XRc,boolean CRc,string VRc returns nothing
set w3[MM]=VRc
set MM=MM+1
if qG[XRc]==0 then
if XRc==0 then
call Mau("Nullpointer exception when calling Buffer.writeBoolean","when calling error in BufferInterface, line 70")
else
call Mau("Called Buffer.writeBoolean on invalid object.","when calling error in BufferInterface, line 70")
endif
endif
if qG[XRc]<=664 then
call bit(XRc,CRc,"when calling writeBoolean in BufferInterface, line 70")
else
call pEs(XRc,CRc,"when calling writeBoolean in BufferInterface, line 70")
endif
set MM=MM-1
endfunction
function hit takes integer Git,string git returns nothing
set w3[MM]=git
set MM=MM+1
call Suo(Git,Dq,"when calling pushString in OrderedStringBuffer, line 89")
set MM=MM-1
endfunction
function mXc takes integer xXc,string vXc returns nothing
set w3[MM]=vXc
set MM=MM+1
if qG[xXc]==0 then
if xXc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.pushTerminator","when calling error in OrderedStringBuffer, line 88")
else
call Mau("Called OrderedStringBuffer.pushTerminator on invalid object.","when calling error in OrderedStringBuffer, line 88")
endif
endif
call hit(xXc,"when calling pushTerminator in OrderedStringBuffer, line 88")
set MM=MM-1
endfunction
function cit takes integer tit,integer iit,string Sit returns nothing
set w3[MM]=Sit
set MM=MM+1
call xRc(tit,"when calling checkWrite in OrderedStringBuffer, line 117")
call ZXc(tit,0,"when calling pushTypeIdentifier in OrderedStringBuffer, line 118")
call Suo(tit,tgu(iit),"when calling pushString in OrderedStringBuffer, line 119")
call mXc(tit,"when calling pushTerminator in OrderedStringBuffer, line 120")
set MM=MM-1
endfunction
function LRc takes integer HRc,integer JRc,string KRc returns nothing
set w3[MM]=KRc
set MM=MM+1
if qG[HRc]==0 then
if HRc==0 then
call Mau("Nullpointer exception when calling Buffer.writeInt","when calling error in BufferInterface, line 68")
else
call Mau("Called Buffer.writeInt on invalid object.","when calling error in BufferInterface, line 68")
endif
endif
if qG[HRc]<=664 then
call cit(HRc,JRc,"when calling writeInt in BufferInterface, line 68")
else
call OEs(HRc,JRc,"when calling writeInt in BufferInterface, line 68")
endif
set MM=MM-1
endfunction
function fit takes integer ait,string nit,string dit returns nothing
set w3[MM]=dit
set MM=MM+1
if vhr(nit)>xR then
call Mau("OrderedStringBuffer: trying to write string above MAX_BUFFER_SIZE","when calling error in OrderedStringBuffer, line 130")
endif
call xRc(ait,"when calling checkWrite in OrderedStringBuffer, line 131")
call ZXc(ait,2,"when calling pushTypeIdentifier in OrderedStringBuffer, line 132")
call Suo(ait,tgu(vhr(nit)),"when calling pushString in OrderedStringBuffer, line 133")
call mXc(ait,"when calling pushTerminator in OrderedStringBuffer, line 134")
call Suo(ait,nit,"when calling pushString in OrderedStringBuffer, line 135")
set MM=MM-1
endfunction
function iTc takes integer rTc,string sTc,string tTc returns nothing
set w3[MM]=tTc
set MM=MM+1
if qG[rTc]==0 then
if rTc==0 then
call Mau("Nullpointer exception when calling Buffer.writeString","when calling error in BufferInterface, line 74")
else
call Mau("Called Buffer.writeString on invalid object.","when calling error in BufferInterface, line 74")
endif
endif
if qG[rTc]<=664 then
call fit(rTc,sTc,"when calling writeString in BufferInterface, line 74")
else
call TEs(rTc,sTc,"when calling writeString in BufferInterface, line 74")
endif
set MM=MM-1
endfunction
function qit takes integer yit,real pit,string eit returns nothing
set w3[MM]=eit
set MM=MM+1
call xRc(yit,"when calling checkWrite in OrderedStringBuffer, line 123")
call ZXc(yit,1,"when calling pushTypeIdentifier in OrderedStringBuffer, line 124")
call Suo(yit,xUu(pit),"when calling pushString in OrderedStringBuffer, line 125")
call mXc(yit,"when calling pushTerminator in OrderedStringBuffer, line 126")
set MM=MM-1
endfunction
function uTc takes integer NRc,real MRc,string wTc returns nothing
set w3[MM]=wTc
set MM=MM+1
if qG[NRc]==0 then
if NRc==0 then
call Mau("Nullpointer exception when calling Buffer.writeReal","when calling error in BufferInterface, line 72")
else
call Mau("Called Buffer.writeReal on invalid object.","when calling error in BufferInterface, line 72")
endif
endif
if qG[NRc]<=664 then
call qit(NRc,MRc,"when calling writeReal in BufferInterface, line 72")
else
call nEs(NRc,MRc,"when calling writeReal in BufferInterface, line 72")
endif
set MM=MM-1
endfunction
function uSt takes integer Vit,integer Bit,string Nit returns nothing
local integer Mit
local integer wSt
set w3[MM]=Nit
set MM=MM+1
set Mit=nCc(Vit,"when calling peekType in OrderedStringBuffer, line 176")
set wSt=Mit
if wSt==0 then
call LRc(Bit,uCc(Vit,"when calling readInt in OrderedStringBuffer, line 180"),"when calling writeInt in OrderedStringBuffer, line 180")
elseif wSt==1 then
call uTc(Bit,iCc(Vit,"when calling readReal in OrderedStringBuffer, line 182"),"when calling writeReal in OrderedStringBuffer, line 182")
elseif wSt==2 then
call iTc(Bit,OCc(Vit,"when calling readString in OrderedStringBuffer, line 184"),"when calling writeString in OrderedStringBuffer, line 184")
elseif wSt==3 then
call BRc(Bit,pCc(Vit,"when calling readBoolean in OrderedStringBuffer, line 186"),"when calling writeBoolean in OrderedStringBuffer, line 186")
endif
set MM=MM-1
endfunction
function TCc takes integer dCc,integer fCc,string RCc returns nothing
set w3[MM]=RCc
set MM=MM+1
if qG[dCc]==0 then
if dCc==0 then
call Mau("Nullpointer exception when calling OrderedStringBuffer.transferValueTo","when calling error in OrderedStringBuffer, line 175")
else
call Mau("Called OrderedStringBuffer.transferValueTo on invalid object.","when calling error in OrderedStringBuffer, line 175")
endif
endif
call uSt(dCc,fCc,"when calling transferValueTo in OrderedStringBuffer, line 175")
set MM=MM-1
endfunction
function TSt takes integer fSt,string RSt returns nothing
set w3[MM]=RSt
set MM=MM+1
call TCc(XD[fSt],CD[fSt],"when calling transferValueTo in OrderedStringBuffer, line 191")
set MM=MM-1
endfunction
function oMi takes integer iMi,integer SMi,string cMi returns nothing
set w3[MM]=cMi
set MM=MM+1
call XWc(NX[iMi],SMi,"when calling writeInt in StringEncoder, line 123")
set MM=MM-1
endfunction
function kro takes integer gro,integer hro,string Fro returns nothing
set w3[MM]=Fro
set MM=MM+1
if ev[gro]==0 then
if gro==0 then
call Mau("Nullpointer exception when calling StringEncoder.pushInt","when calling error in StringEncoder, line 122")
else
call Mau("Called StringEncoder.pushInt on invalid object.","when calling error in StringEncoder, line 122")
endif
endif
call oMi(gro,hro,"when calling pushInt in StringEncoder, line 122")
set MM=MM-1
endfunction
function hfu takes gamecache Yfu,string Gfu,string gfu returns boolean
return HaveStoredInteger(Yfu,Gfu,gfu)
endfunction
function QQs takes integer xQs,string vQs returns integer
local integer mQs
set w3[MM]=vQs
set MM=MM+1
call uvc(xQs,"when calling advanceReadIndex in GamecacheBuffer, line 76")
call Cxc(xQs,0,"when calling checkType in GamecacheBuffer, line 77")
if not hfu(xZ[xQs],vZ[xQs],RRu(QZ[xQs],"when calling get in GamecacheBuffer, line 78"))then
call Mau("GamecacheBuffer: trying to read non-present int #"+tgu(QZ[xQs]),"when calling error in GamecacheBuffer, line 79")
endif
set mQs=Dfu(xZ[xQs],vZ[xQs],RRu(QZ[xQs],"when calling get in GamecacheBuffer, line 80"))
set MM=MM-1
return mQs
endfunction
function nvc takes integer evc,string qvc returns integer
local integer avc
set w3[MM]=qvc
set MM=MM+1
if Sh[evc]==0 then
if evc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.readInt","when calling error in GamecacheBuffer, line 75")
else
call Mau("Called GamecacheBuffer.readInt on invalid object.","when calling error in GamecacheBuffer, line 75")
endif
endif
set avc=QQs(evc,"when calling readInt in GamecacheBuffer, line 75")
set MM=MM-1
return avc
endfunction
function U_t takes integer E_t,string Z_t returns nothing
set w3[MM]=Z_t
set MM=MM+1
call kro(uA[HA[E_t]],nvc(iA[HA[E_t]],"when calling readInt in NetworkData, line 388"),"when calling pushInt in NetworkData, line 388")
set nA[HA[E_t]]=nA[HA[E_t]]+1
set MM=MM-1
endfunction
function Urt takes integer Ert,string Zrt returns nothing
set w3[MM]=Zrt
set MM=MM+1
call Nvc(BA[YD[Ert]],nvc(MA[YD[Ert]],"when calling readInt in Network, line 343"),"when calling writeInt in Network, line 343")
set bD[YD[Ert]]=bD[YD[Ert]]+1
set MM=MM-1
endfunction
function X0t takes integer K0t,string L0t returns nothing
set w3[MM]=L0t
set MM=MM+1
call XWc(MP[xA[K0t]],nvc(rA[xA[K0t]],"when calling readInt in NetworkData, line 352"),"when calling writeInt in NetworkData, line 352")
set eA[xA[K0t]]=eA[xA[K0t]]+1
set MM=MM-1
endfunction
function Bfu takes gamecache Xfu,string Cfu,string Vfu returns boolean
return GetStoredBoolean(Xfu,Cfu,Vfu)
endfunction
function Wfu takes gamecache vfu,string mfu,string Qfu returns boolean
return HaveStoredBoolean(vfu,mfu,Qfu)
endfunction
function DQs takes integer IQs,string PQs returns boolean
local boolean AQs
set w3[MM]=PQs
set MM=MM+1
call uvc(IQs,"when calling advanceReadIndex in GamecacheBuffer, line 90")
call Cxc(IQs,2,"when calling checkType in GamecacheBuffer, line 91")
if not Wfu(xZ[IQs],vZ[IQs],RRu(QZ[IQs],"when calling get in GamecacheBuffer, line 92"))then
call Mau("GamecacheBuffer: trying to read non-present bool #"+tgu(QZ[IQs]),"when calling error in GamecacheBuffer, line 93")
endif
set AQs=Bfu(xZ[IQs],vZ[IQs],RRu(QZ[IQs],"when calling get in GamecacheBuffer, line 95"))
set MM=MM-1
return AQs
endfunction
function hvc takes integer Yvc,string Gvc returns boolean
local boolean gvc
set w3[MM]=Gvc
set MM=MM+1
if Sh[Yvc]==0 then
if Yvc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.readBoolean","when calling error in GamecacheBuffer, line 89")
else
call Mau("Called GamecacheBuffer.readBoolean on invalid object.","when calling error in GamecacheBuffer, line 89")
endif
endif
set gvc=DQs(Yvc,"when calling readBoolean in GamecacheBuffer, line 89")
set MM=MM-1
return gvc
endfunction
function Y_t takes integer R_t,string T_t returns nothing
set w3[MM]=T_t
set MM=MM+1
call rEc(MP[IA[R_t]],hvc(tA[IA[R_t]],"when calling readBoolean in NetworkData, line 376"),"when calling writeBoolean in NetworkData, line 376")
set aA[IA[R_t]]=aA[IA[R_t]]+1
set MM=MM-1
endfunction
function wMi takes integer BNi,string NNi,string MNi returns nothing
set w3[MM]=MNi
set MM=MM+1
call SEc(NX[BNi],NNi,"when calling writeString in StringEncoder, line 117")
set MM=MM-1
endfunction
function fro takes integer aro,string nro,string dro returns nothing
set w3[MM]=dro
set MM=MM+1
if ev[aro]==0 then
if aro==0 then
call Mau("Nullpointer exception when calling StringEncoder.pushString","when calling error in StringEncoder, line 116")
else
call Mau("Called StringEncoder.pushString on invalid object.","when calling error in StringEncoder, line 116")
endif
endif
call wMi(aro,nro,"when calling pushString in StringEncoder, line 116")
set MM=MM-1
endfunction
function Yrt takes integer Rrt,string Trt returns nothing
set w3[MM]=Trt
set MM=MM+1
call fro(NA[dD[Rrt]],emc(BA[dD[Rrt]],"when calling readString in Network, line 283"),"when calling pushString in Network, line 283")
set MM=MM-1
endfunction
function Auu takes integer Iuu returns integer
local integer Puu
if Iuu<0 then
set Puu=-2147483648+Iuu
else
set Puu=Iuu
endif
return Puu
endfunction
function fhr takes string nhr returns integer
local integer dhr
if nhr=="/" then
set G4=47
return G4
elseif"\\"==nhr then
set G4=92
return G4
endif
set dhr=ER[DFr(nhr)/2033480+1002]
if nhr!=WR[dhr]then
set G4=dhr+32
return G4
endif
set G4=dhr
return G4
endfunction
function Ghr takes string Yhr returns integer
set g4=fhr(Yhr)
return g4
endfunction
function Thr takes integer Rhr returns integer
return Rhr
endfunction
function Fys takes integer nys,integer dys,string fys returns string
local integer Rys
local string Tys
local integer Yys
local string Gys
local integer gys
local integer hys
set w3[MM]=fys
set MM=MM+1
if dys>Yy then
call Mau("BigString: trying to read a string larger than BIGSTRING_MAX_CHUNK_LENGTH","when calling error in BigString, line 143")
endif
set Rys=dys
if vhr(xQ[nys])<dys then
set Tys=xQ[nys]
set Rys=Rys-vhr(xQ[nys])
set xQ[nys]=""
else
set Tys=Dhr(xQ[nys],0,dys)
set Rys=0
set xQ[nys]=Vhr(xQ[nys],dys)
endif
loop
exitwhen not(RDc(kQ[nys],"when calling size in BigString, line 161")>0 and Rys>0)
set Yys=oDc(kQ[nys],"when calling dequeue in BigString, line 162")
set Gys=QQ[Yys]
call vfc(Yys,"when calling dispatch_BigStringElement_destroyBigStringElement in BigString, line 164")
if vhr(Gys)>Rys then
set gys=vdo(vhr(Gys),Rys)
set Tys=Tys+Dhr(Gys,0,gys)
set xQ[nys]=Vhr(Gys,gys)
set Rys=0
exitwhen true
else
set Tys=Tys+Gys
set Rys=Rys-vhr(Gys)
endif
endloop
if Rys>0 then
set hys=vdo(Rys,vhr(jQ[nys]))
set Tys=Tys+Dhr(jQ[nys],0,hys)
set jQ[nys]=Vhr(jQ[nys],hys)
endif
set MM=MM-1
return Tys
endfunction
function bfc takes integer cfc,integer ofc,string Ofc returns string
local string lfc
set w3[MM]=Ofc
set MM=MM+1
if sG[cfc]==0 then
if cfc==0 then
call Mau("Nullpointer exception when calling BigString.readSome","when calling error in BigString, line 141")
else
call Mau("Called BigString.readSome on invalid object.","when calling error in BigString, line 141")
endif
endif
set lfc=Fys(cfc,ofc,"when calling readSome in BigString, line 141")
set MM=MM-1
return lfc
endfunction
function EOs takes integer mOs,string QOs returns integer
local integer WOs
set w3[MM]=QOs
set MM=MM+1
set WOs=Thr(Ghr(bfc(fQ[mOs],1,"when calling readSome in Base64, line 211")))
set MM=MM-1
return WOs
endfunction
function Vnc takes integer Lnc,string Xnc returns integer
local integer Cnc
set w3[MM]=Xnc
set MM=MM+1
if EY[Lnc]==0 then
if Lnc==0 then
call Mau("Nullpointer exception when calling Base64Decoder.nextChar","when calling error in Base64, line 210")
else
call Mau("Called Base64Decoder.nextChar on invalid object.","when calling error in Base64, line 210")
endif
endif
set Cnc=EOs(Lnc,"when calling nextChar in Base64, line 210")
set MM=MM-1
return Cnc
endfunction
function qwu takes integer ewu returns integer
return ewu-ewu/16777216*16777216
endfunction
function DOs takes integer ZOs,string UOs returns nothing
local integer IOs
local integer POs
local integer AOs
set w3[MM]=UOs
set MM=MM+1
set IOs=Vnc(ZOs,"when calling nextChar in Base64, line 214")
set POs=0
set AOs=0
if ny[IOs]!=-1 then
set POs=Nru(ny[IOs],18)
endif
set IOs=Vnc(ZOs,"when calling nextChar in Base64, line 221")
if ny[IOs]!=-1 then
set POs=POs+Nru(ny[IOs],12)
set AOs=AOs+1
endif
set IOs=Vnc(ZOs,"when calling nextChar in Base64, line 226")
if ny[IOs]!=-1 then
set POs=POs+Nru(ny[IOs],6)
set AOs=AOs+1
endif
set IOs=Vnc(ZOs,"when calling nextChar in Base64, line 231")
if ny[IOs]!=-1 then
set POs=POs+ny[IOs]
set AOs=AOs+1
endif
loop
exitwhen not(AOs>0)
call WYc(TQ[ZOs],usu(qwu(Auu(POs)),16),"when calling writeByte in Base64, line 237")
set POs=Nru(POs,8)
set AOs=AOs-1
endloop
set MM=MM-1
endfunction
function Mnc takes integer Bnc,string Nnc returns nothing
set w3[MM]=Nnc
set MM=MM+1
if EY[Bnc]==0 then
if Bnc==0 then
call Mau("Nullpointer exception when calling Base64Decoder.next3Bytes","when calling error in Base64, line 213")
else
call Mau("Called Base64Decoder.next3Bytes on invalid object.","when calling error in Base64, line 213")
endif
endif
call DOs(Bnc,"when calling next3Bytes in Base64, line 213")
set MM=MM-1
endfunction
function hls takes integer Gls,string gls returns nothing
set w3[MM]=gls
set MM=MM+1
call Mnc(YQ[Gls],"when calling next3Bytes in Base64, line 256")
set ey=ey+1
set MM=MM-1
endfunction
function ROc takes string dOc returns integer
local integer fOc
set w3[MM]=dOc
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set fOc=HY
set JY[fOc]=1349
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_StringEncoder_StringEncoder.","when calling error in StringEncoder, line 87")
set fOc=0
endif
else
set DY=DY-1
set fOc=AY[DY]
set JY[fOc]=1349
endif
set MM=MM-1
return fOc
endfunction
function nOc takes string qOc returns integer
local integer aOc
set w3[MM]=qOc
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set aOc=IY
set PY[aOc]=1385
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_StringEncoder_StringEncoder.","when calling error in StringEncoder, line 87")
set aOc=0
endif
else
set UY=UY-1
set aOc=ZY[UY]
set PY[aOc]=1385
endif
set MM=MM-1
return aOc
endfunction
function hNi takes integer nNi,string dNi,string fNi returns nothing
local integer RNi
local integer TNi
local integer YNi
local integer GNi
local integer gNi
set w3[MM]=fNi
set MM=MM+1
set RNi=vhr(dNi)
set BX[nNi]=0
call XWc(wC[nNi],RNi,"when calling writeInt in StringEncoder, line 85")
set GNi=qq
set TNi=nOc("when calling alloc_LimitedExecuteCondition_executeWhile_StringEncoder_StringEncoder in StringEncoder, line 87")
set rC[TNi]=nNi
set sC[TNi]=RNi
set gNi=TNi
set YNi=ROc("when calling alloc_LimitedExecuteAction_executeWhile_StringEncoder_StringEncoder in StringEncoder, line 87")
set tC[YNi]=nNi
set iC[YNi]=dNi
call rdu(GNi,gNi,YNi,"when calling executeWhile in StringEncoder, line 87")
set MM=MM-1
endfunction
function iro takes integer rro,string sro,string tro returns nothing
set w3[MM]=tro
set MM=MM+1
if ev[rro]==0 then
if rro==0 then
call Mau("Nullpointer exception when calling StringEncoder.encodeString","when calling error in StringEncoder, line 82")
else
call Mau("Called StringEncoder.encodeString on invalid object.","when calling error in StringEncoder, line 82")
endif
endif
call hNi(rro,sro,"when calling encodeString in StringEncoder, line 82")
set MM=MM-1
endfunction
function i3i takes integer s3i,string t3i returns nothing
set w3[MM]=t3i
set MM=MM+1
call iro(lC[s3i],MQc(MX[lC[s3i]],"when calling readString in StringEncoder, line 105"),"when calling encodeString in StringEncoder, line 105")
set MM=MM-1
endfunction
function FBi takes integer GBi,string gBi,string hBi returns nothing
set w3[MM]=hBi
set MM=MM+1
call tDc(JX[GBi],rNi(gBi,"when calling new_ChunkElement in StringBuffer, line 186"),"when calling push in StringBuffer, line 186")
set MM=MM-1
endfunction
function Puo takes integer Zuo,string Uuo,string Iuo returns nothing
set w3[MM]=Iuo
set MM=MM+1
if qG[Zuo]==0 then
if Zuo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.pushChunk","when calling error in StringBuffer, line 185")
else
call Mau("Called AbstractStringBuffer.pushChunk on invalid object.","when calling error in StringBuffer, line 185")
endif
endif
call FBi(Zuo,Uuo,"when calling pushChunk in StringBuffer, line 185")
set MM=MM-1
endfunction
function N6t takes integer C6t,string V6t returns string
local string B6t
set w3[MM]=V6t
set MM=MM+1
set B6t=emc(IP[C6t],"when calling readString in MultifileIO, line 253")
set MM=MM-1
return B6t
endfunction
function cJc takes integer tJc,string iJc returns string
local string SJc
set w3[MM]=iJc
set MM=MM+1
if VF[tJc]==0 then
if tJc==0 then
call Mau("Nullpointer exception when calling FileReader.readLine","when calling error in MultifileIO, line 252")
else
call Mau("Called FileReader.readLine on invalid object.","when calling error in MultifileIO, line 252")
endif
endif
set SJc=N6t(tJc,"when calling readLine in MultifileIO, line 252")
set MM=MM-1
return SJc
endfunction
function kes takes integer hes,string Fes returns nothing
set w3[MM]=Fes
set MM=MM+1
call Puo(AQ[hes],cJc(DQ[hes],"when calling readLine in BufferAdapters, line 26"),"when calling pushChunk in BufferAdapters, line 26")
set MM=MM-1
endfunction
function kst takes integer hst,string Fst returns nothing
set w3[MM]=Fst
set MM=MM+1
call kro(NA[ED[hst]],nvc(rD[ED[hst]],"when calling readInt in Network, line 379"),"when calling pushInt in Network, line 379")
set eD[ED[hst]]=eD[ED[hst]]+1
set MM=MM-1
endfunction
function m0t takes integer x0t,string v0t returns nothing
set w3[MM]=v0t
set MM=MM+1
call fro(uA[hA[x0t]],MQc(wA[hA[x0t]],"when calling readString in NetworkData, line 299"),"when calling pushString in NetworkData, line 299")
set MM=MM-1
endfunction
function o_t takes integer S_t,string c_t returns nothing
set w3[MM]=c_t
set MM=MM+1
call NWc(MP[WA[S_t]],Tvc(sA[WA[S_t]],"when calling readReal in NetworkData, line 364"),"when calling writeReal in NetworkData, line 364")
set qA[WA[S_t]]=qA[WA[S_t]]+1
set MM=MM-1
endfunction
function pst takes integer bst,string yst returns nothing
set w3[MM]=yst
set MM=MM+1
call lmc(BA[vD[bst]],hvc(uD[vD[bst]],"when calling readBoolean in Network, line 367"),"when calling writeBoolean in Network, line 367")
set pD[vD[bst]]=pD[vD[bst]]+1
set MM=MM-1
endfunction
function q_t takes integer p_t,string e_t returns nothing
set w3[MM]=e_t
set MM=MM+1
call pvc(tA[ZA[p_t]],CQc(wA[ZA[p_t]],"when calling readBooleanUnchecked in NetworkData, line 370"),"when calling writeBoolean in NetworkData, line 370")
set aA[ZA[p_t]]=aA[ZA[p_t]]+1
set MM=MM-1
endfunction
function s9S takes integer X8S,string C8S returns nothing
local real V8S
local real B8S
local integer N8S
local integer M8S
local integer w9S
local real u9S
local real r9S
set w3[MM]=C8S
set MM=MM+1
set u9S=ONc(VC[X8S],"when calling next in TerrainData, line 77")
set r9S=A0w
set V8S=u9S
set B8S=r9S
set N8S=JBc(EC[BC[X8S]],gEc(NC[X8S],"when calling next in TerrainData, line 78"),"when calling getRawcode in TerrainData, line 78")
if MC[X8S]then
set w9S=gEc(wV[X8S],"when calling next in TerrainData, line 79")
else
set w9S=-1
endif
set M8S=w9S
call SetTerrainType(V8S,B8S,N8S,M8S,1,1)
set MM=MM-1
endfunction
function u_t takes integer M0t,string w_t returns nothing
set w3[MM]=w_t
set MM=MM+1
call Ovc(sA[mA[M0t]],JQc(wA[mA[M0t]],"when calling readRealUnchecked in NetworkData, line 358"),"when calling writeReal in NetworkData, line 358")
set qA[mA[M0t]]=qA[mA[M0t]]+1
set MM=MM-1
endfunction
function HQr takes integer kQr,integer jQr,string xQr returns integer
local integer vQr
local integer mQr
local integer QQr
local integer WQr
local integer EQr
local integer ZQr
local integer UQr
local integer IQr
local integer PQr
local integer AQr
local integer DQr
set w3[MM]=xQr
set MM=MM+1
call Rgo(0,kQr,"when calling readByte in UnitData, line 149")
set PQr=inw
set vQr=PQr
if dmr(vQr,7)then
call Rgo(0,kQr,"when calling readByte in UnitData, line 150")
set QQr=inw
else
set QQr=0
endif
set AQr=QQr
set mQr=AQr
call ego(0,kQr,"when calling readInt in UnitData, line 152")
set WQr=inw
set EQr=0
if dmr(vQr,1)then
if dmr(vQr,2)then
if gmr(mQr,0)then
call ego(0,kQr,"when calling readInt in UnitData, line 158")
set EQr=inw
else
call Fgo(0,kQr,"when calling readShort in UnitData, line 160")
set EQr=inw
endif
else
call Rgo(0,kQr,"when calling readByte in UnitData, line 162")
set EQr=inw
endif
endif
set ZQr=0
if dmr(vQr,3)then
if dmr(vQr,4)then
if gmr(mQr,1)then
call ego(0,kQr,"when calling readInt in UnitData, line 167")
set ZQr=inw
else
call Fgo(0,kQr,"when calling readShort in UnitData, line 169")
set ZQr=inw
endif
else
call Rgo(0,kQr,"when calling readByte in UnitData, line 171")
set ZQr=inw
endif
endif
set UQr=0
if dmr(vQr,5)then
if dmr(vQr,6)then
if gmr(mQr,2)then
call ego(0,kQr,"when calling readInt in UnitData, line 176")
set UQr=inw
else
call Fgo(0,kQr,"when calling readShort in UnitData, line 178")
set UQr=inw
endif
else
call Rgo(0,kQr,"when calling readByte in UnitData, line 180")
set UQr=inw
endif
endif
set DQr=ehr(kQr,jQr,"when calling readStringTableIndex in UnitData, line 182")
set IQr=DQr
set MM=MM-1
set K4=vQr
set L4=mQr
set X4=WQr
set C4=EQr
set V4=ZQr
set B4=UQr
set N4=IQr
return K4
endfunction
function TZr takes integer yZr,string pZr returns integer
local integer eZr
local real qZr
local real aZr
local real nZr
local real dZr
local real fZr
local integer RZr
set w3[MM]=pZr
set MM=MM+1
call Rgo(0,yZr,"when calling readByte in UnitData, line 405")
set RZr=inw
set eZr=RZr
set qZr=0.0
if gEr(eZr,0)then
if gEr(eZr,1)then
call Fgo(0,yZr,"when calling readShort in UnitData, line 410")
set qZr=inw*1./10
else
call rgo(1,yZr,"when calling readReal in UnitData, line 412")
set qZr=snw
endif
endif
set aZr=0.0
if gEr(eZr,2)then
call Fgo(0,yZr,"when calling readShort in UnitData, line 415")
set aZr=inw*1./10000
endif
set nZr=0.0
if gEr(eZr,3)then
if gEr(eZr,4)then
call Rgo(0,yZr,"when calling readByte in UnitData, line 419")
set nZr=inw*1./100
elseif gEr(eZr,5)then
call Fgo(0,yZr,"when calling readShort in UnitData, line 421")
set nZr=inw*1./1000
else
call rgo(1,yZr,"when calling readReal in UnitData, line 423")
set nZr=snw
endif
endif
set dZr=0.0
if gEr(eZr,6)then
call rgo(1,yZr,"when calling readReal in UnitData, line 426")
set dZr=snw
endif
set fZr=0.0
if gEr(eZr,7)then
call Fgo(0,yZr,"when calling readShort in UnitData, line 429")
set fZr=inw*1./10000
endif
set MM=MM-1
set A2=eZr
set D2=qZr
set H2=aZr
set J2=nZr
set K2=dZr
set L2=fZr
return A2
endfunction
function dEr takes integer MWr,string wEr returns integer
local integer uEr
local real rEr
local integer sEr
local integer tEr
local integer iEr
local integer SEr
local integer cEr
local real oEr
local integer OEr
local integer lEr
local integer bEr
local integer yEr
local integer pEr
local integer eEr
local integer qEr
local integer aEr
local integer nEr
set w3[MM]=wEr
set MM=MM+1
call Rgo(0,MWr,"when calling readByte in UnitData, line 282")
set OEr=inw
set uEr=OEr
set rEr=0.0
if VQr(uEr,0)then
if VQr(uEr,1)then
call Rgo(0,MWr,"when calling readByte in UnitData, line 287")
set rEr=rgu(inw)
elseif VQr(uEr,2)then
call Fgo(0,MWr,"when calling readShort in UnitData, line 289")
set rEr=inw*1./10
else
call rgo(1,MWr,"when calling readReal in UnitData, line 291")
set rEr=snw
endif
endif
set sEr=0
if VQr(uEr,3)then
call Rgo(0,MWr,"when calling readByte in UnitData, line 294")
set sEr=inw
endif
set lEr=0
set bEr=0
set yEr=0
set pEr=0
set tEr=lEr
set iEr=bEr
set SEr=yEr
set cEr=pEr
if VQr(uEr,4)then
call Rgo(0,MWr,"when calling readByte in UnitData, line 297")
set eEr=inw
call Rgo(0,MWr,"when calling readByte in UnitData, line 297")
set qEr=inw
call Rgo(0,MWr,"when calling readByte in UnitData, line 297")
set aEr=inw
call Rgo(0,MWr,"when calling readByte in UnitData, line 297")
set nEr=inw
set tEr=eEr
set iEr=qEr
set SEr=aEr
set cEr=nEr
endif
set oEr=0.0
if VQr(uEr,5)then
if VQr(uEr,6)then
call Rgo(0,MWr,"when calling readByte in UnitData, line 301")
set oEr=inw*1./100
elseif VQr(uEr,7)then
call Fgo(0,MWr,"when calling readShort in UnitData, line 303")
set oEr=(inw-32767)*1./1000
else
call rgo(1,MWr,"when calling readReal in UnitData, line 305")
set oEr=snw
endif
endif
set MM=MM-1
set a2=uEr
set n2=rEr
set d2=sEr
set f2=tEr
set R2=iEr
set T2=SEr
set Y2=cEr
set G2=oEr
return a2
endfunction
function EDr takes integer FDr,string kDr returns integer
local integer jDr
local integer xDr
local real vDr
local integer mDr
local integer QDr
local integer WDr
set w3[MM]=kDr
set MM=MM+1
call Rgo(0,FDr,"when calling readByte in UnitData, line 831")
set WDr=inw
set jDr=WDr
set xDr=0
set vDr=0.0
set mDr=0
set QDr=0
if DDr(jDr,0)then
if DDr(jDr,1)then
call ego(0,FDr,"when calling readInt in UnitData, line 840")
set xDr=inw
else
call Rgo(0,FDr,"when calling readByte in UnitData, line 842")
set xDr=inw
endif
endif
if DDr(jDr,2)then
if DDr(jDr,3)then
call Rgo(0,FDr,"when calling readByte in UnitData, line 845")
set vDr=inw*1./100
else
call rgo(1,FDr,"when calling readReal in UnitData, line 847")
set vDr=snw
endif
endif
if DDr(jDr,4)then
if DDr(jDr,5)then
call ego(0,FDr,"when calling readInt in UnitData, line 850")
set mDr=inw
else
call Rgo(0,FDr,"when calling readByte in UnitData, line 852")
set mDr=inw
endif
endif
if DDr(jDr,6)then
if DDr(jDr,7)then
call ego(0,FDr,"when calling readInt in UnitData, line 855")
set QDr=inw
else
call Rgo(0,FDr,"when calling readByte in UnitData, line 857")
set QDr=inw
endif
endif
set MM=MM-1
set C5=jDr
set V5=xDr
set B5=vDr
set N5=mDr
set M5=QDr
return C5
endfunction
function hDr takes integer QAr,string WAr returns integer
local integer EAr
local integer ZAr
local integer UAr
local integer IAr
local real PAr
local integer AAr
local integer DAr
local integer HAr
local integer JAr
local real KAr
local integer LAr
local integer XAr
local integer CAr
local integer VAr
local integer BAr
local integer NAr
local integer MAr
local integer wDr
local integer uDr
local integer rDr
local real sDr
local integer tDr
local integer iDr
local integer SDr
local integer cDr
local real oDr
local integer ODr
local integer lDr
local integer bDr
local integer yDr
local real pDr
local integer eDr
local integer qDr
local integer aDr
local integer nDr
local real dDr
local integer fDr
local integer RDr
local integer TDr
local integer YDr
local integer GDr
local integer gDr
set w3[MM]=WAr
set MM=MM+1
call Fgo(0,QAr,"when calling readShort in UnitData, line 700")
set wDr=inw
set EAr=wDr
set ZAr=0
if QUr(EAr,0)then
call Rgo(0,QAr,"when calling readByte in UnitData, line 704")
set ZAr=inw
endif
set uDr=EUr()
set rDr=r5
set sDr=s5
set tDr=t5
set iDr=i5
set UAr=uDr
set IAr=rDr
set PAr=sDr
set AAr=tDr
set DAr=iDr
if QUr(EAr,4)then
set SDr=EDr(QAr,"when calling readAttackParameters in UnitData, line 708")
set cDr=V5
set oDr=B5
set ODr=N5
set lDr=M5
set UAr=SDr
set IAr=cDr
set PAr=oDr
set AAr=ODr
set DAr=lDr
endif
set bDr=EUr()
set yDr=r5
set pDr=s5
set eDr=t5
set qDr=i5
set HAr=bDr
set JAr=yDr
set KAr=pDr
set LAr=eDr
set XAr=qDr
if QUr(EAr,5)then
set aDr=EDr(QAr,"when calling readAttackParameters in UnitData, line 711")
set nDr=V5
set dDr=B5
set fDr=N5
set RDr=M5
set HAr=aDr
set JAr=nDr
set KAr=dDr
set LAr=fDr
set XAr=RDr
endif
set CAr=0
if QUr(EAr,6)then
if QUr(EAr,7)then
call Rgo(0,QAr,"when calling readByte in UnitData, line 715")
set CAr=inw
else
call ego(0,QAr,"when calling readInt in UnitData, line 717")
set CAr=inw
endif
endif
set VAr=0
if QUr(EAr,8)then
if QUr(EAr,9)then
call Fgo(0,QAr,"when calling readShort in UnitData, line 721")
set VAr=inw
else
call ego(0,QAr,"when calling readInt in UnitData, line 723")
set VAr=inw
endif
endif
set BAr=0
if QUr(EAr,10)then
if QUr(EAr,11)then
call Fgo(0,QAr,"when calling readShort in UnitData, line 727")
set BAr=inw
else
call ego(0,QAr,"when calling readInt in UnitData, line 729")
set BAr=inw
endif
endif
set TDr=0
set NAr=TDr
if QUr(EAr,14)then
call Rgo(0,QAr,"when calling readByte in UnitData, line 733")
set YDr=inw
set NAr=YDr
endif
set GDr=0
set MAr=GDr
if QUr(EAr,15)then
call Rgo(0,QAr,"when calling readByte in UnitData, line 736")
set gDr=inw
set MAr=gDr
endif
set MM=MM-1
set w6=EAr
set u6=ZAr
set r6=UAr
set s6=IAr
set t6=PAr
set i6=AAr
set S6=DAr
set c6=HAr
set o6=JAr
set O6=KAr
set l6=LAr
set b6=XAr
set y6=CAr
set p6=VAr
set e6=BAr
set q6=NAr
set a6=MAr
return w6
endfunction
function PLs takes integer jLs,integer xLs,string vLs returns nothing
local integer mLs
local integer QLs
local integer WLs
local integer ELs
local integer ZLs
local integer ULs
local integer ILs
set w3[MM]=vLs
set MM=MM+1
call Rgo(0,xLs,"when calling readByte in ItemData, line 166")
set mLs=inw
set IU[jLs]=mLs
if Ggu(IU[jLs],7)then
call Rgo(0,xLs,"when calling readByte in ItemData, line 168")
set QLs=inw
set PU[jLs]=QLs
endif
call ego(0,xLs,"when calling readInt in ItemData, line 169")
set AU[jLs]=inw
if Ggu(IU[jLs],6)then
if Ggu(IU[jLs],4)then
call ego(0,xLs,"when calling readInt in ItemData, line 173")
set DU[jLs]=inw
else
call Fgo(0,xLs,"when calling readShort in ItemData, line 175")
set DU[jLs]=inw
endif
elseif Ggu(IU[jLs],4)then
set DU[jLs]=0
elseif Ggu(IU[jLs],5)then
set DU[jLs]=1
else
call Rgo(0,xLs,"when calling readByte in ItemData, line 181")
set DU[jLs]=inw
endif
if xgu(PU[jLs],0)then
call rgo(1,xLs,"when calling readReal in ItemData, line 184")
set HU[jLs]=snw
endif
if xgu(PU[jLs],1)then
set WLs=ehr(xLs,UU[jLs],"when calling readStringTableIndex in ItemData, line 187")
set JU[jLs]=WLs
endif
if xgu(PU[jLs],2)then
set ELs=ehr(xLs,UU[jLs],"when calling readStringTableIndex in ItemData, line 189")
set KU[jLs]=ELs
endif
if xgu(PU[jLs],3)then
set ZLs=ehr(xLs,UU[jLs],"when calling readStringTableIndex in ItemData, line 191")
set LU[jLs]=ZLs
endif
if xgu(PU[jLs],4)then
set ULs=ehr(xLs,UU[jLs],"when calling readStringTableIndex in ItemData, line 193")
set XU[jLs]=ULs
endif
if xgu(PU[jLs],5)then
set ILs=ehr(xLs,UU[jLs],"when calling readStringTableIndex in ItemData, line 195")
set CU[jLs]=ILs
endif
set MM=MM-1
endfunction
function fXs takes integer eXs,integer qXs,string aXs returns nothing
local real nXs
local real dXs
set w3[MM]=aXs
set MM=MM+1
set nXs=TEu(qXs,"when calling readPointData in ItemData, line 218")
set dXs=J1
set VU[eXs]=nXs
set BU[eXs]=dXs
call PLs(eXs,qXs,"when calling deserialize in ItemData, line 220")
set MM=MM-1
endfunction
function jIc takes integer hIc,integer FIc,string kIc returns nothing
set w3[MM]=kIc
set MM=MM+1
if Ah[hIc]==0 then
if hIc==0 then
call Mau("Nullpointer exception when calling SingleItemData.deserialize","when calling error in ItemData, line 165")
else
call Mau("Called SingleItemData.deserialize on invalid object.","when calling error in ItemData, line 165")
endif
endif
if Ah[hIc]<=1569 then
call PLs(hIc,FIc,"when calling deserialize in ItemData, line 165")
else
call fXs(hIc,FIc,"when calling deserialize in ItemData, line 165")
endif
set MM=MM-1
endfunction
function UuS takes integer QuS,integer WuS,string EuS returns nothing
local integer ZuS
set w3[MM]=EuS
set MM=MM+1
call Rgo(0,WuS,"when calling readByte in UnitData, line 939")
set ZuS=inw
set WV[QuS]=ZuS
call ego(0,WuS,"when calling readInt in UnitData, line 940")
set EV[QuS]=inw
if CDr(WV[QuS],0)then
set ZV[QuS]=1
elseif CDr(WV[QuS],1)then
set ZV[QuS]=2
elseif CDr(WV[QuS],2)then
set ZV[QuS]=3
elseif CDr(WV[QuS],3)then
set ZV[QuS]=4
else
call Fgo(0,WuS,"when calling readShort in UnitData, line 951")
set ZV[QuS]=inw
endif
if CDr(WV[QuS],4)then
if CDr(WV[QuS],6)then
call Rgo(0,WuS,"when calling readByte in UnitData, line 954")
set UV[QuS]=inw
else
call ego(0,WuS,"when calling readInt in UnitData, line 956")
set UV[QuS]=inw
endif
endif
if CDr(WV[QuS],5)then
if CDr(WV[QuS],6)then
call Rgo(0,WuS,"when calling readByte in UnitData, line 959")
set IV[QuS]=inw*1./2
else
call rgo(1,WuS,"when calling readReal in UnitData, line 961")
set IV[QuS]=snw
endif
endif
set MM=MM-1
endfunction
function vOo takes integer kOo,integer jOo,string xOo returns nothing
set w3[MM]=xOo
set MM=MM+1
if Hv[kOo]==0 then
if kOo==0 then
call Mau("Nullpointer exception when calling SingleAbilityData.deserialize","when calling error in UnitData, line 938")
else
call Mau("Called SingleAbilityData.deserialize on invalid object.","when calling error in UnitData, line 938")
endif
endif
call UuS(kOo,jOo,"when calling deserialize in UnitData, line 938")
set MM=MM-1
endfunction
function FSS takes integer liS,integer biS,string yiS returns nothing
local integer piS
local integer eiS
local integer qiS
local integer aiS
local integer niS
local integer diS
local integer fiS
local integer RiS
local integer TiS
local integer YiS
local integer GiS
local integer giS
local integer hiS
local integer FiS
local integer kiS
local integer jiS
local integer xiS
local integer viS
local integer miS
local integer QiS
local integer WiS
local integer EiS
local integer ZiS
local integer UiS
local integer IiS
local integer PiS
local integer AiS
local integer DiS
local real HiS
local integer JiS
local integer KiS
local integer LiS
local integer XiS
local integer CiS
local real ViS
local integer BiS
local real NiS
local real MiS
local real wSS
local real uSS
local real rSS
local integer sSS
local integer tSS
local integer iSS
local integer SSS
local real cSS
local integer oSS
local integer OSS
local integer lSS
local integer bSS
local real ySS
local integer pSS
local integer eSS
local integer qSS
local integer aSS
local integer nSS
local integer dSS
local integer fSS
local integer RSS
local integer TSS
local real YSS
local real GSS
local integer gSS
local integer hSS
set w3[MM]=yiS
set MM=MM+1
call Rgo(0,biS,"when calling readByte in UnitData, line 1270")
set viS=inw
set JV[liS]=viS
if uHr(JV[liS],7)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1272")
set miS=inw
set KV[liS]=miS
endif
call ego(0,biS,"when calling readInt in UnitData, line 1273")
set LV[liS]=inw
if uHr(JV[liS],2)then
set QiS=HQr(biS,HV[liS],"when calling readHeroParameters in UnitData, line 1276")
set WiS=L4
set EiS=X4
set ZiS=C4
set UiS=V4
set IiS=B4
set PiS=N4
set XV[liS]=QiS
set CV[liS]=WiS
set VV[liS]=EiS
set BV[liS]=ZiS
set NV[liS]=UiS
set MV[liS]=IiS
set wB[liS]=PiS
endif
if uHr(JV[liS],3)then
set AiS=ehr(biS,HV[liS],"when calling readStringTableIndex in UnitData, line 1279")
set uB[liS]=AiS
endif
if uHr(JV[liS],4)then
set DiS=dEr(biS,"when calling readArtParameters in UnitData, line 1282")
set HiS=n2
set JiS=d2
set KiS=f2
set LiS=R2
set XiS=T2
set CiS=Y2
set ViS=G2
set rB[liS]=DiS
set sB[liS]=HiS
set tB[liS]=JiS
set iB[liS]=KiS
set SB[liS]=LiS
set cB[liS]=XiS
set oB[liS]=CiS
set OB[liS]=ViS
endif
if uHr(JV[liS],5)then
set BiS=TZr(biS,"when calling readAnimationParameters in UnitData, line 1284")
set NiS=D2
set MiS=H2
set wSS=J2
set uSS=K2
set rSS=L2
set lB[liS]=BiS
set bB[liS]=NiS
set yB[liS]=MiS
set pB[liS]=wSS
set eB[liS]=uSS
set qB[liS]=rSS
endif
if uHr(JV[liS],6)then
set sSS=hDr(biS,"when calling readStats in UnitData, line 1287")
set tSS=u6
set iSS=r6
set SSS=s6
set cSS=t6
set oSS=i6
set OSS=S6
set lSS=c6
set bSS=o6
set ySS=O6
set pSS=l6
set eSS=b6
set qSS=y6
set aSS=p6
set nSS=e6
set dSS=q6
set fSS=a6
set aB[liS]=sSS
set nB[liS]=tSS
set dB[liS]=iSS
set fB[liS]=SSS
set RB[liS]=cSS
set TB[liS]=oSS
set YB[liS]=OSS
set GB[liS]=lSS
set gB[liS]=bSS
set hB[liS]=ySS
set FB[liS]=pSS
set kB[liS]=eSS
set jB[liS]=qSS
set xB[liS]=aSS
set vB[liS]=nSS
set mB[liS]=dSS
set QB[liS]=fSS
if QUr(aB[liS],0)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1289")
set RSS=inw
set piS=RSS
set eiS=0
set qiS=nB[liS]-1
loop
exitwhen eiS>qiS
if mwu(piS,eiS)then
set aiS=wXs(HV[liS],"when calling new_SingleItemData in UnitData, line 1292")
call jIc(aiS,biS,"when calling deserialize in UnitData, line 1292")
call dGo(liS,eiS,aiS,"when writing array SingleUnitData_items in UnitData, line 1292")
else
call dGo(liS,eiS,0,"when writing array SingleUnitData_items in UnitData, line 1294")
endif
set eiS=eiS+1
endloop
endif
if QUr(aB[liS],12)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1296")
set niS=inw
set diS=0
set fiS=niS-1
loop
exitwhen diS>fiS
set hSS=WB[liS]
call ego(0,biS,"when calling readInt in UnitData, line 1298")
call Cqo(hSS,inw,"when calling add in UnitData, line 1298")
set diS=diS+1
endloop
endif
if QUr(aB[liS],13)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1300")
set RiS=inw
set TiS=0
set YiS=RiS-1
loop
exitwhen TiS>YiS
set jiS=EB[liS]
set GiS=JuS("when calling new_SingleAbilityData in UnitData, line 1302")
call vOo(GiS,biS,"when calling deserialize in UnitData, line 1302")
call Cqo(jiS,GiS,"when calling add in UnitData, line 1302")
set TiS=TiS+1
endloop
endif
endif
if aHr(KV[liS],0)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1305")
set TSS=inw
set ZB[liS]=TSS
if lHr(ZB[liS],0)then
if not lHr(ZB[liS],1)then
call ego(0,biS,"when calling readInt in UnitData, line 1308")
set UB[liS]=inw
else
call Fgo(0,biS,"when calling readShort in UnitData, line 1310")
set UB[liS]=inw
endif
elseif lHr(ZB[liS],1)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1312")
set UB[liS]=inw
endif
if lHr(ZB[liS],2)then
if not lHr(ZB[liS],3)then
call ego(0,biS,"when calling readInt in UnitData, line 1315")
set IB[liS]=inw
else
call Fgo(0,biS,"when calling readShort in UnitData, line 1317")
set IB[liS]=inw
endif
elseif lHr(ZB[liS],3)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1319")
set IB[liS]=inw
endif
endif
if aHr(KV[liS],2)then
set YSS=TEu(biS,"when calling readPointData in UnitData, line 1322")
set GSS=J1
set PB[liS]=YSS
set AB[liS]=GSS
endif
if aHr(KV[liS],3)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1325")
set DB[liS]=inw
endif
if aHr(KV[liS],4)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1327")
set HB[liS]=inw
endif
if aHr(KV[liS],5)then
call Rgo(0,biS,"when calling readByte in UnitData, line 1330")
set giS=inw
set hiS=0
set FiS=giS-1
loop
exitwhen hiS>FiS
set xiS=JB[liS]
set gSS=ehr(biS,HV[liS],"when calling readStringTableIndex in UnitData, line 1332")
set kiS=gSS
call Cqo(xiS,kiS,"when calling add in UnitData, line 1332")
set hiS=hiS+1
endloop
endif
set MM=MM-1
endfunction
function orS takes integer srS,integer trS,string irS returns nothing
local real SrS
local real crS
set w3[MM]=irS
set MM=MM+1
set SrS=TEu(trS,"when calling readPointData in UnitData, line 1358")
set crS=J1
set PV[srS]=SrS
set AV[srS]=crS
call Fgo(0,trS,"when calling readShort in UnitData, line 1359")
set DV[srS]=inw*1./180
call FSS(srS,trS,"when calling deserialize in UnitData, line 1361")
set MM=MM-1
endfunction
function slo takes integer wlo,integer ulo,string rlo returns nothing
set w3[MM]=rlo
set MM=MM+1
if Xv[wlo]==0 then
if wlo==0 then
call Mau("Nullpointer exception when calling SinglePositionedUnitData.deserialize","when calling error in UnitData, line 1357")
else
call Mau("Called SinglePositionedUnitData.deserialize on invalid object.","when calling error in UnitData, line 1357")
endif
endif
call orS(wlo,ulo,"when calling deserialize in UnitData, line 1357")
set MM=MM-1
endfunction
function wuS takes integer VwS,string BwS returns nothing
local integer NwS
local integer MwS
set w3[MM]=BwS
set MM=MM+1
set MwS=eV[RV[VwS]]
set NwS=ErS(yV[RV[VwS]],"when calling new_SinglePositionedUnitData in UnitData, line 1422")
call slo(NwS,TV[VwS],"when calling deserialize in UnitData, line 1422")
call Nno(MwS,NwS,"when calling add in UnitData, line 1422")
set VM[YV[VwS]]=VM[YV[VwS]]+1
set MM=MM-1
endfunction
function x_t takes integer k_t,string j_t returns nothing
set w3[MM]=j_t
set MM=MM+1
call ivc(iA[AA[k_t]],mro(uA[AA[k_t]],"when calling popInt in NetworkData, line 382"),"when calling writeInt in NetworkData, line 382")
set nA[AA[k_t]]=nA[AA[k_t]]+1
set MM=MM-1
endfunction
function mEs takes integer jEs,string xEs returns integer
local integer vEs
set w3[MM]=xEs
set MM=MM+1
call QRc(jEs,"when calling checkRead in HashBuffer, line 89")
set MZ[jEs]=MZ[jEs]+1
if Ba and(not hio(XZ[jEs],MZ[jEs],"when calling hasInt in HashBuffer, line 91"))then
call Mau("HashBuffer: trying to read non-present int at pos#"+tgu(MZ[jEs]),"when calling error in HashBuffer, line 92")
endif
set vEs=Nio(XZ[jEs],MZ[jEs],"when calling loadInt in HashBuffer, line 93")
set MM=MM-1
return vEs
endfunction
function dmc takes integer qmc,string amc returns integer
local integer nmc
set w3[MM]=amc
set MM=MM+1
if qG[qmc]==0 then
if qmc==0 then
call Mau("Nullpointer exception when calling HashBuffer.readIntUnsafe","when calling error in HashBuffer, line 88")
else
call Mau("Called HashBuffer.readIntUnsafe on invalid object.","when calling error in HashBuffer, line 88")
endif
endif
set nmc=mEs(qmc,"when calling readIntUnsafe in HashBuffer, line 88")
set MM=MM-1
return nmc
endfunction
function xrt takes integer krt,string jrt returns nothing
set w3[MM]=jrt
set MM=MM+1
call ivc(MA[RD[krt]],dmc(BA[RD[krt]],"when calling readIntUnsafe in Network, line 337"),"when calling writeInt in Network, line 337")
set bD[RD[krt]]=bD[RD[krt]]+1
set MM=MM-1
endfunction
function FOc takes string gOc returns integer
local integer hOc
set w3[MM]=gOc
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set hOc=HY
set JY[hOc]=1350
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_StringEncoder_StringEncoder.","when calling error in StringEncoder, line 96")
set hOc=0
endif
else
set DY=DY-1
set hOc=AY[DY]
set JY[hOc]=1350
endif
set MM=MM-1
return hOc
endfunction
function GOc takes string TOc returns integer
local integer YOc
set w3[MM]=TOc
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set YOc=IY
set PY[YOc]=1386
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_StringEncoder_StringEncoder.","when calling error in StringEncoder, line 96")
set YOc=0
endif
else
set UY=UY-1
set YOc=ZY[UY]
set PY[YOc]=1386
endif
set MM=MM-1
return YOc
endfunction
function WNi takes integer FNi,string kNi returns string
local integer jNi
local integer xNi
local integer vNi
local integer mNi
local integer QNi
set w3[MM]=kNi
set MM=MM+1
set VX[FNi]=""
set jNi=PQc(MX[FNi],"when calling readIntUnchecked in StringEncoder, line 93")
set BX[FNi]=0
set mNi=qq
set xNi=GOc("when calling alloc_LimitedExecuteCondition_executeWhile_StringEncoder_StringEncoder in StringEncoder, line 96")
set SC[xNi]=FNi
set cC[xNi]=jNi
set QNi=xNi
set vNi=FOc("when calling alloc_LimitedExecuteAction_executeWhile_StringEncoder_StringEncoder in StringEncoder, line 96")
set oC[vNi]=FNi
call rdu(mNi,QNi,vNi,"when calling executeWhile in StringEncoder, line 96")
set MM=MM-1
return VX[FNi]
endfunction
function Oro takes integer Sro,string cro returns string
local string oro
set w3[MM]=cro
set MM=MM+1
if ev[Sro]==0 then
if Sro==0 then
call Mau("Nullpointer exception when calling StringEncoder.decodeString","when calling error in StringEncoder, line 91")
else
call Mau("Called StringEncoder.decodeString on invalid object.","when calling error in StringEncoder, line 91")
endif
endif
set oro=WNi(Sro,"when calling decodeString in StringEncoder, line 91")
set MM=MM-1
return oro
endfunction
function y3i takes integer l3i,string b3i returns nothing
set w3[MM]=b3i
set MM=MM+1
call SEc(wC[yC[l3i]],Oro(yC[l3i],"when calling decodeString in StringEncoder, line 112"),"when calling writeString in StringEncoder, line 112")
set MM=MM-1
endfunction
function ixc takes integer sxc,string txc returns nothing
set w3[MM]=txc
set MM=MM+1
if JY[sxc]==0 then
if sxc==0 then
call Mau("Nullpointer exception when calling LimitedExecuteAction.run","when calling error in Execute, line 108")
else
call Mau("Called LimitedExecuteAction.run on invalid object.","when calling error in Execute, line 108")
endif
endif
if JY[sxc]<=1338 then
if JY[sxc]<=1329 then
if JY[sxc]<=1325 then
if JY[sxc]<=1323 then
if JY[sxc]<=1322 then
if JY[sxc]<=1321 then
call hls(sxc,"when calling run_executeWhile_Base64Decoder_Base64 in Execute, line 108")
else
call Res(sxc,"when calling run_executeWhile_BufferAdapters in Execute, line 108")
endif
else
call kes(sxc,"when calling run_executeWhile_BufferAdapters in Execute, line 108")
endif
elseif JY[sxc]<=1324 then
call Ees(sxc,"when calling run_executeWhile_BufferAdapters in Execute, line 108")
else
call AWs(sxc,"when calling run_executeWhile_GamecacheBuffer_GamecacheBuffer in Execute, line 108")
endif
elseif JY[sxc]<=1327 then
if JY[sxc]<=1326 then
call Yrt(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
else
call xrt(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
endif
elseif JY[sxc]<=1328 then
call Urt(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
else
call Krt(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
endif
elseif JY[sxc]<=1334 then
if JY[sxc]<=1332 then
if JY[sxc]<=1331 then
if JY[sxc]<=1330 then
call Mrt(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
else
call Sst(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
endif
else
call pst(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
endif
elseif JY[sxc]<=1333 then
call Rst(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
else
call kst(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
endif
elseif JY[sxc]<=1336 then
if JY[sxc]<=1335 then
call Dst(sxc,"when calling run_executeWhile_Network_Network in Execute, line 108")
else
call m0t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
endif
elseif JY[sxc]<=1337 then
call P0t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
else
call X0t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
endif
elseif JY[sxc]<=1347 then
if JY[sxc]<=1343 then
if JY[sxc]<=1341 then
if JY[sxc]<=1340 then
if JY[sxc]<=1339 then
call u_t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
else
call o_t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
endif
else
call q_t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
endif
elseif JY[sxc]<=1342 then
call Y_t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
else
call x_t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
endif
elseif JY[sxc]<=1345 then
if JY[sxc]<=1344 then
call U_t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
else
call N_t(sxc,"when calling run_executeWhile_Network_NetworkData in Execute, line 108")
endif
elseif JY[sxc]<=1346 then
call TSt(sxc,"when calling run_executeWhile_OrderedStringBuffer_OrderedStringBuffer in Execute, line 108")
else
call LwS(sxc,"when calling run_executeWhile_PositionedUnitData_UnitData in Execute, line 108")
endif
elseif JY[sxc]<=1351 then
if JY[sxc]<=1349 then
if JY[sxc]<=1348 then
call wuS(sxc,"when calling run_executeWhile_PositionedUnitData_UnitData in Execute, line 108")
else
call LMi(sxc,"when calling run_executeWhile_StringEncoder_StringEncoder in Execute, line 108")
endif
elseif JY[sxc]<=1350 then
call NMi(sxc,"when calling run_executeWhile_StringEncoder_StringEncoder in Execute, line 108")
else
call i3i(sxc,"when calling run_executeWhile_StringEncoder_StringEncoder in Execute, line 108")
endif
elseif JY[sxc]<=1353 then
if JY[sxc]<=1352 then
call y3i(sxc,"when calling run_executeWhile_StringEncoder_StringEncoder in Execute, line 108")
else
call D8S(sxc,"when calling run_executeWhile_SubRectTileData_TerrainData in Execute, line 108")
endif
elseif JY[sxc]<=1354 then
call s9S(sxc,"when calling run_executeWhile_SubRectTileData_TerrainData in Execute, line 108")
else
call Sys(sxc,"when calling run_executeWhile_execute_Base64Encoder_Base64 in Execute, line 108")
endif
set MM=MM-1
endfunction
function CMi takes integer XMi returns boolean
return BX[SC[XMi]]<cC[XMi]
endfunction
function qIs takes integer yIs,string pIs returns boolean
local boolean eIs
set w3[MM]=pIs
set MM=MM+1
set eIs=aQc(yIs,2,"when calling hasRemainingData in HashData, line 217")
set MM=MM-1
return eIs
endfunction
function kWc takes integer gWc,string hWc returns boolean
local boolean FWc
set w3[MM]=hWc
set MM=MM+1
if FY[gWc]==0 then
if gWc==0 then
call Mau("Nullpointer exception when calling HashReader.hasString","when calling error in HashData, line 216")
else
call Mau("Called HashReader.hasString on invalid object.","when calling error in HashData, line 216")
endif
endif
set FWc=qIs(gWc,"when calling hasString in HashData, line 216")
set MM=MM-1
return FWc
endfunction
function gMi takes integer TMi,string YMi returns boolean
local boolean GMi
set w3[MM]=YMi
set MM=MM+1
set GMi=kWc(uC[TMi],"when calling hasString in StringEncoder, line 135")
set MM=MM-1
return GMi
endfunction
function Kro takes integer Dro,string Hro returns boolean
local boolean Jro
set w3[MM]=Hro
set MM=MM+1
if ev[Dro]==0 then
if Dro==0 then
call Mau("Nullpointer exception when calling StringEncoder.hasString","when calling error in StringEncoder, line 134")
else
call Mau("Called StringEncoder.hasString on invalid object.","when calling error in StringEncoder, line 134")
endif
endif
set Jro=gMi(Dro,"when calling hasString in StringEncoder, line 134")
set MM=MM-1
return Jro
endfunction
function C_t takes integer K_t,string L_t returns boolean
local boolean X_t
set w3[MM]=L_t
set MM=MM+1
set X_t=Kro(uA[LA[K_t]],"when calling hasString in NetworkData, line 450")
set MM=MM-1
return X_t
endfunction
function CwS takes integer XwS returns boolean
return VM[dV[XwS]]<fV[XwS]
endfunction
function tQs takes integer sQs returns integer
return Re-mZ[sQs]-1
endfunction
function Pxc takes integer Zxc,string Uxc returns integer
local integer Ixc
set w3[MM]=Uxc
set MM=MM+1
if Sh[Zxc]==0 then
if Zxc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.getRemainingWrite","when calling error in GamecacheBuffer, line 35")
else
call Mau("Called GamecacheBuffer.getRemainingWrite on invalid object.","when calling error in GamecacheBuffer, line 35")
endif
endif
set Ixc=tQs(Zxc)
set MM=MM-1
return Ixc
endfunction
function Drt takes integer Irt,string Prt returns boolean
local boolean Art
set w3[MM]=Prt
set MM=MM+1
set Art=yD[GD[Irt]]<SD[GD[Irt]]and Pxc(wD[GD[Irt]],"when calling getRemainingWrite in Network, line 348")>0
set MM=MM-1
return Art
endfunction
function F_t takes integer G_t,string g_t returns boolean
local boolean h_t
set w3[MM]=g_t
set MM=MM+1
set h_t=nA[PA[G_t]]<bA[PA[G_t]]and Pxc(iA[PA[G_t]],"when calling getRemainingWrite in NetworkData, line 381")>0
set MM=MM-1
return h_t
endfunction
function Frt takes integer Grt,string grt returns boolean
local boolean hrt
set w3[MM]=grt
set MM=MM+1
set hrt=bD[fD[Grt]]<iD[fD[Grt]]and Pxc(MA[fD[Grt]],"when calling getRemainingWrite in Network, line 336")>0
set MM=MM-1
return hrt
endfunction
function HMi takes integer DMi returns boolean
return BX[rC[DMi]]<sC[DMi]
endfunction
function REc takes integer nEc,string dEc returns boolean
local boolean fEc
set w3[MM]=dEc
set MM=MM+1
if eh[nEc]==0 then
if nEc==0 then
call Mau("Nullpointer exception when calling HLIterator.hasNext","when calling error in HashList, line 132")
else
call Mau("Called HLIterator.hasNext on invalid object.","when calling error in HashList, line 132")
endif
endif
set fEc=PPs(nEc,"when calling hasNext in HashList, line 132")
set MM=MM-1
return fEc
endfunction
function HwS takes integer PwS,string AwS returns boolean
local boolean DwS
set w3[MM]=AwS
set MM=MM+1
set DwS=REc(qV[PwS],"when calling hasNext in UnitData, line 1404")
set MM=MM-1
return DwS
endfunction
function cIs takes integer tIs,string iIs returns integer
local integer SIs
set w3[MM]=iIs
set MM=MM+1
set SIs=FQc(tIs,2,"when calling getCount in HashData, line 208")
set MM=MM-1
return SIs
endfunction
function fWc takes integer aWc,string nWc returns integer
local integer dWc
set w3[MM]=nWc
set MM=MM+1
if FY[aWc]==0 then
if aWc==0 then
call Mau("Nullpointer exception when calling HashReader.getStringCount","when calling error in HashData, line 207")
else
call Mau("Called HashReader.getStringCount on invalid object.","when calling error in HashData, line 207")
endif
endif
set dWc=cIs(aWc,"when calling getStringCount in HashData, line 207")
set MM=MM-1
return dWc
endfunction
function RMi takes integer nMi,string dMi returns integer
local integer fMi
set w3[MM]=dMi
set MM=MM+1
set fMi=fWc(uC[nMi],"when calling getStringCount in StringEncoder, line 132")
set MM=MM-1
return fMi
endfunction
function Aro takes integer Uro,string Iro returns integer
local integer Pro
set w3[MM]=Iro
set MM=MM+1
if ev[Uro]==0 then
if Uro==0 then
call Mau("Nullpointer exception when calling StringEncoder.getStringCount","when calling error in StringEncoder, line 131")
else
call Mau("Called StringEncoder.getStringCount on invalid object.","when calling error in StringEncoder, line 131")
endif
endif
set Pro=RMi(Uro,"when calling getStringCount in StringEncoder, line 131")
set MM=MM-1
return Pro
endfunction
function Ist takes integer Est,string Zst returns boolean
local boolean Ust
set w3[MM]=Zst
set MM=MM+1
set Ust=Aro(NA[ID[Est]],"when calling getStringCount in Network, line 460")>0
set MM=MM-1
return Ust
endfunction
function SQs takes integer iQs returns integer
return Re-QZ[iQs]-1
endfunction
function Jxc takes integer Axc,string Dxc returns integer
local integer Hxc
set w3[MM]=Dxc
set MM=MM+1
if Sh[Axc]==0 then
if Axc==0 then
call Mau("Nullpointer exception when calling GamecacheBuffer.getRemainingRead","when calling error in GamecacheBuffer, line 39")
else
call Mau("Called GamecacheBuffer.getRemainingRead on invalid object.","when calling error in GamecacheBuffer, line 39")
endif
endif
set Hxc=SQs(Axc)
set MM=MM-1
return Hxc
endfunction
function J0t takes integer A0t,string D0t returns boolean
local boolean H0t
set w3[MM]=D0t
set MM=MM+1
set H0t=eA[jA[A0t]]<oA[jA[A0t]]and Jxc(rA[jA[A0t]],"when calling getRemainingRead in NetworkData, line 351")>0
set MM=MM-1
return H0t
endfunction
function Ibt takes integer Ubt returns boolean
return JH[Ubt]<=DH[Ubt]
endfunction
function pNc takes integer lNc,string bNc returns boolean
local boolean yNc
set w3[MM]=bNc
set MM=MM+1
if Vk[lNc]==0 then
if lNc==0 then
call Mau("Nullpointer exception when calling RectCellIterator.hasNext","when calling error in RectCellIterator, line 31")
else
call Mau("Called RectCellIterator.hasNext on invalid object.","when calling error in RectCellIterator, line 31")
endif
endif
set yNc=Ibt(lNc)
set MM=MM-1
return yNc
endfunction
function L8S takes integer H8S,string J8S returns boolean
local boolean K8S
set w3[MM]=J8S
set MM=MM+1
set K8S=pNc(CC[H8S],"when calling hasNext in TerrainData, line 76")
set MM=MM-1
return K8S
endfunction
function N0t takes integer C0t,string V0t returns boolean
local boolean B0t
set w3[MM]=V0t
set MM=MM+1
set B0t=qA[vA[C0t]]<OA[vA[C0t]]and Pxc(sA[vA[C0t]],"when calling getRemainingWrite in NetworkData, line 357")>0
set MM=MM-1
return B0t
endfunction
function bIs takes integer oIs,string OIs returns boolean
local boolean lIs
set w3[MM]=OIs
set MM=MM+1
set lIs=aQc(oIs,0,"when calling hasRemainingData in HashData, line 211")
set MM=MM-1
return lIs
endfunction
function GWc takes integer RWc,string TWc returns boolean
local boolean YWc
set w3[MM]=TWc
set MM=MM+1
if FY[RWc]==0 then
if RWc==0 then
call Mau("Nullpointer exception when calling HashReader.hasInt","when calling error in HashData, line 210")
else
call Mau("Called HashReader.hasInt on invalid object.","when calling error in HashData, line 210")
endif
endif
set YWc=bIs(RWc,"when calling hasInt in HashData, line 210")
set MM=MM-1
return YWc
endfunction
function O3i takes integer S3i,string c3i returns boolean
local boolean o3i
set w3[MM]=c3i
set MM=MM+1
set o3i=GWc(MX[bC[S3i]],"when calling hasInt in StringEncoder, line 112")
set MM=MM-1
return o3i
endfunction
function UWs takes integer ZWs returns boolean
return EZ[PZ[ZWs]]<=mZ[PZ[ZWs]]
endfunction
function Vrt takes integer Lrt,string Xrt returns boolean
local boolean Crt
set w3[MM]=Xrt
set MM=MM+1
set Crt=yD[hD[Lrt]]<SD[hD[Lrt]]and Jxc(wD[hD[Lrt]],"when calling getRemainingRead in Network, line 354")>0
set MM=MM-1
return Crt
endfunction
function W_t takes integer v_t,string m_t returns boolean
local boolean Q_t
set w3[MM]=m_t
set MM=MM+1
set Q_t=nA[DA[v_t]]<bA[DA[v_t]]and Jxc(iA[DA[v_t]],"when calling getRemainingRead in NetworkData, line 387")>0
set MM=MM-1
return Q_t
endfunction
function Wrt takes integer vrt,string mrt returns boolean
local boolean Qrt
set w3[MM]=mrt
set MM=MM+1
set Qrt=bD[TD[vrt]]<iD[TD[vrt]]and Jxc(MA[TD[vrt]],"when calling getRemainingRead in Network, line 342")>0
set MM=MM-1
return Qrt
endfunction
function Yls takes integer Tls returns boolean
return ey<=qy
endfunction
function Z0t takes integer Q0t,string W0t returns boolean
local boolean E0t
set w3[MM]=W0t
set MM=MM+1
set E0t=eA[FA[Q0t]]<oA[FA[Q0t]]and Pxc(rA[FA[Q0t]],"when calling getRemainingWrite in NetworkData, line 345")>0
set MM=MM-1
return E0t
endfunction
function wBi takes integer BVi,string NVi returns boolean
local boolean MVi
set w3[MM]=NVi
set MM=MM+1
set MVi=luo(BVi,"when calling isDataAvailable in StringBuffer, line 108")
set MM=MM-1
return MVi
endfunction
function euo takes integer buo,string yuo returns boolean
local boolean puo
set w3[MM]=yuo
set MM=MM+1
if qG[buo]==0 then
if buo==0 then
call Mau("Nullpointer exception when calling AbstractStringBuffer.canRead","when calling error in StringBuffer, line 107")
else
call Mau("Called AbstractStringBuffer.canRead on invalid object.","when calling error in StringBuffer, line 107")
endif
endif
set puo=wBi(buo,"when calling canRead in StringBuffer, line 107")
set MM=MM-1
return puo
endfunction
function dSt takes integer qSt,string aSt returns boolean
local boolean nSt
set w3[MM]=aSt
set MM=MM+1
set nSt=euo(LD[qSt],"when calling canRead in OrderedStringBuffer, line 190")
set MM=MM-1
return nSt
endfunction
function f_t takes integer a_t,string n_t returns boolean
local boolean d_t
set w3[MM]=n_t
set MM=MM+1
set d_t=aA[UA[a_t]]<lA[UA[a_t]]and Jxc(tA[UA[a_t]],"when calling getRemainingRead in NetworkData, line 375")>0
set MM=MM-1
return d_t
endfunction
function frt takes integer art,string nrt returns boolean
local boolean drt
set w3[MM]=nrt
set MM=MM+1
set drt=uQc(BA[nD[art]],"when calling hasString in Network, line 282")
set MM=MM-1
return drt
endfunction
function X6t takes integer J6t,string K6t returns boolean
local boolean L6t
set w3[MM]=K6t
set MM=MM+1
set L6t=uQc(IP[J6t],"when calling hasString in MultifileIO, line 249")
set MM=MM-1
return L6t
endfunction
function sJc takes integer wJc,string uJc returns boolean
local boolean rJc
set w3[MM]=uJc
set MM=MM+1
if VF[wJc]==0 then
if wJc==0 then
call Mau("Nullpointer exception when calling FileReader.canRead","when calling error in MultifileIO, line 248")
else
call Mau("Called FileReader.canRead on invalid object.","when calling error in MultifileIO, line 248")
endif
endif
set rJc=X6t(wJc,"when calling canRead in MultifileIO, line 248")
set MM=MM-1
return rJc
endfunction
function ges takes integer Tes,string Yes returns boolean
local boolean Ges
set w3[MM]=Yes
set MM=MM+1
set Ges=sJc(PQ[Tes],"when calling canRead in BufferAdapters, line 25")
set MM=MM-1
return Ges
endfunction
function gst takes integer Tst,string Yst returns boolean
local boolean Gst
set w3[MM]=Yst
set MM=MM+1
set Gst=eD[WD[Tst]]<oD[WD[Tst]]and Jxc(rD[WD[Tst]],"when calling getRemainingRead in Network, line 378")>0
set MM=MM-1
return Gst
endfunction
function i_t takes integer r_t,string s_t returns boolean
local boolean t_t
set w3[MM]=s_t
set MM=MM+1
set t_t=qA[QA[r_t]]<OA[QA[r_t]]and Jxc(sA[QA[r_t]],"when calling getRemainingRead in NetworkData, line 363")>0
set MM=MM-1
return t_t
endfunction
function j0t takes integer h0t,string F0t returns boolean
local boolean k0t
set w3[MM]=F0t
set MM=MM+1
set k0t=kWc(wA[gA[h0t]],"when calling hasString in NetworkData, line 298")
set MM=MM-1
return k0t
endfunction
function lst takes integer cst,string ost returns boolean
local boolean Ost
set w3[MM]=ost
set MM=MM+1
set Ost=pD[xD[cst]]<cD[xD[cst]]and Jxc(uD[xD[cst]],"when calling getRemainingRead in Network, line 366")>0
set MM=MM-1
return Ost
endfunction
function mes takes integer jes,string xes returns boolean
local boolean ves
set w3[MM]=xes
set MM=MM+1
set ves=Juo(HQ[jes],"when calling hasChunk in BufferAdapters, line 29")
set MM=MM-1
return ves
endfunction
function nes takes integer ees,string qes returns boolean
local boolean aes
set w3[MM]=qes
set MM=MM+1
set aes=euo(ZQ[ees],"when calling canRead in BufferAdapters, line 21")
set MM=MM-1
return aes
endfunction
function nst takes integer est,string qst returns boolean
local boolean ast
set w3[MM]=qst
set MM=MM+1
set ast=eD[mD[est]]<oD[mD[est]]and Pxc(rD[mD[est]],"when calling getRemainingWrite in Network, line 372")>0
set MM=MM-1
return ast
endfunction
function r3i takes integer MMi,string w3i returns boolean
local boolean u3i
set w3[MM]=w3i
set MM=MM+1
set u3i=kWc(MX[OC[MMi]],"when calling hasString in StringEncoder, line 105")
set MM=MM-1
return u3i
endfunction
function sst takes integer wst,string ust returns boolean
local boolean rst
set w3[MM]=ust
set MM=MM+1
set rst=pD[kD[wst]]<cD[kD[wst]]and Pxc(uD[kD[wst]],"when calling getRemainingWrite in Network, line 360")>0
set MM=MM-1
return rst
endfunction
function sys takes integer rys returns boolean
return ey<=qy
endfunction
function v8S takes integer k8S,string j8S returns boolean
local boolean x8S
set w3[MM]=j8S
set MM=MM+1
set x8S=pNc(JC[k8S],"when calling hasNext in TerrainData, line 58")
set MM=MM-1
return x8S
endfunction
function y_t takes integer O_t,string l_t returns boolean
local boolean b_t
set w3[MM]=l_t
set MM=MM+1
set b_t=aA[EA[O_t]]<lA[EA[O_t]]and Pxc(tA[EA[O_t]],"when calling getRemainingWrite in NetworkData, line 369")>0
set MM=MM-1
return b_t
endfunction
function yxc takes integer Oxc,string lxc returns boolean
local boolean bxc
set w3[MM]=lxc
set MM=MM+1
if PY[Oxc]==0 then
if Oxc==0 then
call Mau("Nullpointer exception when calling LimitedExecuteCondition.check","when calling error in Execute, line 105")
else
call Mau("Called LimitedExecuteCondition.check on invalid object.","when calling error in Execute, line 105")
endif
endif
if PY[Oxc]<=1374 then
if PY[Oxc]<=1365 then
if PY[Oxc]<=1361 then
if PY[Oxc]<=1359 then
if PY[Oxc]<=1358 then
if PY[Oxc]<=1357 then
set bxc=Yls(Oxc)
else
set bxc=nes(Oxc,"when calling check_executeWhile_BufferAdapters in Execute, line 105")
endif
else
set bxc=ges(Oxc,"when calling check_executeWhile_BufferAdapters in Execute, line 105")
endif
elseif PY[Oxc]<=1360 then
set bxc=mes(Oxc,"when calling check_executeWhile_BufferAdapters in Execute, line 105")
else
set bxc=UWs(Oxc)
endif
elseif PY[Oxc]<=1363 then
if PY[Oxc]<=1362 then
set bxc=frt(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
else
set bxc=Frt(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
endif
elseif PY[Oxc]<=1364 then
set bxc=Wrt(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
else
set bxc=Drt(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
endif
elseif PY[Oxc]<=1370 then
if PY[Oxc]<=1368 then
if PY[Oxc]<=1367 then
if PY[Oxc]<=1366 then
set bxc=Vrt(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
else
set bxc=sst(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
endif
else
set bxc=lst(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
endif
elseif PY[Oxc]<=1369 then
set bxc=nst(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
else
set bxc=gst(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
endif
elseif PY[Oxc]<=1372 then
if PY[Oxc]<=1371 then
set bxc=Ist(Oxc,"when calling check_executeWhile_Network_Network in Execute, line 105")
else
set bxc=j0t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
endif
elseif PY[Oxc]<=1373 then
set bxc=Z0t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
else
set bxc=J0t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
endif
elseif PY[Oxc]<=1383 then
if PY[Oxc]<=1379 then
if PY[Oxc]<=1377 then
if PY[Oxc]<=1376 then
if PY[Oxc]<=1375 then
set bxc=N0t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
else
set bxc=i_t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
endif
else
set bxc=y_t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
endif
elseif PY[Oxc]<=1378 then
set bxc=f_t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
else
set bxc=F_t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
endif
elseif PY[Oxc]<=1381 then
if PY[Oxc]<=1380 then
set bxc=W_t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
else
set bxc=C_t(Oxc,"when calling check_executeWhile_Network_NetworkData in Execute, line 105")
endif
elseif PY[Oxc]<=1382 then
set bxc=dSt(Oxc,"when calling check_executeWhile_OrderedStringBuffer_OrderedStringBuffer in Execute, line 105")
else
set bxc=HwS(Oxc,"when calling check_executeWhile_PositionedUnitData_UnitData in Execute, line 105")
endif
elseif PY[Oxc]<=1387 then
if PY[Oxc]<=1385 then
if PY[Oxc]<=1384 then
set bxc=CwS(Oxc)
else
set bxc=HMi(Oxc)
endif
elseif PY[Oxc]<=1386 then
set bxc=CMi(Oxc)
else
set bxc=r3i(Oxc,"when calling check_executeWhile_StringEncoder_StringEncoder in Execute, line 105")
endif
elseif PY[Oxc]<=1389 then
if PY[Oxc]<=1388 then
set bxc=O3i(Oxc,"when calling check_executeWhile_StringEncoder_StringEncoder in Execute, line 105")
else
set bxc=v8S(Oxc,"when calling check_executeWhile_SubRectTileData_TerrainData in Execute, line 105")
endif
elseif PY[Oxc]<=1390 then
set bxc=L8S(Oxc,"when calling check_executeWhile_SubRectTileData_TerrainData in Execute, line 105")
else
set bxc=sys(Oxc)
endif
set MM=MM-1
return bxc
endfunction
function Zvs takes integer Qvs,string Wvs returns nothing
local integer Evs
set w3[MM]=Wvs
set MM=MM+1
set Evs=0
loop
exitwhen not(yxc(OZ[Qvs],"when calling check in Execute, line 113")and Evs<lZ[Qvs])
call ixc(bZ[Qvs],"when calling run in Execute, line 114")
set Evs=Evs+1
endloop
if yxc(OZ[Qvs],"when calling check in Execute, line 118")then
call Bnu(lZ[Qvs],OZ[Qvs],bZ[Qvs],"when calling executeWhileInternal in Execute, line 119")
endif
set MM=MM-1
endfunction
function Kgr takes string Dgr returns nothing
local integer Hgr
local integer Jgr
set w3[MM]=Dgr
set MM=MM+1
set Hgr=0
set Jgr=mR-1
loop
exitwhen Hgr>Jgr
if Egr(xgr(Hgr,"when calling getCharFromIndex in StringEncoder, line 46"),"when calling getIndexFromChar in StringEncoder, line 46")!=Hgr then
call QZu("CollisionTest failed for "+tgu(Hgr)+" "+xgr(Hgr,"when calling getCharFromIndex in StringEncoder, line 47"))
call QZu("getIndexFromChar() == "+tgu(Egr(xgr(Hgr,"when calling getCharFromIndex in StringEncoder, line 48"),"when calling getIndexFromChar in StringEncoder, line 48")))
call QZu("getCharFromIndex(getIndexFromChar)) == "+xgr(Egr(xgr(Hgr,"when calling getCharFromIndex in StringEncoder, line 49"),"when calling getIndexFromChar in StringEncoder, line 49"),"when calling getCharFromIndex in StringEncoder, line 49"))
call QZu("This is a BAD thing and you should report it to wurst devs!")
endif
set Hgr=Hgr+1
endloop
set MM=MM-1
endfunction
function aNi takes integer eNi,string qNi returns nothing
set w3[MM]=qNi
set MM=MM+1
call Kgr("when calling testCollisions in StringEncoder, line 54")
set MM=MM-1
endfunction
function SCu takes unit sCu,real tCu,real iCu returns string
call kJu(sCu)
call IsHeroUnitId(S7s(sCu))
return""
endfunction
function aZi takes integer qZi returns nothing
call ynr(SCu(IL[qZi],rgu(pUu((SIu(PL[qZi])-64.)/128.))*128.+64.,rgu(pUu((oIu(PL[qZi])-64.)/128.))*128.+64.))
endfunction
function j7t takes integer k7t returns integer
return MP[k7t]
endfunction
function gJc takes integer TJc,string YJc returns integer
local integer GJc
set w3[MM]=YJc
set MM=MM+1
if rk[TJc]==0 then
if TJc==0 then
call Mau("Nullpointer exception when calling Network.getWriter","when calling error in NetworkData, line 268")
else
call Mau("Called Network.getWriter on invalid object.","when calling error in NetworkData, line 268")
endif
endif
set GJc=j7t(TJc)
set MM=MM-1
return GJc
endfunction
function yZs takes integer bZs returns nothing
endfunction
function TZs takes integer dZs,integer fZs,integer RZs returns nothing
call yZs(dZs)
set sU[dZs]=fZs
set tU[dZs]=RZs
endfunction
function bkS takes string OkS returns integer
local integer lkS
set w3[MM]=OkS
set MM=MM+1
if gY==0 then
if hY<32768 then
set hY=hY+1
set lkS=hY
set FY[lkS]=712
else
call Mau("Out of memory: Could not create HashDataProxyReader.","when calling error in HashData, line 228")
set lkS=0
endif
else
set gY=gY-1
set lkS=GY[gY]
set FY[lkS]=712
endif
set MM=MM-1
return lkS
endfunction
function nZs takes integer pZs,integer eZs,string qZs returns integer
local integer aZs
set w3[MM]=qZs
set MM=MM+1
set aZs=bkS("when calling alloc_HashDataProxyReader in HashData, line 232")
call TZs(aZs,pZs,eZs)
set MM=MM-1
return aZs
endfunction
function cZs takes integer tZs,integer iZs,string SZs returns nothing
set w3[MM]=SZs
set MM=MM+1
call yFc(iZs,tZs,"when calling deserialize in HashData, line 274")
set MM=MM-1
endfunction
function oQc takes integer iQc,integer SQc,string cQc returns nothing
set w3[MM]=cQc
set MM=MM+1
if FY[iQc]==0 then
if iQc==0 then
call Mau("Nullpointer exception when calling HashDataProxyReader.readSerializable","when calling error in HashData, line 273")
else
call Mau("Called HashDataProxyReader.readSerializable on invalid object.","when calling error in HashData, line 273")
endif
endif
call cZs(iQc,SQc,"when calling readSerializable in HashData, line 273")
set MM=MM-1
endfunction
function tQc takes integer rQc,string sQc returns nothing
set w3[MM]=sQc
set MM=MM+1
if FY[rQc]==0 then
if rQc==0 then
call Mau("Nullpointer exception when calling HashDataProxyReader.HashDataProxyReader","when calling error in HashData, line 228")
else
call Mau("Called HashDataProxyReader.HashDataProxyReader on invalid object.","when calling error in HashData, line 228")
endif
endif
call lZs(rQc,"when calling destroyHashDataProxyReader in HashData, line 228")
set MM=MM-1
endfunction
function cot takes integer tot,string iot returns nothing
local integer Sot
set w3[MM]=iot
set MM=MM+1
set Sot=nZs(gJc(wH[tot],"when calling getWriter in PersistableData, line 99"),uH[tot],"when calling new_HashDataProxyReader in PersistableData, line 99")
call oQc(Sot,rH[tot],"when calling readSerializable in PersistableData, line 100")
call tQc(Sot,"when calling dispatch_HashDataProxyReader_destroyHashDataProxyReader in PersistableData, line 101")
set MM=MM-1
endfunction
function kks takes integer gks,integer hks,string Fks returns nothing
set w3[MM]=Fks
set MM=MM+1
call aFc(hks,QE[gks],"when calling writeByte in DestructableData, line 146")
if Jpu(QE[gks],7)then
call aFc(hks,WE[gks],"when calling writeByte in DestructableData, line 148")
endif
call XZu(hks,mE[gks],EE[gks],"when calling writeRawcodeTableIndex in DestructableData, line 149")
call yEu(hks,ZE[gks],UE[gks],"when calling writePointData in DestructableData, line 151")
if Jpu(QE[gks],2)then
if Jpu(QE[gks],1)then
call jFc(hks,IE[gks],"when calling writeReal in DestructableData, line 154")
else
call RFc(hks,qUu(IE[gks]*10.)+32767,"when calling writeShort in DestructableData, line 156")
endif
elseif Jpu(QE[gks],1)then
call aFc(hks,qUu(IE[gks]),"when calling writeByte in DestructableData, line 158")
endif
call RFc(hks,qUu(PE[gks]*180.),"when calling writeShort in DestructableData, line 159")
if Jpu(QE[gks],4)then
if Jpu(QE[gks],3)then
call jFc(hks,AE[gks],"when calling writeReal in DestructableData, line 163")
else
call RFc(hks,qUu(AE[gks]*10.)+32767,"when calling writeShort in DestructableData, line 165")
endif
elseif Jpu(QE[gks],3)then
call aFc(hks,qUu(AE[gks]),"when calling writeByte in DestructableData, line 167")
endif
if(not Jpu(QE[gks],5))and(not Jpu(QE[gks],6))then
call aFc(hks,DE[gks],"when calling writeByte in DestructableData, line 170")
endif
set MM=MM-1
endfunction
function Dkc takes integer Ikc,integer Pkc,string Akc returns nothing
set w3[MM]=Akc
set MM=MM+1
if Dg[Ikc]==0 then
if Ikc==0 then
call Mau("Nullpointer exception when calling SingleDestructableData.serialize","when calling error in DestructableData, line 145")
else
call Mau("Called SingleDestructableData.serialize on invalid object.","when calling error in DestructableData, line 145")
endif
endif
call kks(Ikc,Pkc,"when calling serialize in DestructableData, line 145")
set MM=MM-1
endfunction
function eFs takes integer yFs,string pFs returns nothing
set w3[MM]=pFs
set MM=MM+1
call Dkc(qE[yFs],aE[yFs],"when calling serialize in DestructableData, line 249")
set MM=MM-1
endfunction
function Jws takes integer Hws returns integer
return Hws
endfunction
function fBs takes integer qBs,string aBs returns nothing
local integer nBs
local integer dBs
set w3[MM]=aBs
set MM=MM+1
set nBs=0
set dBs=dI[qBs]-1
loop
exitwhen nBs>dBs
call aFc(fI[qBs],Jws(Pws(RI[qBs],nBs,"when calling utf8CodeUnitAt in LegacyStringTable, line 35")),"when calling writeByte in LegacyStringTable, line 35")
set nBs=nBs+1
endloop
set MM=MM-1
endfunction
function dPs takes integer aPs,string nPs returns nothing
set w3[MM]=nPs
set MM=MM+1
call hco(eU[aPs],"when calling flush in HashData, line 56")
set MM=MM-1
endfunction
function pEc takes integer bEc,string yEc returns nothing
set w3[MM]=yEc
set MM=MM+1
if vY[bEc]==0 then
if bEc==0 then
call Mau("Nullpointer exception when calling HashWriter.clear","when calling error in HashData, line 55")
else
call Mau("Called HashWriter.clear on invalid object.","when calling error in HashData, line 55")
endif
endif
call dPs(bEc,"when calling clear in HashData, line 55")
set MM=MM-1
endfunction
function bot takes integer oot,integer Oot,string lot returns nothing
set w3[MM]=lot
set MM=MM+1
call pEc(Oot,"when calling clear in PersistableData, line 114")
call XWc(Oot,VM[sH[oot]],"when calling writeInt in PersistableData, line 115")
set MM=MM-1
endfunction
function sot takes integer wot,integer uot,string rot returns nothing
set w3[MM]=rot
set MM=MM+1
call XWc(uot,0,"when calling writeInt in PersistableData, line 96")
set MM=MM-1
endfunction
function QKc takes integer xKc,integer vKc,string mKc returns nothing
set w3[MM]=mKc
set MM=MM+1
if lk[xKc]==0 then
if xKc==0 then
call Mau("Nullpointer exception when calling NetworkWriteCallback.onWrite","when calling error in NetworkData, line 202")
else
call Mau("Called NetworkWriteCallback.onWrite on invalid object.","when calling error in NetworkData, line 202")
endif
endif
if lk[xKc]<=1412 then
call sot(xKc,vKc,"when calling onWrite_write_Persistable_PersistableData in NetworkData, line 202")
else
call bot(xKc,vKc,"when calling onWrite_write_Persistable_PersistableData in NetworkData, line 202")
endif
set MM=MM-1
endfunction
function g0t takes integer Y0t,string G0t returns nothing
set w3[MM]=G0t
set MM=MM+1
call QKc(YA[Y0t],MP[GA[Y0t]],"when calling onWrite in NetworkData, line 276")
set MM=MM-1
endfunction
function EyS takes integer myS,integer QyS,string WyS returns nothing
set w3[MM]=WyS
set MM=MM+1
call yEu(QyS,bN[myS],yN[myS],"when calling writePointData in UnitTypeData, line 1334")
call RFc(QyS,qUu(pN[myS]*180.),"when calling writeShort in UnitTypeData, line 1335")
set MM=MM-1
endfunction
function fpo takes integer apo,integer npo,string dpo returns nothing
set w3[MM]=dpo
set MM=MM+1
if Om[apo]==0 then
if apo==0 then
call Mau("Nullpointer exception when calling SingleUnitData.serialize","when calling error in UnitTypeData, line 1333")
else
call Mau("Called SingleUnitData.serialize on invalid object.","when calling error in UnitTypeData, line 1333")
endif
endif
call EyS(apo,npo,"when calling serialize in UnitTypeData, line 1333")
set MM=MM-1
endfunction
function gpS takes integer YpS,string GpS returns nothing
set w3[MM]=GpS
set MM=MM+1
call fpo(RN[YpS],TN[YpS],"when calling serialize in UnitTypeData, line 1385")
set MM=MM-1
endfunction
function hBs takes integer RBs,string TBs returns nothing
local integer YBs
local integer GBs
local string gBs
set w3[MM]=TBs
set MM=MM+1
set YBs=0
set GBs=TI[RBs]-1
loop
exitwhen YBs>GBs
set gBs=eI[YI[RBs]]
call Rgo(0,GI[RBs],"when calling readByte in LegacyStringTable, line 42")
set eI[YI[RBs]]=gBs+Dws(Xws(inw,"when calling toUtf8CodeUnit in LegacyStringTable, line 42"))
set YBs=YBs+1
endloop
set MM=MM-1
endfunction
function hSt takes integer YSt returns nothing
local integer GSt=1
local integer gSt=Vq
loop
exitwhen GSt>gSt
call BlzSetAbilityTooltip(Cq,"END OF FILE",GSt)
set GSt=GSt+1
endloop
endfunction
function epc takes string ypc returns integer
local integer ppc
set w3[MM]=ypc
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set ppc=NY
set MY[ppc]=789
else
call Mau("Out of memory: Could not create ForForceCallback_execute_execute_UnitData_UnitTypeData.","when calling error in UnitTypeData, line 1402")
set ppc=0
endif
else
set BY=BY-1
set ppc=VY[BY]
set MY[ppc]=789
endif
set MM=MM-1
return ppc
endfunction
function mpS takes integer hpS,string FpS returns nothing
local integer kpS
local integer jpS
local integer xpS
local integer vpS
set w3[MM]=FpS
set MM=MM+1
if j5r(nN[YN[hpS]],0)then
if j5r(nN[YN[hpS]],1)then
call ego(0,GN[hpS],"when calling readInt in UnitTypeData, line 1396")
set kpS=inw
else
call Fgo(0,GN[hpS],"when calling readShort in UnitTypeData, line 1398")
set kpS=inw
endif
else
call Rgo(0,GN[hpS],"when calling readByte in UnitTypeData, line 1400")
set kpS=inw
endif
set jpS=0
set xpS=kpS-1
loop
exitwhen jpS>xpS
set vpS=epc("when calling alloc_ForForceCallback_execute_execute_UnitData_UnitTypeData in UnitTypeData, line 1402")
set gN[vpS]=YN[hpS]
set hN[vpS]=GN[hpS]
call Inu(vpS,"when calling execute in UnitTypeData, line 1402")
set jpS=jpS+1
endloop
set MM=MM-1
endfunction
function ZxS takes string WxS returns integer
local integer ExS
set w3[MM]=WxS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set ExS=NY
set MY[ExS]=786
else
call Mau("Out of memory: Could not create ForForceCallback_execute_execute_LegacyPositionedUnitData_LegacyUnitData.","when calling error in LegacyUnitData, line 404")
set ExS=0
endif
else
set BY=BY-1
set ExS=VY[BY]
set MY[ExS]=786
endif
set MM=MM-1
return ExS
endfunction
function nNs takes integer bNs,string yNs returns nothing
local integer pNs
local integer eNs
local integer qNs
local integer aNs
set w3[MM]=yNs
set MM=MM+1
call ego(0,FI[bNs],"when calling readInt in LegacyUnitData, line 401")
set pNs=inw
call nZu(pNs)
set eNs=0
set qNs=pNs-1
loop
exitwhen eNs>qNs
set aNs=ZxS("when calling alloc_ForForceCallback_execute_execute_LegacyPositionedUnitData_LegacyUnitData in LegacyUnitData, line 404")
set jI[aNs]=kI[bNs]
set xI[aNs]=FI[bNs]
call Inu(aNs,"when calling execute in LegacyUnitData, line 404")
set eNs=eNs+1
endloop
set MM=MM-1
endfunction
function Agr takes string Zgr returns nothing
local integer Ugr
local integer Igr
local string Pgr
set w3[MM]=Zgr
set MM=MM+1
set Ugr=0
set Igr=mR-1
loop
exitwhen Ugr>Igr
set Pgr=Mhr(vR,Ugr)
if(bFr(Pgr)==Pgr and OFr(Pgr)!=Pgr)or Pgr=="/" then
call KZc(QR,DFr("00"+Pgr),Ugr,"when calling put in StringEncoder, line 38")
else
call KZc(QR,DFr(Pgr),Ugr,"when calling put in StringEncoder, line 40")
endif
set Ugr=Ugr+1
endloop
set MM=MM-1
endfunction
function pNi takes integer bNi,string yNi returns nothing
set w3[MM]=yNi
set MM=MM+1
call Agr("when calling precomputeLookup in StringEncoder, line 53")
set MM=MM-1
endfunction
function qyi takes integer byi,string yyi returns nothing
local integer pyi
local integer eyi
set w3[MM]=yyi
set MM=MM+1
call x2o(lL[byi],bL[byi],"when calling setEnumUnit in ScmdUnitBuiltins, line 192")
call NFo(3,N1o(yL[byi],1,"when calling get in ScmdUnitBuiltins, line 193"),lL[byi],"when calling evaluate in ScmdUnitBuiltins, line 193",0,null,0,null)
set pyi=inw
set eyi=px[f7o(pyi,"when calling get in ScmdUnitBuiltins, line 194")]
if eyi>=1422 and eyi<=1423 then
call q7o(pL[byi],pyi,"when calling swap in ScmdUnitBuiltins, line 195")
call KGo(5,pyi,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdUnitBuiltins, line 196")
else
call KGo(5,pyi,"when calling dispatch_GenericSharedPointer_destroyGenericSharedPointer in ScmdUnitBuiltins, line 198")
endif
set MM=MM-1
endfunction
function Eds takes integer Wds returns integer
return FW[Wds]
endfunction
function OGc takes integer SGc,string cGc returns integer
local integer oGc
set w3[MM]=cGc
set MM=MM+1
if VG[SGc]==0 then
if SGc==0 then
call Mau("Nullpointer exception when calling ByteBuffer.getByteCount","when calling error in ByteBuffer, line 96")
else
call Mau("Called ByteBuffer.getByteCount on invalid object.","when calling error in ByteBuffer, line 96")
endif
endif
set oGc=Eds(SGc)
set MM=MM-1
return oGc
endfunction
function bGS takes string OGS returns integer
local integer lGS
set w3[MM]=OGS
set MM=MM+1
if DY==0 then
if HY<32768 then
set HY=HY+1
set lGS=HY
set JY[lGS]=1355
else
call Mau("Out of memory: Could not create LimitedExecuteAction_executeWhile_execute_Base64Encoder_Base64.","when calling error in Base64, line 149")
set lGS=0
endif
else
set DY=DY-1
set lGS=AY[DY]
set JY[lGS]=1355
endif
set MM=MM-1
return lGS
endfunction
function wbs takes integer Cls,string Vls returns nothing
local integer Bls
local integer Nls
local integer Mls
set w3[MM]=Vls
set MM=MM+1
set Bls=XYc(gQ[Cls],"when calling readByte in Base64, line 121")
set Nls=XYc(gQ[Cls],"when calling readByte in Base64, line 122")
set Mls=Nru(Bls,16)+Nru(Nls,8)
call ddc(Cls,Mls,2,"when calling encodeSingle in Base64, line 124")
call pdc(Cls,"=","when calling append in Base64, line 125")
set MM=MM-1
endfunction
function gdc takes integer Ydc,string Gdc returns nothing
set w3[MM]=Gdc
set MM=MM+1
if CY[Ydc]==0 then
if Ydc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.encode2","when calling error in Base64, line 120")
else
call Mau("Called Base64Encoder.encode2 on invalid object.","when calling error in Base64, line 120")
endif
endif
call wbs(Ydc,"when calling encode2 in Base64, line 120")
set MM=MM-1
endfunction
function ibs takes integer ubs,string rbs returns nothing
local integer sbs
local integer tbs
set w3[MM]=rbs
set MM=MM+1
set sbs=XYc(gQ[ubs],"when calling readByte in Base64, line 128")
set tbs=Nru(sbs,16)
call ddc(ubs,tbs,1,"when calling encodeSingle in Base64, line 130")
call pdc(ubs,"=","when calling append in Base64, line 131")
call pdc(ubs,"=","when calling append in Base64, line 132")
set MM=MM-1
endfunction
function kdc takes integer hdc,string Fdc returns nothing
set w3[MM]=Fdc
set MM=MM+1
if CY[hdc]==0 then
if hdc==0 then
call Mau("Nullpointer exception when calling Base64Encoder.encode1","when calling error in Base64, line 127")
else
call Mau("Called Base64Encoder.encode1 on invalid object.","when calling error in Base64, line 127")
endif
endif
call ibs(hdc,"when calling encode1 in Base64, line 127")
set MM=MM-1
endfunction
function oGS takes string SGS returns integer
local integer cGS
set w3[MM]=SGS
set MM=MM+1
if UY==0 then
if IY<32768 then
set IY=IY+1
set cGS=IY
set PY[cGS]=1391
else
call Mau("Out of memory: Could not create LimitedExecuteCondition_executeWhile_execute_Base64Encoder_Base64.","when calling error in Base64, line 149")
set cGS=0
endif
else
set UY=UY-1
set cGS=ZY[UY]
set PY[cGS]=1391
endif
set MM=MM-1
return cGS
endfunction
function uys takes integer Kbs,string Lbs returns nothing
local integer Xbs
local integer Cbs
local integer Vbs
local integer Bbs
local integer Nbs
local integer Mbs
local integer wys
set w3[MM]=Lbs
set MM=MM+1
call iGc(gQ[hQ[Kbs]],"when calling toReadMode in Base64, line 139")
set Xbs=OGc(gQ[hQ[Kbs]],"when calling getByteCount in Base64, line 141")
set Cbs=OGc(gQ[hQ[Kbs]],"when calling getByteCount in Base64, line 143")/3-1
set Vbs=ModuloInteger(Xbs,3)
set qy=Cbs
set ey=0
set Mbs=yy
set Bbs=oGS("when calling alloc_LimitedExecuteCondition_executeWhile_execute_Base64Encoder_Base64 in Base64, line 149")
set wys=Bbs
set Nbs=bGS("when calling alloc_LimitedExecuteAction_executeWhile_execute_Base64Encoder_Base64 in Base64, line 149")
set FQ[Nbs]=hQ[Kbs]
call rdu(Mbs,wys,Nbs,"when calling executeWhile in Base64, line 149")
if Vbs==2 then
call gdc(hQ[Kbs],"when calling encode2 in Base64, line 154")
endif
if Vbs==1 then
call kdc(hQ[Kbs],"when calling encode1 in Base64, line 157")
endif
set MM=MM-1
endfunction
function x1i takes integer h1i,string F1i returns nothing
local integer k1i
local integer j1i
set w3[MM]=F1i
set MM=MM+1
set k1i=0
set j1i=dC[h1i]-1
loop
exitwhen k1i>j1i
call aFc(fC[h1i],Jws(Pws(RC[h1i],k1i,"when calling utf8CodeUnitAt in StringTable, line 68")),"when calling writeByte in StringTable, line 68")
set k1i=k1i+1
endloop
set MM=MM-1
endfunction
function xJs takes integer kJs,string jJs returns nothing
set w3[MM]=jJs
set MM=MM+1
call HUc(FU[xU[kJs]],"when calling run in IOTaskExecutor, line 68")
set MM=MM-1
endfunction
function oTc takes integer STc,integer cTc returns nothing
endfunction
function Pes takes integer Zes,integer Ues,string Ies returns nothing
set w3[MM]=Ies
set MM=MM+1
call xRc(Zes,"when calling checkWrite in BufferInterface, line 171")
call oTc(Ues,Zes)
set MM=MM-1
endfunction
function URc takes integer WRc,integer ERc,string ZRc returns nothing
set w3[MM]=ZRc
set MM=MM+1
if qG[WRc]==0 then
if WRc==0 then
call Mau("Nullpointer exception when calling AbstractBuffer.write","when calling error in BufferInterface, line 170")
else
call Mau("Called AbstractBuffer.write on invalid object.","when calling error in BufferInterface, line 170")
endif
endif
call Pes(WRc,ERc,"when calling write in BufferInterface, line 170")
set MM=MM-1
endfunction
function yOt takes integer lOt,string bOt returns nothing
set w3[MM]=bOt
set MM=MM+1
call URc(GH[lOt],cH[gH[lOt]],"when calling write in Persistable, line 202")
set MM=MM-1
endfunction
function Mjc takes integer Bjc,string Njc returns nothing
set w3[MM]=Njc
set MM=MM+1
if MY[Bjc]==0 then
if Bjc==0 then
call Mau("Nullpointer exception when calling ForForceCallback.run","when calling error in Execute, line 10")
else
call Mau("Called ForForceCallback.run on invalid object.","when calling error in Execute, line 10")
endif
endif
if MY[Bjc]<=779 then
if MY[Bjc]<=770 then
if MY[Bjc]<=766 then
if MY[Bjc]<=764 then
if MY[Bjc]<=763 then
if MY[Bjc]<=762 then
call FJs(Bjc,"when calling run_execute_AbstractIOTaskExecutor_IOTaskExecutor in Execute, line 10")
else
call xJs(Bjc,"when calling run_execute_AbstractIOTaskExecutor_IOTaskExecutor in Execute, line 10")
endif
else
call uys(Bjc,"when calling run_execute_Base64Encoder_Base64 in Execute, line 10")
endif
elseif MY[Bjc]<=765 then
call Zvs(Bjc,"when calling run_execute_Execute in Execute, line 10")
else
call XWs(Bjc,"when calling run_execute_GamecacheKeys in Execute, line 10")
endif
elseif MY[Bjc]<=768 then
if MY[Bjc]<=767 then
call BWs(Bjc,"when calling run_execute_GamecacheKeys_GamecacheKeys in Execute, line 10")
else
call nNs(Bjc,"when calling run_execute_LegacyPositionedUnitData_LegacyUnitData in Execute, line 10")
endif
elseif MY[Bjc]<=769 then
call Wst(Bjc,"when calling run_execute_Network_Network in Execute, line 10")
else
call T0t(Bjc,"when calling run_execute_Network_NetworkData in Execute, line 10")
endif
elseif MY[Bjc]<=775 then
if MY[Bjc]<=773 then
if MY[Bjc]<=772 then
if MY[Bjc]<=771 then
call J_t(Bjc,"when calling run_execute_Network_NetworkData in Execute, line 10")
else
call hSt(Bjc)
endif
else
call yOt(Bjc,"when calling run_execute_PersistentStore_Persistable in Execute, line 10")
endif
elseif MY[Bjc]<=774 then
call eFs(Bjc,"when calling run_execute_PositionedDestructableData_DestructableData in Execute, line 10")
else
call TFs(Bjc,"when calling run_execute_PositionedDestructableData_DestructableData in Execute, line 10")
endif
elseif MY[Bjc]<=777 then
if MY[Bjc]<=776 then
call aZi(Bjc)
else
call pNi(Bjc,"when calling run_execute_StringEncoder in Execute, line 10")
endif
elseif MY[Bjc]<=778 then
call aNi(Bjc,"when calling run_execute_StringEncoder in Execute, line 10")
else
call fBs(Bjc,"when calling run_execute_StringTable_LegacyStringTable in Execute, line 10")
endif
elseif MY[Bjc]<=788 then
if MY[Bjc]<=784 then
if MY[Bjc]<=782 then
if MY[Bjc]<=781 then
if MY[Bjc]<=780 then
call hBs(Bjc,"when calling run_execute_StringTable_LegacyStringTable in Execute, line 10")
else
call x1i(Bjc,"when calling run_execute_StringTable_StringTable in Execute, line 10")
endif
else
call Z1i(Bjc,"when calling run_execute_StringTable_StringTable in Execute, line 10")
endif
elseif MY[Bjc]<=783 then
call gpS(Bjc,"when calling run_execute_UnitData_UnitTypeData in Execute, line 10")
else
call mpS(Bjc,"when calling run_execute_UnitData_UnitTypeData in Execute, line 10")
endif
elseif MY[Bjc]<=786 then
if MY[Bjc]<=785 then
call HpS(Bjc,"when calling run_execute_UnitData_UnitTypeData in Execute, line 10")
else
call YNs(Bjc,"when calling run_execute_execute_LegacyPositionedUnitData_LegacyUnitData in Execute, line 10")
endif
elseif MY[Bjc]<=787 then
call g0t(Bjc,"when calling run_execute_execute_Network_NetworkData in Execute, line 10")
else
call FFs(Bjc,"when calling run_execute_execute_PositionedDestructableData_DestructableData in Execute, line 10")
endif
elseif MY[Bjc]<=793 then
if MY[Bjc]<=791 then
if MY[Bjc]<=790 then
if MY[Bjc]<=789 then
call UpS(Bjc,"when calling run_execute_execute_UnitData_UnitTypeData in Execute, line 10")
else
call qyi(Bjc,"when calling run_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in Execute, line 10")
endif
else
call Wyi(Bjc,"when calling run_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in Execute, line 10")
endif
elseif MY[Bjc]<=792 then
call XKi(Bjc,"when calling run_execute_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_SotfrpGuiRegions in Execute, line 10")
else
call Mct(Bjc,"when calling run_try_Persistable_PersistableData in Execute, line 10")
endif
elseif MY[Bjc]<=795 then
if MY[Bjc]<=794 then
call cot(Bjc,"when calling run_try_Persistable_PersistableData in Execute, line 10")
else
call Dot(Bjc,"when calling run_try_load_PersistentStore_Persistable in Execute, line 10")
endif
elseif MY[Bjc]<=796 then
call Kot(Bjc,"when calling run_try_load_PersistentStore_Persistable in Execute, line 10")
else
call OOt(Bjc)
endif
set MM=MM-1
endfunction
function knu takes nothing returns integer
return ce[oe-1]
endfunction
function xnu takes boolean jnu returns nothing
set Se[oe-1]=jnu
endfunction
function Fnu takes string hnu returns nothing
set w3[MM]=hnu
set MM=MM+1
set se=""
call Mjc(knu(),"when calling run in Execute, line 19")
call xnu(true)
set MM=MM-1
endfunction
function sTo takes nothing returns nothing
set MM=0
call Fnu("Execute, line 99")
endfunction
function rZw takes nothing returns boolean
if not(S2R(SubStringBJ(GetEventPlayerChatString(),8,10))<=400.00)then
return false
endif
if not(S2R(SubStringBJ(GetEventPlayerChatString(),8,10))>=(-400.00))then
return false
endif
return true
endfunction
function uZw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="height off")then
return false
endif
return true
endfunction
function wZw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(GetEventPlayerChatString()=="height on")then
return false
endif
return true
endfunction
function sZw takes nothing returns nothing
if wZw()then
set Vw=true
return
endif
if uZw()then
set Vw=false
return
endif
if rZw()then
set Gw[GetConvertedPlayerId(GetTriggerPlayer())]=S2R(SubStringBJ(GetEventPlayerChatString(),8,10))
call GetConvertedPlayerId(GetTriggerPlayer())
endif
endfunction
function sdu takes nothing returns boolean
call xmu(caw)
return true
endfunction
function shw takes nothing returns nothing
local integer rhw=GetSpellAbilityId()
if rhw==GO then
set rhw=gO
elseif rhw==hO then
set rhw=FO
elseif rhw==kO then
set rhw=jO
elseif rhw==xO then
set rhw=vO
elseif rhw==mO then
set rhw=QO
elseif rhw==WO then
set rhw=EO
else
return
endif
call Jgw(rhw,GetUnitAbilityLevel(GetSpellAbilityUnit(),GetSpellAbilityId()),"attackonce",GetSpellAbilityUnit())
endfunction
function sjw takes nothing returns boolean
if not(GetSpellAbilityId()==1093678680)then
return false
endif
return true
endfunction
function t2w takes nothing returns boolean
if GetSpellAbilityId()==1093683281 then
return true
endif
return false
endfunction
function t5w takes nothing returns nothing
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Bladestorm\\Bladestorm.mdx",GetSpellAbilityUnit(),"origin"))
endfunction
function t7w takes nothing returns nothing
local unit r7w=GetEnumUnit()
local unit s7w=CreateUnitAtLoc(Player(15),1747995215,GetUnitLoc(r7w),270.)
call UnitAddAbility(s7w,1093679194)
call SetUnitAbilityLevel(s7w,1093679194,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093679193))
call IssueTargetOrder(s7w,"polymorph",r7w)
call eRw(s7w,3.)
set r7w=null
set s7w=null
set r7w=null
set s7w=null
endfunction
function t8w takes nothing returns nothing
call SetUnitState(GetSpellAbilityUnit(),UNIT_STATE_MANA,GetUnitState(GetSpellAbilityUnit(),UNIT_STATE_MANA)+50.)
endfunction
function t9u takes nothing returns boolean
return GetSpellAbilityId()==1093678388
endfunction
function sCw takes nothing returns boolean
if not(GetEventPlayerChatString()=="item firefinbow")then
return false
endif
return true
endfunction
function tCw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAndTypeId(GetTriggerPlayer(),1747988528)
if sCw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],ucw)
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function tEw takes nothing returns nothing
call SetBlightRadiusLocBJ(true,GetEnumPlayer(),G,572.00)
endfunction
function tFw takes nothing returns nothing
local unit Nhw
local unit Mhw
local integer wFw
local integer uFw
local group rFw
local timer sFw
if GetSpellAbilityId()!=JO then
set Nhw=null
set Mhw=null
set rFw=null
set sFw=null
return
endif
set Nhw=GetSpellAbilityUnit()
set Mhw=GetSpellTargetUnit()
set uFw=GetHandleId(Nhw)
set wFw=LoadInteger(i,VO,uFw)
if wFw!=3 then
set sFw=ITw()
call SaveUnitHandle(i,NO,GetHandleId(sFw),Nhw)
call TimerStart(sFw,0.,false,rww_3901)
set sFw=null
call SaveInteger(i,VO,uFw,wFw+1)
endif
call nYw(XO,Nhw,4.)
set wFw=GetUnitAbilityLevel(Nhw,JO)
call Jgw(KO,wFw,"attackonce",Nhw)
call Jgw(LO,wFw,"attackonce",Mhw)
call SetWidgetLife(Mhw,GetWidgetLife(Mhw)+60*wFw)
set rFw=LoadGroupHandle(i,BO,uFw)
if rFw==null then
set rFw=CreateGroup()
call SaveGroupHandle(i,BO,uFw,rFw)
endif
call kYw(CO,Mhw)
call GroupAddUnit(rFw,Mhw)
call SaveUnitHandle(i,NO,GetHandleId(Mhw),Nhw)
call SaveInteger(i,MO,GetHandleId(Mhw),GetUnitAbilityLevel(Nhw,JO))
call nYw(CO,Mhw,8.)
set rFw=null
set Mhw=null
set Nhw=null
set Nhw=null
set Mhw=null
set rFw=null
set sFw=null
endfunction
function tLw takes nothing returns nothing
call UnitDamageTarget(Zr[kr[3]],GetEnumUnit(),75*(Qt[kr[3]]+1),true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
endfunction
function tNw takes nothing returns nothing
call GroupRemoveUnitSimple(GetSpellTargetUnit(),us)
call GroupRemoveUnitSimple(GetSpellTargetUnit(),ws)
call GroupRemoveUnitSimple(GetSpellTargetUnit(),St)
call GroupRemoveUnitSimple(GetSpellTargetUnit(),tt)
call GroupRemoveUnitSimple(GetSpellTargetUnit(),cs)
call GroupRemoveUnitSimple(GetSpellTargetUnit(),ys)
call GroupRemoveUnitSimple(GetSpellTargetUnit(),rs)
endfunction
function tPu takes nothing returns boolean
set Ha=1098019938
set Ja=15
return true
endfunction
function tPw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,4)=="item")then
return false
endif
return true
endfunction
function tQw takes nothing returns nothing
call KillUnit(GetEnumUnit())
endfunction
function QjS takes string vjS returns integer
local integer mjS
set w3[MM]=vjS
set MM=MM+1
if Wh==0 then
if Eh<32768 then
set Eh=Eh+1
set mjS=Eh
set Zh[mjS]=1305
else
call Mau("Out of memory: Could not create Iterator.","when calling error in LinkedListModule, line 71")
set mjS=0
endif
else
set Wh=Wh-1
set mjS=Qh[Wh]
set Zh[mjS]=1305
endif
set MM=MM-1
return mjS
endfunction
function kKs takes integer FKs returns nothing
set EU[FKs]=xe
endfunction
function vKs takes integer jKs,boolean xKs returns nothing
call kKs(jKs)
set ZU[jKs]=xKs
endfunction
function YKs takes boolean fKs,string RKs returns integer
local integer TKs
set w3[MM]=RKs
set MM=MM+1
set TKs=QjS("when calling alloc_Iterator in LinkedListModule, line 75")
call vKs(TKs,fKs)
set MM=MM-1
return TKs
endfunction
function cKs takes integer SKs returns nothing
endfunction
function lKs takes integer oKs,boolean OKs returns nothing
call cKs(oKs)
endfunction
function xjS takes string kjS returns integer
local integer jjS
set w3[MM]=kjS
set MM=MM+1
if vh==0 then
if mh<32768 then
set mh=mh+1
set jjS=mh
else
call Mau("Out of memory: Could not create BackIterator.","when calling error in LinkedListModule, line 93")
set jjS=0
endif
else
set vh=vh-1
set jjS=xh[vh]
endif
set MM=MM-1
return jjS
endfunction
function iKs takes boolean rKs,string sKs returns integer
local integer tKs
set w3[MM]=sKs
set MM=MM+1
set tKs=xjS("when calling alloc_BackIterator in LinkedListModule, line 97")
call lKs(tKs,rKs)
set MM=MM-1
return tKs
endfunction
function QGu takes string mGu returns boolean
set w3[MM]=mGu
set MM=MM+1
set xe=0
set ve=0
set me=0
call YKs(false,"when calling new_Iterator in LinkedListModule, line 55")
call iKs(false,"when calling new_BackIterator in LinkedListModule, line 65")
set Fe=wjr("when calling getTimer in IOTaskExecutor, line 96")
set ke=0
set je=false
call njr(Fe,dy,law)
call Ojr(Fe)
set MM=MM-1
return true
endfunction
function tRo takes nothing returns boolean
set MM=0
return QGu("IOTaskExecutor, line 1")
endfunction
function DGu takes string PGu returns integer
local integer AGu
set w3[MM]=PGu
set MM=MM+1
set AGu=YKs(true,"when calling new_Iterator in LinkedListModule, line 53")
set MM=MM-1
return AGu
endfunction
function QKs takes integer mKs returns nothing
endfunction
function ZjS takes integer WjS,string EjS returns nothing
set w3[MM]=EjS
set MM=MM+1
if Zh[WjS]==0 then
call Mau("Double free: object of type Iterator","when calling error in LinkedListModule, line 71")
else
set Qh[Wh]=WjS
set Wh=Wh+1
set Zh[WjS]=0
endif
set MM=MM-1
endfunction
function hKs takes integer GKs,string gKs returns nothing
set w3[MM]=gKs
set MM=MM+1
call QKs(GKs)
call ZjS(GKs,"when calling dealloc_Iterator in LinkedListModule, line 71")
set MM=MM-1
endfunction
function SIc takes integer tIc,string iIc returns nothing
set w3[MM]=iIc
set MM=MM+1
if Zh[tIc]==0 then
if tIc==0 then
call Mau("Nullpointer exception when calling Iterator.Iterator","when calling error in LinkedListModule, line 71")
else
call Mau("Called Iterator.Iterator on invalid object.","when calling error in LinkedListModule, line 71")
endif
endif
call hKs(tIc,"when calling destroyIterator in LinkedListModule, line 71")
set MM=MM-1
endfunction
function dKs takes integer aKs,string nKs returns nothing
set w3[MM]=nKs
set MM=MM+1
if ZU[aKs]then
call SIc(aKs,"when calling dispatch_Iterator_destroyIterator in LinkedListModule, line 91")
endif
set MM=MM-1
endfunction
function pKs takes integer bKs returns integer
local integer yKs=EU[bKs]
set EU[bKs]=WU[EU[bKs]]
return yKs
endfunction
function qKs takes integer eKs returns boolean
return EU[eKs]!=0
endfunction
function IGu takes nothing returns nothing
if je and ke==0 then
call Ojr(Fe)
endif
endfunction
function bjS takes string OjS returns integer
local integer ljS
set w3[MM]=OjS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set ljS=NY
set MY[ljS]=762
else
call Mau("Out of memory: Could not create ForForceCallback_execute_AbstractIOTaskExecutor_IOTaskExecutor.","when calling error in IOTaskExecutor, line 62")
set ljS=0
endif
else
set BY=BY-1
set ljS=VY[BY]
set MY[ljS]=762
endif
set MM=MM-1
return ljS
endfunction
function ejS takes string yjS returns integer
local integer pjS
set w3[MM]=yjS
set MM=MM+1
if BY==0 then
if NY<32768 then
set NY=NY+1
set pjS=NY
set MY[pjS]=763
else
call Mau("Out of memory: Could not create ForForceCallback_execute_AbstractIOTaskExecutor_IOTaskExecutor.","when calling error in IOTaskExecutor, line 68")
set pjS=0
endif
else
set BY=BY-1
set pjS=VY[BY]
set MY[pjS]=763
endif
set MM=MM-1
return pjS
endfunction
function nJs takes integer pJs,string eJs returns nothing
local integer qJs
local integer aJs
set w3[MM]=eJs
set MM=MM+1
if kU[pJs]then
call Mau("AbstractIOTaskExecutor: trying to execute in a finished executor","when calling error in IOTaskExecutor, line 59")
endif
if not gDc(hU[pJs],"when calling isEmpty in IOTaskExecutor, line 61")then
set qJs=bjS("when calling alloc_ForForceCallback_execute_AbstractIOTaskExecutor_IOTaskExecutor in IOTaskExecutor, line 62")
set jU[qJs]=pJs
call Inu(qJs,"when calling execute in IOTaskExecutor, line 62")
else
if FU[pJs]!=0 then
set aJs=ejS("when calling alloc_ForForceCallback_execute_AbstractIOTaskExecutor_IOTaskExecutor in IOTaskExecutor, line 68")
set xU[aJs]=pJs
call Inu(aJs,"when calling execute in IOTaskExecutor, line 68")
call PUc(FU[pJs],"when calling dispatch_IOTask_destroyIOTask in IOTaskExecutor, line 69")
set FU[pJs]=0
endif
set kU[pJs]=true
endif
set MM=MM-1
endfunction
function ZUc takes integer WUc,string EUc returns nothing
set w3[MM]=EUc
set MM=MM+1
if gh[WUc]==0 then
if WUc==0 then
call Mau("Nullpointer exception when calling AbstractIOTaskExecutor.executeNext","when calling error in IOTaskExecutor, line 57")
else
call Mau("Called AbstractIOTaskExecutor.executeNext on invalid object.","when calling error in IOTaskExecutor, line 57")
endif
endif
call nJs(WUc,"when calling executeNext in IOTaskExecutor, line 57")
set MM=MM-1
endfunction
function VJs takes integer XJs,string CJs returns nothing
set w3[MM]=CJs
set MM=MM+1
if(not kU[XJs])and mU[XJs]+vU[XJs]<=qe then
call ZUc(XJs,"when calling executeNext in IOTaskExecutor, line 127")
set mU[XJs]=qe
if kU[XJs]then
set ke=ke-1
call IGu()
endif
endif
set MM=MM-1
endfunction
function wIc takes integer NUc,string MUc returns nothing
set w3[MM]=MUc
set MM=MM+1
if gh[NUc]==0 then
if NUc==0 then
call Mau("Nullpointer exception when calling TimedIOTaskExecutor.update","when calling error in IOTaskExecutor, line 125")
else
call Mau("Called TimedIOTaskExecutor.update on invalid object.","when calling error in IOTaskExecutor, line 125")
endif
endif
call VJs(NUc,"when calling update in IOTaskExecutor, line 125")
set MM=MM-1
endfunction
function UGu takes string WGu returns nothing
local integer EGu
local integer ZGu
set w3[MM]=WGu
set MM=MM+1
set EGu=DGu("when calling iterator in IOTaskExecutor, line 110")
loop
exitwhen not qKs(EGu)
set ZGu=pKs(EGu)
call wIc(ZGu,"when calling update in IOTaskExecutor, line 111")
endloop
call dKs(EGu,"when calling close in IOTaskExecutor, line 110")
set MM=MM-1
endfunction
function tTo takes nothing returns nothing
set MM=0
call UGu("IOTaskExecutor, line 143")
endfunction
function rVw takes nothing returns boolean
if not(GetEventPlayerChatString()=="@etherealform")then
return false
endif
return true
endfunction
function sVw takes nothing returns boolean
if not(GetEventPlayerChatString()=="'etherealform")then
return false
endif
return true
endfunction
function tVw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerMatching(GetTriggerPlayer(),Condition(Rcw))
if sVw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Tcw)
elseif rVw()then
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Ycw)
else
call DoNothing()
endif
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function tXw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function tYw takes nothing returns nothing
local timer rYw=GetExpiredTimer()
local integer sYw=LoadInteger(i,y,GetHandleId(rYw))
call ATw(rYw)
call RemoveSavedHandle(i,ub[Bl[sYw]],GetHandleId(Nl[sYw]))
call kfw(tb[Bl[sYw]],Nl[sYw])
call kfw(ib[Bl[sYw]],Nl[sYw])
call LTw(sYw)
set rYw=null
set rYw=null
endfunction
function tkw takes nothing returns nothing
local unit skw
if GetUnitAbilityLevel(GetKillingUnit(),1095721573)==0 then
set skw=null
return
endif
set skw=GetKillingUnit()
call Jgw(1094869605,GetUnitAbilityLevel(skw,1095721573),"bloodlust",skw)
call UnitAddAbility(skw,1093681487)
call UnitMakeAbilityPermanent(skw,true,1093681487)
call WRw(skw,1093681487,GetUnitAbilityLevel(skw,1095721573))
call nYw(nl,skw,15.)
set skw=null
set skw=null
endfunction
function Evw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Ivw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function Kvw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Lvw takes nothing returns boolean
if not(Sr==true)then
return false
endif
return true
endfunction
function Mvw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function Pvw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Qvw takes nothing returns boolean
if not(ModuloReal(ir,3.00)==0.00)then
return false
endif
return true
endfunction
function Uvw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function Wvw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function mvw takes nothing returns boolean
if not(ModuloReal(ir,2.00)==0.00)then
return false
endif
return true
endfunction
function umw takes nothing returns boolean
if Mu==1 then
return true
endif
if Mu==3 then
return true
endif
return false
endfunction
function rmw takes nothing returns boolean
if not(CountUnitsInGroup(lr[rr])==0)then
return false
endif
if not umw()then
return false
endif
return true
endfunction
function xvw takes nothing returns boolean
if not(DistanceBetweenPoints(Ju[7],Ju[5])<=Fu*5.00)then
return false
endif
if not(GetUnitFlyHeight(GetEnumUnit())<=10.)then
return false
endif
return true
endfunction
function vvw takes nothing returns boolean
if DistanceBetweenPoints(Ju[7],Ju[5])<=Fu+10.00 then
return true
endif
if xvw()then
return true
endif
return false
endfunction
function smw takes nothing returns boolean
if not vvw()then
return false
endif
return true
endfunction
function wmw takes nothing returns boolean
if not(CountUnitsInGroup(Lu)==0)then
return false
endif
return true
endfunction
function tmw takes nothing returns nothing
set Ju[6]=GetUnitLoc(GetEnumUnit())
set Ju[7]=PolarProjectionBJ(Ju[6],Fu,AngleBetweenPoints(Ju[4],Ju[5]))
set yr=DistanceBetweenPoints(Ju[4],Ju[7])
call SetUnitPositionLoc(GetEnumUnit(),Ju[7])
call SetUnitFlyHeightBJ(GetEnumUnit(),4.00*(hu/tr)*yr*((-(1.00*yr))/tr+1.),0.00)
if smw()then
call KillUnit(GetEnumUnit())
call GroupRemoveUnitSimple(GetEnumUnit(),lr[rr])
call GroupAddUnitSimple(GetEnumUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetEnumUnit()),Au)
if Evw()then
call AddSpecialEffectLocBJ(Ju[7],"Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
elseif Wvw()then
set ir=ir+1.
call SaveRealBJ(ir,11,Bu,Au)
if mvw()then
set Ju[10]=PolarProjectionBJ(Ju[5],GetRandomReal(Gu,Wu),GetRandomDirectionDeg())
call CreateNUnitsAtLocFacingLocBJ(1,1747988545,GetOwningPlayer(Nu),Ju[5],Ju[10])
call GroupAddUnitSimple(GetLastCreatedUnit(),cr[rr])
call SaveLocationHandleBJ(Ju[10],1,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call SaveBooleanBJ(false,2,GetHandleIdBJ(GetLastCreatedUnit()),Au)
endif
if Qvw()then
call AddSpecialEffectLocBJ(Ju[7],"Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
else
call AddSpecialEffectLocBJ(Ju[7],"Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
if Lvw()then
if Uvw()then
call ForForce(GetPlayersAll(),Tuw)
endif
call SaveBooleanBJ(false,12,Bu,Au)
call CreateUbersplatBJ(Ju[7],"DHLB",100.,100.,100.,0.,false,true)
call FinishUbersplat(GetLastCreatedUbersplat())
call SetUbersplatRenderAlways(GetLastCreatedUbersplat(),true)
set br=1
loop
exitwhen br>5
set Ju[8]=PolarProjectionBJ(Ju[7],GetRandomReal(50.00,180.00),GetRandomDirectionDeg())
if Pvw()then
call CreateNUnitsAtLoc(1,1747994949,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
call SetUnitTimeScalePercent(GetLastCreatedUnit(),20.00)
elseif Ivw()then
call CreateNUnitsAtLoc(1,1747988534,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
else
call CreateNUnitsAtLoc(1,1747995719,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
call SetUnitTimeScalePercent(GetLastCreatedUnit(),20.00)
endif
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call UnitApplyTimedLifeBJ(5.00,1112820806,GetLastCreatedUnit())
call SaveIntegerBJ(Du+7,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
set br=br+1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Gu,Ju[7],Condition(Yuw)),Guw)
if Kvw()then
set br=1
loop
exitwhen br>3
call CreateNUnitsAtLoc(1,1747993905,GetOwningPlayer(Nu),Ju[7],bj_UNIT_FACING)
call KillUnit(GetLastCreatedUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
set br=br+1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Qu,Ju[7],Condition(guw)),huw)
endif
endif
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Gu,Ju[7],Condition(Fuw)),kuw)
if rmw()then
if Mvw()then
call ForForce(GetPlayersAll(),juw)
endif
call GroupRemoveUnitSimple(Nu,Lu)
call FlushChildHashtableBJ(Bu,Au)
if wmw()then
call DisableTrigger(GetTriggeringTrigger())
set Vu=0
endif
call RemoveLocation(Ju[4])
call RemoveLocation(Ju[5])
endif
endif
call RemoveLocation(Ju[6])
call RemoveLocation(Ju[7])
endfunction
function u1w takes nothing returns boolean
if not(GetSpellAbilityId()==1093682507)then
return false
endif
return true
endfunction
function u3w takes nothing returns nothing
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Undead\\DeathPact\\DeathPactTarget.mdl",GetUnitLoc(GetSpellTargetUnit())))
call DestroyEffect(AddSpecialEffectLoc("Abilities\\Spells\\Undead\\DeathPact\\DeathPactCaster.mdl",GetUnitLoc(GetSpellTargetUnit())))
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Undead\\UndeadDissipate\\UndeadDissipate.mdl",GetUnitLoc(GetSpellTargetUnit())))
endfunction
function u5w takes nothing returns nothing
local effect w5w=AddSpecialEffectTarget("Abilities\\Spells\\Orc\\Bladestorm\\Bladestorm.mdx",GetSpellAbilityUnit(),"origin")
call iTw(1.50)
call DestroyEffect(w5w)
set w5w=null
set w5w=null
endfunction
function u7w takes nothing returns boolean
return IsPlayerEnemy(GetOwningPlayer(GetSpellAbilityUnit()),GetOwningPlayer(GetFilterUnit()))and IsUnitType(GetEnumUnit(),UNIT_TYPE_STRUCTURE)==false and BlzIsUnitInvulnerable(GetFilterUnit())==false
endfunction
function u8w takes nothing returns nothing
call UnitRemoveAbilityBJ(1098015346,GetSpellAbilityUnit())
call UnitAddAbilityBJ(1093682008,GetSpellAbilityUnit())
call UnitRemoveAbilityBJ(1093682009,GetSpellAbilityUnit())
endfunction
function BPw takes nothing returns boolean
if not(GetSellingUnit()==Fr[2])then
return false
endif
return true
endfunction
function CPw takes nothing returns boolean
if not(GetSellingUnit()==Fr[3])then
return false
endif
return true
endfunction
function LPw takes nothing returns boolean
if not(GetSellingUnit()==Fr[4])then
return false
endif
return true
endfunction
function MPw takes nothing returns boolean
if not(GetSellingUnit()==Fr[1])then
return false
endif
return true
endfunction
function NPw takes nothing returns boolean
if not(GetSellingUnit()==TO)then
return false
endif
return true
endfunction
function VPw takes nothing returns boolean
if not(GetSellingUnit()==YO)then
return false
endif
return true
endfunction
function XPw takes nothing returns boolean
if not(GetSellingUnit()==RO)then
return false
endif
return true
endfunction
function wAw takes nothing returns boolean
if not(GetSellingUnit()==fO)then
return false
endif
return true
endfunction
function uAw takes nothing returns nothing
if wAw()then
call SelectUnitRemoveForPlayer(GetSellingUnit(),GetOwningPlayer(GetSoldUnit()))
call SelectUnitAddForPlayer(Fr[1],GetOwningPlayer(GetSoldUnit()))
elseif MPw()then
call SelectUnitRemoveForPlayer(GetSellingUnit(),GetOwningPlayer(GetSoldUnit()))
call SelectUnitAddForPlayer(fO,GetOwningPlayer(GetSoldUnit()))
elseif NPw()then
call SelectUnitRemoveForPlayer(GetSellingUnit(),GetOwningPlayer(GetSoldUnit()))
call SelectUnitAddForPlayer(Fr[2],GetOwningPlayer(GetSoldUnit()))
elseif BPw()then
call SelectUnitRemoveForPlayer(GetSellingUnit(),GetOwningPlayer(GetSoldUnit()))
call SelectUnitAddForPlayer(TO,GetOwningPlayer(GetSoldUnit()))
elseif VPw()then
call SelectUnitRemoveForPlayer(GetSellingUnit(),GetOwningPlayer(GetSoldUnit()))
call SelectUnitAddForPlayer(Fr[3],GetOwningPlayer(GetSoldUnit()))
elseif CPw()then
call SelectUnitRemoveForPlayer(GetSellingUnit(),GetOwningPlayer(GetSoldUnit()))
call SelectUnitAddForPlayer(YO,GetOwningPlayer(GetSoldUnit()))
elseif XPw()then
call SelectUnitRemoveForPlayer(GetSellingUnit(),GetOwningPlayer(GetSoldUnit()))
call SelectUnitAddForPlayer(Fr[4],GetOwningPlayer(GetSoldUnit()))
elseif LPw()then
call SelectUnitRemoveForPlayer(GetSellingUnit(),GetOwningPlayer(GetSoldUnit()))
call SelectUnitAddForPlayer(RO,GetOwningPlayer(GetSoldUnit()))
else
call DoNothing()
endif
endfunction
function uBw takes nothing returns boolean
return IsUnitSelected(GetFilterUnit(),GetTriggerPlayer())==true
endfunction
function uCw takes nothing returns boolean
if not(SubStringBJ(GetEventPlayerChatString(),1,4)=="item")then
return false
endif
return true
endfunction
function uEw takes nothing returns nothing
call SetBlightRadiusLocBJ(true,GetEnumPlayer(),G,92.00)
endfunction
function wHw takes nothing returns boolean
if not(GetDestructableMaxLife(GetEnumDestructable())<1000000000.00)then
return false
endif
if not(GetDestructableMaxLife(GetEnumDestructable())!=777.77)then
return false
endif
return true
endfunction
function uHw takes nothing returns nothing
if wHw()then
call KillDestructable(GetEnumDestructable())
else
call DoNothing()
endif
endfunction
function uKw takes nothing returns boolean
return GetSpellAbilityId()==1093677112
endfunction
function uMw takes nothing returns nothing
local unit wMw=Os
call UnitDamageTarget(wMw,GetEnumUnit(),75.00,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl",GetEnumUnit(),"chest"))
set wMw=null
set wMw=null
endfunction
function avs takes integer qvs returns nothing
endfunction
function Tvs takes integer Rvs returns nothing
call avs(Rvs)
endfunction
function iFS takes string sFS returns integer
local integer tFS
set w3[MM]=sFS
set MM=MM+1
if FG==0 then
if kG<32768 then
set kG=kG+1
set tFS=kG
set jG[tFS]=1675
else
call Mau("Out of memory: Could not create OnBuffApplicationStruct.","when calling error in EmergencyEvade, line 30")
set tFS=0
endif
else
set FG=FG-1
set tFS=hG[FG]
set jG[tFS]=1675
endif
set MM=MM-1
return tFS
endfunction
function fvs takes string nvs returns integer
local integer dvs
set w3[MM]=nvs
set MM=MM+1
set dvs=iFS("when calling alloc_OnBuffApplicationStruct in EmergencyEvade, line 30")
call Tvs(dvs)
set MM=MM-1
return dvs
endfunction
function Kqs takes integer Hqs,integer Jqs returns nothing
set rW[Hqs]=Jqs
endfunction
function xTc takes integer FTc,integer kTc,string jTc returns nothing
set w3[MM]=jTc
set MM=MM+1
if gG[FTc]==0 then
if FTc==0 then
call Mau("Nullpointer exception when calling BuffType.setOnRemovalHandler","when calling error in BuffsJurst, line 62")
else
call Mau("Called BuffType.setOnRemovalHandler on invalid object.","when calling error in BuffsJurst, line 62")
endif
endif
call Kqs(FTc,kTc)
set MM=MM-1
endfunction
function Fvs takes integer hvs returns nothing
endfunction
function mvs takes integer vvs returns nothing
call Fvs(vvs)
endfunction
function oFS takes string SFS returns integer
local integer cFS
set w3[MM]=SFS
set MM=MM+1
if FG==0 then
if kG<32768 then
set kG=kG+1
set cFS=kG
set jG[cFS]=1678
else
call Mau("Out of memory: Could not create OnBuffRemovalStruct.","when calling error in EmergencyEvade, line 36")
set cFS=0
endif
else
set FG=FG-1
set cFS=hG[FG]
set jG[cFS]=1678
endif
set MM=MM-1
return cFS
endfunction
function xvs takes string kvs returns integer
local integer jvs
set w3[MM]=kvs
set MM=MM+1
set jvs=oFS("when calling alloc_OnBuffRemovalStruct in EmergencyEvade, line 36")
call mvs(jvs)
set MM=MM-1
return jvs
endfunction
function Iau takes string Zau returns nothing
local trigger Uau
set w3[MM]=Zau
set MM=MM+1
set Uau=CreateTrigger()
call TTc(Mp,fvs("when calling new_OnBuffApplicationStruct in EmergencyEvade, line 44"),"when calling setOnApplicationHandler in EmergencyEvade, line 44")
call xTc(Mp,xvs("when calling new_OnBuffRemovalStruct in EmergencyEvade, line 45"),"when calling setOnRemovalHandler in EmergencyEvade, line 45")
call rfw(Uau,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Uau,Filter(iaw))
set MM=MM-1
set Uau=null
endfunction
function kau takes string Fau returns boolean
set w3[MM]=Fau
set MM=MM+1
set Vp=1093677126
set Bp=1093677908
set Np=1093683789
set Mp=Csu("when calling create in EmergencyEvade, line 9")
call Iau("when calling Init in EmergencyEvade, line 1")
set MM=MM-1
return true
endfunction
function uRo takes nothing returns boolean
set MM=0
return kau("EmergencyEvade, line 1")
endfunction
function bvs takes integer lvs returns nothing
endfunction
function rFS takes integer wFS,string uFS returns nothing
set w3[MM]=uFS
set MM=MM+1
if Mg[wFS]==0 then
call Mau("Double free: object of type DelayNode","when calling error in DummyRecycler, line 84")
else
set Ng=Ng+1
set Mg[wFS]=0
endif
set MM=MM-1
endfunction
function Ovs takes integer cvs,string ovs returns nothing
set w3[MM]=ovs
set MM=MM+1
call bvs(cvs)
call rFS(cvs,"when calling dealloc_DelayNode in DummyRecycler, line 84")
set MM=MM-1
endfunction
function Ljc takes integer Jjc,string Kjc returns nothing
set w3[MM]=Kjc
set MM=MM+1
if Mg[Jjc]==0 then
if Jjc==0 then
call Mau("Nullpointer exception when calling DelayNode.DelayNode","when calling error in DummyRecycler, line 84")
else
call Mau("Called DelayNode.DelayNode on invalid object.","when calling error in DummyRecycler, line 84")
endif
endif
call Ovs(Jjc,"when calling destroyDelayNode in DummyRecycler, line 84")
set MM=MM-1
endfunction
function ijr takes timer tjr returns real
return TimerGetElapsed(tjr)
endfunction
function bRu takes nothing returns real
return ijr(ee)
endfunction
function cqu takes string iqu returns nothing
local integer Squ
set w3[MM]=iqu
set MM=MM+1
call jqu(SZ[Xp],"when calling recycle in DummyRecycler, line 133")
set Squ=Xp
if oZ[Xp]==0 then
set Xp=0
else
set Xp=oZ[Xp]
call pjr(Lp,cZ[Xp]-bRu(),taw)
endif
call Ljc(Squ,"when calling dispatch_DelayNode_destroyDelayNode in DummyRecycler, line 142")
set MM=MM-1
endfunction
function uTo takes nothing returns nothing
set MM=0
call cqu("DummyRecycler, line 140")
endfunction
function NCw takes nothing returns boolean
if GetUnitAbilityLevelSwapped(1093682756,GetEnumUnit())!=0 then
return true
endif
if GetUnitAbilityLevelSwapped(1093682755,GetEnumUnit())!=0 then
return true
endif
return false
endfunction
function MCw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
if not NCw()then
return false
endif
return true
endfunction
function wVw takes nothing returns boolean
if not MCw()then
return false
endif
return true
endfunction
function uVw takes nothing returns nothing
if wVw()then
call UnitRemoveAbilityBJ(1093682756,GetEnumUnit())
call UnitRemoveAbilityBJ(1093682755,GetEnumUnit())
call UnitRemoveAbilityBJ(1093682758,GetEnumUnit())
else
call DoNothing()
endif
endfunction
function uhw takes nothing returns nothing
local unit whw=GetEventDamageSource()
if GetUnitAbilityLevel(whw,1112040563)>0 or GetUnitAbilityLevel(whw,1110455377)>0 or GetUnitAbilityLevel(whw,1110455619)>0 or GetUnitAbilityLevel(whw,1110455620)>0 or GetUnitAbilityLevel(whw,1110455621)>0 or GetUnitAbilityLevel(whw,1110455622)>0 then
call BlzSetEventDamage(GetEventDamage()/2.)
endif
set whw=GetTriggerUnit()
if GetUnitAbilityLevel(whw,1112040563)>0 or GetUnitAbilityLevel(whw,1110455377)>0 or GetUnitAbilityLevel(whw,1110455619)>0 or GetUnitAbilityLevel(whw,1110455620)>0 or GetUnitAbilityLevel(whw,1110455621)>0 or GetUnitAbilityLevel(whw,1110455622)>0 then
call BlzSetEventDamage(0.)
endif
set whw=null
set whw=null
endfunction
function Nkw takes nothing returns boolean
if not(RectContainsLoc(GetPlayableMapRect(),Ju[1])==true)then
return false
endif
return true
endfunction
function Mkw takes nothing returns boolean
if DistanceBetweenPoints(Ju[2],Ju[1])<Gu*1.50 then
return true
endif
if DistanceBetweenPoints(Ju[2],Ju[1])>gu then
return true
endif
if RectContainsLoc(GetPlayableMapRect(),Ju[1])==false then
return true
endif
return false
endfunction
function wjw takes nothing returns boolean
if not Mkw()then
return false
endif
return true
endfunction
function ujw takes nothing returns nothing
set Ju[1]=GetSpellTargetLoc()
set Ju[2]=LoadLocationHandleBJ(0,GetHandleIdBJ(GetTriggerUnit()),Au)
if wjw()then
call IssueImmediateOrderBJ(GetTriggerUnit(),"stop")
set Xu=GetForceOfPlayer(GetOwningPlayer(GetTriggerUnit()))
if Nkw()then
call DisplayTextToForce(Xu,"TRIGSTR_8262")
else
call DisplayTextToForce(Xu,"TRIGSTR_8275")
endif
call DestroyForce(Xu)
endif
call RemoveLocation(Ju[1])
endfunction
function v1w takes nothing returns boolean
if not(GetSpellAbilityId()==1093682260)then
return false
endif
return true
endfunction
function v3w takes nothing returns boolean
if GetUnitTypeId(GetDyingUnit())==1865429555 then
return true
endif
return false
endfunction
function v4w takes nothing returns boolean
return not(IsPlayerEnemy(GetOwningPlayer(GetFilterUnit()),GetOwningPlayer(GetSpellAbilityUnit()))==false)
endfunction
function vBw takes nothing returns nothing
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIhe\\AIheTarget.mdl",GetEnumUnit(),"origin"))
call SetUnitState(GetEnumUnit(),UNIT_STATE_LIFE,GetUnitState(GetEnumUnit(),UNIT_STATE_LIFE)+425.00)
endfunction
function xDw takes nothing returns boolean
if not(GetDestructableMaxLife(GetEnumDestructable())==2501.00)then
return false
endif
return true
endfunction
function vDw takes nothing returns nothing
if xDw()then
call ModifyGateBJ(bj_GATEOPERATION_CLOSE,GetEnumDestructable())
endif
endfunction
function xHw takes nothing returns boolean
local integer kHw=0
local integer jHw=GetDestructableTypeId(GetSpellTargetDestructable())
loop
if jHw==Nr[kHw]then
set kHw=0
set jHw=0
return true
endif
set kHw=kHw+1
exitwhen kHw==Mr
endloop
set kHw=0
set jHw=0
return false
endfunction
function vHw takes nothing returns nothing
if xHw()then
if kw[GetPlayerId(GetTriggerPlayer())]!=null then
set Fw[ts]=kw[GetPlayerId(GetTriggerPlayer())]
set hw[ts]=GetSpellTargetDestructable()
call TriggerRegisterDeathEvent(nS,Fw[ts])
set ts=ts+1
endif
call RemoveUnit(ss[GetPlayerId(GetTriggerPlayer())])
set ss[GetPlayerId(GetTriggerPlayer())]=CreateUnitAtLoc(GetTriggerPlayer(),1747996983,GetUnitLoc(GetSpellAbilityUnit()),270.00)
else
call hTw(GetOwningPlayer(GetSpellAbilityUnit()),"",true,false)
endif
endfunction
function vJw takes nothing returns nothing
local unit xJw=GetOrderedUnit()
call SetUnitPositionLoc(xJw,GetOrderPointLoc())
call TriggerSleepAction(0.01)
call IssueImmediateOrder(xJw,"stop")
set xJw=null
set xJw=null
endfunction
function vQu takes nothing returns boolean
return true
endfunction
function F0c takes string g0c returns integer
local integer h0c
set w3[MM]=g0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h0c=kj
set jj[h0c]=1136
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 550")
set h0c=0
endif
else
set Fj=Fj-1
set h0c=hj[Fj]
set jj[h0c]=1136
endif
set MM=MM-1
return h0c
endfunction
function F2c takes string g2c returns integer
local integer h2c
set w3[MM]=g2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h2c=kj
set jj[h2c]=1103
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 96")
set h2c=0
endif
else
set Fj=Fj-1
set h2c=hj[Fj]
set jj[h2c]=1103
endif
set MM=MM-1
return h2c
endfunction
function F5c takes string g5c returns integer
local integer h5c
set w3[MM]=g5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h5c=kj
set jj[h5c]=881
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 150")
set h5c=0
endif
else
set Fj=Fj-1
set h5c=hj[Fj]
set jj[h5c]=881
endif
set MM=MM-1
return h5c
endfunction
function F6c takes string g6c returns integer
local integer h6c
set w3[MM]=g6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h6c=kj
set jj[h6c]=1072
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 234")
set h6c=0
endif
else
set Fj=Fj-1
set h6c=hj[Fj]
set jj[h6c]=1072
endif
set MM=MM-1
return h6c
endfunction
function F7c takes string g7c returns integer
local integer h7c
set w3[MM]=g7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h7c=kj
set jj[h7c]=894
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 297")
set h7c=0
endif
else
set Fj=Fj-1
set h7c=hj[Fj]
set jj[h7c]=894
endif
set MM=MM-1
return h7c
endfunction
function F8c takes string g8c returns integer
local integer h8c
set w3[MM]=g8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h8c=kj
set jj[h8c]=1120
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 355")
set h8c=0
endif
else
set Fj=Fj-1
set h8c=hj[Fj]
set jj[h8c]=1120
endif
set MM=MM-1
return h8c
endfunction
function F9c takes string g9c returns integer
local integer h9c
set w3[MM]=g9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h9c=kj
set jj[h9c]=911
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 409")
set h9c=0
endif
else
set Fj=Fj-1
set h9c=hj[Fj]
set jj[h9c]=911
endif
set MM=MM-1
return h9c
endfunction
function F_c takes string g_c returns integer
local integer h_c
set w3[MM]=g_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h_c=kj
set jj[h_c]=928
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 626")
set h_c=0
endif
else
set Fj=Fj-1
set h_c=hj[Fj]
set jj[h_c]=928
endif
set MM=MM-1
return h_c
endfunction
function Frc takes string grc returns integer
local integer hrc
set w3[MM]=grc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hrc=kj
set jj[hrc]=953
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 795")
set hrc=0
endif
else
set Fj=Fj-1
set hrc=hj[Fj]
set jj[hrc]=953
endif
set MM=MM-1
return hrc
endfunction
function Fuc takes string guc returns integer
local integer huc
set w3[MM]=guc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set huc=kj
set jj[huc]=1202
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 742")
set huc=0
endif
else
set Fj=Fj-1
set huc=hj[Fj]
set jj[huc]=1202
endif
set MM=MM-1
return huc
endfunction
function Fwc takes string gwc returns integer
local integer hwc
set w3[MM]=gwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set hwc=kj
set jj[hwc]=1149
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 682")
set hwc=0
endif
else
set Fj=Fj-1
set hwc=hj[Fj]
set jj[hwc]=1149
endif
set MM=MM-1
return hwc
endfunction
function G0c takes string T0c returns integer
local integer Y0c
set w3[MM]=T0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y0c=kj
set jj[Y0c]=919
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 547")
set Y0c=0
endif
else
set Fj=Fj-1
set Y0c=hj[Fj]
set jj[Y0c]=919
endif
set MM=MM-1
return Y0c
endfunction
function G2c takes string T2c returns integer
local integer Y2c
set w3[MM]=T2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y2c=kj
set jj[Y2c]=872
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 93")
set Y2c=0
endif
else
set Fj=Fj-1
set Y2c=hj[Fj]
set jj[Y2c]=872
endif
set MM=MM-1
return Y2c
endfunction
function G5c takes string T5c returns integer
local integer Y5c
set w3[MM]=T5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y5c=kj
set jj[Y5c]=1184
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 148")
set Y5c=0
endif
else
set Fj=Fj-1
set Y5c=hj[Fj]
set jj[Y5c]=1184
endif
set MM=MM-1
return Y5c
endfunction
function G6c takes string T6c returns integer
local integer Y6c
set w3[MM]=T6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y6c=kj
set jj[Y6c]=849
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 231")
set Y6c=0
endif
else
set Fj=Fj-1
set Y6c=hj[Fj]
set jj[Y6c]=849
endif
set MM=MM-1
return Y6c
endfunction
function G7c takes string T7c returns integer
local integer Y7c
set w3[MM]=T7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y7c=kj
set jj[Y7c]=1114
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 294")
set Y7c=0
endif
else
set Fj=Fj-1
set Y7c=hj[Fj]
set jj[Y7c]=1114
endif
set MM=MM-1
return Y7c
endfunction
function G8c takes string T8c returns integer
local integer Y8c
set w3[MM]=T8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y8c=kj
set jj[Y8c]=902
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 352")
set Y8c=0
endif
else
set Fj=Fj-1
set Y8c=hj[Fj]
set jj[Y8c]=902
endif
set MM=MM-1
return Y8c
endfunction
function G9c takes string T9c returns integer
local integer Y9c
set w3[MM]=T9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y9c=kj
set jj[Y9c]=1127
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 407")
set Y9c=0
endif
else
set Fj=Fj-1
set Y9c=hj[Fj]
set jj[Y9c]=1127
endif
set MM=MM-1
return Y9c
endfunction
function G_c takes string T_c returns integer
local integer Y_c
set w3[MM]=T_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Y_c=kj
set jj[Y_c]=1143
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 624")
set Y_c=0
endif
else
set Fj=Fj-1
set Y_c=hj[Fj]
set jj[Y_c]=1143
endif
set MM=MM-1
return Y_c
endfunction
function Grc takes string Trc returns integer
local integer Yrc
set w3[MM]=Trc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Yrc=kj
set jj[Yrc]=1156
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 792")
set Yrc=0
endif
else
set Fj=Fj-1
set Yrc=hj[Fj]
set jj[Yrc]=1156
endif
set MM=MM-1
return Yrc
endfunction
function Guc takes string Tuc returns integer
local integer Yuc
set w3[MM]=Tuc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Yuc=kj
set jj[Yuc]=944
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 738")
set Yuc=0
endif
else
set Fj=Fj-1
set Yuc=hj[Fj]
set jj[Yuc]=944
endif
set MM=MM-1
return Yuc
endfunction
function Gwc takes string Twc returns integer
local integer Ywc
set w3[MM]=Twc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Ywc=kj
set jj[Ywc]=936
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 678")
set Ywc=0
endif
else
set Fj=Fj-1
set Ywc=hj[Fj]
set jj[Ywc]=936
endif
set MM=MM-1
return Ywc
endfunction
function H0c takes string A0c returns integer
local integer D0c
set w3[MM]=A0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D0c=kj
set jj[D0c]=922
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 575")
set D0c=0
endif
else
set Fj=Fj-1
set D0c=hj[Fj]
set jj[D0c]=922
endif
set MM=MM-1
return D0c
endfunction
function H2c takes string A2c returns integer
local integer D2c
set w3[MM]=A2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D2c=kj
set jj[D2c]=875
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 113")
set D2c=0
endif
else
set Fj=Fj-1
set D2c=hj[Fj]
set jj[D2c]=875
endif
set MM=MM-1
return D2c
endfunction
function H4c takes string A4c returns integer
local integer D4c
set w3[MM]=A4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D4c=kj
set jj[D4c]=1178
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 50")
set D4c=0
endif
else
set Fj=Fj-1
set D4c=hj[Fj]
set jj[D4c]=1178
endif
set MM=MM-1
return D4c
endfunction
function H5c takes string A5c returns integer
local integer D5c
set w3[MM]=A5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D5c=kj
set jj[D5c]=1110
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 168")
set D5c=0
endif
else
set Fj=Fj-1
set D5c=hj[Fj]
set jj[D5c]=1110
endif
set MM=MM-1
return D5c
endfunction
function H6c takes string A6c returns integer
local integer D6c
set w3[MM]=A6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D6c=kj
set jj[D6c]=888
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 251")
set D6c=0
endif
else
set Fj=Fj-1
set D6c=hj[Fj]
set jj[D6c]=888
endif
set MM=MM-1
return D6c
endfunction
function H7c takes string A7c returns integer
local integer D7c
set w3[MM]=A7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D7c=kj
set jj[D7c]=1190
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 313")
set D7c=0
endif
else
set Fj=Fj-1
set D7c=hj[Fj]
set jj[D7c]=1190
endif
set MM=MM-1
return D7c
endfunction
function H8c takes string A8c returns integer
local integer D8c
set w3[MM]=A8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D8c=kj
set jj[D8c]=905
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 370")
set D8c=0
endif
else
set Fj=Fj-1
set D8c=hj[Fj]
set jj[D8c]=905
endif
set MM=MM-1
return D8c
endfunction
function H9c takes string A9c returns integer
local integer D9c
set w3[MM]=A9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D9c=kj
set jj[D9c]=1130
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 424")
set D9c=0
endif
else
set Fj=Fj-1
set D9c=hj[Fj]
set jj[D9c]=1130
endif
set MM=MM-1
return D9c
endfunction
function H_c takes string A_c returns integer
local integer D_c
set w3[MM]=A_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set D_c=kj
set jj[D_c]=1194
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 644")
set D_c=0
endif
else
set Fj=Fj-1
set D_c=hj[Fj]
set jj[D_c]=1194
endif
set MM=MM-1
return D_c
endfunction
function Hrc takes string Arc returns integer
local integer Drc
set w3[MM]=Arc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Drc=kj
set jj[Drc]=1159
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 813")
set Drc=0
endif
else
set Fj=Fj-1
set Drc=hj[Fj]
set jj[Drc]=1159
endif
set MM=MM-1
return Drc
endfunction
function Huc takes string Auc returns integer
local integer Duc
set w3[MM]=Auc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Duc=kj
set jj[Duc]=947
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 759")
set Duc=0
endif
else
set Fj=Fj-1
set Duc=hj[Fj]
set jj[Duc]=947
endif
set MM=MM-1
return Duc
endfunction
function Hwc takes string Awc returns integer
local integer Dwc
set w3[MM]=Awc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Dwc=kj
set jj[Dwc]=1198
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 698")
set Dwc=0
endif
else
set Fj=Fj-1
set Dwc=hj[Fj]
set jj[Dwc]=1198
endif
set MM=MM-1
return Dwc
endfunction
function L0c takes string J0c returns integer
local integer K0c
set w3[MM]=J0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K0c=kj
set jj[K0c]=1138
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 579")
set K0c=0
endif
else
set Fj=Fj-1
set K0c=hj[Fj]
set jj[K0c]=1138
endif
set MM=MM-1
return K0c
endfunction
function L2c takes string J2c returns integer
local integer K2c
set w3[MM]=J2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K2c=kj
set jj[K2c]=1105
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 117")
set K2c=0
endif
else
set Fj=Fj-1
set K2c=hj[Fj]
set jj[K2c]=1105
endif
set MM=MM-1
return K2c
endfunction
function L4c takes string J4c returns integer
local integer K4c
set w3[MM]=J4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K4c=kj
set jj[K4c]=867
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 53")
set K4c=0
endif
else
set Fj=Fj-1
set K4c=hj[Fj]
set jj[K4c]=867
endif
set MM=MM-1
return K4c
endfunction
function L5c takes string J5c returns integer
local integer K5c
set w3[MM]=J5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K5c=kj
set jj[K5c]=884
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 171")
set K5c=0
endif
else
set Fj=Fj-1
set K5c=hj[Fj]
set jj[K5c]=884
endif
set MM=MM-1
return K5c
endfunction
function L6c takes string J6c returns integer
local integer K6c
set w3[MM]=J6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K6c=kj
set jj[K6c]=1111
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 263")
set K6c=0
endif
else
set Fj=Fj-1
set K6c=hj[Fj]
set jj[K6c]=1111
endif
set MM=MM-1
return K6c
endfunction
function L7c takes string J7c returns integer
local integer K7c
set w3[MM]=J7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K7c=kj
set jj[K7c]=897
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 315")
set K7c=0
endif
else
set Fj=Fj-1
set K7c=hj[Fj]
set jj[K7c]=897
endif
set MM=MM-1
return K7c
endfunction
function L8c takes string J8c returns integer
local integer K8c
set w3[MM]=J8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K8c=kj
set jj[K8c]=1123
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 374")
set K8c=0
endif
else
set Fj=Fj-1
set K8c=hj[Fj]
set jj[K8c]=1123
endif
set MM=MM-1
return K8c
endfunction
function L9c takes string J9c returns integer
local integer K9c
set w3[MM]=J9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K9c=kj
set jj[K9c]=914
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 426")
set K9c=0
endif
else
set Fj=Fj-1
set K9c=hj[Fj]
set jj[K9c]=914
endif
set MM=MM-1
return K9c
endfunction
function L_c takes string J_c returns integer
local integer K_c
set w3[MM]=J_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set K_c=kj
set jj[K_c]=931
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 646")
set K_c=0
endif
else
set Fj=Fj-1
set K_c=hj[Fj]
set jj[K_c]=931
endif
set MM=MM-1
return K_c
endfunction
function Lrc takes string Jrc returns integer
local integer Krc
set w3[MM]=Jrc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Krc=kj
set jj[Krc]=956
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 816")
set Krc=0
endif
else
set Fj=Fj-1
set Krc=hj[Fj]
set jj[Krc]=956
endif
set MM=MM-1
return Krc
endfunction
function Luc takes string Juc returns integer
local integer Kuc
set w3[MM]=Juc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Kuc=kj
set jj[Kuc]=1205
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 763")
set Kuc=0
endif
else
set Fj=Fj-1
set Kuc=hj[Fj]
set jj[Kuc]=1205
endif
set MM=MM-1
return Kuc
endfunction
function Lwc takes string Jwc returns integer
local integer Kwc
set w3[MM]=Jwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Kwc=kj
set jj[Kwc]=939
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 700")
set Kwc=0
endif
else
set Fj=Fj-1
set Kwc=hj[Fj]
set jj[Kwc]=939
endif
set MM=MM-1
return Kwc
endfunction
function M0c takes string B0c returns integer
local integer N0c
set w3[MM]=B0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N0c=kj
set jj[N0c]=1139
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 584")
set N0c=0
endif
else
set Fj=Fj-1
set N0c=hj[Fj]
set jj[N0c]=1139
endif
set MM=MM-1
return N0c
endfunction
function M2c takes string B2c returns integer
local integer N2c
set w3[MM]=B2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N2c=kj
set jj[N2c]=1182
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 124")
set N2c=0
endif
else
set Fj=Fj-1
set N2c=hj[Fj]
set jj[N2c]=1182
endif
set MM=MM-1
return N2c
endfunction
function M4c takes string B4c returns integer
local integer N4c
set w3[MM]=B4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N4c=kj
set jj[N4c]=868
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 64")
set N4c=0
endif
else
set Fj=Fj-1
set N4c=hj[Fj]
set jj[N4c]=868
endif
set MM=MM-1
return N4c
endfunction
function M5c takes string B5c returns integer
local integer N5c
set w3[MM]=B5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N5c=kj
set jj[N5c]=885
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 177")
set N5c=0
endif
else
set Fj=Fj-1
set N5c=hj[Fj]
set jj[N5c]=885
endif
set MM=MM-1
return N5c
endfunction
function M6c takes string B6c returns integer
local integer N6c
set w3[MM]=B6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N6c=kj
set jj[N6c]=1112
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 270")
set N6c=0
endif
else
set Fj=Fj-1
set N6c=hj[Fj]
set jj[N6c]=1112
endif
set MM=MM-1
return N6c
endfunction
function M7c takes string B7c returns integer
local integer N7c
set w3[MM]=B7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N7c=kj
set jj[N7c]=898
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 326")
set N7c=0
endif
else
set Fj=Fj-1
set N7c=hj[Fj]
set jj[N7c]=898
endif
set MM=MM-1
return N7c
endfunction
function M8c takes string B8c returns integer
local integer N8c
set w3[MM]=B8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N8c=kj
set jj[N8c]=1124
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 381")
set N8c=0
endif
else
set Fj=Fj-1
set N8c=hj[Fj]
set jj[N8c]=1124
endif
set MM=MM-1
return N8c
endfunction
function M9c takes string B9c returns integer
local integer N9c
set w3[MM]=B9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N9c=kj
set jj[N9c]=915
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 455")
set N9c=0
endif
else
set Fj=Fj-1
set N9c=hj[Fj]
set jj[N9c]=915
endif
set MM=MM-1
return N9c
endfunction
function M_c takes string B_c returns integer
local integer N_c
set w3[MM]=B_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set N_c=kj
set jj[N_c]=932
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 653")
set N_c=0
endif
else
set Fj=Fj-1
set N_c=hj[Fj]
set jj[N_c]=932
endif
set MM=MM-1
return N_c
endfunction
function Muc takes string Buc returns integer
local integer Nuc
set w3[MM]=Buc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Nuc=kj
set jj[Nuc]=1152
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 770")
set Nuc=0
endif
else
set Fj=Fj-1
set Nuc=hj[Fj]
set jj[Nuc]=1152
endif
set MM=MM-1
return Nuc
endfunction
function Mwc takes string Bwc returns integer
local integer Nwc
set w3[MM]=Bwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Nwc=kj
set jj[Nwc]=940
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 708")
set Nwc=0
endif
else
set Fj=Fj-1
set Nwc=hj[Fj]
set jj[Nwc]=940
endif
set MM=MM-1
return Nwc
endfunction
function P0c takes string U0c returns integer
local integer I0c
set w3[MM]=U0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I0c=kj
set jj[I0c]=1137
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 572")
set I0c=0
endif
else
set Fj=Fj-1
set I0c=hj[Fj]
set jj[I0c]=1137
endif
set MM=MM-1
return I0c
endfunction
function P2c takes string U2c returns integer
local integer I2c
set w3[MM]=U2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I2c=kj
set jj[I2c]=1104
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 110")
set I2c=0
endif
else
set Fj=Fj-1
set I2c=hj[Fj]
set jj[I2c]=1104
endif
set MM=MM-1
return I2c
endfunction
function P4c takes string U4c returns integer
local integer I4c
set w3[MM]=U4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I4c=kj
set jj[I4c]=866
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 34")
set I4c=0
endif
else
set Fj=Fj-1
set I4c=hj[Fj]
set jj[I4c]=866
endif
set MM=MM-1
return I4c
endfunction
function P5c takes string U5c returns integer
local integer I5c
set w3[MM]=U5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I5c=kj
set jj[I5c]=883
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 164")
set I5c=0
endif
else
set Fj=Fj-1
set I5c=hj[Fj]
set jj[I5c]=883
endif
set MM=MM-1
return I5c
endfunction
function P6c takes string U6c returns integer
local integer I6c
set w3[MM]=U6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I6c=kj
set jj[I6c]=887
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 249")
set I6c=0
endif
else
set Fj=Fj-1
set I6c=hj[Fj]
set jj[I6c]=887
endif
set MM=MM-1
return I6c
endfunction
function P7c takes string U7c returns integer
local integer I7c
set w3[MM]=U7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I7c=kj
set jj[I7c]=896
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 309")
set I7c=0
endif
else
set Fj=Fj-1
set I7c=hj[Fj]
set jj[I7c]=896
endif
set MM=MM-1
return I7c
endfunction
function P8c takes string U8c returns integer
local integer I8c
set w3[MM]=U8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I8c=kj
set jj[I8c]=1122
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 367")
set I8c=0
endif
else
set Fj=Fj-1
set I8c=hj[Fj]
set jj[I8c]=1122
endif
set MM=MM-1
return I8c
endfunction
function P9c takes string U9c returns integer
local integer I9c
set w3[MM]=U9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I9c=kj
set jj[I9c]=913
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 420")
set I9c=0
endif
else
set Fj=Fj-1
set I9c=hj[Fj]
set jj[I9c]=913
endif
set MM=MM-1
return I9c
endfunction
function P_c takes string U_c returns integer
local integer I_c
set w3[MM]=U_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set I_c=kj
set jj[I_c]=930
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 640")
set I_c=0
endif
else
set Fj=Fj-1
set I_c=hj[Fj]
set jj[I_c]=930
endif
set MM=MM-1
return I_c
endfunction
function Prc takes string Urc returns integer
local integer Irc
set w3[MM]=Urc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Irc=kj
set jj[Irc]=955
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 809")
set Irc=0
endif
else
set Fj=Fj-1
set Irc=hj[Fj]
set jj[Irc]=955
endif
set MM=MM-1
return Irc
endfunction
function Puc takes string Uuc returns integer
local integer Iuc
set w3[MM]=Uuc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Iuc=kj
set jj[Iuc]=1204
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 756")
set Iuc=0
endif
else
set Fj=Fj-1
set Iuc=hj[Fj]
set jj[Iuc]=1204
endif
set MM=MM-1
return Iuc
endfunction
function Pwc takes string Uwc returns integer
local integer Iwc
set w3[MM]=Uwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Iwc=kj
set jj[Iwc]=1073
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 695")
set Iwc=0
endif
else
set Fj=Fj-1
set Iwc=hj[Fj]
set jj[Iwc]=1073
endif
set MM=MM-1
return Iwc
endfunction
function Q0c takes string v0c returns integer
local integer m0c
set w3[MM]=v0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m0c=kj
set jj[m0c]=1193
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 567")
set m0c=0
endif
else
set Fj=Fj-1
set m0c=hj[Fj]
set jj[m0c]=1193
endif
set MM=MM-1
return m0c
endfunction
function Q2c takes string v2c returns integer
local integer m2c
set w3[MM]=v2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m2c=kj
set jj[m2c]=1181
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 103")
set m2c=0
endif
else
set Fj=Fj-1
set m2c=hj[Fj]
set jj[m2c]=1181
endif
set MM=MM-1
return m2c
endfunction
function Q5c takes string v5c returns integer
local integer m5c
set w3[MM]=v5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m5c=kj
set jj[m5c]=882
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 157")
set m5c=0
endif
else
set Fj=Fj-1
set m5c=hj[Fj]
set jj[m5c]=882
endif
set MM=MM-1
return m5c
endfunction
function Q6c takes string v6c returns integer
local integer m6c
set w3[MM]=v6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m6c=kj
set jj[m6c]=1186
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 242")
set m6c=0
endif
else
set Fj=Fj-1
set m6c=hj[Fj]
set jj[m6c]=1186
endif
set MM=MM-1
return m6c
endfunction
function Q7c takes string v7c returns integer
local integer m7c
set w3[MM]=v7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m7c=kj
set jj[m7c]=895
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 303")
set m7c=0
endif
else
set Fj=Fj-1
set m7c=hj[Fj]
set jj[m7c]=895
endif
set MM=MM-1
return m7c
endfunction
function Q8c takes string v8c returns integer
local integer m8c
set w3[MM]=v8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m8c=kj
set jj[m8c]=1121
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 362")
set m8c=0
endif
else
set Fj=Fj-1
set m8c=hj[Fj]
set jj[m8c]=1121
endif
set MM=MM-1
return m8c
endfunction
function Q9c takes string v9c returns integer
local integer m9c
set w3[MM]=v9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m9c=kj
set jj[m9c]=912
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 414")
set m9c=0
endif
else
set Fj=Fj-1
set m9c=hj[Fj]
set jj[m9c]=912
endif
set MM=MM-1
return m9c
endfunction
function Q_c takes string v_c returns integer
local integer m_c
set w3[MM]=v_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m_c=kj
set jj[m_c]=929
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 633")
set m_c=0
endif
else
set Fj=Fj-1
set m_c=hj[Fj]
set jj[m_c]=929
endif
set MM=MM-1
return m_c
endfunction
function Qrc takes string vrc returns integer
local integer mrc
set w3[MM]=vrc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mrc=kj
set jj[mrc]=954
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 802")
set mrc=0
endif
else
set Fj=Fj-1
set mrc=hj[Fj]
set jj[mrc]=954
endif
set MM=MM-1
return mrc
endfunction
function Quc takes string vuc returns integer
local integer muc
set w3[MM]=vuc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set muc=kj
set jj[muc]=1203
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 749")
set muc=0
endif
else
set Fj=Fj-1
set muc=hj[Fj]
set jj[muc]=1203
endif
set MM=MM-1
return muc
endfunction
function Qwc takes string vwc returns integer
local integer mwc
set w3[MM]=vwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set mwc=kj
set jj[mwc]=1197
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 690")
set mwc=0
endif
else
set Fj=Fj-1
set mwc=hj[Fj]
set jj[mwc]=1197
endif
set MM=MM-1
return mwc
endfunction
function R0c takes string d0c returns integer
local integer f0c
set w3[MM]=d0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f0c=kj
set jj[f0c]=1135
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 545")
set f0c=0
endif
else
set Fj=Fj-1
set f0c=hj[Fj]
set jj[f0c]=1135
endif
set MM=MM-1
return f0c
endfunction
function R2c takes string d2c returns integer
local integer f2c
set w3[MM]=d2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f2c=kj
set jj[f2c]=1180
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 91")
set f2c=0
endif
else
set Fj=Fj-1
set f2c=hj[Fj]
set jj[f2c]=1180
endif
set MM=MM-1
return f2c
endfunction
function R5c takes string d5c returns integer
local integer f5c
set w3[MM]=d5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f5c=kj
set jj[f5c]=880
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 144")
set f5c=0
endif
else
set Fj=Fj-1
set f5c=hj[Fj]
set jj[f5c]=880
endif
set MM=MM-1
return f5c
endfunction
function R6c takes string d6c returns integer
local integer f6c
set w3[MM]=d6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f6c=kj
set jj[f6c]=848
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 228")
set f6c=0
endif
else
set Fj=Fj-1
set f6c=hj[Fj]
set jj[f6c]=848
endif
set MM=MM-1
return f6c
endfunction
function R7c takes string d7c returns integer
local integer f7c
set w3[MM]=d7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f7c=kj
set jj[f7c]=893
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 291")
set f7c=0
endif
else
set Fj=Fj-1
set f7c=hj[Fj]
set jj[f7c]=893
endif
set MM=MM-1
return f7c
endfunction
function R8c takes string d8c returns integer
local integer f8c
set w3[MM]=d8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f8c=kj
set jj[f8c]=1119
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 350")
set f8c=0
endif
else
set Fj=Fj-1
set f8c=hj[Fj]
set jj[f8c]=1119
endif
set MM=MM-1
return f8c
endfunction
function R9c takes string d9c returns integer
local integer f9c
set w3[MM]=d9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f9c=kj
set jj[f9c]=910
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 403")
set f9c=0
endif
else
set Fj=Fj-1
set f9c=hj[Fj]
set jj[f9c]=910
endif
set MM=MM-1
return f9c
endfunction
function R_c takes string d_c returns integer
local integer f_c
set w3[MM]=d_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set f_c=kj
set jj[f_c]=927
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 605")
set f_c=0
endif
else
set Fj=Fj-1
set f_c=hj[Fj]
set jj[f_c]=927
endif
set MM=MM-1
return f_c
endfunction
function Rrc takes string drc returns integer
local integer frc
set w3[MM]=drc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set frc=kj
set jj[frc]=952
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 788")
set frc=0
endif
else
set Fj=Fj-1
set frc=hj[Fj]
set jj[frc]=952
endif
set MM=MM-1
return frc
endfunction
function Ruc takes string duc returns integer
local integer fuc
set w3[MM]=duc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fuc=kj
set jj[fuc]=1201
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 735")
set fuc=0
endif
else
set Fj=Fj-1
set fuc=hj[Fj]
set jj[fuc]=1201
endif
set MM=MM-1
return fuc
endfunction
function Rwc takes string dwc returns integer
local integer fwc
set w3[MM]=dwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set fwc=kj
set jj[fwc]=1148
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 675")
set fwc=0
endif
else
set Fj=Fj-1
set fwc=hj[Fj]
set jj[fwc]=1148
endif
set MM=MM-1
return fwc
endfunction
function V0c takes string X0c returns integer
local integer C0c
set w3[MM]=X0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C0c=kj
set jj[C0c]=923
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 581")
set C0c=0
endif
else
set Fj=Fj-1
set C0c=hj[Fj]
set jj[C0c]=923
endif
set MM=MM-1
return C0c
endfunction
function V2c takes string X2c returns integer
local integer C2c
set w3[MM]=X2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C2c=kj
set jj[C2c]=876
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 120")
set C2c=0
endif
else
set Fj=Fj-1
set C2c=hj[Fj]
set jj[C2c]=876
endif
set MM=MM-1
return C2c
endfunction
function V4c takes string X4c returns integer
local integer C4c
set w3[MM]=X4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C4c=kj
set jj[C4c]=1100
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 57")
set C4c=0
endif
else
set Fj=Fj-1
set C4c=hj[Fj]
set jj[C4c]=1100
endif
set MM=MM-1
return C4c
endfunction
function V5c takes string X5c returns integer
local integer C5c
set w3[MM]=X5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C5c=kj
set jj[C5c]=1185
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 175")
set C5c=0
endif
else
set Fj=Fj-1
set C5c=hj[Fj]
set jj[C5c]=1185
endif
set MM=MM-1
return C5c
endfunction
function V6c takes string X6c returns integer
local integer C6c
set w3[MM]=X6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C6c=kj
set jj[C6c]=889
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 266")
set C6c=0
endif
else
set Fj=Fj-1
set C6c=hj[Fj]
set jj[C6c]=889
endif
set MM=MM-1
return C6c
endfunction
function V7c takes string X7c returns integer
local integer C7c
set w3[MM]=X7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C7c=kj
set jj[C7c]=1191
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 323")
set C7c=0
endif
else
set Fj=Fj-1
set C7c=hj[Fj]
set jj[C7c]=1191
endif
set MM=MM-1
return C7c
endfunction
function V8c takes string X8c returns integer
local integer C8c
set w3[MM]=X8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C8c=kj
set jj[C8c]=906
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 377")
set C8c=0
endif
else
set Fj=Fj-1
set C8c=hj[Fj]
set jj[C8c]=906
endif
set MM=MM-1
return C8c
endfunction
function V9c takes string X9c returns integer
local integer C9c
set w3[MM]=X9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C9c=kj
set jj[C9c]=1131
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 453")
set C9c=0
endif
else
set Fj=Fj-1
set C9c=hj[Fj]
set jj[C9c]=1131
endif
set MM=MM-1
return C9c
endfunction
function V_c takes string X_c returns integer
local integer C_c
set w3[MM]=X_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set C_c=kj
set jj[C_c]=1146
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 650")
set C_c=0
endif
else
set Fj=Fj-1
set C_c=hj[Fj]
set jj[C_c]=1146
endif
set MM=MM-1
return C_c
endfunction
function Vuc takes string Xuc returns integer
local integer Cuc
set w3[MM]=Xuc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Cuc=kj
set jj[Cuc]=948
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 766")
set Cuc=0
endif
else
set Fj=Fj-1
set Cuc=hj[Fj]
set jj[Cuc]=948
endif
set MM=MM-1
return Cuc
endfunction
function Vwc takes string Xwc returns integer
local integer Cwc
set w3[MM]=Xwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Cwc=kj
set jj[Cwc]=1150
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 703")
set Cwc=0
endif
else
set Fj=Fj-1
set Cwc=hj[Fj]
set jj[Cwc]=1150
endif
set MM=MM-1
return Cwc
endfunction
function Z0c takes string W0c returns integer
local integer E0c
set w3[MM]=W0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E0c=kj
set jj[E0c]=921
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 569")
set E0c=0
endif
else
set Fj=Fj-1
set E0c=hj[Fj]
set jj[E0c]=921
endif
set MM=MM-1
return E0c
endfunction
function Z2c takes string W2c returns integer
local integer E2c
set w3[MM]=W2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E2c=kj
set jj[E2c]=874
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 106")
set E2c=0
endif
else
set Fj=Fj-1
set E2c=hj[Fj]
set jj[E2c]=874
endif
set MM=MM-1
return E2c
endfunction
function Z4c takes string W4c returns integer
local integer E4c
set w3[MM]=W4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E4c=kj
set jj[E4c]=1099
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 19")
set E4c=0
endif
else
set Fj=Fj-1
set E4c=hj[Fj]
set jj[E4c]=1099
endif
set MM=MM-1
return E4c
endfunction
function Z5c takes string W5c returns integer
local integer E5c
set w3[MM]=W5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E5c=kj
set jj[E5c]=1109
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 161")
set E5c=0
endif
else
set Fj=Fj-1
set E5c=hj[Fj]
set jj[E5c]=1109
endif
set MM=MM-1
return E5c
endfunction
function Z6c takes string W6c returns integer
local integer E6c
set w3[MM]=W6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E6c=kj
set jj[E6c]=886
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 245")
set E6c=0
endif
else
set Fj=Fj-1
set E6c=hj[Fj]
set jj[E6c]=886
endif
set MM=MM-1
return E6c
endfunction
function Z7c takes string W7c returns integer
local integer E7c
set w3[MM]=W7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E7c=kj
set jj[E7c]=1115
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 306")
set E7c=0
endif
else
set Fj=Fj-1
set E7c=hj[Fj]
set jj[E7c]=1115
endif
set MM=MM-1
return E7c
endfunction
function Z8c takes string W8c returns integer
local integer E8c
set w3[MM]=W8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E8c=kj
set jj[E8c]=904
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 364")
set E8c=0
endif
else
set Fj=Fj-1
set E8c=hj[Fj]
set jj[E8c]=904
endif
set MM=MM-1
return E8c
endfunction
function Z9c takes string W9c returns integer
local integer E9c
set w3[MM]=W9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E9c=kj
set jj[E9c]=1129
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 417")
set E9c=0
endif
else
set Fj=Fj-1
set E9c=hj[Fj]
set jj[E9c]=1129
endif
set MM=MM-1
return E9c
endfunction
function Z_c takes string W_c returns integer
local integer E_c
set w3[MM]=W_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set E_c=kj
set jj[E_c]=1145
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 637")
set E_c=0
endif
else
set Fj=Fj-1
set E_c=hj[Fj]
set jj[E_c]=1145
endif
set MM=MM-1
return E_c
endfunction
function Zrc takes string Wrc returns integer
local integer Erc
set w3[MM]=Wrc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Erc=kj
set jj[Erc]=1158
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 806")
set Erc=0
endif
else
set Fj=Fj-1
set Erc=hj[Fj]
set jj[Erc]=1158
endif
set MM=MM-1
return Erc
endfunction
function Zuc takes string Wuc returns integer
local integer Euc
set w3[MM]=Wuc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Euc=kj
set jj[Euc]=946
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 752")
set Euc=0
endif
else
set Fj=Fj-1
set Euc=hj[Fj]
set jj[Euc]=946
endif
set MM=MM-1
return Euc
endfunction
function Zwc takes string Wwc returns integer
local integer Ewc
set w3[MM]=Wwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set Ewc=kj
set jj[Ewc]=938
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 692")
set Ewc=0
endif
else
set Fj=Fj-1
set Ewc=hj[Fj]
set jj[Ewc]=938
endif
set MM=MM-1
return Ewc
endfunction
function b0c takes string O0c returns integer
local integer l0c
set w3[MM]=O0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l0c=kj
set jj[l0c]=917
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 489")
set l0c=0
endif
else
set Fj=Fj-1
set l0c=hj[Fj]
set jj[l0c]=917
endif
set MM=MM-1
return l0c
endfunction
function b2c takes string O2c returns integer
local integer l2c
set w3[MM]=O2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l2c=kj
set jj[l2c]=870
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 82")
set l2c=0
endif
else
set Fj=Fj-1
set l2c=hj[Fj]
set jj[l2c]=870
endif
set MM=MM-1
return l2c
endfunction
function b5c takes string O5c returns integer
local integer l5c
set w3[MM]=O5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l5c=kj
set jj[l5c]=1183
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 136")
set l5c=0
endif
else
set Fj=Fj-1
set l5c=hj[Fj]
set jj[l5c]=1183
endif
set MM=MM-1
return l5c
endfunction
function b7c takes string O7c returns integer
local integer l7c
set w3[MM]=O7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l7c=kj
set jj[l7c]=1113
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 282")
set l7c=0
endif
else
set Fj=Fj-1
set l7c=hj[Fj]
set jj[l7c]=1113
endif
set MM=MM-1
return l7c
endfunction
function b8c takes string O8c returns integer
local integer l8c
set w3[MM]=O8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l8c=kj
set jj[l8c]=900
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 340")
set l8c=0
endif
else
set Fj=Fj-1
set l8c=hj[Fj]
set jj[l8c]=900
endif
set MM=MM-1
return l8c
endfunction
function b9c takes string O9c returns integer
local integer l9c
set w3[MM]=O9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l9c=kj
set jj[l9c]=1192
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 395")
set l9c=0
endif
else
set Fj=Fj-1
set l9c=hj[Fj]
set jj[l9c]=1192
endif
set MM=MM-1
return l9c
endfunction
function b_c takes string O_c returns integer
local integer l_c
set w3[MM]=O_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set l_c=kj
set jj[l_c]=1141
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 596")
set l_c=0
endif
else
set Fj=Fj-1
set l_c=hj[Fj]
set jj[l_c]=1141
endif
set MM=MM-1
return l_c
endfunction
function brc takes string Orc returns integer
local integer lrc
set w3[MM]=Orc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lrc=kj
set jj[lrc]=1154
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 780")
set lrc=0
endif
else
set Fj=Fj-1
set lrc=hj[Fj]
set jj[lrc]=1154
endif
set MM=MM-1
return lrc
endfunction
function buc takes string Ouc returns integer
local integer luc
set w3[MM]=Ouc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set luc=kj
set jj[luc]=942
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 727")
set luc=0
endif
else
set Fj=Fj-1
set luc=hj[Fj]
set jj[luc]=942
endif
set MM=MM-1
return luc
endfunction
function bwc takes string Owc returns integer
local integer lwc
set w3[MM]=Owc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set lwc=kj
set jj[lwc]=934
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 665")
set lwc=0
endif
else
set Fj=Fj-1
set lwc=hj[Fj]
set jj[lwc]=934
endif
set MM=MM-1
return lwc
endfunction
function e0c takes string y0c returns integer
local integer p0c
set w3[MM]=y0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p0c=kj
set jj[p0c]=1134
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 514")
set p0c=0
endif
else
set Fj=Fj-1
set p0c=hj[Fj]
set jj[p0c]=1134
endif
set MM=MM-1
return p0c
endfunction
function e2c takes string y2c returns integer
local integer p2c
set w3[MM]=y2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p2c=kj
set jj[p2c]=1179
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 86")
set p2c=0
endif
else
set Fj=Fj-1
set p2c=hj[Fj]
set jj[p2c]=1179
endif
set MM=MM-1
return p2c
endfunction
function e5c takes string y5c returns integer
local integer p5c
set w3[MM]=y5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p5c=kj
set jj[p5c]=879
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 138")
set p5c=0
endif
else
set Fj=Fj-1
set p5c=hj[Fj]
set jj[p5c]=879
endif
set MM=MM-1
return p5c
endfunction
function e6c takes string y6c returns integer
local integer p6c
set w3[MM]=y6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p6c=kj
set jj[p6c]=847
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 222")
set p6c=0
endif
else
set Fj=Fj-1
set p6c=hj[Fj]
set jj[p6c]=847
endif
set MM=MM-1
return p6c
endfunction
function e7c takes string y7c returns integer
local integer p7c
set w3[MM]=y7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p7c=kj
set jj[p7c]=892
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 285")
set p7c=0
endif
else
set Fj=Fj-1
set p7c=hj[Fj]
set jj[p7c]=892
endif
set MM=MM-1
return p7c
endfunction
function e8c takes string y8c returns integer
local integer p8c
set w3[MM]=y8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p8c=kj
set jj[p8c]=1118
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 343")
set p8c=0
endif
else
set Fj=Fj-1
set p8c=hj[Fj]
set jj[p8c]=1118
endif
set MM=MM-1
return p8c
endfunction
function e9c takes string y9c returns integer
local integer p9c
set w3[MM]=y9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p9c=kj
set jj[p9c]=909
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 397")
set p9c=0
endif
else
set Fj=Fj-1
set p9c=hj[Fj]
set jj[p9c]=909
endif
set MM=MM-1
return p9c
endfunction
function e_c takes string y_c returns integer
local integer p_c
set w3[MM]=y_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set p_c=kj
set jj[p_c]=926
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 599")
set p_c=0
endif
else
set Fj=Fj-1
set p_c=hj[Fj]
set jj[p_c]=926
endif
set MM=MM-1
return p_c
endfunction
function erc takes string yrc returns integer
local integer prc
set w3[MM]=yrc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set prc=kj
set jj[prc]=951
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 782")
set prc=0
endif
else
set Fj=Fj-1
set prc=hj[Fj]
set jj[prc]=951
endif
set MM=MM-1
return prc
endfunction
function euc takes string yuc returns integer
local integer puc
set w3[MM]=yuc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set puc=kj
set jj[puc]=1200
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 730")
set puc=0
endif
else
set Fj=Fj-1
set puc=hj[Fj]
set jj[puc]=1200
endif
set MM=MM-1
return puc
endfunction
function ewc takes string ywc returns integer
local integer pwc
set w3[MM]=ywc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set pwc=kj
set jj[pwc]=1196
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 669")
set pwc=0
endif
else
set Fj=Fj-1
set pwc=hj[Fj]
set jj[pwc]=1196
endif
set MM=MM-1
return pwc
endfunction
function i0c takes string s0c returns integer
local integer t0c
set w3[MM]=s0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t0c=kj
set jj[t0c]=916
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 460")
set t0c=0
endif
else
set Fj=Fj-1
set t0c=hj[Fj]
set jj[t0c]=916
endif
set MM=MM-1
return t0c
endfunction
function i2c takes string s2c returns integer
local integer t2c
set w3[MM]=s2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t2c=kj
set jj[t2c]=869
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 75")
set t2c=0
endif
else
set Fj=Fj-1
set t2c=hj[Fj]
set jj[t2c]=869
endif
set MM=MM-1
return t2c
endfunction
function i5c takes string s5c returns integer
local integer t5c
set w3[MM]=s5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t5c=kj
set jj[t5c]=1106
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 129")
set t5c=0
endif
else
set Fj=Fj-1
set t5c=hj[Fj]
set jj[t5c]=1106
endif
set MM=MM-1
return t5c
endfunction
function i7c takes string s7c returns integer
local integer t7c
set w3[MM]=s7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t7c=kj
set jj[t7c]=1187
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 277")
set t7c=0
endif
else
set Fj=Fj-1
set t7c=hj[Fj]
set jj[t7c]=1187
endif
set MM=MM-1
return t7c
endfunction
function i8c takes string s8c returns integer
local integer t8c
set w3[MM]=s8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t8c=kj
set jj[t8c]=899
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 334")
set t8c=0
endif
else
set Fj=Fj-1
set t8c=hj[Fj]
set jj[t8c]=899
endif
set MM=MM-1
return t8c
endfunction
function i9c takes string s9c returns integer
local integer t9c
set w3[MM]=s9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t9c=kj
set jj[t9c]=1125
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 388")
set t9c=0
endif
else
set Fj=Fj-1
set t9c=hj[Fj]
set jj[t9c]=1125
endif
set MM=MM-1
return t9c
endfunction
function i_c takes string s_c returns integer
local integer t_c
set w3[MM]=s_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set t_c=kj
set jj[t_c]=1140
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 591")
set t_c=0
endif
else
set Fj=Fj-1
set t_c=hj[Fj]
set jj[t_c]=1140
endif
set MM=MM-1
return t_c
endfunction
function irc takes string src returns integer
local integer trc
set w3[MM]=src
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set trc=kj
set jj[trc]=1153
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 775")
set trc=0
endif
else
set Fj=Fj-1
set trc=hj[Fj]
set jj[trc]=1153
endif
set MM=MM-1
return trc
endfunction
function iuc takes string suc returns integer
local integer tuc
set w3[MM]=suc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set tuc=kj
set jj[tuc]=941
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 719")
set tuc=0
endif
else
set Fj=Fj-1
set tuc=hj[Fj]
set jj[tuc]=941
endif
set MM=MM-1
return tuc
endfunction
function iwc takes string swc returns integer
local integer twc
set w3[MM]=swc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set twc=kj
set jj[twc]=933
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 659")
set twc=0
endif
else
set Fj=Fj-1
set twc=hj[Fj]
set jj[twc]=933
endif
set MM=MM-1
return twc
endfunction
function n0c takes string q0c returns integer
local integer a0c
set w3[MM]=q0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a0c=kj
set jj[a0c]=918
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 516")
set a0c=0
endif
else
set Fj=Fj-1
set a0c=hj[Fj]
set jj[a0c]=918
endif
set MM=MM-1
return a0c
endfunction
function n2c takes string q2c returns integer
local integer a2c
set w3[MM]=q2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a2c=kj
set jj[a2c]=871
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 88")
set a2c=0
endif
else
set Fj=Fj-1
set a2c=hj[Fj]
set jj[a2c]=871
endif
set MM=MM-1
return a2c
endfunction
function n5c takes string q5c returns integer
local integer a5c
set w3[MM]=q5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a5c=kj
set jj[a5c]=1107
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 141")
set a5c=0
endif
else
set Fj=Fj-1
set a5c=hj[Fj]
set jj[a5c]=1107
endif
set MM=MM-1
return a5c
endfunction
function n6c takes string q6c returns integer
local integer a6c
set w3[MM]=q6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a6c=kj
set jj[a6c]=1207
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 225")
set a6c=0
endif
else
set Fj=Fj-1
set a6c=hj[Fj]
set jj[a6c]=1207
endif
set MM=MM-1
return a6c
endfunction
function n7c takes string q7c returns integer
local integer a7c
set w3[MM]=q7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a7c=kj
set jj[a7c]=1188
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 289")
set a7c=0
endif
else
set Fj=Fj-1
set a7c=hj[Fj]
set jj[a7c]=1188
endif
set MM=MM-1
return a7c
endfunction
function n8c takes string q8c returns integer
local integer a8c
set w3[MM]=q8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a8c=kj
set jj[a8c]=901
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 346")
set a8c=0
endif
else
set Fj=Fj-1
set a8c=hj[Fj]
set jj[a8c]=901
endif
set MM=MM-1
return a8c
endfunction
function n9c takes string q9c returns integer
local integer a9c
set w3[MM]=q9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a9c=kj
set jj[a9c]=1126
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 400")
set a9c=0
endif
else
set Fj=Fj-1
set a9c=hj[Fj]
set jj[a9c]=1126
endif
set MM=MM-1
return a9c
endfunction
function n_c takes string q_c returns integer
local integer a_c
set w3[MM]=q_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set a_c=kj
set jj[a_c]=1142
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 603")
set a_c=0
endif
else
set Fj=Fj-1
set a_c=hj[Fj]
set jj[a_c]=1142
endif
set MM=MM-1
return a_c
endfunction
function nrc takes string qrc returns integer
local integer arc
set w3[MM]=qrc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set arc=kj
set jj[arc]=1155
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 785")
set arc=0
endif
else
set Fj=Fj-1
set arc=hj[Fj]
set jj[arc]=1155
endif
set MM=MM-1
return arc
endfunction
function nuc takes string quc returns integer
local integer auc
set w3[MM]=quc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set auc=kj
set jj[auc]=943
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 732")
set auc=0
endif
else
set Fj=Fj-1
set auc=hj[Fj]
set jj[auc]=943
endif
set MM=MM-1
return auc
endfunction
function nwc takes string qwc returns integer
local integer awc
set w3[MM]=qwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set awc=kj
set jj[awc]=935
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 671")
set awc=0
endif
else
set Fj=Fj-1
set awc=hj[Fj]
set jj[awc]=935
endif
set MM=MM-1
return awc
endfunction
function o0c takes string S0c returns integer
local integer c0c
set w3[MM]=S0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c0c=kj
set jj[c0c]=1133
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 487")
set c0c=0
endif
else
set Fj=Fj-1
set c0c=hj[Fj]
set jj[c0c]=1133
endif
set MM=MM-1
return c0c
endfunction
function o2c takes string S2c returns integer
local integer c2c
set w3[MM]=S2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c2c=kj
set jj[c2c]=1102
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 79")
set c2c=0
endif
else
set Fj=Fj-1
set c2c=hj[Fj]
set jj[c2c]=1102
endif
set MM=MM-1
return c2c
endfunction
function o5c takes string S5c returns integer
local integer c5c
set w3[MM]=S5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c5c=kj
set jj[c5c]=878
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 132")
set c5c=0
endif
else
set Fj=Fj-1
set c5c=hj[Fj]
set jj[c5c]=878
endif
set MM=MM-1
return c5c
endfunction
function o6c takes string S6c returns integer
local integer c6c
set w3[MM]=S6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c6c=kj
set jj[c6c]=1093
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 205")
set c6c=0
endif
else
set Fj=Fj-1
set c6c=hj[Fj]
set jj[c6c]=1093
endif
set MM=MM-1
return c6c
endfunction
function o7c takes string S7c returns integer
local integer c7c
set w3[MM]=S7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c7c=kj
set jj[c7c]=891
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 279")
set c7c=0
endif
else
set Fj=Fj-1
set c7c=hj[Fj]
set jj[c7c]=891
endif
set MM=MM-1
return c7c
endfunction
function o8c takes string S8c returns integer
local integer c8c
set w3[MM]=S8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c8c=kj
set jj[c8c]=1117
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 338")
set c8c=0
endif
else
set Fj=Fj-1
set c8c=hj[Fj]
set jj[c8c]=1117
endif
set MM=MM-1
return c8c
endfunction
function o9c takes string S9c returns integer
local integer c9c
set w3[MM]=S9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c9c=kj
set jj[c9c]=908
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 391")
set c9c=0
endif
else
set Fj=Fj-1
set c9c=hj[Fj]
set jj[c9c]=908
endif
set MM=MM-1
return c9c
endfunction
function o_c takes string S_c returns integer
local integer c_c
set w3[MM]=S_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set c_c=kj
set jj[c_c]=925
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 593")
set c_c=0
endif
else
set Fj=Fj-1
set c_c=hj[Fj]
set jj[c_c]=925
endif
set MM=MM-1
return c_c
endfunction
function orc takes string Src returns integer
local integer crc
set w3[MM]=Src
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set crc=kj
set jj[crc]=950
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 777")
set crc=0
endif
else
set Fj=Fj-1
set crc=hj[Fj]
set jj[crc]=950
endif
set MM=MM-1
return crc
endfunction
function ouc takes string Suc returns integer
local integer cuc
set w3[MM]=Suc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cuc=kj
set jj[cuc]=1199
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 725")
set cuc=0
endif
else
set Fj=Fj-1
set cuc=hj[Fj]
set jj[cuc]=1199
endif
set MM=MM-1
return cuc
endfunction
function owc takes string Swc returns integer
local integer cwc
set w3[MM]=Swc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set cwc=kj
set jj[cwc]=1147
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 662")
set cwc=0
endif
else
set Fj=Fj-1
set cwc=hj[Fj]
set jj[cwc]=1147
endif
set MM=MM-1
return cwc
endfunction
function r0c takes string w0c returns integer
local integer u0c
set w3[MM]=w0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u0c=kj
set jj[u0c]=1132
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 458")
set u0c=0
endif
else
set Fj=Fj-1
set u0c=hj[Fj]
set jj[u0c]=1132
endif
set MM=MM-1
return u0c
endfunction
function r2c takes string w2c returns integer
local integer u2c
set w3[MM]=w2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u2c=kj
set jj[u2c]=1101
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 72")
set u2c=0
endif
else
set Fj=Fj-1
set u2c=hj[Fj]
set jj[u2c]=1101
endif
set MM=MM-1
return u2c
endfunction
function r5c takes string w5c returns integer
local integer u5c
set w3[MM]=w5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u5c=kj
set jj[u5c]=877
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 126")
set u5c=0
endif
else
set Fj=Fj-1
set u5c=hj[Fj]
set jj[u5c]=877
endif
set MM=MM-1
return u5c
endfunction
function r6c takes string w6c returns integer
local integer u6c
set w3[MM]=w6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u6c=kj
set jj[u6c]=1092
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 180")
set u6c=0
endif
else
set Fj=Fj-1
set u6c=hj[Fj]
set jj[u6c]=1092
endif
set MM=MM-1
return u6c
endfunction
function r7c takes string w7c returns integer
local integer u7c
set w3[MM]=w7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u7c=kj
set jj[u7c]=890
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 273")
set u7c=0
endif
else
set Fj=Fj-1
set u7c=hj[Fj]
set jj[u7c]=890
endif
set MM=MM-1
return u7c
endfunction
function r8c takes string w8c returns integer
local integer u8c
set w3[MM]=w8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u8c=kj
set jj[u8c]=1116
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 331")
set u8c=0
endif
else
set Fj=Fj-1
set u8c=hj[Fj]
set jj[u8c]=1116
endif
set MM=MM-1
return u8c
endfunction
function r9c takes string w9c returns integer
local integer u9c
set w3[MM]=w9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u9c=kj
set jj[u9c]=907
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 384")
set u9c=0
endif
else
set Fj=Fj-1
set u9c=hj[Fj]
set jj[u9c]=907
endif
set MM=MM-1
return u9c
endfunction
function r_c takes string w_c returns integer
local integer u_c
set w3[MM]=w_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set u_c=kj
set jj[u_c]=924
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 587")
set u_c=0
endif
else
set Fj=Fj-1
set u_c=hj[Fj]
set jj[u_c]=924
endif
set MM=MM-1
return u_c
endfunction
function rrc takes string wrc returns integer
local integer urc
set w3[MM]=wrc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set urc=kj
set jj[urc]=949
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 772")
set urc=0
endif
else
set Fj=Fj-1
set urc=hj[Fj]
set jj[urc]=949
endif
set MM=MM-1
return urc
endfunction
function ruc takes string wuc returns integer
local integer uuc
set w3[MM]=wuc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uuc=kj
set jj[uuc]=1151
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 714")
set uuc=0
endif
else
set Fj=Fj-1
set uuc=hj[Fj]
set jj[uuc]=1151
endif
set MM=MM-1
return uuc
endfunction
function rwc takes string wwc returns integer
local integer uwc
set w3[MM]=wwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set uwc=kj
set jj[uwc]=1195
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 657")
set uwc=0
endif
else
set Fj=Fj-1
set uwc=hj[Fj]
set jj[uwc]=1195
endif
set MM=MM-1
return uwc
endfunction
function v4u takes nothing returns integer
return Mn
endfunction
function x0c takes string k0c returns integer
local integer j0c
set w3[MM]=k0c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j0c=kj
set jj[j0c]=920
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 558")
set j0c=0
endif
else
set Fj=Fj-1
set j0c=hj[Fj]
set jj[j0c]=920
endif
set MM=MM-1
return j0c
endfunction
function x2c takes string k2c returns integer
local integer j2c
set w3[MM]=k2c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j2c=kj
set jj[j2c]=873
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 99")
set j2c=0
endif
else
set Fj=Fj-1
set j2c=hj[Fj]
set jj[j2c]=873
endif
set MM=MM-1
return j2c
endfunction
function x5c takes string k5c returns integer
local integer j5c
set w3[MM]=k5c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j5c=kj
set jj[j5c]=1108
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 154")
set j5c=0
endif
else
set Fj=Fj-1
set j5c=hj[Fj]
set jj[j5c]=1108
endif
set MM=MM-1
return j5c
endfunction
function x6c takes string k6c returns integer
local integer j6c
set w3[MM]=k6c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j6c=kj
set jj[j6c]=850
else
call Mau("Out of memory: Could not create IBuiltin_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 237")
set j6c=0
endif
else
set Fj=Fj-1
set j6c=hj[Fj]
set jj[j6c]=850
endif
set MM=MM-1
return j6c
endfunction
function x7c takes string k7c returns integer
local integer j7c
set w3[MM]=k7c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j7c=kj
set jj[j7c]=1189
else
call Mau("Out of memory: Could not create IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 301")
set j7c=0
endif
else
set Fj=Fj-1
set j7c=hj[Fj]
set jj[j7c]=1189
endif
set MM=MM-1
return j7c
endfunction
function x8c takes string k8c returns integer
local integer j8c
set w3[MM]=k8c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j8c=kj
set jj[j8c]=903
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 358")
set j8c=0
endif
else
set Fj=Fj-1
set j8c=hj[Fj]
set jj[j8c]=903
endif
set MM=MM-1
return j8c
endfunction
function x9c takes string k9c returns integer
local integer j9c
set w3[MM]=k9c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j9c=kj
set jj[j9c]=1128
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 412")
set j9c=0
endif
else
set Fj=Fj-1
set j9c=hj[Fj]
set jj[j9c]=1128
endif
set MM=MM-1
return j9c
endfunction
function x_c takes string k_c returns integer
local integer j_c
set w3[MM]=k_c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j_c=kj
set jj[j_c]=1144
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 630")
set j_c=0
endif
else
set Fj=Fj-1
set j_c=hj[Fj]
set jj[j_c]=1144
endif
set MM=MM-1
return j_c
endfunction
function xrc takes string krc returns integer
local integer jrc
set w3[MM]=krc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jrc=kj
set jj[jrc]=1157
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 799")
set jrc=0
endif
else
set Fj=Fj-1
set jrc=hj[Fj]
set jj[jrc]=1157
endif
set MM=MM-1
return jrc
endfunction
function xuc takes string kuc returns integer
local integer juc
set w3[MM]=kuc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set juc=kj
set jj[juc]=945
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 745")
set juc=0
endif
else
set Fj=Fj-1
set juc=hj[Fj]
set jj[juc]=945
endif
set MM=MM-1
return juc
endfunction
function xwc takes string kwc returns integer
local integer jwc
set w3[MM]=kwc
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set jwc=kj
set jj[jwc]=937
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 685")
set jwc=0
endif
else
set Fj=Fj-1
set jwc=hj[Fj]
set jj[jwc]=937
endif
set MM=MM-1
return jwc
endfunction
function mOr takes string g9r returns boolean
local integer h9r
local integer F9r
local integer k9r
local integer j9r
local integer x9r
local integer v9r
local integer m9r
local integer Q9r
local integer W9r
local integer E9r
local integer Z9r
local integer U9r
local integer I9r
local integer P9r
local integer A9r
local integer D9r
local integer H9r
local integer J9r
local integer K9r
local integer L9r
local integer X9r
local integer C9r
local integer V9r
local integer B9r
local integer N9r
local integer M9r
local integer w0r
local integer u0r
local integer r0r
local integer s0r
local integer t0r
local integer i0r
local integer S0r
local integer c0r
local integer o0r
local integer O0r
local integer l0r
local integer b0r
local integer y0r
local integer p0r
local integer e0r
local integer q0r
local integer a0r
local integer n0r
local integer d0r
local integer f0r
local integer R0r
local integer T0r
local integer Y0r
local integer G0r
local integer g0r
local integer h0r
local integer F0r
local integer k0r
local integer j0r
local integer x0r
local integer v0r
local integer m0r
local integer Q0r
local integer W0r
local integer E0r
local integer Z0r
local integer U0r
local integer I0r
local integer P0r
local integer A0r
local integer D0r
local integer H0r
local integer J0r
local integer K0r
local integer L0r
local integer X0r
local integer C0r
local integer V0r
local integer B0r
local integer N0r
local integer M0r
local integer w_r
local integer u_r
local integer r_r
local integer s_r
local integer t_r
local integer i_r
local integer S_r
local integer c_r
local integer o_r
local integer O_r
local integer l_r
local integer b_r
local integer y_r
local integer p_r
local integer e_r
local integer q_r
local integer a_r
local integer n_r
local integer d_r
local integer f_r
local integer R_r
local integer T_r
local integer Y_r
local integer G_r
local integer g_r
local integer h_r
local integer F_r
local integer k_r
local integer j_r
local integer x_r
local integer v_r
local integer m_r
local integer Q_r
local integer W_r
local integer E_r
local integer Z_r
local integer U_r
local integer I_r
local integer P_r
local integer A_r
local integer D_r
local integer H_r
local integer J_r
local integer K_r
local integer L_r
local integer X_r
local integer C_r
local integer V_r
local integer B_r
local integer N_r
local integer M_r
local integer wwr
local integer uwr
local integer rwr
local integer swr
local integer twr
local integer iwr
local integer Swr
local integer cwr
local integer owr
local integer Owr
local integer lwr
local integer bwr
local integer ywr
local integer pwr
local integer ewr
local integer qwr
local integer awr
local integer nwr
local integer dwr
local integer fwr
local integer Rwr
local integer Twr
local integer Ywr
local integer Gwr
local integer gwr
local integer hwr
local integer Fwr
local integer kwr
local integer jwr
local integer xwr
local integer vwr
local integer mwr
local integer Qwr
local integer Wwr
local integer Ewr
local integer Zwr
local integer Uwr
local integer Iwr
local integer Pwr
local integer Awr
local integer Dwr
local integer Hwr
local integer Jwr
local integer Kwr
local integer Lwr
local integer Xwr
local integer Cwr
local integer Vwr
local integer Bwr
local integer Nwr
local integer Mwr
local integer wur
local integer uur
local integer rur
local integer sur
local integer tur
local integer iur
local integer Sur
local integer cur
local integer our
local integer Our
local integer lur
local integer bur
local integer yur
local integer pur
local integer eur
local integer qur
local integer aur
local integer nur
local integer dur
local integer fur
local integer Rur
local integer Tur
local integer Yur
local integer Gur
local integer gur
local integer hur
local integer Fur
local integer kur
local integer jur
local integer xur
local integer vur
local integer mur
local integer Qur
local integer Wur
local integer Eur
local integer Zur
local integer Uur
local integer Iur
local integer Pur
local integer Aur
local integer Dur
local integer Hur
local integer Jur
local integer Kur
local integer Lur
local integer Xur
local integer Cur
local integer Vur
local integer Bur
local integer Nur
local integer Mur
local integer wrr
local integer urr
local integer rrr
local integer srr
local integer trr
local integer irr
local integer Srr
local integer crr
local integer orr
local integer Orr
local integer lrr
local integer brr
local integer yrr
local integer prr
local integer err
local integer qrr
local integer arr
local integer nrr
local integer drr
local integer frr
local integer Rrr
local integer Trr
local integer Yrr
local integer Grr
local integer grr
local integer hrr
local integer Frr
local integer krr
local integer jrr
local integer xrr
local integer vrr
local integer mrr
local integer Qrr
local integer Wrr
local integer Err
local integer Zrr
local integer Urr
local integer Irr
local integer Prr
local integer Arr
local integer Drr
local integer Hrr
local integer Jrr
local integer Krr
local integer Lrr
local integer Xrr
local integer Crr
local integer Vrr
local integer Brr
local integer Nrr
local integer Mrr
local integer wsr
local integer usr
local integer rsr
local integer ssr
local integer tsr
local integer isr
local integer Ssr
local integer csr
local integer osr
local integer Osr
local integer lsr
local integer bsr
local integer ysr
local integer psr
local integer esr
local integer qsr
local integer asr
local integer nsr
local integer dsr
local integer fsr
local integer Rsr
local integer Tsr
local integer Ysr
local integer Gsr
local integer gsr
local integer hsr
local integer Fsr
local integer ksr
local integer jsr
local integer xsr
local integer vsr
local integer msr
local integer Qsr
local integer Wsr
local integer Esr
local integer Zsr
local integer Usr
local integer Isr
local integer Psr
local integer Asr
local integer Dsr
local integer Hsr
local integer Jsr
local integer Ksr
local integer Lsr
local integer Xsr
local integer Csr
local integer Vsr
local integer Bsr
local integer Nsr
local integer Msr
local integer wtr
local integer utr
local integer rtr
local integer str
local integer ttr
local integer itr
local integer Str
local integer ctr
local integer otr
local integer Otr
local integer ltr
local integer btr
local integer ytr
local integer ptr
local integer etr
local integer qtr
local integer atr
local integer ntr
local integer dtr
local integer ftr
local integer Rtr
local integer Ttr
local integer Ytr
local integer Gtr
local integer gtr
local integer htr
local integer Ftr
local integer ktr
local integer jtr
local integer xtr
local integer vtr
local integer mtr
local integer Qtr
local integer Wtr
local integer Etr
local integer Ztr
local integer Utr
local integer Itr
local integer Ptr
local integer Atr
local integer Dtr
local integer Htr
local integer Jtr
local integer Ktr
local integer Ltr
local integer Xtr
local integer Ctr
local integer Vtr
local integer Btr
local integer Ntr
local integer Mtr
local integer wir
local integer uir
local integer rir
local integer sir
local integer tir
local integer iir
local integer Sir
local integer cir
local integer oir
local integer Oir
local integer lir
local integer bir
local integer yir
local integer pir
local integer eir
local integer qir
local integer air
local integer nir
local integer dir
local integer fir
local integer Rir
local integer Tir
local integer Yir
local integer Gir
local integer gir
local integer hir
local integer Fir
local integer kir
local integer jir
local integer xir
local integer vir
local integer mir
local integer Qir
local integer Wir
local integer Eir
local integer Zir
local integer Uir
local integer Iir
local integer Pir
local integer Air
local integer Dir
local integer Hir
local integer Jir
local integer Kir
local integer Lir
local integer Xir
local integer Cir
local integer Vir
local integer Bir
local integer Nir
local integer Mir
local integer wSr
local integer uSr
local integer rSr
local integer sSr
local integer tSr
local integer iSr
local integer SSr
local integer cSr
local integer oSr
local integer OSr
local integer lSr
local integer bSr
local integer ySr
local integer pSr
local integer eSr
local integer qSr
local integer aSr
local integer nSr
local integer dSr
local integer fSr
local integer RSr
local integer TSr
local integer YSr
local integer GSr
local integer gSr
local integer hSr
local integer FSr
local integer kSr
local integer jSr
local integer xSr
local integer vSr
local integer mSr
local integer QSr
local integer WSr
local integer ESr
local integer ZSr
local integer USr
local integer ISr
local integer PSr
local integer ASr
local integer DSr
local integer HSr
local integer JSr
local integer KSr
local integer LSr
local integer XSr
local integer CSr
local integer VSr
local integer BSr
local integer NSr
local integer MSr
local integer wcr
local integer ucr
local integer rcr
local integer scr
local integer tcr
local integer icr
local integer Scr
local integer ccr
local integer ocr
local integer Ocr
local integer lcr
local integer bcr
local integer ycr
local integer pcr
local integer ecr
local integer qcr
local integer acr
local integer ncr
local integer dcr
local integer fcr
local integer Rcr
local integer Tcr
local integer Ycr
local integer Gcr
local integer gcr
local integer hcr
local integer Fcr
local integer kcr
local integer jcr
local integer xcr
local integer vcr
local integer mcr
local integer Qcr
local integer Wcr
local integer Ecr
local integer Zcr
local integer Ucr
local integer Icr
local integer Pcr
local integer Acr
local integer Dcr
local integer Hcr
local integer Jcr
local integer Kcr
local integer Lcr
local integer Xcr
local integer Ccr
local integer Vcr
local integer Bcr
local integer Ncr
local integer Mcr
local integer wor
local integer uor
local integer ror
local integer sor
local integer tor
local integer ior
local integer Sor
local integer cor
local integer oor
local integer Oor
local integer lor
local integer bor
local integer yor
local integer por
local integer eor
local integer qor
local integer aor
local integer nor
local integer dor
local integer Ror
local integer Tor
local integer Yor
local integer Gor
local integer gor
local integer hor
local integer For
local integer kor
local integer jor
local integer xor
local integer vor
local integer mor
local integer Qor
local integer Wor
local integer Eor
local integer Zor
local integer Uor
local integer Ior
local integer Por
local integer Aor
local integer Dor
local integer Hor
local integer Jor
local integer Kor
local integer Lor
local integer Xor
local integer Cor
local integer Vor
local integer Bor
local integer Nor
local integer Mor
local integer wOr
local integer uOr
local integer rOr
local integer sOr
local integer tOr
local integer iOr
local integer SOr
local integer cOr
local integer oOr
local integer OOr
local integer lOr
local integer bOr
local integer yOr
local integer pOr
local integer eOr
local integer qOr
local integer aOr
local integer nOr
local integer dOr
local integer fOr
local integer ROr
local integer TOr
local integer YOr
local integer GOr
local integer gOr
local integer hOr
local integer FOr
local integer kOr
local integer jOr
local integer xOr
local integer vOr
set w3[MM]=g9r
set MM=MM+1
set h9r=Z4c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 19")
set F9r=eDt(h9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 19")
call Fao(F9r,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 34")
set k9r=F9r
call k4o(k9r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 34")
set v9r=WHt(k9r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 19")
set Jcr=v9r
set j9r=P4c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 34")
set x9r=eDt(j9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 34")
call dao(x9r,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 49")
call C4o(Jcr,x9r,"when calling addOverload in ScmdUnitBuiltins, line 34")
call jBu(v9r,"setowner","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 19")
set m9r=H4c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 50")
set Q9r=eDt(m9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 50")
call k4o(Q9r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 53")
set Z9r=WHt(Q9r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 50")
set Kcr=Z9r
set W9r=L4c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 53")
set E9r=eDt(W9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 53")
call Fao(E9r,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 56")
call C4o(Kcr,E9r,"when calling addOverload in ScmdUnitBuiltins, line 53")
call jBu(Z9r,"getowner","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 50")
set U9r=V4c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 57")
set I9r=eDt(U9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 57")
call Fao(I9r,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 64")
set P9r=I9r
call k4o(P9r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 64")
set H9r=WHt(P9r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 57")
set Lcr=H9r
set A9r=M4c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 64")
set D9r=eDt(A9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 64")
call dao(D9r,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 71")
call C4o(Lcr,D9r,"when calling addOverload in ScmdUnitBuiltins, line 64")
call jBu(H9r,"setcolor","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 57")
set J9r=r2c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 72")
set K9r=eDt(J9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 72")
call Fao(K9r,y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 75")
set L9r=K9r
call k4o(L9r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 75")
set V9r=WHt(L9r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 72")
set Xcr=V9r
set X9r=i2c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 75")
set C9r=eDt(X9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 75")
call dao(C9r,G5u(),y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 78")
call C4o(Xcr,C9r,"when calling addOverload in ScmdUnitBuiltins, line 75")
call jBu(V9r,"setpathing","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 72")
set B9r=o2c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 79")
set N9r=eDt(B9r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 79")
call Fao(N9r,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 82")
set M9r=N9r
call k4o(M9r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 82")
set r0r=WHt(M9r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 79")
set Ccr=r0r
set w0r=b2c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 82")
set u0r=eDt(w0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 82")
call dao(u0r,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 85")
call C4o(Ccr,u0r,"when calling addOverload in ScmdUnitBuiltins, line 82")
call jBu(r0r,"setpropwindow","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 79")
set s0r=e2c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 86")
set t0r=eDt(s0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 86")
call k4o(t0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 88")
set c0r=WHt(t0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 86")
set Vcr=c0r
set i0r=n2c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 88")
set S0r=eDt(i0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 88")
call Fao(S0r,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 90")
call C4o(Vcr,S0r,"when calling addOverload in ScmdUnitBuiltins, line 88")
call jBu(c0r,"getpropwindow","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 86")
set o0r=R2c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 91")
set O0r=eDt(o0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 91")
call k4o(O0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 93")
set y0r=WHt(O0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 91")
set Bcr=y0r
set l0r=G2c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 93")
set b0r=eDt(l0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 93")
call Fao(b0r,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 95")
call C4o(Bcr,b0r,"when calling addOverload in ScmdUnitBuiltins, line 93")
call jBu(y0r,"getdefaultpropwindow","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 91")
set p0r=F2c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 96")
set e0r=eDt(p0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 96")
call Fao(e0r,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 99")
set q0r=e0r
call k4o(q0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 99")
set d0r=WHt(q0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 96")
set Ncr=d0r
set a0r=x2c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 99")
set n0r=eDt(a0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 99")
call dao(n0r,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 102")
call C4o(Ncr,n0r,"when calling addOverload in ScmdUnitBuiltins, line 99")
call IBu(d0r,vno(Rvr("setscale","when calling stringToIndex in ScmdUnitBuiltins, line 102"),Rvr("setsc","when calling stringToIndex in ScmdUnitBuiltins, line 102"),"when calling asList in ScmdUnitBuiltins, line 102"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 96")
set f0r=Q2c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 103")
set R0r=eDt(f0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 103")
call k4o(R0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 106")
set G0r=WHt(R0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 103")
set Mcr=G0r
set T0r=Z2c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 106")
set Y0r=eDt(T0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 106")
call Fao(Y0r,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 109")
call C4o(Mcr,Y0r,"when calling addOverload in ScmdUnitBuiltins, line 106")
call jBu(G0r,"getscale","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 103")
set g0r=P2c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 110")
set h0r=eDt(g0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 110")
call nno(h0r,m4u(),m4u(),m4u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 113")
set F0r=h0r
call k4o(F0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 113")
set x0r=WHt(F0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 110")
set wor=x0r
set k0r=H2c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 113")
set j0r=eDt(k0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 113")
call sno(j0r,G5u(),m4u(),m4u(),m4u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 116")
call C4o(wor,j0r,"when calling addOverload in ScmdUnitBuiltins, line 113")
call jBu(x0r,"setvertexcolor","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 110")
set v0r=L2c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 117")
set m0r=eDt(v0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 117")
call Fao(m0r,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 120")
set Q0r=m0r
call k4o(Q0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 120")
set Z0r=WHt(Q0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 117")
set uor=Z0r
set W0r=V2c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 120")
set E0r=eDt(W0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 120")
call dao(E0r,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 123")
call C4o(uor,E0r,"when calling addOverload in ScmdUnitBuiltins, line 120")
call IBu(Z0r,vno(Rvr("setmovespeed","when calling stringToIndex in ScmdUnitBuiltins, line 123"),Rvr("setmvspd","when calling stringToIndex in ScmdUnitBuiltins, line 123"),"when calling asList in ScmdUnitBuiltins, line 123"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 117")
set U0r=M2c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 124")
set I0r=eDt(U0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 124")
call k4o(I0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 126")
set D0r=WHt(I0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 124")
set ror=D0r
set P0r=r5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 126")
set A0r=eDt(P0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 126")
call Fao(A0r,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 128")
call C4o(ror,A0r,"when calling addOverload in ScmdUnitBuiltins, line 126")
call jBu(D0r,"getmovespeed","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 124")
set H0r=i5c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 129")
set J0r=eDt(H0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 129")
call Fao(J0r,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 132")
set K0r=J0r
call k4o(K0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 132")
set C0r=WHt(K0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 129")
set sor=C0r
set L0r=o5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 132")
set X0r=eDt(L0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 132")
call dao(X0r,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 135")
call C4o(sor,X0r,"when calling addOverload in ScmdUnitBuiltins, line 132")
call jBu(C0r,"setturnspeed","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 129")
set V0r=b5c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 136")
set B0r=eDt(V0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 136")
call k4o(B0r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 138")
set w_r=WHt(B0r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 136")
set tor=w_r
set N0r=e5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 138")
set M0r=eDt(N0r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 138")
call Fao(M0r,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 140")
call C4o(tor,M0r,"when calling addOverload in ScmdUnitBuiltins, line 138")
call jBu(w_r,"getturnspeed","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 136")
set u_r=n5c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 141")
set r_r=eDt(u_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 141")
call Fao(r_r,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 144")
set s_r=r_r
call k4o(s_r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 144")
set S_r=WHt(s_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 141")
set ior=S_r
set t_r=R5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 144")
set i_r=eDt(t_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 144")
call dao(i_r,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 147")
call C4o(ior,i_r,"when calling addOverload in ScmdUnitBuiltins, line 144")
call IBu(S_r,vno(Rvr("settimescale","when calling stringToIndex in ScmdUnitBuiltins, line 147"),Rvr("settsc","when calling stringToIndex in ScmdUnitBuiltins, line 147"),"when calling asList in ScmdUnitBuiltins, line 147"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 141")
set c_r=G5c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 148")
set o_r=eDt(c_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 148")
call k4o(o_r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 150")
set b_r=WHt(o_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 148")
set Sor=b_r
set O_r=F5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 150")
set l_r=eDt(O_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 150")
call Fao(l_r,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 153")
call C4o(Sor,l_r,"when calling addOverload in ScmdUnitBuiltins, line 150")
call jBu(b_r,"gettimescale","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 148")
set y_r=x5c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 154")
set p_r=eDt(y_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 154")
call Fao(p_r,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 157")
set e_r=p_r
call k4o(e_r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 157")
set n_r=WHt(e_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 154")
set cor=n_r
set q_r=Q5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 157")
set a_r=eDt(q_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 157")
call dao(a_r,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 160")
call C4o(cor,a_r,"when calling addOverload in ScmdUnitBuiltins, line 157")
call IBu(n_r,vno(Rvr("setflyheight","when calling stringToIndex in ScmdUnitBuiltins, line 160"),Rvr("setfh","when calling stringToIndex in ScmdUnitBuiltins, line 160"),"when calling asList in ScmdUnitBuiltins, line 160"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 154")
set d_r=Z5c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 161")
set f_r=eDt(d_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 161")
call Fao(f_r,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 164")
set R_r=f_r
call k4o(R_r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 164")
set G_r=WHt(R_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 161")
set oor=G_r
set T_r=P5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 164")
set Y_r=eDt(T_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 164")
call dao(Y_r,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 167")
call C4o(oor,Y_r,"when calling addOverload in ScmdUnitBuiltins, line 164")
call jBu(G_r,"setblendtime","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 161")
set g_r=H5c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 168")
set h_r=eDt(g_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 168")
call Fao(h_r,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 171")
set F_r=h_r
call k4o(F_r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 171")
set x_r=WHt(F_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 168")
set Oor=x_r
set k_r=L5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 171")
set j_r=eDt(k_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 171")
call dao(j_r,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 174")
call C4o(Oor,j_r,"when calling addOverload in ScmdUnitBuiltins, line 171")
call IBu(x_r,vno(Rvr("setinventorysize","when calling stringToIndex in ScmdUnitBuiltins, line 174"),Rvr("setinvsz","when calling stringToIndex in ScmdUnitBuiltins, line 174"),"when calling asList in ScmdUnitBuiltins, line 174"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 168")
set v_r=V5c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 175")
set m_r=eDt(v_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 175")
call k4o(m_r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 177")
set E_r=WHt(m_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 175")
set lor=E_r
set Q_r=M5c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 177")
set W_r=eDt(Q_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 177")
call Fao(W_r,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 179")
call C4o(lor,W_r,"when calling addOverload in ScmdUnitBuiltins, line 177")
call jBu(E_r,"getinventorysize","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 175")
set Z_r=r6c("when calling alloc_IBuiltin_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 180")
set U_r=eDt(Z_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 180")
call dao(U_r,N1u(),G4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 204")
set I_r=U_r
call P4o(I_r,"when calling setProvidingEnumUnit in ScmdUnitBuiltins, line 204")
call jBu(sKt(I_r,"when calling new_BuiltinSpecialForm in ScmdUnitBuiltins, line 180"),"forgroup","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 180")
set P_r=o6c("when calling alloc_IBuiltin_setArgumentsTypes_setProvidingEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 205")
set A_r=eDt(P_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 205")
call Fao(A_r,G4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 221")
set D_r=A_r
call P4o(D_r,"when calling setProvidingEnumUnit in ScmdUnitBuiltins, line 221")
call jBu(sKt(D_r,"when calling new_BuiltinSpecialForm in ScmdUnitBuiltins, line 205"),"forall","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 205")
set H_r=e6c("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 222")
call jBu(WHt(eDt(H_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 222"),"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 222"),"group","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 222")
set J_r=n6c("when calling alloc_IBuiltin_setRequiringEnumUnit_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 225")
set K_r=eDt(J_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 225")
call k4o(K_r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 227")
call jBu(WHt(K_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 225"),"getenumunit","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 225")
set L_r=R6c("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 228")
call jBu(WHt(eDt(L_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 228"),"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 228"),"getall","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 228")
set X_r=G6c("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 231")
call jBu(WHt(eDt(X_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 231"),"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 231"),"getselected","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 231")
set C_r=F6c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 234")
set V_r=eDt(C_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 234")
call Fao(V_r,S2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 236")
call jBu(WHt(V_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 234"),"getinrect","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 234")
set B_r=x6c("when calling alloc_IBuiltin_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 237")
call jBu(WHt(eDt(B_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 237"),"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 237"),"clearselection","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 237")
set N_r=Q6c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 242")
set M_r=eDt(N_r,"when calling new_BuiltinData in ScmdUnitBuiltins, line 242")
call k4o(M_r,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 245")
set rwr=WHt(M_r,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 242")
set bor=rwr
set wwr=Z6c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 245")
set uwr=eDt(wwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 245")
call Fao(uwr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 248")
call C4o(bor,uwr,"when calling addOverload in ScmdUnitBuiltins, line 245")
call jBu(rwr,"resetcooldown","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 242")
set swr=P6c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 249")
set twr=eDt(swr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 249")
call nno(twr,o2u(),w2u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 251")
set cwr=WHt(twr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 249")
set yor=cwr
set iwr=H6c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 251")
set Swr=eDt(iwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 251")
call sno(Swr,m4u(),o2u(),w2u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 262")
call C4o(yor,Swr,"when calling addOverload in ScmdUnitBuiltins, line 251")
call jBu(cwr,"create","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 249")
set owr=L6c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 263")
set Owr=eDt(owr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 263")
call Fao(Owr,v4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 266")
set lwr=Owr
call k4o(lwr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 266")
set pwr=WHt(lwr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 263")
set por=pwr
set bwr=V6c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 266")
set ywr=eDt(bwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 266")
call dao(ywr,v4u(),G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 269")
call C4o(por,ywr,"when calling addOverload in ScmdUnitBuiltins, line 266")
call jBu(pwr,"groupaddunit","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 263")
set ewr=M6c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 270")
set qwr=eDt(ewr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 270")
call Fao(qwr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 273")
set awr=qwr
call k4o(awr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 273")
set fwr=WHt(awr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 270")
set eor=fwr
set nwr=r7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 273")
set dwr=eDt(nwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 273")
call dao(dwr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 276")
call C4o(eor,dwr,"when calling addOverload in ScmdUnitBuiltins, line 273")
call jBu(fwr,"setmaxhp","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 270")
set Rwr=i7c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 277")
set Twr=eDt(Rwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 277")
call k4o(Twr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 279")
set gwr=WHt(Twr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 277")
set qor=gwr
set Ywr=o7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 279")
set Gwr=eDt(Ywr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 279")
call Fao(Gwr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 281")
call C4o(qor,Gwr,"when calling addOverload in ScmdUnitBuiltins, line 279")
call jBu(gwr,"getmaxhp","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 277")
set hwr=b7c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 282")
set Fwr=eDt(hwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 282")
call Fao(Fwr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 285")
set kwr=Fwr
call k4o(kwr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 285")
set vwr=WHt(kwr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 282")
set aor=vwr
set jwr=e7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 285")
set xwr=eDt(jwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 285")
call dao(xwr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 288")
call C4o(aor,xwr,"when calling addOverload in ScmdUnitBuiltins, line 285")
call jBu(vwr,"setmaxmana","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 282")
set mwr=n7c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 289")
set Qwr=eDt(mwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 289")
call k4o(Qwr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 291")
set Zwr=WHt(Qwr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 289")
set nor=Zwr
set Wwr=R7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 291")
set Ewr=eDt(Wwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 291")
call Fao(Ewr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 293")
call C4o(nor,Ewr,"when calling addOverload in ScmdUnitBuiltins, line 291")
call jBu(Zwr,"getmaxmana","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 289")
set Uwr=G7c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 294")
set Iwr=eDt(Uwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 294")
call Fao(Iwr,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 297")
set Pwr=Iwr
call k4o(Pwr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 297")
set Hwr=WHt(Pwr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 294")
set dor=Hwr
set Awr=F7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 297")
set Dwr=eDt(Awr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 297")
call dao(Dwr,h5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 300")
call C4o(dor,Dwr,"when calling addOverload in ScmdUnitBuiltins, line 297")
call jBu(Hwr,"sethp","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 294")
set Jwr=x7c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 301")
set Kwr=eDt(Jwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 301")
call k4o(Kwr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 303")
set Cwr=WHt(Kwr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 301")
set Ror=Cwr
set Lwr=Q7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 303")
set Xwr=eDt(Lwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 303")
call Fao(Xwr,h5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 305")
call C4o(Ror,Xwr,"when calling addOverload in ScmdUnitBuiltins, line 303")
call jBu(Cwr,"gethp","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 301")
set Vwr=Z7c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 306")
set Bwr=eDt(Vwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 306")
call Fao(Bwr,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 309")
set Nwr=Bwr
call k4o(Nwr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 309")
set uur=WHt(Nwr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 306")
set Tor=uur
set Mwr=P7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 309")
set wur=eDt(Mwr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 309")
call dao(wur,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 312")
call C4o(Tor,wur,"when calling addOverload in ScmdUnitBuiltins, line 309")
call jBu(uur,"setmana","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 306")
set rur=H7c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 313")
set sur=eDt(rur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 313")
call k4o(sur,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 315")
set Sur=WHt(sur,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 313")
set Yor=Sur
set tur=L7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 315")
set iur=eDt(tur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 315")
call Fao(iur,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 317")
call C4o(Yor,iur,"when calling addOverload in ScmdUnitBuiltins, line 315")
call jBu(Sur,"getmana","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 313")
set cur=V7c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 323")
set our=eDt(cur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 323")
call k4o(our,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 326")
set bur=WHt(our,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 323")
set Gor=bur
set Our=M7c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 326")
set lur=eDt(Our,"when calling new_BuiltinData in ScmdUnitBuiltins, line 326")
call Fao(lur,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 329")
call C4o(Gor,lur,"when calling addOverload in ScmdUnitBuiltins, line 326")
call jBu(bur,"refresh","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 323")
set yur=r8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 331")
set pur=eDt(yur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 331")
call dao(pur,m4u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 334")
set eur=pur
call k4o(eur,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 334")
set nur=WHt(eur,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 331")
set gor=nur
set qur=i8c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 334")
set aur=eDt(qur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 334")
call Pao(aur,G5u(),m4u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 337")
call C4o(gor,aur,"when calling addOverload in ScmdUnitBuiltins, line 334")
call jBu(nur,"setbasedamage","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 331")
set dur=o8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 338")
set fur=eDt(dur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 338")
call Fao(fur,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 340")
set Rur=fur
call k4o(Rur,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 340")
set Gur=WHt(Rur,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 338")
set hor=Gur
set Tur=b8c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 340")
set Yur=eDt(Tur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 340")
call dao(Yur,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 342")
call C4o(hor,Yur,"when calling addOverload in ScmdUnitBuiltins, line 340")
call jBu(Gur,"getbasedamage","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 338")
set gur=e8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 343")
set hur=eDt(gur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 343")
call dao(hur,m4u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 346")
set Fur=hur
call k4o(Fur,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 346")
set xur=WHt(Fur,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 343")
set For=xur
set kur=n8c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 346")
set jur=eDt(kur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 346")
call Pao(jur,G5u(),m4u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 349")
call C4o(For,jur,"when calling addOverload in ScmdUnitBuiltins, line 346")
call jBu(xur,"setdicesides","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 343")
set vur=R8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 350")
set mur=eDt(vur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 350")
call Fao(mur,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 352")
set Qur=mur
call k4o(Qur,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 352")
set Zur=WHt(Qur,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 350")
set kor=Zur
set Wur=G8c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 352")
set Eur=eDt(Wur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 352")
call dao(Eur,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 354")
call C4o(kor,Eur,"when calling addOverload in ScmdUnitBuiltins, line 352")
call jBu(Zur,"getdicesides","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 350")
set Uur=F8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 355")
set Iur=eDt(Uur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 355")
call dao(Iur,m4u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 358")
set Pur=Iur
call k4o(Pur,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 358")
set Hur=WHt(Pur,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 355")
set jor=Hur
set Aur=x8c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 358")
set Dur=eDt(Aur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 358")
call Pao(Dur,G5u(),m4u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 361")
call C4o(jor,Dur,"when calling addOverload in ScmdUnitBuiltins, line 358")
call jBu(Hur,"setdicenumber","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 355")
set Jur=Q8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 362")
set Kur=eDt(Jur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 362")
call Fao(Kur,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 364")
set Lur=Kur
call k4o(Lur,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 364")
set Vur=WHt(Lur,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 362")
set xor=Vur
set Xur=Z8c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 364")
set Cur=eDt(Xur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 364")
call dao(Cur,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 366")
call C4o(xor,Cur,"when calling addOverload in ScmdUnitBuiltins, line 364")
call jBu(Vur,"getdicenumber","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 362")
set Bur=P8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 367")
set Nur=eDt(Bur,"when calling new_BuiltinData in ScmdUnitBuiltins, line 367")
call Fao(Nur,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 370")
set Mur=Nur
call k4o(Mur,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 370")
set rrr=WHt(Mur,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 367")
set vor=rrr
set wrr=H8c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 370")
set urr=eDt(wrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 370")
call dao(urr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 373")
call C4o(vor,urr,"when calling addOverload in ScmdUnitBuiltins, line 370")
call jBu(rrr,"setarmor","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 367")
set srr=L8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 374")
set trr=eDt(srr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 374")
call Fao(trr,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 377")
set irr=trr
call k4o(irr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 377")
set orr=WHt(irr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 374")
set mor=orr
set Srr=V8c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 377")
set crr=eDt(Srr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 377")
call dao(crr,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 380")
call C4o(mor,crr,"when calling addOverload in ScmdUnitBuiltins, line 377")
call IBu(orr,vno(Rvr("sethpregeneration","when calling stringToIndex in ScmdUnitBuiltins, line 380"),Rvr("sethpreg","when calling stringToIndex in ScmdUnitBuiltins, line 380"),"when calling asList in ScmdUnitBuiltins, line 380"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 374")
set Orr=M8c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 381")
set lrr=eDt(Orr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 381")
call Fao(lrr,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 384")
set brr=lrr
call k4o(brr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 384")
set err=WHt(brr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 381")
set Qor=err
set yrr=r9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 384")
set prr=eDt(yrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 384")
call dao(prr,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 387")
call C4o(Qor,prr,"when calling addOverload in ScmdUnitBuiltins, line 384")
call IBu(err,vno(Rvr("setmanaregeneration","when calling stringToIndex in ScmdUnitBuiltins, line 387"),Rvr("setmanareg","when calling stringToIndex in ScmdUnitBuiltins, line 387"),"when calling asList in ScmdUnitBuiltins, line 387"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 381")
set qrr=i9c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 388")
set arr=eDt(qrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 388")
call Fao(arr,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 391")
set nrr=arr
call k4o(nrr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 391")
set Rrr=WHt(nrr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 388")
set Wor=Rrr
set drr=o9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 391")
set frr=eDt(drr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 391")
call dao(frr,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 394")
call C4o(Wor,frr,"when calling addOverload in ScmdUnitBuiltins, line 391")
call IBu(Rrr,vno(Rvr("setsightradius","when calling stringToIndex in ScmdUnitBuiltins, line 394"),Rvr("setsgtrds","when calling stringToIndex in ScmdUnitBuiltins, line 394"),"when calling asList in ScmdUnitBuiltins, line 394"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 388")
set Trr=b9c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 395")
set Yrr=eDt(Trr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 395")
call k4o(Yrr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 397")
set hrr=WHt(Yrr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 395")
set Eor=hrr
set Grr=e9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 397")
set grr=eDt(Grr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 397")
call Fao(grr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 399")
call C4o(Eor,grr,"when calling addOverload in ScmdUnitBuiltins, line 397")
call jBu(hrr,"getarmor","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 395")
set Frr=n9c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 400")
set krr=eDt(Frr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 400")
call dao(krr,w2u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 403")
set jrr=krr
call k4o(jrr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 403")
set mrr=WHt(jrr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 400")
set Zor=mrr
set xrr=R9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 403")
set vrr=eDt(xrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 403")
call Pao(vrr,G5u(),w2u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 406")
call C4o(Zor,vrr,"when calling addOverload in ScmdUnitBuiltins, line 403")
call IBu(mrr,vno(Rvr("setattackcooldown","when calling stringToIndex in ScmdUnitBuiltins, line 406"),Rvr("setatkcd","when calling stringToIndex in ScmdUnitBuiltins, line 406"),"when calling asList in ScmdUnitBuiltins, line 406"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 400")
set Qrr=G9c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 407")
set Wrr=eDt(Qrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 407")
call dao(Wrr,m4u(),y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 409")
set Err=Wrr
call k4o(Err,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 409")
set Irr=WHt(Err,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 407")
set Uor=Irr
set Zrr=F9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 409")
set Urr=eDt(Zrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 409")
call Pao(Urr,G5u(),m4u(),y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 411")
call C4o(Uor,Urr,"when calling addOverload in ScmdUnitBuiltins, line 409")
call IBu(Irr,vno(Rvr("setattackenabled","when calling stringToIndex in ScmdUnitBuiltins, line 411"),Rvr("setatkena","when calling stringToIndex in ScmdUnitBuiltins, line 411"),"when calling asList in ScmdUnitBuiltins, line 411"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 407")
set Prr=x9c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 412")
set Arr=eDt(Prr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 412")
call Fao(Arr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 414")
set Drr=Arr
call k4o(Drr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 414")
set Krr=WHt(Drr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 412")
set Ior=Krr
set Hrr=Q9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 414")
set Jrr=eDt(Hrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 414")
call dao(Jrr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 416")
call C4o(Ior,Jrr,"when calling addOverload in ScmdUnitBuiltins, line 414")
call jBu(Krr,"getattackcooldown","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 412")
set Lrr=Z9c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 417")
set Xrr=eDt(Lrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 417")
call dao(Xrr,w2u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 420")
set Crr=Xrr
call k4o(Crr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 420")
set Nrr=WHt(Crr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 417")
set Por=Nrr
set Vrr=P9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 420")
set Brr=eDt(Vrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 420")
call Pao(Brr,G5u(),w2u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 423")
call C4o(Por,Brr,"when calling addOverload in ScmdUnitBuiltins, line 420")
call IBu(Nrr,vno(Rvr("setattackrange","when calling stringToIndex in ScmdUnitBuiltins, line 423"),Rvr("setatkrng","when calling stringToIndex in ScmdUnitBuiltins, line 423"),"when calling asList in ScmdUnitBuiltins, line 423"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 417")
set Mrr=H9c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 424")
set wsr=eDt(Mrr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 424")
call Fao(wsr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 426")
set usr=wsr
call k4o(usr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 426")
set tsr=WHt(usr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 424")
set Aor=tsr
set rsr=L9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 426")
set ssr=eDt(rsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 426")
call dao(ssr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 428")
call C4o(Aor,ssr,"when calling addOverload in ScmdUnitBuiltins, line 426")
call jBu(tsr,"getattackrange","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 424")
set isr=V9c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 453")
set Ssr=eDt(isr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 453")
call dao(Ssr,m4u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 455")
set csr=Ssr
call k4o(csr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 455")
set lsr=WHt(csr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 453")
set Dor=lsr
set osr=M9c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 455")
set Osr=eDt(osr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 455")
call Pao(Osr,G5u(),m4u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 457")
call C4o(Dor,Osr,"when calling addOverload in ScmdUnitBuiltins, line 455")
call IBu(lsr,vno(Rvr("setattacktype","when calling stringToIndex in ScmdUnitBuiltins, line 457"),Rvr("setatkt","when calling stringToIndex in ScmdUnitBuiltins, line 457"),"when calling asList in ScmdUnitBuiltins, line 457"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 453")
set bsr=r0c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 458")
set ysr=eDt(bsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 458")
call dao(ysr,m4u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 460")
set psr=ysr
call k4o(psr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 460")
set asr=WHt(psr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 458")
set Hor=asr
set esr=i0c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 460")
set qsr=eDt(esr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 460")
call Pao(qsr,G5u(),m4u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 462")
call C4o(Hor,qsr,"when calling addOverload in ScmdUnitBuiltins, line 460")
call IBu(asr,vno(Rvr("setprojectile","when calling stringToIndex in ScmdUnitBuiltins, line 462"),Rvr("setprj","when calling stringToIndex in ScmdUnitBuiltins, line 462"),"when calling asList in ScmdUnitBuiltins, line 462"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 458")
set nsr=o0c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 487")
set dsr=eDt(nsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 487")
call Fao(dsr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 489")
set fsr=dsr
call k4o(fsr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 489")
set Ysr=WHt(fsr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 487")
set Jor=Ysr
set Rsr=b0c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 489")
set Tsr=eDt(Rsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 489")
call dao(Tsr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 491")
call C4o(Jor,Tsr,"when calling addOverload in ScmdUnitBuiltins, line 489")
call IBu(Ysr,vno(Rvr("setdefensetype","when calling stringToIndex in ScmdUnitBuiltins, line 491"),Rvr("setdeft","when calling stringToIndex in ScmdUnitBuiltins, line 491"),"when calling asList in ScmdUnitBuiltins, line 491"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 487")
set Gsr=e0c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 514")
set gsr=eDt(Gsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 514")
call Fao(gsr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 516")
set hsr=gsr
call k4o(hsr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 516")
set jsr=WHt(hsr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 514")
set Kor=jsr
set Fsr=n0c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 516")
set ksr=eDt(Fsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 516")
call dao(ksr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 518")
call C4o(Kor,ksr,"when calling addOverload in ScmdUnitBuiltins, line 516")
call IBu(jsr,vno(Rvr("setarmortype","when calling stringToIndex in ScmdUnitBuiltins, line 518"),Rvr("setarmt","when calling stringToIndex in ScmdUnitBuiltins, line 518"),"when calling asList in ScmdUnitBuiltins, line 518"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 514")
set xsr=R0c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 545")
set vsr=eDt(xsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 545")
call Fao(vsr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 547")
set msr=vsr
call k4o(msr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 547")
set Esr=WHt(msr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 545")
set Lor=Esr
set Qsr=G0c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 547")
set Wsr=eDt(Qsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 547")
call dao(Wsr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 549")
call C4o(Lor,Wsr,"when calling addOverload in ScmdUnitBuiltins, line 547")
call IBu(Esr,vno(Rvr("setmovetype","when calling stringToIndex in ScmdUnitBuiltins, line 549"),Rvr("setmvt","when calling stringToIndex in ScmdUnitBuiltins, line 549"),"when calling asList in ScmdUnitBuiltins, line 549"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 545")
set Zsr=F0c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 550")
set Usr=eDt(Zsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 550")
call Fao(Usr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 558")
set Isr=Usr
call k4o(Isr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 558")
set Dsr=WHt(Isr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 550")
set Xor=Dsr
set Psr=x0c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 558")
set Asr=eDt(Psr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 558")
call dao(Asr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 566")
call C4o(Xor,Asr,"when calling addOverload in ScmdUnitBuiltins, line 558")
call IBu(Dsr,vno(Rvr("setlevel","when calling stringToIndex in ScmdUnitBuiltins, line 566"),Rvr("setlvl","when calling stringToIndex in ScmdUnitBuiltins, line 566"),"when calling asList in ScmdUnitBuiltins, line 566"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 550")
set Hsr=Q0c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 567")
set Jsr=eDt(Hsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 567")
call k4o(Jsr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 569")
set Xsr=WHt(Jsr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 567")
set Cor=Xsr
set Ksr=Z0c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 569")
set Lsr=eDt(Ksr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 569")
call Fao(Lsr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 571")
call C4o(Cor,Lsr,"when calling addOverload in ScmdUnitBuiltins, line 569")
call jBu(Xsr,"getlevel","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 567")
set Csr=P0c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 572")
set Vsr=eDt(Csr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 572")
call Fao(Vsr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 575")
set Bsr=Vsr
call k4o(Bsr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 575")
set wtr=WHt(Bsr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 572")
set Vor=wtr
set Nsr=H0c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 575")
set Msr=eDt(Nsr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 575")
call dao(Msr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 578")
call C4o(Vor,Msr,"when calling addOverload in ScmdUnitBuiltins, line 575")
call jBu(wtr,"setstr","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 572")
set utr=L0c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 579")
set rtr=eDt(utr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 579")
call Fao(rtr,y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 581")
set str=rtr
call k4o(str,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 581")
set Str=WHt(str,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 579")
set Bor=Str
set ttr=V0c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 581")
set itr=eDt(ttr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 581")
call dao(itr,G5u(),y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 583")
call C4o(Bor,itr,"when calling addOverload in ScmdUnitBuiltins, line 581")
call jBu(Str,"getstr","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 579")
set ctr=M0c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 584")
set otr=eDt(ctr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 584")
call Fao(otr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 587")
set Otr=otr
call k4o(Otr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 587")
set ytr=WHt(Otr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 584")
set Nor=ytr
set ltr=r_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 587")
set btr=eDt(ltr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 587")
call dao(btr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 590")
call C4o(Nor,btr,"when calling addOverload in ScmdUnitBuiltins, line 587")
call jBu(ytr,"setagi","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 584")
set ptr=i_c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 591")
set etr=eDt(ptr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 591")
call Fao(etr,y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 593")
set qtr=etr
call k4o(qtr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 593")
set dtr=WHt(qtr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 591")
set Mor=dtr
set atr=o_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 593")
set ntr=eDt(atr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 593")
call dao(ntr,G5u(),y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 595")
call C4o(Mor,ntr,"when calling addOverload in ScmdUnitBuiltins, line 593")
call jBu(dtr,"getagi","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 591")
set ftr=b_c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 596")
set Rtr=eDt(ftr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 596")
call Fao(Rtr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 599")
set Ttr=Rtr
call k4o(Ttr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 599")
set gtr=WHt(Ttr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 596")
set wOr=gtr
set Ytr=e_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 599")
set Gtr=eDt(Ytr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 599")
call dao(Gtr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 602")
call C4o(wOr,Gtr,"when calling addOverload in ScmdUnitBuiltins, line 599")
call jBu(gtr,"setint","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 596")
set htr=n_c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 603")
set Ftr=eDt(htr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 603")
call Fao(Ftr,y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 605")
set ktr=Ftr
call k4o(ktr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 605")
set vtr=WHt(ktr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 603")
set uOr=vtr
set jtr=R_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 605")
set xtr=eDt(jtr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 605")
call dao(xtr,G5u(),y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 607")
call C4o(uOr,xtr,"when calling addOverload in ScmdUnitBuiltins, line 605")
call jBu(vtr,"getint","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 603")
set mtr=G_c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 624")
set Qtr=eDt(mtr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 624")
call Fao(Qtr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 626")
set Wtr=Qtr
call k4o(Wtr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 626")
set Utr=WHt(Wtr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 624")
set rOr=Utr
set Etr=F_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 626")
set Ztr=eDt(Etr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 626")
call dao(Ztr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 628")
call C4o(rOr,Ztr,"when calling addOverload in ScmdUnitBuiltins, line 626")
call IBu(Utr,vno(Rvr("setprimaryattribute","when calling stringToIndex in ScmdUnitBuiltins, line 628"),Rvr("setprimattr","when calling stringToIndex in ScmdUnitBuiltins, line 628"),"when calling asList in ScmdUnitBuiltins, line 628"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 624")
set Itr=x_c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 630")
set Ptr=eDt(Itr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 630")
call dao(Ptr,y4u(),y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 633")
set Atr=Ptr
call k4o(Atr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 633")
set Jtr=WHt(Atr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 630")
set sOr=Jtr
set Dtr=Q_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 633")
set Htr=eDt(Dtr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 633")
call Pao(Htr,G5u(),y4u(),y4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 636")
call C4o(sOr,Htr,"when calling addOverload in ScmdUnitBuiltins, line 633")
call jBu(Jtr,"removebuffs","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 630")
set Ktr=Z_c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 637")
set Ltr=eDt(Ktr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 637")
call Fao(Ltr,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 640")
set Xtr=Ltr
call k4o(Xtr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 640")
set Btr=WHt(Xtr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 637")
set tOr=Btr
set Ctr=P_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 640")
set Vtr=eDt(Ctr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 640")
call dao(Vtr,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 643")
call C4o(tOr,Vtr,"when calling addOverload in ScmdUnitBuiltins, line 640")
call IBu(Btr,vno(Rvr("setfacing","when calling stringToIndex in ScmdUnitBuiltins, line 643"),Rvr("fa","when calling stringToIndex in ScmdUnitBuiltins, line 643"),"when calling asList in ScmdUnitBuiltins, line 643"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 637")
set Ntr=H_c("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 644")
set Mtr=eDt(Ntr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 644")
call k4o(Mtr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 646")
set rir=WHt(Mtr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 644")
set iOr=rir
set wir=L_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 646")
set uir=eDt(wir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 646")
call Fao(uir,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 648")
call C4o(iOr,uir,"when calling addOverload in ScmdUnitBuiltins, line 646")
call jBu(rir,"getfacing","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 644")
set sir=V_c("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 650")
set tir=eDt(sir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 650")
call Fao(tir,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 653")
set iir=tir
call k4o(iir,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 653")
set oir=WHt(iir,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 650")
set SOr=oir
set Sir=M_c("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 653")
set cir=eDt(Sir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 653")
call dao(cir,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 656")
call C4o(SOr,cir,"when calling addOverload in ScmdUnitBuiltins, line 653")
call jBu(oir,"setx","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 650")
set Oir=rwc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 657")
set lir=eDt(Oir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 657")
call k4o(lir,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 659")
set pir=WHt(lir,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 657")
set cOr=pir
set bir=iwc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 659")
set yir=eDt(bir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 659")
call Fao(yir,h5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 661")
call C4o(cOr,yir,"when calling addOverload in ScmdUnitBuiltins, line 659")
call jBu(pir,"getx","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 657")
set eir=owc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 662")
set qir=eDt(eir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 662")
call Fao(qir,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 665")
set air=qir
call k4o(air,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 665")
set fir=WHt(air,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 662")
set oOr=fir
set nir=bwc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 665")
set dir=eDt(nir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 665")
call dao(dir,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 668")
call C4o(oOr,dir,"when calling addOverload in ScmdUnitBuiltins, line 665")
call jBu(fir,"sety","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 662")
set Rir=ewc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 669")
set Tir=eDt(Rir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 669")
call k4o(Tir,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 671")
set gir=WHt(Tir,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 669")
set OOr=gir
set Yir=nwc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 671")
set Gir=eDt(Yir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 671")
call Fao(Gir,h5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 673")
call C4o(OOr,Gir,"when calling addOverload in ScmdUnitBuiltins, line 671")
call jBu(gir,"gety","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 669")
set hir=Rwc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 675")
set Fir=eDt(hir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 675")
call Fao(Fir,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 678")
set kir=Fir
call k4o(kir,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 678")
set vir=WHt(kir,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 675")
set lOr=vir
set jir=Gwc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 678")
set xir=eDt(jir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 678")
call dao(xir,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 681")
call C4o(lOr,xir,"when calling addOverload in ScmdUnitBuiltins, line 678")
call jBu(vir,"movex","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 675")
set mir=Fwc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 682")
set Qir=eDt(mir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 682")
call Fao(Qir,w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 685")
set Wir=Qir
call k4o(Wir,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 685")
set Uir=WHt(Wir,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 682")
set bOr=Uir
set Eir=xwc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 685")
set Zir=eDt(Eir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 685")
call dao(Zir,G5u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 688")
call C4o(bOr,Zir,"when calling addOverload in ScmdUnitBuiltins, line 685")
call jBu(Uir,"movey","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 682")
set Iir=Qwc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 690")
set Pir=eDt(Iir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 690")
call k4o(Pir,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 692")
set Hir=WHt(Pir,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 690")
set yOr=Hir
set Air=Zwc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 692")
set Dir=eDt(Air,"when calling new_BuiltinData in ScmdUnitBuiltins, line 692")
call Fao(Dir,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 694")
call C4o(yOr,Dir,"when calling addOverload in ScmdUnitBuiltins, line 692")
call jBu(Hir,"gettypeid","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 690")
set Jir=Pwc("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 695")
set Kir=eDt(Jir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 695")
call Fao(Kir,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 697")
call jBu(WHt(Kir,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 695"),"isherounitid","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 695")
set Lir=Hwc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 698")
set Xir=eDt(Lir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 698")
call k4o(Xir,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 700")
set Bir=WHt(Xir,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 698")
set pOr=Bir
set Cir=Lwc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 700")
set Vir=eDt(Cir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 700")
call Fao(Vir,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 702")
call C4o(pOr,Vir,"when calling addOverload in ScmdUnitBuiltins, line 700")
call IBu(Bir,vno(Rvr("isstructure","when calling stringToIndex in ScmdUnitBuiltins, line 702"),Rvr("structure?","when calling stringToIndex in ScmdUnitBuiltins, line 702"),"when calling asList in ScmdUnitBuiltins, line 702"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 698")
set Nir=Vwc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 703")
set Mir=eDt(Nir,"when calling new_BuiltinData in ScmdUnitBuiltins, line 703")
call Fao(Mir,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 708")
set wSr=Mir
call k4o(wSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 708")
set sSr=WHt(wSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 703")
set eOr=sSr
set uSr=Mwc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 708")
set rSr=eDt(uSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 708")
call dao(rSr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 713")
call C4o(eOr,rSr,"when calling addOverload in ScmdUnitBuiltins, line 708")
call jBu(sSr,"setname","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 703")
set tSr=ruc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 714")
set iSr=eDt(tSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 714")
call Fao(iSr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 719")
set SSr=iSr
call k4o(SSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 719")
set OSr=WHt(SSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 714")
set qOr=OSr
set cSr=iuc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 719")
set oSr=eDt(cSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 719")
call dao(oSr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 724")
call C4o(qOr,oSr,"when calling addOverload in ScmdUnitBuiltins, line 719")
call jBu(OSr,"setpropername","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 714")
set lSr=ouc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 725")
set bSr=eDt(lSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 725")
call k4o(bSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 727")
set eSr=WHt(bSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 725")
set aOr=eSr
set ySr=buc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 727")
set pSr=eDt(ySr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 727")
call Fao(pSr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 729")
call C4o(aOr,pSr,"when calling addOverload in ScmdUnitBuiltins, line 727")
call jBu(eSr,"getname","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 725")
set qSr=euc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 730")
set aSr=eDt(qSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 730")
call k4o(aSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 732")
set fSr=WHt(aSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 730")
set nOr=fSr
set nSr=nuc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 732")
set dSr=eDt(nSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 732")
call Fao(dSr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 734")
call C4o(nOr,dSr,"when calling addOverload in ScmdUnitBuiltins, line 732")
call jBu(fSr,"getpropername","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 730")
set RSr=Ruc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 735")
set TSr=eDt(RSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 735")
call k4o(TSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 738")
set gSr=WHt(TSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 735")
set dOr=gSr
set YSr=Guc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 738")
set GSr=eDt(YSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 738")
call Fao(GSr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 741")
call C4o(dOr,GSr,"when calling addOverload in ScmdUnitBuiltins, line 738")
call jBu(gSr,"pause","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 735")
set hSr=Fuc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 742")
set FSr=eDt(hSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 742")
call k4o(FSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 745")
set xSr=WHt(FSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 742")
set fOr=xSr
set kSr=xuc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 745")
set jSr=eDt(kSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 745")
call Fao(jSr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 748")
call C4o(fOr,jSr,"when calling addOverload in ScmdUnitBuiltins, line 745")
call jBu(xSr,"unpause","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 742")
set vSr=Quc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 749")
set mSr=eDt(vSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 749")
call k4o(mSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 752")
set ESr=WHt(mSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 749")
set ROr=ESr
set QSr=Zuc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 752")
set WSr=eDt(QSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 752")
call Fao(WSr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 755")
call C4o(ROr,WSr,"when calling addOverload in ScmdUnitBuiltins, line 752")
call jBu(ESr,"remove","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 749")
set ZSr=Puc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 756")
set USr=eDt(ZSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 756")
call k4o(USr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 759")
set ASr=WHt(USr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 756")
set TOr=ASr
set ISr=Huc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 759")
set PSr=eDt(ISr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 759")
call Fao(PSr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 762")
call C4o(TOr,PSr,"when calling addOverload in ScmdUnitBuiltins, line 759")
call jBu(ASr,"kill","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 756")
set DSr=Luc("when calling alloc_IBuiltin_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 763")
set HSr=eDt(DSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 763")
call k4o(HSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 766")
set LSr=WHt(HSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 763")
set YOr=LSr
set JSr=Vuc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 766")
set KSr=eDt(JSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 766")
call Fao(KSr,G5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 769")
call C4o(YOr,KSr,"when calling addOverload in ScmdUnitBuiltins, line 766")
call jBu(LSr,"explode","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 763")
set XSr=Muc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 770")
set CSr=eDt(XSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 770")
call Fao(CSr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 772")
set VSr=CSr
call k4o(VSr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 772")
set MSr=WHt(VSr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 770")
set GOr=MSr
set BSr=rrc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 772")
set NSr=eDt(BSr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 772")
call dao(NSr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 774")
call C4o(GOr,NSr,"when calling addOverload in ScmdUnitBuiltins, line 772")
call jBu(MSr,"issueimmediateorder","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 770")
set wcr=irc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 775")
set ucr=eDt(wcr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 775")
call Pao(ucr,o2u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 777")
set rcr=ucr
call k4o(rcr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 777")
set icr=WHt(rcr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 775")
set gOr=icr
set scr=orc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 777")
set tcr=eDt(scr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 777")
call nno(tcr,G5u(),o2u(),w2u(),w2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 779")
call C4o(gOr,tcr,"when calling addOverload in ScmdUnitBuiltins, line 777")
call jBu(icr,"issuepointorder","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 775")
set Scr=brc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 780")
set ccr=eDt(Scr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 780")
call dao(ccr,o2u(),h5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 782")
set ocr=ccr
call k4o(ocr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 782")
set bcr=WHt(ocr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 780")
set hOr=bcr
set Ocr=erc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 782")
set lcr=eDt(Ocr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 782")
call Pao(lcr,G5u(),o2u(),h5u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 784")
call C4o(hOr,lcr,"when calling addOverload in ScmdUnitBuiltins, line 782")
call jBu(bcr,"issuetargetorder","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 780")
set ycr=nrc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 785")
set pcr=eDt(ycr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 785")
call Fao(pcr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 788")
set ecr=pcr
call k4o(ecr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 788")
set ncr=WHt(ecr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 785")
set FOr=ncr
set qcr=Rrc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 788")
set acr=eDt(qcr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 788")
call dao(acr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 791")
call C4o(FOr,acr,"when calling addOverload in ScmdUnitBuiltins, line 788")
call jBu(ncr,"queueanimation","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 785")
set dcr=Grc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 792")
set fcr=eDt(dcr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 792")
call Fao(fcr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 795")
set Rcr=fcr
call k4o(Rcr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 795")
set Gcr=WHt(Rcr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 792")
set kOr=Gcr
set Tcr=Frc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 795")
set Ycr=eDt(Tcr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 795")
call dao(Ycr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 798")
call C4o(kOr,Ycr,"when calling addOverload in ScmdUnitBuiltins, line 795")
call jBu(Gcr,"setanimation","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 792")
set gcr=xrc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 799")
set hcr=eDt(gcr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 799")
call Fao(hcr,m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 802")
set Fcr=hcr
call k4o(Fcr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 802")
set xcr=WHt(Fcr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 799")
set jOr=xcr
set kcr=Qrc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 802")
set jcr=eDt(kcr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 802")
call dao(jcr,G5u(),m4u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 805")
call C4o(jOr,jcr,"when calling addOverload in ScmdUnitBuiltins, line 802")
call jBu(xcr,"setanimationbyindex","when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 799")
set vcr=Zrc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 806")
set mcr=eDt(vcr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 806")
call Fao(mcr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 809")
set Qcr=mcr
call k4o(Qcr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 809")
set Zcr=WHt(Qcr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 806")
set xOr=Zcr
set Wcr=Prc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 809")
set Ecr=eDt(Wcr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 809")
call dao(Ecr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 812")
call C4o(xOr,Ecr,"when calling addOverload in ScmdUnitBuiltins, line 809")
call IBu(Zcr,vno(Rvr("addanimationproperties","when calling stringToIndex in ScmdUnitBuiltins, line 812"),Rvr("addanimprop","when calling stringToIndex in ScmdUnitBuiltins, line 812"),"when calling asList in ScmdUnitBuiltins, line 812"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 806")
set Ucr=Hrc("when calling alloc_IBuiltin_setArgumentsTypes_setRequiringEnumUnit_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 813")
set Icr=eDt(Ucr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 813")
call Fao(Icr,o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 816")
set Pcr=Icr
call k4o(Pcr,"when calling setRequiringEnumUnit in ScmdUnitBuiltins, line 816")
set Hcr=WHt(Pcr,"when calling new_BuiltinFunction in ScmdUnitBuiltins, line 813")
set vOr=Hcr
set Acr=Lrc("when calling alloc_IBuiltin_setArgumentsTypes_addOverload_registerProtectedBuiltin_ScmdUnitBuiltins in ScmdUnitBuiltins, line 816")
set Dcr=eDt(Acr,"when calling new_BuiltinData in ScmdUnitBuiltins, line 816")
call dao(Dcr,G5u(),o2u(),"when calling setArgumentsTypes in ScmdUnitBuiltins, line 819")
call C4o(vOr,Dcr,"when calling addOverload in ScmdUnitBuiltins, line 816")
call IBu(Hcr,vno(Rvr("removeanimationproperties","when calling stringToIndex in ScmdUnitBuiltins, line 819"),Rvr("remanimprop","when calling stringToIndex in ScmdUnitBuiltins, line 819"),"when calling asList in ScmdUnitBuiltins, line 819"),"when calling registerProtectedBuiltin in ScmdUnitBuiltins, line 813")
set MM=MM-1
return true
endfunction
function vRo takes nothing returns boolean
set MM=0
return mOr("ScmdUnitBuiltins, line 1")
endfunction
function F4u takes string g4u returns boolean
local boolean h4u
set w3[MM]=g4u
set MM=MM+1
set h4u=k7u(GetFilterUnit(),Bn,"when calling isUnitAccessibleByPlayer in ScmdDataTypes, line 1666")
set MM=MM-1
return h4u
endfunction
function vTo takes nothing returns boolean
set MM=0
return F4u("ScmdDataTypes, line 1666")
endfunction
function xUw takes nothing returns boolean
if not(F[GetConvertedPlayerId(GetTriggerPlayer())]==true)then
return false
endif
if not(SubStringBJ(GetEventPlayerChatString(),1,3)=="max")then
return false
endif
return true
endfunction
function vUw takes nothing returns boolean
if not xUw()then
return false
endif
return true
endfunction
function xXw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(GetUnitTypeId(GetEnumUnit())!=1747995479)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function vXw takes nothing returns nothing
if xXw()then
call UnitRemoveTypeBJ(UNIT_TYPE_PEON,GetEnumUnit())
endif
endfunction
function v_u takes nothing returns boolean
local integer j_u=sy
local integer x_u=uy
call LoadInteger(i,Kl[j_u],x_u)
return true
endfunction
function Cgu takes item Xgu returns real
return GetItemY(Xgu)
endfunction
function Lgu takes item Kgu returns real
return GetItemX(Kgu)
endfunction
function fVu takes string dVu returns string
return PFr(PFr(PFr(PFr(PFr(PFr(PFr(PFr(dVu,"/","/s"),"\\","/b"),"|c","/c"),"|r","/r"),"|n","/n"),"&","/a"),":","/p"),"|","/v")
endfunction
function nVu takes item qVu returns string
local string aVu=oXu(oXu(oXu("",Ohu(qVu)),WHu(qVu)),jHu(qVu))
set o4=aVu
return o4
endfunction
function oVu takes string cVu returns integer
return Sru(cVu)
endfunction
function kVu takes item RVu,real TVu,real YVu,boolean GVu,string gVu returns string
local string FVu=dLu(oVu(nVu(RVu)))+gVu+cmu(Jgu(RVu))+gVu
local string hVu
if GVu then
set hVu=ULu(Lgu(RVu)-TVu)+gVu+ULu(Cgu(RVu)-YVu)+gVu
else
set hVu=""
endif
return FVu+hVu+dLu(phu(RVu))+gVu+ULu(Qrs(RVu))+gVu+fVu(dhu(RVu))+gVu+fVu(Ghu(RVu))+gVu+fVu(jhu(RVu))+gVu+fVu(Whu(RVu))+gVu+fVu(Phu(RVu))
endfunction
function mVu takes item jVu,real xVu,real vVu returns string
return kVu(jVu,xVu,vVu,true,jn)
endfunction
function vnr takes nothing returns nothing
call ynr(mVu(GetEnumItem(),xf,vf))
endfunction
function vxw takes nothing returns nothing
call ForGroupBJ(Lu,ouw)
endfunction
function w0u takes nothing returns nothing
local timer L9u=GetExpiredTimer()
local location X9u=LoadLocationHandle(nr,GetHandleId(L9u),StringHash("l1"))
local location C9u=LoadLocationHandle(nr,GetHandleId(L9u),StringHash("l2"))
local integer V9u=LoadInteger(nr,GetHandleId(L9u),StringHash("i"))
local real B9u=GetLocationX(X9u)+V9u*250*Cos(Atan2(GetLocationY(C9u)-GetLocationY(X9u),GetLocationX(C9u)-GetLocationX(X9u)))
local real N9u=GetLocationY(X9u)+V9u*250*Sin(Atan2(GetLocationY(C9u)-GetLocationY(X9u),GetLocationX(C9u)-GetLocationX(X9u)))
local unit M9u=LoadUnitHandle(nr,GetHandleId(L9u),StringHash("u"))
call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Human\\FragmentationShards\\FragBoomSpawn.mdl",B9u,N9u))
call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Other\\NeutralBuildingExplosion\\NeutralBuildingExplosion.mdl",B9u,N9u))
call UnitDamagePoint(M9u,0.,200.,B9u,N9u,360.,true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
set M9u=null
set B9u=0.
set N9u=0.
set V9u=V9u+1
if V9u==6 then
call FlushChildHashtable(nr,GetHandleId(L9u))
call DestroyTimer(L9u)
call RemoveLocation(X9u)
call RemoveLocation(C9u)
else
call SaveInteger(nr,GetHandleId(L9u),StringHash("i"),V9u)
endif
set L9u=null
set X9u=null
set C9u=null
set V9u=0
set L9u=null
set X9u=null
set C9u=null
set M9u=null
endfunction
function w3w takes nothing returns boolean
if GetSpellAbilityId()==1093682253 then
return true
endif
return false
endfunction
function w4w takes nothing returns boolean
if not(GetUnitAbilityLevelSwapped(1093682227,GetAttacker())>0)then
return false
endif
return true
endfunction
function w7w takes nothing returns boolean
return GetSpellAbilityId()==1093679193
endfunction
function w8w takes nothing returns boolean
if not(GetSpellAbilityId()==1093682009)then
return false
endif
return true
endfunction
function NRw takes unit BRw returns nothing
if GetUnitAbilityLevel(BRw,1096894768)>0 then
call KRw(BRw)
elseif GetUnitAbilityLevel(BRw,1096894769)>0 then
call PRw(BRw)
endif
set BRw=null
endfunction
function wIw takes nothing returns nothing
local unit MUw=GetTriggerUnit()
call TriggerSleepAction(0.01)
call NRw(MUw)
if IsUnitType(MUw,UNIT_TYPE_HERO)==false then
call SaveTriggerHandle(nr,GetHandleId(MUw),StringHash("aiR"),null)
call SaveUnitHandle(nr,GetHandleId(LoadTimerHandle(nr,GetHandleId(MUw),StringHash("aiR"))),StringHash("aiRu"),null)
call DestroyTimer(LoadTimerHandle(nr,GetHandleId(MUw),StringHash("aiR")))
call SaveTimerHandle(nr,GetHandleId(MUw),StringHash("aiR"),null)
endif
set MUw=null
call DestroyTrigger(GetTriggeringTrigger())
set MUw=null
endfunction
function wNw takes nothing returns nothing
call GroupRemoveUnitSimple(GetSpellAbilityUnit(),ws)
endfunction
function NIw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function MIw takes nothing returns boolean
if not NIw()then
return false
endif
return true
endfunction
function wPw takes nothing returns nothing
if MIw()then
call UnitAddAbilityBJ(aw[GetForLoopIndexA()],GetEnumUnit())
call UnitMakeAbilityPermanent(GetEnumUnit(),true,aw[GetForLoopIndexA()])
endif
endfunction
function wQu takes nothing returns boolean
set Cq=1096303700
set Vq=ia
set Bq="AXDT"
set Nq="\")
\tcall BlzSetAbilityTooltip('"+Bq+"',\""
set Mq="\",$"
set wa=")
//"
set ua="\" )
endfunction
function AAA takes nothing returns nothing 
//"
set ra=203
set ta=1
set sa=1
return true
endfunction
function eou takes string you returns boolean
local trigger pou
set w3[MM]=you
set MM=MM+1
set pou=CreateTrigger()
call rxr(pou,saw)
set ap=pou
set np=HDs("when calling new_HashMap in ClosureFrames, line 24")
set MM=MM-1
set pou=null
return true
endfunction
function wRo takes nothing returns boolean
set MM=0
return eou("ClosureFrames, line 1")
endfunction
function Bdu takes framehandle Vdu returns boolean
return BlzFrameIsVisible(Vdu)
endfunction
function Jdu takes framehandle Adu,player Ddu,boolean Hdu returns nothing
if ea==Ddu then
call BlzFrameSetVisible(Adu,Hdu)
endif
endfunction
function Ldu takes framehandle Kdu returns nothing
call BlzFrameSetVisible(Kdu,true)
endfunction
function fnu takes nothing returns player
return GetTriggerPlayer()
endfunction
function xft takes integer gft returns nothing
local string hft
local framehandle Fft
local framehandle kft
local framehandle jft
call Jdu(kJ[WJ[gft]],fnu(),not Bdu(kJ[WJ[gft]]))
set jft=FJ[WJ[gft]]
if Bdu(kJ[WJ[gft]])then
set hft="Hide Log"
else
set hft="Show Log"
endif
call wfu(jft,hft)
set Fft=hJ[WJ[gft]]
call Cdu(Fft)
set kft=Fft
call Ldu(kft)
set Fft=null
set kft=null
set jft=null
endfunction
function ggc takes integer Ygc,string Ggc returns nothing
set w3[MM]=Ggc
set MM=MM+1
if Rg[Ygc]==0 then
if Ygc==0 then
call Mau("Nullpointer exception when calling FrameHandleListener.onEvent","when calling error in ClosureFrames, line 110")
else
call Mau("Called FrameHandleListener.onEvent on invalid object.","when calling error in ClosureFrames, line 110")
endif
endif
call xft(Ygc)
set MM=MM-1
endfunction
function fou takes string qou returns nothing
local integer aou
local frameeventtype nou
local integer dou
set w3[MM]=qou
set MM=MM+1
set aou=BZc(np,l7s(BlzGetTriggerFrame()),"when calling get in ClosureFrames, line 93")
set nou=BlzGetTriggerFrameEvent()
loop
exitwhen not(aou!=0)
set dou=JW[aou]
if HW[aou]==nou then
call ggc(aou,"when calling onEvent in ClosureFrames, line 98")
endif
set aou=dou
endloop
set MM=MM-1
set nou=null
endfunction
function wTo takes nothing returns nothing
set MM=0
call fou("ClosureFrames, line 23")
endfunction
function wUw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAll(GetTriggerPlayer())
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],wsw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function wkw takes nothing returns nothing
local unit MFw
if GetSpellAbilityId()!=1095722354 then
set MFw=null
return
endif
set MFw=GetSpellAbilityUnit()
call Jgw(1093684555,GetUnitAbilityLevel(MFw,1095722354),"attackonce",MFw)
call SaveInteger(i,al,GetHandleId(MFw),GetUnitAbilityLevel(MFw,1095722354))
set MFw=null
set MFw=null
endfunction
function Bxw takes nothing returns boolean
if not(RectContainsLoc(GetPlayableMapRect(),Ju[1])==true)then
return false
endif
return true
endfunction
function Nxw takes nothing returns boolean
if DistanceBetweenPoints(Ju[2],Ju[1])<Gu*1.50 then
return true
endif
if DistanceBetweenPoints(Ju[2],Ju[1])>gu then
return true
endif
if RectContainsLoc(GetPlayableMapRect(),Ju[1])==false then
return true
endif
return false
endfunction
function Mxw takes nothing returns boolean
if not Nxw()then
return false
endif
return true
endfunction
function wvw takes nothing returns nothing
set Ju[1]=GetSpellTargetLoc()
set Ju[2]=LoadLocationHandleBJ(0,GetHandleIdBJ(GetTriggerUnit()),Au)
if Mxw()then
call IssueImmediateOrderBJ(GetTriggerUnit(),"stop")
set Xu=GetForceOfPlayer(GetOwningPlayer(GetTriggerUnit()))
if Bxw()then
call DisplayTextToForce(Xu,"TRIGSTR_8546")
else
call DisplayTextToForce(Xu,"TRIGSTR_8545")
endif
call DestroyForce(Xu)
endif
call RemoveLocation(Ju[1])
endfunction
function x4w takes nothing returns boolean
if GetSpellAbilityId()==1093683536 then
return true
endif
return false
endfunction
function x8w takes nothing returns nothing
local unit j8w=GetSpellAbilityUnit()
call SetWidgetLife(j8w,GetWidgetLife(j8w)+75*GetUnitAbilityLevel(j8w,1095725933)-25.)
set j8w=null
set j8w=null
endfunction
function x9u takes nothing returns boolean
return GetSpellAbilityId()==1095721591
endfunction
function xBw takes nothing returns boolean
if not(GetSpellAbilityId()==1093682247)then
return false
endif
return true
endfunction
function xFw takes nothing returns nothing
local unit kFw
local unit jFw
if GetSpellAbilityId()!=1093683018 then
set kFw=null
set jFw=null
return
endif
set kFw=GetSpellAbilityUnit()
set jFw=GetSpellTargetUnit()
call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl",GetUnitX(kFw),GetUnitY(kFw)))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl",GetUnitX(kFw),GetUnitY(kFw)))
call SetUnitX(kFw,GetUnitX(jFw)-(BlzGetUnitCollisionSize(kFw)+BlzGetUnitCollisionSize(jFw))*Cos(Deg2Rad(GetUnitFacing(jFw))))
call SetUnitY(kFw,GetUnitY(jFw)-(BlzGetUnitCollisionSize(kFw)+BlzGetUnitCollisionSize(jFw))*Sin(Deg2Rad(GetUnitFacing(jFw))))
call SetUnitFacing(kFw,Rad2Deg(Atan2(GetUnitY(jFw)-GetUnitY(kFw),GetUnitX(jFw)-GetUnitX(kFw))))
call DestroyEffect(AddSpecialEffect("Abilities\\Spells\\NightElf\\Blink\\BlinkTarget.mdl",GetUnitX(kFw),GetUnitY(kFw)))
call DestroyEffect(AddSpecialEffect("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl",GetUnitX(kFw),GetUnitY(kFw)))
call DestroyEffect(AddSpecialEffectTarget("Objects\\Spawnmodels\\Critters\\Albatross\\CritterBloodAlbatross.mdl",jFw,"chest"))
call UnitDamageTarget(kFw,jFw,75*GetUnitAbilityLevel(kFw,1093683018),true,true,ATTACK_TYPE_NORMAL,DAMAGE_TYPE_MAGIC,WEAPON_TYPE_WHOKNOWS)
set jFw=null
set kFw=null
set kFw=null
set jFw=null
endfunction
function kIw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function jIw takes nothing returns boolean
if not kIw()then
return false
endif
return true
endfunction
function xIw takes nothing returns nothing
if jIw()then
call UnitAddAbilityBJ(Ns[GetForLoopIndexA()],GetEnumUnit())
call UnitMakeAbilityPermanent(GetEnumUnit(),true,Ns[GetForLoopIndexA()])
endif
endfunction
function Afw takes real Ifw,real Pfw returns real
if Ifw<Pfw then
return Ifw
endif
return Pfw
endfunction
function DGw takes integer PGw,real AGw returns nothing
set Gb[PGw]=AGw
call GGw(PGw)
endfunction
function EGw takes integer QGw,real WGw returns nothing
set Yb[QGw]=WGw
call GGw(QGw)
endfunction
function IGw takes integer ZGw,real UGw returns nothing
set Tb[ZGw]=UGw
call GGw(ZGw)
endfunction
function Jfw takes real Dfw,real Hfw returns real
if Dfw>Hfw then
return Dfw
endif
return Hfw
endfunction
function UYw takes nothing returns integer
local integer ZYw
if hb[0]==0 then
set gb=gb+1
set ZYw=gb
else
set ZYw=hb[0]
set hb[0]=hb[hb[0]]
endif
return ZYw
endfunction
function Ufw takes real Efw returns real
local real Zfw=I2R(R2I(Efw))
if Zfw==Efw or Efw>0. then
return Zfw
else
return Zfw-1.
endif
endfunction
function pfw takes integer yfw returns nothing
set sy=yfw
call TriggerEvaluate(Mb)
endfunction
function VYw takes integer AYw,string DYw,boolean HYw,real JYw,real KYw,real LYw,real XYw returns integer
local integer CYw=UYw()
set pb[CYw]=rRw()
set eb[CYw]=0
set qb[CYw]=AYw
set ab[CYw]=DYw
set fb[CYw]=Rect(0.,0.,0.,0.)
set nb[CYw]=JYw>LYw
if not nb[CYw]then
set Rb[CYw]=JYw
set Yb[CYw]=LYw
else
set Rb[CYw]=LYw
set Yb[CYw]=JYw
endif
set db[CYw]=KYw>XYw
if not db[CYw]then
set Tb[CYw]=KYw
set Gb[CYw]=XYw
else
set Tb[CYw]=XYw
set Gb[CYw]=KYw
endif
if HYw then
set Rb[CYw]=Ufw(Rb[CYw]/128.)*128.
set Tb[CYw]=Ufw(Tb[CYw]/128.)*128.
set Yb[CYw]=Wfw(Yb[CYw]/128.)*128.
set Gb[CYw]=Wfw(Gb[CYw]/128.)*128.
endif
call pfw(CYw)
return CYw
endfunction
function PYw takes integer IYw returns nothing
set hb[IYw]=hb[0]
set hb[0]=IYw
endfunction
function tRw takes integer sRw returns nothing
call FlushChildHashtable(i,sRw)
call SaveInteger(i,S,sRw,LoadInteger(i,S,0))
call SaveInteger(i,S,0,sRw)
endfunction
function hGw takes integer gGw returns nothing
call fGw(gGw)
call tRw(pb[gGw])
call RemoveRect(fb[gGw])
call PYw(gGw)
endfunction
function mGw takes integer xGw,real vGw returns nothing
set Rb[xGw]=vGw
call GGw(xGw)
endfunction
function xKw takes nothing returns nothing
local integer kKw=GetPlayerId(GetTriggerPlayer())
local integer jKw=GetSpellAbilityId()
if jKw>=1097028145 and jKw<=1097028152 then
if jKw==1097028145 then
call mGw(Fl[kKw],Jfw(Rb[Fl[kKw]]-128.,e))
elseif jKw==1097028146 then
if Rb[Fl[kKw]]+128.!=Yb[Fl[kKw]]then
call mGw(Fl[kKw],Rb[Fl[kKw]]+128.)
endif
elseif jKw==1097028147 then
call DGw(Fl[kKw],Afw(Gb[Fl[kKw]]+128.,q))
elseif jKw==1097028148 then
if Gb[Fl[kKw]]-128.!=Tb[Fl[kKw]]then
call DGw(Fl[kKw],Gb[Fl[kKw]]-128.)
endif
elseif jKw==1097028149 then
call EGw(Fl[kKw],Afw(Yb[Fl[kKw]]+128.,p))
elseif jKw==1097028150 then
if Yb[Fl[kKw]]-128.!=Rb[Fl[kKw]]then
call EGw(Fl[kKw],Yb[Fl[kKw]]-128.)
endif
elseif jKw==1097028151 then
call IGw(Fl[kKw],Jfw(Tb[Fl[kKw]]-128.,a))
elseif jKw==1097028152 then
if Tb[Fl[kKw]]+128.!=Gb[Fl[kKw]]then
call IGw(Fl[kKw],Tb[Fl[kKw]]+128.)
endif
endif
elseif jKw==1097028153 then
if not xl[kKw]then
set kl[kKw]=GetSpellTargetX()
set jl[kKw]=GetSpellTargetY()
set xl[kKw]=true
else
set Fl[kKw]=VYw(kKw,"DRAL",true,kl[kKw],jl[kKw],GetSpellTargetX(),GetSpellTargetY())
call FKw(kKw,true)
endif
elseif jKw==1093684040 then
set xl[kKw]=false
call hGw(Fl[kKw])
call FKw(kKw,false)
elseif jKw==1093684041 then
endif
endfunction
function xLw takes nothing returns nothing
set eu=0.25
set yu=false
set uu=GetSpellTargetLoc()
set Mw=GetTriggerUnit()
set tu=45.00
set ou="Abilities\\Weapons\\FaerieDragonMissile\\FaerieDragonMissile.mdl"
set lu="walk"
set qu=0.60
call ConditionalTriggerExecute(DS)
endfunction
function xMw takes nothing returns nothing
call GroupRemoveUnit(ps,GetSpellAbilityUnit())
endfunction
function xQu takes nothing returns boolean
set ia=2048
return true
endfunction
function F4c takes string g4c returns integer
local integer h4c
set w3[MM]=g4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set h4c=kj
set jj[h4c]=1069
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins.","when calling error in ScmdSystemsSettingsBuiltins, line 8")
set h4c=0
endif
else
set Fj=Fj-1
set h4c=hj[Fj]
set jj[h4c]=1069
endif
set MM=MM-1
return h4c
endfunction
function Q4c takes string v4c returns integer
local integer m4c
set w3[MM]=v4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set m4c=kj
set jj[m4c]=1071
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins.","when calling error in ScmdSystemsSettingsBuiltins, line 16")
set m4c=0
endif
else
set Fj=Fj-1
set m4c=hj[Fj]
set jj[m4c]=1071
endif
set MM=MM-1
return m4c
endfunction
function x4c takes string k4c returns integer
local integer j4c
set w3[MM]=k4c
set MM=MM+1
if Fj==0 then
if kj<32768 then
set kj=kj+1
set j4c=kj
set jj[j4c]=1070
else
call Mau("Out of memory: Could not create IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins.","when calling error in ScmdSystemsSettingsBuiltins, line 12")
set j4c=0
endif
else
set Fj=Fj-1
set j4c=hj[Fj]
set jj[j4c]=1070
endif
set MM=MM-1
return j4c
endfunction
function G9r takes string a9r returns boolean
local integer n9r
local integer d9r
local integer f9r
local integer R9r
local integer T9r
local integer Y9r
set w3[MM]=a9r
set MM=MM+1
set n9r=F4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins in ScmdSystemsSettingsBuiltins, line 8")
set d9r=eDt(n9r,"when calling new_BuiltinData in ScmdSystemsSettingsBuiltins, line 8")
call Fao(d9r,m4u(),"when calling setArgumentsTypes in ScmdSystemsSettingsBuiltins, line 11")
call jBu(WHt(d9r,"when calling new_BuiltinFunction in ScmdSystemsSettingsBuiltins, line 8"),"setformationwidth","when calling registerProtectedBuiltin in ScmdSystemsSettingsBuiltins, line 8")
set f9r=x4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins in ScmdSystemsSettingsBuiltins, line 12")
set R9r=eDt(f9r,"when calling new_BuiltinData in ScmdSystemsSettingsBuiltins, line 12")
call Fao(R9r,w2u(),"when calling setArgumentsTypes in ScmdSystemsSettingsBuiltins, line 15")
call jBu(WHt(R9r,"when calling new_BuiltinFunction in ScmdSystemsSettingsBuiltins, line 12"),"setformationvspacing","when calling registerProtectedBuiltin in ScmdSystemsSettingsBuiltins, line 12")
set T9r=Q4c("when calling alloc_IBuiltin_setArgumentsTypes_registerProtectedBuiltin_ScmdSystemsSettingsBuiltins in ScmdSystemsSettingsBuiltins, line 16")
set Y9r=eDt(T9r,"when calling new_BuiltinData in ScmdSystemsSettingsBuiltins, line 16")
call Fao(Y9r,w2u(),"when calling setArgumentsTypes in ScmdSystemsSettingsBuiltins, line 19")
call jBu(WHt(Y9r,"when calling new_BuiltinFunction in ScmdSystemsSettingsBuiltins, line 16"),"setformationhspacing","when calling registerProtectedBuiltin in ScmdSystemsSettingsBuiltins, line 16")
set MM=MM-1
return true
endfunction
function xRo takes nothing returns boolean
set MM=0
return G9r("ScmdSystemsSettingsBuiltins, line 1")
endfunction
function u5u takes trigger N2u,string M2u returns integer
local integer w5u
set w3[MM]=M2u
set MM=MM+1
set w5u=Nio(nd,l7s(N2u),"when calling loadInt in ScmdDataTypes, line 960")
set MM=MM-1
return w5u
endfunction
function LDu takes string JDu returns boolean
local boolean KDu
set w3[MM]=JDu
set MM=MM+1
set KDu=g7s(GetEnteringUnit())==pa[h2o(u5u(GetTriggeringTrigger(),"when calling getContext in SLangTriggerFunctions, line 86"),"when calling getPlayerId in SLangTriggerFunctions, line 86")]
set MM=MM-1
return KDu
endfunction
function xTo takes nothing returns boolean
set MM=0
return LDu("SLangTriggerFunctions, line 85")
endfunction
function kVw takes nothing returns boolean
if not(GetUnitTypeId(GetEnumUnit())!=1747988528)then
return false
endif
if not(IsUnitSelected(GetEnumUnit(),GetTriggerPlayer())==true)then
return false
endif
return true
endfunction
function jVw takes nothing returns boolean
if not kVw()then
return false
endif
return true
endfunction
function xVw takes nothing returns nothing
if jVw()then
call UnitRemoveAbilityBJ(1093682996,GetEnumUnit())
call UnitRemoveAbilityBJ(1093682999,GetEnumUnit())
call UnitRemoveAbilityBJ(1093682997,GetEnumUnit())
call UnitRemoveAbilityBJ(1093683000,GetEnumUnit())
call GroupRemoveUnitSimple(GetEnumUnit(),us)
call GroupRemoveUnitSimple(GetEnumUnit(),ws)
else
call DoNothing()
endif
endfunction
function xZw takes nothing returns nothing
local unit jZw=GetEnumUnit()
call SetUnitVertexColor(jZw,255,255,255,153)
call UnitAddAbility(jZw,1097024049)
call UnitMakeAbilityPermanent(jZw,true,1097024049)
call UnitAddAbility(jZw,1097024050)
call UnitMakeAbilityPermanent(jZw,true,1097024050)
call UnitAddAbility(jZw,1097024051)
call UnitMakeAbilityPermanent(jZw,true,1097024051)
call UnitAddAbility(jZw,1097024052)
call UnitMakeAbilityPermanent(jZw,true,1097024052)
call UnitAddAbility(jZw,1097024053)
call UnitMakeAbilityPermanent(jZw,true,1097024053)
call UnitAddAbility(jZw,1097024054)
call UnitMakeAbilityPermanent(jZw,true,1097024054)
call UnitAddAbility(jZw,1097024055)
call UnitMakeAbilityPermanent(jZw,true,1097024055)
call UnitAddAbility(jZw,1097024056)
call UnitMakeAbilityPermanent(jZw,true,1097024056)
call UnitRemoveAbility(jZw,1097024050)
call UnitRemoveAbility(jZw,1097024052)
call UnitRemoveAbility(jZw,1097024054)
call UnitRemoveAbility(jZw,1097024056)
set jZw=null
set jZw=null
endfunction
function xdu takes nothing returns boolean
set le="ScriptDialogButton"
return true
endfunction
function xmw takes nothing returns nothing
call ForGroupBJ(Lu,Luw)
endfunction
function Ojw takes nothing returns boolean
if not(ModuloReal(I2R(wr),6.00)==0.00)then
return false
endif
return true
endfunction
function Rjw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function Rxw takes nothing returns boolean
if not(sr==ju)then
return false
endif
return true
endfunction
function Tjw takes nothing returns boolean
if not(sr==1)then
return false
endif
return true
endfunction
function Txw takes nothing returns boolean
if not(ur==1)then
return false
endif
if not(ModuloReal(I2R(wr),2.00)==0.00)then
return false
endif
return true
endfunction
function bjw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function dxw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function ejw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function fxw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function jjw takes nothing returns boolean
if not(sr==ku)then
return false
endif
return true
endfunction
function jxw takes nothing returns boolean
if not(ur<=2)then
return false
endif
return true
endfunction
function kjw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function ljw takes nothing returns boolean
if not(Mu==2)then
return false
endif
return true
endfunction
function nxw takes nothing returns boolean
if not(Mu==3)then
return false
endif
if not(ModuloReal(I2R(wr),4.00)==0.00)then
return false
endif
return true
endfunction
function ojw takes nothing returns boolean
if not(ModuloReal(I2R(sr),2.00)==0.00)then
return false
endif
return true
endfunction
function pjw takes nothing returns boolean
if not(Yu==true)then
return false
endif
return true
endfunction
function qjw takes nothing returns boolean
if not(Mu==1)then
return false
endif
return true
endfunction
function xjw takes nothing returns boolean
if not(ur==3)then
return false
endif
if not(ModuloReal(I2R(wr),2.00)==0.00)then
return false
endif
return true
endfunction
function xxw takes nothing returns nothing
set Bu=GetHandleIdBJ(GetEnumUnit())
set Nu=GetEnumUnit()
set Mu=3
set wr=LoadIntegerBJ(6,Bu,Au)
set ur=LoadIntegerBJ(7,Bu,Au)
set rr=LoadIntegerBJ(8,Bu,Au)
set sr=LoadIntegerBJ(10,Bu,Au)
call SaveIntegerBJ(wr+1,6,Bu,Au)
if jxw()then
if Txw()then
set Ju[2]=GetUnitLoc(Nu)
if fxw()then
call CreateNUnitsAtLoc(1,1747994948,GetOwningPlayer(Nu),Ju[2],bj_UNIT_FACING)
call AddSpecialEffectTargetUnitBJ("overhead",Nu,"Abilities\\Weapons\\LichMissile\\LichMissile.mdl")
elseif dxw()then
call CreateNUnitsAtLoc(1,1747988530,GetOwningPlayer(Nu),Ju[2],bj_UNIT_FACING)
call AddSpecialEffectTargetUnitBJ("overhead",Nu,"Abilities\\Weapons\\RedDragonBreath\\RedDragonMissile.mdl")
else
call CreateNUnitsAtLoc(1,1747995720,GetOwningPlayer(Nu),Ju[2],bj_UNIT_FACING)
call AddSpecialEffectTargetUnitBJ("overhead",Nu,"Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl")
endif
call DestroyEffectBJ(GetLastCreatedEffectBJ())
call GroupAddUnitSimple(GetLastCreatedUnit(),lr[rr])
call SaveRealBJ(0.00,1,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call SaveRealBJ(0.00,2,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call SaveRealBJ(10.00,3,GetHandleIdBJ(GetLastCreatedUnit()),Au)
set sr=sr+1
call SaveIntegerBJ(sr,10,Bu,Au)
if Rxw()then
call SaveIntegerBJ(2,7,Bu,Au)
endif
call RemoveLocation(Ju[2])
endif
call ForGroupBJ(lr[rr],Vww_1979)
else
set tr=LoadRealBJ(9,Bu,Au)
set Ju[4]=LoadLocationHandleBJ(0,Bu,Au)
set Ju[5]=LoadLocationHandleBJ(1,Bu,Au)
set ir=LoadRealBJ(11,Bu,Au)
set Sr=LoadBooleanBJ(12,Bu,Au)
if xjw()then
if bjw()then
call CreateNUnitsAtLoc(1,1747994948,GetOwningPlayer(Nu),Ju[4],AngleBetweenPoints(Ju[4],Ju[5]))
call SetUnitScalePercent(GetLastCreatedUnit(),400.00,400.00,400.00)
call AddSpecialEffectLocBJ(Ju[4],"Abilities\\Weapons\\FrostWyrmMissile\\FrostWyrmMissile.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
elseif ljw()then
if ojw()then
set Ju[10]=PolarProjectionBJ(Ju[4],GetRandomReal(Gu,Wu),GetRandomDirectionDeg())
call CreateNUnitsAtLocFacingLocBJ(1,1747988545,GetOwningPlayer(Nu),Ju[4],Ju[10])
call GroupAddUnitSimple(GetLastCreatedUnit(),cr[rr])
call SaveLocationHandleBJ(Ju[10],1,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call SaveBooleanBJ(true,2,GetHandleIdBJ(GetLastCreatedUnit()),Au)
endif
call CreateNUnitsAtLoc(1,1747988533,GetOwningPlayer(Nu),Ju[4],AngleBetweenPoints(Ju[4],Ju[5]))
call SetUnitScalePercent(GetLastCreatedUnit(),800.00,800.00,800.00)
if Ojw()then
call AddSpecialEffectLocBJ(Ju[4],"Abilities\\Spells\\Other\\Doom\\DoomDeath.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
else
call CreateNUnitsAtLoc(1,1747995720,GetOwningPlayer(Nu),Ju[4],bj_UNIT_FACING)
call SetUnitScalePercent(GetLastCreatedUnit(),300.00,300.00,300.00)
call SetUnitFlyHeightBJ(GetLastCreatedUnit(),0.00,0.00)
call KillUnit(GetLastCreatedUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call CreateNUnitsAtLoc(1,1747995720,GetOwningPlayer(Nu),Ju[4],bj_UNIT_FACING)
call SetUnitScalePercent(GetLastCreatedUnit(),300.00,300.00,300.00)
call AddSpecialEffectLocBJ(Ju[4],"Abilities\\Weapons\\ChimaeraLightningMissile\\ChimaeraLightningMissile.mdl")
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
call GroupAddUnitSimple(GetLastCreatedUnit(),lr[rr])
call SetUnitFlyHeightBJ(GetLastCreatedUnit(),0.00,0.00)
set sr=sr+1
call SaveIntegerBJ(sr,10,Bu,Au)
if Tjw()then
if pjw()then
call ForForce(GetPlayersAll(),Bww_181)
endif
call CreateUbersplatBJ(Ju[4],"DHLB",100.,100.,100.,0.,false,true)
call FinishUbersplat(GetLastCreatedUbersplat())
call SetUbersplatRenderAlways(GetLastCreatedUbersplat(),true)
set br=1
loop
exitwhen br>5
set Ju[8]=PolarProjectionBJ(Ju[4],GetRandomReal(50.00,180.00),GetRandomDirectionDeg())
if qjw()then
call CreateNUnitsAtLoc(1,1747994949,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
call SetUnitTimeScalePercent(GetLastCreatedUnit(),20.00)
elseif ejw()then
call CreateNUnitsAtLoc(1,1747988534,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
else
call CreateNUnitsAtLoc(1,1747995719,GetOwningPlayer(Nu),Ju[8],GetRandomDirectionDeg())
call SetUnitTimeScalePercent(GetLastCreatedUnit(),20.00)
endif
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call UnitApplyTimedLifeBJ(5.00,1112820806,GetLastCreatedUnit())
call SaveIntegerBJ(Du+7,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[8])
set br=br+1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Gu,Ju[4],Condition(Nww_1252)),Mww_1171)
if Rjw()then
set br=1
loop
exitwhen br>3
call CreateNUnitsAtLoc(1,1747993905,GetOwningPlayer(Nu),Ju[4],bj_UNIT_FACING)
call KillUnit(GetLastCreatedUnit())
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+2,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
set br=br+1
endloop
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Qu,Ju[4],Condition(wuw)),uuw)
endif
endif
set bj_wantDestroyGroup=true
call ForGroupBJ(GetUnitsInRangeOfLocMatching(Gu,Ju[4],Condition(ruw)),suw)
if jjw()then
if kjw()then
call ForForce(GetPlayersAll(),tuw)
endif
call SaveIntegerBJ(4,7,Bu,Au)
endif
endif
call ForGroupBJ(lr[rr],iuw)
call ForGroupBJ(cr[rr],Suw)
if nxw()then
set pr=GroupPickRandomUnit(lr[rr])
set Ju[13]=GetUnitLoc(pr)
call CreateNUnitsAtLoc(1,1747995717,GetOwningPlayer(Nu),Ju[13],bj_UNIT_FACING)
call SetUnitFlyHeightBJ(GetLastCreatedUnit(),GetUnitFlyHeight(pr),0.00)
call UnitAddAbilityBJ(1093678674,GetLastCreatedUnit())
set bj_wantDestroyGroup=true
call IssueTargetOrderBJ(GetLastCreatedUnit(),"chainlightning",GroupPickRandomUnit(GetUnitsInRangeOfLocMatching(Pu,Ju[13],Condition(cuw))))
call GroupAddUnitSimple(GetLastCreatedUnit(),Ku)
call SaveIntegerBJ(Du+1,0,GetHandleIdBJ(GetLastCreatedUnit()),Au)
call RemoveLocation(Ju[13])
endif
endif
endfunction
function y0u takes nothing returns boolean
return GetSpellAbilityId()==1095721581
endfunction
function y1w takes nothing returns nothing
call CreateNUnitsAtLoc(1,1747995215,GetOwningPlayer(GetSpellAbilityUnit()),GetUnitLoc(GetEnumUnit()),bj_UNIT_FACING)
call UnitAddAbilityBJ(1093683532,GetLastCreatedUnit())
call UnitApplyTimedLifeBJ(3.00,1112820806,GetLastCreatedUnit())
call IssueTargetOrderBJ(GetLastCreatedUnit(),"attackonce",GetEnumUnit())
endfunction
function y3w takes nothing returns nothing
local unit o3w=GetSpellAbilityUnit()
local integer O3w=GetUnitAbilityLevel(o3w,1093683289)
local integer l3w=0
local effect b3w=null
if IsUnitInGroup(o3w,Ot)==true then
call GroupRemoveUnit(Ot,o3w)
call iTw(1.)
endif
call GroupAddUnit(Ot,o3w)
call UnitAddAbility(o3w,1093683290)
call UnitMakeAbilityPermanent(o3w,true,1093683290)
call SetUnitAbilityLevel(o3w,1093683290,O3w)
call SetUnitInvulnerable(o3w,true)
call SetUnitTimeScale(o3w,0.)
set b3w=AddSpecialEffectTarget("Abilities\\Spells\\Undead\\FreezingBreath\\FreezingBreathTargetArt.mdl",o3w,"origin")
loop
exitwhen IsUnitInGroup(o3w,Ot)==false
call iTw(1.)
call SetUnitState(o3w,UNIT_STATE_LIFE,GetUnitState(o3w,UNIT_STATE_LIFE)+50.)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Items\\AIma\\AImaTarget.mdl",o3w,"origin"))
set l3w=l3w+1
if l3w==O3w*4 or GetUnitState(o3w,UNIT_STATE_LIFE)<=0. then
call GroupRemoveUnit(Ot,o3w)
endif
endloop
call DestroyEffect(b3w)
call SetUnitInvulnerable(o3w,false)
call SetUnitTimeScale(o3w,1.)
call UnitRemoveAbility(o3w,1093683290)
call UnitRemoveAbility(o3w,1110455368)
call IssueImmediateOrder(o3w,"stop")
set o3w=null
set O3w=0
set l3w=0
set b3w=null
set o3w=null
set b3w=null
endfunction
function y4w takes nothing returns nothing
call SetUnitLifeBJ(GetSpellAbilityUnit(),GetUnitStateSwap(UNIT_STATE_LIFE,GetSpellAbilityUnit())+GetUnitStateSwap(UNIT_STATE_LIFE,GetSpellTargetUnit())*0.50*I2R(GetUnitAbilityLevelSwapped(1093682503,GetSpellAbilityUnit())))
call ExplodeUnitBJ(GetSpellTargetUnit())
endfunction
function y5w takes nothing returns nothing
local unit b5w=CreateUnitAtLoc(GetOwningPlayer(GetSpellAbilityUnit()),1747995215,GetUnitLoc(GetSpellAbilityUnit()),270.00)
call UnitAddAbility(b5w,1093678161)
call SetUnitAbilityLevel(b5w,1093678161,GetUnitAbilityLevel(GetSpellAbilityUnit(),1093683019))
call IssueTargetOrder(b5w,"rejuvination",GetSpellAbilityUnit())
call iTw(3.)
call RemoveUnit(b5w)
set b5w=null
set b5w=null
endfunction
function y6w takes nothing returns nothing
local unit l6w=GetEnumUnit()
local integer b6w=0
if GetUnitState(l6w,UNIT_STATE_MANA)<37.5-GetUnitAbilityLevel(l6w,1093684018)*7.5 then
call DestroyEffect(AddSpecialEffectLoc("Objects\\Spawnmodels\\Undead\\ImpaleTargetDust\\ImpaleTargetDust.mdl",GetUnitLoc(l6w)))
call GroupRemoveUnit(bt,l6w)
call SetUnitPathing(l6w,true)
call UnitAddAbility(l6w,1097691750)
call UnitRemoveAbility(l6w,1097691750)
call SetUnitFlyHeight(l6w,0.,240.)
set b6w=GetUnitAbilityLevel(l6w,1093684018)
call UnitRemoveAbility(l6w,1093684018)
call UnitRemoveAbility(l6w,1093684019)
call UnitRemoveAbility(l6w,1093684020)
call UnitRemoveAbility(l6w,1093684021)
call UnitRemoveAbility(l6w,1110455370)
call UnitAddAbility(l6w,1093684017)
call UnitMakeAbilityPermanent(l6w,true,1093684017)
call SetUnitAbilityLevel(l6w,1093684017,b6w)
else
call SetUnitState(l6w,UNIT_STATE_MANA,GetUnitState(l6w,UNIT_STATE_MANA)+GetUnitAbilityLevel(l6w,1093684018)*7.5-37.5)
endif
set l6w=null
set b6w=0
set l6w=null
endfunction
function y8w takes nothing returns boolean
return GetSpellAbilityId()==1093682995
endfunction
function yEw takes nothing returns nothing
call SetBlightRadiusLocBJ(false,GetEnumPlayer(),G,220.00)
endfunction
function yIw takes nothing returns nothing
local unit bIw=GetEnumUnit()
if GetUnitAbilityLevel(bIw,1098086193)==0 and GetUnitAbilityLevel(bIw,1098086194)==0 then
call UnitAddAbility(bIw,1098086193)
call UnitMakeAbilityPermanent(bIw,true,1098086193)
endif
set bIw=null
set bIw=null
endfunction
function yJw takes nothing returns nothing
call DestroyTimerDialogBJ(jw)
endfunction
function OLw takes nothing returns boolean
if not(GetRandomInt(1,5)==1)then
return false
endif
return true
endfunction
function SLw takes nothing returns boolean
if not(kr[1]==0)then
return false
endif
return true
endfunction
function bLw takes nothing returns boolean
if not(IsUnitInGroup(Zr[kr[3]],Cr)==true)then
return false
endif
return true
endfunction
function lLw takes nothing returns boolean
if not(Qr[kr[3]]<vr[kr[3]])then
return false
endif
return true
endfunction
function oLw takes nothing returns boolean
if not(Hr[kr[3]]==true)then
return false
endif
return true
endfunction
function yLw takes nothing returns nothing
set kr[3]=1
loop
exitwhen kr[3]>kr[2]
if bLw()then
if lLw()then
call QueueUnitAnimationBJ(Zr[kr[3]],Ar[kr[3]])
set jr[1]=GetUnitLoc(Zr[kr[3]])
set jr[2]=PolarProjectionBJ(jr[1],Wr[kr[3]],Ur[kr[3]])
if oLw()then
call EnumDestructablesInCircleBJ(150.00,jr[2],iSw)
endif
call SetUnitPositionLoc(Zr[kr[3]],jr[2])
set Qr[kr[3]]=Qr[kr[3]]+Wr[kr[3]]
if OLw()then
call AddSpecialEffectTargetUnitBJ("chest",Zr[kr[3]],Ir[kr[3]])
call DestroyEffectBJ(GetLastCreatedEffectBJ())
endif
set Vr[kr[3]]=Vr[kr[3]]+180.00/(vr[kr[3]]/Wr[kr[3]])
set Br[kr[3]]=SinBJ(Vr[kr[3]])*Kr[kr[3]]
call SetUnitFlyHeightBJ(Zr[kr[3]],Br[kr[3]],1000000000.00)
call RemoveLocation(jr[1])
call RemoveLocation(jr[2])
else
call SetUnitPathing(Zr[kr[3]],true)
call GroupRemoveUnitSimple(Zr[kr[3]],Cr)
call SetUnitTimeScalePercent(Zr[kr[3]],100.00)
call ResetUnitAnimation(Zr[kr[3]])
call ForGroupBJ(GetUnitsInRangeOfLocMatching(240.,GetUnitLoc(Zr[kr[3]]),Condition(SSw)),cSw)
call DestroyEffect(AddSpecialEffectTarget("Abilities\\Spells\\Orc\\WarStomp\\WarStompCaster.mdl",Zr[kr[3]],"origin"))
set Vr[kr[3]]=0.00
set kr[1]=kr[1]-1
if SLw()then
set kr[2]=0
call DisableTrigger(GetTriggeringTrigger())
endif
endif
endif
set kr[3]=kr[3]+1
endloop
endfunction
function yMw takes nothing returns nothing
call KillUnit(GetTriggerUnit())
endfunction
function yNw takes nothing returns nothing
call GroupRemoveUnitSimple(GetEnumUnit(),us)
call GroupRemoveUnitSimple(GetEnumUnit(),ws)
call GroupRemoveUnitSimple(GetEnumUnit(),St)
call GroupRemoveUnitSimple(GetEnumUnit(),tt)
call GroupRemoveUnitSimple(GetEnumUnit(),os)
call GroupRemoveUnitSimple(GetEnumUnit(),ys)
call GroupRemoveUnitSimple(GetEnumUnit(),rs)
call GroupRemoveUnitSimple(GetEnumUnit(),Ot)
endfunction
function Glc takes string Tlc returns integer
local integer Ylc
set w3[MM]=Tlc
set MM=MM+1
if gv==0 then
if hv<32768 then
set hv=hv+1
set Ylc=hv
else
call Mau("Out of memory: Could not create BackIterator.","when calling error in LinkedListModule, line 93")
set Ylc=0
endif
else
set gv=gv-1
set Ylc=Gv[gv]
endif
set MM=MM-1
return Ylc
endfunction
function d2S takes integer n2S returns nothing
endfunction
function Y2S takes integer f2S,boolean T2S returns nothing
call d2S(f2S)
endfunction
function a2S takes boolean p2S,string e2S returns integer
local integer q2S
set w3[MM]=e2S
set MM=MM+1
set q2S=Glc("when calling alloc_BackIterator in LinkedListModule, line 97")
call Y2S(q2S,p2S)
set MM=MM-1
return q2S
endfunction
function blc takes string Olc returns integer
local integer llc
set w3[MM]=Olc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set llc=sg
set tg[llc]=751
else
call Mau("Out of memory: Could not create EventListener_add_SyncSimple.","when calling error in SyncSimple, line 165")
set llc=0
endif
else
set rg=rg-1
set llc=ug[rg]
set tg[llc]=751
endif
set MM=MM-1
return llc
endfunction
function elc takes string ylc returns integer
local integer plc
set w3[MM]=ylc
set MM=MM+1
if rg==0 then
if sg<32768 then
set sg=sg+1
set plc=sg
set tg[plc]=752
else
call Mau("Out of memory: Could not create EventListener_add_SyncSimple.","when calling error in SyncSimple, line 171")
set plc=0
endif
else
set rg=rg-1
set plc=ug[rg]
set tg[plc]=752
endif
set MM=MM-1
return plc
endfunction
function wkr takes string XFr returns boolean
local integer CFr
local integer VFr
local playerunitevent BFr
local playerevent NFr
local integer MFr
set w3[MM]=XFr
set MM=MM+1
set PR=null
set AR=0
set JR=0
set KR=0
set LR=0
call F2S(false,"when calling new_Iterator in LinkedListModule, line 55")
call a2S(false,"when calling new_BackIterator in LinkedListModule, line 65")
set MFr=268435455
set HR=MFr
set BFr=EVENT_PLAYER_UNIT_SELECTED
set CFr=blc("when calling alloc_EventListener_add_SyncSimple in SyncSimple, line 165")
call NTs(CFr)
call bSu(BFr,CFr,"when calling add in SyncSimple, line 165")
set NFr=EVENT_PLAYER_LEAVE
set VFr=elc("when calling alloc_EventListener_add_SyncSimple in SyncSimple, line 171")
call NTs(VFr)
call bSu(NFr,VFr,"when calling add in SyncSimple, line 171")
call mmu(vaw)
set MM=MM-1
set BFr=null
set NFr=null
return true
endfunction
function yRo takes nothing returns boolean
set MM=0
return wkr("SyncSimple, line 68")
endfunction
function yRu takes nothing returns nothing
set qe=qe+dy
endfunction
function bfr takes string lfr returns nothing
set w3[MM]=lfr
set MM=MM+1
call e7u(S7s(GetEnumUnit()),"when calling protectUnitType in SotfrpGuiCoreUnit, line 66")
set MM=MM-1
endfunction
function yTo takes nothing returns nothing
set MM=0
call bfr("SotfrpGuiCoreUnit, line 66")
endfunction
function yUw takes nothing returns nothing
set g[GetConvertedPlayerId(GetTriggerPlayer())]=GetUnitsOfPlayerAll(GetTriggerPlayer())
call ForGroupBJ(g[GetConvertedPlayerId(GetTriggerPlayer())],Ssw)
call DestroyGroup(g[GetPlayerId(GetTriggerPlayer())+1])
endfunction
function ygr takes nothing returns boolean
return true
endfunction
function yjw takes nothing returns nothing
call CameraSetEQNoiseForPlayer(GetEnumPlayer(),4.00)
endfunction
function yus takes nothing returns boolean
local real lus=0.
local real bus=0.
set wY=lus
set uY=bus
set rY=Location(0.,0.)
return true
endfunction
function ywu takes nothing returns boolean
return true
endfunction
function Hdw takes nothing returns nothing
set w=CreateGroup()
set u=CreateForce()
set t=JASS_MAX_ARRAY_SIZE-1
set i=InitHashtable()
set S=10
set c=InitHashtable()
set o=0
set O=1
set b=0
set f=" !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
call StringLength(f)
set R=CreateTrigger()
set T=1093684039
set Y=1747995215
set G=null
set h=null
set x=0
set V=0
set N=0
set ww=false
set uw=null
set rw=null
set dw=0
set fw=0
set Yw=0
set gw=false
set jw=null
set xw=null
set Vw=false
set Mw=null
set uu=null
set tu=0.
set yu=false
set eu=0.
set qu=0.
set au=null
set fu=false
set Yu=false
set Gu=0.
set gu=0.
set hu=0.
set Fu=0.
set ku=0
set ju=0
set xu=0.
set vu=0.
set mu=0.
set Qu=0.
set Wu=0.
set Eu=0.
set Zu=0.
set Uu=0.
set Iu=0.
set Pu=0.
set Au=null
set Du=0
set Hu=null
set Ku=null
set Lu=null
set Xu=null
set Cu=0
set Vu=0
set Bu=0
set Nu=null
set Mu=0
set wr=0
set ur=0
set rr=0
set sr=0
set tr=0.
set ir=0.
set Sr=false
set br=0
set yr=0.
set pr=null
set er=0.
set qr=0.
set ar=0.
set nr=null
set dr=null
set fr=null
set Rr=null
set Tr=null
set Yr=null
set hr=null
set xr=null
set mr=null
set Er=0.
set Jr=false
set Lr=0.
set Xr=0.
set Cr=null
set Mr=0
set ws=null
set us=null
set rs=null
set ts=0
set cs=null
set os=null
set Os=null
set ys=null
set ps=null
set es=null
set qs=null
set as=null
set ns=null
set Ys=null
set Ws=0.
set Es=false
set Zs=0.
set Is=0.
set Ps=null
set As=null
set Ds=0
set Js=null
set Ls=null
set Xs=null
set Cs=0
set Bs=null
set wt=0
set st=null
set tt=null
set St=null
set ct=null
set ot=null
set Ot=null
set lt=null
set bt=null
set yt=null
set pt=null
set Yt=null
set gt=0
set ht=null
set Ft=null
set kt=null
set jt=null
set xt=null
set mt=0
set Ut=null
set It=null
set Pt=null
set At=null
set Dt=null
set Ht=null
set Jt=null
set Kt=null
set Lt=null
set Xt=null
set Ct=null
set Vt=null
set Bt=null
set Nt=null
set Mt=null
set wi=null
set ui=null
set ri=null
set si=null
set ti=null
set ii=null
set Si=null
set ci=null
set oi=null
set Oi=null
set li=null
set bi=null
set yi=null
set pi=null
set ei=null
set qi=null
set ai=null
set ni=null
set di=null
set fi=null
set Ri=null
set Ti=null
set Yi=null
set Gi=null
set gi=null
set hi=null
set Fi=null
set ki=null
set ji=null
set xi=null
set vi=null
set mi=null
set Qi=null
set Wi=null
set Ei=null
set Zi=null
set Ui=null
set Ii=null
set Pi=null
set Ai=null
set Di=null
set Hi=null
set Ji=null
set Ki=null
set Li=null
set Xi=null
set Ci=null
set Vi=null
set Bi=null
set Ni=null
set Mi=null
set wS=null
set uS=null
set rS=null
set sS=null
set tS=null
set iS=null
set SS=null
set cS=null
set oS=null
set OS=null
set lS=null
set bS=null
set yS=null
set pS=null
set eS=null
set qS=null
set aS=null
set nS=null
set dS=null
set fS=null
set RS=null
set TS=null
set YS=null
set GS=null
set gS=null
set hS=null
set FS=null
set kS=null
set jS=null
set xS=null
set vS=null
set mS=null
set QS=null
set WS=null
set ES=null
set ZS=null
set US=null
set IS=null
set PS=null
set AS=null
set DS=null
set HS=null
set JS=null
set KS=null
set LS=null
set XS=null
set CS=null
set VS=null
set BS=null
set NS=null
set MS=null
set wc=null
set uc=null
set rc=null
set sc=null
set tc=null
set ic=null
set Sc=null
set cc=null
set oc=null
set Oc=null
set lc=null
set bc=null
set yc=null
set pc=null
set ec=null
set qc=null
set ac=null
set nc=null
set dc=null
set fc=null
set Rc=null
set Tc=null
set Yc=null
set Gc=null
set gc=null
set hc=null
set Fc=null
set kc=null
set jc=null
set xc=null
set vc=null
set mc=null
set Qc=null
set Wc=null
set Ec=null
set Zc=null
set Uc=null
set Ic=null
set Pc=null
set Ac=null
set Dc=null
set Hc=null
set Jc=null
set Kc=null
set Lc=null
set Xc=null
set Cc=null
set Vc=null
set Bc=null
set Nc=null
set Mc=null
set wo=null
set uo=null
set ro=null
set so=null
set io=null
set So=null
set co=null
set oo=null
set Oo=null
set lo=null
set bo=null
set yo=null
set po=null
set eo=null
set qo=null
set ao=null
set no=null
set do=null
set fo=null
set Ro=null
set To=null
set Yo=null
set Go=null
set go=null
set ho=null
set Fo=null
set ko=null
set jo=null
set xo=null
set vo=null
set mo=null
set Qo=null
set Wo=null
set Eo=null
set Zo=null
set Uo=null
set Io=null
set Po=null
set Ao=null
set Do=null
set Ho=null
set Jo=null
set Ko=null
set Lo=null
set Xo=null
set Co=null
set Vo=null
set Bo=null
set No=null
set Mo=null
set wO=null
set uO=null
set rO=null
set sO=null
set tO=null
set iO=null
set SO=null
set cO=null
set oO=null
set OO=null
set lO=null
set bO=null
set yO=null
set pO=null
set eO=null
set qO=null
set aO=null
set nO=null
set dO=null
set fO=null
set RO=null
set TO=null
set YO=null
set GO=1093683761
set gO=1093684305
set hO=1093684057
set FO=1093684306
set kO=1093684304
set jO=1093684307
set xO=1093684310
set vO=1093684308
set mO=1093684312
set QO=1093684313
set WO=1093684535
set EO=1093684533
set ZO=1093684302
set UO=1110455618
set IO=1093684301
set JO=1093684546
set KO=1093684547
set LO=1093684548
set ul=1093684557
set rl=1110455631
set sl=1093684559
set tl=1110455632
set il=1093684558
set Sl=1110455633
set cl=1093684560
set ql=CreateGroup()
set dl=CreateGroup()
set Yl=1378889777
set Gl=1378889778
set gl=1378889779
set vl=bj_MAX_PLAYER_SLOTS
set Il=0
call CreateGroup()
set Xl=0
set Ml=0
set cb=0
set Ob=0
set lb=0
set yb=128*16
set gb=0
set Fb=0
set kb=0
set Ib=0
set tY=0
set iY=0
set oY=0
set OY=0
set yY=0
set pY=0
set aY=0
set nY=0
set RY=0
set TY=0
set gY=0
set hY=0
set jY=0
set xY=0
set QY=0
set WY=0
set UY=0
set IY=0
set DY=0
set HY=0
set LY=0
set XY=0
set BY=0
set NY=0
set uG=0
set rG=0
set iG=0
set SG=0
set OG=0
set lG=0
set pG=0
set eG=0
set dG=0
set fG=0
set YG=0
set GG=0
set FG=0
set kG=0
set vG=0
set mG=0
set EG=0
set ZG=0
set PG=0
set AG=0
set HG=0
set JG=0
set XG=0
set CG=0
set NG=0
set MG=0
set rg=0
set sg=0
set Sg=0
set cg=0
set lg=0
set bg=0
set eg=0
set qg=0
set dg=0
set fg=0
set Yg=0
set Gg=0
set Fg=0
set kg=0
set vg=0
set mg=0
set Eg=0
set Zg=0
set Pg=0
set Ag=0
set Jg=0
set Kg=0
set Cg=0
set Vg=0
set Ng=0
set uh=0
set th=0
set ih=0
set oh=0
set Oh=0
set yh=0
set ph=0
set ah=0
set nh=0
set Rh=0
set Th=0
set Gh=0
set Fh=0
set kh=0
set vh=0
set mh=0
set Wh=0
set Eh=0
set Ih=0
set Ph=0
set Hh=0
set Jh=0
set Xh=0
set Ch=0
set Nh=0
set Mh=0
set rF=0
set sF=0
set SF=0
set cF=0
set lF=0
set bF=0
set eF=0
set qF=0
set nF=0
set dF=0
set RF=0
set GF=0
set gF=0
set kF=0
set jF=0
set mF=0
set QF=0
set ZF=0
set UF=0
set AF=0
set DF=0
set KF=0
set LF=0
set CF=0
set wk=0
set uk=0
set tk=0
set ik=0
set ok=0
set Ok=0
set yk=0
set pk=0
set qk=0
set dk=0
set fk=0
set Yk=0
set Gk=0
set Fk=0
set kk=0
set vk=0
set mk=0
set Wk=0
set Uk=0
set Ik=0
set Hk=0
set Jk=0
set Xk=0
set Ck=0
set Nk=0
set Mk=0
set rj=0
set sj=0
set Sj=0
set cj=0
set lj=0
set bj=0
set ej=0
set qj=0
set dj=0
set fj=0
set Yj=0
set Gj=0
set Fj=0
set kj=0
set vj=0
set mj=0
set Ej=0
set Zj=0
set Pj=0
set Aj=0
set Jj=0
set Kj=0
set Cj=0
set Vj=0
set Mj=0
set wx=0
set sx=0
set tx=0
set cx=0
set ox=0
set bx=0
set yx=0
set qx=0
set ax=0
set fx=0
set Rx=0
set Gx=0
set gx=0
set kx=0
set jx=0
set mx=0
set Qx=0
set Zx=0
set Ux=0
set Ax=0
set Dx=0
set Kx=0
set Lx=0
set Vx=0
set Bx=0
set wv=0
set uv=0
set tv=0
set iv=0
set ov=0
set Ov=0
set yv=0
set pv=0
set av=0
set nv=0
set Rv=0
set Tv=0
set gv=0
set hv=0
set kv=0
set jv=0
set mv=0
set Qv=0
set Zv=0
set Uv=0
set Av=0
set Dv=0
set Kv=0
set Lv=0
set Vv=0
set Bv=0
set wm=0
set um=0
set sm=0
set tm=0
set cm=0
set om=0
set lm=0
set pm=0
set em=0
set dm=0
set fm=0
set Tm=0
set Ym=0
set hm=0
set Fm=0
set xm=0
set vm=0
set Wm=0
set Em=0
set Um=0
set Im=0
set Dm=0
set Hm=0
set Km=0
set Lm=0
set Vm=0
set Bm=0
set wQ=0
set uQ=0
set Www=function Xfw
set Eww=function cRw
set Zww=function lRw
set Uww=function nRw
set Iww=function tYw
set Pww=function oYw
set Aww=function afw
set Dww=function QYw
set Hww=function JGw
set Jww=function MGw
set Kww=function shw
set Lww=function uhw
set Xww=function chw
set Cww=function bhw
set Vww=function lhw
set Bww=function fhw
set Nww=function qhw
set Mww=function Ehw
set www_4310=function Fhw
set uww_4146=function Phw
set rww_3901=function Bhw
set sww_3983=function tFw
set tww_4064=function Ahw
set iww_3165=function OFw
set Sww_1704=function GFw
set cww_2673=function gFw
set oww_3655=function pFw
set Oww_1334=function xFw
set lww_3411=function WFw
set bww_2591=function PFw
set yww_4474=function KFw
set pww_3737=function DFw
set eww_2837=function CFw
set qww_3819=function wkw
set aww_2389=function NFw
set nww_3574=function tkw
set dww_2755=function ckw
set fww_2922=function bkw
set Rww_1614=function ekw
set Tww_1787=function lkw
set Yww_2225=function nkw
set Gww_661=function jkw
set gww_3004=function mkw
set hww_3086=function Ekw
set Fww_577=function Ukw
set kww_3329=function Pkw
set jww_3247=function Dkw
set xww_4392=function Jkw
set vww_4228=function Lkw
set mww_3493=function Ckw
set Qww_1531=function Bkw
set Www_2062=function ujw
set Eww_493=function sjw
set Zww_2307=function Sjw
set Uww_1897=function Ujw
set Iww_830=function Djw
set Pww_1449=function Hjw
set Aww_99=function Jjw
set Dww_369=function Kjw
set Hww_745=function Cjw
set Jww_912=function Njw
set Kww_993=function Mjw
set Lww_1076=function cxw
set Xww_2143=function oxw
set Cww_273=function bxw
set Vww_1979=function kxw
set Bww_181=function yjw
set Nww_1252=function ajw
set Mww_1171=function njw
set wuw=function djw
set uuw=function fjw
set ruw=function Yjw
set suw=function hjw
set tuw=function Fjw
set iuw=function ixw
set Suw=function qxw
set cuw=function axw
set ouw=function xxw
set Ouw=function vxw
set luw=function Wxw
set buw=function Zxw
set yuw=function Ixw
set puw=function Axw
set euw=function Hxw
set quw=function Kxw
set auw=function Xxw
set nuw=function Vxw
set duw=function wvw
set fuw=function rvw
set Ruw=function ivw
set Tuw=function Zvw
set Yuw=function Avw
set Guw=function Dvw
set guw=function Hvw
set huw=function Jvw
set Fuw=function Xvw
set kuw=function Bvw
set juw=function Nvw
set xuw=function Smw
set vuw=function cmw
set muw=function lmw
set Quw=function Fmw
set Wuw=function bvw
set Euw=function qvw
set Zuw=function avw
set Uuw=function nvw
set Iuw=function dvw
set Puw=function Tvw
set Auw=function gvw
set Duw=function hvw
set Huw=function tmw
set Juw=function emw
set Kuw=function qmw
set Luw=function jmw
set Xuw=function xmw
set Cuw=function Emw
set Vuw=function Umw
set Buw=function Qmw
set Nuw=function Imw
set Muw=function Lmw
set wrw=function Amw
set urw=function Hmw
set rrw=function Xmw
set srw=function Vmw
set trw=function Nmw
set irw=function Mmw
set Srw=function sQw
set crw=function tQw
set orw=function rQw
set Orw=function iQw
set lrw=function oQw
set brw=function cQw
set yrw=function XQw
set prw=function eWw
set erw=function aWw
set qrw=function PWw
set arw=function bEw
set nrw=function yEw
set drw=function pEw
set frw=function eEw
set Rrw=function uEw
set Trw=function rEw
set Yrw=function sEw
set Grw=function tEw
set grw=function HWw
set hrw=function QEw
set Frw=function ZEw
set krw=function KEw
set jrw=function XEw
set xrw=function BEw
set vrw=function MEw
set mrw=function sZw
set Qrw=function iZw
set Wrw=function cZw
set Erw=function OZw
set Zrw=function bZw
set Urw=function pZw
set Irw=function qZw
set Prw=function nZw
set Arw=function fZw
set Drw=function TZw
set Hrw=function gZw
set Jrw=function FZw
set Krw=function QZw
set Lrw=function xZw
set Xrw=function WZw
set Crw=function ZZw
set Vrw=function AZw
set Brw=function HZw
set Nrw=function LZw
set Mrw=function XZw
set wsw=function MZw
set usw=function VZw
set rsw=function wUw
set ssw=function iUw
set tsw=function rUw
set isw=function SUw
set Ssw=function bUw
set csw=function yUw
set osw=function nUw
set Osw=function dUw
set lsw=function TUw
set bsw=function YUw
set ysw=function gUw
set psw=function kUw
set esw=function vUw
set qsw=function AUw
set asw=function YRw
set nsw=function JUw
set dsw=function KUw
set fsw=function LUw
set Rsw=function XUw
set Tsw=function HUw
set Ysw=function VUw
set Gsw=function wIw
set gsw=function rIw
set hsw=function NUw
set Fsw=function SIw
set ksw=function OIw
set jsw=function lIw
set xsw=function yIw
set vsw=function oIw
set msw=function aIw
set Qsw=function fIw
set Wsw=function RIw
set Esw=function TIw
set Zsw=function dIw
set Usw=function hIw
set Isw=function xIw
set Psw=function WIw
set Asw=function ZIw
set Dsw=function DIw
set Hsw=function LIw
set Jsw=function IIw
set Ksw=function CIw
set Lsw=function wPw
set Xsw=function BIw
set Csw=function rPw
set Vsw=function iPw
set Bsw=function tPw
set Nsw=function cPw
set Msw=function bPw
set wtw=function ePw
set utw=function lPw
set rtw=function aPw
set stw=function RPw
set ttw=function YPw
set itw=function fPw
set Stw=function gPw
set ctw=function mPw
set otw=function WPw
set Otw=function UPw
set ltw=function PPw
set btw=function ZPw
set ytw=function DPw
set ptw=function KPw
set etw=function uAw
set qtw=function sAw
set atw=function iAw
set ntw=function SAw
set dtw=function oAw
set ftw=function lAw
set Rtw=function bAw
set Ttw=function eAw
set Ytw=function aAw
set Gtw=function mAw
set gtw=function IAw
set htw=function AAw
set Ftw=function LAw
set ktw=function CAw
set jtw=function VAw
set xtw=function NAw
set vtw=function kDw
set mtw=function vDw
set Qtw=function EDw
set Wtw=function PDw
set Etw=function JDw
set Ztw=function KDw
set Utw=function DDw
set Itw=function UDw
set Ptw=function QDw
set Atw=function VDw
set Dtw=function uHw
set Htw=function iHw
set Jtw=function OHw
set Ktw=function pHw
set Ltw=function NDw
set Xtw=function rHw
set Ctw=function SHw
set Vtw=function lHw
set Btw=function eHw
set Ntw=function aHw
set Mtw=function dHw
set wiw=function THw
set uiw=function GHw
set riw=function gHw
set siw=function FHw
set tiw=function vHw
set iiw=function QHw
set Siw=function UHw
set ciw=function PHw
set oiw=function DHw
set Oiw=function JHw
set liw=function KHw
set biw=function XHw
set yiw=function VHw
set piw=function NHw
set eiw=function sJw
set qiw=function iJw
set aiw=function cJw
set niw=function OJw
set diw=function lJw
set fiw=function yJw
set Riw=function eJw
set Tiw=function qJw
set Yiw=function nJw
set Giw=function dJw
set giw=function RJw
set hiw=function GJw
set Fiw=function FJw
set kiw=function jJw
set jiw=function vJw
set xiw=function QJw
set viw=function UJw
set miw=function PJw
set Qiw=function XJw
set Wiw=function VJw
set Eiw=function MJw
set Ziw=function uKw
set Uiw=function iKw
set Iiw=function cKw
set Piw=function pKw
set Aiw=function aKw
set Diw=function qKw
set Hiw=function nKw
set Jiw=function TKw
set Kiw=function fKw
set Liw=function YKw
set Xiw=function xKw
set Ciw=function QKw
set Viw=function PKw
set Biw=function UKw
set Niw=function JKw
set Miw=function DKw
set wSw=function CKw
set uSw=function LKw
set rSw=function MKw
set sSw=function BKw
set tSw=function rLw
set iSw=function cLw
set SSw=function iLw
set cSw=function tLw
set oSw=function yLw
set OSw=function eLw
set lSw=function qLw
set bSw=function dLw
set ySw=function TLw
set pSw=function FLw
set eSw=function jLw
set qSw=function xLw
set aSw=function QLw
set nSw=function ZLw
set dSw=function ILw
set fSw=function PLw
set RSw=function DLw
set TSw=function HLw
set YSw=function KLw
set GSw=function LLw
set gSw=function CLw
set hSw=function BLw
set FSw=function MLw
set kSw=function rXw
set jSw=function tXw
set xSw=function SXw
set vSw=function oXw
set mSw=function bXw
set QSw=function pXw
set WSw=function qXw
set ESw=function nXw
set ZSw=function RXw
set USw=function YXw
set ISw=function gXw
set PSw=function FXw
set ASw=function jXw
set DSw=function WXw
set HSw=function vXw
set JSw=function ZXw
set KSw=function PXw
set LSw=function IXw
set XSw=function DXw
set CSw=function KXw
set VSw=function JXw
set BSw=function XXw
set NSw=function BXw
set MSw=function VXw
set wcw=function MXw
set ucw=function rCw
set rcw=function uCw
set scw=function tCw
set tcw=function SCw
set icw=function oCw
set Scw=function lCw
set ccw=function pCw
set ocw=function qCw
set Ocw=function nCw
set lcw=function fCw
set bcw=function GCw
set ycw=function hCw
set pcw=function mCw
set ecw=function kCw
set qcw=function WCw
set acw=function ZCw
set ncw=function HCw
set dcw=function ICw
set fcw=function KCw
set Rcw=function XCw
set Tcw=function BCw
set Ycw=function uVw
set Gcw=function tVw
set gcw=function SVw
set hcw=function bVw
set Fcw=function aVw
set kcw=function fVw
set jcw=function TVw
set xcw=function FVw
set vcw=function xVw
set mcw=function QVw
set Qcw=function EVw
set Wcw=function ZVw
set Ecw=function UVw
set Zcw=function PVw
set Ucw=function DVw
set Icw=function HVw
set Pcw=function JVw
set Acw=function LVw
set Dcw=function CVw
set Hcw=function VVw
set Jcw=function BVw
set Kcw=function MVw
set Lcw=function uBw
set Xcw=function rBw
set Ccw=function sBw
set Vcw=function iBw
set Bcw=function cBw
set Ncw=function oBw
set Mcw=function OBw
set wow=function bBw
set uow=function pBw
set row=function nBw
set sow=function fBw
set tow=function gBw
set iow=function FBw
set Sow=function kBw
set cow=function vBw
set oow=function xBw
set Oow=function DBw
set low=function JBw
set bow=function BBw
set yow=function MBw
set pow=function wNw
set eow=function sNw
set qow=function tNw
set aow=function yNw
set now=function lNw
set dow=function cNw
set fow=function eNw
set Row=function aNw
set Tow=function YNw
set Yow=function gNw
set Gow=function QNw
set gow=function ENw
set how=function PNw
set Fow=function DNw
set kow=function VNw
set jow=function MNw
set xow=function uMw
set vow=function NNw
set mow=function sMw
set Qow=function iMw
set Wow=function OMw
set Eow=function bMw
set Zow=function yMw
set Uow=function qMw
set Iow=function aMw
set Aow=function nMw
set Dow=function RMw
set How=function TMw
set Jow=function GMw
set Kow=function FMw
set Low=function jMw
set Xow=function xMw
set Cow=function mMw
set Vow=function QMw
set Bow=function EMw
set Now=function UMw
set Mow=function PMw
set wOw=function DMw
set uOw=function JMw
set rOw=function NMw
set sOw=function w3w
set tOw=function u3w
set iOw=function s3w
set SOw=function i3w
set cOw=function c3w
set oOw=function y3w
set OOw=function e3w
set lOw=function q3w
set bOw=function n3w
set yOw=function T3w
set pOw=function G3w
set eOw=function g3w
set qOw=function F3w
set aOw=function j3w
set nOw=function v3w
set dOw=function m3w
set fOw=function W3w
set ROw=function I3w
set TOw=function A3w
set YOw=function K3w
set GOw=function X3w
set gOw=function V3w
set hOw=function N3w
set FOw=function M3w
set kOw=function u1w
set jOw=function o1w
set xOw=function b1w
set vOw=function y1w
set mOw=function l1w
set QOw=function p1w
set WOw=function q1w
set EOw=function j1w
set ZOw=function v1w
set UOw=function I1w
set IOw=function A1w
set POw=function K1w
set AOw=function X1w
set DOw=function N1w
set HOw=function w4w
set JOw=function S4w
set KOw=function o4w
set LOw=function O4w
set XOw=function b4w
set COw=function y4w
set VOw=function e4w
set BOw=function T4w
set NOw=function g4w
set MOw=function F4w
set wlw=function G4w
set ulw=function k4w
set rlw=function v4w
set slw=function x4w
set tlw=function I4w
set ilw=function A4w
set Slw=function D4w
set clw=function H4w
set olw=function K4w
set Olw=function V4w
set llw=function N4w
set blw=function r2w
set ylw=function t2w
set plw=function O2w
set elw=function b2w
set qlw=function p2w
set alw=function q2w
set nlw=function n2w
set dlw=function f2w
set flw=function h2w
set Rlw=function k2w
set Tlw=function W2w
set Ylw=function Z2w
set Glw=function D2w
set glw=function J2w
set hlw=function L2w
set Flw=function C2w
set klw=function B2w
set jlw=function M2w
set xlw=function u5w
set vlw=function s5w
set mlw=function t5w
set Qlw=function S5w
set Wlw=function o5w
set Elw=function l5w
set Zlw=function y5w
set Ulw=function q5w
set Ilw=function n5w
set Plw=function T5w
set Alw=function F5w
set Dlw=function Q5w
set Hlw=function E5w
set Jlw=function J5w
set Klw=function L5w
set Llw=function V5w
set Xlw=function N5w
set Clw=function s6w
set Vlw=function i6w
set Blw=function o6w
set Nlw=function y6w
set Mlw=function p6w
set wbw=function a6w
set ubw=function d6w
set rbw=function n6w
set sbw=function f6w
set tbw=function q6w
set ibw=function h6w
set Sbw=function j6w
set cbw=function m6w
set obw=function k6w
set Obw=function W6w
set lbw=function U6w
set bbw=function A6w
set ybw=function Z6w
set pbw=function H6w
set ebw=function L6w
set qbw=function V6w
set abw=function K6w
set nbw=function N6w
set dbw=function u7w
set fbw=function t7w
set Rbw=function w7w
set Tbw=function S7w
set Ybw=function o7w
set Gbw=function p7w
set gbw=function a7w
set hbw=function d7w
set Fbw=function q7w
set kbw=function R7w
set jbw=function h7w
set xbw=function Y7w
set vbw=function Q7w
set mbw=function E7w
set Qbw=function U7w
set Wbw=function P7w
set Ebw=function D7w
set Zbw=function J7w
set Ubw=function K7w
set Ibw=function X7w
set Pbw=function C7w
set Abw=function B7w
set Dbw=function N7w
set Hbw=function w8w
set Jbw=function u8w
set Kbw=function s8w
set Lbw=function t8w
set Xbw=function S8w
set Cbw=function c8w
set Vbw=function O8w
set Bbw=function l8w
set Nbw=function y8w
set Mbw=function a8w
set wyw=function d8w
set uyw=function R8w
set ryw=function Y8w
set syw=function h8w
set tyw=function k8w
set iyw=function x8w
set Syw=function Q8w
set cyw=function Z8w
set oyw=function m8w
set Oyw=function J8w
set lyw=function B8w
set byw=function L8w
set yyw=function r9u
set pyw=function O9u
set eyw=function p9u
set qyw=function t9u
set ayw=function n9u
set nyw=function f9u
set dyw=function k9u
set fyw=function I9u
set Ryw=function x9u
set Tyw=function H9u
set Yyw=function w0u
set Gyw=function K9u
set gyw=function i0u
set hyw=function c0u
set Fyw=function l0u
set kyw=function G0u
set jyw=function y0u
set xyw=function F0u
set vyw=function j0u
set myw=function W0u
set Qyw=function Z0u
set Wyw=function D0u
set Eyw=function C0u
set Zyw=function K_u
set Uyw=function L_u
set Iyw=function iUu
set Pyw=function JGu
set Ayw=function X_u
set Dyw=function ywu
set Hyw=function Rgr
set Jyw=function yus
set Kyw=function Wpu
set Lyw=function Hku
set Xyw=function mQu
set Cyw=function iZu
set Vyw=function awu
set Byw=function lRu
set Nyw=function Wku
set Myw=function Pau
set wpw=function Jku
set upw=function WZu
set rpw=function fkr
set spw=function AWu
set tpw=function Ifo
set ipw=function WRu
set Spw=function gFu
set cpw=function hrs
set opw=function jdu
set Opw=function Pfo
set lpw=function ccu
set bpw=function Afo
set ypw=function Pwu
set ppw=function Dfo
set epw=function gnu
set qpw=function nwu
set apw=function pwu
set npw=function dwu
set dpw=function GTu
set fpw=function Hfo
set Rpw=function Qou
set Tpw=function gkr
set Ypw=function Avu
set Gpw=function Eku
set gpw=function gHr
set hpw=function HGu
set Fpw=function Jfo
set kpw=function Kfo
set jpw=function Lfo
set xpw=function Mmu
set vpw=function Xfo
set mpw=function ltu
set Qpw=function Rtu
set Wpw=function Cfo
set Epw=function htu
set Zpw=function Vfo
set Upw=function Bfo
set Ipw=function Nfo
set Ppw=function hHr
set Apw=function Mfo
set Dpw=function wRo
set Hpw=function Qpu
set Jpw=function Ueu
set Kpw=function Ieu
set Lpw=function Rkr
set Xpw=function uRo
set Cpw=function sdu
set Vpw=function gTu
set Bpw=function Nws
set Npw=function KQu
set Mpw=function rRo
set wew=function xdu
set uew=function cju
set rew=function sRo
set sew=function tRo
set tew=function iRo
set iew=function SRo
set Sew=function Wbr
set cew=function cRo
set oew=function CDu
set Oew=function XDu
set lew=function oRo
set bew=function c9r
set yew=function ORo
set pew=function lRo
set eew=function bRo
set qew=function yRo
set aew=function Tgr
set dew=function Dmu
set few=function pRo
set Rew=function Sju
set Tew=function oju
set Yew=function omu
set Gew=function Omu
set gew=function xQu
set hew=function wQu
set Few=function YEu
set kew=function vQu
set jew=function eRo
set xew=function HUu
set vew=function tPu
set mew=function qRo
set Qew=function bgr
set Wew=function ygr
set Eew=function pgr
set Zew=function Ikr
set Uew=function lmr
set Iew=function Fws
set Pew=function kws
set Aew=function aRo
set Dew=function jws
set Hew=function BDu
set Jew=function nRo
set Kew=function dRo
set Lew=function fRo
set Xew=function RRo
set Cew=function TRo
set Vew=function YRo
set Bew=function GRo
set New=function gRo
set Mew=function hRo
set wqw=function FRo
set uqw=function S8r
set rqw=function kRo
set sqw=function jRo
set tqw=function xRo
set iqw=function vRo
set Sqw=function mRo
set cqw=function QRo
set oqw=function WRo
set Oqw=function Xbr
set lqw=function ERo
set bqw=function agr
set yqw=function Lpr
set pqw=function ZRo
set eqw=function URo
set qqw=function IRo
set aqw=function PRo
set nqw=function ARo
set dqw=function DRo
set fqw=function HRo
set Rqw=function egr
set Tqw=function JRo
set Yqw=function KRo
set Gqw=function GHr
set gqw=function LRo
set hqw=function XRo
set Fqw=function Bws
set kqw=function Ous
set jqw=function Vrs
set xqw=function d_u
set vqw=function f_u
set mqw=function Y_u
set Qqw=function G_u
set Wqw=function F_u
set Eqw=function k_u
set Zqw=function v_u
set Uqw=function Q_u
set Iqw=function E_u
set Pqw=function Z_u
set Aqw=function U_u
set Dqw=function I_u
set Hqw=function P_u
set Jqw=function A_u
set Kqw=function D_u
set Lqw=function H_u
set Xqw=function J_u
set Cqw=function CRo
set Vqw=function qiu
set Bqw=function Biu
set Nqw=function VRo
set Mqw=function BRo
set waw=function NRo
set uaw=function MRo
set raw=function bou
set saw=function wTo
set taw=function uTo
set iaw=function rTo
set Saw=function sTo
set caw=function Sdu
set oaw=function yRu
set Oaw=function pTu
set law=function tTo
set baw=function pmu
set yaw=function amu
set paw=function qmu
set eaw=function LQu
set qaw=function iTo
set aaw=function NDu
set naw=function STo
set daw=function cTo
set faw=function oTo
set Raw=function OTo
set Taw=function lTo
set Yaw=function Ubr
set Gaw=function gnr
set gaw=function bTo
set haw=function knr
set Faw=function vnr
set kaw=function yTo
set jaw=function pTo
set xaw=function eTo
set vaw=function qTo
set maw=function aTo
set Qaw=function nTo
set Waw=function dTo
set Eaw=function fTo
set Zaw=function RTo
set Uaw=function TTo
set Iaw=function YTo
set Paw=function GTo
set Aaw=function gTo
set Daw=function hTo
set Haw=function FTo
set Jaw=function kTo
set Kaw=function jTo
set Law=function Umu
set Xaw=function Pmu
set Caw=function Amu
set Vaw=function xTo
set Baw=function vTo
set Naw=function mTo
set Maw=function QTo
set wnw=function WTo
set unw=function ETo
set rnw=function ZTo
endfunction
function LGw takes nothing returns nothing
local trigger KGw=CreateTrigger()
call rfw(KGw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(KGw,Filter(Hww))
set KGw=null
set KGw=null
endfunction
function Lgw takes nothing returns nothing
local integer Kgw=0
set Kgw=0
loop
exitwhen Kgw>12
set g[Kgw]=CreateGroup()
set Kgw=Kgw+1
endloop
set h=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set F[Kgw]=false
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set k[Kgw]=""
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>10
set Kgw=Kgw+1
endloop
set x=0
set Kgw=0
loop
exitwhen Kgw>50
set v[Kgw]=""
set Kgw=Kgw+1
endloop
call Player(bj_PLAYER_NEUTRAL_EXTRA)
set Kgw=0
loop
exitwhen Kgw>8192
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>100
set m[Kgw]=""
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>9
set Q[Kgw]=""
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set X[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>400
set Kgw=Kgw+1
endloop
set V=0
set N=0
set Kgw=0
loop
exitwhen Kgw>400
set M[Kgw]=""
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set ww=true
set Kgw=0
loop
exitwhen Kgw>12
set qw[Kgw]=1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>400
set nw[Kgw]=""
set Kgw=Kgw+1
endloop
set dw=0
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set fw=0
set Kgw=0
loop
exitwhen Kgw>400
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Tw[Kgw]=0
set Kgw=Kgw+1
endloop
set Yw=0
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Gw[Kgw]=0.
set Kgw=Kgw+1
endloop
set gw=false
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set xw=CreateTimer()
set Kgw=0
loop
exitwhen Kgw>12
set vw[Kgw]=1.00
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set mw[Kgw]=false
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>100
set Qw[Kgw]=""
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Ww[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Cw=""
set Vw=false
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
call DialogCreate()
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
call CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
call CreateTimer()
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
call CreateGroup()
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
call CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
call DialogCreate()
set Kgw=Kgw+1
endloop
call DialogCreate()
call DialogCreate()
call DialogCreate()
call DialogCreate()
call DialogCreate()
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
call DialogCreate()
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
call DialogCreate()
call DialogCreate()
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
call CreateGroup()
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Bw[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set wu[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set ru[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set su[Kgw]=0.
set Kgw=Kgw+1
endloop
set tu=0.
set Kgw=0
loop
exitwhen Kgw>1
set Su[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set cu[Kgw]=""
set Kgw=Kgw+1
endloop
set ou=""
set Kgw=0
loop
exitwhen Kgw>1
set Ou[Kgw]=""
set Kgw=Kgw+1
endloop
set lu=""
set Kgw=0
loop
exitwhen Kgw>1
set bu[Kgw]=false
set Kgw=Kgw+1
endloop
set yu=false
set Kgw=0
loop
exitwhen Kgw>1
set pu[Kgw]=0.
set Kgw=Kgw+1
endloop
set eu=0.
set qu=0.
set au=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set nu[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set du[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
call CreateGroup()
set fu=true
call CreateGroup()
call CreateGroup()
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
call CreateGroup()
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Yu=false
set Gu=0.
set gu=0.
set hu=0.
set Fu=0.
set ku=0
set ju=0
set xu=0.
set vu=0.
set mu=0.
set Qu=0.
set Wu=0.
set Eu=0.
set Zu=0.
set Uu=0.
set Iu=0.
set Pu=0.
set Du=0
set Hu=CreateGroup()
set Ku=CreateGroup()
set Lu=CreateGroup()
set Xu=CreateForce()
set Cu=0
set Vu=0
set Bu=0
set Mu=0
set wr=0
set ur=0
set rr=0
set sr=0
set tr=0.
set ir=0.
set Sr=false
set Kgw=0
loop
exitwhen Kgw>1
set cr[Kgw]=CreateGroup()
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set lr[Kgw]=CreateGroup()
set Kgw=Kgw+1
endloop
set yr=0.
set er=0.
set qr=0.
set ar=0.
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set dr=CreateGroup()
set fr=CreateGroup()
set Rr=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
call CreateGroup()
set Kgw=Kgw+1
endloop
call CreateGroup()
set Yr=CreateGroup()
set hr=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
call CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set kr[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set vr[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Qr[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Wr[Kgw]=0.
set Kgw=Kgw+1
endloop
set Er=0.
set Kgw=0
loop
exitwhen Kgw>1
set Ur[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Ir[Kgw]=""
set Kgw=Kgw+1
endloop
set Pr=""
set Kgw=0
loop
exitwhen Kgw>1
set Ar[Kgw]=""
set Kgw=Kgw+1
endloop
set Dr=""
set Kgw=0
loop
exitwhen Kgw>1
set Hr[Kgw]=false
set Kgw=Kgw+1
endloop
set Jr=false
set Kgw=0
loop
exitwhen Kgw>1
set Kr[Kgw]=0.
set Kgw=Kgw+1
endloop
set Lr=0.
set Xr=0.
set Cr=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set Vr[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Br[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
call CreateGroup()
set Kgw=Kgw+1
endloop
set Mr=0
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set ws=CreateGroup()
set us=CreateGroup()
set rs=CreateGroup()
call CreateGroup()
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>13
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>20
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set ts=0
set Kgw=0
loop
exitwhen Kgw>1
set is[Kgw]=true
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Ss[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set cs=CreateGroup()
set os=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set ls[Kgw]=false
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set bs[Kgw]=12
set Kgw=Kgw+1
endloop
set ys=CreateGroup()
set ps=CreateGroup()
set es=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
call CreateGroup()
set Kgw=Kgw+1
endloop
call CreateGroup()
set qs=CreateGroup()
set as=CreateGroup()
set ns=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set ds[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set fs[Kgw]=""
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Rs[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Ts[Kgw]=""
set Kgw=Kgw+1
endloop
set Ys=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set Gs[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set gs[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set hs[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Fs[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set ks[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set js[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set vs[Kgw]=false
set Kgw=Kgw+1
endloop
set Qs=""
set Ws=0.
set Es=false
set Zs=0.
set Us=""
set Is=0.
set Ds=0
set Kgw=0
loop
exitwhen Kgw>1
set Hs[Kgw]=0
set Kgw=Kgw+1
endloop
call CreateGroup()
set Ls=CreateGroup()
call CreateGroup()
set Xs=CreateGroup()
set Cs=0
set Kgw=0
loop
exitwhen Kgw>1
set Vs[Kgw]=0
set Kgw=Kgw+1
endloop
set Bs=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set Ms[Kgw]=""
set Kgw=Kgw+1
endloop
set wt=0
call CreateTimer()
set st=CreateGroup()
set tt=CreateGroup()
set St=CreateGroup()
set ct=CreateGroup()
set ot=CreateGroup()
set Ot=CreateGroup()
set lt=CreateGroup()
set bt=CreateGroup()
set yt=CreateGroup()
set pt=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set et[Kgw]=false
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set qt[Kgw]=true
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set at[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set nt[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set dt[Kgw]=true
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set ft[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Rt[Kgw]=false
set Kgw=Kgw+1
endloop
call CreateGroup()
set Kgw=0
loop
exitwhen Kgw>2
set Tt[Kgw]=CreateGroup()
set Kgw=Kgw+1
endloop
set Yt=CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set Gt[Kgw]=0.
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set gt=0
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Ft=CreateGroup()
set kt=CreateGroup()
set jt=CreateGroup()
call CreateGroup()
call CreateGroup()
set Kgw=0
loop
exitwhen Kgw>1
set vt[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>1
set Kgw=Kgw+1
endloop
call CreateGroup()
set mt=0
set Kgw=0
loop
exitwhen Kgw>1
set Qt[Kgw]=0
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>16
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Zt[Kgw]=false
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>12
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>192
set Kgw=Kgw+1
endloop
set Kgw=0
loop
exitwhen Kgw>192
set Kgw=Kgw+1
endloop
endfunction
function Mgw takes nothing returns nothing
set It=Rect(-30720.0,26336.0,-24672.0,30720.0)
endfunction
function N0u takes nothing returns nothing
call ConditionalTriggerExecute(Jt)
call ConditionalTriggerExecute(hi)
call ConditionalTriggerExecute(xi)
endfunction
function Bgw takes nothing returns nothing
endfunction
function Vgw takes nothing returns nothing
local player Cgw=Player(0)
call CreateUnit(Cgw,1747998279,-28864.0,27200.0,270.000)
call CreateUnit(Cgw,1747998259,-28672.0,27264.0,270.000)
call CreateUnit(Cgw,1747996214,-30336.0,30528.0,270.000)
call CreateUnit(Cgw,1747998278,-28928.0,27648.0,270.000)
call CreateUnit(Cgw,1747998032,-29120.0,26560.0,270.000)
call CreateUnit(Cgw,1747989041,-30528.0,28992.0,270.000)
call CreateUnit(Cgw,1747998276,-28672.0,27648.0,270.000)
call CreateUnit(Cgw,1668637288,-28608.0,29376.0,270.000)
call CreateUnit(Cgw,1747998019,-29568.0,28992.0,270.000)
call CreateUnit(Cgw,1747997522,-27968.0,26752.0,270.000)
call CreateUnit(Cgw,1747998275,-28736.0,27456.0,270.000)
call CreateUnit(Cgw,1747995185,-28416.0,30336.0,270.000)
call CreateUnit(Cgw,1747996228,-29952.0,30336.0,270.000)
call CreateUnit(Cgw,1747998520,-29952.0,28224.0,270.000)
call CreateUnit(Cgw,1747998519,-29568.0,28224.0,270.000)
call CreateUnit(Cgw,1747988787,-28736.0,30336.0,270.000)
call CreateUnit(Cgw,1747998517,-28224.0,28608.0,270.000)
call CreateUnit(Cgw,1747998518,-29760.0,28608.0,270.000)
call CreateUnit(Cgw,1747998516,-28800.0,29184.0,270.000)
call CreateUnit(Cgw,1747998515,-28800.0,28416.0,270.000)
call CreateUnit(Cgw,1747998512,-29760.0,28416.0,270.000)
call CreateUnit(Cgw,1747998298,-28416.0,29376.0,270.000)
call CreateUnit(Cgw,1747996213,-30336.0,30336.0,270.000)
call CreateUnit(Cgw,1747988819,-30144.0,30528.0,270.000)
call CreateUnit(Cgw,1747996499,-28096.0,30336.0,270.000)
call CreateUnit(Cgw,1747989045,-29952.0,30528.0,270.000)
call CreateUnit(Cgw,1747988802,-29760.0,30336.0,270.000)
call CreateUnit(Cgw,1747988790,-29760.0,30528.0,270.000)
call CreateUnit(Cgw,1747988824,-29568.0,30336.0,270.000)
call CreateUnit(Cgw,1747996227,-30144.0,30144.0,270.000)
call CreateUnit(Cgw,1747988786,-30528.0,30336.0,270.000)
call CreateUnit(Cgw,1747989047,-29376.0,30336.0,270.000)
call CreateUnit(Cgw,1747989586,-28480.0,26560.0,270.000)
call CreateUnit(Cgw,1747993930,-28608.0,26560.0,270.000)
call CreateUnit(Cgw,1747988564,-27968.0,27200.0,270.000)
call CreateUnit(Cgw,1747988563,-27968.0,27328.0,270.000)
call CreateUnit(Cgw,1747993942,-28096.0,26560.0,270.000)
call CreateUnit(Cgw,1747990866,-28224.0,26560.0,270.000)
call CreateUnit(Cgw,1747988561,-27968.0,27584.0,270.000)
call CreateUnit(Cgw,1747994964,-27840.0,28608.0,270.000)
call CreateUnit(Cgw,1747995731,-29376.0,29568.0,270.000)
call CreateUnit(Cgw,1747988560,-27968.0,27712.0,270.000)
call CreateUnit(Cgw,1747996761,-28992.0,29568.0,270.000)
call CreateUnit(Cgw,1747996226,-30144.0,30336.0,270.000)
call CreateUnit(Cgw,1747988557,-28352.0,27840.0,270.000)
call CreateUnit(Cgw,1747988558,-28224.0,27840.0,270.000)
call CreateUnit(Cgw,1747995716,-30528.0,26688.0,270.000)
call CreateUnit(Cgw,1747998264,-28800.0,29376.0,270.000)
call CreateUnit(Cgw,1747990612,-30144.0,29568.0,270.000)
call CreateUnit(Cgw,1747993417,-30528.0,27840.0,270.000)
call CreateUnit(Cgw,1747993936,-28352.0,26560.0,270.000)
call CreateUnit(Cgw,1747993943,-27968.0,26560.0,270.000)
call CreateUnit(Cgw,1747988549,-29248.0,27712.0,270.000)
call CreateUnit(Cgw,1747990604,-27968.0,26880.0,270.000)
call CreateUnit(Cgw,1747989585,-27968.0,27008.0,270.000)
call CreateUnit(Cgw,1747988548,-29248.0,27840.0,270.000)
call CreateUnit(Cgw,1747988809,-29376.0,29952.0,270.000)
call CreateUnit(Cgw,1747996747,-28800.0,29568.0,270.000)
call CreateUnit(Cgw,1747995722,-28992.0,26560.0,270.000)
call CreateUnit(Cgw,1747993159,-30144.0,29760.0,270.000)
call CreateUnit(Cgw,1747993157,-30336.0,29760.0,270.000)
set fO=CreateUnit(Cgw,1747988811,-30528.0,29952.0,270.000)
call CreateUnit(Cgw,1747993156,-30528.0,29760.0,270.000)
call CreateUnit(Cgw,1747993158,-29952.0,29760.0,270.000)
call CreateUnit(Cgw,1747988531,-29760.0,30144.0,270.000)
call CreateUnit(Cgw,1747988825,-29568.0,29952.0,270.000)
call CreateUnit(Cgw,1747988533,-29248.0,27584.0,270.000)
call CreateUnit(Cgw,1747996229,-29952.0,30144.0,270.000)
call CreateUnit(Cgw,1747995217,-29568.0,30528.0,270.000)
call CreateUnit(Cgw,1747988788,-29760.0,29952.0,270.000)
call CreateUnit(Cgw,1747988789,-29760.0,28992.0,270.000)
call CreateUnit(Cgw,1747998273,-28992.0,29376.0,270.000)
call CreateUnit(Cgw,1747998263,-28224.0,29184.0,270.000)
call CreateUnit(Cgw,1747988792,-29760.0,29760.0,270.000)
call CreateUnit(Cgw,1747988793,-29760.0,29376.0,270.000)
call CreateUnit(Cgw,1747988801,-30336.0,29568.0,270.000)
call CreateUnit(Cgw,1747988803,-30528.0,29376.0,270.000)
call CreateUnit(Cgw,1747988812,-30528.0,30528.0,270.000)
call CreateUnit(Cgw,1747996208,-30528.0,30144.0,270.000)
call CreateUnit(Cgw,1747995721,-28864.0,26560.0,270.000)
call CreateUnit(Cgw,1747988807,-30528.0,29568.0,270.000)
call CreateUnit(Cgw,1747988808,-29952.0,29376.0,270.000)
call CreateUnit(Cgw,1747988810,-29568.0,30144.0,270.000)
call CreateUnit(Cgw,1747990861,-29952.0,29568.0,270.000)
call CreateUnit(Cgw,1747988813,-30144.0,28992.0,270.000)
call CreateUnit(Cgw,1747988815,-29760.0,29568.0,270.000)
call CreateUnit(Cgw,1747988816,-29568.0,29568.0,270.000)
call CreateUnit(Cgw,1747990862,-29760.0,29184.0,270.000)
call CreateUnit(Cgw,1747988820,-30528.0,29184.0,270.000)
call CreateUnit(Cgw,1747989048,-29376.0,30528.0,270.000)
call CreateUnit(Cgw,1747995186,-30144.0,29376.0,270.000)
call CreateUnit(Cgw,1747995184,-30336.0,29376.0,270.000)
call CreateUnit(Cgw,1747993160,-30336.0,28992.0,270.000)
call CreateUnit(Cgw,1747995223,-29376.0,29184.0,270.000)
call CreateUnit(Cgw,1747988826,-29376.0,28992.0,270.000)
call CreateUnit(Cgw,1747989040,-29952.0,28992.0,270.000)
call CreateUnit(Cgw,1747990864,-30336.0,29184.0,270.000)
call CreateUnit(Cgw,1747988817,-30144.0,29184.0,270.000)
call CreateUnit(Cgw,1747989042,-29952.0,29184.0,270.000)
call CreateUnit(Cgw,1747989044,-29568.0,29376.0,270.000)
call CreateUnit(Cgw,1747990863,-29568.0,29184.0,270.000)
call CreateUnit(Cgw,1747989046,-29568.0,29760.0,270.000)
call CreateUnit(Cgw,1747988529,-30528.0,27648.0,270.000)
call CreateUnit(Cgw,1747988530,-30528.0,27456.0,270.000)
call CreateUnit(Cgw,1747989557,-30528.0,27264.0,270.000)
call CreateUnit(Cgw,1747993170,-30528.0,27072.0,270.000)
call CreateUnit(Cgw,1747994452,-30528.0,26880.0,270.000)
call CreateUnit(Cgw,1747995208,-28608.0,29760.0,270.000)
call CreateUnit(Cgw,1747994199,-28800.0,29760.0,270.000)
call CreateUnit(Cgw,1747990608,-28992.0,29760.0,270.000)
call CreateUnit(Cgw,1747995727,-28224.0,29760.0,270.000)
call CreateUnit(Cgw,1747993928,-28032.0,29760.0,270.000)
call CreateUnit(Cgw,1747996235,-28608.0,29568.0,270.000)
call CreateUnit(Cgw,1747997751,-28992.0,29184.0,270.000)
call CreateUnit(Cgw,1747998261,-27840.0,29568.0,270.000)
call CreateUnit(Cgw,1747998262,-28224.0,29568.0,270.000)
call CreateUnit(Cgw,1747996502,-27840.0,29760.0,270.000)
call CreateUnit(Cgw,1747993935,-27840.0,28416.0,270.000)
call CreateUnit(Cgw,1747998258,-28800.0,27648.0,270.000)
call CreateUnit(Cgw,1747998005,-28608.0,29184.0,270.000)
call CreateUnit(Cgw,1747997771,-27840.0,29376.0,270.000)
call CreateUnit(Cgw,1747995449,-28416.0,29760.0,270.000)
call CreateUnit(Cgw,1747997010,-28416.0,29568.0,270.000)
call CreateUnit(Cgw,1747998265,-28032.0,29184.0,270.000)
call CreateUnit(Cgw,1747988823,-30336.0,30144.0,270.000)
set RO=CreateUnit(Cgw,1747989043,-29952.0,29952.0,270.000)
set TO=CreateUnit(Cgw,1747988822,-30336.0,29952.0,270.000)
set YO=CreateUnit(Cgw,1747988818,-30144.0,29952.0,270.000)
call CreateUnit(Cgw,1747989583,-28864.0,27328.0,270.000)
call CreateUnit(Cgw,1747993931,-28864.0,27072.0,270.000)
call CreateUnit(Cgw,1747989584,-28864.0,26944.0,270.000)
call CreateUnit(Cgw,1747994962,-28864.0,27456.0,270.000)
call CreateUnit(Cgw,1747990865,-29056.0,26880.0,270.000)
call CreateUnit(Cgw,1747993676,-29056.0,27008.0,270.000)
call CreateUnit(Cgw,1747989574,-29056.0,27136.0,270.000)
call CreateUnit(Cgw,1747989575,-29056.0,27264.0,270.000)
call CreateUnit(Cgw,1747994963,-29056.0,27648.0,270.000)
call CreateUnit(Cgw,1747988534,-29248.0,26688.0,270.000)
call CreateUnit(Cgw,1747988535,-29248.0,26816.0,270.000)
call CreateUnit(Cgw,1747988536,-29248.0,26944.0,270.000)
call CreateUnit(Cgw,1747988537,-29248.0,27072.0,270.000)
call CreateUnit(Cgw,1747988791,-29376.0,30144.0,270.000)
call CreateUnit(Cgw,1747998274,-28032.0,29568.0,270.000)
call CreateUnit(Cgw,1747988550,-29120.0,27840.0,270.000)
call CreateUnit(Cgw,1747988551,-28992.0,27840.0,270.000)
call CreateUnit(Cgw,1747994196,-29376.0,29760.0,270.000)
call CreateUnit(Cgw,1747997521,-28224.0,29376.0,270.000)
call CreateUnit(Cgw,1747995952,-29376.0,29376.0,270.000)
call CreateUnit(Cgw,1747988545,-29248.0,27200.0,270.000)
call CreateUnit(Cgw,1747988552,-28864.0,27840.0,270.000)
call CreateUnit(Cgw,1747988553,-28736.0,27840.0,270.000)
call CreateUnit(Cgw,1747988554,-28608.0,27840.0,270.000)
call CreateUnit(Cgw,1747988555,-28480.0,27840.0,270.000)
call CreateUnit(Cgw,1747988562,-27968.0,27456.0,270.000)
call CreateUnit(Cgw,1747989587,-28736.0,26560.0,270.000)
call CreateUnit(Cgw,1747988559,-28096.0,27840.0,270.000)
call CreateUnit(Cgw,1747988556,-27968.0,27840.0,270.000)
call CreateUnit(Cgw,1747988547,-29248.0,27456.0,270.000)
call CreateUnit(Cgw,1747988546,-29248.0,27328.0,270.000)
call CreateUnit(Cgw,1747993168,-30144.0,27456.0,270.000)
call CreateUnit(Cgw,1747990097,-30144.0,27840.0,270.000)
call CreateUnit(Cgw,1747990347,-29952.0,27840.0,270.000)
call CreateUnit(Cgw,1747995457,-29952.0,27456.0,270.000)
call CreateUnit(Cgw,1747995207,-29952.0,27264.0,270.000)
call CreateUnit(Cgw,1747997785,-29568.0,27456.0,270.000)
call CreateUnit(Cgw,1747990349,-29952.0,27648.0,270.000)
call CreateUnit(Cgw,1747990099,-30144.0,27648.0,270.000)
call CreateUnit(Cgw,1747992882,-29568.0,27648.0,270.000)
call CreateUnit(Cgw,1747990100,-29760.0,27648.0,270.000)
call CreateUnit(Cgw,1747990348,-29568.0,27840.0,270.000)
call CreateUnit(Cgw,1747990098,-29760.0,27840.0,270.000)
call CreateUnit(Cgw,1747994417,-30144.0,26880.0,270.000)
call CreateUnit(Cgw,1747995726,-29952.0,26880.0,270.000)
call CreateUnit(Cgw,1747990836,-29760.0,26880.0,270.000)
call CreateUnit(Cgw,1747995976,-30144.0,27072.0,270.000)
call CreateUnit(Cgw,1747995953,-29952.0,27072.0,270.000)
call CreateUnit(Cgw,1747997270,-29760.0,27072.0,270.000)
call CreateUnit(Cgw,1747997753,-30144.0,27264.0,270.000)
call CreateUnit(Cgw,1747995981,-29760.0,27456.0,270.000)
call CreateUnit(Cgw,1747990607,-29760.0,27264.0,270.000)
call CreateUnit(Cgw,1747990849,-29568.0,27264.0,270.000)
call CreateUnit(Cgw,1747995972,-29568.0,27072.0,270.000)
call CreateUnit(Cgw,1747998282,-28608.0,28416.0,270.000)
call CreateUnit(Cgw,1747998280,-29568.0,28416.0,270.000)
call CreateUnit(Cgw,1747998281,-29376.0,28416.0,270.000)
call CreateUnit(Cgw,1747996468,-28608.0,28608.0,270.000)
call CreateUnit(Cgw,1747998018,-29376.0,28224.0,270.000)
call CreateUnit(Cgw,1747997495,-28416.0,28416.0,270.000)
call CreateUnit(Cgw,1747996501,-29184.0,28416.0,270.000)
call CreateUnit(Cgw,1747998287,-28800.0,28608.0,270.000)
call CreateUnit(Cgw,1747998286,-29184.0,28608.0,270.000)
call CreateUnit(Cgw,1747998288,-29568.0,28608.0,270.000)
call CreateUnit(Cgw,1747998289,-30528.0,28608.0,270.000)
call CreateUnit(Cgw,1747998290,-30336.0,28608.0,270.000)
call CreateUnit(Cgw,1747998291,-30144.0,28608.0,270.000)
call CreateUnit(Cgw,1747998292,-29952.0,28608.0,270.000)
call CreateUnit(Cgw,1747998285,-30144.0,28224.0,270.000)
call CreateUnit(Cgw,1747998283,-30144.0,28416.0,270.000)
call CreateUnit(Cgw,1747998284,-29952.0,28416.0,270.000)
call CreateUnit(Cgw,1747996977,-30336.0,28416.0,270.000)
call CreateUnit(Cgw,1747996236,-29760.0,28224.0,270.000)
call CreateUnit(Cgw,1747996500,-30528.0,28224.0,270.000)
call CreateUnit(Cgw,1747997013,-30336.0,28224.0,270.000)
call CreateUnit(Cgw,1747996746,-30528.0,28416.0,270.000)
call CreateUnit(Cgw,1747996758,-28416.0,28608.0,270.000)
call CreateUnit(Cgw,1747998293,-28992.0,28608.0,270.000)
call CreateUnit(Cgw,1747998294,-29376.0,28608.0,270.000)
call CreateUnit(Cgw,1747998295,-28992.0,28416.0,270.000)
call CreateUnit(Cgw,1747998296,-28032.0,29376.0,270.000)
call CreateUnit(Cgw,1747998297,-28416.0,29184.0,270.000)
call CreateUnit(Cgw,1747998529,-30528.0,26496.0,270.000)
call CreateUnit(Cgw,1747998553,-29248.0,26560.0,270.000)
call CreateUnit(Cgw,1747998521,-27840.0,29184.0,270.000)
call CreateUnit(Cgw,1747998787,-29056.0,27520.0,270.000)
call CreateUnit(Cgw,1747998277,-29056.0,27392.0,270.000)
call CreateUnit(Cgw,1747998532,-28672.0,27136.0,270.000)
call CreateUnit(Cgw,1747998531,-28544.0,27648.0,270.000)
set Cgw=null
endfunction
function Ngw takes nothing returns nothing
call Vgw()
call Bgw()
endfunction
function SFw takes nothing returns nothing
local trigger iFw=CreateTrigger()
call rfw(iFw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(iFw,Filter(sww_3983))
call TriggerAddCondition(R,Filter(tww_4064))
set XO=uYw()
set ib[XO]=4
set VO=rRw()
set CO=uYw()
set ib[CO]=5
set BO=rRw()
set NO=rRw()
set MO=rRw()
set iFw=null
endfunction
function Skw takes nothing returns nothing
local trigger ikw=CreateTrigger()
call rfw(ikw,EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(ikw,Filter(nww_3574))
set nl=uYw()
set ib[nl]=8
set ikw=null
endfunction
function Thw takes nothing returns nothing
local trigger Rhw=CreateTrigger()
call rfw(Rhw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Rhw,Filter(Bww))
call TriggerAddCondition(R,Filter(Nww))
set AO=uYw()
set Sb[AO]=1
set Rhw=null
endfunction
function Uhw takes nothing returns nothing
local trigger Zhw=CreateTrigger()
call rfw(Zhw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(Zhw,Filter(Mww))
call TriggerAddCondition(R,Filter(www_4310))
set DO=uYw()
set rb[DO]=2
set sb[DO]=3
set HO=rRw()
set Zhw=null
endfunction
function XFw takes nothing returns nothing
local trigger LFw=CreateTrigger()
call rfw(LFw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(LFw,Filter(yww_4474))
set LFw=CreateTrigger()
call rfw(LFw,EVENT_PLAYER_UNIT_DEATH)
call TriggerAddCondition(LFw,Filter(pww_3737))
set el=uYw()
set ib[el]=7
set LFw=null
endfunction
function Xgw takes nothing returns nothing
set Pt=CreateSound("Sound\\Interface\\NewTournament.wav",false,false,false,10,10,"DefaultEAXON")
call SetSoundParamsFromLabel(Pt,"NewTournament")
call SetSoundDuration(Pt,7987)
set At=CreateSound("Sound\\Ambient\\DoodadEffects\\WaterLakeLoop1.wav",false,true,false,10,10,"DoodadsEAX")
call SetSoundParamsFromLabel(At,"LakeLoop")
call SetSoundDuration(At,3297)
call SetSoundVolume(At,127)
set Dt=CreateSound("Sound\\Ambient\\DoodadEffects\\WaterStreamLoop1.wav",false,true,false,10,10,"DoodadsEAX")
call SetSoundParamsFromLabel(Dt,"StreamLoop")
call SetSoundDuration(Dt,2008)
set Ht=CreateSound("Sound\\Ambient\\DoodadEffects\\WaterWavesLoop1.wav",false,true,false,10,10,"DoodadsEAX")
call SetSoundParamsFromLabel(Ht,"WavesLoop")
call SetSoundDuration(Ht,7445)
call SetSoundVolume(Ht,127)
endfunction
function vTw takes nothing returns integer
local integer xTw
if Cl[0]==0 then
set Xl=Xl+1
set xTw=Xl
else
set xTw=Cl[0]
set Cl[0]=Cl[Cl[0]]
endif
return xTw
endfunction
function QTw takes nothing returns integer
local integer mTw=vTw()
set Kl[mTw]=rRw()
set Ll[mTw]=0
return mTw
endfunction
function ZKw takes nothing returns nothing
local trigger WKw=CreateTrigger()
local integer EKw=0
call rfw(WKw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(WKw,Filter(Xiw))
set WKw=CreateTrigger()
call rfw(WKw,EVENT_PLAYER_UNIT_ISSUED_ORDER)
call TriggerAddCondition(WKw,Filter(Ciw))
set WKw=null
loop
exitwhen EKw==bj_MAX_PLAYER_SLOTS
set hl[EKw]=QTw()
call SetPlayerTechResearched(r[EKw],gl,0)
call FKw(EKw,false)
set EKw=EKw+1
endloop
set WKw=null
endfunction
function DTw takes nothing returns nothing
set p=GetCameraBoundMaxX()+GetCameraMargin(CAMERA_MARGIN_RIGHT)
set e=GetCameraBoundMinX()-GetCameraMargin(CAMERA_MARGIN_LEFT)
set q=GetCameraBoundMaxY()+GetCameraMargin(CAMERA_MARGIN_TOP)
set a=GetCameraBoundMinY()-GetCameraMargin(CAMERA_MARGIN_BOTTOM)
set n=GetWorldBounds()
set d=CreateRegion()
call RegionAddRect(d,n)
endfunction
function EYw takes nothing returns nothing
local trigger WYw=CreateTrigger()
call TriggerRegisterEnterRegion(WYw,d,Filter(Dww))
set WYw=null
endfunction
function Nfw takes nothing returns nothing
local trigger Cfw=CreateTrigger()
local integer Vfw=0
local integer Bfw
set Ul=GetLocalPlayer()
call GetPlayerId(Ul)
if bj_MAX_PLAYERS>12 then
endif
set Zl=vl
loop
exitwhen Vfw==bj_MAX_PLAYERS
set Bfw=Vfw
set ml[Bfw]=Player(Vfw)
set Ql[Bfw]=Vfw
set Pl[Vfw]=GetPlayerColor(ml[Bfw])
if GetPlayerController(ml[Bfw])==MAP_CONTROL_USER and GetPlayerSlotState(ml[Bfw])==PLAYER_SLOT_STATE_PLAYING then
set Al[Il]=Bfw
set Dl[Vfw]=Il
if Zl==vl then
set Zl=Vfw
set Wl[Vfw]=vl
set El[Vfw]=vl
else
set El[Vfw]=Ql[Al[Il-1]]
set Wl[Al[Il-1]]=Vfw
set Wl[Vfw]=vl
endif
call TriggerRegisterPlayerEvent(Cfw,ml[Bfw],EVENT_PLAYER_LEAVE)
call ForceAddPlayer(u,ml[Bfw])
call GetHandleId(Pl[Vfw])
set Il=Il+1
endif
call GetPlayerName(ml[Bfw])
set Vfw=Vfw+1
endloop
call TriggerAddCondition(Cfw,Filter(Www))
set Cfw=null
endfunction
function UTw takes nothing returns nothing
set y=rRw()
endfunction
function vfw takes nothing returns nothing
local integer jfw=0
local integer xfw=1
loop
exitwhen jfw>32
set xfw=xfw*2
set jfw=jfw+1
endloop
endfunction
function wRw takes nothing returns nothing
local integer Mfw=0
loop
exitwhen Mfw==bj_MAX_PLAYER_SLOTS
set r[Mfw]=Player(Mfw)
set Mfw=Mfw+1
endloop
set s=GetLocalPlayer()
endfunction
function a_u takes nothing returns nothing
set Mb=CreateTrigger()
call TriggerAddCondition(Mb,Condition(xqw))
set Jb[89]=CreateTrigger()
call TriggerAddCondition(Jb[89],Condition(vqw))
call TriggerAddAction(Jb[89],vqw)
set Nb=CreateTrigger()
call TriggerAddCondition(Nb,Condition(mqw))
set Lb[89]=null
set Lb[94]=null
set Vb=CreateTrigger()
call TriggerAddCondition(Vb,Condition(Qqw))
set Bb=CreateTrigger()
call TriggerAddCondition(Bb,Condition(Wqw))
set Xb=CreateTrigger()
call TriggerAddCondition(Xb,Condition(Eqw))
set Cb=CreateTrigger()
call TriggerAddCondition(Cb,Condition(Zqw))
set mb[95]=CreateTrigger()
call TriggerAddCondition(mb[95],Condition(Uqw))
call TriggerAddAction(mb[95],Uqw)
set vb[95]=null
set Jb[94]=CreateTrigger()
call TriggerAddCondition(Jb[94],Condition(Iqw))
call TriggerAddAction(Jb[94],Iqw)
set wy[1]=CreateTrigger()
call TriggerAddAction(wy[1],Pqw)
call TriggerAddCondition(wy[1],Condition(Pqw))
set wy[2]=CreateTrigger()
call TriggerAddAction(wy[2],Aqw)
call TriggerAddCondition(wy[2],Condition(Aqw))
set wy[3]=CreateTrigger()
call TriggerAddAction(wy[3],Dqw)
call TriggerAddCondition(wy[3],Condition(Dqw))
set wy[4]=CreateTrigger()
call TriggerAddAction(wy[4],Hqw)
call TriggerAddCondition(wy[4],Condition(Hqw))
set wy[5]=CreateTrigger()
call TriggerAddAction(wy[5],Jqw)
call TriggerAddCondition(wy[5],Condition(Jqw))
set wy[6]=CreateTrigger()
call TriggerAddAction(wy[6],Kqw)
call TriggerAddCondition(wy[6],Condition(Kqw))
set wy[7]=CreateTrigger()
call TriggerAddAction(wy[7],Lqw)
call TriggerAddCondition(wy[7],Condition(Lqw))
set wy[8]=CreateTrigger()
call TriggerAddAction(wy[8],Xqw)
call TriggerAddCondition(wy[8],Condition(Xqw))
call ExecuteFunc("vfw")
call ExecuteFunc("Nfw")
call ExecuteFunc("wRw")
call ExecuteFunc("UTw")
call ExecuteFunc("DTw")
call ExecuteFunc("EYw")
endfunction
function akw takes nothing returns nothing
local trigger qkw=CreateTrigger()
call rfw(qkw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(qkw,Filter(Rww_1614))
call TriggerAddCondition(R,Filter(Tww_1787))
set qkw=null
endfunction
function M0u takes nothing returns nothing
call SetPlayerTechResearched(Player(0),1382575461,3)
call SetPlayerTechResearched(Player(0),1382576737,3)
call SetPlayerTechResearched(Player(0),1382574178,1)
call SetPlayerTechResearched(Player(0),1382572402,3)
call SetPlayerTechResearched(Player(0),1382573922,1)
call SetPlayerTechResearched(Player(0),1382572387,3)
call SetPlayerTechResearched(Player(0),1382573157,1)
call SetPlayerTechResearched(Player(0),1382572398,1)
call SetPlayerTechResearched(Player(0),1382576244,2)
call SetPlayerTechResearched(Player(0),1382577012,2)
call SetPlayerTechResearched(Player(0),1382575201,3)
call SetPlayerTechResearched(Player(0),1382576745,1)
call SetPlayerTechResearched(Player(0),1382575208,2)
call SetPlayerTechResearched(Player(0),1382576997,1)
call SetPlayerTechResearched(Player(0),1382573676,1)
call SetPlayerTechResearched(Player(0),1382577011,1)
call SetPlayerTechResearched(Player(0),1382576756,1)
call SetPlayerTechResearched(Player(0),1382576237,1)
call SetPlayerTechResearched(Player(0),1382573667,1)
call SetPlayerTechResearched(Player(0),1382573683,1)
call SetPlayerTechResearched(Player(0),1382572900,1)
call SetPlayerTechResearched(Player(0),1383034213,3)
call SetPlayerTechResearched(Player(0),1383035489,3)
call SetPlayerTechResearched(Player(0),1383031154,3)
call SetPlayerTechResearched(Player(0),1383556205,1)
call SetPlayerTechResearched(Player(0),1383034983,1)
call SetPlayerTechResearched(Player(0),1383031411,1)
call SetPlayerTechResearched(Player(0),1383036787,1)
call SetPlayerTechResearched(Player(0),1383032174,1)
call SetPlayerTechResearched(Player(0),1383036531,1)
call SetPlayerTechResearched(Player(0),1383036772,2)
call SetPlayerTechResearched(Player(0),1383035764,2)
call SetPlayerTechResearched(Player(0),1383035760,3)
call SetPlayerTechResearched(Player(0),1383036018,1)
call SetPlayerTechResearched(Player(0),1383033958,1)
call SetPlayerTechResearched(Player(0),1383036788,2)
call SetPlayerTechResearched(Player(0),1383035490,1)
call SetPlayerTechResearched(Player(0),1383031403,1)
call SetPlayerTechResearched(Player(0),1383034989,1)
call SetPlayerTechResearched(Player(0),1383031398,1)
call SetPlayerTechResearched(Player(0),1383427429,3)
call SetPlayerTechResearched(Player(0),1383428705,3)
call SetPlayerTechResearched(Player(0),1383424370,3)
call SetPlayerTechResearched(Player(0),1383424355,1)
call SetPlayerTechResearched(Player(0),1383429986,1)
call SetPlayerTechResearched(Player(0),1383425894,1)
call SetPlayerTechResearched(Player(0),1383428966,1)
call SetPlayerTechResearched(Player(0),1383427685,2)
call SetPlayerTechResearched(Player(0),1383424609,2)
call SetPlayerTechResearched(Player(0),1383425634,1)
call SetPlayerTechResearched(Player(0),1383428972,1)
call SetPlayerTechResearched(Player(0),1383424882,3)
call SetPlayerTechResearched(Player(0),1383428195,1)
call SetPlayerTechResearched(Player(0),1383428973,1)
call SetPlayerTechResearched(Player(0),1383424629,1)
call SetPlayerTechResearched(Player(0),1383428976,1)
call SetPlayerTechResearched(Player(0),1383425400,1)
call SetPlayerTechResearched(Player(0),1383428205,1)
call SetPlayerTechResearched(Player(0),1382380397,3)
call SetPlayerTechResearched(Player(0),1382380407,3)
call SetPlayerTechResearched(Player(0),1382378849,3)
call SetPlayerTechResearched(Player(0),1382380136,3)
call SetPlayerTechResearched(Player(0),1382380918,1)
call SetPlayerTechResearched(Player(0),1382379106,1)
call SetPlayerTechResearched(Player(0),1382380387,1)
call SetPlayerTechResearched(Player(0),1382378855,1)
call SetPlayerTechResearched(Player(0),1382377826,1)
call SetPlayerTechResearched(Player(0),1382378859,1)
call SetPlayerTechResearched(Player(0),1382376564,2)
call SetPlayerTechResearched(Player(0),1382376547,2)
call SetPlayerTechResearched(Player(0),1382380393,1)
call SetPlayerTechResearched(Player(0),1382376290,1)
call SetPlayerTechResearched(Player(0),1382377588,1)
call SetPlayerTechResearched(Player(0),1382379618,1)
call SetPlayerTechResearched(Player(0),1382380147,1)
call SetPlayerTechResearched(Player(0),1382377587,1)
call SetPlayerTechResearched(Player(0),1382376802,1)
call SetPlayerTechResearched(Player(0),1382376803,1)
call SetPlayerTechResearched(Player(0),1382381427,1)
call SetPlayerTechResearched(Player(0),1382379629,1)
call SetPlayerTechResearched(Player(0),1382966638,1)
call SetPlayerTechResearched(Player(0),1382970231,2)
call SetPlayerTechResearched(Player(0),1382965620,3)
call SetPlayerTechResearched(Player(0),1382970217,1)
call SetPlayerTechResearched(Player(0),1382965613,3)
call SetPlayerTechResearched(Player(0),1382970210,1)
endfunction
function O_u takes nothing returns nothing
call SetPlayerTechResearched(Player(10),1382575461,3)
call SetPlayerTechResearched(Player(10),1382576737,3)
call SetPlayerTechResearched(Player(10),1382574178,1)
call SetPlayerTechResearched(Player(10),1382572402,3)
call SetPlayerTechResearched(Player(10),1382573922,1)
call SetPlayerTechResearched(Player(10),1382572387,3)
call SetPlayerTechResearched(Player(10),1382573157,1)
call SetPlayerTechResearched(Player(10),1382572398,1)
call SetPlayerTechResearched(Player(10),1382576244,2)
call SetPlayerTechResearched(Player(10),1382577012,2)
call SetPlayerTechResearched(Player(10),1382575201,3)
call SetPlayerTechResearched(Player(10),1382576745,1)
call SetPlayerTechResearched(Player(10),1382575208,2)
call SetPlayerTechResearched(Player(10),1382576997,1)
call SetPlayerTechResearched(Player(10),1382573676,1)
call SetPlayerTechResearched(Player(10),1382577011,1)
call SetPlayerTechResearched(Player(10),1382576756,1)
call SetPlayerTechResearched(Player(10),1382576237,1)
call SetPlayerTechResearched(Player(10),1382573667,1)
call SetPlayerTechResearched(Player(10),1382573683,1)
call SetPlayerTechResearched(Player(10),1382572900,1)
call SetPlayerTechResearched(Player(10),1383034213,3)
call SetPlayerTechResearched(Player(10),1383035489,3)
call SetPlayerTechResearched(Player(10),1383031154,3)
call SetPlayerTechResearched(Player(10),1383556205,1)
call SetPlayerTechResearched(Player(10),1383034983,1)
call SetPlayerTechResearched(Player(10),1383031411,1)
call SetPlayerTechResearched(Player(10),1383036787,1)
call SetPlayerTechResearched(Player(10),1383032174,1)
call SetPlayerTechResearched(Player(10),1383036531,1)
call SetPlayerTechResearched(Player(10),1383036772,2)
call SetPlayerTechResearched(Player(10),1383035764,2)
call SetPlayerTechResearched(Player(10),1383035760,3)
call SetPlayerTechResearched(Player(10),1383036018,1)
call SetPlayerTechResearched(Player(10),1383033958,1)
call SetPlayerTechResearched(Player(10),1383036788,2)
call SetPlayerTechResearched(Player(10),1383035490,1)
call SetPlayerTechResearched(Player(10),1383031403,1)
call SetPlayerTechResearched(Player(10),1383034989,1)
call SetPlayerTechResearched(Player(10),1383031398,1)
call SetPlayerTechResearched(Player(10),1383427429,3)
call SetPlayerTechResearched(Player(10),1383428705,3)
call SetPlayerTechResearched(Player(10),1383424370,3)
call SetPlayerTechResearched(Player(10),1383424355,1)
call SetPlayerTechResearched(Player(10),1383429986,1)
call SetPlayerTechResearched(Player(10),1383425894,1)
call SetPlayerTechResearched(Player(10),1383428966,1)
call SetPlayerTechResearched(Player(10),1383427685,2)
call SetPlayerTechResearched(Player(10),1383424609,2)
call SetPlayerTechResearched(Player(10),1383425634,1)
call SetPlayerTechResearched(Player(10),1383428972,1)
call SetPlayerTechResearched(Player(10),1383424882,3)
call SetPlayerTechResearched(Player(10),1383428195,1)
call SetPlayerTechResearched(Player(10),1383428973,1)
call SetPlayerTechResearched(Player(10),1383424629,1)
call SetPlayerTechResearched(Player(10),1383428976,1)
call SetPlayerTechResearched(Player(10),1383425400,1)
call SetPlayerTechResearched(Player(10),1383428205,1)
call SetPlayerTechResearched(Player(10),1382380397,3)
call SetPlayerTechResearched(Player(10),1382380407,3)
call SetPlayerTechResearched(Player(10),1382378849,3)
call SetPlayerTechResearched(Player(10),1382380136,3)
call SetPlayerTechResearched(Player(10),1382380918,1)
call SetPlayerTechResearched(Player(10),1382379106,1)
call SetPlayerTechResearched(Player(10),1382380387,1)
call SetPlayerTechResearched(Player(10),1382378855,1)
call SetPlayerTechResearched(Player(10),1382377826,1)
call SetPlayerTechResearched(Player(10),1382378859,1)
call SetPlayerTechResearched(Player(10),1382376564,2)
call SetPlayerTechResearched(Player(10),1382376547,2)
call SetPlayerTechResearched(Player(10),1382380393,1)
call SetPlayerTechResearched(Player(10),1382376290,1)
call SetPlayerTechResearched(Player(10),1382377588,1)
call SetPlayerTechResearched(Player(10),1382379618,1)
call SetPlayerTechResearched(Player(10),1382380147,1)
call SetPlayerTechResearched(Player(10),1382377587,1)
call SetPlayerTechResearched(Player(10),1382376802,1)
call SetPlayerTechResearched(Player(10),1382376803,1)
call SetPlayerTechResearched(Player(10),1382381427,1)
call SetPlayerTechResearched(Player(10),1382379629,1)
call SetPlayerTechResearched(Player(10),1382966638,1)
call SetPlayerTechResearched(Player(10),1382970231,2)
call SetPlayerTechResearched(Player(10),1382965620,3)
call SetPlayerTechResearched(Player(10),1382970217,1)
call SetPlayerTechResearched(Player(10),1382965613,3)
call SetPlayerTechResearched(Player(10),1382970210,1)
endfunction
function S_u takes nothing returns nothing
call SetPlayerTechResearched(Player(7),1382575461,3)
call SetPlayerTechResearched(Player(7),1382576737,3)
call SetPlayerTechResearched(Player(7),1382574178,1)
call SetPlayerTechResearched(Player(7),1382572402,3)
call SetPlayerTechResearched(Player(7),1382573922,1)
call SetPlayerTechResearched(Player(7),1382572387,3)
call SetPlayerTechResearched(Player(7),1382573157,1)
call SetPlayerTechResearched(Player(7),1382572398,1)
call SetPlayerTechResearched(Player(7),1382576244,2)
call SetPlayerTechResearched(Player(7),1382577012,2)
call SetPlayerTechResearched(Player(7),1382575201,3)
call SetPlayerTechResearched(Player(7),1382576745,1)
call SetPlayerTechResearched(Player(7),1382575208,2)
call SetPlayerTechResearched(Player(7),1382576997,1)
call SetPlayerTechResearched(Player(7),1382573676,1)
call SetPlayerTechResearched(Player(7),1382577011,1)
call SetPlayerTechResearched(Player(7),1382576756,1)
call SetPlayerTechResearched(Player(7),1382576237,1)
call SetPlayerTechResearched(Player(7),1382573667,1)
call SetPlayerTechResearched(Player(7),1382573683,1)
call SetPlayerTechResearched(Player(7),1382572900,1)
call SetPlayerTechResearched(Player(7),1383034213,3)
call SetPlayerTechResearched(Player(7),1383035489,3)
call SetPlayerTechResearched(Player(7),1383031154,3)
call SetPlayerTechResearched(Player(7),1383556205,1)
call SetPlayerTechResearched(Player(7),1383034983,1)
call SetPlayerTechResearched(Player(7),1383031411,1)
call SetPlayerTechResearched(Player(7),1383036787,1)
call SetPlayerTechResearched(Player(7),1383032174,1)
call SetPlayerTechResearched(Player(7),1383036531,1)
call SetPlayerTechResearched(Player(7),1383036772,2)
call SetPlayerTechResearched(Player(7),1383035764,2)
call SetPlayerTechResearched(Player(7),1383035760,3)
call SetPlayerTechResearched(Player(7),1383036018,1)
call SetPlayerTechResearched(Player(7),1383033958,1)
call SetPlayerTechResearched(Player(7),1383036788,2)
call SetPlayerTechResearched(Player(7),1383035490,1)
call SetPlayerTechResearched(Player(7),1383031403,1)
call SetPlayerTechResearched(Player(7),1383034989,1)
call SetPlayerTechResearched(Player(7),1383031398,1)
call SetPlayerTechResearched(Player(7),1383427429,3)
call SetPlayerTechResearched(Player(7),1383428705,3)
call SetPlayerTechResearched(Player(7),1383424370,3)
call SetPlayerTechResearched(Player(7),1383424355,1)
call SetPlayerTechResearched(Player(7),1383429986,1)
call SetPlayerTechResearched(Player(7),1383425894,1)
call SetPlayerTechResearched(Player(7),1383428966,1)
call SetPlayerTechResearched(Player(7),1383427685,2)
call SetPlayerTechResearched(Player(7),1383424609,2)
call SetPlayerTechResearched(Player(7),1383425634,1)
call SetPlayerTechResearched(Player(7),1383428972,1)
call SetPlayerTechResearched(Player(7),1383424882,3)
call SetPlayerTechResearched(Player(7),1383428195,1)
call SetPlayerTechResearched(Player(7),1383428973,1)
call SetPlayerTechResearched(Player(7),1383424629,1)
call SetPlayerTechResearched(Player(7),1383428976,1)
call SetPlayerTechResearched(Player(7),1383425400,1)
call SetPlayerTechResearched(Player(7),1383428205,1)
call SetPlayerTechResearched(Player(7),1382380397,3)
call SetPlayerTechResearched(Player(7),1382380407,3)
call SetPlayerTechResearched(Player(7),1382378849,3)
call SetPlayerTechResearched(Player(7),1382380136,3)
call SetPlayerTechResearched(Player(7),1382380918,1)
call SetPlayerTechResearched(Player(7),1382379106,1)
call SetPlayerTechResearched(Player(7),1382380387,1)
call SetPlayerTechResearched(Player(7),1382378855,1)
call SetPlayerTechResearched(Player(7),1382377826,1)
call SetPlayerTechResearched(Player(7),1382378859,1)
call SetPlayerTechResearched(Player(7),1382376564,2)
call SetPlayerTechResearched(Player(7),1382376547,2)
call SetPlayerTechResearched(Player(7),1382380393,1)
call SetPlayerTechResearched(Player(7),1382376290,1)
call SetPlayerTechResearched(Player(7),1382377588,1)
call SetPlayerTechResearched(Player(7),1382379618,1)
call SetPlayerTechResearched(Player(7),1382380147,1)
call SetPlayerTechResearched(Player(7),1382377587,1)
call SetPlayerTechResearched(Player(7),1382376802,1)
call SetPlayerTechResearched(Player(7),1382376803,1)
call SetPlayerTechResearched(Player(7),1382381427,1)
call SetPlayerTechResearched(Player(7),1382379629,1)
call SetPlayerTechResearched(Player(7),1382966638,1)
call SetPlayerTechResearched(Player(7),1382970231,2)
call SetPlayerTechResearched(Player(7),1382965620,3)
call SetPlayerTechResearched(Player(7),1382970217,1)
call SetPlayerTechResearched(Player(7),1382965613,3)
call SetPlayerTechResearched(Player(7),1382970210,1)
endfunction
function c_u takes nothing returns nothing
call SetPlayerTechResearched(Player(8),1382575461,3)
call SetPlayerTechResearched(Player(8),1382576737,3)
call SetPlayerTechResearched(Player(8),1382574178,1)
call SetPlayerTechResearched(Player(8),1382572402,3)
call SetPlayerTechResearched(Player(8),1382573922,1)
call SetPlayerTechResearched(Player(8),1382572387,3)
call SetPlayerTechResearched(Player(8),1382573157,1)
call SetPlayerTechResearched(Player(8),1382572398,1)
call SetPlayerTechResearched(Player(8),1382576244,2)
call SetPlayerTechResearched(Player(8),1382577012,2)
call SetPlayerTechResearched(Player(8),1382575201,3)
call SetPlayerTechResearched(Player(8),1382576745,1)
call SetPlayerTechResearched(Player(8),1382575208,2)
call SetPlayerTechResearched(Player(8),1382576997,1)
call SetPlayerTechResearched(Player(8),1382573676,1)
call SetPlayerTechResearched(Player(8),1382577011,1)
call SetPlayerTechResearched(Player(8),1382576756,1)
call SetPlayerTechResearched(Player(8),1382576237,1)
call SetPlayerTechResearched(Player(8),1382573667,1)
call SetPlayerTechResearched(Player(8),1382573683,1)
call SetPlayerTechResearched(Player(8),1382572900,1)
call SetPlayerTechResearched(Player(8),1383034213,3)
call SetPlayerTechResearched(Player(8),1383035489,3)
call SetPlayerTechResearched(Player(8),1383031154,3)
call SetPlayerTechResearched(Player(8),1383556205,1)
call SetPlayerTechResearched(Player(8),1383034983,1)
call SetPlayerTechResearched(Player(8),1383031411,1)
call SetPlayerTechResearched(Player(8),1383036787,1)
call SetPlayerTechResearched(Player(8),1383032174,1)
call SetPlayerTechResearched(Player(8),1383036531,1)
call SetPlayerTechResearched(Player(8),1383036772,2)
call SetPlayerTechResearched(Player(8),1383035764,2)
call SetPlayerTechResearched(Player(8),1383035760,3)
call SetPlayerTechResearched(Player(8),1383036018,1)
call SetPlayerTechResearched(Player(8),1383033958,1)
call SetPlayerTechResearched(Player(8),1383036788,2)
call SetPlayerTechResearched(Player(8),1383035490,1)
call SetPlayerTechResearched(Player(8),1383031403,1)
call SetPlayerTechResearched(Player(8),1383034989,1)
call SetPlayerTechResearched(Player(8),1383031398,1)
call SetPlayerTechResearched(Player(8),1383427429,3)
call SetPlayerTechResearched(Player(8),1383428705,3)
call SetPlayerTechResearched(Player(8),1383424370,3)
call SetPlayerTechResearched(Player(8),1383424355,1)
call SetPlayerTechResearched(Player(8),1383429986,1)
call SetPlayerTechResearched(Player(8),1383425894,1)
call SetPlayerTechResearched(Player(8),1383428966,1)
call SetPlayerTechResearched(Player(8),1383427685,2)
call SetPlayerTechResearched(Player(8),1383424609,2)
call SetPlayerTechResearched(Player(8),1383425634,1)
call SetPlayerTechResearched(Player(8),1383428972,1)
call SetPlayerTechResearched(Player(8),1383424882,3)
call SetPlayerTechResearched(Player(8),1383428195,1)
call SetPlayerTechResearched(Player(8),1383428973,1)
call SetPlayerTechResearched(Player(8),1383424629,1)
call SetPlayerTechResearched(Player(8),1383428976,1)
call SetPlayerTechResearched(Player(8),1383425400,1)
call SetPlayerTechResearched(Player(8),1383428205,1)
call SetPlayerTechResearched(Player(8),1382380397,3)
call SetPlayerTechResearched(Player(8),1382380407,3)
call SetPlayerTechResearched(Player(8),1382378849,3)
call SetPlayerTechResearched(Player(8),1382380136,3)
call SetPlayerTechResearched(Player(8),1382380918,1)
call SetPlayerTechResearched(Player(8),1382379106,1)
call SetPlayerTechResearched(Player(8),1382380387,1)
call SetPlayerTechResearched(Player(8),1382378855,1)
call SetPlayerTechResearched(Player(8),1382377826,1)
call SetPlayerTechResearched(Player(8),1382378859,1)
call SetPlayerTechResearched(Player(8),1382376564,2)
call SetPlayerTechResearched(Player(8),1382376547,2)
call SetPlayerTechResearched(Player(8),1382380393,1)
call SetPlayerTechResearched(Player(8),1382376290,1)
call SetPlayerTechResearched(Player(8),1382377588,1)
call SetPlayerTechResearched(Player(8),1382379618,1)
call SetPlayerTechResearched(Player(8),1382380147,1)
call SetPlayerTechResearched(Player(8),1382377587,1)
call SetPlayerTechResearched(Player(8),1382376802,1)
call SetPlayerTechResearched(Player(8),1382376803,1)
call SetPlayerTechResearched(Player(8),1382381427,1)
call SetPlayerTechResearched(Player(8),1382379629,1)
call SetPlayerTechResearched(Player(8),1382966638,1)
call SetPlayerTechResearched(Player(8),1382970231,2)
call SetPlayerTechResearched(Player(8),1382965620,3)
call SetPlayerTechResearched(Player(8),1382970217,1)
call SetPlayerTechResearched(Player(8),1382965613,3)
call SetPlayerTechResearched(Player(8),1382970210,1)
endfunction
function i_u takes nothing returns nothing
call SetPlayerTechResearched(Player(6),1382575461,3)
call SetPlayerTechResearched(Player(6),1382576737,3)
call SetPlayerTechResearched(Player(6),1382574178,1)
call SetPlayerTechResearched(Player(6),1382572402,3)
call SetPlayerTechResearched(Player(6),1382573922,1)
call SetPlayerTechResearched(Player(6),1382572387,3)
call SetPlayerTechResearched(Player(6),1382573157,1)
call SetPlayerTechResearched(Player(6),1382572398,1)
call SetPlayerTechResearched(Player(6),1382576244,2)
call SetPlayerTechResearched(Player(6),1382577012,2)
call SetPlayerTechResearched(Player(6),1382575201,3)
call SetPlayerTechResearched(Player(6),1382576745,1)
call SetPlayerTechResearched(Player(6),1382575208,2)
call SetPlayerTechResearched(Player(6),1382576997,1)
call SetPlayerTechResearched(Player(6),1382573676,1)
call SetPlayerTechResearched(Player(6),1382577011,1)
call SetPlayerTechResearched(Player(6),1382576756,1)
call SetPlayerTechResearched(Player(6),1382576237,1)
call SetPlayerTechResearched(Player(6),1382573667,1)
call SetPlayerTechResearched(Player(6),1382573683,1)
call SetPlayerTechResearched(Player(6),1382572900,1)
call SetPlayerTechResearched(Player(6),1383034213,3)
call SetPlayerTechResearched(Player(6),1383035489,3)
call SetPlayerTechResearched(Player(6),1383031154,3)
call SetPlayerTechResearched(Player(6),1383556205,1)
call SetPlayerTechResearched(Player(6),1383034983,1)
call SetPlayerTechResearched(Player(6),1383031411,1)
call SetPlayerTechResearched(Player(6),1383036787,1)
call SetPlayerTechResearched(Player(6),1383032174,1)
call SetPlayerTechResearched(Player(6),1383036531,1)
call SetPlayerTechResearched(Player(6),1383036772,2)
call SetPlayerTechResearched(Player(6),1383035764,2)
call SetPlayerTechResearched(Player(6),1383035760,3)
call SetPlayerTechResearched(Player(6),1383036018,1)
call SetPlayerTechResearched(Player(6),1383033958,1)
call SetPlayerTechResearched(Player(6),1383036788,2)
call SetPlayerTechResearched(Player(6),1383035490,1)
call SetPlayerTechResearched(Player(6),1383031403,1)
call SetPlayerTechResearched(Player(6),1383034989,1)
call SetPlayerTechResearched(Player(6),1383031398,1)
call SetPlayerTechResearched(Player(6),1383427429,3)
call SetPlayerTechResearched(Player(6),1383428705,3)
call SetPlayerTechResearched(Player(6),1383424370,3)
call SetPlayerTechResearched(Player(6),1383424355,1)
call SetPlayerTechResearched(Player(6),1383429986,1)
call SetPlayerTechResearched(Player(6),1383425894,1)
call SetPlayerTechResearched(Player(6),1383428966,1)
call SetPlayerTechResearched(Player(6),1383427685,2)
call SetPlayerTechResearched(Player(6),1383424609,2)
call SetPlayerTechResearched(Player(6),1383425634,1)
call SetPlayerTechResearched(Player(6),1383428972,1)
call SetPlayerTechResearched(Player(6),1383424882,3)
call SetPlayerTechResearched(Player(6),1383428195,1)
call SetPlayerTechResearched(Player(6),1383428973,1)
call SetPlayerTechResearched(Player(6),1383424629,1)
call SetPlayerTechResearched(Player(6),1383428976,1)
call SetPlayerTechResearched(Player(6),1383425400,1)
call SetPlayerTechResearched(Player(6),1383428205,1)
call SetPlayerTechResearched(Player(6),1382380397,3)
call SetPlayerTechResearched(Player(6),1382380407,3)
call SetPlayerTechResearched(Player(6),1382378849,3)
call SetPlayerTechResearched(Player(6),1382380136,3)
call SetPlayerTechResearched(Player(6),1382380918,1)
call SetPlayerTechResearched(Player(6),1382379106,1)
call SetPlayerTechResearched(Player(6),1382380387,1)
call SetPlayerTechResearched(Player(6),1382378855,1)
call SetPlayerTechResearched(Player(6),1382377826,1)
call SetPlayerTechResearched(Player(6),1382378859,1)
call SetPlayerTechResearched(Player(6),1382376564,2)
call SetPlayerTechResearched(Player(6),1382376547,2)
call SetPlayerTechResearched(Player(6),1382380393,1)
call SetPlayerTechResearched(Player(6),1382376290,1)
call SetPlayerTechResearched(Player(6),1382377588,1)
call SetPlayerTechResearched(Player(6),1382379618,1)
call SetPlayerTechResearched(Player(6),1382380147,1)
call SetPlayerTechResearched(Player(6),1382377587,1)
call SetPlayerTechResearched(Player(6),1382376802,1)
call SetPlayerTechResearched(Player(6),1382376803,1)
call SetPlayerTechResearched(Player(6),1382381427,1)
call SetPlayerTechResearched(Player(6),1382379629,1)
call SetPlayerTechResearched(Player(6),1382966638,1)
call SetPlayerTechResearched(Player(6),1382970231,2)
call SetPlayerTechResearched(Player(6),1382965620,3)
call SetPlayerTechResearched(Player(6),1382970217,1)
call SetPlayerTechResearched(Player(6),1382965613,3)
call SetPlayerTechResearched(Player(6),1382970210,1)
endfunction
function l_u takes nothing returns nothing
call SetPlayerTechResearched(Player(11),1382575461,3)
call SetPlayerTechResearched(Player(11),1382576737,3)
call SetPlayerTechResearched(Player(11),1382574178,1)
call SetPlayerTechResearched(Player(11),1382572402,3)
call SetPlayerTechResearched(Player(11),1382573922,1)
call SetPlayerTechResearched(Player(11),1382572387,3)
call SetPlayerTechResearched(Player(11),1382573157,1)
call SetPlayerTechResearched(Player(11),1382572398,1)
call SetPlayerTechResearched(Player(11),1382576244,2)
call SetPlayerTechResearched(Player(11),1382577012,2)
call SetPlayerTechResearched(Player(11),1382575201,3)
call SetPlayerTechResearched(Player(11),1382576745,1)
call SetPlayerTechResearched(Player(11),1382575208,2)
call SetPlayerTechResearched(Player(11),1382576997,1)
call SetPlayerTechResearched(Player(11),1382573676,1)
call SetPlayerTechResearched(Player(11),1382577011,1)
call SetPlayerTechResearched(Player(11),1382576756,1)
call SetPlayerTechResearched(Player(11),1382576237,1)
call SetPlayerTechResearched(Player(11),1382573667,1)
call SetPlayerTechResearched(Player(11),1382573683,1)
call SetPlayerTechResearched(Player(11),1382572900,1)
call SetPlayerTechResearched(Player(11),1383034213,3)
call SetPlayerTechResearched(Player(11),1383035489,3)
call SetPlayerTechResearched(Player(11),1383031154,3)
call SetPlayerTechResearched(Player(11),1383556205,1)
call SetPlayerTechResearched(Player(11),1383034983,1)
call SetPlayerTechResearched(Player(11),1383031411,1)
call SetPlayerTechResearched(Player(11),1383036787,1)
call SetPlayerTechResearched(Player(11),1383032174,1)
call SetPlayerTechResearched(Player(11),1383036531,1)
call SetPlayerTechResearched(Player(11),1383036772,2)
call SetPlayerTechResearched(Player(11),1383035764,2)
call SetPlayerTechResearched(Player(11),1383035760,3)
call SetPlayerTechResearched(Player(11),1383036018,1)
call SetPlayerTechResearched(Player(11),1383033958,1)
call SetPlayerTechResearched(Player(11),1383036788,2)
call SetPlayerTechResearched(Player(11),1383035490,1)
call SetPlayerTechResearched(Player(11),1383031403,1)
call SetPlayerTechResearched(Player(11),1383034989,1)
call SetPlayerTechResearched(Player(11),1383031398,1)
call SetPlayerTechResearched(Player(11),1383427429,3)
call SetPlayerTechResearched(Player(11),1383428705,3)
call SetPlayerTechResearched(Player(11),1383424370,3)
call SetPlayerTechResearched(Player(11),1383424355,1)
call SetPlayerTechResearched(Player(11),1383429986,1)
call SetPlayerTechResearched(Player(11),1383425894,1)
call SetPlayerTechResearched(Player(11),1383428966,1)
call SetPlayerTechResearched(Player(11),1383427685,2)
call SetPlayerTechResearched(Player(11),1383424609,2)
call SetPlayerTechResearched(Player(11),1383425634,1)
call SetPlayerTechResearched(Player(11),1383428972,1)
call SetPlayerTechResearched(Player(11),1383424882,3)
call SetPlayerTechResearched(Player(11),1383428195,1)
call SetPlayerTechResearched(Player(11),1383428973,1)
call SetPlayerTechResearched(Player(11),1383424629,1)
call SetPlayerTechResearched(Player(11),1383428976,1)
call SetPlayerTechResearched(Player(11),1383425400,1)
call SetPlayerTechResearched(Player(11),1383428205,1)
call SetPlayerTechResearched(Player(11),1382380397,3)
call SetPlayerTechResearched(Player(11),1382380407,3)
call SetPlayerTechResearched(Player(11),1382378849,3)
call SetPlayerTechResearched(Player(11),1382380136,3)
call SetPlayerTechResearched(Player(11),1382380918,1)
call SetPlayerTechResearched(Player(11),1382379106,1)
call SetPlayerTechResearched(Player(11),1382380387,1)
call SetPlayerTechResearched(Player(11),1382378855,1)
call SetPlayerTechResearched(Player(11),1382377826,1)
call SetPlayerTechResearched(Player(11),1382378859,1)
call SetPlayerTechResearched(Player(11),1382376564,2)
call SetPlayerTechResearched(Player(11),1382376547,2)
call SetPlayerTechResearched(Player(11),1382380393,1)
call SetPlayerTechResearched(Player(11),1382376290,1)
call SetPlayerTechResearched(Player(11),1382377588,1)
call SetPlayerTechResearched(Player(11),1382379618,1)
call SetPlayerTechResearched(Player(11),1382380147,1)
call SetPlayerTechResearched(Player(11),1382377587,1)
call SetPlayerTechResearched(Player(11),1382376802,1)
call SetPlayerTechResearched(Player(11),1382376803,1)
call SetPlayerTechResearched(Player(11),1382381427,1)
call SetPlayerTechResearched(Player(11),1382379629,1)
call SetPlayerTechResearched(Player(11),1382966638,1)
call SetPlayerTechResearched(Player(11),1382970231,2)
call SetPlayerTechResearched(Player(11),1382965620,3)
call SetPlayerTechResearched(Player(11),1382970217,1)
call SetPlayerTechResearched(Player(11),1382965613,3)
call SetPlayerTechResearched(Player(11),1382970210,1)
endfunction
function o_u takes nothing returns nothing
call SetPlayerTechResearched(Player(9),1382575461,3)
call SetPlayerTechResearched(Player(9),1382576737,3)
call SetPlayerTechResearched(Player(9),1382574178,1)
call SetPlayerTechResearched(Player(9),1382572402,3)
call SetPlayerTechResearched(Player(9),1382573922,1)
call SetPlayerTechResearched(Player(9),1382572387,3)
call SetPlayerTechResearched(Player(9),1382573157,1)
call SetPlayerTechResearched(Player(9),1382572398,1)
call SetPlayerTechResearched(Player(9),1382576244,2)
call SetPlayerTechResearched(Player(9),1382577012,2)
call SetPlayerTechResearched(Player(9),1382575201,3)
call SetPlayerTechResearched(Player(9),1382576745,1)
call SetPlayerTechResearched(Player(9),1382575208,2)
call SetPlayerTechResearched(Player(9),1382576997,1)
call SetPlayerTechResearched(Player(9),1382573676,1)
call SetPlayerTechResearched(Player(9),1382577011,1)
call SetPlayerTechResearched(Player(9),1382576756,1)
call SetPlayerTechResearched(Player(9),1382576237,1)
call SetPlayerTechResearched(Player(9),1382573667,1)
call SetPlayerTechResearched(Player(9),1382573683,1)
call SetPlayerTechResearched(Player(9),1382572900,1)
call SetPlayerTechResearched(Player(9),1383034213,3)
call SetPlayerTechResearched(Player(9),1383035489,3)
call SetPlayerTechResearched(Player(9),1383031154,3)
call SetPlayerTechResearched(Player(9),1383556205,1)
call SetPlayerTechResearched(Player(9),1383034983,1)
call SetPlayerTechResearched(Player(9),1383031411,1)
call SetPlayerTechResearched(Player(9),1383036787,1)
call SetPlayerTechResearched(Player(9),1383032174,1)
call SetPlayerTechResearched(Player(9),1383036531,1)
call SetPlayerTechResearched(Player(9),1383036772,2)
call SetPlayerTechResearched(Player(9),1383035764,2)
call SetPlayerTechResearched(Player(9),1383035760,3)
call SetPlayerTechResearched(Player(9),1383036018,1)
call SetPlayerTechResearched(Player(9),1383033958,1)
call SetPlayerTechResearched(Player(9),1383036788,2)
call SetPlayerTechResearched(Player(9),1383035490,1)
call SetPlayerTechResearched(Player(9),1383031403,1)
call SetPlayerTechResearched(Player(9),1383034989,1)
call SetPlayerTechResearched(Player(9),1383031398,1)
call SetPlayerTechResearched(Player(9),1383427429,3)
call SetPlayerTechResearched(Player(9),1383428705,3)
call SetPlayerTechResearched(Player(9),1383424370,3)
call SetPlayerTechResearched(Player(9),1383424355,1)
call SetPlayerTechResearched(Player(9),1383429986,1)
call SetPlayerTechResearched(Player(9),1383425894,1)
call SetPlayerTechResearched(Player(9),1383428966,1)
call SetPlayerTechResearched(Player(9),1383427685,2)
call SetPlayerTechResearched(Player(9),1383424609,2)
call SetPlayerTechResearched(Player(9),1383425634,1)
call SetPlayerTechResearched(Player(9),1383428972,1)
call SetPlayerTechResearched(Player(9),1383424882,3)
call SetPlayerTechResearched(Player(9),1383428195,1)
call SetPlayerTechResearched(Player(9),1383428973,1)
call SetPlayerTechResearched(Player(9),1383424629,1)
call SetPlayerTechResearched(Player(9),1383428976,1)
call SetPlayerTechResearched(Player(9),1383425400,1)
call SetPlayerTechResearched(Player(9),1383428205,1)
call SetPlayerTechResearched(Player(9),1382380397,3)
call SetPlayerTechResearched(Player(9),1382380407,3)
call SetPlayerTechResearched(Player(9),1382378849,3)
call SetPlayerTechResearched(Player(9),1382380136,3)
call SetPlayerTechResearched(Player(9),1382380918,1)
call SetPlayerTechResearched(Player(9),1382379106,1)
call SetPlayerTechResearched(Player(9),1382380387,1)
call SetPlayerTechResearched(Player(9),1382378855,1)
call SetPlayerTechResearched(Player(9),1382377826,1)
call SetPlayerTechResearched(Player(9),1382378859,1)
call SetPlayerTechResearched(Player(9),1382376564,2)
call SetPlayerTechResearched(Player(9),1382376547,2)
call SetPlayerTechResearched(Player(9),1382380393,1)
call SetPlayerTechResearched(Player(9),1382376290,1)
call SetPlayerTechResearched(Player(9),1382377588,1)
call SetPlayerTechResearched(Player(9),1382379618,1)
call SetPlayerTechResearched(Player(9),1382380147,1)
call SetPlayerTechResearched(Player(9),1382377587,1)
call SetPlayerTechResearched(Player(9),1382376802,1)
call SetPlayerTechResearched(Player(9),1382376803,1)
call SetPlayerTechResearched(Player(9),1382381427,1)
call SetPlayerTechResearched(Player(9),1382379629,1)
call SetPlayerTechResearched(Player(9),1382966638,1)
call SetPlayerTechResearched(Player(9),1382970231,2)
call SetPlayerTechResearched(Player(9),1382965620,3)
call SetPlayerTechResearched(Player(9),1382970217,1)
call SetPlayerTechResearched(Player(9),1382965613,3)
call SetPlayerTechResearched(Player(9),1382970210,1)
endfunction
function r_u takes nothing returns nothing
call SetPlayerTechResearched(Player(3),1382575461,3)
call SetPlayerTechResearched(Player(3),1382576737,3)
call SetPlayerTechResearched(Player(3),1382574178,1)
call SetPlayerTechResearched(Player(3),1382572402,3)
call SetPlayerTechResearched(Player(3),1382573922,1)
call SetPlayerTechResearched(Player(3),1382572387,3)
call SetPlayerTechResearched(Player(3),1382573157,1)
call SetPlayerTechResearched(Player(3),1382572398,1)
call SetPlayerTechResearched(Player(3),1382576244,2)
call SetPlayerTechResearched(Player(3),1382577012,2)
call SetPlayerTechResearched(Player(3),1382575201,3)
call SetPlayerTechResearched(Player(3),1382576745,1)
call SetPlayerTechResearched(Player(3),1382575208,2)
call SetPlayerTechResearched(Player(3),1382576997,1)
call SetPlayerTechResearched(Player(3),1382573676,1)
call SetPlayerTechResearched(Player(3),1382577011,1)
call SetPlayerTechResearched(Player(3),1382576756,1)
call SetPlayerTechResearched(Player(3),1382576237,1)
call SetPlayerTechResearched(Player(3),1382573667,1)
call SetPlayerTechResearched(Player(3),1382573683,1)
call SetPlayerTechResearched(Player(3),1382572900,1)
call SetPlayerTechResearched(Player(3),1383034213,3)
call SetPlayerTechResearched(Player(3),1383035489,3)
call SetPlayerTechResearched(Player(3),1383031154,3)
call SetPlayerTechResearched(Player(3),1383556205,1)
call SetPlayerTechResearched(Player(3),1383034983,1)
call SetPlayerTechResearched(Player(3),1383031411,1)
call SetPlayerTechResearched(Player(3),1383036787,1)
call SetPlayerTechResearched(Player(3),1383032174,1)
call SetPlayerTechResearched(Player(3),1383036531,1)
call SetPlayerTechResearched(Player(3),1383036772,2)
call SetPlayerTechResearched(Player(3),1383035764,2)
call SetPlayerTechResearched(Player(3),1383035760,3)
call SetPlayerTechResearched(Player(3),1383036018,1)
call SetPlayerTechResearched(Player(3),1383033958,1)
call SetPlayerTechResearched(Player(3),1383036788,2)
call SetPlayerTechResearched(Player(3),1383035490,1)
call SetPlayerTechResearched(Player(3),1383031403,1)
call SetPlayerTechResearched(Player(3),1383034989,1)
call SetPlayerTechResearched(Player(3),1383031398,1)
call SetPlayerTechResearched(Player(3),1383427429,3)
call SetPlayerTechResearched(Player(3),1383428705,3)
call SetPlayerTechResearched(Player(3),1383424370,3)
call SetPlayerTechResearched(Player(3),1383424355,1)
call SetPlayerTechResearched(Player(3),1383429986,1)
call SetPlayerTechResearched(Player(3),1383425894,1)
call SetPlayerTechResearched(Player(3),1383428966,1)
call SetPlayerTechResearched(Player(3),1383427685,2)
call SetPlayerTechResearched(Player(3),1383424609,2)
call SetPlayerTechResearched(Player(3),1383425634,1)
call SetPlayerTechResearched(Player(3),1383428972,1)
call SetPlayerTechResearched(Player(3),1383424882,3)
call SetPlayerTechResearched(Player(3),1383428195,1)
call SetPlayerTechResearched(Player(3),1383428973,1)
call SetPlayerTechResearched(Player(3),1383424629,1)
call SetPlayerTechResearched(Player(3),1383428976,1)
call SetPlayerTechResearched(Player(3),1383425400,1)
call SetPlayerTechResearched(Player(3),1383428205,1)
call SetPlayerTechResearched(Player(3),1382380397,3)
call SetPlayerTechResearched(Player(3),1382380407,3)
call SetPlayerTechResearched(Player(3),1382378849,3)
call SetPlayerTechResearched(Player(3),1382380136,3)
call SetPlayerTechResearched(Player(3),1382380918,1)
call SetPlayerTechResearched(Player(3),1382379106,1)
call SetPlayerTechResearched(Player(3),1382380387,1)
call SetPlayerTechResearched(Player(3),1382378855,1)
call SetPlayerTechResearched(Player(3),1382377826,1)
call SetPlayerTechResearched(Player(3),1382378859,1)
call SetPlayerTechResearched(Player(3),1382376564,2)
call SetPlayerTechResearched(Player(3),1382376547,2)
call SetPlayerTechResearched(Player(3),1382380393,1)
call SetPlayerTechResearched(Player(3),1382376290,1)
call SetPlayerTechResearched(Player(3),1382377588,1)
call SetPlayerTechResearched(Player(3),1382379618,1)
call SetPlayerTechResearched(Player(3),1382380147,1)
call SetPlayerTechResearched(Player(3),1382377587,1)
call SetPlayerTechResearched(Player(3),1382376802,1)
call SetPlayerTechResearched(Player(3),1382376803,1)
call SetPlayerTechResearched(Player(3),1382381427,1)
call SetPlayerTechResearched(Player(3),1382379629,1)
call SetPlayerTechResearched(Player(3),1382966638,1)
call SetPlayerTechResearched(Player(3),1382970231,2)
call SetPlayerTechResearched(Player(3),1382965620,3)
call SetPlayerTechResearched(Player(3),1382970217,1)
call SetPlayerTechResearched(Player(3),1382965613,3)
call SetPlayerTechResearched(Player(3),1382970210,1)
endfunction
function s_u takes nothing returns nothing
call SetPlayerTechResearched(Player(4),1382575461,3)
call SetPlayerTechResearched(Player(4),1382576737,3)
call SetPlayerTechResearched(Player(4),1382574178,1)
call SetPlayerTechResearched(Player(4),1382572402,3)
call SetPlayerTechResearched(Player(4),1382573922,1)
call SetPlayerTechResearched(Player(4),1382572387,3)
call SetPlayerTechResearched(Player(4),1382573157,1)
call SetPlayerTechResearched(Player(4),1382572398,1)
call SetPlayerTechResearched(Player(4),1382576244,2)
call SetPlayerTechResearched(Player(4),1382577012,2)
call SetPlayerTechResearched(Player(4),1382575201,3)
call SetPlayerTechResearched(Player(4),1382576745,1)
call SetPlayerTechResearched(Player(4),1382575208,2)
call SetPlayerTechResearched(Player(4),1382576997,1)
call SetPlayerTechResearched(Player(4),1382573676,1)
call SetPlayerTechResearched(Player(4),1382577011,1)
call SetPlayerTechResearched(Player(4),1382576756,1)
call SetPlayerTechResearched(Player(4),1382576237,1)
call SetPlayerTechResearched(Player(4),1382573667,1)
call SetPlayerTechResearched(Player(4),1382573683,1)
call SetPlayerTechResearched(Player(4),1382572900,1)
call SetPlayerTechResearched(Player(4),1383034213,3)
call SetPlayerTechResearched(Player(4),1383035489,3)
call SetPlayerTechResearched(Player(4),1383031154,3)
call SetPlayerTechResearched(Player(4),1383556205,1)
call SetPlayerTechResearched(Player(4),1383034983,1)
call SetPlayerTechResearched(Player(4),1383031411,1)
call SetPlayerTechResearched(Player(4),1383036787,1)
call SetPlayerTechResearched(Player(4),1383032174,1)
call SetPlayerTechResearched(Player(4),1383036531,1)
call SetPlayerTechResearched(Player(4),1383036772,2)
call SetPlayerTechResearched(Player(4),1383035764,2)
call SetPlayerTechResearched(Player(4),1383035760,3)
call SetPlayerTechResearched(Player(4),1383036018,1)
call SetPlayerTechResearched(Player(4),1383033958,1)
call SetPlayerTechResearched(Player(4),1383036788,2)
call SetPlayerTechResearched(Player(4),1383035490,1)
call SetPlayerTechResearched(Player(4),1383031403,1)
call SetPlayerTechResearched(Player(4),1383034989,1)
call SetPlayerTechResearched(Player(4),1383031398,1)
call SetPlayerTechResearched(Player(4),1383427429,3)
call SetPlayerTechResearched(Player(4),1383428705,3)
call SetPlayerTechResearched(Player(4),1383424370,3)
call SetPlayerTechResearched(Player(4),1383424355,1)
call SetPlayerTechResearched(Player(4),1383429986,1)
call SetPlayerTechResearched(Player(4),1383425894,1)
call SetPlayerTechResearched(Player(4),1383428966,1)
call SetPlayerTechResearched(Player(4),1383427685,2)
call SetPlayerTechResearched(Player(4),1383424609,2)
call SetPlayerTechResearched(Player(4),1383425634,1)
call SetPlayerTechResearched(Player(4),1383428972,1)
call SetPlayerTechResearched(Player(4),1383424882,3)
call SetPlayerTechResearched(Player(4),1383428195,1)
call SetPlayerTechResearched(Player(4),1383428973,1)
call SetPlayerTechResearched(Player(4),1383424629,1)
call SetPlayerTechResearched(Player(4),1383428976,1)
call SetPlayerTechResearched(Player(4),1383425400,1)
call SetPlayerTechResearched(Player(4),1383428205,1)
call SetPlayerTechResearched(Player(4),1382380397,3)
call SetPlayerTechResearched(Player(4),1382380407,3)
call SetPlayerTechResearched(Player(4),1382378849,3)
call SetPlayerTechResearched(Player(4),1382380136,3)
call SetPlayerTechResearched(Player(4),1382380918,1)
call SetPlayerTechResearched(Player(4),1382379106,1)
call SetPlayerTechResearched(Player(4),1382380387,1)
call SetPlayerTechResearched(Player(4),1382378855,1)
call SetPlayerTechResearched(Player(4),1382377826,1)
call SetPlayerTechResearched(Player(4),1382378859,1)
call SetPlayerTechResearched(Player(4),1382376564,2)
call SetPlayerTechResearched(Player(4),1382376547,2)
call SetPlayerTechResearched(Player(4),1382380393,1)
call SetPlayerTechResearched(Player(4),1382376290,1)
call SetPlayerTechResearched(Player(4),1382377588,1)
call SetPlayerTechResearched(Player(4),1382379618,1)
call SetPlayerTechResearched(Player(4),1382380147,1)
call SetPlayerTechResearched(Player(4),1382377587,1)
call SetPlayerTechResearched(Player(4),1382376802,1)
call SetPlayerTechResearched(Player(4),1382376803,1)
call SetPlayerTechResearched(Player(4),1382381427,1)
call SetPlayerTechResearched(Player(4),1382379629,1)
call SetPlayerTechResearched(Player(4),1382966638,1)
call SetPlayerTechResearched(Player(4),1382970231,2)
call SetPlayerTechResearched(Player(4),1382965620,3)
call SetPlayerTechResearched(Player(4),1382970217,1)
call SetPlayerTechResearched(Player(4),1382965613,3)
call SetPlayerTechResearched(Player(4),1382970210,1)
endfunction
function t_u takes nothing returns nothing
call SetPlayerTechResearched(Player(5),1382575461,3)
call SetPlayerTechResearched(Player(5),1382576737,3)
call SetPlayerTechResearched(Player(5),1382574178,1)
call SetPlayerTechResearched(Player(5),1382572402,3)
call SetPlayerTechResearched(Player(5),1382573922,1)
call SetPlayerTechResearched(Player(5),1382572387,3)
call SetPlayerTechResearched(Player(5),1382573157,1)
call SetPlayerTechResearched(Player(5),1382572398,1)
call SetPlayerTechResearched(Player(5),1382576244,2)
call SetPlayerTechResearched(Player(5),1382577012,2)
call SetPlayerTechResearched(Player(5),1382575201,3)
call SetPlayerTechResearched(Player(5),1382576745,1)
call SetPlayerTechResearched(Player(5),1382575208,2)
call SetPlayerTechResearched(Player(5),1382576997,1)
call SetPlayerTechResearched(Player(5),1382573676,1)
call SetPlayerTechResearched(Player(5),1382577011,1)
call SetPlayerTechResearched(Player(5),1382576756,1)
call SetPlayerTechResearched(Player(5),1382576237,1)
call SetPlayerTechResearched(Player(5),1382573667,1)
call SetPlayerTechResearched(Player(5),1382573683,1)
call SetPlayerTechResearched(Player(5),1382572900,1)
call SetPlayerTechResearched(Player(5),1383034213,3)
call SetPlayerTechResearched(Player(5),1383035489,3)
call SetPlayerTechResearched(Player(5),1383031154,3)
call SetPlayerTechResearched(Player(5),1383556205,1)
call SetPlayerTechResearched(Player(5),1383034983,1)
call SetPlayerTechResearched(Player(5),1383031411,1)
call SetPlayerTechResearched(Player(5),1383036787,1)
call SetPlayerTechResearched(Player(5),1383032174,1)
call SetPlayerTechResearched(Player(5),1383036531,1)
call SetPlayerTechResearched(Player(5),1383036772,2)
call SetPlayerTechResearched(Player(5),1383035764,2)
call SetPlayerTechResearched(Player(5),1383035760,3)
call SetPlayerTechResearched(Player(5),1383036018,1)
call SetPlayerTechResearched(Player(5),1383033958,1)
call SetPlayerTechResearched(Player(5),1383036788,2)
call SetPlayerTechResearched(Player(5),1383035490,1)
call SetPlayerTechResearched(Player(5),1383031403,1)
call SetPlayerTechResearched(Player(5),1383034989,1)
call SetPlayerTechResearched(Player(5),1383031398,1)
call SetPlayerTechResearched(Player(5),1383427429,3)
call SetPlayerTechResearched(Player(5),1383428705,3)
call SetPlayerTechResearched(Player(5),1383424370,3)
call SetPlayerTechResearched(Player(5),1383424355,1)
call SetPlayerTechResearched(Player(5),1383429986,1)
call SetPlayerTechResearched(Player(5),1383425894,1)
call SetPlayerTechResearched(Player(5),1383428966,1)
call SetPlayerTechResearched(Player(5),1383427685,2)
call SetPlayerTechResearched(Player(5),1383424609,2)
call SetPlayerTechResearched(Player(5),1383425634,1)
call SetPlayerTechResearched(Player(5),1383428972,1)
call SetPlayerTechResearched(Player(5),1383424882,3)
call SetPlayerTechResearched(Player(5),1383428195,1)
call SetPlayerTechResearched(Player(5),1383428973,1)
call SetPlayerTechResearched(Player(5),1383424629,1)
call SetPlayerTechResearched(Player(5),1383428976,1)
call SetPlayerTechResearched(Player(5),1383425400,1)
call SetPlayerTechResearched(Player(5),1383428205,1)
call SetPlayerTechResearched(Player(5),1382380397,3)
call SetPlayerTechResearched(Player(5),1382380407,3)
call SetPlayerTechResearched(Player(5),1382378849,3)
call SetPlayerTechResearched(Player(5),1382380136,3)
call SetPlayerTechResearched(Player(5),1382380918,1)
call SetPlayerTechResearched(Player(5),1382379106,1)
call SetPlayerTechResearched(Player(5),1382380387,1)
call SetPlayerTechResearched(Player(5),1382378855,1)
call SetPlayerTechResearched(Player(5),1382377826,1)
call SetPlayerTechResearched(Player(5),1382378859,1)
call SetPlayerTechResearched(Player(5),1382376564,2)
call SetPlayerTechResearched(Player(5),1382376547,2)
call SetPlayerTechResearched(Player(5),1382380393,1)
call SetPlayerTechResearched(Player(5),1382376290,1)
call SetPlayerTechResearched(Player(5),1382377588,1)
call SetPlayerTechResearched(Player(5),1382379618,1)
call SetPlayerTechResearched(Player(5),1382380147,1)
call SetPlayerTechResearched(Player(5),1382377587,1)
call SetPlayerTechResearched(Player(5),1382376802,1)
call SetPlayerTechResearched(Player(5),1382376803,1)
call SetPlayerTechResearched(Player(5),1382381427,1)
call SetPlayerTechResearched(Player(5),1382379629,1)
call SetPlayerTechResearched(Player(5),1382966638,1)
call SetPlayerTechResearched(Player(5),1382970231,2)
call SetPlayerTechResearched(Player(5),1382965620,3)
call SetPlayerTechResearched(Player(5),1382970217,1)
call SetPlayerTechResearched(Player(5),1382965613,3)
call SetPlayerTechResearched(Player(5),1382970210,1)
endfunction
function u_u takes nothing returns nothing
call SetPlayerTechResearched(Player(2),1382575461,3)
call SetPlayerTechResearched(Player(2),1382576737,3)
call SetPlayerTechResearched(Player(2),1382574178,1)
call SetPlayerTechResearched(Player(2),1382572402,3)
call SetPlayerTechResearched(Player(2),1382573922,1)
call SetPlayerTechResearched(Player(2),1382572387,3)
call SetPlayerTechResearched(Player(2),1382573157,1)
call SetPlayerTechResearched(Player(2),1382572398,1)
call SetPlayerTechResearched(Player(2),1382576244,2)
call SetPlayerTechResearched(Player(2),1382577012,2)
call SetPlayerTechResearched(Player(2),1382575201,3)
call SetPlayerTechResearched(Player(2),1382576745,1)
call SetPlayerTechResearched(Player(2),1382575208,2)
call SetPlayerTechResearched(Player(2),1382576997,1)
call SetPlayerTechResearched(Player(2),1382573676,1)
call SetPlayerTechResearched(Player(2),1382577011,1)
call SetPlayerTechResearched(Player(2),1382576756,1)
call SetPlayerTechResearched(Player(2),1382576237,1)
call SetPlayerTechResearched(Player(2),1382573667,1)
call SetPlayerTechResearched(Player(2),1382573683,1)
call SetPlayerTechResearched(Player(2),1382572900,1)
call SetPlayerTechResearched(Player(2),1383034213,3)
call SetPlayerTechResearched(Player(2),1383035489,3)
call SetPlayerTechResearched(Player(2),1383031154,3)
call SetPlayerTechResearched(Player(2),1383556205,1)
call SetPlayerTechResearched(Player(2),1383034983,1)
call SetPlayerTechResearched(Player(2),1383031411,1)
call SetPlayerTechResearched(Player(2),1383036787,1)
call SetPlayerTechResearched(Player(2),1383032174,1)
call SetPlayerTechResearched(Player(2),1383036531,1)
call SetPlayerTechResearched(Player(2),1383036772,2)
call SetPlayerTechResearched(Player(2),1383035764,2)
call SetPlayerTechResearched(Player(2),1383035760,3)
call SetPlayerTechResearched(Player(2),1383036018,1)
call SetPlayerTechResearched(Player(2),1383033958,1)
call SetPlayerTechResearched(Player(2),1383036788,2)
call SetPlayerTechResearched(Player(2),1383035490,1)
call SetPlayerTechResearched(Player(2),1383031403,1)
call SetPlayerTechResearched(Player(2),1383034989,1)
call SetPlayerTechResearched(Player(2),1383031398,1)
call SetPlayerTechResearched(Player(2),1383427429,3)
call SetPlayerTechResearched(Player(2),1383428705,3)
call SetPlayerTechResearched(Player(2),1383424370,3)
call SetPlayerTechResearched(Player(2),1383424355,1)
call SetPlayerTechResearched(Player(2),1383429986,1)
call SetPlayerTechResearched(Player(2),1383425894,1)
call SetPlayerTechResearched(Player(2),1383428966,1)
call SetPlayerTechResearched(Player(2),1383427685,2)
call SetPlayerTechResearched(Player(2),1383424609,2)
call SetPlayerTechResearched(Player(2),1383425634,1)
call SetPlayerTechResearched(Player(2),1383428972,1)
call SetPlayerTechResearched(Player(2),1383424882,3)
call SetPlayerTechResearched(Player(2),1383428195,1)
call SetPlayerTechResearched(Player(2),1383428973,1)
call SetPlayerTechResearched(Player(2),1383424629,1)
call SetPlayerTechResearched(Player(2),1383428976,1)
call SetPlayerTechResearched(Player(2),1383425400,1)
call SetPlayerTechResearched(Player(2),1383428205,1)
call SetPlayerTechResearched(Player(2),1382380397,3)
call SetPlayerTechResearched(Player(2),1382380407,3)
call SetPlayerTechResearched(Player(2),1382378849,3)
call SetPlayerTechResearched(Player(2),1382380136,3)
call SetPlayerTechResearched(Player(2),1382380918,1)
call SetPlayerTechResearched(Player(2),1382379106,1)
call SetPlayerTechResearched(Player(2),1382380387,1)
call SetPlayerTechResearched(Player(2),1382378855,1)
call SetPlayerTechResearched(Player(2),1382377826,1)
call SetPlayerTechResearched(Player(2),1382378859,1)
call SetPlayerTechResearched(Player(2),1382376564,2)
call SetPlayerTechResearched(Player(2),1382376547,2)
call SetPlayerTechResearched(Player(2),1382380393,1)
call SetPlayerTechResearched(Player(2),1382376290,1)
call SetPlayerTechResearched(Player(2),1382377588,1)
call SetPlayerTechResearched(Player(2),1382379618,1)
call SetPlayerTechResearched(Player(2),1382380147,1)
call SetPlayerTechResearched(Player(2),1382377587,1)
call SetPlayerTechResearched(Player(2),1382376802,1)
call SetPlayerTechResearched(Player(2),1382376803,1)
call SetPlayerTechResearched(Player(2),1382381427,1)
call SetPlayerTechResearched(Player(2),1382379629,1)
call SetPlayerTechResearched(Player(2),1382966638,1)
call SetPlayerTechResearched(Player(2),1382970231,2)
call SetPlayerTechResearched(Player(2),1382965620,3)
call SetPlayerTechResearched(Player(2),1382970217,1)
call SetPlayerTechResearched(Player(2),1382965613,3)
call SetPlayerTechResearched(Player(2),1382970210,1)
endfunction
function w_u takes nothing returns nothing
call SetPlayerTechResearched(Player(1),1382575461,3)
call SetPlayerTechResearched(Player(1),1382576737,3)
call SetPlayerTechResearched(Player(1),1382574178,1)
call SetPlayerTechResearched(Player(1),1382572402,3)
call SetPlayerTechResearched(Player(1),1382573922,1)
call SetPlayerTechResearched(Player(1),1382572387,3)
call SetPlayerTechResearched(Player(1),1382573157,1)
call SetPlayerTechResearched(Player(1),1382572398,1)
call SetPlayerTechResearched(Player(1),1382576244,2)
call SetPlayerTechResearched(Player(1),1382577012,2)
call SetPlayerTechResearched(Player(1),1382575201,3)
call SetPlayerTechResearched(Player(1),1382576745,1)
call SetPlayerTechResearched(Player(1),1382575208,2)
call SetPlayerTechResearched(Player(1),1382576997,1)
call SetPlayerTechResearched(Player(1),1382573676,1)
call SetPlayerTechResearched(Player(1),1382577011,1)
call SetPlayerTechResearched(Player(1),1382576756,1)
call SetPlayerTechResearched(Player(1),1382576237,1)
call SetPlayerTechResearched(Player(1),1382573667,1)
call SetPlayerTechResearched(Player(1),1382573683,1)
call SetPlayerTechResearched(Player(1),1382572900,1)
call SetPlayerTechResearched(Player(1),1383034213,3)
call SetPlayerTechResearched(Player(1),1383035489,3)
call SetPlayerTechResearched(Player(1),1383031154,3)
call SetPlayerTechResearched(Player(1),1383556205,1)
call SetPlayerTechResearched(Player(1),1383034983,1)
call SetPlayerTechResearched(Player(1),1383031411,1)
call SetPlayerTechResearched(Player(1),1383036787,1)
call SetPlayerTechResearched(Player(1),1383032174,1)
call SetPlayerTechResearched(Player(1),1383036531,1)
call SetPlayerTechResearched(Player(1),1383036772,2)
call SetPlayerTechResearched(Player(1),1383035764,2)
call SetPlayerTechResearched(Player(1),1383035760,3)
call SetPlayerTechResearched(Player(1),1383036018,1)
call SetPlayerTechResearched(Player(1),1383033958,1)
call SetPlayerTechResearched(Player(1),1383036788,2)
call SetPlayerTechResearched(Player(1),1383035490,1)
call SetPlayerTechResearched(Player(1),1383031403,1)
call SetPlayerTechResearched(Player(1),1383034989,1)
call SetPlayerTechResearched(Player(1),1383031398,1)
call SetPlayerTechResearched(Player(1),1383427429,3)
call SetPlayerTechResearched(Player(1),1383428705,3)
call SetPlayerTechResearched(Player(1),1383424370,3)
call SetPlayerTechResearched(Player(1),1383424355,1)
call SetPlayerTechResearched(Player(1),1383429986,1)
call SetPlayerTechResearched(Player(1),1383425894,1)
call SetPlayerTechResearched(Player(1),1383428966,1)
call SetPlayerTechResearched(Player(1),1383427685,2)
call SetPlayerTechResearched(Player(1),1383424609,2)
call SetPlayerTechResearched(Player(1),1383425634,1)
call SetPlayerTechResearched(Player(1),1383428972,1)
call SetPlayerTechResearched(Player(1),1383424882,3)
call SetPlayerTechResearched(Player(1),1383428195,1)
call SetPlayerTechResearched(Player(1),1383428973,1)
call SetPlayerTechResearched(Player(1),1383424629,1)
call SetPlayerTechResearched(Player(1),1383428976,1)
call SetPlayerTechResearched(Player(1),1383425400,1)
call SetPlayerTechResearched(Player(1),1383428205,1)
call SetPlayerTechResearched(Player(1),1382380397,3)
call SetPlayerTechResearched(Player(1),1382380407,3)
call SetPlayerTechResearched(Player(1),1382378849,3)
call SetPlayerTechResearched(Player(1),1382380136,3)
call SetPlayerTechResearched(Player(1),1382380918,1)
call SetPlayerTechResearched(Player(1),1382379106,1)
call SetPlayerTechResearched(Player(1),1382380387,1)
call SetPlayerTechResearched(Player(1),1382378855,1)
call SetPlayerTechResearched(Player(1),1382377826,1)
call SetPlayerTechResearched(Player(1),1382378859,1)
call SetPlayerTechResearched(Player(1),1382376564,2)
call SetPlayerTechResearched(Player(1),1382376547,2)
call SetPlayerTechResearched(Player(1),1382380393,1)
call SetPlayerTechResearched(Player(1),1382376290,1)
call SetPlayerTechResearched(Player(1),1382377588,1)
call SetPlayerTechResearched(Player(1),1382379618,1)
call SetPlayerTechResearched(Player(1),1382380147,1)
call SetPlayerTechResearched(Player(1),1382377587,1)
call SetPlayerTechResearched(Player(1),1382376802,1)
call SetPlayerTechResearched(Player(1),1382376803,1)
call SetPlayerTechResearched(Player(1),1382381427,1)
call SetPlayerTechResearched(Player(1),1382379629,1)
call SetPlayerTechResearched(Player(1),1382966638,1)
call SetPlayerTechResearched(Player(1),1382970231,2)
call SetPlayerTechResearched(Player(1),1382965620,3)
call SetPlayerTechResearched(Player(1),1382970217,1)
call SetPlayerTechResearched(Player(1),1382965613,3)
call SetPlayerTechResearched(Player(1),1382970210,1)
endfunction
function b_u takes nothing returns nothing
call M0u()
call w_u()
call u_u()
call r_u()
call s_u()
call t_u()
call i_u()
call S_u()
call c_u()
call o_u()
call O_u()
call l_u()
endfunction
function ihw takes nothing returns nothing
local trigger thw=CreateTrigger()
call rfw(thw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(thw,Filter(Kww))
call TriggerAddCondition(R,Filter(Lww))
set thw=null
endfunction
function mFw takes nothing returns nothing
local trigger vFw=CreateTrigger()
call rfw(vFw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(vFw,Filter(Oww_1334))
set vFw=null
endfunction
function phw takes nothing returns nothing
local trigger yhw=CreateTrigger()
call rfw(yhw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(yhw,Filter(Cww))
call TriggerAddCondition(R,Filter(Vww))
set PO=rRw()
set yhw=null
endfunction
function rkw takes nothing returns nothing
local trigger ukw=CreateTrigger()
call rfw(ukw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(ukw,Filter(qww_3819))
call TriggerAddCondition(R,Filter(aww_2389))
set al=rRw()
set ukw=null
endfunction
function vkw takes nothing returns nothing
local trigger xkw=CreateTrigger()
call rfw(xkw,EVENT_PLAYER_UNIT_SPELL_EFFECT)
call TriggerAddCondition(xkw,Filter(Gww_661))
set xkw=null
endfunction
function main takes nothing returns nothing
local trigger q_u
call Hdw()
call SetCameraBounds((-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_LEFT),30720.0-GetCameraMargin(CAMERA_MARGIN_TOP),30720.0-GetCameraMargin(CAMERA_MARGIN_RIGHT),(-30720.0)+GetCameraMargin(CAMERA_MARGIN_BOTTOM))
call SetDayNightModels("Environment\\DNC\\DNCAshenvale\\DNCAshenvaleTerrain\\DNCAshenvaleTerrain.mdl","Environment\\DNC\\DNCAshenvale\\DNCAshenvaleUnit\\DNCAshenvaleUnit.mdl")
call NewSoundEnvironment("Default")
call SetAmbientDaySound("AshenvaleDay")
call SetAmbientNightSound("AshenvaleNight")
call SetMapMusic("Music",true,0)
call Xgw()
call Mgw()
call b_u()
call Ngw()
call InitBlizzard()
call ExecuteFunc("a_u")
call ExecuteFunc("LGw")
call ihw()
call TriggerAddCondition(R,Filter(Xww))
call phw()
call Thw()
call Uhw()
call SFw()
call FFw()
call mFw()
call XFw()
call rkw()
call Skw()
call akw()
call vkw()
call ZKw()
call Lgw()
call B0u()
call N0u()
set q_u=CreateTrigger()
call TriggerAddCondition(q_u,Condition(Zyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Abilities.","when calling error in Abilities, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Uyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package AbilityIds.","when calling error in AbilityIds, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Iyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Real.","when calling error in Real, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Pyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Integer.","when calling error in Integer, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Ayw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Angle.","when calling error in Angle, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Dyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package AttachmentPoints.","when calling error in AttachmentPoints, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Hyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package String.","when calling error in String, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Jyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Vectors.","when calling error in Vectors, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Kyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Destructable.","when calling error in Destructable, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Lyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Maths.","when calling error in Maths, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Xyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Player.","when calling error in Player, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Cyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Printing.","when calling error in Printing, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Vyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Basics.","when calling error in Basics, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Byw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package GameTimer.","when calling error in GameTimer, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Nyw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package MagicFunctions.","when calling error in MagicFunctions, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Myw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ErrorHandling.","when calling error in ErrorHandling, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(wpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Matrices.","when calling error in Matrices, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(upw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Quaternion.","when calling error in Quaternion, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(rpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Table.","when calling error in Table, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(spw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Playercolor.","when calling error in Playercolor, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(tpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Colors.","when calling error in Colors, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(ipw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Group.","when calling error in Group, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Spw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Lightning.","when calling error in Lightning, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(cpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package WeatherEffects.","when calling error in WeatherEffects, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(opw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Framehandle.","when calling error in Framehandle, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Opw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package TypeCasting.","when calling error in TypeCasting, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(lpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ClosureForGroups.","when calling error in ClosureForGroups, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(bpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package LinkedList.","when calling error in LinkedList, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(ypw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package BitwiseInit.","when calling error in BitwiseInit, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(ppw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package StringUtils.","when calling error in StringUtils, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(epw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Execute.","when calling error in Execute, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(qpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package BigString.","when calling error in BigString, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(apw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Base64.","when calling error in Base64, line 38")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(npw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package BitSet.","when calling error in BitSet, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(dpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package HashList.","when calling error in HashList, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(fpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package TimerUtils.","when calling error in TimerUtils, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Rpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ClosureTimers.","when calling error in ClosureTimers, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Tpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package TargetsAllowed.","when calling error in TargetsAllowed, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Ypw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ObjectIds.","when calling error in ObjectIds, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Gpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package MapBounds.","when calling error in MapBounds, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(gpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package UnitIds.","when calling error in UnitIds, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(hpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Icons.","when calling error in Icons, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Fpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package DummyRecycler.","when calling error in DummyRecycler, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(kpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Preloader.","when calling error in Preloader, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(jpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ObjectIdGenerator.","when calling error in ObjectIdGenerator, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(xpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Orders.","when calling error in Orders, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(vpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Buffs.","when calling error in Buffs, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(mpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Buildings.","when calling error in Buildings, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Qpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package CancelAutomaticTargetFinding.","when calling error in CancelAutomaticTargetFinding, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Wpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ChannelAbilityPreset.","when calling error in ChannelAbilityPreset, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Epw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Cleave.","when calling error in Cleave, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Zpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package EventHelper.","when calling error in EventHelper, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Upw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package RegisterEvents.","when calling error in RegisterEvents, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Ipw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package OnUnitEnterLeave.","when calling error in OnUnitEnterLeave, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Ppw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package UnitIndexer.","when calling error in UnitIndexer, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Apw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ClosureEvents.","when calling error in ClosureEvents, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Dpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ClosureFrames.","when calling error in ClosureFrames, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Hpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package DebugFile.","when calling error in DebugFile, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Jpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Doodads.","when calling error in Doodads, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Kpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Dummy.","when calling error in Dummy, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Lpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package TableJurst.","when calling error in TableJurst, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Xpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package EmergencyEvade.","when calling error in EmergencyEvade, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Cpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package FlyHeightFixer.","when calling error in FlyHeightFixer, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Vpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package HashSet.","when calling error in HashSet, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Bpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Utility.","when calling error in Utility, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Npw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package PlayerUtil.","when calling error in PlayerUtil, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Mpw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Formations.","when calling error in Formations, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(wew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package FramehandleNames.","when calling error in FramehandleNames, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(uew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package NetworkConfig.","when calling error in NetworkConfig, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(rew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package GamecacheKeys.","when calling error in GamecacheKeys, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(sew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package IOTaskExecutor.","when calling error in IOTaskExecutor, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(tew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Metadata.","when calling error in Metadata, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(iew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Meteor.","when calling error in Meteor, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Sew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdWrapper.","when calling error in ScmdWrapper, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(cew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdPermissions.","when calling error in ScmdPermissions, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(oew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SafetyChecks_config.","when calling error in SafetyChecks_config, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Oew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SafetyChecks.","when calling error in SafetyChecks, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(lew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdDataTypes.","when calling error in ScmdDataTypes, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(bew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdSystemMessaging.","when calling error in ScmdSystemMessaging, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(yew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdParser.","when calling error in ScmdParser, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(pew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdReader.","when calling error in ScmdReader, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(eew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SyncSimple_config.","when calling error in SyncSimple_config, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(qew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SyncSimple.","when calling error in SyncSimple, line 68")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(aew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package StringBuffer.","when calling error in StringBuffer, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(dew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package OrderedStringBuffer.","when calling error in OrderedStringBuffer, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(few))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package StringEncoder.","when calling error in StringEncoder, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Rew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Network.","when calling error in Network, line 181")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Tew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package NetworkData.","when calling error in NetworkData, line 175")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Yew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Objects.","when calling error in Objects, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Gew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Obliterate.","when calling error in Obliterate, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(gew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package PacketIO_config.","when calling error in PacketIO_config, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(hew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package PacketIO.","when calling error in PacketIO, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Few))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package PreloadIO.","when calling error in PreloadIO, line 14")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(kew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Persistable.","when calling error in Persistable, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(jew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package PlayerDefinedUnitTypes.","when calling error in PlayerDefinedUnitTypes, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(xew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package RectDrawing.","when calling error in RectDrawing, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(vew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package RollTheBones.","when calling error in RollTheBones, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(mew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SLangChatSystem.","when calling error in SLangChatSystem, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Qew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotfrpGuiWrapper.","when calling error in SotfrpGuiWrapper, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Wew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Sounds.","when calling error in Sounds, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Eew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Soundsets.","when calling error in Soundsets, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Zew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Textures.","when calling error in Textures, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Uew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package UI.","when calling error in UI, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Iew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Units.","when calling error in Units, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Pew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package UpgradeObjEditing.","when calling error in UpgradeObjEditing, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Aew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotfrpGuiPresets.","when calling error in SotfrpGuiPresets, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Dew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Utf8CodeUnit.","when calling error in Utf8CodeUnit, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Hew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SaveableHandles.","when calling error in SaveableHandles, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Jew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotfrpGuiCoreUnit.","when calling error in SotfrpGuiCoreUnit, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Kew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotFRP_Locale.","when calling error in SotFRP_Locale, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Lew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SLangPlayerFunctions.","when calling error in SLangPlayerFunctions, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Xew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SLangSpecialEffectFunctions.","when calling error in SLangSpecialEffectFunctions, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Cew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SLangTriggerFunctions.","when calling error in SLangTriggerFunctions, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Vew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdCameraSetupBuiltins.","when calling error in ScmdCameraSetupBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Bew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdCoreBuiltins.","when calling error in ScmdCoreBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(New))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdFogOfWarBuiltins.","when calling error in ScmdFogOfWarBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Mew))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdItemBuiltins.","when calling error in ScmdItemBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(wqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdPlayerCameraSettingsBuiltins.","when calling error in ScmdPlayerCameraSettingsBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(uqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdPlayerStateControlBuiltins.","when calling error in ScmdPlayerStateControlBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(rqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdRectBuiltins.","when calling error in ScmdRectBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(sqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdSoundFunctions.","when calling error in ScmdSoundFunctions, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(tqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdSystemsSettingsBuiltins.","when calling error in ScmdSystemsSettingsBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(iqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdUnitBuiltins.","when calling error in ScmdUnitBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Sqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdUnitParamLinkingBuiltins.","when calling error in ScmdUnitParamLinkingBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(cqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ScmdWeatherEffectFunctions.","when calling error in ScmdWeatherEffectFunctions, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(oqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package ShieldWall.","when calling error in ShieldWall, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Oqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotFRP_AbilList.","when calling error in SotFRP_AbilList, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(lqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package TouchOfKarma.","when calling error in TouchOfKarma, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(bqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package StickyGrenade.","when calling error in StickyGrenade, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(yqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotFRP_HeroAbilList.","when calling error in SotFRP_HeroAbilList, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(pqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotFRP_AbilitySystem.","when calling error in SotFRP_AbilitySystem, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(eqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotFRP_Init.","when calling error in SotFRP_Init, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(qqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotfrpGuiRegions.","when calling error in SotfrpGuiRegions, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(aqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotFRP_LegacyLoad.","when calling error in SotFRP_LegacyLoad, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(nqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotFRP_SaveLoad.","when calling error in SotFRP_SaveLoad, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(dqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotfrpGuiDestructables.","when calling error in SotfrpGuiDestructables, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(fqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package SotfrpGuiLocust.","when calling error in SotfrpGuiLocust, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Rqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Stack.","when calling error in Stack, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Tqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package TypeCastingJurst.","when calling error in TypeCastingJurst, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Yqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package UniqueIdValidator.","when calling error in UniqueIdValidator, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Gqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package UnitEditor.","when calling error in UnitEditor, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(gqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package UnitShops.","when calling error in UnitShops, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(hqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package UnitShopsBuiltins.","when calling error in UnitShopsBuiltins, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(Fqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Utf8StringSplitter.","when calling error in Utf8StringSplitter, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(kqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package Vector.","when calling error in Vector, line 1")
endif
call TriggerClearConditions(q_u)
call TriggerAddCondition(q_u,Condition(jqw))
if not TriggerEvaluate(q_u)then
call Mau("Could not initialize package upperButtonBar.","when calling error in upperButtonBar, line 1")
endif
call TriggerClearConditions(q_u)
call DestroyTrigger(q_u)
set q_u=null
endfunction
function e_u takes nothing returns nothing
call SetStartLocPrioCount(0,23)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,23)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,23)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,23)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,23)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,23)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,23)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,23)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,23)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,23)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,23)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(11,23)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,23)
call SetStartLocPrio(12,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,23)
call SetStartLocPrio(13,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,23)
call SetStartLocPrio(14,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,23)
call SetStartLocPrio(15,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,23)
call SetStartLocPrio(16,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,23)
call SetStartLocPrio(17,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,23)
call SetStartLocPrio(18,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,23)
call SetStartLocPrio(19,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(20,23)
call SetStartLocPrio(20,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,19,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(21,23)
call SetStartLocPrio(21,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,19,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,20,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(22,23)
call SetStartLocPrio(22,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,19,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,20,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,21,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(23,23)
call SetStartLocPrio(23,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,19,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,20,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,21,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,22,22,MAP_LOC_PRIO_HIGH)
endfunction
function p_u takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),1)
call SetPlayerTeam(Player(2),1)
call SetPlayerTeam(Player(3),1)
call SetPlayerTeam(Player(4),1)
call SetPlayerTeam(Player(5),1)
call SetPlayerTeam(Player(6),1)
call SetPlayerTeam(Player(7),1)
call SetPlayerTeam(Player(8),1)
call SetPlayerTeam(Player(9),1)
call SetPlayerTeam(Player(10),1)
call SetPlayerTeam(Player(11),1)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
call SetPlayerTeam(Player(20),1)
call SetPlayerTeam(Player(21),1)
call SetPlayerTeam(Player(22),1)
call SetPlayerTeam(Player(23),1)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(22),true)
endfunction
function y_u takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call ForcePlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(0),true)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call ForcePlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(1),true)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call ForcePlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(2),true)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call ForcePlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(3),true)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call ForcePlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(4),true)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call ForcePlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(5),true)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call ForcePlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(6),true)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call ForcePlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(7),true)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call ForcePlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(8),true)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call ForcePlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(9),true)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call ForcePlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(10),true)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call ForcePlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(11),true)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call ForcePlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(12),true)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call ForcePlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(13),true)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call ForcePlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(14),true)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call ForcePlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(15),true)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call ForcePlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(16),true)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call ForcePlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(17),true)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call ForcePlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(18),true)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call ForcePlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(19),true)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(20),20)
call ForcePlayerStartLocation(Player(20),20)
call SetPlayerColor(Player(20),ConvertPlayerColor(20))
call SetPlayerRacePreference(Player(20),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(20),true)
call SetPlayerController(Player(20),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(21),21)
call ForcePlayerStartLocation(Player(21),21)
call SetPlayerColor(Player(21),ConvertPlayerColor(21))
call SetPlayerRacePreference(Player(21),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(21),true)
call SetPlayerController(Player(21),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(22),22)
call ForcePlayerStartLocation(Player(22),22)
call SetPlayerColor(Player(22),ConvertPlayerColor(22))
call SetPlayerRacePreference(Player(22),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(22),true)
call SetPlayerController(Player(22),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(23),23)
call ForcePlayerStartLocation(Player(23),23)
call SetPlayerColor(Player(23),ConvertPlayerColor(23))
call SetPlayerRacePreference(Player(23),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(23),true)
call SetPlayerController(Player(23),MAP_CONTROL_USER)
endfunction
function InitCustomPlayerSlots takes nothing returns nothing
call SetPlayerStartLocation(Player(0),0)
call SetPlayerColor(Player(0),ConvertPlayerColor(0))
call SetPlayerRacePreference(Player(0),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(0),true)
call SetPlayerController(Player(0),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(1),1)
call SetPlayerColor(Player(1),ConvertPlayerColor(1))
call SetPlayerRacePreference(Player(1),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(1),true)
call SetPlayerController(Player(1),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(2),2)
call SetPlayerColor(Player(2),ConvertPlayerColor(2))
call SetPlayerRacePreference(Player(2),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(2),true)
call SetPlayerController(Player(2),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(3),3)
call SetPlayerColor(Player(3),ConvertPlayerColor(3))
call SetPlayerRacePreference(Player(3),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(3),true)
call SetPlayerController(Player(3),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(4),4)
call SetPlayerColor(Player(4),ConvertPlayerColor(4))
call SetPlayerRacePreference(Player(4),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(4),true)
call SetPlayerController(Player(4),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(5),5)
call SetPlayerColor(Player(5),ConvertPlayerColor(5))
call SetPlayerRacePreference(Player(5),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(5),true)
call SetPlayerController(Player(5),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(6),6)
call SetPlayerColor(Player(6),ConvertPlayerColor(6))
call SetPlayerRacePreference(Player(6),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(6),true)
call SetPlayerController(Player(6),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(7),7)
call SetPlayerColor(Player(7),ConvertPlayerColor(7))
call SetPlayerRacePreference(Player(7),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(7),true)
call SetPlayerController(Player(7),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(8),8)
call SetPlayerColor(Player(8),ConvertPlayerColor(8))
call SetPlayerRacePreference(Player(8),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(8),true)
call SetPlayerController(Player(8),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(9),9)
call SetPlayerColor(Player(9),ConvertPlayerColor(9))
call SetPlayerRacePreference(Player(9),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(9),true)
call SetPlayerController(Player(9),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(10),10)
call SetPlayerColor(Player(10),ConvertPlayerColor(10))
call SetPlayerRacePreference(Player(10),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(10),true)
call SetPlayerController(Player(10),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(11),11)
call SetPlayerColor(Player(11),ConvertPlayerColor(11))
call SetPlayerRacePreference(Player(11),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(11),true)
call SetPlayerController(Player(11),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(12),12)
call SetPlayerColor(Player(12),ConvertPlayerColor(12))
call SetPlayerRacePreference(Player(12),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(12),true)
call SetPlayerController(Player(12),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(13),13)
call SetPlayerColor(Player(13),ConvertPlayerColor(13))
call SetPlayerRacePreference(Player(13),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(13),true)
call SetPlayerController(Player(13),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(14),14)
call SetPlayerColor(Player(14),ConvertPlayerColor(14))
call SetPlayerRacePreference(Player(14),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(14),true)
call SetPlayerController(Player(14),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(15),15)
call SetPlayerColor(Player(15),ConvertPlayerColor(15))
call SetPlayerRacePreference(Player(15),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(15),true)
call SetPlayerController(Player(15),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(16),16)
call SetPlayerColor(Player(16),ConvertPlayerColor(16))
call SetPlayerRacePreference(Player(16),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(16),true)
call SetPlayerController(Player(16),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(17),17)
call SetPlayerColor(Player(17),ConvertPlayerColor(17))
call SetPlayerRacePreference(Player(17),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(17),true)
call SetPlayerController(Player(17),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(18),18)
call SetPlayerColor(Player(18),ConvertPlayerColor(18))
call SetPlayerRacePreference(Player(18),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(18),true)
call SetPlayerController(Player(18),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(19),19)
call SetPlayerColor(Player(19),ConvertPlayerColor(19))
call SetPlayerRacePreference(Player(19),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(19),true)
call SetPlayerController(Player(19),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(20),20)
call SetPlayerColor(Player(20),ConvertPlayerColor(20))
call SetPlayerRacePreference(Player(20),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(20),true)
call SetPlayerController(Player(20),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(21),21)
call SetPlayerColor(Player(21),ConvertPlayerColor(21))
call SetPlayerRacePreference(Player(21),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(21),true)
call SetPlayerController(Player(21),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(22),22)
call SetPlayerColor(Player(22),ConvertPlayerColor(22))
call SetPlayerRacePreference(Player(22),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(22),true)
call SetPlayerController(Player(22),MAP_CONTROL_USER)
call SetPlayerStartLocation(Player(23),23)
call SetPlayerColor(Player(23),ConvertPlayerColor(23))
call SetPlayerRacePreference(Player(23),RACE_PREF_RANDOM)
call SetPlayerRaceSelectable(Player(23),true)
call SetPlayerController(Player(23),MAP_CONTROL_USER)
endfunction
function InitCustomTeams takes nothing returns nothing
call SetPlayerTeam(Player(0),0)
call SetPlayerTeam(Player(1),1)
call SetPlayerTeam(Player(2),1)
call SetPlayerTeam(Player(3),1)
call SetPlayerTeam(Player(4),1)
call SetPlayerTeam(Player(5),1)
call SetPlayerTeam(Player(6),1)
call SetPlayerTeam(Player(7),1)
call SetPlayerTeam(Player(8),1)
call SetPlayerTeam(Player(9),1)
call SetPlayerTeam(Player(10),1)
call SetPlayerTeam(Player(11),1)
call SetPlayerTeam(Player(12),1)
call SetPlayerTeam(Player(13),1)
call SetPlayerTeam(Player(14),1)
call SetPlayerTeam(Player(15),1)
call SetPlayerTeam(Player(16),1)
call SetPlayerTeam(Player(17),1)
call SetPlayerTeam(Player(18),1)
call SetPlayerTeam(Player(19),1)
call SetPlayerTeam(Player(20),1)
call SetPlayerTeam(Player(21),1)
call SetPlayerTeam(Player(22),1)
call SetPlayerTeam(Player(23),1)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(1),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(2),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(3),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(4),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(5),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(6),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(7),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(8),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(9),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(10),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(11),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(12),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(13),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(14),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(15),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(16),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(17),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(18),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(19),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(20),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(22),true)
call SetPlayerAllianceStateAllyBJ(Player(21),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(22),Player(23),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(1),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(2),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(3),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(4),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(5),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(6),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(7),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(8),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(9),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(10),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(11),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(12),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(13),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(14),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(15),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(16),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(17),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(18),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(19),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(20),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(21),true)
call SetPlayerAllianceStateAllyBJ(Player(23),Player(22),true)
endfunction
function InitAllyPriorities takes nothing returns nothing
call SetStartLocPrioCount(0,23)
call SetStartLocPrio(0,0,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(0,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(1,23)
call SetStartLocPrio(1,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,1,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(1,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(2,23)
call SetStartLocPrio(2,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,2,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(2,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(3,23)
call SetStartLocPrio(3,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,3,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(3,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(4,23)
call SetStartLocPrio(4,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,4,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(4,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(5,23)
call SetStartLocPrio(5,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,5,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(5,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(6,23)
call SetStartLocPrio(6,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,6,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(6,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(7,23)
call SetStartLocPrio(7,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,7,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(7,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(8,23)
call SetStartLocPrio(8,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,8,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(8,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(9,23)
call SetStartLocPrio(9,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,9,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(9,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(10,23)
call SetStartLocPrio(10,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,10,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(10,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(11,23)
call SetStartLocPrio(11,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,11,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(11,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(12,23)
call SetStartLocPrio(12,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,12,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(12,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(13,23)
call SetStartLocPrio(13,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,13,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(13,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(14,23)
call SetStartLocPrio(14,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,14,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(14,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(15,23)
call SetStartLocPrio(15,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,15,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(15,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(16,23)
call SetStartLocPrio(16,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,16,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(16,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(17,23)
call SetStartLocPrio(17,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,17,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(17,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(18,23)
call SetStartLocPrio(18,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,18,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(18,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(19,23)
call SetStartLocPrio(19,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,19,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(19,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(20,23)
call SetStartLocPrio(20,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,19,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,20,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(20,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(21,23)
call SetStartLocPrio(21,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,19,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,20,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,21,22,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(21,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(22,23)
call SetStartLocPrio(22,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,19,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,20,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,21,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(22,22,23,MAP_LOC_PRIO_HIGH)
call SetStartLocPrioCount(23,23)
call SetStartLocPrio(23,0,0,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,1,1,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,2,2,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,3,3,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,4,4,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,5,5,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,6,6,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,7,7,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,8,8,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,9,9,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,10,10,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,11,11,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,12,12,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,13,13,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,14,14,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,15,15,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,16,16,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,17,17,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,18,18,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,19,19,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,20,20,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,21,21,MAP_LOC_PRIO_HIGH)
call SetStartLocPrio(23,22,22,MAP_LOC_PRIO_HIGH)
endfunction
function config takes nothing returns nothing
call SetMapName("SotFRP PR - Requiem")
call SetMapDescription("TRIGSTR_003")
call SetPlayers(24)
call SetTeams(2)
call SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)
call DefineStartLocation(0,-26688.0,28864.0)
call DefineStartLocation(1,-26560.0,28864.0)
call DefineStartLocation(2,-26432.0,28864.0)
call DefineStartLocation(3,-26304.0,28864.0)
call DefineStartLocation(4,-26176.0,28864.0)
call DefineStartLocation(5,-26048.0,28864.0)
call DefineStartLocation(6,-26688.0,28736.0)
call DefineStartLocation(7,-26560.0,28736.0)
call DefineStartLocation(8,-26432.0,28736.0)
call DefineStartLocation(9,-26304.0,28736.0)
call DefineStartLocation(10,-26176.0,28736.0)
call DefineStartLocation(11,-26048.0,28736.0)
call DefineStartLocation(12,-26688.0,28608.0)
call DefineStartLocation(13,-26560.0,28608.0)
call DefineStartLocation(14,-26432.0,28608.0)
call DefineStartLocation(15,-26304.0,28608.0)
call DefineStartLocation(16,-26176.0,28608.0)
call DefineStartLocation(17,-26048.0,28608.0)
call DefineStartLocation(18,-26688.0,28480.0)
call DefineStartLocation(19,-26560.0,28480.0)
call DefineStartLocation(20,-26432.0,28480.0)
call DefineStartLocation(21,-26304.0,28480.0)
call DefineStartLocation(22,-26176.0,28480.0)
call DefineStartLocation(23,-26048.0,28480.0)
call InitCustomPlayerSlots()
call InitCustomTeams()
call InitAllyPriorities()
endfunction
